{"version":3,"file":"static/js/main.199e0640.js","mappings":"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","sources":["assets/chat_step|sync|/^/chat_step_.*_off/.png$","assets/chat_step|sync|/^/chat_step_.*_on/.png$","components/LoginPage.js","components/DevAdminComponents/Lazy Screen/LazyScreen.js","components/DevAdmin.js","components/Admin.js","components/Checkpoint.js","components/ResetPassword.js","components/ResetPasswordSuccess.js","App.js","components/DevAdminComponents/AccountList.js","components/DevAdminComponents/AddAccount.js","components/DevAdminComponents/AddVehicle.js","components/DevAdminComponents/ChatMessages.js","components/DevAdminComponents/Freight.js","components/DevAdminComponents/Header/StickyHeader.js","components/DevAdminComponents/Logs.js","components/DevAdminComponents/SideDrawer/MobileViewDrawer.js","components/DevAdminComponents/SideDrawer/SideDrawer.js","components/DevAdminComponents/VehicleList.js","components/DevAdminComponents/VehicleListComponent/UsePagination.js","components/DevAdminComponents/redux/store.js","crossFirebase.js","firebasecontrol.js","firebasecontrolCreateUser.js","webpack://web/./components/style.css?30b9","node_modules/moment/locale|sync|/^/.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/ensure chunk","webpack/runtime/get javascript chunk filename","webpack/runtime/get mini-css chunk filename","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/load script","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["var map = {\n\t\"./chat_step_1_off.png\": 29413,\n\t\"./chat_step_2_off.png\": 35290,\n\t\"./chat_step_3_off.png\": 38715,\n\t\"./chat_step_4_off.png\": 65256,\n\t\"./chat_step_5_off.png\": 58038,\n\t\"./chat_step_6_off.png\": 49232,\n\t\"./chat_step_7_off.png\": 88618\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 66516;","var map = {\n\t\"./chat_step_1_on.png\": 40027,\n\t\"./chat_step_2_on.png\": 22558,\n\t\"./chat_step_3_on.png\": 80851,\n\t\"./chat_step_4_on.png\": 14740,\n\t\"./chat_step_5_on.png\": 80904,\n\t\"./chat_step_6_on.png\": 81151,\n\t\"./chat_step_7_on.png\": 30443\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 82049;","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition,\r\n  Item,\r\n  Label\r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth, updateDoc } from '../firebasecontrol';\r\nimport { signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  // const navigation = useNavigation();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        // navigation.replace(\"Checkpoint\")\r\n        navigate('/Checkpoint');\r\n\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n      <PresenceTransition visible={errorShow} initial={{\r\n        opacity: 0,\r\n        scale: 0,\r\n      }} animate={{\r\n        opacity: 1,\r\n        scale: 1,\r\n        transition: {\r\n          duration: 200\r\n        }\r\n      }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n        <Alert maxW=\"400\" status=\"error\">\r\n          <VStack space={1} flexShrink={1} w=\"100%\">\r\n            <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                <Alert.Icon />\r\n                <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                  {errorTitle}\r\n                </Text>\r\n              </HStack>\r\n            </HStack>\r\n            <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n              {errorMessage}\r\n            </Box>\r\n          </VStack>\r\n        </Alert>\r\n        {/* </Collapse> */}\r\n      </PresenceTransition>\r\n\r\n    </Box>;\r\n\r\n  };\r\n\r\n  const updateFieldData = async (documentId, fieldName, newValue) => {\r\n    const userRef = doc(db, 'accounts', documentId);\r\n\r\n    try {\r\n      await updateDoc(userRef, {\r\n        [fieldName]: newValue\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating field data:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleSignIn = () => {\r\n    setIsLoading(true);\r\n    setIsDisabled(true);\r\n    setTimeout(() => {\r\n      // Reset loading and disabled state\r\n      setIsLoading(false);\r\n      setIsDisabled(false);\r\n    }, 2000); // Replace with your actual async operation\r\n    setErrorShow(false);\r\n    signInWithEmailAndPassword(auth, email.trim(), password)\r\n      .then((re) => {\r\n        const documentId = email;\r\n        const fieldName = 'pass';\r\n        const newValue = password;\r\n\r\n        updateFieldData(documentId, fieldName, newValue);\r\n        // navigation.navigate('Checkpoint');\r\n        navigate('/Checkpoint');\r\n\r\n\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log(errorCode, errorMessage);\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n        setErrorShow(true);\r\n        if (errorCode === 'auth/user-not-found') {\r\n          console.log('Please use a valid email or check for misspellings.☹️');\r\n          setErrorTitle('Email do not exist!');\r\n          setErrorMessage('Please use an existing email or check for misspellings.☹️');\r\n          <ErrorLoginShow />\r\n        } else if (errorCode === 'auth/wrong-password') {\r\n          console.log('Password is incorrect, please try again. ☹️');\r\n          setErrorTitle('Incorrect password');\r\n          setErrorMessage('Password is incorrect, please try again. ☹️');\r\n          <ErrorLoginShow />\r\n        } else if (errorCode === 'auth/missing-password') {\r\n          console.log('Please enter a password. ☹️');\r\n          setErrorTitle('Password is empty!');\r\n          setErrorMessage('Please enter a password. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n        else if (errorCode === 'auth/invalid-email') {\r\n          console.log('Email is invalid. ☹️');\r\n          setErrorTitle('Invalid email!');\r\n          setErrorMessage('Please enter a valid email. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n        else if (errorCode === 'auth/user-disabled') {\r\n          console.log('User is disabled. ☹️');\r\n          setErrorTitle('Account is disabled!');\r\n          setErrorMessage('Please contact the administrator. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n      })\r\n  };\r\n\r\n  const handleChange = text => setEmail(text);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (email.length > 1) {\r\n      setErrorShow(false)\r\n    }\r\n  }, [email])\r\n\r\n  const handleEmailOnChangeText = (text) => {\r\n    setEmail(text)\r\n    setErrorShow(false)\r\n  };\r\n\r\n  const handlePasswordOnChangeText = text => setPassword(text);\r\n\r\n  useEffect(() => {\r\n    if (password.length > 1) {\r\n      setErrorShow(false)\r\n    }\r\n  }, [password])\r\n\r\n\r\n  // const handleReset = () => {\r\n  //   navigation.navigate('ResetPassword');\r\n  // };\r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n        <ErrorLoginShow />\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n              <Input w={{\r\n                base: \"90%\",\r\n                md: \"90%\",\r\n                sm: \"90%\",\r\n              }} value={email} onSubmitEditing={handleSignIn} onChangeText={handleChange} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\r\n              <Input w={{\r\n                base: \"90%\",\r\n                md: \"90%\",\r\n                sm: \"90%\",\r\n              }} value={password} onSubmitEditing={handleSignIn} onChangeText={handlePasswordOnChangeText} fontSize='16' type={show ? \"text\" : \"password\"} InputRightElement={<Pressable onPress={() => setShow(!show)}>\r\n                <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n              </Pressable>} placeholder=\"Password\" placeholderTextColor='white' color='white' />\r\n              <HStack space={1} justifyContent=\"center\">\r\n                {/* <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                  base: 130,\r\n                  md: 130,\r\n                  sm: 130,\r\n                }} onPress={handleReset}><Text style={{ color: 'white', }}>Reset Password</Text></Button> */}\r\n                <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                  base: 130,\r\n                  md: 130,\r\n                  sm: 130,\r\n                }} onPress={handleSignIn} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Login</Text>}</Button>\r\n\r\n              </HStack>\r\n\r\n            </Stack>\r\n\r\n          </Center>\r\n\r\n\r\n        </Center>\r\n\r\n\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { lazy, Suspense } from 'react';\r\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\r\nimport { Box, Center, Stack, HStack, Spinner, Image } from 'native-base';\r\nconst logo = require('../../../assets/RMJ C-Hub 制御ハブ.png');\r\n// Create a loading component to display while the screen is loading\r\nconst Loading = () => (\r\n\r\n\r\n  <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n\r\n    <Center flex={1}>\r\n      <Center px=\"3\">\r\n        <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n          <Image source={{\r\n            uri: logo\r\n          }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n        </Box>\r\n        {/* <LoginForm /> */}\r\n\r\n        <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n          <HStack space={1} justifyContent=\"center\">\r\n            <Spinner color='white' size='lg' />\r\n          </HStack>\r\n        </Stack>\r\n\r\n      </Center>\r\n\r\n\r\n    </Center>\r\n\r\n\r\n  </Box>\r\n);\r\n\r\nconst LazyScreen = (props) => {\r\n  // Dynamically import the component using React.lazy\r\n  const LazyComponent = lazy(props.importFunc);\r\n\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <LazyComponent {...props} />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default LazyScreen;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  PresenceTransition,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Title,\r\n  Content,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  VStack,\r\n  ScrollView,\r\n  SectionList,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Modal,\r\n  Divider\r\n} from \"native-base\";\r\nimport {\r\n  FontAwesome,\r\n  Entypo,\r\n  MaterialIcons,\r\n  Ionicons,\r\n  Fontisto,\r\n  EvilIcons,\r\n  AntDesign,\r\n  MaterialCommunityIcons,\r\n  Feather,\r\n  FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './style.css';\r\nimport { debounce } from 'lodash';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\n\r\nimport LazyScreen from './DevAdminComponents/Lazy Screen/LazyScreen';\r\n\r\nimport { HashRouter as Router, Route, Routes, useNavigate, Navigate } from 'react-router-dom';\r\n\r\nimport AddAccount from './DevAdminComponents/AddAccount';\r\nimport Logs from './DevAdminComponents/Logs';\r\nimport AccountList from './DevAdminComponents/AccountList';\r\nimport AddVehicle from './DevAdminComponents/AddVehicle';\r\nimport VehicleList from './DevAdminComponents/VehicleList';\r\nimport Freight from './DevAdminComponents/Freight';\r\nimport ChatMessages from './DevAdminComponents/ChatMessages';\r\n\r\nconst StackNavigator = createNativeStackNavigator();\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nexport default function DevAdmin({ navigation }) {\r\n  const [drawerVisible, setDrawerVisible] = useState(false);\r\n\r\n  const Drawer = createDrawerNavigator();\r\n\r\n  const ChatMessagesComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\r\n  );\r\n\r\n  const LogsComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\r\n  );\r\n\r\n  const FreightComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\r\n  );\r\n\r\n  const VehicleListComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\r\n  );\r\n\r\n  const AccountListComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\r\n  );\r\n\r\n  const AddVehicleComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\r\n  );\r\n\r\n  const AddAccountComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = navigation.addListener('state', () => {\r\n  //     // Close the drawer on navigation change\r\n  //     setDrawerVisible(false);\r\n  //   });\r\n\r\n  //   return unsubscribe;\r\n  // }, [navigation]);\r\n\r\n  useEffect(() => {\r\n    // Initially hide the drawer\r\n    setDrawerVisible(false);\r\n  }, []);\r\n\r\n  return (\r\n\r\n\r\n    // <Drawer.Navigator\r\n    //   // useLegacyImplementation\r\n    //   screenOptions={{\r\n    //     headerShown: false,\r\n    //     drawerStyle: { backgroundColor: '#7B9CFF' },\r\n    //     drawerContentOptions: {\r\n    //       activeTintColor: '#7B9CFF',\r\n    //       inactiveTintColor: '#7B9CFF',\r\n    //       activeLabelStyle: { color: '#7B9CFF' },\r\n    //       inactiveLabelStyle: { color: '#7B9CFF' },\r\n    //     },\r\n    //   }}\r\n    // >\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"CHAT MESSAGES\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"LOGS\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"FREIGHT\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"VEHICLE LIST\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"ACCOUNT LIST\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"ADD NEW VEHICLE\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"ADD C-HUB ACCOUNT\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    // </Drawer.Navigator>\r\n\r\n    // <StackNavigator.Navigator screenOptions={{ headerShown: false }}>\r\n\r\n    //   <StackNavigator.Screen name=\"CHAT MESSAGES\" component={ChatMessagesComponent} />\r\n    //   <StackNavigator.Screen name=\"FREIGHT\" component={FreightComponent} />\r\n    //   <StackNavigator.Screen name=\"ADD NEW VEHICLE\" component={AddVehicleComponent} />\r\n    //   <StackNavigator.Screen name=\"LOGS\" component={LogsComponent} />\r\n    //   <StackNavigator.Screen name=\"VEHICLE LIST\" component={VehicleListComponent} />\r\n    //   <StackNavigator.Screen name=\"ACCOUNT LIST\" component={AccountListComponent} />\r\n    //   <StackNavigator.Screen name=\"ADD C-HUB ACCOUNT\" component={AddAccountComponent} />\r\n\r\n    // </StackNavigator.Navigator>\r\n\r\n    <Routes>\r\n      <Route path=\"*\" element={<Navigate to=\"chat-messages\" replace />} />\r\n      <Route path=\"chat-messages\" element={<ChatMessages />} />\r\n      <Route path=\"chat-messages/:chatId\" element={<ChatMessages />} /> {/* Add this line */}\r\n      <Route path=\"freight\" element={<Freight />} />\r\n      <Route path=\"add-new-vehicle\" element={<AddVehicle />} />\r\n      <Route path=\"logs\" element={<Logs />} />\r\n      <Route path=\"vehicle-list\" element={<VehicleList />} />\r\n      <Route path=\"account-list\" element={<AccountList />} />\r\n      <Route path=\"add-c-hub-account\" element={<AddAccount />} />\r\n      {/* Add additional nested routes as needed */}\r\n    </Routes>\r\n\r\n    // <Drawer.Navigator useLegacyImplementation screenOptions={{\r\n    //   headerShown: false,\r\n    //   drawerStyle: { backgroundColor: '#D0DCFF' },\r\n    //   drawerContentOptions: {\r\n    //     activeTintColor: 'white',\r\n    //     inactiveTintColor: 'white',\r\n    //     activeLabelStyle: { color: 'white' },\r\n    //     inactiveLabelStyle: { color: 'white' }\r\n    //   }\r\n    // }} >  \r\n    //        <Drawer.Screen name=\"ADD NEW VEHICLE\" component={AddVehicle} />\r\n    //   <Drawer.Screen name=\"VEHICLE LIST\" component={VehicleList} />\r\n\r\n    //   <Drawer.Screen name=\"ACCOUNT LIST\" component={AccountList} />\r\n    //   <Drawer.Screen name=\"LOGS\" component={Logs} />\r\n    //   <Drawer.Screen name=\"ADD C-HUB ACCOUNT\" component={AddAccount} />\r\n\r\n\r\n    // </Drawer.Navigator>\r\n\r\n\r\n    //  <NativeBaseProvider>\r\n    //       <StackNavigator.Navigator options={{ headerShown: false }}>\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AccountList\" component={AccountList} />\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"Logs\" component={Logs} />\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AddAccount\" component={AddAccount} />\r\n\r\n    //       </StackNavigator.Navigator>\r\n\r\n    //     </NativeBaseProvider>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { Input, Icon, Stack, Pressable, Center, NativeBaseProvider, Button, Box, HStack, Image } from \"native-base\";\r\nimport { signOut  } from 'firebase/auth';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getDoc, auth } from '../firebasecontrol'\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useNavigation } from '@react-navigation/core'\r\n\r\n\r\n\r\nexport default function SuperAdmin() {\r\n\r\n  const [show, setShow] = React.useState(false);\r\n  const navigation = useNavigation()\r\n  \r\n  // const logo = require('./assets/RMJ C-Hub 制御ハブ.png');\r\n  const handleSignOut = () => {\r\n    signOut(auth).then(() => {\r\n        navigation.navigate('Login');\r\n    }).catch((error) => {\r\n      // An error happened.\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n        <Center flex={1}>\r\n\r\n          <Center px=\"3\"  >\r\n\r\n\r\n            <Button onPress={handleSignOut}>Signout</Button>\r\n\r\n            {/* <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1,}} />\r\n            </Box> */}\r\n            \r\n\r\n          </Center>\r\n\r\n        </Center>\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition\r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot } from '../firebasecontrol'\r\nimport { signOut, onAuthStateChanged, reload, getAuth } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  // setModelData,\r\n  setLoginEmail,\r\n  setLoginName\r\n} from './DevAdminComponents/redux/store'\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Checkpoint() {\r\n  const dispatch = useDispatch();\r\n  const loginEmail = useSelector((state) => state.loginEmail);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [emailCredential, setEmailCredential] = React.useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n\r\n  // const navigation = useNavigation()\r\n  const navigate = useNavigate();\r\n\r\n\r\n  // const handleDocumentChange = (snapshot) => {\r\n  //   if (!snapshot.exists()) {\r\n  //     signOut(auth)\r\n  //       .then(() => {\r\n  //         navigation.navigate('Login');\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.error('Error signing out:', error);\r\n  //       });\r\n  //   }\r\n  // };\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate('/Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate('/Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const getRandomDelay = () => {\r\n    const minDelay = 100; // Minimum delay in milliseconds\r\n    const maxDelay = 200; // Maximum delay in milliseconds\r\n    return Math.floor(Math.random() * (maxDelay - minDelay + 1) + minDelay);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n\r\n      onSnapshot(accountDocRef, (docSnapshot) => {\r\n        if (docSnapshot.exists()) {\r\n          const data = docSnapshot.data();\r\n          const fieldType = data.type;\r\n          const fieldName = data.name;\r\n\r\n          if (data.active === true) {\r\n            setType(fieldType);\r\n            dispatch(setLoginName(fieldName));\r\n            const delay = getRandomDelay();\r\n            // setTimeout(() => {\r\n            // navigation.replace(fieldType);\r\n            navigate(`/${fieldType}`)\r\n            // }, delay);\r\n          }\r\n          else {\r\n            signOut(auth)\r\n              .then(() => {\r\n                // navigation.navigate('Login');\r\n                navigate('/Login');\r\n              })\r\n              .catch((error) => {\r\n                console.error('Error signing out:', error);\r\n              });\r\n          }\r\n        } else {\r\n          // Handle the case where the document does not exist\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n\r\n  };\r\n\r\n  // const getFieldValueByEmail = (email, navigation) => {\r\n\r\n\r\n  //   try {\r\n  //     const accountDocRef = doc(firestore, 'accounts', email);\r\n  //     const unsubscribe = onSnapshot(accountDocRef, (accountDocSnapshot) => {\r\n  //       if (accountDocSnapshot.exists()) {\r\n  //         const data = accountDocSnapshot.data();\r\n  //         const fieldType = data.type;\r\n  //         const fieldName = data.name;\r\n\r\n  //         if (data.active === true) {\r\n  //           dispatch(setLoginName(fieldName));\r\n  //           const delay = getRandomDelay();\r\n  //           setTimeout(() => {\r\n  //             navigation.replace(fieldType);\r\n  //           }, delay);\r\n  //         } else {\r\n  //           signOut(auth)\r\n  //             .then(() => {\r\n  //               navigation.navigate('Login');\r\n  //             })\r\n  //             .catch((error) => {\r\n  //               console.error('Error signing out:', error);\r\n  //             });\r\n  //         }\r\n  //       } else {\r\n  //         console.log('Document does not exist');\r\n  //       }\r\n  //     });\r\n\r\n  //     // Return the unsubscribe function to stop listening when necessary\r\n  //     return unsubscribe;\r\n  //   } catch (error) {\r\n  //     console.error('Error fetching field value:', error);\r\n  //   }\r\n  // };\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n              <HStack space={1} justifyContent=\"center\">\r\n                <Spinner color='white' size='lg' />\r\n              </HStack>\r\n            </Stack>\r\n\r\n          </Center>\r\n\r\n\r\n        </Center>\r\n\r\n\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { \r\n  Input,\r\n  Icon, \r\n  Stack, \r\n  Pressable, \r\n  Center, \r\n  NativeBaseProvider, \r\n  Button, \r\n  Box, \r\n  HStack, \r\n  Image, \r\n  VStack, \r\n  Alert, \r\n  IconButton, \r\n  CloseIcon, \r\n  Spinner, \r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition \r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\r\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail, confirmPasswordReset  } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ResetPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n      \r\n    })\r\n\r\n    return unsubscribe\r\n  }, []) \r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n            <PresenceTransition visible={errorShow} initial={{\r\n            opacity: 0,\r\n            scale: 0,\r\n          }} animate={{\r\n            opacity: 1,\r\n            scale: 1,\r\n            transition: {\r\n              duration: 200\r\n            }\r\n          }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n          <Alert maxW=\"400\" status=\"error\">\r\n            <VStack space={1} flexShrink={1} w=\"100%\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                  <Alert.Icon />\r\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                    {errorTitle}\r\n                  </Text>\r\n                </HStack>\r\n              </HStack>\r\n              <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n                {errorMessage}\r\n              </Box>\r\n            </VStack>\r\n          </Alert>\r\n        {/* </Collapse> */}\r\n        </PresenceTransition>\r\n \r\n      </Box>;\r\n  \r\n};\r\n\r\n\r\n\r\n  const handleReturnLogin = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n   const handleEmailOnChangeText = (text) => {\r\n    setEmail(text) \r\n    setErrorShow(false)\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setIsLoading(true);\r\n    setIsDisabled(true);\r\n    setErrorShow(false);\r\n    sendPasswordResetEmail(auth, email)\r\n    .then((re)=> {\r\n      console.log(re);\r\n      navigation.navigate('ResetPasswordSuccess');\r\n    \r\n    })\r\n    .catch((error) =>{\r\n      setIsLoading(false);\r\n      setIsDisabled(false);\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log(error);\r\n      setErrorShow(true);\r\n      if (errorCode === 'auth/missing-email') {\r\n        console.log('Please enter an email.☹️');\r\n        setErrorTitle('Email is empty!');\r\n        setErrorMessage('Please enter an email.☹️');\r\n        <ErrorLoginShow/>\r\n      }\r\n      else if (errorCode === 'auth/invalid-email') {\r\n        console.log('Email is invalid. ☹️');\r\n        setErrorTitle('Invalid email!');\r\n        setErrorMessage('Please enter a valid email. ☹️');\r\n         <ErrorLoginShow/>\r\n      } \r\n      else if (errorCode === 'auth/user-not-found') {\r\n        console.log('Please use an existing email. ☹️');\r\n        setErrorTitle('User not found!');\r\n        setErrorMessage('Please use an existing email. ☹️');\r\n         <ErrorLoginShow/>\r\n      }       else if (errorCode === 'auth/too-many-requests') {\r\n        console.log('Too many requests detected, please try again later. ☹️');\r\n        setErrorTitle('Too many requests!');\r\n        setErrorMessage('Too many requests detected, please try again later. ☹️');\r\n         <ErrorLoginShow/>\r\n      } \r\n    })\r\n  };\r\n  \r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n      <ErrorLoginShow/>\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n    <Input w={{\r\n      base: \"90%\",\r\n      md: \"90%\",\r\n      sm: \"90%\", \r\n    }} value={email} onSubmitEditing={handleReset} onChangeText={handleEmailOnChangeText} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\r\n\r\n    <HStack space={1} justifyContent=\"center\">\r\n      <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReset} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16}  />:<Text style={{color: 'white',}}>Reset Password</Text>}</Button>\r\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\r\n\r\n    </HStack>\r\n\r\n  </Stack>\r\n\r\n          </Center>  \r\n\r\n          \r\n        </Center>\r\n\r\n   \r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { \r\n  Input,\r\n  Icon, \r\n  Stack, \r\n  Pressable, \r\n  Center, \r\n  NativeBaseProvider, \r\n  Button, \r\n  Box, \r\n  HStack, \r\n  Image, \r\n  VStack, \r\n  Alert, \r\n  IconButton, \r\n  CloseIcon, \r\n  Spinner, \r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition \r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\r\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail  } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ResetPasswordSuccess() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(true);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n      \r\n    })\r\n\r\n    return unsubscribe\r\n  }, []) \r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n            <PresenceTransition visible={errorShow} initial={{\r\n            opacity: 0,\r\n            scale: 0,\r\n          }} animate={{\r\n            opacity: 1,\r\n            scale: 1,\r\n            transition: {\r\n              duration: 200\r\n            }\r\n          }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n          <Alert maxW=\"400\" status=\"Success\">\r\n            <VStack space={1} flexShrink={1} w=\"100%\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                  <Alert.Icon />\r\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                    Success!\r\n                  </Text>\r\n                </HStack>\r\n              </HStack>\r\n              <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n                Password reset link has been sent to your email! 😊\r\n              </Box>\r\n            </VStack>\r\n          </Alert>\r\n        {/* </Collapse> */}\r\n        </PresenceTransition>\r\n \r\n      </Box>;\r\n  \r\n};\r\n\r\n\r\n  \r\n  const handleReturnLogin = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n      <ErrorLoginShow/>\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n   \r\n\r\n    <HStack space={1} justifyContent=\"center\">\r\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\r\n\r\n    </HStack>\r\n\r\n  </Stack>\r\n\r\n          </Center>  \r\n\r\n          \r\n        </Center>\r\n\r\n   \r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect, StrictMode } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition\r\n} from \"native-base\";\r\nimport { getAuth, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, } from './firebasecontrol'\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport LoginPage from './components/LoginPage';\r\nimport DevAdmin from './components/DevAdmin';\r\nimport Admin from './components/Admin';\r\nimport Checkpoint from './components/Checkpoint';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport ResetPasswordSuccess from './components/ResetPasswordSuccess';\r\nimport './style.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './components/DevAdminComponents/redux/store';\r\nimport { HashRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\n\r\n\r\nconst StackNavigator = createNativeStackNavigator();\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\nexport default function App() {\r\n  const [initializing, setInitializing] = useState(true);\r\n  const [user, setUser] = useState(null);\r\n\r\n  function onAuthStateChanged(user) {\r\n    setUser(user);\r\n    if (initializing) setInitializing(false);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const subscriber = auth.onAuthStateChanged(onAuthStateChanged)\r\n\r\n    return subscriber;\r\n  }, [])\r\n\r\n\r\n  if (initializing) {\r\n    return null; // or a loading screen if needed\r\n  }\r\n\r\n\r\n  const config = {\r\n    screens: {\r\n      Login: 'login',\r\n      Checkpoint: 'checkpoint',\r\n      devadmin: {\r\n        path: 'devadmin',\r\n        screens: {\r\n          'CHAT MESSAGES': 'ChatMessages/:chatId',\r\n          'FREIGHT': 'Freight',\r\n          'ADD NEW VEHICLE': 'AddNewVehicle',\r\n          'LOGS': 'Logs',\r\n          'VEHICLE LIST': 'VehicleList',\r\n          'ACCOUNT LIST': 'AccountList',\r\n          'ADD C-HUB ACCOUNT': 'AddCHubAccount',\r\n        },\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const linking = {\r\n    prefixes: ['https://lontokkayo.github.io/samplecontrolhub/'],\r\n    config,\r\n  };\r\n\r\n\r\n  return (\r\n    <Provider store={store}>\r\n        <Router>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\r\n            <Route path=\"/Login\" element={<LoginPage />} />\r\n            <Route path=\"/Checkpoint\" element={<Checkpoint />} />\r\n            <Route path=\"/DevAdmin/*\" element={<DevAdmin />} />\r\n            {/* Corrected path for Admin if needed */}\r\n            <Route path=\"/Admin\" element={<Admin />} />\r\n            {/* Define other routes */}\r\n          </Routes>\r\n        </Router>\r\n    </Provider>\r\n    // <Router>\r\n    //   <Provider store={store}>\r\n    //     <NativeBaseProvider>\r\n    //       {/* <LoginPage/> */}\r\n    //       <NavigationContainer linking={linking}>\r\n    //         <StackNavigator.Navigator options={{ headerShown: false }}>\r\n    //           <StackNavigator.Screen options={{ headerShown: false, }} name=\"Login\" component={LoginPage} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false, }} name=\"Checkpoint\" component={Checkpoint} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false, unmountOnBlur: true }} name=\"devadmin\" component={DevAdmin} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPassword\" component={ResetPassword} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPasswordSuccess\" component={ResetPasswordSuccess} />\r\n    //           {/* {user ? (<StackNavigator.Screen options={{ headerShown: false }} name=\"Checkpoint\" component={Checkpoint} /> ) : user ?\r\n    //       (<StackNavigator.Screen options={{ headerShown: false }} name=\"superadmin\" component={SuperAdmin} />) : user ?\r\n    //       (<StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />) :  (\r\n    //       <StackNavigator.Screen  options={{ headerShown: false }} name=\"Login\" component={LoginPage} />\r\n    //     )} */}\r\n    //         </StackNavigator.Navigator>\r\n    //       </NavigationContainer>\r\n    //     </NativeBaseProvider>\r\n    //   </Provider>\r\n    // </Router>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Alert } from 'react-native';\r\nimport {\r\n    Input,\r\n    Icon,\r\n    Stack,\r\n    Pressable,\r\n    Center,\r\n    PresenceTransition,\r\n    NativeBaseProvider,\r\n    Button,\r\n    Box,\r\n    HStack,\r\n    Image,\r\n    Container,\r\n    Header,\r\n    Left,\r\n    Body,\r\n    Title,\r\n    Content,\r\n    Text,\r\n    Heading,\r\n    Flex,\r\n    VStack,\r\n    ScrollView,\r\n    SectionList,\r\n    useBreakpointValue,\r\n    Spinner,\r\n    Modal,\r\n    Divider,\r\n    Popover\r\n} from \"native-base\";\r\nimport { DataTable } from 'react-native-paper';\r\nimport {\r\n    FontAwesome,\r\n    Entypo,\r\n    MaterialIcons,\r\n    Ionicons,\r\n    Fontisto,\r\n    EvilIcons,\r\n    AntDesign,\r\n    MaterialCommunityIcons,\r\n    Feather,\r\n    FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail, deleteUser, signInWithEmailAndPassword, updateEmail, updatePassword } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, deleteDoc, limit } from '../../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport './../style.css';\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { color } from 'react-native-reanimated';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport {\r\n    createDrawerNavigator,\r\n    DrawerContentScrollView,\r\n    DrawerItemList,\r\n    DrawerItem,\r\n} from '@react-navigation/drawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setAccountListData, setLoadingModalVisible, setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { collectionGroup, endBefore, limitToLast, startAfter, where } from 'firebase/firestore';\r\nimport { projectControlFirestore } from '../../crossFirebase';\r\nlet selectedScreen = 'ACCOUNT LIST'\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AccountList() {\r\n    const dispatch = useDispatch();\r\n    const loginName = useSelector((state) => state.loginName);\r\n    const [email, setEmail] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [showModal, setShowModal] = useState('');\r\n    const [type, setType] = useState('');\r\n    const logo = require('../../assets/C-Hub.png');\r\n    const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const [isMobileView, setIsMobileView] = useState(false);\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [show, setShow] = React.useState(false);\r\n    const [show2, setShow2] = React.useState(false);\r\n    const [isDisabled, setIsDisabled] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const navigation = useNavigation();\r\n\r\n    const [isSelectedLogs, setIsSelectedLogs] = useState(false);\r\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\r\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(true);\r\n    const [isSelected3, setIsSelected3] = useState(false);\r\n    const [isSelected4, setIsSelected4] = useState(false);\r\n\r\n    const [accountTypeSpAd, setAccountTypeSpAd] = useState(false);\r\n    const [accountTypeDevAd, setAccountTypeDevAd] = useState(false);\r\n    const [accountTypeAd, setAccountTypeAd] = useState(false);\r\n    const [accountType3, setAccountType3] = useState(false);\r\n    const [accountType4, setAccountType4] = useState(false);\r\n\r\n    const [inputName, setInputName] = useState('');\r\n    const [isInputNameBlank, setIsInputNameBlank] = useState(false);\r\n    const [inputEmail, setInputEmail] = useState('');\r\n    const [inputPassword, setInputPassword] = useState('');\r\n    const [inputConfirmPassword, setInputConfirmPassword] = useState('');\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n    const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\r\n    const [showSuccessModal, setShowSuccessModal] = React.useState(false);\r\n    const [showDisableModal, setShowDisableModal] = React.useState(false);\r\n    const [showEnableModal, setShowEnableModal] = React.useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = React.useState(false);\r\n    const [showSaveSuccessModal, setShowSaveSuccessModal] = React.useState(false);\r\n    const inputRefs = useRef([]);\r\n\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [isIntervalActive, setIsIntervalActive] = useState(true);\r\n    const [time, setTime] = useState('');\r\n    const [selectedType, setSelectedType] = useState('');\r\n    const [selectedTypeDisplay, setSelectedTypeDisplay] = useState('');\r\n    const [selectedItemType, setSelectedItemType] = useState('');\r\n    const [isEmailDuplicate, setIsEmailDuplicate] = useState('');\r\n    const [authEmail, setAuthEmail] = useState('');\r\n    const [authPassword, setAuthPassword] = useState('');\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n    const [isSaveLoading, setIsSaveLoading] = useState(false);\r\n    const inputEmailRef = useRef(null);\r\n    const inputNameRef = useRef(null);\r\n    const inputPassRef = useRef(null);\r\n\r\n    const [page, setPage] = useState(0);\r\n    const optionsPerPage = [13, 25, 50];\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const [documentListener, setDocumentListener] = useState(false);\r\n\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const ref0 = useRef(null);\r\n    const ref1 = useRef(null);\r\n    const ref2 = useRef(null);\r\n    const ref3 = useRef(null);\r\n    const searchInputRef = useRef(null);\r\n\r\n    const searchInput = useRef(null);\r\n    const searchInputValue = searchInput.current?.value;\r\n\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [firstVisible, setFirstVisible] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(db, 'accounts'),\r\n            orderBy('timestamp', 'desc'),\r\n            limit(pageSize)\r\n        );\r\n        const unsubscribe = onSnapshot(q, (documents) => {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n            dispatch(setAccountListData(logsDatabaseData));\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            setFirstVisible(documents.docs[0]);\r\n        });\r\n        return () => unsubscribe();\r\n\r\n    }, []);\r\n\r\n    const fetchNextData = async () => {\r\n\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collectionGroup(projectControlFirestore, 'accounts'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n        }\r\n\r\n        else {\r\n            const q = query(\r\n                collection(projectControlFirestore, 'accounts'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const fetchPreviousData = async () => {\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev')\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev');\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchFirstPage = (documents) => {\r\n\r\n\r\n        const accountListDatabaseData = [];\r\n\r\n        documents.forEach((document) => {\r\n            accountListDatabaseData.push({\r\n                id: document.id,\r\n                ...document.data(),\r\n            });\r\n        });\r\n\r\n        dispatch(setAccountListData(accountListDatabaseData));\r\n\r\n        if (documents?.docs[0]) {\r\n            setFirstVisible(documents.docs[0]);\r\n        }\r\n        if (documents?.docs[documents.docs.length - 1]) {\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n        if (!documents.empty) {\r\n            const accountListDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                accountListDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n\r\n\r\n\r\n            if (documents?.docs[0]) {\r\n                setFirstVisible(documents.docs[0]);\r\n            }\r\n            if (documents?.docs[documents.docs.length - 1]) {\r\n                setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            }\r\n\r\n            if (pageClicked == 'next') {\r\n                setCurrentPage(currentPage + 1);\r\n            }\r\n            if (pageClicked == 'prev') {\r\n                setCurrentPage(currentPage - 1);\r\n            }\r\n\r\n            dispatch(setAccountListData(accountListDatabaseData));\r\n        }\r\n\r\n        else {\r\n\r\n            if (searchText == '') {\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n            else {\r\n\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'accounts'),\r\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleNextPage = async () => {\r\n        // setPageClicked('next');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage + 1);\r\n        await fetchNextData();\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handlePreviousPage = async () => {\r\n        // setPageClicked('previous');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage - 1);\r\n        await fetchPreviousData();\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        searchData();\r\n\r\n    }, [searchText]);\r\n\r\n    const searchData = async () => {\r\n\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        if (searchText === '') {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'accounts'),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n    };\r\n\r\n    const handleSearchEnter = () => {\r\n\r\n        if (searchInputRef.current?.value !== '') {\r\n            setSearchText(searchInputRef.current.value.trim());\r\n        }\r\n        else {\r\n            setSearchText('');\r\n\r\n            if (searchText == '') {\r\n                searchData();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleToggleAccountTypeAd = useCallback(() => {\r\n        const text = 'admin';\r\n\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Admin');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountTypeDevAd = useCallback(() => {\r\n        const text = 'devadmin';\r\n\r\n        setSelectedTypeDisplay('Developer Admin');\r\n\r\n        setSelectedType(text);\r\n        setSelectedItemType(text);\r\n\r\n    }, []);\r\n\r\n    const handleToggleAccountType3 = useCallback(() => {\r\n        const text = 'staff';\r\n\r\n        setSelectedType(text);\r\n\r\n        setSelectedTypeDisplay('Staff');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountType4 = useCallback(() => {\r\n        const text = 'booking';\r\n\r\n\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Booking');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountTypeSpAd = useCallback(() => {\r\n        const text = 'superadmin';\r\n\r\n        setSelectedItemType(text);\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Super Admin');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // console.log(selectedType);\r\n        // console.log(selectedTypeDisplay);\r\n\r\n    }, [selectedType, selectedTypeDisplay])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')); // Replace 'your-collection' with the actual collection name and 'timestamp' with the timestamp field in your documents\r\n                const querySnapshot = await getDocs(q);\r\n                const docs = querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                setData(docs);\r\n                setFilteredData(docs);\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        const unsubscribe = onSnapshot(query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')), (snapshot) => {\r\n            const updatedData = snapshot.docs.map((doc) => doc.data());\r\n            setData(updatedData);\r\n            setFilteredData(updatedData);\r\n        });\r\n\r\n        fetchData();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n    }, [typeOfAccount]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n\r\n            if (!user) {\r\n                navigation.navigate(\"Login\")\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const firebaseFirestore = getFirestore();\r\n\r\n\r\n\r\n\r\n    // const handleUpdate = async () => {\r\n    //     setIsDisabled(true);\r\n    //     setIsLoading(true);\r\n\r\n    //     if (\r\n    //         validateEmail() === false ||\r\n    //         inputName === ''\r\n    //     ) {\r\n    //         setTimeout(() => {\r\n    //             // Reset loading and disabled state\r\n    //             setIsLoading(false);\r\n    //             setIsDisabled(false);\r\n    //         }, 500);\r\n    //     } else {\r\n    //         try {\r\n    //             const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\r\n    //             if (signInMethods.length > 0) {\r\n    //                 // Email already exists\r\n    //                 setIsEmailDuplicate(true);\r\n    //                 setEmailError(false);\r\n    //                 validateEmail(false);\r\n    //                 setIsLoading(false);\r\n    //                 setIsDisabled(false);\r\n    //                 return;\r\n    //             }\r\n\r\n    //             await createUserWithEmailAndPassword(authForCreateUser, inputEmail, inputPassword)\r\n    //                 .then((userCredential) => {\r\n\r\n    //                     const user = userCredential.user;\r\n    //                     try {\r\n    //                         const customID = inputEmail; // Replace 'your-custom-id' with your desired custom ID\r\n    //                         const docRef = doc(db, 'accounts', selectedItem.email); // Replace 'myCollection' with the name of your desired collection\r\n    //                         updateDoc(docRef, {\r\n    //                             // Specify the data you want to add to the document\r\n    //                             email: inputEmail,\r\n    //                             name: inputName,\r\n    //                             pass: inputPassword,\r\n    //                             type: typeOfAccount,\r\n    //                             // ...\r\n    //                         });\r\n\r\n    //                         addLogToCollection(logData);\r\n    //                         // console.log(logData);\r\n    //                         setIsLoading(false);\r\n    //                         setIsDisabled(false);\r\n    //                         handleClear();\r\n    //                         setShowModal(true);\r\n\r\n    //                         // console.log('Document added with custom ID: ', customID);\r\n    //                     } catch (error) {\r\n    //                         console.error('Error adding document: ', error);\r\n    //                     }\r\n\r\n\r\n    //                     // Reset loading and disabled state\r\n\r\n\r\n\r\n    //                 })\r\n    //                 .catch((error) => {\r\n    //                     // console.log('An error occurred during sign-up. Please try again later.');\r\n    //                     console.log(error);\r\n    //                     setIsLoading(false);\r\n    //                     setIsDisabled(false);\r\n    //                 });\r\n    //         } catch (error) {\r\n    //             const errorCode = error.code;\r\n    //             const errorMessage = error.message;\r\n    //             console.log('An error occurred while checking the email existence. Please try again later.');\r\n    //             // console.log(errorCode, errorMessage);\r\n    //             setIsLoading(false);\r\n    //             setIsDisabled(false);\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n    const handleClear = useCallback(() => {\r\n        const text = '';\r\n\r\n        ref0.current.value = \"\";\r\n        ref1.current.value = \"\";\r\n        ref2.current.value = \"\";\r\n        ref3.current.value = \"\";\r\n        setAccountTypeAd(false);\r\n        setAccountTypeSpAd(false);\r\n        setAccountTypeDevAd(false);\r\n        setAccountType3(false);\r\n        setAccountType4(false);\r\n        setEmailError(false);\r\n        setIsEmailDuplicate(false);\r\n\r\n\r\n        setInputConfirmPassword('');\r\n        setInputEmail('');\r\n        setInputName('');\r\n        setInputPassword('');\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    const handleToggleLogs = useCallback(() => {\r\n        // setIsSelectedLogs(true);\r\n\r\n        // setIsSelectedAddAccount(false);\r\n        // setIsSelectedAccountList(false);\r\n        // setIsSelected3(false);\r\n        // setIsSelected4(false);\r\n\r\n        navigation.navigate(\"LOGS\");\r\n    }, []);\r\n    const handleToggleAddAccount = useCallback(() => {\r\n        // setIsSelectedAddAccount(true);\r\n\r\n        // setIsSelectedLogs(false);\r\n        // setIsSelectedAccountList(false);\r\n        // setIsSelected3(false);\r\n        // setIsSelected4(false);\r\n\r\n        navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n    }, []);\r\n\r\n    const handleToggleAccountList = useCallback(() => {\r\n        // setIsSelectedAccountList(true);\r\n\r\n        // setIsSelectedAddAccount(false);\r\n        // setIsSelected3(false);\r\n        // setIsSelected4(false);\r\n        // setIsSelectedLogs(false);\r\n        navigation.navigate(\"ACCOUNT LIST\");\r\n    }, []);\r\n\r\n    const handleToggleAddVehicle = useCallback(() => {\r\n        // setIsSelected3(true);\r\n\r\n        // setIsSelectedAddAccount(false);\r\n        // setIsSelectedAccountList(false);\r\n        // setIsSelected4(false);\r\n        // setIsSelectedLogs(false);\r\n        navigation.navigate(\"ADD NEW VEHICLE\");\r\n    }, []);\r\n\r\n    const handleVehicleList = useCallback(() => {\r\n        navigation.navigate(\"VEHICLE LIST\");\r\n    }, []);\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n\r\n\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(auth)\r\n                    .then(() => {\r\n                        navigation.navigate('Login');\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(auth)\r\n                .then(() => {\r\n                    navigation.navigate('Login');\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n\r\n\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = auth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const listenForNameChange = (documentId) => {\r\n        const userRef = doc(db, 'accounts', documentId);\r\n\r\n        const unsubscribe = onSnapshot(userRef, (doc) => {\r\n            if (doc.exists()) {\r\n                const name = doc.data().name;\r\n                const type = doc.data().type;\r\n                setName(name);\r\n                setType(type);\r\n                // Perform any necessary actions with the name value\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        });\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n    useEffect(() => {\r\n        getEmailFromDocument('accounts', auth.currentUser?.email);\r\n        // console.log(authEmail, authPassword)\r\n    }, [authEmail, authPassword]);\r\n\r\n    const getEmailFromDocument = async (collectionPath, documentId) => {\r\n        const firestore = getFirestore();\r\n        const documentRef = doc(firestore, collectionPath, documentId);\r\n\r\n        try {\r\n            const documentSnapshot = await getDoc(documentRef);\r\n            if (documentSnapshot.exists()) {\r\n                const email = documentSnapshot.data().email;\r\n                const pass = documentSnapshot.data().pass;\r\n\r\n                setAuthEmail(email);\r\n                setAuthPassword(pass);\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error retrieving email:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const validateEmail = () => {\r\n        // Regular expression for email validation\r\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n        const isValid = emailRegex.test(inputEmail);\r\n\r\n        return isValid;\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(auth).then(() => {\r\n            navigation.navigate('Login');\r\n            setEmail('');\r\n            setName('');\r\n        }).catch((error) => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     const handleScreenResize = () => {\r\n    //         const screenWidth = Dimensions.get('window').width;\r\n    //         setIsMobileView(screenWidth < 1200);\r\n    //     };\r\n\r\n    //     // Initial check on component mount\r\n    //     handleScreenResize();\r\n\r\n    //     // Listen for screen dimension changes\r\n    //     Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n    //     // Cleanup event listener on component unmount\r\n    //     return () => {\r\n    //         Dimensions.removeEventListener('change', handleScreenResize);\r\n    //     };\r\n    // }, []);\r\n\r\n\r\n\r\n    const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleEdit = useCallback((id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputPassword(selectedItem.pass);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setModalVisible(true);\r\n        setSelectedItemType(selectedItem.type);\r\n        setSelectedType(selectedItem.type);\r\n        setSelectedTypeDisplay(selectedItem.typeDisplay);\r\n        setIsEmailDuplicate(false);\r\n        // console.log(selectedItem);\r\n\r\n        if (inputEmailRef.current) {\r\n            inputEmailRef.current.setNativeProps({ text: selectedItem.email });\r\n        }\r\n\r\n        if (inputNameRef.current) {\r\n            inputNameRef.current.setNativeProps({ text: selectedItem.name });\r\n        }\r\n        if (inputPassRef.current) {\r\n            inputPassRef.current.setNativeProps({ text: selectedItem.pass });\r\n        }\r\n    }, [data]);\r\n\r\n\r\n\r\n    const handleInputEmailChange = debounce((value) => {\r\n        setInputEmail(value);\r\n    }, 50);\r\n\r\n    const handleInputNameChange = debounce((value) => {\r\n        setInputName(value);\r\n    }, 50);\r\n\r\n    const handleInputPassChange = debounce((value) => {\r\n        setInputPassword(value);\r\n    }, 50);\r\n\r\n\r\n    const handleOpenDisableModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowDisableModal(true);\r\n    };\r\n\r\n    const handleOpenEnableModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowEnableModal(true);\r\n    };\r\n\r\n    const handleOpenDeleteModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowDeleteModal(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setModalVisible(false);\r\n        setShow(false);\r\n    };\r\n\r\n    const handleCloseDisableModal = () => {\r\n        setShowDisableModal(false);\r\n    };\r\n\r\n    const handleOpenSaveSuccessModal = () => {\r\n        setShowDisableModal(false);\r\n    };\r\n\r\n\r\n    const handleCloseDeleteModal = () => {\r\n        setShowDeleteModal(false);\r\n    };\r\n    const handleCloseEnableModal = () => {\r\n        setShowEnableModal(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [selectedItem]);\r\n    const addLogToCollection = async (data) => {\r\n        try {\r\n            const firestore = getFirestore();\r\n            const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n            // Add a new document to the \"logs\" collection\r\n            await addDoc(logsCollectionRef, data);\r\n\r\n        } catch (error) {\r\n            console.error('Error adding document:', error);\r\n        }\r\n    };\r\n    // useEffect(() => {\r\n    //     const fetchTime = async () => {\r\n    //         try {\r\n    //             const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    //             const { datetime } = response.data;\r\n    //             const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    //             setTime(formattedTime);\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching time:', error);\r\n    //         }\r\n    //     };\r\n\r\n    //     const interval = setInterval(() => {\r\n    //         if (isIntervalActive) {\r\n    //             fetchTime();\r\n    //         }\r\n    //     }, 1000);\r\n\r\n    //     return () => {\r\n    //         clearInterval(interval);\r\n    //     };\r\n    // }, [isIntervalActive]);\r\n\r\n    const openSuccessModal = () => {\r\n        setShowSuccessModal(true);\r\n\r\n    };\r\n\r\n    const closeSuccessModal = () => {\r\n        setShowSuccessModal(false);\r\n        setIsDisabled(false);\r\n        setIsYesLoading(false);\r\n    };\r\n\r\n\r\n    // async function disableUserByUid(uid) {\r\n    //     try {\r\n    //         await updateDisabled(auth, uid, true);\r\n    //         console.log('User account disabled successfully');\r\n    //     } catch (error) {\r\n    //         console.error('Error disabling user account:', error);\r\n    //     }\r\n    // }\r\n\r\n    const handleEnable = useCallback(async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n        try {\r\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n            const updates = {\r\n                active: true,\r\n            };\r\n\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            await updateDoc(itemDocRef, updates);\r\n\r\n            const updatedData = data.map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, active: true };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            setData(updatedData);\r\n            const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            // console.log('Field updated successfully.');\r\n\r\n            const logData = {\r\n                message: `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`.toLowerCase(),\r\n                    'Account Enabled'.toLowerCase(),\r\n                    'Enabled'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n            };\r\n            addLogToCollection(logData);\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n            handleCloseEnableModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n        }\r\n    }, [data]);\r\n\r\n    const deleteDocument = async (collectionPath, customId) => {\r\n        const firestore = getFirestore();\r\n        const documentRef = doc(firestore, collectionPath, customId);\r\n\r\n        try {\r\n            await deleteDoc(documentRef);\r\n            console.log('Document deleted successfully.');\r\n        } catch (error) {\r\n            console.error('Error deleting document:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleDelete = useCallback(async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n\r\n\r\n        try {\r\n\r\n            const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n            const user = userCredential.user;\r\n\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            await deleteUser(user);\r\n            const logData = {\r\n                message: `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`,\r\n                timestamp: formattedTime,\r\n                colorScheme: false,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`.toLowerCase(),\r\n                    'Account Deleted'.toLowerCase(),\r\n                    'Deleted'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n            };\r\n            addLogToCollection(logData);\r\n\r\n\r\n            console.log('Account deleted successfully');\r\n\r\n            const signInCredential = await signInWithEmailAndPassword(\r\n                auth,\r\n                authEmail,\r\n                authPassword\r\n            );\r\n            const signedInUser = signInCredential.user;\r\n            signedInUser\r\n            deleteDocument('accounts', selectedItem.email);\r\n            // setData(updatedData);\r\n            // const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            navigation.navigate('AccountList')\r\n            // console.log('Field updated successfully.');\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n\r\n            handleCloseDeleteModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n        }\r\n    }, [data]);\r\n\r\n    const handleDisable = useCallback(async (id) => {\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n\r\n        try {\r\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n            const updates = {\r\n                active: false,\r\n            };\r\n\r\n            await updateDoc(itemDocRef, updates);\r\n\r\n            const updatedData = data.map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, active: false };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            setData(updatedData);\r\n            const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            // console.log('Field updated successfully.');\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            const logData = {\r\n                message: `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`,\r\n                timestamp: formattedTime,\r\n                colorScheme: false,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`.toLowerCase(),\r\n                    'Account Disabled'.toLowerCase(),\r\n                    'Disabled'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n\r\n            };\r\n            addLogToCollection(logData);\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n            handleCloseDisableModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n            setIsDisabled(false);\r\n            setIsSaveLoading(false);\r\n        }\r\n    }, [data]);\r\n\r\n    // Apply search filter to the data\r\n    const applySearchFilter = (data, searchInputValue) => {\r\n        if (!searchInputValue) {\r\n            return data;\r\n        }\r\n        const filteredData = data.filter((item) =>\r\n            item.email.toLowerCase().includes(searchInputValue.toLowerCase()) ||\r\n            item.name.toLowerCase().includes(searchInputValue.toLowerCase()) ||\r\n            item.typeDisplay.toLowerCase().includes(searchInputValue.toLowerCase())\r\n        );\r\n        return filteredData;\r\n    };\r\n\r\n\r\n\r\n    const handleSave = async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setIsDisabled(true);\r\n        setIsSaveLoading(true);\r\n        if (\r\n            isPasswordLengthLabel() === false ||\r\n            validateEmail() === false ||\r\n            inputName === ''\r\n        ) {\r\n            setTimeout(() => {\r\n                // Reset loading and disabled state\r\n                setIsLoading(false);\r\n                setIsDisabled(false);\r\n            }, 500);\r\n        } else {\r\n\r\n            if (inputEmail === selectedItem.email && inputPassword === selectedItem.pass) {\r\n\r\n\r\n                const documentRef = doc(db, 'accounts', selectedItem.id);\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime(formattedTime);\r\n\r\n                const updatedFields = {\r\n                    name: inputName,\r\n                    type: selectedType,\r\n                    typeDisplay: selectedTypeDisplay,\r\n                    lastUpdatedDate: formattedTime,\r\n                    // Add more fields as needed\r\n\r\n                };\r\n\r\n                try {\r\n\r\n                    await updateDoc(documentRef, updatedFields);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n\r\n\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime(formattedTime);\r\n\r\n                    const logData = {\r\n                        message: `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            selectedItem.email.toLowerCase(),\r\n                            selectedItem.name.toLowerCase(),\r\n                            inputName.toLowerCase(),\r\n                            name.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n                    }\r\n\r\n                    addLogToCollection(logData);\r\n\r\n                    const updatedData = data.map((item) => {\r\n                        if (item.id === id) {\r\n                            item.name = inputName;\r\n                            item.type = selectedType;\r\n                            item.typeDisplay = selectedTypeDisplay;\r\n                            item.lastUpdatedDate = formattedTime;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setData(updatedData);\r\n                    const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n                    setFilteredData(filteredData);\r\n                    // console.log('Field updated successfully.');\r\n                    // console.log('Document successfully updated!');\r\n                    handleCloseModal();\r\n                    setShowSuccessModal(true);\r\n                } catch (error) {\r\n                    console.error('Error updating document:', error);\r\n                }\r\n\r\n            }\r\n\r\n            else if (inputEmail === selectedItem.email && inputPassword !== selectedItem.pass) {\r\n\r\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n                const user = userCredential.user;\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime();\r\n\r\n                try {\r\n                    await updatePassword(user, inputPassword);\r\n\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime();\r\n                    // console.log('Password changed successfully');\r\n                    const userDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n\r\n\r\n                    const updatedFields = {\r\n                        email: inputEmail,\r\n                        name: inputName,\r\n                        type: selectedType,\r\n                        typeDisplay: selectedTypeDisplay,\r\n                        dateOfCreation: selectedItem.dateOfCreation,\r\n                        lastUpdatedDate: formattedTime,\r\n                        pass: inputPassword,\r\n                        active: true,\r\n\r\n                        // Add more fields as needed\r\n                    };\r\n                    // Perform setDoc operation\r\n                    await setDoc(userDocRef, updatedFields);\r\n\r\n                    const signInCredential = await signInWithEmailAndPassword(\r\n                        auth,\r\n                        authEmail,\r\n                        authPassword\r\n                    );\r\n\r\n                    const signedInUser = signInCredential.user;\r\n                    signedInUser\r\n\r\n\r\n                    // console.log(authEmail, authPassword);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n\r\n                    setTime(formattedTime);\r\n\r\n                    const logData = {\r\n                        message: `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`.toLowerCase(),\r\n                            'Password Changed'.toLowerCase(),\r\n                            'Password'.toLowerCase(),\r\n                            selectedItem.email.toLowerCase(),\r\n                            selectedItem.name.toLowerCase(),\r\n                            name.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n\r\n                    const updatedItem = {\r\n                        ...selectedItem,\r\n                        email: inputEmail,\r\n                        name: inputName,\r\n                        type: selectedType,\r\n                        typeDisplay: selectedTypeDisplay,\r\n                        lastUpdatedDate: formattedTime,\r\n                    };\r\n\r\n                    const updatedData = data.map((item) => {\r\n                        if (item.id === id) {\r\n                            item.name = inputName;\r\n                            item.type = selectedType;\r\n                            item.typeDisplay = selectedTypeDisplay;\r\n                            item.lastUpdatedDate = formattedTime;\r\n                            item.pass = inputPassword;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setData(updatedData);\r\n                    const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\r\n                    setFilteredData(filteredData);\r\n                    // console.log('Document set successfully');\r\n                    handleCloseModal();\r\n                    setShowSuccessModal(true);\r\n                } catch (error) {\r\n                    console.error('Error:', error);\r\n                }\r\n\r\n            }\r\n\r\n            else if (inputEmail !== selectedItem.email) {\r\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n                const user = userCredential.user;\r\n\r\n\r\n                // updateEmail(user, inputEmail)\r\n                //     .then(async () => {\r\n                //         // Email change successful\r\n                //         setIsDisabled(false);\r\n                //         setIsSaveLoading(false);\r\n                //         const documentRef = doc(db, 'accounts', selectedItem.email);\r\n\r\n                const oldDocumentRef = doc(db, 'accounts', selectedItem.email);\r\n                const newDocumentRef = doc(db, 'accounts', inputEmail);\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime(formattedTime);\r\n\r\n                try {\r\n                    // Get the data from the old document\r\n                    const documentSnapshot = await getDoc(oldDocumentRef);\r\n                    if (documentSnapshot.exists()) {\r\n                        const documentData = documentSnapshot.data();\r\n\r\n                        // Merge the updated fields with the existing document data\r\n\r\n                        // Create the new document with the desired ID and copy the merged data\r\n\r\n                        const updatedFields = {\r\n                            email: inputEmail,\r\n                            name: inputName,\r\n                            type: selectedType,\r\n                            typeDisplay: selectedTypeDisplay,\r\n                            dateOfCreation: selectedItem.dateOfCreation,\r\n                            lastUpdatedDate: formattedTime,\r\n                            pass: inputPassword,\r\n                            active: true,\r\n\r\n                            // Add more fields as needed\r\n                        };\r\n\r\n                        await setDoc(newDocumentRef, updatedFields);\r\n                        await deleteDoc(oldDocumentRef);\r\n                        // Optionally, delete the old document\r\n\r\n                        try {\r\n                            const userCredential = await createUserWithEmailAndPassword(auth, inputEmail, inputPassword);\r\n                            // console.log('User created successfully:', userCredential.user);\r\n\r\n                            setIsDisabled(false);\r\n                            setIsSaveLoading(false);\r\n\r\n                            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                            const { datetime } = response.data;\r\n                            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                            const year = moment(datetime).format('YYYY');\r\n                            const month = moment(datetime).format('MM');\r\n                            const monthWithDay = moment(datetime).format('MM/DD');\r\n                            const date = moment(datetime).format('YYYY/MM/DD');\r\n                            const day = moment(datetime).format('DD');\r\n                            const time = moment(datetime).format('HH:mm');\r\n                            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                            setTime(formattedTime);\r\n\r\n                            const logData = {\r\n                                message: `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`,\r\n                                timestamp: formattedTime,\r\n                                colorScheme: true,\r\n                                keywords: [\r\n                                    formattedTime.toLowerCase(),\r\n                                    `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`.toLowerCase(),\r\n                                    'Updated'.toLowerCase(),\r\n                                    'Email'.toLowerCase(),\r\n                                    selectedItem.email.toLowerCase(),\r\n                                    selectedItem.name.toLowerCase(),\r\n                                    inputEmail.toLowerCase(),\r\n                                    monthWithDay.toLowerCase(),\r\n                                    name.toLowerCase(),\r\n                                    year.toLowerCase(),\r\n                                    month.toLowerCase(),\r\n                                    day.toLowerCase(),\r\n                                    date.toLowerCase(),\r\n                                    time.toLowerCase(),\r\n                                    timeWithMinutesSeconds.toLowerCase(),\r\n                                ],\r\n                            }\r\n                            try {\r\n                                await deleteUser(user);\r\n                                // console.log('User authentication record deleted successfully.');\r\n\r\n\r\n\r\n                                setIsDisabled(false);\r\n                                setIsSaveLoading(false);\r\n\r\n                                const signInCredential = await signInWithEmailAndPassword(\r\n                                    auth,\r\n                                    authEmail,\r\n                                    authPassword\r\n                                );\r\n\r\n                                const signedInUser = signInCredential.user;\r\n                                signedInUser\r\n\r\n                                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                                const { datetime } = response.data;\r\n                                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                                setTime(formattedTime);\r\n\r\n                                const updatedItem = {\r\n                                    ...selectedItem,\r\n                                    email: inputEmail,\r\n                                    name: inputName,\r\n                                    type: selectedType,\r\n                                    typeDisplay: selectedTypeDisplay,\r\n                                    lastUpdatedDate: formattedTime,\r\n                                };\r\n\r\n                                const updatedData = data.map((item) =>\r\n                                    item.id === id ? updatedItem : item\r\n                                );\r\n                                setData(updatedData);\r\n                                const filteredData = applySearchFilter(updatedData, searchInputValue);\r\n                                setFilteredData(filteredData);\r\n                                // console.log(authEmail, authPassword);\r\n\r\n\r\n                            } catch (error) {\r\n                                console.error('Error deleting user authentication record:', error);\r\n                            }\r\n\r\n                            addLogToCollection(logData);\r\n                            handleCloseModal();\r\n                            setShowSuccessModal(true);\r\n\r\n                            // console.log('Document ID successfully changed!');\r\n                        } catch (error) {\r\n                            console.error('Error creating user:', error);\r\n                        }\r\n                    } else {\r\n                        console.error('Old document does not exist!');\r\n                    }\r\n\r\n                } catch (error) {\r\n                    console.error('Error changing document ID:', error);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n                }\r\n\r\n\r\n                // })\r\n                // .catch((error) => {\r\n                //     console.error('Error changing email:', error);\r\n                // });\r\n            }\r\n\r\n\r\n\r\n\r\n            else {\r\n                try {\r\n                    const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\r\n                    if (signInMethods.length > 0) {\r\n                        // Email already exists                        \r\n                        setIsDisabled(false);\r\n                        setIsSaveLoading(false);\r\n                        setIsEmailDuplicate(true);\r\n                        setEmailError(false);\r\n                        validateEmail(false);\r\n\r\n                        return;\r\n                    }\r\n\r\n\r\n                } catch (error) {\r\n                    const errorCode = error.code;\r\n                    const errorMessage = error.message;\r\n                    console.log('An error occurred while checking the email existence. Please try again later.');\r\n                    // console.log(errorCode, errorMessage);\r\n                    setIsLoading(false);\r\n                    setIsDisabled(false);\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n    };\r\n\r\n    const handleChangeEmailText = (text) => {\r\n        setInputEmail(text);\r\n    };\r\n\r\n\r\n\r\n    const isPasswordLengthLabel = () => {\r\n        return inputPassword.length >= 6;\r\n    };\r\n    // const handlePasswordChange = _.debounce((value) => {\r\n    //     setInputPassword(value);\r\n    // }, 50);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc'));\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                    setData(documents);\r\n                });\r\n\r\n                return () => unsubscribe();\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter(\r\n            (item) =>\r\n                item.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                item.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                item.typeDisplay.toLowerCase().includes(searchQuery.toLowerCase())\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce((text) => {\r\n        setSearchQuery(text);\r\n    }, 300);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    const showPopover = () => {\r\n        setShowNamePopover(true);\r\n    };\r\n\r\n    // Function to hide the Popover\r\n    const hidePopover = () => {\r\n        setShowNamePopover(false);\r\n    };\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n    return (\r\n        <NativeBaseProvider>\r\n\r\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#7b9cff'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={2}\r\n                    borderBottomColor={'cyan.500'}\r\n\r\n                >\r\n\r\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: logo,\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    {showDrawerIcon && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    />}\r\n\r\n\r\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: logo2,\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n                    {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                        <Flex direction=\"row-reverse\">\r\n                            <Popover isOpen={showNamePopover} trigger={triggerProps => {\r\n                                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                    <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                                </Text>;\r\n                            }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\r\n                                <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                                    <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                        <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                            Logout\r\n                                        </Button>\r\n                                    </Popover.Body>\r\n                                </Popover.Content>\r\n                            </Popover>\r\n                        </Flex>\r\n                    </Box> */}\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <Box flex={[1]} flexDirection=\"row\" >\r\n                    {/* Sidebar */}\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    />\r\n\r\n                    {/* Main Content */}\r\n                    <Box flex={1} flexGrow={1} minHeight={0}>\r\n                        {/* Main Content Content */}\r\n                        <Input ref={searchInput} onChangeText={handleSearch} placeholder=\"Search\" bgColor={'white'} />\r\n                        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n                            <Box height={'100%'}>\r\n\r\n                                <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                                    <Box borderWidth={1} borderColor=\"gray.200\" borderRadius={4} overflow=\"hidden\" display={['none', 'none', 'none', '', '', '']}>\r\n                                        <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor={'#0642F4'} >\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Email</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Name</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Type of Account</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Date of Creation</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Last Updated</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Status</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Operate</Text>\r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <PresenceTransition visible={true} initial={{\r\n                                        opacity: 0\r\n                                    }} animate={{\r\n                                        opacity: 1,\r\n                                        transition: {\r\n                                            duration: 250\r\n                                        }\r\n                                    }}>\r\n                                        {paginatedData.map((item) => (\r\n                                            <Box key={item.id} margin={[2, 2, 2, 0, 0, 0]} flexDirection={['column', 'column', 'column', 'row', 'row', 'row']} bgColor={item.active ? 'blue.200' : 'amber.500'} borderColor={'gray.200'} borderWidth={[2, 2, 2, 1, 1, 1]} paddingBottom={1} marginRight={0}>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Email</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.email}</Text>\r\n\r\n\r\n                                                    </Box>\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Name</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.name}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}  > Type of Account</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.typeDisplay}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Date of Creation</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.dateOfCreation}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Last Updated</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.lastUpdatedDate}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Status</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.active ? 'Enabled' : 'Disabled'}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Operate</Text>\r\n                                                        </Box>\r\n                                                        <HStack space={1} flex={[5, 5, 5, 1, 1, 1]}>\r\n                                                            <Button\r\n                                                                onPress={() => handleEdit(item.id)}\r\n                                                                flex={[1, 1, 1, 2, 2, 2]}\r\n                                                                padding={1}\r\n                                                                justifyContent='center'\r\n                                                                alignItems='center'\r\n                                                                flexDirection='row'>\r\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Edit</Text>\r\n                                                                <Icon as={<MaterialIcons name={\"edit\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                            </Button>\r\n                                                            {item.active ? (\r\n                                                                <Button onPress={() => handleOpenDisableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'amber'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Disable</Text>\r\n                                                                    <Icon as={<MaterialIcons name={\"block\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                                </Button>\r\n                                                            ) : (\r\n                                                                <Button onPress={() => handleOpenEnableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'success'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Enable</Text>\r\n                                                                    <Icon as={<MaterialIcons name={\"check-circle\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                                </Button>\r\n                                                            )}\r\n                                                            <Button onPress={() => handleOpenDeleteModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'error'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Delete</Text>\r\n                                                                <Icon as={<MaterialIcons name={\"delete\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                            </Button>\r\n                                                        </HStack>\r\n                                                    </Box>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n\r\n                                        ))}\r\n                                    </PresenceTransition>\r\n                                    <DataTable.Pagination\r\n                                        page={page}\r\n                                        numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                        onPageChange={(page) => setPage(page)}\r\n                                        label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                        optionsPerPage={optionsPerPage}\r\n                                        itemsPerPage={itemsPerPage}\r\n                                        setItemsPerPage={setItemsPerPage}\r\n                                        showFastPagination\r\n                                        optionsLabel={'Rows per page'}\r\n                                    />\r\n                                </DataTable>\r\n                            </Box>\r\n                            <Modal isOpen={modalVisible} onClose={handleCloseModal}>\r\n                                <Modal.Content>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header borderBottomWidth={0}>Edit Acccount</Modal.Header>\r\n                                    <Modal.Body>\r\n\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <VStack><Text>Email: </Text> <Input color={!isEmailDuplicate ? 'black' : 'red.500'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputEmail} ref={inputEmailRef} onChangeText={handleInputEmailChange} /></VStack>\r\n                                                {!validateEmail() && (\r\n                                                    <Text color={'#D22730'} bold>Invalid Email!</Text>\r\n                                                )}\r\n                                                {isEmailDuplicate && (\r\n                                                    <Text color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\r\n                                                )}\r\n                                                <VStack><Text>Name: </Text> <Input borderBottomColor={inputName !== '' ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputName} ref={inputNameRef} onChangeText={handleInputNameChange} /></VStack>\r\n                                                {inputName === '' && (\r\n                                                    <Text color={'#D22730'} bold>Empty Name!</Text>\r\n                                                )}\r\n                                                <VStack><Text>Password: </Text>\r\n                                                    <Input borderBottomColor={isPasswordLengthLabel() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputPassword} ref={inputPassRef} onChangeText={handleInputPassChange} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\r\n                                                        <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" />\r\n                                                    </Pressable>} />\r\n                                                </VStack>\r\n\r\n                                                <VStack><Text>Type of Account:</Text>\r\n                                                    <HStack space={1} justifyContent=\"center\" >\r\n                                                        <Button _hover={{ bgColor: 'booking' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountType4} bgColor={'booking' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Booking</Text></Button>\r\n\r\n                                                        <Button _hover={{ bgColor: 'staff' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountType3} bgColor={'staff' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Staff</Text></Button>\r\n\r\n                                                        <Button _hover={{ bgColor: 'admin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeAd} bgColor={'admin' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Admin</Text></Button>\r\n\r\n\r\n\r\n                                                    </HStack>\r\n                                                    <HStack space={1} justifyContent=\"center\" marginTop={1}>\r\n                                                        <Button _hover={{ bgColor: 'superadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeSpAd} bgColor={'superadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Super Admin</Text></Button>\r\n                                                        <Button _hover={{ bgColor: 'devadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeDevAd} bgColor={'devadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Dev Admin</Text></Button>\r\n                                                    </HStack>\r\n                                                </VStack>\r\n\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseModal} flex={1} padding={1} margin={1}>Close</Button>\r\n                                        <Button onPress={() => handleSave(selectedItem.id)} disabled={isDisabled} flex={1} padding={1} colorScheme={'success'} margin={1}>{isSaveLoading ? <Spinner color=\"white\" size={21} /> : 'Save'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={showDisableModal} onClose={handleCloseDisableModal}>\r\n                                <Modal.Content bgColor={'amber.500'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'amber.500'} borderBottomWidth={0} _text={{ color: 'white', }}>Disable Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'amber.500'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text color={'white'}>Email: {selectedItem.email}</Text>\r\n                                                <Text color={'white'}>Name: {selectedItem.name}</Text>\r\n                                                <Text color={'white'}>Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'amber.500'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleDisable(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={showDeleteModal} onClose={handleCloseDeleteModal}>\r\n                                <Modal.Content bgColor={'error.300'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'error.300'} borderBottomWidth={0} >Delete Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'error.300'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text >Email: {selectedItem.email}</Text>\r\n                                                <Text >Name: {selectedItem.name}</Text>\r\n                                                <Text >Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'error.300'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleDelete(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n\r\n                            <Modal isOpen={showEnableModal} onClose={handleCloseEnableModal}>\r\n                                <Modal.Content bgColor={'success.200'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'success.200'} borderBottomWidth={0}>Enable Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'success.200'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text>Email: {selectedItem.email}</Text>\r\n                                                <Text>Name: {selectedItem.name}</Text>\r\n                                                <Text>Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'success.200'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseEnableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleEnable(selectedItem.id)} colorScheme={'success'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                            <Modal isOpen={showSuccessModal} onClose={() => setShowSuccessModal(false)} size=\"lg\"  >\r\n                                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n                                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n                                    <Modal.Body >\r\n                                        <Text color=\"white\" textAlign={'center'}>The account update was successful.</Text>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n                                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowSuccessModal(false)}>\r\n                                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                        </ScrollView>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  PresenceTransition,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Title,\r\n  Content,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  VStack,\r\n  ScrollView,\r\n  SectionList,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Modal,\r\n  Divider,\r\n  Popover\r\n} from \"native-base\";\r\nimport {\r\n  FontAwesome,\r\n  Entypo,\r\n  MaterialIcons,\r\n  Ionicons,\r\n  Fontisto,\r\n  EvilIcons,\r\n  AntDesign,\r\n  MaterialCommunityIcons,\r\n  Feather,\r\n  FontAwesome5Brands,\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './../style.css';\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport { setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nlet selectedScreen = 'ADD C-HUB ACCOUNT'\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AddAccount() {\r\n  const dispatch = useDispatch();\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const [isMobileView, setIsMobileView] = useState(false);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [show2, setShow2] = React.useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n  const [isSelectedLogs, setIsSelectedLogs] = useState(false);\r\n  const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(true);\r\n  const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\r\n  const [isSelected3, setIsSelected3] = useState(false);\r\n  const [isSelected4, setIsSelected4] = useState(false);\r\n\r\n  const [accountTypeSpAd, setAccountTypeSpAd] = useState(false);\r\n  const [accountTypeDevAd, setAccountTypeDevAd] = useState(false);\r\n  const [accountTypeAd, setAccountTypeAd] = useState(false);\r\n  const [accountType3, setAccountType3] = useState(false);\r\n  const [accountType4, setAccountType4] = useState(false);\r\n\r\n\r\n  const [nameVerify, setNameVerify] = useState(false);\r\n  const [emailVerify, setEmailVerify] = useState(false);\r\n  const [passwordVerify, setPasswordVerify] = useState(false);\r\n  const [confirmPasswordVerify, setConfirmPasswordVerify] = useState(false);\r\n  const [accountTypeVerify, setAccountTypeVerify] = useState(false);\r\n  const [isEmailDuplicate, setIsEmailDuplicate] = useState(false);\r\n  const [emailError, setEmailError] = useState(false);\r\n  // const [inputName, setInputName] = useState('');\r\n  // const [inputEmail, setInputEmail] = useState('');\r\n  // const [inputPassword, setInputPassword] = useState('');\r\n  // const [inputConfirmPassword, setInputConfirmPassword] = useState('');\r\n  const [typeOfAccount, setTypeOfAccount] = useState('');\r\n  const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const inputRefs = useRef([]);\r\n\r\n\r\n  const inputName = useRef(null);\r\n  const inputEmail = useRef(null);\r\n  const inputPassword = useRef(null);\r\n  const inputConfirmPassword = useRef(null);\r\n\r\n  const [passwordMatch, setPasswordMatch] = useState(false);\r\n  const [passwordMatchLabel, setPasswordMatchLabel] = useState(true);\r\n  const [passwordLengthLabel, setPasswordLengthLabel] = useState(false);\r\n  const [isNameEmpty, setIsNameEmpty] = useState(true);\r\n\r\n  const [formattedTime, setFormattedTime] = useState('');\r\n\r\n  const [time, setTime] = useState('');\r\n  const fetchTimeRef = useRef();\r\n  const [isIntervalActive, setIsIntervalActive] = useState(true);\r\n\r\n  const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n  }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\r\n\r\n\r\n\r\n\r\n  const SuccessModal = () => {\r\n    return <Center>\r\n      <Modal isOpen={showModal} onClose={closeModal} size=\"lg\"  >\r\n        <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n          <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n          <Modal.Body >\r\n\r\n            <Text textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\r\n          </Modal.Body>\r\n          <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n            <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={closeModal} _text={{ color: 'black', }}>\r\n              Ok\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </Center>;\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n  }, [typeOfAccount]);\r\n\r\n  const handleToggleAccountTypeSpAd = () => {\r\n    const text = 'superadmin';\r\n    setAccountTypeSpAd(true);\r\n\r\n    setAccountTypeDevAd(false);\r\n    setAccountTypeAd(false);\r\n    setAccountType3(false);\r\n    setAccountType4(false);\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Super Admin');\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (!user) {\r\n        navigation.navigate(\"Login\")\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const firebaseFirestore = getFirestore();\r\n\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const firestore = getFirestore();\r\n      const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const fetchTime = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n  //       const { datetime } = response.data;\r\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n  //       setTime(formattedTime);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching time:', error);\r\n  //     }\r\n  //   };\r\n  //   const interval = setInterval(fetchTime, 1000);\r\n  //   return () => clearInterval(interval);\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   const fetchTime = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n  //       const { datetime } = response.data;\r\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n  //       setTime(formattedTime);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching time:', error);\r\n  //     }\r\n  //   };\r\n\r\n  //   const interval = setInterval(() => {\r\n  //     if (isIntervalActive) {\r\n  //       fetchTime();\r\n  //     }\r\n  //   }, 1000);\r\n\r\n  //   return () => {\r\n  //     clearInterval(interval);\r\n  //   };\r\n  // }, [isIntervalActive]);\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n    setIsIntervalActive(false); // Pause the interval when the modal is opened\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setIsIntervalActive(true); // Resume the interval when the modal is closed\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleAddAccount = async () => {\r\n    setIsDisabled(true);\r\n    setIsLoading(true);\r\n    if (\r\n      passwordLengthLabel === false ||\r\n      passwordMatch === false ||\r\n      passwordMatchLabel === false ||\r\n      validateEmail() === false ||\r\n      isNameEmpty === true ||\r\n      isAccountType() === false\r\n    ) {\r\n      setTimeout(() => {\r\n        // Reset loading and disabled state\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n      }, 500);\r\n    } else {\r\n      try {\r\n        const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail.current?.value);\r\n        if (signInMethods.length > 0) {\r\n          // Email already exists\r\n          setIsEmailDuplicate(true);\r\n          setEmailError(false);\r\n          validateEmail(false);\r\n          setIsLoading(false);\r\n          setIsDisabled(false);\r\n          return;\r\n        }\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        await createUserWithEmailAndPassword(authForCreateUser, inputEmail.current.value, inputPassword.current.value)\r\n          .then((userCredential) => {\r\n\r\n            const user = userCredential.user;\r\n\r\n\r\n\r\n            try {\r\n\r\n              // setTime(formattedTime);\r\n\r\n              const customID = inputEmail.current.value; // Replace 'your-custom-id' with your desired custom ID\r\n              const docRef = doc(db, 'accounts', customID); // Replace 'myCollection' with the name of your desired collection\r\n              const logData = {\r\n                message: `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`,\r\n                timestamp: formattedTime,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`.toLowerCase(),\r\n                  'Account Added'.toLowerCase(),\r\n                  'Added'.toLowerCase(),\r\n                  inputName.current.value.toLowerCase(),\r\n                  typeOfAccountDisplay.toLowerCase(),\r\n                  name.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n                colorScheme: true,\r\n              };\r\n\r\n              setDoc(docRef, {\r\n                // Specify the data you want to add to the document\r\n                email: inputEmail.current?.value,\r\n                name: inputName.current?.value,\r\n                pass: inputPassword.current?.value,\r\n                type: typeOfAccount,\r\n                typeDisplay: typeOfAccountDisplay,\r\n                dateOfCreation: formattedTime,\r\n                lastUpdatedDate: formattedTime,\r\n                active: true,\r\n                // ...\r\n              });\r\n\r\n              addLogToCollection(logData);\r\n              console.log(logData);\r\n              console.log(formattedTime);\r\n              setIsLoading(false);\r\n              setIsDisabled(false);\r\n              handleClear();\r\n              openModal();\r\n\r\n              console.log('Document added with custom ID: ', customID);\r\n            } catch (error) {\r\n              console.error('Error adding document: ', error);\r\n            }\r\n\r\n\r\n\r\n\r\n            // Reset loading and disabled state\r\n\r\n\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.log('An error occurred during sign-up. Please try again later.');\r\n            console.log(error);\r\n            setIsLoading(false);\r\n            setIsDisabled(false);\r\n          });\r\n      } catch (error) {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log('An error occurred while checking the email existence. Please try again later.');\r\n        // console.log(errorCode, errorMessage);\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    const text = '';\r\n\r\n    inputName.current.value = \"\";\r\n    inputEmail.current.value = \"\";\r\n    inputPassword.current.value = \"\";\r\n    inputConfirmPassword.current.value = \"\";\r\n    setAccountTypeAd(false);\r\n    setAccountTypeSpAd(false);\r\n    setAccountTypeDevAd(false);\r\n    setAccountType3(false);\r\n    setAccountType4(false);\r\n    setEmailError(false);\r\n    setIsEmailDuplicate(false);\r\n    setIsNameEmpty(true);\r\n\r\n    setPasswordLengthLabel(false);\r\n    setPasswordMatch(false);\r\n    setPasswordMatchLabel(true);\r\n\r\n\r\n    // setInputConfirmPassword('');\r\n    // setInputEmail('');\r\n    // setInputName('');\r\n    // setInputPassword('');\r\n\r\n\r\n  };\r\n\r\n  const registerInputRef = (index) => (ref) => {\r\n    inputRefs.current[index] = ref;\r\n  };\r\n\r\n  const handleToggleAccountTypeAd = () => {\r\n    const text = 'admin';\r\n    setAccountTypeAd(true);\r\n    setAccountTypeSpAd(false);\r\n    setAccountTypeDevAd(false);\r\n    setAccountType3(false);\r\n    setAccountType4(false);\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Admin');\r\n  };\r\n\r\n  const handleToggleAccountTypeDevAd = () => {\r\n    const text = 'devadmin';\r\n    setAccountTypeDevAd(true);\r\n\r\n    setAccountTypeAd(false);\r\n    setAccountTypeSpAd(false);\r\n    setAccountType3(false);\r\n    setAccountType4(false);\r\n    setTypeOfAccountDisplay('Developer Admin');\r\n\r\n    setTypeOfAccount(text);\r\n\r\n  };\r\n\r\n  const handleToggleAccountType3 = () => {\r\n    const text = 'staff';\r\n    setAccountType3(true);\r\n    setAccountTypeDevAd(false);\r\n    setAccountTypeAd(false);\r\n    setAccountTypeSpAd(false);\r\n    setAccountType4(false);\r\n\r\n    setTypeOfAccount(text);\r\n\r\n    setTypeOfAccountDisplay('Staff');\r\n  };\r\n\r\n  const handleToggleAccountType4 = () => {\r\n    const text = 'booking';\r\n    setAccountType4(true);\r\n    setAccountType3(false);\r\n    setAccountTypeDevAd(false);\r\n    setAccountTypeAd(false);\r\n    setAccountTypeSpAd(false);\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Booking');\r\n  };\r\n\r\n  const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"LOGS\");\r\n  }, []);\r\n\r\n  const handleToggleAddAccount = useCallback(() => {\r\n\r\n    navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  }, []);\r\n\r\n  const handleToggleAccountList = useCallback(() => {\r\n\r\n    navigation.navigate(\"ACCOUNT LIST\");\r\n  }, []);\r\n\r\n  const handleToggleAddVehicle = useCallback(() => {\r\n\r\n    navigation.navigate(\"ADD NEW VEHICLE\");\r\n  }, []);\r\n\r\n  const handleVehicleList = useCallback(() => {\r\n    navigation.navigate(\"VEHICLE LIST\");\r\n  }, []);\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            navigation.navigate('Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          navigation.navigate('Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n      listenForNameChange(documentId);\r\n    }\r\n  }, []);\r\n\r\n  const listenForNameChange = (documentId) => {\r\n    const userRef = doc(db, 'accounts', documentId);\r\n\r\n    const unsubscribe = onSnapshot(userRef, (doc) => {\r\n      if (doc.exists()) {\r\n        const name = doc.data().name;\r\n        const type = doc.data().type;\r\n        setName(name);\r\n        setType(type);\r\n        // Perform any necessary actions with the name value\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    });\r\n\r\n    // To stop listening for updates, you can call unsubscribe()\r\n    // unsubscribe();\r\n  };\r\n\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handlePasswordChange = () => {\r\n    // const inputPasswordValue = inputPassword.current?.value;\r\n    // const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    // const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    // setPasswordMatch(\r\n    //   inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    // );\r\n    // setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n    // setPasswordLengthLabel(inputPasswordValueLength >= 6);\r\n    handlePasswordStatus();\r\n  };\r\n\r\n  const handleConfirmPasswordChange = () => {\r\n    const inputPasswordValue = inputPassword.current?.value;\r\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    setPasswordMatch(\r\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    );\r\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n  };\r\n\r\n\r\n  const handlePasswordStatus = () => {\r\n    const inputPasswordValue = inputPassword.current?.value;\r\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    setPasswordMatch(\r\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    );\r\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n    setPasswordLengthLabel(inputPasswordValueLength >= 6);\r\n\r\n  };\r\n\r\n  // const isPasswordMatch = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n  //   return (\r\n  //     inputPasswordValue === inputConfirmPasswordValue &&\r\n  //     inputPasswordValueLength >= 6\r\n  //   );\r\n  // };\r\n\r\n  const isAccountType = () => {\r\n    return accountTypeDevAd || accountTypeSpAd || accountTypeAd || accountType3 || accountType4 === true;\r\n  };\r\n\r\n  // const isPasswordMatchLabel = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n  //   return inputPassword.current?.value === inputConfirmPassword.current?.value;\r\n  // };\r\n\r\n  // const isPasswordLengthLabel = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n  //   return inputPasswordValueLength >= 6;\r\n  // };\r\n\r\n\r\n  const handleEmailChange = () => {\r\n    setIsEmailDuplicate(false);\r\n    handleEmailSubmit();\r\n  };\r\n\r\n  const handleNameChange = () => {\r\n    setIsNameEmpty(inputName.current?.value === '')\r\n  };\r\n\r\n\r\n  const validateEmail = () => {\r\n    const emailValue = inputEmail.current?.value;\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    const isValid = emailRegex.test(emailValue);\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleEmailSubmit = (value) => {\r\n    setEmailError(validateEmail(value));\r\n\r\n    if (emailError) {\r\n      // console.log(emailError);\r\n      // setEmailError(validateEmail());\r\n    } else {\r\n\r\n    }\r\n  };\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(auth).then(() => {\r\n      navigation.navigate('Login');\r\n      setEmail('');\r\n      setName('');\r\n    }).catch((error) => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const handleScreenResize = () => {\r\n  //     const screenWidth = Dimensions.get('window').width;\r\n  //     setIsMobileView(screenWidth < 1200);\r\n  //   };\r\n\r\n  //   // Initial check on component mount\r\n  //   handleScreenResize();\r\n\r\n  //   // Listen for screen dimension changes\r\n  //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n  //   // Cleanup event listener on component unmount\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleScreenResize);\r\n  //   };\r\n  // }, []);\r\n\r\n  const sidebarListData = [{\r\n    title: \"VEHICLE INFORMATION INPUT\",\r\n    data: [\"Add New Vehicle\", \"Vehicle List\",]\r\n  },];\r\n\r\n  const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n  const showPopover = () => {\r\n    setShowNamePopover(true);\r\n  };\r\n\r\n  // Function to hide the Popover\r\n  const hidePopover = () => {\r\n    setShowNamePopover(false);\r\n  };\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#7B9CFF'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n  return (\r\n    <NativeBaseProvider>\r\n      <SuccessModal />\r\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#7b9cff'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={2}\r\n          borderBottomColor={'cyan.500'}\r\n\r\n        >\r\n\r\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          {showDrawerIcon && <MobileViewDrawer\r\n            selectedScreen={selectedScreen}\r\n          />}\r\n\r\n\r\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n            <FastImage\r\n              source={{\r\n                uri: logo2,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <Box flex={[1]} flexDirection=\"row\" >\r\n          {/* Sidebar */}\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen}\r\n          />\r\n\r\n          {/* Main Content */}\r\n          <Box flex={1} flexGrow={1} minHeight={0}>\r\n            {/* Main Content Content */}\r\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n\r\n              {/* <AddAccount/> */}\r\n\r\n              <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" >\r\n\r\n\r\n                <Box bgColor='#A6BCFE' w='100%' h='100%' margin={1}>\r\n                  <Center flex={1}>\r\n                    <Center px=\"3\">\r\n\r\n\r\n                      <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n                        <Text marginTop={5} marginBottom={1} fontSize={[12, 14, 16]} color={'white'} bold={'center'}>ADD ACCOUNT FOR REAL MOTOR JAPAN CONTROL HUB</Text>\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputName} onSubmitEditing={handleAddAccount} onChangeText={handleNameChange} borderColor={'white'} borderBottomColor={!isNameEmpty ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<AntDesign name=\"idcard\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Name\" placeholderTextColor='white' color='white' />\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputEmail} onChangeText={handleEmailChange} onSubmitEditing={handleAddAccount} color={!isEmailDuplicate ? 'white' : 'red.500'} borderColor={'white'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' />\r\n\r\n\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordLengthLabel ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handlePasswordChange} fontSize='16' borderColor={'white'} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\r\n                          <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n                        </Pressable>} placeholder=\"Password\" placeholderTextColor='gray' color='white' />\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputConfirmPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordMatch ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handleConfirmPasswordChange} fontSize='16' borderColor={'white'} type={show2 ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show2 ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow2(!show2)}>\r\n                          <Icon as={<MaterialIcons name={show2 ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n                        </Pressable>} placeholder=\"Confirm Password\" placeholderTextColor='white' color='white' />\r\n                        {!validateEmail() && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Invalid Email!</Text>\r\n                        )}\r\n                        {isEmailDuplicate && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\r\n                        )}\r\n                        {!passwordLengthLabel && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Password must be at least 6 characters or above!</Text>\r\n                        )}\r\n                        {!passwordMatchLabel && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Passwords do not match!</Text>\r\n                        )}\r\n\r\n                        <Text fontSize={16} color={'white'} bold>ACCOUNT TYPE:                                                             </Text>\r\n                        <Box borderColor={isAccountType() ? 'green.300' : 'red.500'} borderWidth={2}>\r\n                          <HStack space={1} justifyContent=\"center\" >\r\n                            <Button _hover={{ bgColor: accountType4 ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                              base: 90,\r\n                              md: 90,\r\n                              sm: 90,\r\n                            }} onPress={handleToggleAccountType4} bgColor={accountType4 ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Booking</Text></Button>\r\n                            <Button _hover={{ bgColor: accountType3 ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                              base: 90,\r\n                              md: 90,\r\n                              sm: 90,\r\n                            }} onPress={handleToggleAccountType3} bgColor={accountType3 ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Staff</Text></Button>\r\n                            <Button _hover={{ bgColor: accountTypeAd ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                              base: 90,\r\n                              md: 90,\r\n                              sm: 90,\r\n                            }} onPress={handleToggleAccountTypeAd} bgColor={accountTypeAd ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Admin</Text></Button>\r\n                            <Button _hover={{ bgColor: accountTypeSpAd ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                              base: 90,\r\n                              md: 90,\r\n                              sm: 90,\r\n                            }} onPress={handleToggleAccountTypeSpAd} bgColor={accountTypeSpAd ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Super Admin</Text></Button>\r\n\r\n                          </HStack>\r\n                          <HStack space={1} justifyContent=\"center\" marginTop={1}>\r\n                            <Button _hover={{ bgColor: accountTypeDevAd ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                              base: 90,\r\n                              md: 90,\r\n                              sm: 90,\r\n                            }} onPress={handleToggleAccountTypeDevAd} bgColor={accountTypeDevAd ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Dev Admin</Text></Button>\r\n                          </HStack>\r\n                        </Box>\r\n                        <HStack space={1} justifyContent=\"center\" marginBottom={5}>\r\n                          <Button _hover={{ bgColor: '#D9D9D9', }} _pressed={{ bgColor: '#D9D9D9', }} _focus={{ bgColor: '#D9D9D9', }} bgColor='warmGray.200' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                            base: 130,\r\n                            md: 130,\r\n                            sm: 130,\r\n                          }} onPress={handleClear} ><Text style={{ color: 'gray', }}>Clear</Text></Button>\r\n                          <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                            base: 130,\r\n                            md: 130,\r\n                            sm: 130,\r\n                          }} onPress={handleAddAccount} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Add Acccount</Text>}</Button>\r\n\r\n                        </HStack>\r\n\r\n\r\n                      </Stack>\r\n\r\n                    </Center>\r\n\r\n\r\n                  </Center>\r\n\r\n\r\n                </Box>\r\n\r\n              </Box>\r\n\r\n            </ScrollView>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </NativeBaseProvider>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  Image as NativeImage,\r\n  Input,\r\n  Modal,\r\n  NativeBaseProvider,\r\n  Popover,\r\n  Pressable,\r\n  Spinner,\r\n  Text,\r\n  VStack,\r\n  useBreakpointValue,\r\n  TextArea,\r\n  InputRightAddon,\r\n  InputGroup,\r\n  Select,\r\n  CheckIcon,\r\n  ScrollView,\r\n  PresenceTransition,\r\n  Drawer,\r\n  InputLeftAddon,\r\n  Heading,\r\n  FormControl,\r\n  WarningOutlineIcon\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useCallback, useMemo, useLayoutEffect } from 'react';\r\nimport { Dimensions, TouchableOpacity, StyleSheet, Platform } from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject, } from 'firebase/storage';\r\nimport { DragSortableView } from \"react-native-drag-sort\";\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport SelectDropdown from 'react-native-select-dropdown';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { cloneDeep } from 'lodash';\r\nimport ImageMarker, { Position } from \"react-native-image-marker\";\r\n\r\n\r\n\r\nimport {\r\n  // setModelData,\r\n  setMakeData,\r\n  setIsLoading,\r\n  setSelectedImages,\r\n  setIsAddPhotoVisible,\r\n  setAddAnotherImages,\r\n  setLoginName,\r\n  setDeleteImageVisible,\r\n  setExpenseNameData,\r\n  setPaidToData,\r\n  setCurrentDate,\r\n  setSupplyChainsCostsData,\r\n  setSelectedExpenseName,\r\n  setSelectedPaidTo,\r\n  setLoadingModalVisible,\r\n  setIsSuccessModalOpen,\r\n  setIsUpdateSuccessModalOpen\r\n\r\n} from './redux/store'\r\n\r\n\r\nimport \"setimmediate\";\r\n\r\n\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css'; // Import a CSS effect for the lazy loading transition\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\n\r\nimport { AutocompleteDropdown, AutocompleteDropdownContextProvider } from 'react-native-autocomplete-dropdown';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst { width } = Dimensions.get('window');\r\n\r\n\r\nconst childrenWidth = 76;\r\nconst childrenHeight = 76;\r\nconst marginChildrenTop = 7;\r\nconst marginChildrenBottom = 0;\r\n\r\nlet globalJpyToUsd = '';\r\nlet globalUsdToJpy = '';\r\n\r\nlet globalSupplyChainCostsData = [];\r\nlet globalSelectedExpenseName = '';\r\nlet globalSupplyChainCostsAmount = 0;\r\nlet globalSelectedPaidTo = '';\r\nlet globalModelDataVariable = [];\r\nlet globalMakeDataVariable = [];\r\nlet globalRegYearDataVariable = [];\r\nlet globalPortDataVariable = [];\r\nlet globalSalesDataVariable = [];\r\nlet globalBuyerDataVariable = [];\r\nlet globalTransmissionDataVariable = [];\r\nlet globalExteriorColorDataVariable = [];\r\nlet globalFuelDataVariable = [];\r\nlet globalDriveTypeDataVariable = [];\r\nlet globalBodyTypeDataVariable = [];\r\nlet globalSelectedImages = [];\r\nlet globalVehicleFolderName = '';\r\nlet selectedScreen = 'ADD NEW VEHICLE'\r\nlet globalReferenceNumber = '';\r\nlet globalSPCSelectedDate = '';\r\nlet globalFobPrice = '';\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst UpdateSuccessModal = ({ onClose, bodyText, headerText }) => {\r\n\r\n  const isUpdateSuccessModalOpen = useSelector((state) => state.isUpdateSuccessModalOpen);\r\n\r\n  return (\r\n    <Modal isOpen={isUpdateSuccessModalOpen} onClose={onClose} >\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text textAlign={'center'} color={'#102A43'} bold>\r\n            😊😎 Success! 😎😊\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          justifyContent={'center'}\r\n          alignItems={'center'}\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              {headerText}\r\n              {/* Vehicle Added! */}\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              {bodyText}\r\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UploadSuccessModal = ({ onClose, bodyText, headerText }) => {\r\n\r\n  const isSuccessModalOpen = useSelector((state) => state.isSuccessModalOpen);\r\n\r\n  return (\r\n    <Modal isOpen={isSuccessModalOpen} onClose={onClose} >\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text textAlign={'center'} color={'#102A43'} bold>\r\n            😊😎 Success! 😎😊\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          justifyContent={'center'}\r\n          alignItems={'center'}\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              {headerText}\r\n              {/* Vehicle Added! */}\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              {bodyText}\r\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst LoadingModal = () => {\r\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n  return (\r\n\r\n    <Box\r\n      position=\"absolute\"\r\n      top={0}\r\n      bottom={0}\r\n      left={0}\r\n      right={0}\r\n      backgroundColor=\"rgba(0, 0, 0, 0.5)\"\r\n      flex={1}\r\n      display={loadingModalVisible ? '' : 'none'}\r\n    >\r\n      {/* Content within the modal */}\r\n      <Center flex={1}>\r\n        <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n          <Spinner size=\"lg\" color=\"white\" />\r\n          <Text color={'white'}>Loading, please wait!</Text>\r\n        </Box>\r\n      </Center>\r\n    </Box>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedExpenseName}\r\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedExpenseName = value\r\n      dispatch(setSelectedExpenseName(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Expense Name\"\r\n    placeholder=\"Choose Expense Name\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {expenseNameData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n\r\n\r\n};\r\nconst SelectPaidTo = ({ paidToIsError, }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedPaidTo}\r\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedPaidTo = value\r\n      dispatch(setSelectedPaidTo(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Paid To\"\r\n    placeholder=\"Choose Paid To\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {paidToData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n    ;\r\n};\r\n\r\n\r\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\r\n\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const handleModalCalendarOpen = () => {\r\n    setModalCalendarVisible(true);\r\n  };\r\n\r\n  const handleModalCalendarClose = () => {\r\n    setModalCalendarVisible(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <Pressable onPress={handleModalCalendarOpen} flex={3}>\r\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n      </Pressable>\r\n\r\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n        <Modal.CloseButton />\r\n        <Modal.Content>\r\n          <Box height={'full'} flex={1}>\r\n\r\n            <Calendar\r\n              onDayPress={useCallback(day => {\r\n                setSelectedDate(day.dateString);\r\n                // console.log(day.dateString);\r\n                globalSPCSelectedDate = day.dateString;\r\n                handleModalCalendarClose();\r\n              }, [])}\r\n              markedDates={{\r\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n              }}\r\n              renderArrow={(direction) => (\r\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n              )}\r\n              enableSwipeMonths={true}\r\n              initialDate={selectedDate}\r\n              showSixWeeks />\r\n\r\n          </Box>\r\n\r\n        </Modal.Content>\r\n\r\n      </Modal></>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst SupplyChainsCosts = ({\r\n  handleAddExpenseNameTextChange,\r\n  textAreaAddExpenseName,\r\n  inputExpenseAmount,\r\n  handleInputExpenseAmountChange,\r\n  handleAddPaidToTextChange,\r\n  paidToData,\r\n  inputCarNotes,\r\n\r\n}) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const [sccData, setSccData] = useState([]);\r\n  const currentDate = useSelector((state) => state.currentDate);\r\n  const [supplyChainsCostsModalVisible, setSupplyChainsCostsModalVisible] = useState(false);\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n\r\n  const [clearModalVisible, setClearModalVisible] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\r\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\r\n  const [paidToIsError, setPaidToIsError] = useState(false);\r\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\r\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\r\n  const selectExpenseNameRef = useRef(null);\r\n  const selectPaidToRef = useRef(null);\r\n\r\n\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsOpen = () => {\r\n    setSupplyChainsCostsModalVisible(true);\r\n  };\r\n\r\n  const handleModalSupplyChainsCostsClose = () => {\r\n    setSupplyChainsCostsModalVisible(false);\r\n    inputExpenseAmount.current?.clear();\r\n    globalSelectedExpenseName = '';\r\n    setSelectResetKey(nanoid());\r\n    globalSelectedPaidTo = '';\r\n    setSelectedDate(currentDate);\r\n    globalSPCSelectedDate = currentDate;\r\n    dispatch(setSelectedExpenseName(''));\r\n    dispatch(setSelectedPaidTo(''));\r\n    setInputAmountIsError(false);\r\n    setExpenseNameIsError(false);\r\n    setPaidToIsError(false);\r\n  };\r\n\r\n  const handleClearModalOpen = () => {\r\n    setClearModalVisible(true);\r\n  };\r\n\r\n  const handleClearModalClose = () => {\r\n    setClearModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const amounts = supplyChainsCostsData.map((item) => {\r\n      const expenseName = Object.keys(item)[0];\r\n      const expenseData = item[expenseName];\r\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n    });\r\n\r\n    // Use reduce to add up all the amounts\r\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n    const formattedTotalAmount = totalAmount.toLocaleString();\r\n    setTotalAmount(formattedTotalAmount);\r\n    globalSupplyChainCostsAmount = formattedTotalAmount;\r\n\r\n  }, [supplyChainsCostsData]);\r\n\r\n  const handleSave = useCallback(() => {\r\n\r\n\r\n\r\n    if (inputExpenseAmount.current?.value == ''\r\n      || inputExpenseAmount.current?.value == 0\r\n      || globalSelectedExpenseName == ''\r\n      || globalSelectedPaidTo == ''\r\n    ) {\r\n\r\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\r\n        setInputAmountIsError(true);\r\n      }\r\n\r\n      if (globalSelectedExpenseName == '') {\r\n        setExpenseNameIsError(true);\r\n      }\r\n\r\n      if (globalSelectedPaidTo == '') {\r\n        setPaidToIsError(true);\r\n      }\r\n    }\r\n\r\n    else {\r\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\r\n\r\n      if (existingIndex !== -1) {\r\n        // If an entry with the same expense name exists, update it\r\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\r\n        updatedData[existingIndex][globalSelectedExpenseName] = {\r\n          expenseName: globalSelectedExpenseName,\r\n          amount: inputExpenseAmount.current?.value,\r\n          date: globalSPCSelectedDate,\r\n          paidName: globalSelectedPaidTo,\r\n        };\r\n        globalSupplyChainCostsData = updatedData;\r\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n\r\n      } else {\r\n        setInputAmountIsError(false);\r\n        setExpenseNameIsError(false);\r\n        setPaidToIsError(false);\r\n        // If no entry with the same expense name exists, add a new entry\r\n        const newData = {\r\n          [globalSelectedExpenseName]: {\r\n            expenseName: globalSelectedExpenseName,\r\n            amount: inputExpenseAmount.current?.value,\r\n            date: globalSPCSelectedDate,\r\n            paidName: globalSelectedPaidTo,\r\n          },\r\n        };\r\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\r\n        console.log(globalSupplyChainCostsData);\r\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\r\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\r\n        setSelectResetKey(nanoid());\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const handleEditPress = useCallback((item) => {\r\n    console.log(item.amount);\r\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\r\n    dispatch(setSelectedExpenseName(item.expenseName));\r\n    globalSelectedExpenseName = item.expenseName;\r\n    dispatch(setSelectedPaidTo(item.paidName));\r\n    globalSelectedPaidTo = item.paidName;\r\n    globalSPCSelectedDate = item.date;\r\n    setSelectedDate(item.date);\r\n  }, [])\r\n\r\n\r\n  const handleDeleteItem = (expenseName) => {\r\n    // Find the index of the item to be deleted\r\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\r\n\r\n    if (itemIndex !== -1) {\r\n      // Create a copy of the data array and remove the item at the found index\r\n      const newData = [...globalSupplyChainCostsData];\r\n      newData.splice(itemIndex, 1);\r\n\r\n      // Update the state with the new array\r\n      dispatch(setSupplyChainsCostsData(newData));\r\n      globalSupplyChainCostsData = newData;\r\n    }\r\n  };\r\n\r\n  const handleFirstModalClose = () => {\r\n    setSupplyChainsCostsModalVisible(false);\r\n\r\n  };\r\n  const handleFirstModalOpen = () => {\r\n    setSupplyChainsCostsModalVisible(true);\r\n\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        borderRadius={3}\r\n        flex={1}\r\n        onPress={handleModalSupplyChainsCostsOpen}\r\n        variant={'outline'}\r\n        _text={{ color: 'black', }}\r\n        leftIcon={<MaterialIcons name=\"payments\" size={20} color=\"black\" />}>\r\n        <Text>Supply Chains Costs: ¥{totalAmount}</Text>\r\n      </Button>\r\n\r\n      <Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\r\n        <Modal.Content bgColor={'white'} w={'50%'} h={'auto'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header bgColor={'#7B9CFF'}>\r\n            <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\r\n\r\n\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Box height={'full'}>\r\n              <Box paddingBottom={5}>\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\r\n\r\n                    <SupplyChainsCostsSortAndAddModal\r\n                      docName='ExpenseName'\r\n                      handleAddTextChange={handleAddExpenseNameTextChange}\r\n                      textAreaAdd={textAreaAddExpenseName}\r\n                      title='Expense Name'\r\n                      dataName={'expenseName'}\r\n                      databaseInit={projectExtensionFirestore}\r\n                      headerText=\"Rearrange/Add Expense Name\"\r\n                      data={expenseNameData}\r\n                      handleFirstModalClose={handleFirstModalClose}\r\n                      handleFirstModalOpen={handleFirstModalOpen}\r\n                    />\r\n                  </Box>\r\n\r\n                  <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\r\n                  {/* <Select\r\n                    // ref={selectExpenseNameRef}\r\n                    key={`expenseName${resetKey}`}\r\n                    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n                    flex={3}\r\n                    onValueChange={(value) => {\r\n                      globalSelectedExpenseName = value\r\n                    }}\r\n                    accessibilityLabel=\"Choose Expense Name\"\r\n                    placeholder=\"Choose Expense Name\"\r\n                    _selectedItem={{\r\n                      bg: \"teal.600\",\r\n                      endIcon: <CheckIcon size=\"5\" />\r\n                    }}>\r\n                    {expenseNameData.map((item) => (\r\n\r\n                      <Select.Item key={item} label={item} value={item} />\r\n\r\n                    ))}\r\n                  </Select> */}\r\n\r\n\r\n                </Box>\r\n\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1} >Amount</Text>\r\n                  </Box>\r\n                  <Input\r\n                    borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\r\n                    flex={3}\r\n                    ref={inputExpenseAmount}\r\n                    onChangeText={handleInputExpenseAmountChange}\r\n                    placeholder=\"Amount\"\r\n                    bgColor={'white'}\r\n                    placeholderTextColor={'muted.400'}\r\n                    InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\r\n                </Box>\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\r\n                  </Box>\r\n\r\n                  <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\r\n                </Box>\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\r\n\r\n\r\n                    <SupplyChainsCostsSortAndAddModal\r\n                      docName='PaidTo'\r\n                      handleAddTextChange={handleAddPaidToTextChange}\r\n                      textAreaAdd={textAreaAddExpenseName}\r\n                      title='Paid To'\r\n                      dataName={'paidTo'}\r\n                      databaseInit={projectExtensionFirestore}\r\n                      headerText=\"Rearrange/Add Paid To\"\r\n                      data={paidToData}\r\n                      handleFirstModalClose={handleFirstModalClose}\r\n                      handleFirstModalOpen={handleFirstModalOpen}\r\n                    />\r\n\r\n                  </Box>\r\n\r\n                  <SelectPaidTo paidToIsError={paidToIsError} />\r\n                </Box>\r\n\r\n                <Button\r\n                  onPress={handleSave}\r\n                  colorScheme={'success'}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                  margin={1}\r\n                  flex={1}\r\n                  width={'40%'}\r\n                  alignSelf={'center'}\r\n                  leftIcon={<MaterialIcons name='add' color='white' size={20} />}\r\n                >\r\n                  ADD\r\n                </Button>\r\n              </Box>\r\n\r\n              <Box>\r\n                <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\r\n                </Box>\r\n                {supplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n\r\n                  return (\r\n                    <Box key={index} flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\r\n                      justifyContent={'center'} alignItems={'center'}>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      <Box flex={1} marginLeft={1} flexDir={'row'}>\r\n\r\n                        <Pressable flex={1} margin={1} onPress={() => handleEditPress(expenseData)}>\r\n                          {({\r\n                            isHovered,\r\n                            isFocused,\r\n                            isPressed\r\n                          }) => {\r\n                            return <Box flex={1} bgColor={isHovered ? 'primary.700' : 'primary.500'} borderRadius={3}>\r\n                              <Text flex={1} textAlign={'center'} color={'white'}>Edit</Text>\r\n                            </Box>\r\n                          }}\r\n                        </Pressable>\r\n\r\n                        <Pressable flex={1} margin={1} onPress={() => handleDeleteItem(expenseData.expenseName)}>\r\n                          {({\r\n                            isHovered,\r\n                            isFocused,\r\n                            isPressed\r\n                          }) => {\r\n                            return <Box flex={1} bgColor={isHovered ? 'error.800' : 'error.500'} borderRadius={3}>\r\n                              <Text flex={1} textAlign={'center'} color={'white'}>Delete</Text>\r\n                            </Box>\r\n                          }}\r\n                        </Pressable>\r\n                      </Box>\r\n                    </Box>\r\n                  );\r\n                })}\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n\r\n          </Modal.Body>\r\n\r\n\r\n          <HStack space={5} width={'full'} justifyContent={'space-between'}>\r\n            <Box flex={4} />\r\n            <Button\r\n              onPress={handleModalSupplyChainsCostsClose}\r\n              colorScheme={'gray'}\r\n              size={'sm'}\r\n              borderRadius={5}\r\n              margin={1}\r\n              flex={1}\r\n            >\r\n              Close\r\n            </Button>\r\n          </HStack>\r\n\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n        <Modal.Content bgColor={'amber.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'amber.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'amber.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'amber.600'} bold>\r\n                Warning!\r\n              </Text>\r\n              <Text color={'amber.600'}>\r\n                Are you sure you want to clear?\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleClearModalClose}\r\n                colorScheme={'warmGray'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button\r\n                onPress={() => {\r\n\r\n                }}\r\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                Clear\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = projectControlAuth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nconst storage = getStorage(projectExtensionFirebase);\r\n\r\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\r\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n\r\n  const handleModalDeleteOpen = () => {\r\n    setModalDeleteImagesVisible(true);\r\n  };\r\n\r\n  const handleModalDeleteClose = () => {\r\n    setModalDeleteImagesVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        position=\"absolute\"\r\n        top={0}\r\n        right={0}\r\n        bg=\"error.500\"\r\n        borderRadius={3}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        display={isAddPhotoVisible ? 'none' : 'block'}\r\n      >\r\n        <Pressable onPress={handleModalDeleteOpen} flex={1}>\r\n          <Icon as={<Ionicons name=\"trash-sharp\" />} size={5} color=\"white\" cursor={'pointer'} />\r\n        </Pressable>\r\n      </Box>\r\n\r\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\r\n        <Modal.Content bgColor={'error.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear Images\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'error.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.400'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.500'} bold>\r\n                Alert!\r\n              </Text>\r\n              <Text color={'danger.500'}>\r\n                Are you sure you want to clear <Text color={'danger.500'} bold>{selectedImages.length} </Text>selected image(s)?\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalDeleteClose} colorScheme={'warmGray'} flex={1} size={'sm'} borderRadius={5}>\r\n                No\r\n              </Button>\r\n              <Button onPress={handleClearImages} flex={1} size={'sm'} colorScheme={'error'} borderRadius={5}>\r\n                Clear Images\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\r\n  const dispatch = useDispatch();\r\n  const { width } = Dimensions.get('window');\r\n\r\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  const [boolean, setBoolean] = useState(true);\r\n  const selectedImages = useSelector((state) => state.selectedImages);\r\n  // const [selectedImages, setSelectedImages] = useState([]);\r\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\r\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\r\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\r\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\r\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n  const [scrollEnabled, setscrollEnabled] = useState(true);\r\n  const [isEnterEdit, setisEnterEdit] = useState(false);\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setIsCursorLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    dropdown: {\r\n      margin: 16,\r\n      height: 50,\r\n      borderBottomColor: 'gray',\r\n      borderBottomWidth: 0.5,\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n      fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n      height: 40,\r\n      fontSize: 16,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 20,\r\n\r\n    },\r\n    txt: {\r\n      fontSize: 18,\r\n      lineHeight: 24,\r\n      padding: 5\r\n    },\r\n    sort: {\r\n    },\r\n    item_children: {\r\n      width: 90,\r\n      height: 90,\r\n      backgroundColor: 'black',\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    item_delete_icon: {\r\n      width: 14,\r\n      height: 14,\r\n      position: \"absolute\",\r\n      right: 1,\r\n      top: 1\r\n    },\r\n    item_icon: {\r\n      width: 90,\r\n      height: 90,\r\n      resizeMode: \"contain\",\r\n      position: \"absolute\"\r\n    }\r\n  });\r\n\r\n  const handleImageAddToSelection = async () => {\r\n    dispatch(setDeleteImageVisible(true));\r\n    if (selectedImages.length === 40) {\r\n      return; // Limit reached, do not add a new image\r\n    }\r\n\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Filter out images larger than 10MB\r\n      const newImages = [...selectedImages];\r\n      const promises = response.assets.map(async (asset) => {\r\n        const file = await fetch(asset.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          const exists = newImages.some((image) => image.uri === asset.uri);\r\n          if (!exists) {\r\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\r\n          }\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      });\r\n\r\n      await Promise.all(promises);\r\n\r\n      const limitedImages = newImages.slice(0, 40);\r\n      dispatch(setSelectedImages(limitedImages));\r\n      globalSelectedImages = limitedImages;\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      // limitedImages.forEach((image) => {\r\n      //   console.log(`File size: ${image.fileSize}`);\r\n      // });\r\n\r\n    } catch (error) {\r\n      console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n  const reloadData = useCallback(() => {\r\n    if (selectedImages.length > 0) {\r\n      // ... Logic to reload data using selectedImages and width\r\n\r\n      // Assuming your logic has updated selectedImages, you can directly use it here\r\n      const updatedSelectedImages = [...selectedImages];\r\n\r\n      // Dispatch the updatedSelectedImages array to the state\r\n      dispatch(setSelectedImages(updatedSelectedImages));\r\n    }\r\n\r\n  }, [widthState]);\r\n\r\n  useEffect(() => {\r\n    const handleWidthChange = ({ window }) => {\r\n      setWidthState(window.width);\r\n    };\r\n\r\n    Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n    return () => {\r\n      Dimensions.removeEventListener('change', handleWidthChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, [reloadData]);\r\n\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    setModalDeleteImagesVisible(false);\r\n    // dispatch(setSelectedImages([]));\r\n    // globalSelectedImages = [];\r\n    // dispatch(setIsAddPhotoVisible(true));\r\n    // dispatch(setAddAnotherImages(false));\r\n    // dispatch(setDeleteImageVisible(true));\r\n    handleClearImagesExtra();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const renderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleImageSelection = async () => {\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40,\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Remove duplicates from the selected images\r\n      const uniqueImages = response.assets.filter(\r\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\r\n      );\r\n\r\n      // Filter out images larger than 10MB\r\n      const filteredImages = [];\r\n      const imageOrder = [];\r\n      for (let index = 0; index < uniqueImages.length; index++) {\r\n        const image = uniqueImages[index];\r\n        const file = await fetch(image.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          filteredImages.push(image);\r\n          imageOrder.push(index);\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      }\r\n\r\n\r\n      // Sort the filtered images based on their original order\r\n      const sortedImages = filteredImages.sort((a, b) => {\r\n        const indexA = imageOrder[filteredImages.indexOf(a)];\r\n        const indexB = imageOrder[filteredImages.indexOf(b)];\r\n        return indexA - indexB;\r\n      });\r\n\r\n\r\n\r\n      // Limit the number of selected images to 40\r\n      const limitedImages = sortedImages.slice(0, 40);\r\n\r\n      globalSelectedImages = limitedImages;\r\n      if (limitedImages.length > 0) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(true));\r\n      }\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      dispatch(setSelectedImages(globalSelectedImages));\r\n\r\n    } catch (error) {\r\n      console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleDeleteImagePress = useCallback((uri) => {\r\n\r\n    globalSelectedImages = globalSelectedImages.filter((item) => {\r\n      // Replace 'uriToDelete' with the URI you want to delete\r\n      return item.uri !== uri;\r\n    });\r\n\r\n    if (globalSelectedImages.length < 40) {\r\n      dispatch(setAddAnotherImages(true));\r\n    }\r\n\r\n    if (globalSelectedImages.length == 0) {\r\n      dispatch(setAddAnotherImages(false));\r\n      dispatch(setIsAddPhotoVisible(true));\r\n    }\r\n    dispatch(setSelectedImages(globalSelectedImages));\r\n    // dispatch(setSelectedImages((prevImages) => {\r\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\r\n\r\n    //   if (updatedImages.length < 40) {\r\n    //     dispatch(setAddAnotherImages(true));\r\n    //   }\r\n    //   if (updatedImages.length == 0) {\r\n    //    dispatch(setAddAnotherImages(false));\r\n    //     dispatch(setIsAddPhotoVisible(true));\r\n    //   }\r\n    //   return updatedImages;\r\n    // }));\r\n\r\n    // console.log(globalSelectedImages.map((item) => item.uri));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\r\n\r\n\r\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\r\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\r\n\r\n            <ClearImagesModal\r\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\r\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\r\n              handleClearImages={handleClearImages}\r\n              selectedImages={selectedImages}\r\n              isAddPhotoVisible={isAddPhotoVisible} />\r\n\r\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\r\n\r\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"white\" />\r\n\r\n\r\n              <ScrollView\r\n                scrollEnabled={scrollEnabled}\r\n                flex={1}\r\n              >\r\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\r\n\r\n\r\n                  <DragSortableView\r\n\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    delayLongPress={100}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onDragStart={useCallback(() => {\r\n                      if (!isEnterEdit) {\r\n                        setisEnterEdit(true);\r\n                        setscrollEnabled(false);\r\n                      } else {\r\n                        setscrollEnabled(false);\r\n                      }\r\n                    }, [])}\r\n                    onDragEnd={useCallback(() => {\r\n                      setscrollEnabled(true);\r\n                    }, [])}\r\n                    onDataChange={useCallback((data) => {\r\n\r\n                      if (data.length !== data) {\r\n                        dispatch(setSelectedImages(data));\r\n                        globalSelectedImages = data;\r\n                      }\r\n\r\n                    }, [])}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => renderItem(item, index), [])} />\r\n\r\n                  <Center>\r\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"white\" />\r\n                  </Center>\r\n\r\n                </Box>\r\n\r\n\r\n\r\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    sortable={false}\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\r\n\r\n                </Box>\r\n              </ScrollView>\r\n\r\n\r\n\r\n\r\n            </Box>\r\n\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={0}\r\n              left={0}\r\n              borderRadius={3}\r\n              bgColor={'rgba(0, 0, 0, 0.5)'}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              display={isAddPhotoVisible ? 'none' : 'block'}>\r\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\r\n            </Box>\r\n          </Box>\r\n\r\n        </ScrollView>\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      {/* </Box> */}\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'}>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} >\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Please select image(s) smaller than 10MB!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst SuccessFailModal = ({ isSuccessOpen, isFailedOpen, handleFailModalClose, inputStockIDNumber, handleSuccessModalClose }) => {\r\n  const okSuccessButtonRef = useRef(null);\r\n  const okFailButtonRef = useRef(null);\r\n\r\n  return (\r\n    <><Modal isOpen={isSuccessOpen} onClose={handleSuccessModalClose} initialFocusRef={okSuccessButtonRef} finalFocusRef={inputStockIDNumber}>\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text color={'#102A43'} bold>\r\n            Success!\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              Success!\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              Stock ID Exist!\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button ref={okSuccessButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleSuccessModalClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n      <Modal isOpen={isFailedOpen} onClose={handleFailModalClose} initialFocusRef={okFailButtonRef} finalFocusRef={inputStockIDNumber} >\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Stock ID Do Not Exist!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button ref={okFailButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleFailModalClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal></>\r\n  );\r\n}\r\n\r\n\r\nconst StockIDAndMakeAndModel = ({\r\n  selectStockStatus,\r\n  handleSetBordersWhite,\r\n  inputFobUsd,\r\n  handleClearIfError,\r\n  monthNumbers,\r\n  steeringData,\r\n  selectPort,\r\n  selectSales,\r\n  selectBuyer,\r\n  inputRefNum,\r\n  inputChassis,\r\n  inputModelCode,\r\n  inputEngineCode,\r\n  inputEngineDis,\r\n  selectSteering,\r\n  inputMileage,\r\n  selectTransmission,\r\n  selectExteriorColor,\r\n  inputNumOfSeats,\r\n  inputDoors,\r\n  inputPurchasedPrice,\r\n  selectFuel,\r\n  inputDimensionLength,\r\n  inputDimensionWidth,\r\n  inputDimensionHeight,\r\n  inputDimensionCubicMeters,\r\n  selectDriveType,\r\n  inputWeight,\r\n  selectBodyType,\r\n  inputCarName,\r\n  inputCarDesc,\r\n  inputFobJpy,\r\n  selectRegYear,\r\n  selectRegMonth,\r\n  setRefNumFromSelects,\r\n  inputStockIDNumber,\r\n  stockIDNumError,\r\n  selectMakeForModelRef,\r\n  textAreaAddModel,\r\n  selectMakeForAddModelRef,\r\n  handleAddMakeTextChange,\r\n  textAreaAddMake,\r\n  makeError,\r\n  modelError,\r\n  selectMakeBoxRef,\r\n  selectMakeRef,\r\n  selectModelRef,\r\n  selectModelBoxRef,\r\n  setCarNameFromSelects,\r\n  setCarNameFromSelectsModel,\r\n  inputCarNotes,\r\n  inputCarMemo,\r\n  purchasedPriceError,\r\n  handleInputPurchasedPriceChange }) => {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  // const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const makeData = useSelector((state) => state.makeData);\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const portData = useSelector((state) => state.portData);\r\n  // const isLoading = useSelector((state) => state.isLoading);\r\n  const transmissionData = useSelector((state) => state.transmissionData);\r\n  const fuelData = useSelector((state) => state.fuelData);\r\n  const buyerData = useSelector((state) => state.buyerData);\r\n  const salesData = useSelector((state) => state.salesData);\r\n  const driveTypeData = useSelector((state) => state.driveTypeData);\r\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\r\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\r\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\r\n  // const usdToJpy = useSelector((state) => state.usdToJpy);\r\n\r\n\r\n  const [modelData, setModelData] = useState([]);\r\n  const [isSearchLoading, setIsSearchLoading] = useState(false);\r\n  const [isSuccessOpen, setIsSuccessOpen] = useState(false);\r\n  const [isFailedOpen, setIsFailedOpen] = useState(false);\r\n  const [fetchedData, setFetchedData] = useState([]);\r\n  const [model, setModel] = useState('');\r\n  const [key, setKey] = useState(0);\r\n  // useEffect(() => {\r\n\r\n  //   selectModelRef.current.selectIndex(modelData.indexOf(model));\r\n  //   console.log(model);\r\n  // }, [modelData]);\r\n\r\n  // const exportFunction = () => {\r\n  //   const clearModelData = () =>{\r\n  //       setModelData([]);\r\n  //   };\r\n\r\n  //   return clearModelData;\r\n  // }\r\n\r\n  const handleInputFobJpyChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    // console.log(globalJpyToUsd);\r\n    // Check if the numeric value starts with 0\r\n    if (numericValue.startsWith('0')) {\r\n      // Handle the case when the value starts with 0\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n      return;\r\n    }\r\n\r\n    // Truncate the numeric value to a maximum of 9 digits\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n    if (formattedValue !== '') {\r\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\r\n\r\n      if (!isNaN(multipliedValue)) {\r\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\r\n      } else {\r\n        // Handle the case when the multipliedValue is NaN\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: '' });\r\n      }\r\n    } else {\r\n      // Handle the case when formattedValue is empty\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n    }\r\n  };\r\n\r\n\r\n  const getImages = useCallback(async (folderName) => {\r\n    // const dispatch = useDispatch();\r\n    dispatch(setLoadingModalVisible(true));\r\n    try {\r\n\r\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\r\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n\r\n      const urls = await Promise.all(\r\n        imageRefs.items.map(async (itemRef) => {\r\n          const uri = await getDownloadURL(itemRef);\r\n          return { uri, fileName: itemRef.name };\r\n        })\r\n      );\r\n\r\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\r\n      urls.sort((a, b) => {\r\n        const fileNameA = parseInt(a.fileName);\r\n        const fileNameB = parseInt(b.fileName);\r\n        return fileNameA - fileNameB;\r\n      });\r\n\r\n      if (urls.length > 0) {\r\n        dispatch(setDeleteImageVisible(false));\r\n        dispatch(setSelectedImages(urls));\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n        globalSelectedImages = urls;\r\n\r\n      }\r\n\r\n      else {\r\n        dispatch(setDeleteImageVisible(true));\r\n        dispatch(setIsAddPhotoVisible(true));\r\n        dispatch(setAddAnotherImages(false));\r\n        dispatch(setSelectedImages([]));\r\n        dispatch(setDeleteImageVisible(true));\r\n        globalSelectedImages = [];\r\n      }\r\n\r\n\r\n      console.log(urls);\r\n\r\n    } catch (error) {\r\n      // Handle any errors that may occur during the Firebase operations\r\n      console.error('Error getting image URLs:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleSearchPress = useCallback(async () => {\r\n\r\n\r\n    if (inputStockIDNumber.current?.value !== '') {\r\n      dispatch(setLoadingModalVisible(true));\r\n      setIsSearchLoading(true);\r\n      setIsSuccessOpen(false);\r\n      setIsFailedOpen(false);\r\n\r\n      const q = query(collection(projectExtensionFirestore, 'VehicleProducts'), where('stockID', '==', inputStockIDNumber.current?.value));\r\n\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      if (querySnapshot.empty) {\r\n        console.log('No documents found');\r\n        // setIsLoading(false);\r\n        dispatch(setDeleteImageVisible(true));\r\n        setIsSearchLoading(false);\r\n        setIsFailedOpen(true);\r\n        dispatch(setIsAddPhotoVisible(true));\r\n        dispatch(setAddAnotherImages(false));\r\n        dispatch(setSelectedImages([]));\r\n        globalSelectedImages = [];\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n      }\r\n\r\n\r\n      else {\r\n\r\n        // dispatch(setSelectedImages([]));\r\n        // globalSelectedImages = [];\r\n\r\n        querySnapshot.forEach(async (item) => {\r\n          const data = item.data();\r\n          selectModelRef.current.reset();\r\n          // console.log(item.id, \" => \", item.data().make);\r\n          setIsSearchLoading(false);\r\n          // setIsSuccessOpen(true);\r\n\r\n          // fetchModelData();\r\n          // setModel(data.model);\r\n\r\n          // console.log(portData);    \r\n          async function fetchDataAndSelectIndex() {\r\n            try {\r\n              const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\r\n              const docSnapshot = await getDoc(collectionRef);\r\n              if (docSnapshot.exists()) {\r\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n              }\r\n            } catch (error) {\r\n              console.error('Error fetching models data from Firebase: ', error);\r\n            }\r\n          }\r\n\r\n          try {\r\n            const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\r\n            const docSnapshot = await getDoc(collectionRef);\r\n            if (docSnapshot.exists()) {\r\n              const modelsDataFromFirebase = docSnapshot.data().model;\r\n              setModelData(modelsDataFromFirebase);\r\n              globalModelDataVariable = modelsDataFromFirebase;\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching models data from Firebase: ', error);\r\n          }\r\n\r\n          handleSetBordersWhite();\r\n          fetchDataAndSelectIndex();\r\n          selectStockStatus.current.selectIndex(stockStatusData.indexOf(data.stockStatus));\r\n          selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\r\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\r\n          selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(parseInt(data.regYear, 10)));\r\n          selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\r\n          selectPort.current.selectIndex(portData.findIndex(item => item.id === data.portID));\r\n          selectSales.current.selectIndex(salesData.findIndex(item => item.id === data.salesID));\r\n          selectBuyer.current.selectIndex(buyerData.findIndex(item => item.id === data.buyerID));\r\n          inputRefNum.current.setNativeProps({ text: data.referenceNumber || '' });\r\n          inputChassis.current.setNativeProps({ text: data.chassisNumber || '' });\r\n          inputModelCode.current.setNativeProps({ text: data.modelCode || '' });\r\n          inputEngineCode.current.setNativeProps({ text: data.engineCode || '' });\r\n          inputEngineDis.current.setNativeProps({ text: data.engineDisplacement ? data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\r\n          inputMileage.current.setNativeProps({ text: data.mileage ? data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\r\n          selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\r\n          inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats || '' });\r\n          inputDoors.current.setNativeProps({ text: data.doors || '' });\r\n          inputPurchasedPrice.current.setNativeProps({ text: data.purchasedPrice ? data.purchasedPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\").toString() : '' });\r\n          selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\r\n          inputDimensionLength.current.setNativeProps({ text: data.dimensionLength ? data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth ? data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight ? data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters || '' });\r\n          selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\r\n          inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\r\n          selectBodyType.current.selectIndex(bodyTypeData.findIndex(item => item.toLowerCase() === data.bodyType.toLowerCase()));\r\n          inputCarName.current.setNativeProps({ text: data.carName || '' });\r\n          inputCarDesc.current.setNativeProps({ text: data.carDescription || '' });\r\n          inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          globalFobPrice = data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '';\r\n          handleInputFobJpyChange(data.fobPrice ? data.fobPrice : \"0\");\r\n          // selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\r\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\r\n          // selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\r\n          // selectPort.current.selectIndex(portData.findIndex(item => item.name === data.port));\r\n          // selectSales.current.selectIndex(salesData.findIndex(item => item.name === data.sales));\r\n          // selectBuyer.current.selectIndex(buyerData.findIndex(item => item.name === data.buyer));\r\n          // inputRefNum.current.setNativeProps({ text: data.referenceNumber });\r\n          // inputChassis.current.setNativeProps({ text: data.chassisNumber });\r\n          // inputModelCode.current.setNativeProps({ text: data.modelCode });\r\n          // inputEngineCode.current.setNativeProps({ text: data.engineCode });\r\n          // inputEngineDis.current.setNativeProps({ text: data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\r\n          // inputMileage.current.setNativeProps({ text: data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\r\n          // selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\r\n          // inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats });\r\n          // inputDoors.current.setNativeProps({ text: data.doors });\r\n          // selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\r\n          // inputDimensionLength.current.setNativeProps({ text: data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters });\r\n          // selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\r\n          // inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});          \r\n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\r\n          // inputCarName.current.setNativeProps({ text: data.carName });\r\n          // inputCarDesc.current.setNativeProps({ text: data.carDescription });\r\n          // inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});\r\n          // handleInputFobJpyChange(data.fobPrice);\r\n\r\n          if (data.notes == undefined) {\r\n            inputCarNotes.current.setNativeProps({ text: '' });\r\n          }\r\n          else {\r\n            inputCarNotes.current.setNativeProps({ text: data.notes });\r\n          }\r\n\r\n          if (data.memo == undefined) {\r\n            inputCarMemo.current.setNativeProps({ text: '' });\r\n\r\n          }\r\n          else {\r\n            inputCarMemo.current.setNativeProps({ text: data.memo });\r\n\r\n          }\r\n\r\n          featuresState.SafetySystemAnBrSy = data.SafetySystemAnBrSy;\r\n          featuresState.SafetySystemDrAi = data.SafetySystemDrAi;\r\n          featuresState.SafetySystemPaAi = data.SafetySystemPaAi;\r\n          featuresState.SafetySystemSiAi = data.SafetySystemSiAi;\r\n          featuresState.ComfortAiCoFr = data.ComfortAiCoFr;\r\n          featuresState.ComfortAiCoRe = data.ComfortAiCoRe;\r\n          featuresState.ComfortAMFMRa = data.ComfortAMFMRa;\r\n          featuresState.ComfortAMFMSt = data.ComfortAMFMSt;\r\n          featuresState.ComfortCDPl = data.ComfortCDPl;\r\n          featuresState.ComfortCDCh = data.ComfortCDCh;\r\n          featuresState.ComfortCrSpCo = data.ComfortCrSpCo;\r\n          featuresState.ComfortDiSp = data.ComfortDiSp;\r\n          featuresState.ComfortDVDPl = data.ComfortDVDPl;\r\n          featuresState.ComfortHDD = data.ComfortHDD;\r\n          featuresState.ComfortNaSyGPS = data.ComfortNaSyGPS;\r\n          featuresState.ComfortPoSt = data.ComfortPoSt;\r\n          featuresState.ComfortPrAuSy = data.ComfortPrAuSy;\r\n          featuresState.ComfortReKeSy = data.ComfortReKeSy;\r\n          featuresState.ComfortTiStWh = data.ComfortTiStWh;\r\n          featuresState.InteriorLeSe = data.InteriorLeSe;\r\n          featuresState.InteriorPoDoLo = data.InteriorPoDoLo;\r\n          featuresState.InteriorPoMi = data.InteriorPoMi;\r\n          featuresState.InteriorPoSe = data.InteriorPoSe;\r\n          featuresState.InteriorPoWi = data.InteriorPoWi;\r\n          featuresState.InteriorReWiDe = data.InteriorReWiDe;\r\n          featuresState.InteriorReWiWi = data.InteriorReWiWi;\r\n          featuresState.InteriorThRoSe = data.InteriorThRoSe;\r\n          featuresState.InteriorTiGl = data.InteriorTiGl;\r\n          featuresState.ExteriorAlWh = data.ExteriorAlWh;\r\n          featuresState.ExteriorPoSlDo = data.ExteriorPoSlDo;\r\n          featuresState.ExteriorSuRo = data.ExteriorSuRo;\r\n          featuresState.SellingPointsCuWh = data.SellingPointsCuWh;\r\n          featuresState.SellingPointsFuLo = data.SellingPointsFuLo;\r\n          featuresState.SellingPointsMaHiAv = data.SellingPointsMaHiAv;\r\n          featuresState.SellingPointsBrNeTi = data.SellingPointsBrNeTi;\r\n          featuresState.SellingPointsNoAcHi = data.SellingPointsNoAcHi;\r\n          featuresState.SellingPointsNoSmPrOw = data.SellingPointsNoSmPrOw;\r\n          featuresState.SellingPointsOnOwHi = data.SellingPointsOnOwHi;\r\n          featuresState.SellingPointsPeRaTi = data.SellingPointsPeRaTi;\r\n          featuresState.SellingPointsReBo = data.SellingPointsReBo;\r\n          featuresState.SellingPointsTuEn = data.SellingPointsTuEn;\r\n          featuresState.SellingPointsUpAuSy = data.SellingPointsUpAuSy;\r\n\r\n          resetKey++;\r\n\r\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\r\n          makeVariable.text = data.make ? data.make : \"\";\r\n          modelVariable.text = data.model ? data.model : \"\";\r\n          regYearVariable.text = data.regYear ? data.regYear : \"\";\r\n          regMonthVariable.text = data.regMonth ? data.regMonth : \"\";\r\n          portVariable.text = data.port ? data.port : \"\";\r\n          salesVariable.text = data.sales ? data.sales : \"\";\r\n          buyerVariable.text = data.buyer ? data.buyer : \"\";\r\n          portVariable.id = data.portID ? data.portID : \"\";\r\n          salesVariable.id = data.salesID ? data.salesID : \"\";\r\n          buyerVariable.id = data.buyerID ? data.buyerID : \"\";\r\n          referenceNumberVariable.text = data.referenceNumber ? data.referenceNumber : \"\";\r\n          globalVehicleFolderName = data.stockID ? data.stockID : \"\";\r\n          steeringVariable.text = data.steering ? data.steering : \"\";\r\n          transmissionVariable.text = data.transmission ? data.transmission : \"\";\r\n          exteriorColorVariable.text = data.exteriorColor ? data.exteriorColor : \"\";\r\n          fuelVariable.text = data.fuel ? data.fuel : \"\";\r\n          driveTypeVariable.text = data.driveType ? data.driveType : \"\";\r\n          bodyTypeVariable.text = data.bodyType ? data.bodyType : \"\";\r\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\r\n          globalSupplyChainCostsData = data.supplyChainsCostsData ? data.supplyChainsCostsData : [];\r\n          dispatch(setSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\r\n\r\n          await getImages(globalVehicleFolderName);\r\n\r\n          dispatch(setLoadingModalVisible(false));\r\n\r\n          // const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), makeVariable.text), (snapshot) => {\r\n          //   setModelData(snapshot.data()?.model || []);\r\n          //   selectModelRef.current.selectIndex(modelData.indexOf(data.model));\r\n\r\n          //   return () => unsubscribe();\r\n          // });\r\n\r\n\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);;\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (isFailedOpen == false) {\r\n  //     handleClearIfError();\r\n  //   }\r\n\r\n\r\n  // }, [isFailedOpen])\r\n  const handleFailModalClose = useCallback(() => {\r\n    setIsFailedOpen(false);\r\n\r\n    handleClearIfError();\r\n\r\n\r\n  }, []);\r\n\r\n  const handleSuccessModalClose = useCallback(() => {\r\n    setIsSuccessOpen(false);\r\n\r\n    selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n    // console.log(globalModelDataVariable.indexOf(makeVariable.text));\r\n\r\n\r\n  }, []);\r\n\r\n  const handleModelChange = useCallback(() => {\r\n    // console.log('Selected make:', value);\r\n    setCarNameFromSelectsModel();\r\n\r\n  }, []);\r\n\r\n\r\n  const handleMakeChange = useCallback(async (item) => {\r\n    setCarNameFromSelects();\r\n    // dispatch(setSelectedMake(item));\r\n    // fetchModelData();\r\n    //  dispatch(setIsLoading(true));\r\n    try {\r\n      if (makeVariable.text !== '') {\r\n\r\n        try {\r\n\r\n          const collectionRef = doc(projectExtensionFirestore, 'Model', item);\r\n\r\n          const docSnapshot = await getDoc(collectionRef);\r\n          if (docSnapshot.exists()) {\r\n            const modelsDataFromFirebase = docSnapshot.data().model;\r\n            setModelData(modelsDataFromFirebase);\r\n            globalModelDataVariable = modelsDataFromFirebase;\r\n            // console.log(globalModelVariable);\r\n\r\n            // modelKey++;\r\n            // console.log(modelKey);\r\n            // dispatch(setIsLoading(false));\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching models data from Firebase: ', error);\r\n        }\r\n\r\n      }\r\n\r\n      else {\r\n        //  dispatch(setModelData([]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching models data from Firebase: ', error);\r\n    }\r\n\r\n  }, [projectExtensionFirestore, modelData, makeData]);\r\n\r\n  const handleInputStockIDNumberChange = useCallback((text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 10);\r\n    inputStockIDNumber.current.value = truncatedValue;\r\n    globalVehicleFolderName = truncatedValue;\r\n    setRefNumFromSelects();\r\n    // // Limit the numeric value to a maximum of 4 characters\r\n    // const truncatedValue = numericValue.slice(5);\r\n\r\n    // // Format the truncated numeric value with comma separator\r\n    // const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    // // Remove comma separator from the formatted value\r\n    // const valueWithoutCommas = formattedValue.replace(/,/g, '');\r\n\r\n    // inputStockIDNumber.current.value = valueWithoutCommas;\r\n  }, []);\r\n\r\n  const handleModelOnFocus = useCallback(() => {\r\n    // console.log(globalModelVariable.length);\r\n    const condition = makeVariable.text === '' && globalModelDataVariable.length > 0;\r\n\r\n    if (condition) {\r\n      globalModelDataVariable = [];\r\n      setModelData([]);\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n        <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={handleSearchPress} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\r\n          InputRightElement={\r\n            <Button isLoading={isSearchLoading} isLoadingText=\"Search\" size={'xs'} colorScheme={'primary'}\r\n              leftIcon={<Icon as={<MaterialIcons name=\"search\" />} size={5} color=\"white\" />}\r\n              onPress={() => {\r\n                handleSearchPress()\r\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n              }}>Search</Button>\r\n          }\r\n        />\r\n        </Box>\r\n        <SuccessFailModal inputStockIDNumber={inputStockIDNumber} isSuccessOpen={isSuccessOpen} setIsSuccessOpen={setIsSuccessOpen} isFailedOpen={isFailedOpen} setIsFailedOpen={setIsFailedOpen} handleSuccessModalClose={handleSuccessModalClose} handleFailModalClose={handleFailModalClose} />\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Purchase Price</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n        <Box bgColor={'white'} flex={1} borderColor={purchasedPriceError} borderWidth={1}>\r\n          <Input keyboardType=\"numeric\" flex={1} ref={inputPurchasedPrice} onChangeText={handleInputPurchasedPriceChange} bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"Purchase Price\" placeholderTextColor={'muted.400'} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Make</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n          <SortAndAddModal docName='Make' handleAddTextChange={handleAddMakeTextChange} textAreaAdd={textAreaAddMake} title='Make' dataName={'make'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Make\" data={makeData} />\r\n        </Box>\r\n\r\n        <Box ref={selectMakeBoxRef} bgColor={'white'} flex={1} borderColor={makeError} borderWidth={1}>\r\n\r\n\r\n          <SelectDropdown\r\n            ref={selectMakeRef}\r\n            buttonStyle={{\r\n              flex: 1,\r\n              width: '100%',\r\n              backgroundColor: 'white',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              padding: 4,\r\n            }}\r\n            buttonTextStyle={{\r\n              textAlign: 'left',\r\n              color: '#424242',\r\n              fontSize: 12,\r\n            }}\r\n            dropdownStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              shadowColor: '#000000',\r\n              shadowOffset: { width: 0, height: 2 },\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 4,\r\n              elevation: 2,\r\n            }}\r\n            rowStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 15,\r\n            }}\r\n            rowTextStyle={{\r\n              color: '#424242',\r\n              fontSize: 16,\r\n            }}\r\n            data={makeData}\r\n            onSelect={useCallback((selectedItem) => {\r\n              makeVariable.text = selectedItem;\r\n              selectModelRef.current.reset();\r\n              modelVariable.text = '';\r\n              handleMakeChange(selectedItem);\r\n\r\n\r\n            }, [])}\r\n            defaultButtonText=\"-- Choose Make --\"\r\n            buttonTextAfterSelection={(selectedItem) => {\r\n              return selectedItem;\r\n            }} SelectDropdown\r\n            renderDropdownIcon={(isOpened) => {\r\n              return (\r\n                <Ionicons\r\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                  color={'#424242'}\r\n                  size={18}\r\n                />\r\n              );\r\n            }}\r\n            rowTextForSelection={(item) => {\r\n              return item;\r\n            }}\r\n            searchPlaceHolder=\"Search for Make\"\r\n            searchInputStyle={{ marginTop: 2, }}\r\n            disableAutoScroll\r\n            search />\r\n\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} >\r\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Model</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n          <ModelSortAndAddModal\r\n            selectMakeForAddModelRef={selectMakeForAddModelRef}\r\n            selectMakeForModelRef={selectMakeForModelRef}\r\n            textAreaAddModel={textAreaAddModel}\r\n            makeData={makeData} />\r\n        </Box>\r\n        <Box ref={selectModelBoxRef} bgColor={'white'} flex={1} borderColor={modelError} borderWidth={1}>\r\n\r\n\r\n          <SelectDropdown\r\n\r\n            onFocus={handleModelOnFocus}\r\n            ref={selectModelRef}\r\n            // disabled={makeVariable.text === '' ? true : false}\r\n            // key={`make${key}`}\r\n            buttonStyle={{\r\n              flex: 1,\r\n              width: '100%',\r\n              backgroundColor: 'white',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              padding: 4,\r\n            }}\r\n            buttonTextStyle={{\r\n              textAlign: 'left',\r\n              color: '#424242',\r\n              fontSize: 12,\r\n            }}\r\n            dropdownStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              shadowColor: '#000000',\r\n              shadowOffset: { width: 0, height: 2 },\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 4,\r\n              elevation: 2,\r\n            }}\r\n            rowStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 15,\r\n            }}\r\n            rowTextStyle={{\r\n              color: '#424242',\r\n              fontSize: 16,\r\n            }}\r\n            // data={modelData.map((item) => item)}\r\n            data={modelData}\r\n            onSelect={useCallback((selectedItem) => {\r\n              modelVariable.text = selectedItem;\r\n              // console.log(modelVariable.text);\r\n\r\n\r\n              handleModelChange()\r\n            }, [])}\r\n            defaultButtonText=\"-- Choose Model --\"\r\n            buttonTextAfterSelection={(selectedItem) => {\r\n              return selectedItem;\r\n            }}\r\n            renderDropdownIcon={(isOpened) => {\r\n              return (\r\n                <Ionicons\r\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                  color={'#424242'}\r\n                  size={18}\r\n                />\r\n              );\r\n            }}\r\n            rowTextForSelection={(item) => {\r\n              return item;\r\n            }}\r\n            searchPlaceHolder=\"Search for Model\"\r\n            searchInputStyle={{ marginTop: 2, width: '100%', }}\r\n            disableAutoScroll\r\n            search\r\n\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n    handleFirstModalClose();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    handleFirstModalOpen();\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n\r\n  }, [modalSortOpen, modalIsLoading]);\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose} useRNModal>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        useRNModal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nconst SortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nconst PSBSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAddCode, textAreaAdd, handleAddTextChange, handleAddCodeTextChange, docName }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n  }, []);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n  }, []);\r\n\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    textAreaAdd.current.clear();\r\n    textAreaAddCode.current.clear();\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n\r\n  }, [])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, []);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataCode = textAreaAddCode.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n    const dataCodeArray = dataCode.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n\r\n    if (data !== '' && dataCode !== '') {\r\n      setModalSaveLoading(true);\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n\r\n        const dataToUpdate = dataArray.map((data, index) => ({\r\n          id: dataCodeArray[index],\r\n          name: data,\r\n        }));\r\n\r\n        const updateObject = {};\r\n        updateObject[dataName] = arrayUnion(...dataToUpdate);\r\n\r\n        await setDoc(modalDocRef, updateObject, { merge: true });\r\n        // const updateData = {\r\n        //   [dataName]: arrayUnion({ id: arrayUnion(...dataCodeArray), name: arrayUnion(...dataArray) })\r\n        // };\r\n\r\n        // await setDoc(modalDocRef, updateData, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity onPress={handleSortModalOpen} focusable={false}>\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item.id}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item.name}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAddCode}\r\n        size={'lg'}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          {/* <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} w={'full'}> */}\r\n          <HStack space={5} flex={1} margin={2}>\r\n            <VStack space={1} flex={1}>\r\n              <Text textAlign={'center'}>Code</Text>\r\n              <TextArea\r\n                flex={2}\r\n                textAlign={'center'}\r\n                w={'full'}\r\n                ref={textAreaAddCode}\r\n                multiline\r\n                onChangeText={handleAddCodeTextChange}\r\n                totalLines={8}\r\n                placeholder=\"Enter your data, separated by new lines\"\r\n              />\r\n            </VStack>\r\n            <VStack space={1} flex={1}>\r\n              <Text textAlign={'center'}>Name</Text>\r\n              <TextArea\r\n                flex={2}\r\n                textAlign={'center'}\r\n                w={'full'}\r\n                ref={textAreaAdd}\r\n                multiline\r\n                onChangeText={handleAddTextChange}\r\n                totalLines={8}\r\n                placeholder=\"Enter your data, separated by new lines\"\r\n              />\r\n            </VStack>\r\n          </HStack>\r\n          {/* </Modal.Body> */}\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleModalAddClose}\r\n                colorScheme={'muted'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}>\r\n                Close\r\n              </Button>\r\n              <Button\r\n                onPress={handleAddSubmit}\r\n                isLoading={modalSaveLoading ? true : false}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}>\r\n                Add\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nconst ModelSortAndAddModal = ({ selectMakeForAddModelRef, selectMakeForModelRef, textAreaAddModel, makeData }) => {\r\n\r\n  const [modalAddModel, setModalAddModel] = useState(false);\r\n  const [modalSaveModel, setModalSaveModel] = useState(false);\r\n  const [modalModel, setModalModel] = useState(false);\r\n  const [modalAddModelSuccess, setModalAddModelSuccess] = useState(false);\r\n  const [keySelectMakeForModel, setKeySelectMakeForModel] = useState(1);\r\n  const [keySelectMakeForAddModel, setKeySelectMakeForAddModel] = useState(1);\r\n  const [modelSortData, setModelSortData] = useState([]);\r\n  const [isAddModelDisabled, setIsAddModelDisabled] = useState(false);\r\n  const [modalSaveModelLoading, setModalSaveModelLoading] = useState(false);\r\n  const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n\r\n  const fetchModelSortData = async () => {\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n\r\n      const modelSortDocRef = doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value);\r\n      const modelSortDocSnap = await getDoc(modelSortDocRef);\r\n      if (modelSortDocSnap.exists()) {\r\n        setModelSortData(modelSortDocSnap.data()?.model || []);\r\n\r\n      }\r\n      else {\r\n        setModelSortData([]);\r\n      }\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n\r\n  //     const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), (snapshot) => {\r\n  //       setModelSortData(snapshot.data()?.model || []);\r\n  //       return () => unsubscribe();\r\n  //     });\r\n\r\n  //   }\r\n\r\n  // }, []);\r\n\r\n  const handleDeleteModelPress = useCallback(\r\n    (item) => {\r\n      setModelSortData((prevModelData) => {\r\n        const updatedModelData = prevModelData.filter((model) => model !== item);\r\n        return updatedModelData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const handleSaveModel = useCallback(async () => {\r\n    setModalSaveModelLoading(true);\r\n    console.log(selectMakeForModelRef.current?.value);\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n      try {\r\n        await updateDoc(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), { model: modelSortData });\r\n        setModalSaveModelLoading(false);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const logData = {\r\n          message: `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`.toLowerCase(),\r\n            'Model Update'.toLowerCase(),\r\n            'Model'.toLowerCase(),\r\n            'Update'.toLowerCase(),\r\n            selectMakeForModelRef.current.value.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n\r\n        addLogToCollection(logData);\r\n\r\n        handleModalSaveModelClose();\r\n      } catch (error) {\r\n        console.error(error);\r\n        setModalSaveModelLoading(false);\r\n        handleModalSaveModelClose();\r\n      }\r\n\r\n    }\r\n    else {\r\n      setModalSaveModelLoading(false);\r\n    }\r\n\r\n\r\n\r\n\r\n  }, [projectExtensionFirestore, modelSortData]);\r\n\r\n  const handleAddModelTextChange = () => {\r\n    const newText = textAreaAddModel.current?.value?.toUpperCase();\r\n    textAreaAddModel.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n  const handleMakeForModelChange = useCallback(() => {\r\n    makeForAddModelVariable.text = selectMakeForAddModelRef.current?.value;\r\n    fetchModelSortData();\r\n\r\n    // console.log(selectMakeForModelRef.current?.value);\r\n  }, []);\r\n\r\n  const handleMakeForAddModelChange = useCallback(() => {\r\n    setIsAddModelDisabled(false);\r\n\r\n  }, []);\r\n\r\n\r\n  const handleModalModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalModel(true);\r\n    fetchModelSortData();\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  const handleModalModelClose = useCallback(() => {\r\n    setModalIsLoading(false);\r\n\r\n    setModalModel(false);\r\n    setIsLoading(false);\r\n    setKeySelectMakeForModel(prevKey => prevKey + 1);\r\n    setModelSortData([]);\r\n  }, []);\r\n\r\n  const handleModalAddModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalAddModel(true);\r\n    // handleModalModelClose();\r\n    setModalModel(false);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleModalAddModelClose = useCallback(() => {\r\n    handleModalModelOpen();\r\n    setModalAddModel(false);\r\n    textAreaAddModel.current.clear();\r\n    setIsAddModelDisabled(true);\r\n    setIsLoading(false);\r\n    setKeySelectMakeForAddModel(prevKey => prevKey + 1);\r\n\r\n  }, []);\r\n\r\n  const handleModalAddModelSuccessOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalAddModel(false);\r\n    setModalModel(false);\r\n    textAreaAddModel.current.clear();\r\n    setModalAddModelSuccess(true);\r\n\r\n\r\n  }, []);\r\n\r\n  const handleModalAddModelSuccessClose = useCallback(() => {\r\n    setModalAddModelSuccess(false);\r\n    handleModalModelOpen();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleModalSaveModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n      setModalSaveModel(true);\r\n      // handleModalModelClose();\r\n      setModalModel(false);\r\n      setIsLoading(false);\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleModalSaveModelClose = useCallback(() => {\r\n    setModalSaveModel(false);\r\n    handleModalModelOpen();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleAddModelSubmit = async () => {\r\n    const data = textAreaAddModel.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n      setModalSaveLoading(true);\r\n      try {\r\n\r\n        const makeCollectionRef = collection(projectExtensionFirestore, 'Model');\r\n        const makeDocRef = doc(makeCollectionRef, selectMakeForAddModelRef.current?.value);\r\n        await setDoc(makeDocRef, { model: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`.toLowerCase(),\r\n            'Model Added'.toLowerCase(),\r\n            'Model'.toLowerCase(),\r\n            'Added'.toLowerCase(),\r\n            selectMakeForAddModelRef.current.value.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        setModalSaveLoading(false);\r\n        addLogToCollection(logData);\r\n\r\n        handleModalAddModelSuccessOpen();\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleModalModelOpen}>\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) :\r\n          (<Spinner color=\"white\" />)\r\n        }\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalModel}\r\n        onClose={handleModalModelClose} >\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Rearrange/Add Model</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n            <Box w={'full'} flexDir={'column'} height={'f'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddModelOpen}><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n              <Box>\r\n                <Select key={keySelectMakeForModel} ref={selectMakeForModelRef} onValueChange={handleMakeForModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\r\n                  bg: \"teal.600\",\r\n                  endIcon: <CheckIcon size=\"5\" />\r\n                }}>\r\n                  {makeData.map((item) => (\r\n\r\n                    <Select.Item key={item} label={item} value={item} />\r\n\r\n                  ))}\r\n                </Select>\r\n              </Box>\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modelSortData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16, 42, 67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteModelPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModelSortData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveModelOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n\r\n\r\n\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddModel}\r\n        onClose={handleModalAddModelClose}\r\n        initialFocusRef={selectMakeForAddModelRef}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add Model</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n            <Select key={keySelectMakeForAddModel} ref={selectMakeForAddModelRef} onValueChange={handleMakeForAddModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\r\n              bg: \"teal.600\",\r\n              endIcon: <CheckIcon size=\"5\" />\r\n            }}>\r\n              {makeData.map((item) => (\r\n\r\n                <Select.Item key={item} label={item} value={item} />\r\n\r\n              ))}\r\n            </Select>\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAddModel}\r\n              multiline\r\n              onChangeText={handleAddModelTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\"\r\n              isDisabled={isAddModelDisabled ? true : false}\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddModelSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSaveModel}\r\n        onClose={handleModalSaveModelClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Model Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSaveModel} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveModelLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalAddModelSuccess} onClose={handleModalAddModelSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Model Added!\r\n                {/* Vehicle Added! */}\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Model was successfully added! You can view it in the model list.\r\n                {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddModelSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nconst referenceNumberVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nconst nameVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nconst makeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst makeForAddModelVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\n\r\nconst modelVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst regYearVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst regMonthVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst steeringVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst transmissionVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst exteriorColorVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst fuelVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst portVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst salesVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst buyerVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst driveTypeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst bodyTypeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst stockStatusVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nlet resetKey = 0;\r\nconst featuresState = {\r\n  SafetySystemAnBrSy: false,\r\n  SafetySystemDrAi: false,\r\n  SafetySystemPaAi: false,\r\n  SafetySystemSiAi: false,\r\n  ComfortAiCoFr: false,\r\n  ComfortAiCoRe: false,\r\n  ComfortAMFMRa: false,\r\n  ComfortAMFMSt: false,\r\n  ComfortCDPl: false,\r\n  ComfortCDCh: false,\r\n  ComfortCrSpCo: false,\r\n  ComfortDiSp: false,\r\n  ComfortDVDPl: false,\r\n  ComfortHDD: false,\r\n  ComfortNaSyGPS: false,\r\n  ComfortPoSt: false,\r\n  ComfortPrAuSy: false,\r\n  ComfortReKeSy: false,\r\n  ComfortTiStWh: false,\r\n  InteriorLeSe: false,\r\n  InteriorPoDoLo: false,\r\n  InteriorPoMi: false,\r\n  InteriorPoSe: false,\r\n  InteriorPoWi: false,\r\n  InteriorReWiDe: false,\r\n  InteriorReWiWi: false,\r\n  InteriorThRoSe: false,\r\n  InteriorTiGl: false,\r\n  ExteriorAlWh: false,\r\n  ExteriorPoSlDo: false,\r\n  ExteriorSuRo: false,\r\n  SellingPointsCuWh: false,\r\n  SellingPointsFuLo: false,\r\n  SellingPointsMaHiAv: false,\r\n  SellingPointsBrNeTi: false,\r\n  SellingPointsNoAcHi: false,\r\n  SellingPointsNoSmPrOw: false,\r\n  SellingPointsOnOwHi: false,\r\n  SellingPointsPeRaTi: false,\r\n  SellingPointsReBo: false,\r\n  SellingPointsTuEn: false,\r\n  SellingPointsUpAuSy: false,\r\n};\r\n\r\nconst CheckBoxButton = ({ label, onChange, variable }) => {\r\n  const [checked, setChecked] = useState(variable);\r\n\r\n  // useEffect(() => {console.log(checked)}, [checked])\r\n\r\n  const handlePress = () => {\r\n\r\n    setChecked(!checked);\r\n    onChange(!checked);\r\n\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={{ flex: 1, justifyContent: 'center', }}\r\n      onPress={handlePress}\r\n    >\r\n      <Box\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        borderRadius={3}\r\n        bgColor={checked ? '#7b9cff' : 'white'}\r\n        margin={1}\r\n        overflow={'hidden'}\r\n        // h={50}\r\n        // w={180}\r\n        padding={2}\r\n        borderWidth={1}\r\n        borderColor={checked ? 'white' : 'muted.400'}\r\n      >\r\n        <Text\r\n          // fontSize={[9, 11, 12, 11, 12, 13]}\r\n          // maxW={[85, 100, 180, 100, 130, 180]}\r\n          textAlign={'center'}\r\n          noOfLines={3}\r\n          color={checked ? 'white' : 'muted.400'}\r\n        >\r\n          {label}\r\n        </Text>\r\n      </Box>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default function AddVehicle() {\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const loginName = useSelector((state) => state.loginName);\r\n\r\n  const [renderLoading, setRenderLoading] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n\r\n  const [name, setName] = useState(loginName);\r\n  const navigation = useNavigation();\r\n\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n  const dragSortableViewRef = useRef();\r\n\r\n  nameVariable.text = loginName;\r\n\r\n  const inputCarNotes = useRef(null);\r\n  const inputCarMemo = useRef(null);\r\n  const inputCarName = useRef(null);\r\n  const inputCarDesc = useRef(null);\r\n  const inputFobJpy = useRef(null);\r\n  const inputFobUsd = useRef(null);\r\n  const inputRegYear = useRef(null);\r\n  const selectRegYear = useRef(null);\r\n  const selectRegMonth = useRef(null);\r\n  const inputRegMonth = useRef(null);\r\n  const inputRefNum = useRef(null);\r\n  const inputStockIDNumber = useRef(null);\r\n  const inputChassis = useRef(null);\r\n  const inputModelCode = useRef(null);\r\n  const inputEngineCode = useRef(null);\r\n  const inputEngineDis = useRef(null);\r\n  const selectSteering = useRef(null);\r\n  const inputMileage = useRef(null);\r\n  const selectTransmission = useRef(null);\r\n  const selectExteriorColor = useRef(null);\r\n  const inputNumOfSeats = useRef(null);\r\n  const inputDoors = useRef(null);\r\n  const inputPurchasedPrice = useRef(null);\r\n  const inputFuel = useRef(null);\r\n  const selectFuel = useRef(null);\r\n  const selectPort = useRef(null);\r\n  const selectSales = useRef(null);\r\n  const selectBuyer = useRef(null);\r\n  const selectDriveType = useRef(null);\r\n  const inputDimensionLength = useRef(null);\r\n  const inputDimensionWidth = useRef(null);\r\n  const inputDimensionHeight = useRef(null);\r\n  const inputDimensionCubicMeters = useRef(null);\r\n  const inputDriveType = useRef(null);\r\n  const inputWeight = useRef(null);\r\n  const selectBodyType = useRef(null);\r\n  const selectStockStatus = useRef(null);\r\n  const textAreaAddMake = useRef(null);\r\n  const textAreaAddModel = useRef(null);\r\n  const textAreaAddTransmission = useRef(null);\r\n  const textAreaAddExteriorColor = useRef(null);\r\n  const textAreaAddFuel = useRef(null);\r\n  const textAreaAddPort = useRef(null);\r\n  const textAreaAddPortCode = useRef(null);\r\n  const textAreaAddSales = useRef(null);\r\n  const textAreaAddBuyer = useRef(null);\r\n  const textAreaAddSalesCode = useRef(null);\r\n  const textAreaAddBuyerCode = useRef(null);\r\n  const textAreaAddDriveType = useRef(null);\r\n  const textAreaAddBodyType = useRef(null);\r\n  const textAreaAddExpenseName = useRef(null);\r\n  const textAreaAddPaidTo = useRef(null);\r\n  const inputExpenseAmount = useRef(null);\r\n\r\n  // const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  // const selectedImages = useSelector((state) => state.selectedImages);\r\n  const portData = useSelector((state) => state.portData);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const transmissionData = useSelector((state) => state.transmissionData);\r\n  const fuelData = useSelector((state) => state.fuelData);\r\n  const buyerData = useSelector((state) => state.buyerData);\r\n  const salesData = useSelector((state) => state.salesData);\r\n  const driveTypeData = useSelector((state) => state.driveTypeData);\r\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\r\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\r\n  const currentYear = useSelector((state) => state.currentYear);\r\n\r\n  const minYear = 1970;\r\n  const years = Array.from({ length: currentYear - minYear + 1 }, (_, index) => currentYear - index);\r\n  globalRegYearDataVariable = years;\r\n\r\n\r\n\r\n\r\n  const steeringData = ['Left', 'Right'];\r\n\r\n\r\n  const selectMakeRef = useRef(null);\r\n  const selectModelRef = useRef(null);\r\n\r\n  const selectMakeForModelRef = useRef(null);\r\n  const selectMakeForAddModelRef = useRef(null);\r\n\r\n\r\n  const [isNoFeaturesSelected, setIsNoFeaturesSelected] = useState('white');\r\n\r\n\r\n  const [carNameError, setCarNameError] = useState('muted.500');\r\n  const [makeError, setMakeError] = useState('white');\r\n  const [modelError, setModelError] = useState('white');\r\n  const [regYearError, setRegYearError] = useState('white');\r\n  const [regMonthError, setRegMonthError] = useState('white');\r\n  const [refNumError, setRefNumError] = useState('white');\r\n  const [stockIDNumError, setStockIDNumError] = useState('white');\r\n  const [chassisError, setChassisError] = useState('white');\r\n  const [modelCodeError, setModelCodeError] = useState('white');\r\n  const [engineDisError, setEngineDisError] = useState('white');\r\n  const [steeringError, setSteeringError] = useState('white');\r\n  const [mileageError, setMileageError] = useState('white');\r\n  const [transmissionError, setTransmissionError] = useState('white');\r\n  const [exteriorColoError, setExteriorColoError] = useState('white');\r\n  const [numOfSeatsError, setNumOfSeatsError] = useState('white');\r\n  const [doorsError, setDoorsError] = useState('white');\r\n  const [purchasedPriceError, setPurchasedPriceError] = useState('white');\r\n  const [fuelError, setFuelError] = useState('white');\r\n  const [portError, setPortError] = useState('white');\r\n  const [buyerError, setBuyerError] = useState('white');\r\n  const [salesError, setSalesError] = useState('white');\r\n  const [dimensionLengthError, setDimensionLengthError] = useState('white');\r\n  const [dimensionWidthError, setDimensionWidthError] = useState('white');\r\n  const [dimensionHeightError, setDimensionHeightError] = useState('white');\r\n  const [driveTypeError, setDriveTypeError] = useState('white');\r\n  const [weightError, setWeightError] = useState('white');\r\n  const [bodyTypeError, setBodyTypeError] = useState('white');\r\n  const [stockStatusError, setStockStatusError] = useState('white');\r\n\r\n\r\n\r\n  const inputVehicleBoxRef = useRef(null);\r\n\r\n\r\n  const selectMakeBoxRef = useRef(null);\r\n  const selectModelBoxRef = useRef(null);\r\n  const selectRegYearBoxRef = useRef(null);\r\n  const selectRegMonthBoxRef = useRef(null);\r\n  const selectSteeringBoxRef = useRef(null);\r\n  const selectTransmissionBoxRef = useRef(null);\r\n  const selectExteriorColorBoxRef = useRef(null);\r\n  const selectFuelBoxRef = useRef(null);\r\n  const selectPortBoxRef = useRef(null);\r\n  const selectBuyerBoxRef = useRef(null);\r\n  const selectSalesBoxRef = useRef(null);\r\n  const selectDriveTypeBoxRef = useRef(null);\r\n  const selectBodyTypeBoxRef = useRef(null);\r\n  const selectStockStatusBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n\r\n    handleClearImages();\r\n\r\n    dispatch(setSupplyChainsCostsData([]));\r\n    dispatch(setDeleteImageVisible(true));\r\n    portVariable.id = '';\r\n    portVariable.text = '';\r\n    salesVariable.id = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.id = '';\r\n    buyerVariable.text = '';\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n    Object.keys(featuresState).forEach(property => {\r\n      featuresState[property] = false;\r\n    });\r\n\r\n    console.log('Sample');\r\n\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n  }, []);\r\n\r\n\r\n  const handleClearIfError = useCallback(() => {\r\n\r\n\r\n    handleClearToggleButton();\r\n    clearSelect();\r\n\r\n    inputCarName.current?.clear();\r\n    inputCarDesc.current?.clear();\r\n    inputFobJpy.current?.clear();\r\n    inputFobUsd.current?.clear();\r\n\r\n    inputRegYear.current?.clear();\r\n    inputRegMonth.current?.clear();\r\n    inputRefNum.current?.clear();\r\n    inputChassis.current?.clear();\r\n    inputModelCode.current?.clear();\r\n    inputEngineCode.current?.clear();\r\n    inputEngineDis.current?.clear();\r\n    inputMileage.current?.clear();\r\n    inputNumOfSeats.current?.clear();\r\n    inputDoors.current?.clear();\r\n    inputPurchasedPrice.current?.clear();\r\n    inputFuel.current?.clear();\r\n    inputDimensionLength.current?.clear();\r\n    inputDimensionWidth.current?.clear();\r\n    inputDimensionHeight.current?.clear();\r\n    inputDimensionCubicMeters.current.value = \"0.00\";\r\n    inputDriveType.current?.clear();\r\n    inputWeight.current?.clear();\r\n\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    portVariable.text = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.text = '';\r\n    portVariable.id = '';\r\n    salesVariable.id = '';\r\n    buyerVariable.id = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n  }, []);\r\n\r\n  // const uploadImages = useCallback(async () => {\r\n  //   const storageRef = ref(storage, `${globalVehicleFolderName}`);\r\n  //   const ImageFormat = { jpg: 'jpg' };\r\n\r\n  //   try {\r\n  //     // Get the names of the images to keep\r\n  //     const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n  //     // Delete existing files in the folder that do not match the names of the images to keep\r\n  //     const listResult = await listAll(storageRef);\r\n  //     await Promise.all(\r\n  //       listResult.items\r\n  //         .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n  //         .map((itemRef) => deleteObject(itemRef))\r\n  //     );\r\n\r\n  //     // Upload new images with or without watermarks based on the platform\r\n  //     function blobToArrayBuffer(blob) {\r\n  //       return new Promise((resolve, reject) => {\r\n  //         const reader = new FileReader();\r\n  //         reader.onload = () => resolve(reader.result);\r\n  //         reader.onerror = reject;\r\n  //         reader.readAsArrayBuffer(blob);\r\n  //       });\r\n  //     }\r\n\r\n  //     // ...\r\n\r\n  //     await Promise.all(\r\n  //       globalSelectedImages.map(async (asset, index) => {\r\n  //         const { uri } = asset;\r\n  //         const imageName = index.toString();\r\n\r\n  //         const response = await fetch(uri);\r\n  //         const blob = await response.blob();\r\n\r\n  //         const imageRef = ref(storage, `${globalVehicleFolderName}/${imageName}`);\r\n\r\n  //         // Define your watermark options\r\n  //         const watermarkOptions = {\r\n  //           text: 'Real Motor Japan',\r\n  //           color: '#FFFFFF', // Text color\r\n  //           fontSize: 20,\r\n  //           opacity: 50, // Set opacity if needed\r\n  //         };\r\n\r\n  //         // Convert the blob to an ArrayBuffer\r\n  //         const arrayBuffer = await blobToArrayBuffer(blob);\r\n\r\n  //         // Use watermark.js to add the watermark\r\n  //         const watermarkedArrayBuffer = await watermark([arrayBuffer, watermarkOptions])\r\n  //           .image(watermark.image.bottomCenter())\r\n  //           .then((img) => img.arrayBuffer());\r\n\r\n  //         // Convert the ArrayBuffer back to a Blob\r\n  //         const watermarkedBlob = new Blob([watermarkedArrayBuffer]);\r\n\r\n  //         await uploadBytes(imageRef, watermarkedBlob, { contentType: 'image/jpeg' });\r\n  //       })\r\n  //     );\r\n\r\n  //     console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\r\n  //   } catch (error) {\r\n  //     console.error('Error uploading images:', error);\r\n  //   }\r\n  // }, []);\r\n\r\n  const uploadImages = useCallback(async () => {\r\n\r\n    const storageRef = ref(storage, `${globalVehicleFolderName}`);\r\n    const ImageFormat = { jpg: 'jpg' };\r\n\r\n\r\n\r\n    try {\r\n      // Get the names of the images to keep\r\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n      // Delete existing files in the folder that do not match the names of the images to keep\r\n      const listResult = await listAll(storageRef);\r\n      await Promise.all(\r\n        listResult.items\r\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n          .map((itemRef) => deleteObject(itemRef))\r\n      );\r\n\r\n      await Promise.all(\r\n        globalSelectedImages.map(async (asset, index) => {\r\n          const { uri } = asset;\r\n          const imagename = index.toString();\r\n\r\n          const response = await fetch(uri);\r\n          const blob = await response.blob();\r\n\r\n          // Create an offscreen canvas\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          // Create a new image object\r\n          const img = new Image();\r\n          img.src = URL.createObjectURL(blob);\r\n\r\n          // Draw the image on the canvas\r\n          img.onload = async () => {\r\n            // Create a canvas element\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            // Calculate the desired width and height for the resized image\r\n            const maxWidth = 800; // Set your desired maximum width\r\n            const maxHeight = 600; // Set your desired maximum height\r\n            let newWidth = img.width;\r\n            let newHeight = img.height;\r\n\r\n            // Check if the image needs resizing\r\n            if (img.width > maxWidth) {\r\n              newWidth = maxWidth;\r\n              newHeight = (img.height * maxWidth) / img.width;\r\n            }\r\n\r\n            if (newHeight > maxHeight) {\r\n              newWidth = (newWidth * maxHeight) / newHeight;\r\n              newHeight = maxHeight;\r\n            }\r\n\r\n            // Set the canvas dimensions to the new width and height\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n\r\n            // Draw the resized image onto the canvas\r\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n\r\n            // Calculate the font size as a percentage of the image width\r\n            const fontSizePercentage = 3;\r\n            const imageRes = img.height * img.width;\r\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\r\n\r\n            ctx.font = `bold ${fontSize}px Arial`;\r\n            ctx.fillStyle = '#fff';\r\n            ctx.shadowColor = 'transparent';\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.lineWidth = 2;\r\n\r\n            // Calculate the position for the watermark text\r\n            const watermarkText = `Real Motor Japan ${globalReferenceNumber}`;\r\n            const textWidth = ctx.measureText(watermarkText).width;\r\n            const textHeight = fontSize; // Font size determines the text height\r\n\r\n            // Set padding around the text (adjust as needed)\r\n            const paddingX = 10;\r\n            const paddingY = 5;\r\n\r\n            // Calculate the position for the text shadow\r\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\r\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\r\n\r\n            // Increase the shadow thickness by adjusting the shadow blur radius\r\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\r\n\r\n            // Draw the text shadow (black)\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(watermarkText, xShadow, yShadow);\r\n\r\n            // Reset the shadow blur radius for the actual text\r\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\r\n\r\n            // Calculate the position for the actual text\r\n            const x = (canvas.width - textWidth) / 2;\r\n            const y = canvas.height - 20;\r\n\r\n            // Draw the actual text (white)\r\n            ctx.fillStyle = '#fff';\r\n            ctx.fillText(watermarkText, x, y);\r\n\r\n            // Convert the canvas to a blob\r\n            const watermarkedImageBlob = await new Promise(resolve => {\r\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\r\n            });\r\n\r\n            // Upload the resized image to Firebase Storage\r\n            const imageRef = ref(storage, `${globalVehicleFolderName}/${imagename}`);\r\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\r\n          };\r\n\r\n        })\r\n\r\n      );\r\n\r\n\r\n      console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleUpload = useCallback(async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    setCarNameError('muted.500');\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setBuyerError('white');\r\n    setSalesError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    const selectIsEmpty = makeVariable.text == \"\" ||\r\n      modelVariable.text == \"\" ||\r\n      regYearVariable.text == \"\" ||\r\n      regMonthVariable.text == \"\" ||\r\n      steeringVariable.text == \"\" ||\r\n      transmissionVariable.text == \"\" ||\r\n      exteriorColorVariable.text == \"\" ||\r\n      fuelVariable.text == \"\" ||\r\n      portVariable.text == \"\" ||\r\n      buyerVariable.text == \"\" ||\r\n      salesVariable.text == \"\" ||\r\n      driveTypeVariable.text == \"\" ||\r\n      bodyTypeVariable.text == \"\" ||\r\n      stockStatusVariable.text == \"\";\r\n\r\n    const inputIsEmpty = inputStockIDNumber.current?.value == \"\" || inputRefNum.current?.value == \"\" ||\r\n      inputChassis.current?.value == \"\" ||\r\n      inputModelCode.current?.value == \"\" ||\r\n      inputEngineDis.current?.value == \"\" ||\r\n      inputEngineDis.current?.value == 0 ||\r\n      inputMileage.current?.value == \"\" ||\r\n      inputMileage.current?.value == 0 ||\r\n      inputNumOfSeats.current?.value == \"\" ||\r\n      inputDoors.current?.value == \"\" ||\r\n      inputNumOfSeats.current?.value == 0 ||\r\n      inputDoors.current?.value == 0 ||\r\n      inputPurchasedPrice.current?.value == 0 ||\r\n      inputPurchasedPrice.current?.value == \"\" ||\r\n      inputDimensionLength.current?.value == \"\" ||\r\n      inputDimensionWidth.current?.value == \"\" ||\r\n      inputDimensionHeight.current?.value == \"\" ||\r\n      inputDimensionCubicMeters.current?.value == \"\" ||\r\n      inputDimensionLength.current?.value == 0 ||\r\n      inputDimensionWidth.current?.value == 0 ||\r\n      inputDimensionHeight.current?.value == 0 ||\r\n      inputDimensionCubicMeters.current?.value == 0 ||\r\n      inputWeight.current?.value == \"\" ||\r\n      inputWeight.current?.value == 0 ||\r\n      inputCarName.current?.value == \"\";\r\n\r\n    // const inputExceedLength = input;\r\n    const allValuesAreFalse = Object.values(featuresState).every((value) => value === false);\r\n\r\n    console.log(inputIsEmpty || selectIsEmpty);\r\n\r\n    if (inputIsEmpty || selectIsEmpty || allValuesAreFalse) {\r\n      dispatch(setLoadingModalVisible(false));\r\n      inputVehicleBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n      if (allValuesAreFalse) {\r\n        // All features are false\r\n        console.log('All features are false');\r\n        setIsNoFeaturesSelected('danger.400');\r\n        // featureBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        // handleModalUploadClose();\r\n      } else {\r\n        // At least one feature is true\r\n        console.log('At least one feature is true.');\r\n        // handleModalUploadClose();\r\n      }\r\n\r\n      if (inputCarName.current?.value == \"\") {\r\n        inputCarName.current.scrollIntoView({ behavior: 'smooth' });\r\n        setCarNameError('danger.400');\r\n      }\r\n\r\n      if (bodyTypeVariable.text == \"\") {\r\n        selectBodyTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setBodyTypeError('danger.400');\r\n      }\r\n\r\n      if (stockStatusVariable.text == \"\") {\r\n        selectStockStatusBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setStockStatusError('danger.400');\r\n      }\r\n\r\n      if (inputWeight.current?.value == \"\" || inputWeight.current?.value == 0) {\r\n        inputWeight.current.scrollIntoView({ behavior: 'smooth' });\r\n        setWeightError('danger.400');\r\n      }\r\n\r\n      if (driveTypeVariable.text == \"\") {\r\n        selectDriveTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDriveTypeError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionHeight.current?.value == \"\" || inputDimensionHeight.current?.value == 0) {\r\n        inputDimensionHeight.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionHeightError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionWidth.current?.value == \"\" || inputDimensionWidth.current?.value == 0) {\r\n        inputDimensionWidth.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionWidthError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionLength.current?.value == \"\" || inputDimensionLength.current?.value == 0) {\r\n        inputDimensionLength.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionLengthError('danger.400');\r\n      }\r\n\r\n      if (fuelVariable.text == \"\") {\r\n        selectFuelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setFuelError('danger.400');\r\n      }\r\n\r\n      if (inputDoors.current?.value == \"\" || inputDoors.current?.value == 0) {\r\n        inputDoors.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDoorsError('danger.400');\r\n      }\r\n      if (inputPurchasedPrice.current?.value == \"\" || inputPurchasedPrice.current?.value == 0) {\r\n        inputPurchasedPrice.current.scrollIntoView({ behavior: 'smooth' });\r\n        setPurchasedPriceError('danger.400');\r\n      }\r\n\r\n      if (inputNumOfSeats.current?.value == \"\") {\r\n        inputNumOfSeats.current.scrollIntoView({ behavior: 'smooth' });\r\n        setNumOfSeatsError('danger.400');\r\n      }\r\n\r\n      if (exteriorColorVariable.text == \"\") {\r\n        selectExteriorColorBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setExteriorColoError('danger.400');\r\n      }\r\n\r\n      if (transmissionVariable.text == \"\") {\r\n        selectTransmissionBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setTransmissionError('danger.400');\r\n      }\r\n\r\n      if (inputMileage.current?.value == \"\" || inputMileage.current?.value == 0) {\r\n        inputMileage.current.scrollIntoView({ behavior: 'smooth' });\r\n        setMileageError('danger.400');\r\n      }\r\n\r\n      if (steeringVariable.text == \"\") {\r\n        selectSteeringBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setSteeringError('danger.400');\r\n      }\r\n\r\n      if (inputEngineDis.current?.value == \"\" || inputEngineDis.current?.value == 0) {\r\n        inputEngineDis.current.scrollIntoView({ behavior: 'smooth' });\r\n        setEngineDisError('danger.400');\r\n      }\r\n\r\n      if (inputModelCode.current?.value == \"\") {\r\n        inputModelCode.current.scrollIntoView({ behavior: 'smooth' });\r\n        setModelCodeError('danger.400');\r\n      }\r\n\r\n      if (inputChassis.current?.value == \"\") {\r\n        inputChassis.current.scrollIntoView({ behavior: 'smooth' });\r\n        setChassisError('danger.400');\r\n      }\r\n\r\n      if (inputRefNum.current?.value == \"\") {\r\n        inputRefNum.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRefNumError('danger.400');\r\n      }\r\n      if (buyerVariable.text == \"\") {\r\n        selectBuyerBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setBuyerError('danger.400');\r\n      }\r\n\r\n      if (salesVariable.text == \"\") {\r\n        selectSalesBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setSalesError('danger.400');\r\n      }\r\n\r\n\r\n      if (portVariable.text == \"\") {\r\n        selectPortBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setPortError('danger.400');\r\n      }\r\n\r\n\r\n      if (regMonthVariable.text == \"\") {\r\n        selectRegMonthBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRegMonthError('danger.400');\r\n      }\r\n\r\n      if (regYearVariable.text == \"\") {\r\n        selectRegYearBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRegYearError('danger.400');\r\n      }\r\n\r\n      if (modelVariable.text == \"\") {\r\n        selectModelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setModelError('danger.400');\r\n      }\r\n\r\n      if (makeVariable.text == \"\") {\r\n        selectMakeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setMakeError('danger.400');\r\n      }\r\n\r\n      if (inputStockIDNumber.current?.value == \"\") {\r\n        inputStockIDNumber.current.scrollIntoView({ behavior: 'smooth' });\r\n        setStockIDNumError('danger.400');\r\n      }\r\n\r\n    }\r\n    else {\r\n      const stockCollectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n      const stockID = inputStockIDNumber.current?.value;\r\n      const docQuery = doc(stockCollectionRef, stockID);\r\n      const docSnap = await getDoc(docQuery);\r\n\r\n      dispatch(setLoadingModalVisible(true));\r\n      globalReferenceNumber = inputRefNum.current?.value;\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const timestampForID = moment(datetime).format('YYYYMMDDHHmmss');\r\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n      const year = moment(datetime).format('YYYY');\r\n      const month = moment(datetime).format('MM');\r\n      const monthWithDay = moment(datetime).format('MM/DD');\r\n      const date = moment(datetime).format('YYYY/MM/DD');\r\n      const day = moment(datetime).format('DD');\r\n      const time = moment(datetime).format('HH:mm');\r\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n      // console.log(`${timestampForID}${inputRefNum.current?.value}`);\r\n\r\n      const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n      const docRef = doc(collectionRef, inputStockIDNumber.current?.value);\r\n\r\n      const docData = docSnap.data();\r\n      // Your data object to be added\r\n      const docSnapshot = await getDoc(docRef);\r\n\r\n\r\n\r\n\r\n      const keywordsData = [\r\n        inputRefNum.current?.value,\r\n        inputCarName.current?.value,\r\n        inputStockIDNumber.current?.value,\r\n        regYearVariable.text,\r\n        makeVariable.text,\r\n        modelVariable.text,\r\n        inputChassis.current?.value,\r\n        `${makeVariable.text} ${modelVariable.text}`,\r\n        `${regYearVariable.text} ${makeVariable.text}`,\r\n      ]\r\n      const fobHistoryData = {\r\n        date: formattedTime,\r\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\r\n        changedBy: nameVariable.text,\r\n      };\r\n\r\n      let fobHistoryValue;\r\n      const inputFobValue = inputFobJpy.current?.value;\r\n      if (globalFobPrice !== inputFobValue && inputFobValue !== '') {\r\n        fobHistoryValue = arrayUnion(fobHistoryData);\r\n      }\r\n\r\n      const data = {\r\n        keywords: keywordsData,\r\n        imageCount: globalSelectedImages.length,\r\n        supplyChainsCostsData: globalSupplyChainCostsData,\r\n        ...(fobHistoryValue && { fobHistory: fobHistoryValue }),\r\n        // ...(docSnap.exists() || docData.inputStockIDNumber.current?.value.hasOwnProperty('dateAdded')\r\n        // ? { updatedDate: formattedTime }\r\n        // : { dateAdded: formattedTime }),\r\n        // dateAdded: formattedTime, \r\n        display: false,\r\n        photos: false,\r\n        stockID: inputStockIDNumber.current?.value,\r\n        make: makeVariable.text,\r\n        model: modelVariable.text,\r\n        regYear: regYearVariable.text,\r\n        regMonth: regMonthVariable.text,\r\n        referenceNumber: inputRefNum.current?.value,\r\n        chassisNumber: inputChassis.current?.value,\r\n        modelCode: inputModelCode.current?.value,\r\n        engineCode: inputEngineCode.current?.value,\r\n        engineDisplacement: inputEngineDis.current.value.replace(/,/g, ''),\r\n        steering: steeringVariable.text,\r\n        mileage: inputMileage.current.value.replace(/,/g, ''),\r\n        transmission: transmissionVariable.text,\r\n        exteriorColor: exteriorColorVariable.text,\r\n        numberOfSeats: inputNumOfSeats.current?.value,\r\n        doors: inputDoors.current?.value,\r\n        purchasedPrice: inputPurchasedPrice.current.value.replace(/,/g, ''),\r\n        fuel: fuelVariable.text,\r\n        port: portVariable.text,\r\n        sales: salesVariable.text,\r\n        buyer: buyerVariable.text,\r\n        portID: portVariable.id,\r\n        salesID: salesVariable.id,\r\n        buyerID: buyerVariable.id,\r\n        dimensionLength: inputDimensionLength.current.value.replace(/,/g, ''),\r\n        dimensionWidth: inputDimensionWidth.current.value.replace(/,/g, ''),\r\n        dimensionHeight: inputDimensionHeight.current.value.replace(/,/g, ''),\r\n        dimensionCubicMeters: inputDimensionCubicMeters.current.value.replace(/,/g, ''),\r\n        driveType: driveTypeVariable.text,\r\n        weight: inputWeight.current.value.replace(/,/g, ''),\r\n        bodyType: bodyTypeVariable.text,\r\n        stockStatus: stockStatusVariable.text,\r\n        carName: inputCarName.current?.value,\r\n        carDescription: inputCarDesc.current?.value,\r\n        notes: inputCarNotes.current?.value,\r\n        memo: inputCarMemo.current?.value,\r\n\r\n        comfort: {\r\n          ComfortAiCoFr: featuresState.ComfortAiCoFr,\r\n          ComfortAiCoRe: featuresState.ComfortAiCoRe,\r\n          ComfortAMFMRa: featuresState.ComfortAMFMRa,\r\n          ComfortAMFMSt: featuresState.ComfortAMFMSt,\r\n          ComfortCDPl: featuresState.ComfortCDPl,\r\n          ComfortCDCh: featuresState.ComfortCDCh,\r\n          ComfortCrSpCo: featuresState.ComfortCrSpCo,\r\n          ComfortDiSp: featuresState.ComfortDiSp,\r\n          ComfortDVDPl: featuresState.ComfortDVDPl,\r\n          ComfortHDD: featuresState.ComfortHDD,\r\n          ComfortNaSyGPS: featuresState.ComfortNaSyGPS,\r\n          ComfortPoSt: featuresState.ComfortPoSt,\r\n          ComfortPrAuSy: featuresState.ComfortPrAuSy,\r\n          ComfortReKeSy: featuresState.ComfortReKeSy,\r\n          ComfortTiStWh: featuresState.ComfortTiStWh,\r\n        },\r\n\r\n        ComfortAiCoFr: featuresState.ComfortAiCoFr,\r\n        ComfortAiCoRe: featuresState.ComfortAiCoRe,\r\n        ComfortAMFMRa: featuresState.ComfortAMFMRa,\r\n        ComfortAMFMSt: featuresState.ComfortAMFMSt,\r\n        ComfortCDPl: featuresState.ComfortCDPl,\r\n        ComfortCDCh: featuresState.ComfortCDCh,\r\n        ComfortCrSpCo: featuresState.ComfortCrSpCo,\r\n        ComfortDiSp: featuresState.ComfortDiSp,\r\n        ComfortDVDPl: featuresState.ComfortDVDPl,\r\n        ComfortHDD: featuresState.ComfortHDD,\r\n        ComfortNaSyGPS: featuresState.ComfortNaSyGPS,\r\n        ComfortPoSt: featuresState.ComfortPoSt,\r\n        ComfortPrAuSy: featuresState.ComfortPrAuSy,\r\n        ComfortReKeSy: featuresState.ComfortReKeSy,\r\n        ComfortTiStWh: featuresState.ComfortTiStWh,\r\n\r\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\r\n\r\n        safetySystem: {\r\n          SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy,\r\n          SafetySystemDrAi: featuresState.SafetySystemDrAi,\r\n          SafetySystemPaAi: featuresState.SafetySystemPaAi,\r\n          SafetySystemSiAi: featuresState.SafetySystemSiAi,\r\n\r\n        },\r\n\r\n        SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy,\r\n        SafetySystemDrAi: featuresState.SafetySystemDrAi,\r\n        SafetySystemPaAi: featuresState.SafetySystemPaAi,\r\n        SafetySystemSiAi: featuresState.SafetySystemSiAi,\r\n\r\n        interior: {\r\n          InteriorLeSe: featuresState.InteriorLeSe,\r\n          InteriorPoDoLo: featuresState.InteriorPoDoLo,\r\n          InteriorPoMi: featuresState.InteriorPoMi,\r\n          InteriorPoSe: featuresState.InteriorPoSe,\r\n          InteriorPoWi: featuresState.InteriorPoWi,\r\n          InteriorReWiDe: featuresState.InteriorReWiDe,\r\n          InteriorReWiWi: featuresState.InteriorReWiWi,\r\n          InteriorThRoSe: featuresState.InteriorThRoSe,\r\n          InteriorTiGl: featuresState.InteriorTiGl,\r\n        },\r\n\r\n        InteriorLeSe: featuresState.InteriorLeSe,\r\n        InteriorPoDoLo: featuresState.InteriorPoDoLo,\r\n        InteriorPoMi: featuresState.InteriorPoMi,\r\n        InteriorPoSe: featuresState.InteriorPoSe,\r\n        InteriorPoWi: featuresState.InteriorPoWi,\r\n        InteriorReWiDe: featuresState.InteriorReWiDe,\r\n        InteriorReWiWi: featuresState.InteriorReWiWi,\r\n        InteriorThRoSe: featuresState.InteriorThRoSe,\r\n        InteriorTiGl: featuresState.InteriorTiGl,\r\n\r\n        exterior: {\r\n          ExteriorAlWh: featuresState.ExteriorAlWh,\r\n          ExteriorPoSlDo: featuresState.ExteriorPoSlDo,\r\n          ExteriorSuRo: featuresState.ExteriorSuRo,\r\n        },\r\n        ExteriorAlWh: featuresState.ExteriorAlWh,\r\n        ExteriorPoSlDo: featuresState.ExteriorPoSlDo,\r\n        ExteriorSuRo: featuresState.ExteriorSuRo,\r\n\r\n        sellingPoints: {\r\n          SellingPointsCuWh: featuresState.SellingPointsCuWh,\r\n          SellingPointsFuLo: featuresState.SellingPointsFuLo,\r\n          SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv,\r\n          SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi,\r\n          SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi,\r\n          SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw,\r\n          SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi,\r\n          SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi,\r\n          SellingPointsReBo: featuresState.SellingPointsReBo,\r\n          SellingPointsTuEn: featuresState.SellingPointsTuEn,\r\n          SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy,\r\n        },\r\n\r\n        SellingPointsCuWh: featuresState.SellingPointsCuWh,\r\n        SellingPointsFuLo: featuresState.SellingPointsFuLo,\r\n        SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv,\r\n        SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi,\r\n        SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi,\r\n        SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw,\r\n        SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi,\r\n        SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi,\r\n        SellingPointsReBo: featuresState.SellingPointsReBo,\r\n        SellingPointsTuEn: featuresState.SellingPointsTuEn,\r\n        SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy,\r\n\r\n\r\n        // Add more fields as needed\r\n      };\r\n\r\n      // Get a reference to the document with the given stock ID\r\n\r\n\r\n      // Get the document\r\n\r\n\r\n      // Check if the document exists\r\n      if (docSnap.exists()) {\r\n        updateDoc(docRef, data)\r\n          .then(async () => {\r\n            try {\r\n\r\n              await uploadImages();\r\n              dispatch(setLoadingModalVisible(false));\r\n              dispatch(setIsUpdateSuccessModalOpen(true));\r\n\r\n              try {\r\n                // Check if the document exists\r\n                const docSnapshot = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                  const dataDoc = docSnap.data();\r\n                  if (dataDoc) {\r\n                    if ('dateAdded' in dataDoc) {\r\n                      // The document exists and has a 'dateAdded' field\r\n                      console.log('Date Update');\r\n                      // Update the 'updatedDate' field without removing 'dateAdded'\r\n                      const updates = {\r\n                        updatedDate: formattedTime, // Replace 'formattedTime' with the updated date value\r\n                      };\r\n\r\n                      // Use updateDoc to only update the 'updatedDate' field in the document\r\n                      await updateDoc(docRef, updates);\r\n                    } else {\r\n                      // The document exists, but it doesn't have a 'dateAdded' field\r\n                      console.log('Date Added');\r\n                      // Update the 'dateAdded' field without removing other fields\r\n                      const updates = {\r\n                        dateAdded: formattedTime, // Replace 'formattedTime' with the date value\r\n                      };\r\n\r\n                      // Use updateDoc to only update the 'dateAdded' field in the document\r\n                      await updateDoc(docRef, updates);\r\n                    }\r\n                  } else {\r\n                    // The document exists, but it doesn't have a 'dateAdded' field\r\n                    console.log('Date Added');\r\n                    // Update the 'dateAdded' field without removing other fields\r\n                    const updates = {\r\n                      dateAdded: formattedTime, // Replace 'formattedTime' with the date value\r\n                    };\r\n\r\n                    // Use updateDoc to only update the 'dateAdded' field in the document\r\n                    await updateDoc(docRef, updates);\r\n                  }\r\n                } else {\r\n                  // The document does not exist\r\n                  console.log('Date Added');\r\n                }\r\n              } catch (error) {\r\n                console.error('Error checking document:', error);\r\n              }\r\n\r\n              const logData = {\r\n                message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  inputStockIDNumber.current.value.toLowerCase(),\r\n                  `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\r\n                  'Vehicle Updated'.toLowerCase(),\r\n                  'Vehicle'.toLowerCase(),\r\n                  'Updated'.toLowerCase(),\r\n                  inputCarName.current.value.toLowerCase(),\r\n                  inputRefNum.current.value.toLowerCase(),\r\n                  nameVariable.text.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n              };\r\n              dispatch(setLoadingModalVisible(false));\r\n              handleClearImages();\r\n              addLogToCollection(logData);\r\n              handleClear();\r\n              console.log('Document updated successfully!');\r\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\r\n            } catch (error) {\r\n              // Handle errors that may occur during the update process\r\n              console.error('Error updating document:', error);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.error('Error updating document: ', error);\r\n          });\r\n      }\r\n      else {\r\n        const dataWithDateAdded = {\r\n          ...data,\r\n          dateAdded: formattedTime,\r\n        };\r\n\r\n        setDoc(docRef, dataWithDateAdded)\r\n          .then(async () => {\r\n\r\n            try {\r\n              await uploadImages();\r\n              dispatch(setLoadingModalVisible(false));\r\n              dispatch(setIsSuccessModalOpen(true));\r\n\r\n              // try {\r\n              //   // Check if the document exists\r\n              //   const docSnapshot = await getDoc(docRef);\r\n\r\n              //   if (docSnapshot.exists()) {\r\n              //     const data = docSnapshot.data();\r\n              //     if (data) {\r\n              //       if ('dateAdded' in data) {\r\n              //         // The document exists and has a 'dateAdded' field\r\n              //         console.log('Date Update');\r\n              //         // Update the 'updatedDate' field in the document\r\n              //         const updates = {\r\n              //           updatedDate: formattedTime, // Replace 'newFieldValue' with the updated date value\r\n              //         };\r\n\r\n              //         // Use setDoc to update the 'updatedDate' field in the document\r\n              //         await setDoc(docRef, updates, { merge: true });\r\n              //       } else {\r\n              //         // The document exists, but it doesn't have a 'dateAdded' field\r\n              //         console.log('Date Added');\r\n              //         // Update the 'dateAdded' field in the document\r\n              //         const updates = {\r\n              //           dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\r\n              //         };\r\n\r\n              //         // Use setDoc to update the 'dateAdded' field in the document\r\n              //         await setDoc(docRef, updates, { merge: true });\r\n              //       }\r\n              //     } else {\r\n              //       // The document exists, but it doesn't have a 'dateAdded' field\r\n              //       console.log('Date Added');\r\n              //       // Update the 'dateAdded' field in the document\r\n              //       const updates = {\r\n              //         dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\r\n              //       };\r\n\r\n              //       // Use setDoc to update the 'dateAdded' field in the document\r\n              //       await setDoc(docRef, updates, { merge: true });\r\n              //     }\r\n              //   } else {\r\n              //     // The document does not exist\r\n              //     console.log('Date Added');\r\n              //   }\r\n              // } catch (error) {\r\n              //   console.error('Error checking document:', error);\r\n              // }\r\n\r\n              const logData = {\r\n                message: `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  inputStockIDNumber.current.value.toLowerCase(),\r\n                  `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\r\n                  'Vehicle Added'.toLowerCase(),\r\n                  'Vehicle'.toLowerCase(),\r\n                  'Added'.toLowerCase(),\r\n                  inputCarName.current.value.toLowerCase(),\r\n                  inputRefNum.current.value.toLowerCase(),\r\n                  nameVariable.text.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n              };\r\n\r\n              handleClearImages();\r\n              addLogToCollection(logData);\r\n              handleClear();\r\n              console.log('Document added successfully!');\r\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n          })\r\n          .catch((error) => {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.error('Error adding document: ', error);\r\n          });\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleClearToggleButton = () => {\r\n    resetKey++;\r\n\r\n    featuresState.SafetySystemAnBrSy = false;\r\n    featuresState.SafetySystemDrAi = false;\r\n    featuresState.SafetySystemPaAi = false;\r\n    featuresState.SafetySystemSiAi = false;\r\n    featuresState.ComfortAiCoFr = false;\r\n    featuresState.ComfortAiCoRe = false;\r\n    featuresState.ComfortAMFMRa = false;\r\n    featuresState.ComfortAMFMSt = false;\r\n    featuresState.ComfortCDPl = false;\r\n    featuresState.ComfortCDCh = false;\r\n    featuresState.ComfortCrSpCo = false;\r\n    featuresState.ComfortDiSp = false;\r\n    featuresState.ComfortDVDPl = false;\r\n    featuresState.ComfortHDD = false;\r\n    featuresState.ComfortNaSyGPS = false;\r\n    featuresState.ComfortPoSt = false;\r\n    featuresState.ComfortPrAuSy = false;\r\n    featuresState.ComfortReKeSy = false;\r\n    featuresState.ComfortTiStWh = false;\r\n    featuresState.InteriorLeSe = false;\r\n    featuresState.InteriorPoDoLo = false;\r\n    featuresState.InteriorPoMi = false;\r\n    featuresState.InteriorPoSe = false;\r\n    featuresState.InteriorPoWi = false;\r\n    featuresState.InteriorReWiDe = false;\r\n    featuresState.InteriorReWiWi = false;\r\n    featuresState.InteriorThRoSe = false;\r\n    featuresState.InteriorTiGl = false;\r\n    featuresState.ExteriorAlWh = false;\r\n    featuresState.ExteriorPoSlDo = false;\r\n    featuresState.ExteriorSuRo = false;\r\n    featuresState.SellingPointsCuWh = false;\r\n    featuresState.SellingPointsFuLo = false;\r\n    featuresState.SellingPointsMaHiAv = false;\r\n    featuresState.SellingPointsBrNeTi = false;\r\n    featuresState.SellingPointsNoAcHi = false;\r\n    featuresState.SellingPointsNoSmPrOw = false;\r\n    featuresState.SellingPointsOnOwHi = false;\r\n    featuresState.SellingPointsPeRaTi = false;\r\n    featuresState.SellingPointsReBo = false;\r\n    featuresState.SellingPointsTuEn = false;\r\n    featuresState.SellingPointsUpAuSy = false;\r\n  };\r\n\r\n  const handleClear = useCallback(() => {\r\n\r\n    handleClearToggleButton();\r\n    handleClearImages();\r\n    clearSelect();\r\n\r\n\r\n    dispatch(setSupplyChainsCostsData([]));\r\n    globalSupplyChainCostsData = [];\r\n    globalSupplyChainCostsAmount = '';\r\n    globalFobPrice = '';\r\n\r\n    inputStockIDNumber.current?.clear();\r\n    inputCarName.current?.clear();\r\n    inputCarDesc.current?.clear();\r\n    inputFobJpy.current?.clear();\r\n    inputFobUsd.current?.clear();\r\n\r\n    inputRegYear.current?.clear();\r\n    inputRegMonth.current?.clear();\r\n    inputRefNum.current?.clear();\r\n    inputChassis.current?.clear();\r\n    inputModelCode.current?.clear();\r\n    inputEngineCode.current?.clear();\r\n    inputEngineDis.current?.clear();\r\n    inputMileage.current?.clear();\r\n    inputNumOfSeats.current?.clear();\r\n    inputDoors.current?.clear();\r\n    inputPurchasedPrice.current?.clear();\r\n    inputFuel.current?.clear();\r\n    inputDimensionLength.current?.clear();\r\n    inputDimensionWidth.current?.clear();\r\n    inputDimensionHeight.current?.clear();\r\n    inputDimensionCubicMeters.current.value = \"0.00\";\r\n    inputDriveType.current?.clear();\r\n    inputWeight.current?.clear();\r\n    inputCarNotes.current?.clear();\r\n    inputCarMemo.current?.clear();\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    portVariable.text = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.text = '';\r\n    portVariable.id = '';\r\n    salesVariable.id = '';\r\n    buyerVariable.id = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    // handleModalClearClose();\r\n\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"LOGS\");\r\n  }, []);\r\n  const handleToggleAddAccount = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  }, []);\r\n\r\n  const handleToggleAccountList = useCallback(() => {\r\n\r\n    navigation.navigate(\"ACCOUNT LIST\");\r\n  }, []);\r\n\r\n  const handleToggleAddVehicle = useCallback(() => {\r\n\r\n    navigation.navigate(\"ADD NEW VEHICLE\");\r\n  }, []);\r\n\r\n\r\n  const handleVehicleList = useCallback(() => {\r\n    navigation.navigate(\"VEHICLE LIST\");\r\n  }, []);\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(projectControlAuth)\r\n          .then(() => {\r\n            navigation.navigate('Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(projectControlAuth)\r\n        .then(() => {\r\n          navigation.navigate('Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = projectControlAuth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(projectControlAuth).then(() => {\r\n      navigation.navigate('Login');\r\n      setEmail('');\r\n      setName('');\r\n    }).catch(() => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n  const { width } = Dimensions.get('window');\r\n\r\n\r\n  const handleInputPurchasedPriceChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputPurchasedPrice.current.value = formattedValue;\r\n\r\n  };\r\n\r\n\r\n  const handleInputFobJpyChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Check if the numeric value starts with 0\r\n    if (numericValue.startsWith('0')) {\r\n      // Handle the case when the value starts with 0\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n      return;\r\n    }\r\n\r\n    // Truncate the numeric value to a maximum of 9 digits\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n    if (formattedValue !== '') {\r\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\r\n\r\n      if (!isNaN(multipliedValue)) {\r\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\r\n      } else {\r\n        // Handle the case when the multipliedValue is NaN\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: '' });\r\n      }\r\n    } else {\r\n      // Handle the case when formattedValue is empty\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleInputFobJpyChange(inputFobJpy.current?.value);\r\n  }, [jpyToUsd]);\r\n\r\n\r\n\r\n  const handleAddMakeTextChange = () => {\r\n    const newText = textAreaAddMake.current?.value?.toUpperCase();\r\n    textAreaAddMake.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n\r\n  const handleAddTransmissionTextChange = () => {\r\n    const textAreaValue = textAreaAddTransmission.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddTransmission.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddFuelTextChange = () => {\r\n    const textAreaValue = textAreaAddFuel.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddFuel.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddPortTextChange = () => {\r\n    const textAreaValue = textAreaAddPort.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPort.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPortCodeTextChange = () => {\r\n    const newText = textAreaAddPortCode.current?.value?.toUpperCase();\r\n    textAreaAddPortCode.current?.setNativeProps({ text: newText });\r\n    // Remove any non-numeric characters\r\n\r\n\r\n  };\r\n\r\n  const handleAddSalesTextChange = () => {\r\n    const textAreaValue = textAreaAddSales.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddSales.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddSalesCodeTextChange = () => {\r\n    const newText = textAreaAddSalesCode.current?.value?.toUpperCase();\r\n    textAreaAddSalesCode.current?.setNativeProps({ text: newText });\r\n  };\r\n\r\n  const handleAddBuyerTextChange = () => {\r\n    const textAreaValue = textAreaAddBuyer.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddBuyer.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddBuyerCodeTextChange = (text) => {\r\n\r\n    const numericValue = text.replace(/[^0-9\\n]/g, '');\r\n\r\n    // Update the value of the textarea while preventing new lines\r\n    textAreaAddBuyerCode.current.value = numericValue;\r\n  };\r\n\r\n  const handleAddDriveTypeTextChange = () => {\r\n    const textAreaValue = textAreaAddDriveType.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddDriveType.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddBodyTypeTextChange = () => {\r\n    const textAreaValue = textAreaAddBodyType.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddBodyType.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddExteriorColorTextChange = () => {\r\n    const textAreaValue = textAreaAddExteriorColor.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExteriorColor.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddExpenseNameTextChange = () => {\r\n    const textAreaValue = textAreaAddExpenseName.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPaidToTextChange = () => {\r\n    const textAreaValue = textAreaAddPaidTo.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleInputRefNumChange = () => {\r\n    const newText = inputRefNum.current?.value?.toUpperCase();\r\n    inputRefNum.current?.setNativeProps({ text: newText });\r\n\r\n    setRefNumFromSelects();\r\n  };\r\n\r\n  const handleInputChassisChange = () => {\r\n    const newText = inputChassis.current?.value?.toUpperCase();\r\n    inputChassis.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n  const handleInputModelCodeChange = () => {\r\n    const newText = inputModelCode.current?.value?.toUpperCase();\r\n    inputModelCode.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n  const handleInputEngineCodeChange = () => {\r\n    const newText = inputEngineCode.current?.value?.toUpperCase();\r\n    inputEngineCode.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n\r\n\r\n  const handleInputEngineDisChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 5);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputEngineDis.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputExpenseAmountChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputExpenseAmount.current.value = formattedValue;\r\n  };\r\n\r\n\r\n  const handleInputMileageChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputMileage.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputNumOfSeatsChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 3);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputNumOfSeats.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputDoorsChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 2);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputDoors.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputDimensionLengthChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionLength.current.value = formattedValue;\r\n\r\n    calculateCubicMeters();\r\n  };\r\n\r\n\r\n  const handleInputDimensionWidthChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionWidth.current.value = formattedValue;\r\n\r\n    calculateCubicMeters();\r\n  };\r\n\r\n  const handleInputDimensionHeightChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionHeight.current.value = formattedValue;\r\n    calculateCubicMeters();\r\n\r\n  };\r\n\r\n  const handleInputDimensionCubicMetersChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputDimensionCubicMeters.current.value = formattedValue;\r\n    calculateCubicMeters();\r\n  };\r\n\r\n  const handleInputWeightChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 5);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputWeight.current.value = formattedValue;\r\n  };\r\n\r\n  const monthNumbers = [\r\n    '01',\r\n    '02',\r\n    '03',\r\n    '04',\r\n    '05',\r\n    '06',\r\n    '07',\r\n    '08',\r\n    '09',\r\n    '10',\r\n    '11',\r\n    '12'\r\n  ];\r\n\r\n  const calculateCubicMeters = () => {\r\n    const length = parseFloat(inputDimensionLength.current?.value?.replace(/,/g, '')) || 0;\r\n    const width = parseFloat(inputDimensionWidth.current?.value?.replace(/,/g, '')) || 0;\r\n    const height = parseFloat(inputDimensionHeight.current?.value?.replace(/,/g, '')) || 0;\r\n\r\n    const result = (length * width * height) / 1000000;\r\n    const resultFormatted = result.toFixed(2);\r\n\r\n    // setCubicMeters(resultFormatted);\r\n    inputDimensionCubicMeters.current.setNativeProps({ text: resultFormatted });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   let makeValue = makeVariable.text;\r\n\r\n  //   if (makeValue !== '') {\r\n  //     setCarNameFromSelects();\r\n  //   }\r\n\r\n  // }, [modelData]);\r\n\r\n\r\n  const setRefNumFromSelects = () => {\r\n    let portValue = portVariable.id;\r\n    let stockIDValue = inputStockIDNumber.current?.value;\r\n    let salesValue = salesVariable.id;\r\n    let buyerValue = buyerVariable.id;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${portValue}${stockIDValue}${salesValue}-${buyerValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    // inputCarName.current.setNativeProps({ text: carName });\r\n    inputRefNum.current.setNativeProps({ text: carName });\r\n    referenceNumberVariable.text = carName;\r\n    // console.log(carName);\r\n  };\r\n\r\n\r\n  const setCarNameFromSelects = () => {\r\n    let regYearValue = regYearVariable.text;\r\n    let makeValue = makeVariable.text;\r\n    let modelValue = modelVariable.text;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    inputCarName.current.setNativeProps({ text: carName });\r\n\r\n  };\r\n\r\n  const setCarNameFromSelectsModel = () => {\r\n    let regYearValue = regYearVariable.text;\r\n    let makeValue = makeVariable.text;\r\n    let modelValue = modelVariable.text;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    inputCarName.current.setNativeProps({ text: carName });\r\n\r\n\r\n  };\r\n  // const [selectedMake, setSelectedMake] = useState();\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n\r\n\r\n  // }, []);\r\n\r\n  const clearSelect = () => {\r\n    // setModelData([]);\r\n\r\n    // if (makeVariable.text !== '') {\r\n    //   dispatch(setModelData([]));\r\n    // }\r\n\r\n\r\n\r\n    selectMakeRef.current.reset();\r\n    selectModelRef.current.reset();\r\n    selectRegYear.current.reset();\r\n    selectRegMonth.current.reset();\r\n    selectSteering.current.reset();\r\n    selectTransmission.current.reset();\r\n    selectExteriorColor.current.reset();\r\n    selectFuel.current.reset();\r\n    selectPort.current.reset();\r\n    selectSales.current.reset();\r\n    selectBuyer.current.reset();\r\n    selectDriveType.current.reset();\r\n    selectBodyType.current.reset();\r\n    selectStockStatus.current.reset();\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n\r\n\r\n  const ClearModalButton = ({ handleClear }) => {\r\n    const [modalClearVisible, setModalClearVisible] = useState(false);\r\n\r\n    const handleModalClearOpen = useCallback(() => {\r\n      setModalClearVisible(true);\r\n\r\n\r\n      // selectMakeRef.current.selectIndex(makeData.indexOf('TOYOTA'));\r\n    }, []);\r\n\r\n    const handleModalClearClose = useCallback(() => {\r\n      setModalClearVisible(false);\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          bgColor={'#D9D9D9'}\r\n          onPress={handleModalClearOpen}\r\n          _text={{ color: 'muted.500' }}\r\n          _hover={{ bgColor: '#f0eded' }}\r\n        >\r\n          Clear\r\n        </Button>\r\n\r\n        <Modal isOpen={modalClearVisible} onClose={handleModalClearClose}>\r\n          <Modal.Content bgColor={'amber.100'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n              <Text color={'#102A43'} bold>\r\n                Clear\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'amber.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'amber.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'amber.600'} bold>\r\n                  Warning!\r\n                </Text>\r\n                <Text color={'amber.600'}>\r\n                  Are you sure you want to clear all inputs? This action will clear all the fields and cannot be undone!\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalClearClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  onPress={() => {\r\n                    handleModalClearClose();\r\n                    handleClear();\r\n                  }}\r\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                  Clear\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  const SelectFeaturesButton = () => {\r\n    const [featuresModalVisible, setFeaturesModalVisible] = useState(false);\r\n    const [featuresClearModalVisible, setClearModalVisible] = useState(false);\r\n\r\n    const [key, setKey] = useState(resetKey);\r\n\r\n\r\n    const handleModalSelectFeaturesOpen = () => {\r\n      setFeaturesModalVisible(true);\r\n    };\r\n\r\n    const handleModalSelectFeaturesClose = () => {\r\n      setFeaturesModalVisible(false);\r\n    };\r\n\r\n    const handleClearModalOpen = () => {\r\n      setClearModalVisible(true);\r\n    };\r\n\r\n    const handleClearModalClose = () => {\r\n      setClearModalVisible(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          onPress={handleModalSelectFeaturesOpen}\r\n          variant={'outline'}\r\n          _text={{ color: 'black', }}\r\n          leftIcon={<MaterialCommunityIcons name=\"car-info\" size={20} color=\"black\" />}>\r\n\r\n          Select Features\r\n        </Button>\r\n\r\n        <Modal\r\n          isOpen={featuresModalVisible}\r\n          onClose={handleModalSelectFeaturesClose} size={'full'} useRNModal>\r\n          <Modal.Content bgColor={'white'} w={'80%'} h={'80%'}>\r\n            <Modal.CloseButton />\r\n            {/* <Modal.Header borderBottomWidth={0} bgColor={'white'}>\r\n              <Text color={'#102A43'} bold>\r\n                Features\r\n              </Text>\r\n            </Modal.Header> */}\r\n            {/* <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'white'}\r\n              flex={1}\r\n              h={'100%'}\r\n            > */}\r\n            <ScrollView flex={1} flexDirection={'column'} margin={10}>\r\n\r\n              {/* <Box bgColor={'#7b9cff'} borderColor={isNoFeaturesSelected} borderWidth={'1'} marginTop={1} ref={featureBoxRef}>\r\n                  <Text color={'white'} bold fontSize={20} width={'full'}> Features</Text>\r\n                </Box> */}\r\n\r\n              <Box>\r\n                <Text color={'black'} bold fontSize={16} width={'full'}> Safety System</Text>\r\n              </Box>\r\n\r\n\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SafetySystemAnBrSy} key={`SafetySystemAnBrSy-${resetKey}`} label=\"Anti-Lock Braking System (ABS)\" onChange={(checked) => featuresState.SafetySystemAnBrSy = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemDrAi} key={`SafetySystemDrAi-${resetKey}`} label=\"Driver Airbag\" onChange={(checked) => featuresState.SafetySystemDrAi = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemPaAi} key={`SafetySystemPaAi-${resetKey}`} label=\"Passenger Airbag\" onChange={(checked) => featuresState.SafetySystemPaAi = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemSiAi} key={`SafetySystemSiAi-${resetKey}`} label=\"Side Airbag\" onChange={(checked) => featuresState.SafetySystemSiAi = checked} />\r\n              </Box>\r\n\r\n              <Box>\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Comfort</Text>\r\n              </Box>\r\n\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortAiCoFr} key={`ComfortAiCoFr-${resetKey}`} label=\"Air Conditioner (Front)\" onChange={(checked) => featuresState.ComfortAiCoFr = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAiCoRe} key={`ComfortAiCoRe-${resetKey}`} label=\"Air Conditioner (Rear)\" onChange={(checked) => featuresState.ComfortAiCoRe = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAMFMRa} key={`ComfortAMFMRa-${resetKey}`} label=\"AM/FM Radio\" onChange={(checked) => featuresState.ComfortAMFMRa = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAMFMSt} key={`ComfortAMFMSt-${resetKey}`} label=\"AM/FM Stereo\" onChange={(checked) => featuresState.ComfortAMFMSt = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortCDPl} key={`ComfortCDPl-${resetKey}`} label=\"CD Player\" onChange={(checked) => featuresState.ComfortCDPl = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortCDCh} key={`ComfortCDCh-${resetKey}`} label=\"CD Changer\" onChange={(checked) => featuresState.ComfortCDCh = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortCrSpCo} key={`ComfortCrSpCo-${resetKey}`} label=\"Cruise Speed Control\" onChange={(checked) => featuresState.ComfortCrSpCo = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortDiSp} key={`ComfortDiSp-${resetKey}`} label=\"Digital Speedometer\" onChange={(checked) => featuresState.ComfortDiSp = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortDVDPl} key={`ComfortDVDPl-${resetKey}`} label=\"DVD Player\" onChange={(checked) => featuresState.ComfortDVDPl = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortHDD} key={`ComfortHDD-${resetKey}`} label=\"Hard Disk Drive\" onChange={(checked) => featuresState.ComfortHDD = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortNaSyGPS} key={`ComfortNaSyGPS-${resetKey}`} label=\"Navigation System (GPS)\" onChange={(checked) => featuresState.ComfortNaSyGPS = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortPoSt} key={`ComfortPoSt-${resetKey}`} label=\"Power Steering\" onChange={(checked) => featuresState.ComfortPoSt = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortPrAuSy} key={`ComfortPrAuSy-${resetKey}`} label=\"Premium Audio System\" onChange={(checked) => featuresState.ComfortPrAuSy = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortReKeSy} key={`ComfortReKeSy-${resetKey}`} label=\"Remote Keyless System\" onChange={(checked) => featuresState.ComfortReKeSy = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortTiStWh} key={`ComfortTiStWh-${resetKey}`} label=\"Tilt Steering Wheel\" onChange={(checked) => featuresState.ComfortTiStWh = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n\r\n              <Box>\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Interior</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorLeSe} key={`InteriorLeSe-${resetKey}`} label=\"Leather Seats\" onChange={(checked) => featuresState.InteriorLeSe = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoDoLo} key={`InteriorPoDoLo-${resetKey}`} label=\"Power Door Locks\" onChange={(checked) => featuresState.InteriorPoDoLo = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoMi} key={`InteriorPoMi-${resetKey}`} label=\"Power Mirrors\" onChange={(checked) => featuresState.InteriorPoMi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoSe} key={`InteriorPoSe-${resetKey}`} label=\"Power Seats\" onChange={(checked) => featuresState.InteriorPoSe = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorPoWi} key={`InteriorPoWi-${resetKey}`} label=\"Power Windows\" onChange={(checked) => featuresState.InteriorPoWi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorReWiDe} key={`InteriorReWiDe-${resetKey}`} label=\"Rear Window Defroster\" onChange={(checked) => featuresState.InteriorReWiDe = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorReWiWi} key={`InteriorReWiWi-${resetKey}`} label=\"Rear Window Wiper\" onChange={(checked) => featuresState.InteriorReWiWi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorThRoSe} key={`InteriorThRoSe-${resetKey}`} label=\"Third Row Seats\" onChange={(checked) => featuresState.InteriorThRoSe = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorTiGl} key={`InteriorTiGl-${resetKey}`} label=\"Tinted Glasses\" onChange={(checked) => featuresState.InteriorTiGl = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n              <Box >\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Exterior</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ExteriorAlWh} key={`ExteriorAlWh-${resetKey}`} label=\"Alloy Wheels\" onChange={(checked) => featuresState.ExteriorAlWh = checked} />\r\n                <CheckBoxButton variable={featuresState.ExteriorPoSlDo} key={`ExteriorPoSlDo-${resetKey}`} label=\"Power Sliding Door\" onChange={(checked) => featuresState.ExteriorPoSlDo = checked} />\r\n                <CheckBoxButton variable={featuresState.ExteriorSuRo} key={`ExteriorSuRo-${resetKey}`} label=\"Sunroof\" onChange={(checked) => featuresState.ExteriorSuRo = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n              <Box >\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Selling Points</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsCuWh} key={`SellingPointsCuWh-${resetKey}`} label=\"Customized Wheels\" onChange={(checked) => featuresState.SellingPointsCuWh = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsFuLo} key={`SellingPointsFuLo-${resetKey}`} label=\"Fully Loaded\" onChange={(checked) => featuresState.SellingPointsFuLo = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsMaHiAv} key={`SellingPointsMaHiAv-${resetKey}`} label=\"Maintenance History Available\" onChange={(checked) => featuresState.SellingPointsMaHiAv = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsBrNeTi} key={`SellingPointsBrNeTi-${resetKey}`} label=\"Brand New Tires\" onChange={(checked) => featuresState.SellingPointsBrNeTi = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsNoAcHi} key={`SellingPointsNoAcHi-${resetKey}`} label=\"No Accident History\" onChange={(checked) => featuresState.SellingPointsNoAcHi = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsNoSmPrOw} key={`SellingPointsNoSmPrOw-${resetKey}`} label=\"Non-Smoking Previous Owner\" onChange={(checked) => featuresState.SellingPointsNoSmPrOw = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsOnOwHi} key={`SellingPointsOnOwHi-${resetKey}`} label=\"One Owner History\" onChange={(checked) => featuresState.SellingPointsOnOwHi = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsPeRaTi} key={`SellingPointsPeRaTi-${resetKey}`} label=\"Performance-rated Tires\" onChange={(checked) => featuresState.SellingPointsPeRaTi = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsReBo} key={`SellingPointsReBo-${resetKey}`} label=\"Repainted Body\" onChange={(checked) => featuresState.SellingPointsReBo = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsTuEn} key={`SellingPointsTuEn-${resetKey}`} label=\"Turbo Engine\" onChange={(checked) => featuresState.SellingPointsTuEn = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsUpAuSy} key={`SellingPointsUpAuSy-${resetKey}`} label=\"Upgraded Audio System\" onChange={(checked) => featuresState.SellingPointsUpAuSy = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n            </ScrollView>\r\n            <HStack space={5} width={'full'} justifyContent={'space-between'}>\r\n              <Button\r\n                onPress={() => {\r\n                  handleClearModalOpen();\r\n                }}\r\n                colorScheme={'gray'}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n                margin={1}\r\n                flex={1}\r\n              >\r\n                Clear\r\n              </Button>\r\n              <Box flex={2} />\r\n              <Button\r\n                onPress={handleModalSelectFeaturesClose}\r\n                colorScheme={'primary'}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n                margin={1}\r\n                flex={1}\r\n              >\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n            {/* </Modal.Body> */}\r\n            {/* <Modal.Footer borderTopWidth={0} bgColor={'white'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalSelectFeaturesClose}\r\n                  colorScheme={'warmGray'}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer> */}\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n        <Modal isOpen={featuresClearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n          <Modal.Content bgColor={'amber.100'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n              <Text color={'#102A43'} bold>\r\n                Clear\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'amber.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'amber.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'amber.600'} bold>\r\n                  Warning!\r\n                </Text>\r\n                <Text color={'amber.600'}>\r\n                  Are you sure you want to clear?\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleClearModalClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  onPress={() => {\r\n                    handleClearToggleButton();\r\n                    setKey(resetKey++);\r\n                    handleClearModalClose();\r\n                  }}\r\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                  Clear\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleClearImagesExtra = () => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n    dispatch(setDeleteImageVisible(true));\r\n  };\r\n\r\n  const UploadModalButton = ({ handleUpload }) => {\r\n    const [modalUploadVisible, setModalUploadVisible] = useState(false);\r\n    const handleModalUploadOpen = () => {\r\n      setModalUploadVisible(true);\r\n    };\r\n\r\n    const handleModalUploadClose = () => {\r\n      setModalUploadVisible(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          onPress={handleModalUploadOpen}\r\n          bgColor={'#7B9CFF'}\r\n          _hover={{ bgColor: '#517cfc', }}>\r\n          Upload/Save\r\n        </Button>\r\n\r\n        <Modal isOpen={modalUploadVisible} onClose={handleModalUploadClose}>\r\n          <Modal.Content bgColor={'white'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'white'}>\r\n              <Text color={'#102A43'} bold>\r\n                Upload/Save\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'gray.300'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'black'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'black'} bold>\r\n                  Attention!\r\n                </Text>\r\n                <Text color={'black'}>\r\n                  Are you sure you want to upload/save? This action will upload a new vehicle to the list and can be edited later.\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'white'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalUploadClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button isLoading={isLoading} onPress={async () => {\r\n                  await handleUpload();\r\n                  handleModalUploadClose()\r\n                }}\r\n                  flex={1} size={'sm'} colorScheme={'primary'} borderRadius={5}>\r\n                  Upload/Save\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#7B9CFF'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const handleSuccessModalClose = useCallback(() => {\r\n    dispatch(setIsSuccessModalOpen(false));\r\n  }, []);\r\n\r\n  const handleUpdateSuccessModalClose = useCallback(() => {\r\n    dispatch(setIsUpdateSuccessModalOpen(false));\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  const handleSetBordersWhite = () => {\r\n\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n\r\n  };\r\n  return (\r\n\r\n\r\n\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#7b9cff'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={2}\r\n          borderBottomColor={'cyan.500'} >\r\n\r\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          {showDrawerIcon && <MobileViewDrawer\r\n            selectedScreen={selectedScreen}\r\n          />}\r\n\r\n\r\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo2,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n          {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n            <Flex direction=\"row-reverse\">\r\n              <Popover isOpen={showNamePopover} trigger={triggerProps => {\r\n                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                  <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                </Text>;\r\n              }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\r\n                <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                 \r\n                  <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                    <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                      Logout\r\n                    </Button>\r\n                  </Popover.Body>\r\n                </Popover.Content>\r\n              </Popover>\r\n            </Flex>\r\n          </Box> */}\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <Box flex={[1]} flexDirection=\"row\" >\r\n          {/* Sidebar */}\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen}\r\n          />\r\n\r\n          {/* Main Content */}\r\n\r\n          <Box flex={1} flexGrow={1} minHeight={0}>\r\n            {/* Main Content Content */}\r\n\r\n\r\n\r\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n              <PresenceTransition visible={true} initial={{\r\n                opacity: 0,\r\n              }} animate={{\r\n                opacity: 1,\r\n                transition: {\r\n                  duration: 250\r\n                }\r\n              }}>\r\n\r\n\r\n                <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" flexDir={'column'}>\r\n\r\n\r\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\r\n\r\n                  </Box>\r\n\r\n\r\n\r\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} >\r\n\r\n\r\n                    <Box flexDir={['column', 'column', 'column', 'column', 'row', 'row']} height={'full'} flex={1} display={screenWidth < 1280 ? 'none' : 'flex'}>\r\n                      <Box flexDir={'row'} flex={1}>\r\n                        <Box margin={2} flex={1} flexDir={['column']} >\r\n\r\n\r\n                          <Box borderColor={'white'} borderWidth={1} ref={inputVehicleBoxRef}>\r\n\r\n                            <Box flex={1} bgColor={'#7b9cff'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Text color={'white'} marginLeft={1} bold fontSize={20} width={'full'}>Input Vehicle Specification</Text>\r\n                            </Box>\r\n\r\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                            <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                            <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={() => buttonSearchRef.current?.handlePress()} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\r\n                              InputRightElement={\r\n                                <StockIDNumber />\r\n                              }\r\n                            />\r\n                            </Box>\r\n\r\n\r\n                          </Box> */}\r\n\r\n                            <StockIDAndMakeAndModel\r\n                              selectStockStatus={selectStockStatus}\r\n                              handleSetBordersWhite={handleSetBordersWhite}\r\n                              handleClearIfError={handleClearIfError}\r\n                              handleClearToggleButton={handleClearToggleButton}\r\n                              inputFobUsd={inputFobUsd}\r\n                              years={years}\r\n                              monthNumbers={monthNumbers}\r\n                              portData={portData}\r\n                              salesData={salesData}\r\n                              buyerData={buyerData}\r\n                              steeringData={steeringData}\r\n                              transmissionData={transmissionData}\r\n                              exteriorColorData={exteriorColorData}\r\n                              fuelData={fuelData}\r\n                              driveTypeData={driveTypeData}\r\n                              bodyTypeData={bodyTypeData}\r\n                              selectPort={selectPort}\r\n                              selectSales={selectSales}\r\n                              selectBuyer={selectBuyer}\r\n                              inputRefNum={inputRefNum}\r\n                              inputChassis={inputChassis}\r\n                              inputModelCode={inputModelCode}\r\n                              inputEngineCode={inputEngineCode}\r\n                              inputEngineDis={inputEngineDis}\r\n                              selectSteering={selectSteering}\r\n                              inputMileage={inputMileage}\r\n                              selectTransmission={selectTransmission}\r\n                              selectExteriorColor={selectExteriorColor}\r\n                              inputNumOfSeats={inputNumOfSeats}\r\n                              inputDoors={inputDoors}\r\n                              inputPurchasedPrice={inputPurchasedPrice}\r\n                              selectFuel={selectFuel}\r\n                              inputDimensionLength={inputDimensionLength}\r\n                              inputDimensionWidth={inputDimensionWidth}\r\n                              inputDimensionHeight={inputDimensionHeight}\r\n                              inputDimensionCubicMeters={inputDimensionCubicMeters}\r\n                              selectDriveType={selectDriveType}\r\n                              inputWeight={inputWeight}\r\n                              selectBodyType={selectBodyType}\r\n                              inputCarName={inputCarName}\r\n                              inputCarDesc={inputCarDesc}\r\n                              inputFobJpy={inputFobJpy}\r\n                              selectRegYear={selectRegYear}\r\n                              selectRegMonth={selectRegMonth}\r\n                              setRefNumFromSelects={setRefNumFromSelects}\r\n                              inputStockIDNumber={inputStockIDNumber}\r\n                              stockIDNumError={stockIDNumError}\r\n                              selectMakeForModelRef={selectMakeForModelRef}\r\n                              textAreaAddModel={textAreaAddModel}\r\n                              selectMakeForAddModelRef={selectMakeForAddModelRef}\r\n                              handleAddMakeTextChange={handleAddMakeTextChange}\r\n                              textAreaAddMake={textAreaAddMake}\r\n                              modelError={modelError}\r\n                              // makeData={makeData}\r\n                              makeError={makeError}\r\n                              selectMakeBoxRef={selectMakeBoxRef}\r\n                              selectMakeRef={selectMakeRef}\r\n                              selectModelRef={selectModelRef}\r\n                              selectModelBoxRef={selectModelBoxRef}\r\n                              setCarNameFromSelects={setCarNameFromSelects}\r\n                              setCarNameFromSelectsModel={setCarNameFromSelectsModel}\r\n                              inputCarNotes={inputCarNotes}\r\n                              inputCarMemo={inputCarMemo}\r\n                              purchasedPriceError={purchasedPriceError}\r\n                              handleInputPurchasedPriceChange={handleInputPurchasedPriceChange}\r\n                            />\r\n\r\n\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={2} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Year & Month</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box ref={selectRegYearBoxRef} bgColor={'white'} flex={1} borderColor={regYearError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectRegYear}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={years}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    regYearVariable.text = selectedItem;\r\n                                    // console.log(regYearVariable.text);\r\n                                    setCarNameFromSelects()\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Year --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\"Year\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n\r\n                              </Box>\r\n                              <Box ref={selectRegMonthBoxRef} bgColor={'white'} flex={1} borderColor={regMonthError} borderWidth={1}>\r\n\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectRegMonth}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={monthNumbers}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    regMonthVariable.text = selectedItem;\r\n                                    // console.log(regMonthVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"--Choose Month--\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\"Month\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    outlineStyle: 'none',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Port</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Port'}\r\n                                  handleAddTextChange={handleAddPortTextChange}\r\n                                  handleAddCodeTextChange={handleAddPortCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddPortCode}\r\n                                  textAreaAdd={textAreaAddPort}\r\n                                  title='Port'\r\n                                  dataName={'port'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Port\"\r\n                                  data={portData} />\r\n                              </Box>\r\n                              <Box ref={selectPortBoxRef} bgColor={'white'} flex={1} borderColor={portError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectPort}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={portData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    portVariable.text = selectedItem.name;\r\n                                    portVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Port --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Port\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Sales In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Sales'}\r\n                                  handleAddTextChange={handleAddSalesTextChange}\r\n                                  handleAddCodeTextChange={handleAddSalesCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddSalesCode}\r\n                                  textAreaAdd={textAreaAddSales}\r\n                                  title='Sales'\r\n                                  dataName={'sales'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Sales\"\r\n                                  data={salesData} />\r\n                              </Box>\r\n                              <Box ref={selectSalesBoxRef} bgColor={'white'} flex={1} borderColor={salesError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectSales}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={salesData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    salesVariable.text = selectedItem.name;\r\n                                    salesVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Sales --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Sales\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Buyer In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalBuyerOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Buyer'}\r\n                                  handleAddTextChange={handleAddBuyerTextChange}\r\n                                  handleAddCodeTextChange={handleAddBuyerCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddBuyerCode}\r\n                                  textAreaAdd={textAreaAddBuyer}\r\n                                  title='Buyer'\r\n                                  dataName={'buyer'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add buyer\"\r\n                                  data={buyerData} />\r\n                              </Box>\r\n                              <Box ref={selectBuyerBoxRef} bgColor={'white'} flex={1} borderColor={buyerError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectBuyer}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={buyerData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    buyerVariable.text = selectedItem.name;\r\n                                    buyerVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Buyer --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Buyer\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n\r\n\r\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                            <Box bgColor={'#8096D7'} flex={1} justifyContent=\"center\" alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Month</Text></Box>\r\n                            <Box bgColor={'white'} flex={1}><Input placeholder=\"Registration Month\" /></Box>\r\n                          </Box> */}\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Reference Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={refNumError} borderWidth={1}><Input defaultValue=\"\" ref={inputRefNum} onChangeText={handleInputRefNumChange} placeholder=\" Reference Number\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Chassis / Frame Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={chassisError} borderWidth={1}><Input defaultValue=\"\" ref={inputChassis} onChangeText={handleInputChassisChange} placeholder=\" Chassis / Frame Number\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Model Code</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={modelCodeError} borderWidth={1}><Input defaultValue=\"\" ref={inputModelCode} onChangeText={handleInputModelCodeChange} placeholder=\" Model Code\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Code</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}><Input defaultValue=\"\" ref={inputEngineCode} onChangeText={handleInputEngineCodeChange} placeholder=\" Engine Code\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Displacement</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={engineDisError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputEngineDis} onChangeText={handleInputEngineDisChange} flex={1} placeholder=\" Engine Displacement\" /><InputRightAddon children={\"cc\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Steering</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}></Box>\r\n                              </Box>\r\n                              <Box ref={selectSteeringBoxRef} bgColor={'white'} flex={1} borderColor={steeringError} borderWidth={1}>\r\n                                {/* <Select key={keySelectSteering} ref={selectSteering} accessibilityLabel=\"Choose Steering\" placeholder=\"Choose Steering\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                <Select.Item key={'Left'} label={'Left'} value={'Left'} />\r\n                                <Select.Item key={'Right'} label={'Right'} value={'Right'} />\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectSteering}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={steeringData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    steeringVariable.text = selectedItem;\r\n                                    // console.log(steeringVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Steering --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Steering\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} bgColor={'#8096D7'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Mileage</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={mileageError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputMileage} onChangeText={handleInputMileageChange} flex={1} placeholder=\" Mileage\" /><InputRightAddon children={\"km\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={1} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Transmission</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalTransmissionOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal docName={'Transmission'} handleAddTextChange={handleAddTransmissionTextChange} textAreaAdd={textAreaAddTransmission} title='Transmission' dataName={'transmission'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Transmission\" data={transmissionData} />\r\n                              </Box>\r\n                              <Box ref={selectTransmissionBoxRef} bgColor={'white'} flex={1} borderColor={transmissionError} borderWidth={1}>\r\n                                {/* <Select key={keySelectTransmission} accessibilityLabel=\"Choose Transmission\" placeholder=\"Choose Transmission\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {transmissionData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectTransmission}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={transmissionData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    transmissionVariable.text = selectedItem;\r\n                                    // console.log(transmissionVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Transmission --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Transmission\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Exterior Color</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalExteriorColorOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='ExteriorColor'\r\n                                  handleAddTextChange={handleAddExteriorColorTextChange}\r\n                                  textAreaAdd={textAreaAddExteriorColor}\r\n                                  title='Exterior Color'\r\n                                  dataName={'exteriorColor'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Transmission\"\r\n                                  data={transmissionData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectExteriorColorBoxRef} bgColor={'white'} flex={1} borderColor={exteriorColoError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectExteriorColor}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={exteriorColorData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    exteriorColorVariable.text = selectedItem;\r\n                                    // console.log(exteriorColorVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Exterior Color --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Exterior Color\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Number of Seats</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={numOfSeatsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputNumOfSeats} onChangeText={handleInputNumOfSeatsChange} placeholder=\" Number of Seats\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Doors</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={doorsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDoors} onChangeText={handleInputDoorsChange} placeholder=\" Doors\" /></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Fuel</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalFuelOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='Fuel'\r\n                                  handleAddTextChange={handleAddFuelTextChange}\r\n                                  textAreaAdd={textAreaAddFuel}\r\n                                  title='Fuel'\r\n                                  dataName={'fuel'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Fuel\"\r\n                                  data={fuelData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectFuelBoxRef} bgColor={'white'} flex={1} borderColor={fuelError} borderWidth={1}>\r\n                                {/* <Select key={keySelectFuel} accessibilityLabel=\"Choose Fuel\" placeholder=\"Choose Fuel\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {fuelData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectFuel}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={fuelData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    fuelVariable.text = selectedItem;\r\n                                    // console.log(fuelVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Fuel --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Fuel\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} alignSelf={'center'} flex={[1, 1, 1, 1, 2, 2]} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Dimension</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionLengthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionLength} onChangeText={handleInputDimensionLengthChange} flex={1} placeholder=\"Length\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionWidthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionWidth} onChangeText={handleInputDimensionWidthChange} flex={1} placeholder=\"Width\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionHeightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionHeight} onChangeText={handleInputDimensionHeightChange} flex={1} placeholder=\"Height\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1}><InputGroup><Input keyboardType=\"numeric\" ref={inputDimensionCubicMeters} defaultValue=\"0.00\" onChangeText={handleInputDimensionCubicMetersChange} bgColor={'muted.100'} disabled editable={false} flex={1} placeholder=\"Cubic Meters\" /><InputRightAddon children={\"m³\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Drive Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalDriveTypeOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='DriveType'\r\n                                  handleAddTextChange={handleAddDriveTypeTextChange}\r\n                                  textAreaAdd={textAreaAddDriveType}\r\n                                  title='Drive Type'\r\n                                  dataName={'driveType'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Drive Type\"\r\n                                  data={driveTypeData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectDriveTypeBoxRef} bgColor={'white'} flex={1} borderColor={driveTypeError} borderWidth={1}>\r\n                                {/* <Select key={keySelectDriveType} accessibilityLabel=\"Choose Drive Type\" placeholder=\"Choose Drive Type\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {driveTypeData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectDriveType}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={driveTypeData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    driveTypeVariable.text = selectedItem;\r\n                                    // console.log(driveTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Drive Type --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Drive Type\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Weight</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={weightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" ref={inputWeight} keyboardType=\"numeric\" onChangeText={handleInputWeightChange} flex={1} placeholder=\" Weight\" /><InputRightAddon children={\"kg\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'0'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Body Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n                                <SortAndAddModal\r\n                                  docName='BodyType'\r\n                                  handleAddTextChange={handleAddBodyTypeTextChange}\r\n                                  textAreaAdd={textAreaAddBodyType}\r\n                                  title='Body Type'\r\n                                  dataName={'bodyType'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Body Type\"\r\n                                  data={bodyTypeData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectBodyTypeBoxRef} bgColor={'white'} flex={1} borderColor={bodyTypeError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectBodyType}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={bodyTypeData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    bodyTypeVariable.text = selectedItem;\r\n                                    // console.log(bodyTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Body Type --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Body Type\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Supply Chains Costs</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}>\r\n                                <SupplyChainsCosts\r\n                                  handleAddExpenseNameTextChange={handleAddExpenseNameTextChange}\r\n                                  textAreaAddExpenseName={textAreaAddExpenseName}\r\n                                  inputExpenseAmount={inputExpenseAmount}\r\n                                  handleInputExpenseAmountChange={handleInputExpenseAmountChange}\r\n                                  handleAddPaidToTextChange={handleAddPaidToTextChange}\r\n                                  paidToData={paidToData}\r\n                                  inputCarNotes={inputCarNotes}\r\n                                /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Select Features</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={isNoFeaturesSelected} borderWidth={1}><SelectFeaturesButton /></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock Status</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n                              </Box>\r\n                              <Box ref={selectStockStatusBoxRef} bgColor={'white'} flex={1} borderColor={stockStatusError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectStockStatus}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={stockStatusData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    stockStatusVariable.text = selectedItem;\r\n                                    // console.log(bodyTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Stock Status --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Stock Status\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n\r\n\r\n                          </Box>\r\n\r\n\r\n                        </Box>\r\n\r\n                      </Box>\r\n\r\n                      <br /> <br /> <br /> <br />\r\n\r\n                      <Box flex={1} bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\r\n                        {/*=============================================================== Add Image(s)===============================================================*/}\r\n                        <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\r\n\r\n                      </Box>\r\n\r\n                    </Box>\r\n\r\n                  </Box>\r\n\r\n                  <Box flex={1} margin={1} flexDirection={'column'} h={'full'} display={['none', 'none', 'none', 'none', 'flex', 'flex']}>\r\n                    <Box h={'full'} w={'full'}>\r\n\r\n                      <HStack flex={1}>\r\n                        <Input\r\n                          ref={inputCarName}\r\n                          borderColor={carNameError}\r\n                          placeholder=\"Car Name\" margin={1} bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} flex={1} />\r\n                        <HStack flex={1}>\r\n                          <InputGroup flex={1}>\r\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} children={\"Notes \"} />\r\n                            <Input flex={1} ref={inputCarNotes} borderColor={carNameError} placeholder=\"Note\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                          </InputGroup>\r\n                        </HStack>\r\n                      </HStack>\r\n\r\n                      <HStack flex={2}>\r\n                        <TextArea flex={1} ref={inputCarDesc} borderColor='muted.500' bgColor={'white'} placeholder=\"Car Description / Salespoint\" borderWidth={1} placeholderTextColor={'muted.400'} margin={1} />\r\n                        <HStack marginTop={1} flex={1}>\r\n                          <InputGroup flex={1}>\r\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} color={'white'} children={\"Memo\"} />\r\n                            <Input multiline flex={1} ref={inputCarMemo} borderColor={carNameError} placeholder=\"Memo\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                          </InputGroup>\r\n                        </HStack>\r\n                      </HStack>\r\n\r\n\r\n                      <HStack>\r\n                        <Input keyboardType=\"numeric\" flex={1} ref={inputFobJpy} onChangeText={handleInputFobJpyChange} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"FOB Price\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                        <Input disabled ref={inputFobUsd} flex={1} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"dollar\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"0\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                      </HStack>\r\n\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  <Box w={'full'} flexDir={'row'} margin={1} paddingBottom={10} paddingTop={10} display={screenWidth < 1280 ? 'none' : 'flex'}>\r\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#D9D9D9'} onPress={handleModalClearOpen} _text={{ color: 'muted.500', }} _hover={{ bgColor: '#f0eded', }}>Clear</Button> */}\r\n                    <ClearModalButton handleClear={handleClear} />\r\n                    <Button borderRadius={3} flex={1} bgColor={'#A6BCFE'} disabled></Button> <Button flex={1} bgColor={'#A6BCFE'} disabled></Button>\r\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#7B9CFF'} _hover={{ bgColor: '#517cfc', }}>Upload</Button> */}\r\n                    <UploadModalButton handleUpload={handleUpload} />\r\n\r\n                  </Box>\r\n\r\n                </Box>\r\n              </PresenceTransition>\r\n            </ScrollView>\r\n\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n\r\n      <LoadingModal />\r\n      {/* <Box\r\n        position=\"absolute\"\r\n        top={0}\r\n        bottom={0}\r\n        left={0}\r\n        right={0}\r\n        backgroundColor=\"rgba(0, 0, 0, 0.5)\"\r\n        flex={1}\r\n        display={isLoading ? '' : 'none'}\r\n      >\r\n        <Center flex={1}>\r\n          <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Spinner size=\"lg\" color=\"white\" />\r\n            <Text color={'white'}>Loading, please wait!</Text>\r\n          </Box>\r\n        </Center>\r\n      </Box> */}\r\n\r\n      <UpdateSuccessModal onClose={handleUpdateSuccessModalClose} headerText={'Vehicle Updated!'} bodyText={'Vehicle was successfully updated!'} />\r\n      <UploadSuccessModal onClose={handleSuccessModalClose} headerText={'Vehicle Added!'} bodyText={'Vehicle was successfully added! You can view it in the vehicle list.'} />\r\n    </NativeBaseProvider>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Flex,\r\n    HStack,\r\n    Icon,\r\n    Image as NativeImage,\r\n    Input,\r\n    Modal,\r\n    NativeBaseProvider,\r\n    Popover,\r\n    Spinner,\r\n    Stack,\r\n    Text,\r\n    VStack,\r\n    TextArea,\r\n    InputRightAddon,\r\n    InputGroup,\r\n    InputLeftAddon,\r\n    Select,\r\n    CheckIcon,\r\n    PresenceTransition,\r\n    CloseIcon,\r\n    ScrollView as ScrollViewNative,\r\n    Divider,\r\n    useDisclosure,\r\n    useDisclose,\r\n    FormControl,\r\n    Checkbox,\r\n    useToast,\r\n    Tooltip,\r\n    Progress,\r\n    Alert\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n    Dimensions,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    StyleSheet,\r\n    View,\r\n    PanResponder,\r\n    Animated,\r\n    InputAccessoryView,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    TextInput,\r\n    Image as RNImage,\r\n    Pressable,\r\n    Linking,\r\n    Modal as RNModal,\r\n    Platform,\r\n    SafeAreaView,\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo,\r\n    FontAwesome5,\r\n    EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup, increment } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n    setVehicleListData,\r\n    setSupplyChainsCostsData,\r\n    setSelectedPaidTo,\r\n    setSelectedExpenseName,\r\n    setSupplyChainsCostsModalVisible,\r\n    setVehicleListSupplyChainsCostsData,\r\n    setDeleteImageVisible,\r\n    setSelectedImages,\r\n    setAddAnotherImages,\r\n    setIsAddPhotoVisible,\r\n    setUploadImagesModalVisible,\r\n    setUploadImagesButtonLoading,\r\n    setViewImagesModalVisible,\r\n    setViewImagesData,\r\n    setLoadingModalVisible,\r\n    setAddVehicleListData,\r\n    setEditVehicleModalVisible,\r\n    setFobPriceHistoryModalVisible,\r\n    setChatListData,\r\n    setChatListImageUrl,\r\n    setChatListLastVisible,\r\n    setLoadMoreLoading,\r\n    setNoMoreData,\r\n    setActiveChatId,\r\n    setChatListSearchText,\r\n    setChatMessagesData,\r\n    setChatMessageBoxLoading,\r\n    setSelectedChatData,\r\n    setReadByListModalVisible,\r\n    setLoadMoreMessagesLoading,\r\n    setNoMoreMessagesData,\r\n    setDeleteMessageTemplateVisible,\r\n    setInvoiceData,\r\n    setTransactionModalVisible,\r\n    setPreviewInvoiceVisible,\r\n    setSelectedCustomerData,\r\n    setPdfViewerModalVisible,\r\n    setSelectedFileUrl,\r\n    setIsLoading,\r\n    setLoginName,\r\n    setCarImageUrl,\r\n} from './redux/store';\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\nimport Hyperlink from 'react-native-hyperlink';\r\nimport { HmacSHA256, enc } from 'crypto-js';\r\nimport { CRYPTO_KEY } from '@env';\r\nimport { captureRef } from 'react-native-view-shot';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport QRCode from 'react-native-qrcode-svg';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { HashRouter as Router, Route, Routes, useNavigate, Navigate, useParams } from 'react-router-dom';\r\n\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'CHAT MESSAGES'\r\nlet globalLastVisible;\r\nlet globalMessagesLastVisible;\r\nlet globalSearchText = '';\r\nlet globalCustomerId = '';\r\nlet globalChatId = '';\r\nlet globalImageUrl = '';\r\nlet globalCustomerCarName = '';\r\nlet globalCustomerFirstName = '';\r\nlet globalCustomerLastName = '';\r\n\r\nlet globalAdditionalNameArray = [];\r\n\r\nlet globalAdditionalPriceArray = [];\r\n\r\nlet globalMessageTemplateSelectedTitle = '';\r\n\r\n// let userEmail = projectControlAuth.currentUser.email;\r\n\r\nlet formattedIssuingDate = ''; // Initialize the variable outside the conditional rendering block\r\nlet formattedDueDate = '';\r\n\r\nlet transactionModalTitle = '';\r\n\r\nlet transactionModalContentValue = 0;\r\n\r\nlet ip = '';\r\nlet ipCountry = '';\r\n\r\nlet globalInvoiceVariable = {\r\n    carData: {\r\n\r\n    },\r\n    cfs: '',\r\n    placeOfDelivery: '',\r\n    departureCountry: '',\r\n    departurePort: '',\r\n    salesPerson: '',\r\n\r\n    discharge: {\r\n        port: '',\r\n        country: '',\r\n    },\r\n\r\n    consignee: {\r\n        sameAsBuyer: null,\r\n        name: '',\r\n        address: '',\r\n        contactNumber: '',\r\n        fax: '',\r\n        email: '',\r\n    },\r\n\r\n    notifyParty: {\r\n        sameAsConsignee: null,\r\n        name: '',\r\n        address: '',\r\n        contactNumber: '',\r\n        fax: '',\r\n        email: '',\r\n    },\r\n\r\n    paymentDetails: {\r\n        incoterms: '',\r\n        inspectionIsChecked: null,\r\n        inspectionName: '',\r\n        warrantyIsCheck: null,\r\n        warrantyAmount: 0,\r\n        fobPrice: 0,\r\n        freightPrice: 0,\r\n        insurancePrice: 0,\r\n        inspectionPrice: 0,\r\n        totalAmount: 0,\r\n        additionalName: [],\r\n        additionalPrice: [],\r\n    },\r\n\r\n    bankInformations: {\r\n        dueDate: '',\r\n        issuingDate: '',\r\n        bankAccount: {\r\n\r\n        },\r\n        paymentTerms: '',\r\n        salesAgreement: '',\r\n    },\r\n\r\n}\r\n\r\nlet globalSelectedPDFUrl = '';\r\nlet globalSelectedFileType = '';\r\n\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n\r\n    const user = projectControlAuth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n\r\n\r\nconst TimelineStatus = ({ data }) => {\r\n\r\n    const selectedChatData = useSelector(state => state.selectedChatData);\r\n\r\n    const changeIndex = data.findIndex(item => selectedChatData.stepIndicator.value < item.value);\r\n\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', paddingTop: 3, }}>\r\n            {/* Dots and individual line segments */}\r\n            {data.map((item, index) => (\r\n                <View key={index} style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                    {/* Dot */}\r\n                    <Tooltip label={item.title} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33' }}>\r\n                        <View style={{\r\n                            width: 20,\r\n                            height: 20,\r\n                            borderRadius: 10,\r\n                            backgroundColor: selectedChatData.stepIndicator.value < item.value ? '#C1C1C1' : '#abf7c7',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n\r\n                            {selectedChatData.stepIndicator.value < item.value ? (\r\n                                <FastImage\r\n                                    source={{\r\n                                        uri: require(`../../assets/chat_step/chat_step_${item.value}_off.png`),\r\n                                        priority: FastImage.priority.normal,\r\n                                    }}\r\n                                    style={{\r\n                                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                                        width: 15,\r\n                                        height: 15,\r\n                                        alignSelf: 'center',\r\n                                    }}\r\n                                    resizeMode={FastImage.resizeMode.stretch}\r\n                                />\r\n                            ) : (\r\n                                <FastImage\r\n                                    source={{\r\n                                        uri: require(`../../assets/chat_step/chat_step_${item.value}_on.png`),\r\n                                        priority: FastImage.priority.normal\r\n                                    }}\r\n                                    style={{\r\n                                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                                        width: 15,\r\n                                        height: 15,\r\n                                        alignSelf: 'center',\r\n                                    }}\r\n                                    resizeMode={FastImage.resizeMode.stretch}\r\n                                />\r\n                            )}\r\n\r\n                        </View>\r\n                    </Tooltip>\r\n                    {/* Line Segment (except for the last dot) */}\r\n                    {index < data.length - 1 && (\r\n                        <View style={{\r\n                            height: 3,\r\n                            width: 20, // Adjust the width to match the space between the dots\r\n                            backgroundColor: selectedChatData.stepIndicator.value <= item.value ? '#C1C1C1' : '#abf7c7',\r\n                        }} />\r\n                    )}\r\n                </View>\r\n            ))}\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nconst statusData = [\r\n    { title: 'Negotiation', value: 1 },\r\n    { title: 'Issued Proforma Invoice', value: 2 },\r\n    { title: 'Order Item', value: 3 },\r\n    { title: 'Payment Confirmed', value: 4 },\r\n    { title: 'Shipping Schedule', value: 5 },\r\n    { title: 'Documents', value: 6 },\r\n    { title: 'Vehicle Received', value: 7 },\r\n    // Add more events as needed\r\n];\r\n\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n// const SkeletonChatListLayout = () => {\r\n//     return (\r\n//         <SkeletonPlaceholder>\r\n//             <SkeletonPlaceholder.Item flexDirection=\"row\" alignItems=\"center\" padding={12}>\r\n//                 {/* Placeholder for Image */}\r\n//                 <SkeletonPlaceholder.Item width={60} height={60} borderRadius={30} />\r\n\r\n//                 {/* Placeholder for Texts */}\r\n//                 <SkeletonPlaceholder.Item flex={1} marginLeft={20}>\r\n//                     {/* Date */}\r\n//                     <SkeletonPlaceholder.Item width={80} height={12} marginBottom={6} />\r\n//                     {/* Car Name */}\r\n//                     <SkeletonPlaceholder.Item width={120} height={14} marginBottom={6} />\r\n//                     {/* Text First and Last */}\r\n//                     <SkeletonPlaceholder.Item width={140} height={14} marginBottom={6} />\r\n//                     {/* Last Message */}\r\n//                     <SkeletonPlaceholder.Item width={160} height={12} marginBottom={6} />\r\n//                 </SkeletonPlaceholder.Item>\r\n//             </SkeletonPlaceholder.Item>\r\n//         </SkeletonPlaceholder>\r\n//     );\r\n// };\r\n\r\nconst HeaderButton = ({ title, onPress, isActive, headerCount }) => {\r\n    const activeStyle = isActive ? { backgroundColor: '#E1EDF7' } : {};\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n    return (\r\n        <Pressable\r\n            onHoverIn={hoverIn}\r\n            onHoverOut={hoverOut}\r\n            focusable={false}\r\n            onPress={onPress}\r\n            style={{ backgroundColor: isHovered ? '#f2f2f2' : 'transparent', padding: 12, marginVertical: screenWidth > 1818 ? 10 : 2, borderWidth: 5, borderColor: 'transparent', marginLeft: 8, width: 195, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 5, ...activeStyle }}\r\n        >\r\n            <Text color={isActive ? '#0A78BE' : '#1C2B33'} fontSize={14} style={{ fontWeight: isActive ? 700 : 400, alignSelf: 'center', textAlign: 'center', }}>{title}</Text>\r\n            {headerCount}\r\n\r\n        </Pressable>\r\n    );\r\n};\r\n\r\nconst FilterButton = ({ title, onPress, isActive, iconActive, iconNotActive }) => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n    return (\r\n        <Pressable\r\n            focusable={false}\r\n            variant='ghost'\r\n            onPress={onPress}\r\n            onHoverIn={hoverIn}\r\n            onHoverOut={hoverOut}\r\n            style={{\r\n                padding: 5,\r\n                width: 100,\r\n                margin: 5,\r\n                flexDirection: 'row', // Align items in a row\r\n                alignItems: 'center', // Center items vertically\r\n                justifyContent: 'center',\r\n                borderRadius: 5,\r\n                backgroundColor: isActive ? '#E1EDF7' : (isHovered ? '#d7d7d9' : '#ECEDF0'),\r\n            }}\r\n        >\r\n            {isActive ? iconActive : iconNotActive}\r\n            <Text color={isActive ? '#0A78BE' : '#1C2B33'} fontSize={14} style={{ fontWeight: isActive ? 700 : 400, marginLeft: 5, }}>{title}</Text>\r\n\r\n\r\n        </Pressable>\r\n    );\r\n};\r\n\r\nconst formatDate = (timestamp) => {\r\n    const currentDate = new Date();\r\n    const formattedTimestamp = timestamp.replace(' at ', 'T').replace(/\\//g, '-');\r\n    const givenDate = new Date(formattedTimestamp);\r\n\r\n    // Resetting the time part to compare dates only\r\n    const currentFormattedDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\r\n    const givenFormattedDate = new Date(givenDate.getFullYear(), givenDate.getMonth(), givenDate.getDate());\r\n\r\n    // Check if the dates are the same\r\n    if (givenFormattedDate.getTime() === currentFormattedDate.getTime()) {\r\n        return \"This day\";\r\n    }\r\n\r\n    const oneDay = 24 * 60 * 60 * 1000;\r\n    const startOfWeek = new Date();\r\n    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() + (startOfWeek.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    // Check if the date is within this week\r\n    if (givenDate >= startOfWeek && givenDate < currentFormattedDate) {\r\n        return givenDate.toLocaleDateString('en-US', { weekday: 'short' });\r\n    }\r\n\r\n    // Check if the date is within this year\r\n    const startOfYear = new Date(new Date().getFullYear(), 0, 1);\r\n    if (givenDate >= startOfYear) {\r\n        return givenDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    }\r\n\r\n    // If the date is not within this year\r\n    return givenDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });\r\n};\r\n\r\nconst SkeletonChatListLayout = () => {\r\n\r\n    return (\r\n        <>\r\n            <View // Add a unique key here\r\n                style={{\r\n                    padding: 12,\r\n                    alignItems: 'flex-start',\r\n                    flexDirection: 'row',\r\n                    backgroundColor: 'white',\r\n                }}\r\n            >\r\n                {/* Skeleton for the image */}\r\n                <View\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginRight: 12,\r\n                    }}\r\n                />\r\n                {/* Skeleton for the text */}\r\n                <View style={{ flex: 1 }}>\r\n                    {Array.from({ length: 3 }).map((_, subIndex) => (\r\n                        <View\r\n                            key={`text-${subIndex}`}  // Add a unique key here for each text line\r\n                            style={{\r\n                                height: 10,\r\n                                backgroundColor: '#e0e0e0',\r\n                                marginBottom: 6,\r\n                                width: '80%',\r\n                                borderRadius: 4,\r\n                            }}\r\n                        />\r\n                    ))}\r\n                    <View style={{\r\n                        position: 'absolute',\r\n                        right: 10, height: 10,\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginBottom: 6,\r\n                        width: '5%',\r\n                        borderRadius: 4,\r\n                    }} />\r\n                </View>\r\n            </View>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst DeleteMessageTemplateYesNo = ({ handleDeleteMessageTemplateClose }) => {\r\n\r\n    const deleteMessageTemplateVisible = useSelector((state) => state.deleteMessageTemplateVisible);\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n    const selectedTitle = globalMessageTemplateSelectedTitle;\r\n    const [isDeleteLoading, setIsDeleteLoading] = useState(false);\r\n    const handleClose = () => {\r\n        handleDeleteMessageTemplateClose();\r\n\r\n    }\r\n\r\n\r\n    const deleteMessageTemplate = async (titleToDelete) => {\r\n        const documentRef = doc(projectControlFirestore, 'MessageTemplate', email);\r\n        setIsDeleteLoading(true);\r\n        try {\r\n            // Fetch current data\r\n            const docSnap = await getDoc(documentRef);\r\n\r\n            if (docSnap.exists()) {\r\n                let messageTemplates = docSnap.data().messageTemplate || [];\r\n\r\n                // Filter out the item with the specified title\r\n                const updatedTemplates = messageTemplates.filter(template => template.title !== titleToDelete);\r\n\r\n                // Update the document with the new array\r\n                await updateDoc(documentRef, { messageTemplate: updatedTemplates });\r\n\r\n                console.log('Item successfully deleted');\r\n                setIsDeleteLoading(false);\r\n                handleClose();\r\n            } else {\r\n                console.log('Document does not exist');\r\n                setIsDeleteLoading(false);\r\n\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting item: ', error);\r\n            setIsDeleteLoading(false);\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={deleteMessageTemplateVisible}\r\n            onClose={handleClose}\r\n        >\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header >Delete Message Template?</Modal.Header>\r\n                <Modal.Body>\r\n                    <View style={{ flex: 1, }}>\r\n                        <Text style={{ fontWeight: 400, }}>Are you sure you want to delete the selected message template?</Text>\r\n                    </View>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"ghost\" space=\"2\">\r\n                        <Button style={{ width: 80, height: 36, }} onPress={handleClose} variant={'solid'} colorScheme={'warmGray'}>Cancel</Button>\r\n                        <Button isLoading={isDeleteLoading ? true : false} onPress={() => deleteMessageTemplate(selectedTitle)} style={{ padding: 16, height: 36, }} variant={'solid'} colorScheme={'error'}>Delete</Button>\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n};\r\n\r\nconst MessageTemplateItem = ({ setOriginalTitle, addVisible, titleInputRef, valueInputRef, setAddVisible, item, textInputRef, setPopoverOpen }) => {\r\n    const [isTemplateItemHovered, setIsTemplateItemHovered] = useState(false);\r\n    const [isTemplateMenuHovered, setIsTemplateMenuHovered] = useState(false);\r\n    const [isTemplateEditHovered, setIsTemplateEditHovered] = useState(false);\r\n    const [isTemplateDeleteHovered, setIsTemplateDeleteHovered] = useState(false);\r\n    const [templateMenuOpen, setTemplateMenuOpen] = useState(false);\r\n    const [currentItem, setCurrentItem] = useState(null);\r\n    const [addIsVisible, setIsAddVisible] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const onPress = (item) => {\r\n        textInputRef.current.value = item.value;\r\n        setPopoverOpen(false);\r\n    };\r\n\r\n    const onEditPress = (item) => {\r\n\r\n        setAddVisible(true);\r\n        // setCurrentItem(item);\r\n        setIsAddVisible(true);\r\n        setTemplateMenuOpen(false);\r\n        titleInputRef.current.value = item.title;\r\n        valueInputRef.current.value = item.value;\r\n        setOriginalTitle(item.title);\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n\r\n\r\n    //     if (addIsVisible == true) {\r\n    //         console.log(addIsVisible);\r\n    //         titleInputRef.current.value = currentItem.title;\r\n    //         valueInputRef.current.value = currentItem.value;\r\n    //     }\r\n    //     if (titleInputRef.current && valueInputRef.current) {\r\n    //         titleInputRef.current.value = currentItem.title;\r\n    //         valueInputRef.current.value = currentItem.value;\r\n    //     }\r\n    // }, [currentItem]);\r\n\r\n    const handleDeletePress = (title) => {\r\n\r\n        dispatch(setDeleteMessageTemplateVisible(true));\r\n        globalMessageTemplateSelectedTitle = title;\r\n    }\r\n\r\n\r\n    return (\r\n        <Pressable\r\n            onPress={() => onPress(item)}\r\n            onHoverIn={() => setIsTemplateItemHovered(true)}\r\n            onHoverOut={() => setIsTemplateItemHovered(false)}\r\n            style={{\r\n                padding: 10,\r\n                backgroundColor: isTemplateItemHovered ? '#f2f2f2' : 'transparent',\r\n                flex: 1,\r\n                borderRadius: 5,\r\n            }}>\r\n            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                <Text style={{ fontWeight: '700', flex: 1, }} numberOfLines={1} ellipsizeMode='tail'>{item.title}</Text>\r\n                <Popover\r\n                    isOpen={templateMenuOpen}\r\n                    onClose={() => setTemplateMenuOpen(false)}\r\n                    trigger={(triggerProps) => {\r\n                        return <Pressable\r\n                            {...triggerProps}\r\n                            onPress={() => setTemplateMenuOpen(true)}\r\n                            onHoverIn={() => setIsTemplateMenuHovered(true)}\r\n                            onHoverOut={() => setIsTemplateMenuHovered(false)}\r\n                            style={{ backgroundColor: isTemplateMenuHovered ? '#dedede' : 'transparent', padding: 5, justifyContent: 'center', borderRadius: 5, }}>\r\n                            <Entypo size={16} name='dots-three-horizontal' color='#171717' />\r\n                        </Pressable>\r\n                    }}\r\n\r\n                >\r\n                    <Popover.Content>\r\n\r\n                        <Pressable\r\n                            onPress={() => onEditPress(item)}\r\n                            onHoverIn={() => setIsTemplateEditHovered(true)}\r\n                            onHoverOut={() => setIsTemplateEditHovered(false)} style={{ flex: 1, width: 50, backgroundColor: isTemplateEditHovered ? '#dedede' : 'white', padding: 5, }} focusable={false}>\r\n                            <Text>Edit</Text>\r\n                        </Pressable>\r\n\r\n                        <Pressable\r\n                            onPress={() => handleDeletePress(item.title)}\r\n                            onHoverIn={() => setIsTemplateDeleteHovered(true)}\r\n                            onHoverOut={() => setIsTemplateDeleteHovered(false)} style={{ flex: 1, width: 50, backgroundColor: isTemplateDeleteHovered ? '#dedede' : 'white', padding: 5, }} focusable={false}>\r\n                            <Text>Delete</Text>\r\n                        </Pressable>\r\n\r\n                    </Popover.Content>\r\n                </Popover>\r\n            </View>\r\n            <Text style={{ fontWeight: '400', fontSize: 12, }} numberOfLines={1} ellipsizeMode='tail'>{item.value}</Text>\r\n        </Pressable>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst MessageTemplate = ({ textInputRef }) => {\r\n    const dispatch = useDispatch();\r\n    const [isTemplateHovered, setIsTemplateHovered] = useState(false);\r\n    const [isAddHovered, setIsAddHovered] = useState(false);\r\n    const [popoverOpen, setPopoverOpen] = useState(false);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [addVisible, setAddVisible] = useState(false);\r\n\r\n    const [isCancelHovered, setIsCancelHovered] = useState(false);\r\n    const [isSaveHovered, setIsSaveHovered] = useState(false);\r\n    const [originalTitle, setOriginalTitle] = useState('');\r\n\r\n\r\n    const [saveLoading, setSaveLoading] = useState(false);\r\n\r\n    const [templateData, setTemplateData] = useState([]);\r\n\r\n    const searchInputRef = useRef(null);\r\n    const titleInputRef = useRef(null);\r\n    const valueInputRef = useRef(null);\r\n\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n    const data = [\r\n        { title: 'Message 1', value: 'Sample Message 1' },\r\n        { title: 'Message 2', value: 'Sample Message 2' },\r\n        { title: 'Message 3', value: 'Sample Message 3' },\r\n    ];\r\n\r\n\r\n\r\n    const saveMessageTemplate = async () => {\r\n        setSaveLoading(true);\r\n        const documentRef = doc(projectControlFirestore, 'MessageTemplate', email);\r\n\r\n        try {\r\n            // Fetch current data\r\n            const docSnap = await getDoc(documentRef);\r\n\r\n            let messageTemplates = [];\r\n            const newTitle = titleInputRef.current?.value;\r\n            const newValue = valueInputRef.current?.value;\r\n\r\n            if (newTitle && newValue) {\r\n                if (docSnap.exists()) {\r\n                    // Document exists, get the current templates\r\n                    messageTemplates = docSnap.data().messageTemplate || [];\r\n\r\n                    // Find index based on the original title\r\n                    const index = messageTemplates.findIndex(template => template.title === originalTitle);\r\n\r\n                    if (index !== -1) {\r\n                        // Update existing template\r\n                        messageTemplates[index] = { title: newTitle, value: newValue };\r\n                    } else {\r\n                        // Add new template if original title does not exist\r\n                        messageTemplates.push({ title: newTitle, value: newValue });\r\n                    }\r\n                } else {\r\n                    // Document does not exist, create a new array with the new template\r\n                    console.log('Creating a new document');\r\n                    messageTemplates = [{ title: newTitle, value: newValue }];\r\n                }\r\n\r\n                // Update or set the document\r\n                await setDoc(documentRef, { messageTemplate: messageTemplates }, { merge: true });\r\n\r\n                console.log('Document successfully updated or created');\r\n            } else {\r\n                console.log('Title or value is empty');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating or creating document: ', error);\r\n        } finally {\r\n            setSaveLoading(false);\r\n            handleCancelPressed();\r\n        }\r\n    };\r\n\r\n\r\n    const handleSearch = (text) => {\r\n        setSearchText(text);\r\n        const filtered = templateData.filter(item =>\r\n            item.title.toLowerCase().includes(text.toLowerCase()) ||\r\n            item.value.toLowerCase().includes(text.toLowerCase())\r\n        );\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const handlePopoverClose = () => {\r\n        setPopoverOpen(false);\r\n        setAddVisible(false);\r\n        setIsAddHovered(false);\r\n    };\r\n\r\n    const handleCancelPressed = () => {\r\n        setIsAddHovered(false);\r\n        setAddVisible(false);\r\n        setIsCancelHovered(false)\r\n        setIsSaveHovered(false)\r\n        titleInputRef.current.clear();\r\n        valueInputRef.current.clear();\r\n\r\n    };\r\n\r\n    const renderItem = ({ item }) => {\r\n        return <MessageTemplateItem setOriginalTitle={setOriginalTitle} addVisible={addVisible} titleInputRef={titleInputRef} valueInputRef={valueInputRef} setAddVisible={setAddVisible} item={item} textInputRef={textInputRef} setPopoverOpen={setPopoverOpen} />;\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectControlFirestore, \"MessageTemplate\", email);\r\n\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                let arrayFieldData = docSnap.data().messageTemplate;\r\n\r\n                // Sort the array by title\r\n                arrayFieldData.sort((a, b) => {\r\n                    let titleA = a.title.toUpperCase(); // ignore upper and lowercase\r\n                    let titleB = b.title.toUpperCase(); // ignore upper and lowercase\r\n                    if (titleA < titleB) {\r\n                        return -1;\r\n                    }\r\n                    if (titleA > titleB) {\r\n                        return 1;\r\n                    }\r\n                    // titles must be equal\r\n                    return 0;\r\n                });\r\n\r\n                setTemplateData(arrayFieldData);\r\n            } else {\r\n                console.log(\"No such document!\");\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching document:\", error);\r\n        });\r\n\r\n        // Cleanup subscription on unmount\r\n        return () => unsubscribe();\r\n    }, [popoverOpen]);\r\n\r\n    const handleDeleteMessageTemplateClose = () => {\r\n\r\n        dispatch(setDeleteMessageTemplateVisible(false));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <DeleteMessageTemplateYesNo handleDeleteMessageTemplateClose={handleDeleteMessageTemplateClose} />\r\n            <Popover\r\n                isOpen={popoverOpen}\r\n                onClose={handlePopoverClose}\r\n                initialFocusRef={searchInputRef}\r\n                finalFocusRef={textInputRef}\r\n                placement={'top'}\r\n                trigger={(triggerProps) => {\r\n                    return <Pressable\r\n                        focusable={false}\r\n                        {...triggerProps}\r\n                        onPress={() => setPopoverOpen(true)}\r\n                        onHoverIn={() => setIsTemplateHovered(true)}\r\n                        onHoverOut={() => setIsTemplateHovered(false)}\r\n                        style={({ pressed }) => [\r\n                            {\r\n                                bottom: 0,\r\n                                right: 100,\r\n                                position: 'absolute',\r\n                                borderRadius: 20,\r\n                                opacity: pressed ? 0.5 : 1\r\n                            }\r\n                        ]}\r\n\r\n                    >\r\n                        <Ionicons name=\"chatbox-ellipses-outline\" size={24} color={isTemplateHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n                    </Pressable>\r\n                }} >\r\n                <Popover.Content w={400} marginRight={10} >\r\n                    <Popover.Arrow />\r\n                    <View style={{ display: addVisible ? 'flex' : 'none', }}><Popover.Header backgroundColor={'white'}>\r\n                        <View style={{ flexDirection: 'row', flex: 1 }}>\r\n                            <Text style={{ fontWeight: 700, fontSize: 16, flex: 1 }}>Create a message template</Text>\r\n                        </View>\r\n                    </Popover.Header>\r\n                        <Popover.Body backgroundColor={'white'} height={250}>\r\n                            <Text style={{ fontWeight: 700, }}>Title</Text>\r\n                            <TextInput\r\n                                ref={titleInputRef}\r\n                                placeholder='Input Title'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 40, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5 }} />\r\n                            <br />\r\n                            <Text style={{ fontWeight: 700, }}>Message</Text>\r\n                            <TextInput\r\n                                multiline\r\n                                ref={valueInputRef}\r\n                                placeholder='Input Message'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 100, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5 }} />\r\n\r\n                        </Popover.Body>\r\n                        <Popover.Footer backgroundColor={'white'}>\r\n                            <View style={{ height: 30, flexDirection: 'row', justifyContent: 'center', }}>\r\n                                <Pressable\r\n                                    onHoverIn={() => setIsCancelHovered(true)}\r\n                                    onHoverOut={() => setIsCancelHovered(false)}\r\n                                    onPress={handleCancelPressed}\r\n                                    style={{ backgroundColor: isCancelHovered ? '#DADADA' : 'white', width: 60, borderRadius: 5, padding: 5, borderWidth: 1, borderColor: '#DADDE1', marginHorizontal: 5, }}>\r\n                                    <Text style={{ textAlign: 'center', fontWeight: 500, }}>Cancel</Text>\r\n                                </Pressable>\r\n\r\n                                <Pressable\r\n                                    onPress={saveMessageTemplate}\r\n                                    onHoverIn={() => setIsSaveHovered(true)}\r\n                                    onHoverOut={() => setIsSaveHovered(false)}\r\n                                    style={{ backgroundColor: isSaveHovered ? '#107a37' : '#16A34A', width: 60, borderRadius: 5, padding: 5, borderWidth: 1, borderColor: '#DADDE1', marginHorizontal: 5, }}>\r\n                                    {saveLoading ?\r\n                                        (<Spinner\r\n                                            animating\r\n                                            size=\"sm\"\r\n                                            color={'white'}\r\n                                        />) :\r\n                                        (\r\n                                            <Text style={{ textAlign: 'center', color: 'white', fontWeight: 500, }}>Save</Text>\r\n                                        )}\r\n                                </Pressable>\r\n                            </View>\r\n                        </Popover.Footer>\r\n                    </View><View style={{ display: !addVisible ? 'flex' : 'none', }}><Popover.Header backgroundColor={'white'}>\r\n                        <View style={{ flexDirection: 'row', flex: 1 }}>\r\n                            <Text style={{ fontWeight: 700, fontSize: 16, flex: 1 }}>Message Template</Text>\r\n                            <Pressable focusable={false} onPress={() => setAddVisible(true)} onHoverIn={() => setIsAddHovered(true)} onHoverOut={() => setIsAddHovered(false)}>\r\n                                <Text style={{ fontWeight: 400, fontSize: 16, color: '#1B81C2', textDecorationLine: isAddHovered ? 'underline' : 'none' }}>+ ADD</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </Popover.Header>\r\n                        <Popover.Body backgroundColor={'white'} height={300}>\r\n                            <TextInput\r\n                                ref={searchInputRef}\r\n                                placeholder='Search'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 40, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5, marginBottom: 5, }}\r\n                                keyboardType='search'\r\n                                onChangeText={handleSearch}\r\n                                value={searchText} />\r\n                            {templateData.length > 0 || filteredData.length > 0 ? (\r\n                                <FlatList\r\n                                    style={{ height: 100, borderBottomLeftRadius: 5 }}\r\n                                    renderItem={renderItem}\r\n                                    keyExtractor={item => item.title.toString()}\r\n                                    data={searchText ? filteredData : templateData} />\r\n                            ) : (\r\n                                <Text style={{ fontWeight: 700, alignSelf: 'center', }}>No message template found</Text>\r\n                            )}\r\n\r\n                        </Popover.Body>\r\n                    </View>\r\n                </Popover.Content>\r\n            </Popover>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst FileDisplay = ({ file, onRemove }) => {\r\n    const iconSize = 24;\r\n    if (!file) return null;  // Define the icon size\r\n\r\n\r\n\r\n\r\n    const getFileIcon = (type) => {\r\n        if (type.includes('pdf')) {\r\n            return <MaterialIcons name={'picture-as-pdf'} size={iconSize} color=\"#FF0000\" />; // Red for PDF\r\n        }\r\n        if (type.includes('msword') || type.includes('wordprocessingml')) {\r\n            return <MaterialCommunityIcons name={'microsoft-word'} size={iconSize} color=\"#2B579A\" />; // Blue for Word\r\n        }\r\n        if (type.includes('vnd.ms-excel') || type.includes('spreadsheetml') || type === 'text/csv') {\r\n            return <MaterialCommunityIcons name={'microsoft-excel'} size={iconSize} color=\"#217346\" />; // Green for Excel and CSV\r\n        }\r\n        if (type.includes('rar') || type.includes('x-rar-compressed') || type.includes('x-compressed')) {\r\n            return <FastImage\r\n                source={{ uri: require('../../assets/rar_icon.png'), priority: FastImage.priority.high }}\r\n                style={{\r\n                    width: 24,\r\n                    height: 24,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.cover}\r\n            />; // Color of your choice for RAR files\r\n        }\r\n\r\n        return <MaterialIcons name=\"insert-drive-file\" size={iconSize} color=\"black\" />; // Default color for others\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', margin: 5 }}>\r\n            {getFileIcon(file.type)}\r\n            <Text style={{ marginLeft: 10 }}>{file.name}</Text>\r\n            <Pressable onPress={onRemove}>\r\n                <MaterialIcons name=\"close\" size={20} color=\"black\" />\r\n            </Pressable>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst ChatInputText = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n\r\n    const [isSendHovered, setIsSendHovered] = useState(false);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [selectedFilePreview, setSelectedFilePreview] = useState(null);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [imageUri, setImageUri] = useState(null);\r\n    const [fileUri, setFileUri] = useState(null);\r\n    const [fileName, setFileName] = useState('');\r\n    const [isSendImageHovered, setIsSendImageHovered] = useState(false);\r\n    const [isSendAttachmentHovered, setIsSendAttachmentHovered] = useState(false);\r\n    const [sendIsLoading, setSendIsLoading] = useState(false);\r\n    const textInputRef = useRef(null);\r\n\r\n    const removeImage = () => {\r\n        setImageUri(null);\r\n        setSelectedImage(null);\r\n        setFileName(null);\r\n\r\n    };\r\n\r\n    const removeFile = () => {\r\n        setSelectedFile(null);\r\n        setSelectedFilePreview(null);\r\n        setFileUri(null);\r\n        setFileName(null);\r\n\r\n\r\n    };\r\n\r\n    const selectFile = async () => {\r\n        const maxFileSize = 10 * 1024 * 1024; // 5MB in bytes\r\n\r\n        if (Platform.OS === 'web') {\r\n            return new Promise((resolve, reject) => {\r\n                const input = document.createElement('input');\r\n                input.type = 'file';\r\n                input.accept = '.pdf, .doc, .docx, .xls, .xlsx, .rar'; // Acceptable file types\r\n                input.onchange = () => {\r\n                    const file = input.files[0];\r\n\r\n                    if (file) {\r\n                        if (![\r\n                            'application/pdf',\r\n                            'application/msword',\r\n                            'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n                            'application/vnd.ms-excel',\r\n                            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                            'application/x-rar-compressed',\r\n                            'application/x-compressed',\r\n                            'text/csv'\r\n                        ].includes(file.type)) {\r\n                            alert('File type not allowed');\r\n                            reject('File type not allowed');\r\n                            return;\r\n                        }\r\n\r\n                        if (file.size > maxFileSize) {\r\n                            alert('File size should be less than 10MB');\r\n                            reject('File size should be less than 10MB');\r\n                            return;\r\n                        }\r\n                        removeImage();\r\n                        // Read the file as a Data URL and set it in the state\r\n                        const reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            setFileUri(e.target.result);\r\n                            resolve(file);\r\n                            setSelectedFile(file);\r\n                            setSelectedFilePreview({ name: file.name, type: file.type });\r\n                            setFileName(file.name);\r\n                            textInputRef.current.focus();\r\n                        };\r\n                        reader.onerror = (e) => {\r\n                            reject(e);\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                };\r\n                input.click();\r\n            });\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                launchImageLibrary({ mediaType: 'photo' }, (response) => {\r\n                    if (response.didCancel) {\r\n                        reject('User cancelled image picker');\r\n                    } else if (response.errorCode) {\r\n                        reject(response.errorMessage);\r\n                    } else {\r\n                        const asset = response.assets[0];\r\n\r\n                        if (!asset.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if (asset.fileSize > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('File size should be less than 10MB');\r\n                            return;\r\n                        }\r\n\r\n                        const selectedImageUri = asset.uri;\r\n                        const fileName = asset.fileName || 'Unknown name';\r\n                        resolve({ uri: selectedImageUri, name: fileName });\r\n                        setImageUri(selectedImageUri); // Set imageUri here\r\n                        console.log(`File name: ${fileName}`);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const selectImage = async () => {\r\n        const maxFileSize = 10 * 1024 * 1024; // 5MB in bytes\r\n\r\n        if (Platform.OS === 'web') {\r\n\r\n            return new Promise((resolve, reject) => {\r\n                const input = document.createElement('input');\r\n                input.type = 'file';\r\n                input.accept = 'image/*';\r\n                input.onchange = () => {\r\n                    const file = input.files[0];\r\n                    if (file) {\r\n\r\n                        if (!file.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if (file.size > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('File size should be less than 10MB');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        removeFile();\r\n                        const reader = new FileReader();\r\n                        reader.readAsDataURL(file);\r\n                        reader.onload = () => {\r\n                            resolve({ dataUrl: reader.result, name: file.name });\r\n                            setImageUri(reader.result); // Set imageUri here\r\n                            setFileName(file.name);\r\n                            console.log(`File name: ${file.name}`);\r\n                        };\r\n                        setSelectedImage(file);\r\n                        reader.onerror = error => reject(error);\r\n                    }\r\n                };\r\n                input.click();\r\n            });\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                launchImageLibrary({ mediaType: 'photo' }, (response) => {\r\n                    if (response.didCancel) {\r\n                        reject('User cancelled image picker');\r\n                    } else if (response.errorCode) {\r\n                        reject(response.errorMessage);\r\n                    } else {\r\n                        const asset = response.assets[0];\r\n\r\n                        if (!asset.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n                            return;\r\n                        }\r\n\r\n                        if (asset.fileSize > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('Only image files are allowed');\r\n                            return;\r\n                        }\r\n\r\n                        const selectedImageUri = asset.uri;\r\n                        const fileName = asset.fileName || 'Unknown name';\r\n                        resolve({ uri: selectedImageUri, name: fileName });\r\n                        setImageUri(selectedImageUri); // Set imageUri here\r\n                        console.log(`File name: ${fileName}`);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const resizeImage = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = (event) => {\r\n                const img = new Image();\r\n                img.src = event.target.result;\r\n                img.onload = () => {\r\n                    const canvas = document.createElement('canvas');\r\n                    const ctx = canvas.getContext('2d');\r\n\r\n                    // Set your desired image size here\r\n                    const maxWidth = 800; // Example value\r\n                    const maxHeight = 800; // Example value\r\n                    let width = img.width;\r\n                    let height = img.height;\r\n\r\n                    if (width > height) {\r\n                        if (width > maxWidth) {\r\n                            height *= maxWidth / width;\r\n                            width = maxWidth;\r\n                        }\r\n                    } else {\r\n                        if (height > maxHeight) {\r\n                            width *= maxHeight / height;\r\n                            height = maxHeight;\r\n                        }\r\n                    }\r\n\r\n                    canvas.width = width;\r\n                    canvas.height = height;\r\n                    ctx.drawImage(img, 0, 0, width, height);\r\n                    canvas.toBlob((blob) => {\r\n                        resolve(new File([blob], file.name, {\r\n                            type: 'image/jpeg',\r\n                            lastModified: Date.now()\r\n                        }));\r\n                    }, 'image/jpeg', 0.7); // Adjust the quality (0.7 is a good balance between quality and file size)\r\n                };\r\n                img.onerror = error => reject(error);\r\n            };\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    };\r\n\r\n    const addFileMessage = async () => {\r\n        setSendIsLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeForFile = moment(datetime).format('MMDDYYYYHHmmss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const inputValue = textInputRef.current?.value;\r\n\r\n        textInputRef.current.clear();\r\n        textInputRef.current.focus();\r\n        removeFile();\r\n\r\n        const storage = getStorage(projectExtensionFirebase);\r\n\r\n        if (fileUri) { // Assuming you have a fileUri state for the selected file\r\n\r\n            try {\r\n\r\n                let fileUrl = null;\r\n                if (fileUri) {\r\n                    // Upload file and get URL\r\n                    const fileRef = ref(storage, `ChatFiles/${selectedChatData.id}/C-HUB_${formattedTimeForFile}/${fileName}`);\r\n                    const uploadResult = await uploadBytes(fileRef, selectedFile);\r\n                    fileUrl = await getDownloadURL(uploadResult.ref);\r\n                }\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime,\r\n                    ip: ip,\r\n                    ipCountry: ipCountry,\r\n                    file: {\r\n                        name: fileName,\r\n                        type: 'attachment', // Set the file type\r\n                        url: fileUrl,\r\n                    } // Include file URL if available\r\n                });\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: `Sent an attachment`,\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const addImageMessage = async () => {\r\n        setSendIsLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeForFile = moment(datetime).format('MMDDYYYYHHmmss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const inputValue = textInputRef.current?.value;\r\n\r\n\r\n\r\n        const storage = getStorage(projectExtensionFirebase);\r\n\r\n        if (imageUri) { // Assuming imageFile holds the file to be uploaded\r\n\r\n            textInputRef.current.clear();\r\n            textInputRef.current.focus();\r\n            removeImage();\r\n\r\n            try {\r\n                let imageUrl = null;\r\n                if (imageUri) {\r\n                    // Upload image and get URL\r\n                    const resizedImage = await resizeImage(selectedImage);\r\n                    const imageRef = ref(storage, `ChatFiles/${selectedChatData.id}/C-HUB_${formattedTimeForFile}/${fileName}`);\r\n                    const uploadResult = await uploadBytes(imageRef, resizedImage);\r\n                    imageUrl = await getDownloadURL(uploadResult.ref);\r\n                }\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime,\r\n                    ip: ip,\r\n                    ipCountry: ipCountry,\r\n                    file: {\r\n                        name: fileName,\r\n                        type: 'image',\r\n                        url: imageUrl,\r\n                    } // Include image URL if available\r\n                });\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: 'Sent an image',\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const addMessage = async () => {\r\n        setSendIsLoading(true);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const inputValue = textInputRef.current?.value;\r\n\r\n        textInputRef.current.clear();\r\n        textInputRef.current.focus();\r\n\r\n        if (inputValue !== '') {\r\n            const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n            try {\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime, // Using the fetched timestamp\r\n                    ip: ip, // IP Address\r\n                    ipCountry: ipCountry // Country of the IP Address\r\n                });\r\n\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: inputValue,\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n\r\n    };\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const handleKeyPress = (e) => {\r\n        // Define a breakpoint for mobile resolution, e.g., 768 pixels\r\n        const mobileBreakpoint = 768;\r\n\r\n        // Check if the screen width is less than or equal to the mobile breakpoint\r\n        if (screenWidth >= mobileBreakpoint) {\r\n            // Check if 'Enter' key is pressed\r\n            if (e.nativeEvent.key === 'Enter' && !e.nativeEvent.shiftKey) {\r\n                e.preventDefault(); // Prevent the default behavior of adding a new line\r\n                handleSendMessage();\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const handleSendMessage = () => {\r\n\r\n        if (imageUri !== null) {\r\n            addImageMessage();\r\n        }\r\n        if (fileUri !== null) {\r\n            addFileMessage();\r\n        }\r\n        else {\r\n            addMessage();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <View style={{ width: '98%', flexDirection: 'row', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 10, }}>\r\n\r\n            <View style={{ flexDirection: 'column', flex: 1, }}>\r\n\r\n                {fileUri &&\r\n                    (\r\n                        <FileDisplay file={selectedFilePreview} onRemove={removeFile} />\r\n                    )}\r\n\r\n                {imageUri && (\r\n                    <View style={{\r\n                        position: 'relative', // Make sure the parent View is positioned relative\r\n                        width: 70,\r\n                        height: 70,\r\n                        borderRadius: 5,\r\n                        overflow: 'hidden', // This ensures that nothing spills out of the container\r\n                        borderWidth: 1,\r\n                        borderColor: '#DADDE1',\r\n                        margin: 2,\r\n                    }}>\r\n                        <FastImage\r\n                            source={{ uri: imageUri }}\r\n                            style={{ width: '100%', height: '100%', borderRadius: 10 }}\r\n                            resizeMode={FastImage.resizeMode.cover}\r\n                        />\r\n                        <Pressable\r\n                            onPress={removeImage}\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                right: 0,\r\n                                backgroundColor: 'rgba(255, 255, 255, 0.6)', // Semi-transparent background for better visibility\r\n                                borderRadius: 12 // Circular shape\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"close\" size={20} color=\"black\" />\r\n                        </Pressable>\r\n                    </View>\r\n\r\n                )}\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <View style={{ marginHorizontal: 5, marginTop: 5, }}>\r\n                        <FastImage\r\n                            source={{ uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FRMJ%20Round.jpg?alt=media&token=90d7f2fe-d9cd-4a6f-9a6b-bc39fe2b33b2', priority: FastImage.priority.high }}\r\n                            style={{\r\n                                width: 30,\r\n                                height: 30,\r\n                                borderRadius: 15,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.cover}\r\n                        />\r\n                    </View>\r\n                    <TextInput\r\n                        ref={textInputRef}\r\n                        multiline\r\n                        placeholder='Send a message...'\r\n                        placeholderTextColor={'#9B9E9F'}\r\n                        onKeyPress={handleKeyPress}\r\n                        style={{ outlineStyle: 'none', width: '100%', height: 80, alignSelf: 'center', padding: 10 }}\r\n                    />\r\n                    <Pressable\r\n                        focusable={false}\r\n                        onPress={() => sendIsLoading ? null : handleSendMessage()}\r\n                        onHoverIn={() => setIsSendHovered(true)}\r\n                        onHoverOut={() => setIsSendHovered(false)}\r\n                        style={({ pressed }) => [\r\n                            {\r\n                                padding: 10,\r\n                                top: 20,\r\n                                right: 10,\r\n                                position: 'absolute',\r\n                                borderRadius: 20,\r\n                                backgroundColor: isSendHovered ? '#e8f4ff' : 'transparent', // Change color on hover\r\n                                opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                            }\r\n                        ]}\r\n                    >\r\n                        {sendIsLoading ? <Spinner\r\n                            animating\r\n                            size=\"sm\"\r\n                            color={\"#95BCF9\"}\r\n                        /> :\r\n                            <MaterialIcons name=\"send\" size={24} color=\"#95BCF9\" />\r\n                        }\r\n                    </Pressable>\r\n                </View>\r\n            </View>\r\n\r\n            <Pressable\r\n                onHoverIn={() => setIsSendImageHovered(true)}\r\n                onHoverOut={() => setIsSendImageHovered(false)}\r\n                style={({ pressed }) => [\r\n                    {\r\n                        padding: 10,\r\n                        bottom: -10,\r\n                        right: 125,\r\n                        position: 'absolute',\r\n                        borderRadius: 20,\r\n                        opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                    }\r\n                ]}\r\n                onPress={selectImage}\r\n            >\r\n                <Ionicons name=\"image-outline\" size={24} color={isSendImageHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n            </Pressable>\r\n\r\n            <Pressable\r\n                onHoverIn={() => setIsSendAttachmentHovered(true)}\r\n                onHoverOut={() => setIsSendAttachmentHovered(false)}\r\n                style={({ pressed }) => [\r\n                    {\r\n                        padding: 10,\r\n                        bottom: -9,\r\n                        right: 155,\r\n                        position: 'absolute',\r\n                        borderRadius: 20,\r\n                        opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                    }\r\n                ]}\r\n                onPress={selectFile}\r\n            >\r\n                <MaterialIcons name=\"attach-file\" size={24} color={isSendAttachmentHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n            </Pressable>\r\n\r\n            <MessageTemplate textInputRef={textInputRef} />\r\n\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst ChatListItem = ({ item, onPress, isActive, messageUnread, formattedDate, chatListData }) => {\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    const [chatListStepImageUrl, setChatListStepImageUrl] = useState(null);\r\n    const [textFirst, setTextFirst] = useState('');\r\n    const [textLast, setTextLast] = useState('');\r\n    const dispatch = useDispatch();\r\n    const [isUnreadHovered, setIsUnreadHovered] = useState(false);\r\n    const [isUnreadVisible, setIsUnreadVisible] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [customerData, setCustomerData] = useState({});\r\n\r\n    const carName = item.carData && item.carData.carName ? item.carData.carName : (item.vehicle && item.vehicle.carName ? item.vehicle.carName : '');\r\n    const updateChatToUnread = async () => {\r\n        dispatch(setActiveChatId(''));\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setSelectedChatData([]));\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", item.id);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                read: false,\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n    };\r\n\r\n    const hoverIn = () => {\r\n        setIsHovered(true)\r\n    };\r\n\r\n    const hoverOut = () => {\r\n        setIsHovered(false);\r\n    };\r\n\r\n    const hoverUnreadIn = () => {\r\n        setIsHovered(true)\r\n        setIsUnreadHovered(true)\r\n    };\r\n\r\n    const hoverUnreadOut = () => {\r\n        setIsUnreadHovered(false)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // getChatListStepImageUrl();\r\n        const folderName = item.carData && item.carData.stockID ? item.carData.stockID : (item.vehicle && item.vehicle.carId ? item.vehicle.carId : '');\r\n        const storage = getStorage(projectExtensionFirebase);\r\n        const imageRef = ref(storage, `${folderName}/0`); // Ensure this path is correct\r\n\r\n        getDownloadURL(imageRef)\r\n            .then((url) => {\r\n                setImageUrl(url);\r\n            })\r\n            .catch((error) => {\r\n                if (error.code === 'storage/object-not-found') {\r\n                    // Handle the 'object not found' error.\r\n                    setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n                } else {\r\n                    // Handle other errors differently\r\n\r\n                    setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n\r\n                }\r\n            });\r\n\r\n        const collectionPath = 'accounts';\r\n        const docId = item.participants.customer; // Ensure this is a valid document ID\r\n\r\n        const docRef = doc(projectExtensionFirestore, collectionPath, docId);\r\n\r\n        const unsubscribe = onSnapshot(docRef, (doc) => {\r\n            if (doc.exists()) {\r\n                const data = doc.data();\r\n                setCustomerData(data ? data : {});\r\n                setTextFirst(data.textFirst ? data.textFirst : '');\r\n                setTextLast(data.textLast ? data.textLast : '');\r\n\r\n            } else {\r\n                console.log(\"Document not found\");\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching document: \", error);\r\n        });\r\n\r\n        // Clean up function to unsubscribe from the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const loadingCondition = !imageUrl || imageUrl == null || imageUrl == '' || imageUrl == undefined || !item;\r\n\r\n    const chatStepIconOn = require(`../../assets/chat_step/chat_step_${item.stepIndicator.value}_on.png`);\r\n    const chatStepIconOff = require(`../../assets/chat_step/chat_step_${item.stepIndicator.value}_off.png`);\r\n\r\n\r\n    const handlePress = () => {\r\n        onPress()\r\n\r\n        dispatch(setSelectedCustomerData(customerData));\r\n        globalCustomerFirstName = textFirst ? textFirst : '';\r\n        globalCustomerLastName = textLast ? textLast : '';\r\n        globalImageUrl = imageUrl ? imageUrl : '';\r\n        dispatch(setCarImageUrl(imageUrl ? imageUrl : ''));\r\n\r\n        globalCustomerCarName = carName;\r\n        setIsHovered(false);\r\n        setIsUnreadHovered(false)\r\n\r\n\r\n    }\r\n\r\n    if (loadingCondition) {\r\n        return <SkeletonChatListLayout />\r\n    }\r\n    else {\r\n        return (\r\n            <Pressable\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                focusable={false}\r\n                style={{\r\n                    padding: 12,\r\n                    alignItems: 'flex-start', // Align items to the start of the button\r\n                    flexDirection: 'row',\r\n                    backgroundColor: isActive ? '#f2f2f2' : (isHovered ? '#f2f2f2' : 'white'),\r\n                    borderLeftColor: isActive ? '#0A9FDC' : 'transparent',\r\n                    borderRightColor: isActive ? '#0A9FDC' : 'transparent',\r\n                    borderLeftWidth: 2,\r\n                    borderRightWidth: 2,\r\n\r\n                }}\r\n                onPress={handlePress}\r\n            >\r\n                <View style={{ width: '20%', justifyContent: 'center', }}>\r\n                    {imageUrl ? (\r\n                        <FastImage\r\n                            source={{ uri: imageUrl, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                width: 60,\r\n                                height: 60,\r\n                                borderRadius: 30,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    ) : (\r\n                        <View\r\n                            style={{\r\n                                width: 60,\r\n                                height: 60,\r\n                                borderRadius: 30,\r\n                                backgroundColor: '#e0e0e0',\r\n                                marginRight: 12,\r\n                            }}\r\n                        />\r\n                    )}\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                    {!isHovered ? (<Text style={{ fontSize: 12, position: 'absolute', right: 10, color: messageUnread ? '#0A78BE' : '#90949C', fontWeight: messageUnread ? 700 : 400, }}>{formattedDate}</Text>) : (!item.read ? (<Text style={{ fontSize: 12, position: 'absolute', right: 10, color: messageUnread ? '#0A78BE' : '#90949C', fontWeight: messageUnread ? 700 : 400, }}>{formattedDate}</Text>) : null)}\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 14, width: '70%', overflow: 'hidden', fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#1C2B33' : '#586369', }}>{carName}</Text>\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 14, width: '80%', overflow: 'hidden', flex: 1, fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#1C2B33' : '#586369', }}>{`${textFirst} ${textLast}`}</Text>\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 12, width: '80%', overflow: 'hidden', flex: 1, fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#0A78BE' : '#90949c', }}>{item.lastMessageSender == item.participants.customer ? (item.lastMessage ? item.lastMessage : 'No message found') : (item.lastMessage ? `Sales: ${item.lastMessage}` : `Sales: No message found`)}</Text>\r\n                    {!item.read ? (\r\n                        <FastImage\r\n                            source={{ uri: chatStepIconOn, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                tintColor: 'rgba(128, 128, 128, 1)',\r\n                                width: 22,\r\n                                height: 20,\r\n                                position: 'absolute',\r\n                                right: 10,\r\n                                bottom: 0,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    ) : (\r\n                        <FastImage\r\n                            source={{ uri: chatStepIconOff, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                tintColor: 'rgba(128, 128, 128, 1)',\r\n                                width: 22,\r\n                                height: 20,\r\n                                position: 'absolute',\r\n                                right: 10,\r\n                                bottom: 0,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    )}\r\n\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        top: 10,\r\n                        padding: 10,\r\n                        alignSelf: 'center',\r\n                        fontSize: 12,\r\n                        overflow: 'hidden',\r\n                        flex: 1,\r\n                        fontWeight: messageUnread ? 700 : 400,\r\n                        color: messageUnread ? '#FF0000' : '#90949c',\r\n                    }}>\r\n                        {item.invoiceNumber && item.stepIndicator.value > 2 ? item.invoiceNumber : ''}\r\n                    </Text>\r\n\r\n                    {isHovered && item.read && (\r\n                        <Tooltip label=\"Mark as unread\" placement='right' openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                onHoverIn={hoverUnreadIn}\r\n                                onHoverOut={hoverUnreadOut}\r\n                                onPress={updateChatToUnread}\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    right: 0,\r\n                                    top: -10,\r\n                                    padding: 10,\r\n                                    alignSelf: 'center',\r\n                                }}\r\n\r\n                            >\r\n                                <MaterialIcons name=\"mark-as-unread\" size={22} color={isUnreadHovered ? \"#1B81C2\" : \"#BABABA\"} />\r\n                            </Pressable>\r\n                        </Tooltip>\r\n                    )}\r\n                </View>\r\n\r\n\r\n\r\n            </Pressable>\r\n        );\r\n    }\r\n\r\n\r\n};\r\n\r\nconst ChatList = ({ unreadButtonValue, activeButtonValue, }) => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const chatListLastVisible = useSelector((state) => state.chatListLastVisible);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const loadMoreLoading = useSelector((state) => state.loadMoreLoading);\r\n    const noMoreData = useSelector((state) => state.noMoreData);\r\n    const renderFooterRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    const { chatId } = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const updateChatToRead = async () => {\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", activeChatId);\r\n        const user = projectControlAuth.currentUser\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        if (email !== '') {\r\n\r\n            try {\r\n                await updateDoc(docRef, {\r\n                    read: true,\r\n                    readBy: arrayUnion(email),\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n                navigate(`/devadmin/chat-messages`);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const fetchChatMessages = () => {\r\n        if (!activeChatId) {\r\n            // Handle the case where there's no active chat ID\r\n        }\r\n        else {\r\n            dispatch(setChatMessagesData([]));\r\n            dispatch(setChatMessageBoxLoading(true));\r\n            updateChatToRead();\r\n\r\n            try {\r\n                // References to the document and its 'messages' subcollection\r\n                let activeInvoiceNumer;\r\n                const docRef = doc(projectExtensionFirestore, 'chats', activeChatId);\r\n\r\n                const messagesRef = collection(docRef, 'messages');\r\n\r\n                // Query for the 'messages' subcollection\r\n                const messagesQuery = query(messagesRef, orderBy('timestamp', 'desc'), limit(10));\r\n\r\n                // Listen to the document\r\n                const unsubscribeDoc = onSnapshot(docRef, (docSnapshot) => {\r\n                    if (docSnapshot.exists()) {\r\n                        const data = docSnapshot.data();\r\n                        // Add the document ID to the data\r\n                        const dataWithId = {\r\n                            ...data,\r\n                            id: docSnapshot.id\r\n                        };\r\n                        // Dispatch any action you need with the document data\r\n                        dispatch(setSelectedChatData(dataWithId));\r\n\r\n                        // Define and listen to the invoice document only after the chat document is confirmed to exist\r\n                        if (dataWithId.invoiceNumber || dataWithId.invoiceNumber == '') {\r\n                            const invoiceDocRef = doc(projectExtensionFirestore, 'IssuedInvoice', dataWithId.invoiceNumber);\r\n                            const unsubscribeInvoice = onSnapshot(invoiceDocRef, (invoiceDocSnapshot) => {\r\n                                if (invoiceDocSnapshot.exists()) {\r\n                                    const invoiceData = invoiceDocSnapshot.data();\r\n                                    // Add the document ID to the data\r\n                                    const invoiceDataWithId = {\r\n                                        ...invoiceData,\r\n                                        id: invoiceDocSnapshot.id\r\n                                    };\r\n                                    // Dispatch any action you need with the invoice document data\r\n                                    dispatch(setInvoiceData(invoiceDataWithId ? invoiceDataWithId : {}));\r\n\r\n                                } else {\r\n                                    // Handle the case where the invoice document does not exist\r\n                                    console.log('No Invoice Yet');\r\n                                    dispatch(setInvoiceData({}));\r\n                                }\r\n                            });\r\n\r\n                            // Cleanup function for the invoice listener\r\n                            return () => {\r\n                                unsubscribeInvoice();\r\n\r\n                            };\r\n                        } else {\r\n                            dispatch(setInvoiceData({}));\r\n                            console.log('No Invoice Yet');\r\n                        }\r\n\r\n                    }\r\n\r\n                });\r\n                const unsubscribeMessages = onSnapshot(messagesQuery, (querySnapshot) => {\r\n                    let messages = [];\r\n                    querySnapshot.forEach((doc) => {\r\n                        const data = doc.data();\r\n                        const timestamp = data.timestamp ? data.timestamp.toString() : null;\r\n                        messages.push({ id: doc.id, ...data, timestamp });\r\n                    });\r\n\r\n                    dispatch(setChatMessagesData(messages));\r\n                    dispatch(setChatMessageBoxLoading(false));\r\n                    globalMessagesLastVisible = querySnapshot.docs[querySnapshot.docs.length - 1];\r\n                });\r\n\r\n                // Return a cleanup function\r\n                return () => {\r\n                    unsubscribeDoc();\r\n                    unsubscribeMessages();\r\n                    // if (activeInvoiceNumer && activeInvoiceNumer !== '') {\r\n                    //     unsubscribeInvoice();\r\n                    // }\r\n                };\r\n            } catch (error) {\r\n                console.error(\"Error setting up real-time messages: \", error);\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleLoadMore = () => {\r\n        dispatch(setLoadMoreLoading(true));\r\n\r\n        let nextQuery;\r\n        if (!globalLastVisible) {\r\n            // No more data to load or globalLastVisible is undefined\r\n            console.log(\"No more data to load or globalLastVisible is undefined\");\r\n            setTimeout(() => {\r\n                dispatch(setLoadMoreLoading(false));\r\n                dispatch(setNoMoreData(true));\r\n            }, 0);\r\n            return;\r\n        }\r\n        else {\r\n\r\n            if (chatListData.length >= 10) {\r\n                if (unreadButtonValue == true) {\r\n\r\n                    if (activeButtonValue == 0) {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    else {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                where('read', '==', false),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    if (activeButtonValue == 0) {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    else {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            else {\r\n                dispatch(setNoMoreData(true));\r\n                dispatch(setLoadMoreLoading(false));\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        if (chatListData.length < 10) {\r\n            setTimeout(() => {\r\n                dispatch(setLoadMoreLoading(false));\r\n                dispatch(setNoMoreData(true));\r\n            }, 0);\r\n        }\r\n\r\n        else {\r\n            try {\r\n                const unsubscribe = onSnapshot(nextQuery, (snapshot) => {\r\n                    if (snapshot.empty) {\r\n                        // Handle the case when there's no more data\r\n                        console.log(\"No more data to load\");\r\n                        setTimeout(() => {\r\n                            dispatch(setLoadMoreLoading(false));\r\n                            dispatch(setNoMoreData(true));\r\n                            globalLastVisible = null;\r\n                        }, 0);  // Delay setting loading and no more data flags\r\n                        return;\r\n                    }\r\n\r\n                    const chatsData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        chatsData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n\r\n                    // Append new data to the existing list\r\n\r\n                    setTimeout(() => {\r\n                        dispatch(setChatListData([...chatListData, ...chatsData]));\r\n                        dispatch(setLoadMoreLoading(false));\r\n                        globalLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n                    }, 0);\r\n\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data from Firebase:', error);\r\n                setTimeout(() => dispatch(setLoadMoreLoading(false)), 0);  // Ensure loading is set to false even if there's an error\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const unsubscribe = fetchChatMessages();\r\n\r\n        return () => {\r\n            if (unsubscribe) {\r\n                unsubscribe(); // Unsubscribe when the component unmounts\r\n            }\r\n        };\r\n\r\n    }, [activeChatId]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (chatId) {\r\n\r\n            setTimeout(() => {\r\n\r\n                let parts = chatId.split('_');\r\n                let stockIdPart = parts[1];\r\n                let emailPart = parts[parts.length - 1];\r\n\r\n                const folderName = selectedChatData.carData && selectedChatData.carData.stockID ? selectedChatData.carData.stockID : (selectedChatData.vehicle && selectedChatData.vehicle.carId ? selectedChatData.vehicle.carId : '');\r\n                const storage = getStorage(projectExtensionFirebase);\r\n                const imageRef = ref(storage, `${stockIdPart}/0`); // Ensure this path is correct\r\n\r\n                console.log('Folder Name: ', folderName)\r\n                getDownloadURL(imageRef)\r\n                    .then((url) => {\r\n                        setImageUrl(url);\r\n                        globalImageUrl = url;\r\n                        dispatch(setCarImageUrl(url));\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        if (error.code === 'storage/object-not-found') {\r\n                            // Handle the 'object not found' error.\r\n                            setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n                        } else {\r\n                            // Handle other errors differently\r\n\r\n                            setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n\r\n                        }\r\n                    });\r\n\r\n\r\n                if (selectedChatData) {\r\n                    const collectionPath = 'accounts';\r\n                    const docId = selectedChatData.participants?.customer; // Ensure this is a valid document ID\r\n\r\n                    const docRef = doc(projectExtensionFirestore, collectionPath, emailPart);\r\n\r\n                    const unsubscribe = onSnapshot(docRef, (doc) => {\r\n                        if (doc.exists()) {\r\n                            const data = doc.data();\r\n                            dispatch(setSelectedCustomerData(data ? data : {}));\r\n                            globalCustomerFirstName = data.textFirst ? data.textFirst : '';\r\n                            globalCustomerLastName = data.textLast ? data.textLast : '';\r\n                            console.log(`Name: ${data.textFirst} ${data.textLast}`)\r\n\r\n\r\n                            // globalCustomerCarName = carName;\r\n                            // setTextFirst(data.textFirst ? data.textFirst : '');\r\n                            // setTextLast(data.textLast ? data.textLast : '');\r\n\r\n\r\n                        } else {\r\n                            console.log(\"Document not found\");\r\n                        }\r\n                    }, (error) => {\r\n                        console.error(\"Error fetching document: \", error);\r\n                    });\r\n\r\n                    // Clean up function to unsubscribe from the listener when the component unmounts\r\n                    return () => unsubscribe();\r\n                }\r\n\r\n\r\n            }, 1);\r\n\r\n\r\n        }\r\n    }, [selectedChatData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (chatId) {\r\n            setTimeout(() => {\r\n                dispatch(setActiveChatId(chatId));\r\n\r\n            }, 1);\r\n\r\n        }\r\n    }, [chatId]);\r\n\r\n    const handleChatPress = async (customerId, chatId) => {\r\n\r\n        dispatch(setActiveChatId(chatId));\r\n        navigate(`/devadmin/chat-messages/${chatId}`);\r\n        globalCustomerId = customerId;\r\n        globalChatId = chatId;\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setActiveChatId(''));\r\n    }, [unreadButtonValue])\r\n\r\n    const renderFooter = () => {\r\n        return (\r\n            <>\r\n                {!noMoreData && (\r\n                    <View style={{ paddingVertical: 20, borderTopWidth: 1, borderColor: \"#DADDE1\", height: 60, }}>\r\n                        {loadMoreLoading && (\r\n                            <Spinner\r\n                                animating\r\n                                size=\"sm\"\r\n                                color={'#7B9CFF'}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </>\r\n\r\n\r\n        );\r\n    };\r\n\r\n    const renderItem = ({ item }) => {\r\n\r\n        const isActive = item.id === activeChatId;\r\n        const messageUnread = !item.read;\r\n        const formattedDate = formatDate(item.lastMessageDate);\r\n\r\n        return (\r\n            <ChatListItem\r\n                chatListData={chatListData}\r\n                item={item}\r\n                onPress={() => handleChatPress(item.participants.customer, item.id)}\r\n                isActive={isActive}\r\n                messageUnread={messageUnread}\r\n                formattedDate={formattedDate}\r\n            />\r\n        );\r\n\r\n    };\r\n\r\n    if (chatListData.length < 1) {\r\n        return (\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }}>\r\n                <Text style={{ fontWeight: 700, alignSelf: 'center', }}>{unreadButtonValue ? 'No unread messages to show' : 'No messages to show'}</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <>\r\n                <FlatList\r\n                    style={{ height: 100, borderBottomLeftRadius: 5, }}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id.toString()}\r\n                    data={chatListData}\r\n                    initialNumToRender={1}\r\n                    maxToRenderPerBatch={10}\r\n                    windowSize={21}\r\n                    onEndReachedThreshold={0.05}\r\n                    removeClippedSubviews={true}\r\n                    ListFooterComponent={renderFooter}\r\n                    onEndReached={handleLoadMore}  // Implement this function\r\n                />\r\n\r\n            </>\r\n\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\nconst SearchChat = ({ lastVisible, setLastVisible, unreadButtonValue, activeButtonValue }) => {\r\n\r\n    const searchInputRef = useRef(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [clearVisible, setClearVisible] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const searchData = async ({ }) => {\r\n        let q;\r\n\r\n        const searchValue = searchInputRef.current?.value;\r\n        if (unreadButtonValue == true) {\r\n\r\n            if (activeButtonValue == 0) {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n            else {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        where('read', '==', false),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            if (activeButtonValue == 0) {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n            else {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        try {\r\n            const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                const chatsData = [];\r\n                snapshot.forEach((doc) => {\r\n                    chatsData.push({\r\n                        id: doc.id,\r\n                        ...doc.data(),\r\n                    });\r\n                });\r\n                dispatch(setChatListData(chatsData));\r\n                globalLastVisible = snapshot.docs[snapshot.docs.length - 1]\r\n\r\n\r\n            });\r\n\r\n            // Return the unsubscribe function to stop listening when necessary\r\n            return () => {\r\n                if (unsubscribe) {\r\n                    unsubscribe();\r\n                }\r\n            };\r\n        } catch (error) {\r\n            // Handle errors here\r\n            console.error('Error fetching data from Firebase:', error);\r\n        }\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n\r\n    //     searchData();\r\n\r\n    // }, [searchText])\r\n\r\n    useEffect(() => {\r\n        setSearchText('');\r\n        dispatch(setChatListSearchText(''));\r\n        globalSearchText = '';\r\n        searchInputRef.current.value = '';\r\n        setClearVisible(false);\r\n\r\n    }, [activeButtonValue, unreadButtonValue])\r\n\r\n    const handleSearchEnter = () => {\r\n        // setSortField('dateAdded');\r\n        // setIsSortActive(false)\r\n        if (searchInputRef.current?.value !== '') {\r\n            dispatch(setChatListSearchText(searchInputRef.current.value.trim()));\r\n            setSearchText(searchInputRef.current.value.trim());\r\n            globalSearchText = searchInputRef.current.value.trim();\r\n        }\r\n        else {\r\n            setSearchText('');\r\n            globalSearchText = '';\r\n            if (searchText == '') {\r\n                dispatch(setChatListSearchText(''));\r\n                searchData();\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleClearText = () => {\r\n        searchInputRef.current.clear();\r\n        setClearVisible(false);\r\n        if (searchText !== '') {\r\n            setSearchText(''); // Clear the text\r\n            dispatch(setChatListSearchText(''));\r\n            dispatch(setActiveChatId(''));\r\n            globalSearchText = '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', width: '100%', alignSelf: 'center', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5, margin: 10 }}>\r\n            <TextInput\r\n                ref={searchInputRef}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                placeholderTextColor='#9B9E9F'\r\n                underlineColorAndroid=\"transparent\"\r\n                style={{ flex: 1, height: 40, padding: 10, outlineStyle: 'none' }}\r\n                onChangeText={() => setClearVisible(true)}\r\n                keyboardType='search'\r\n            />\r\n            {clearVisible ? (\r\n                <Pressable\r\n                    focusable={false}\r\n                    onPress={handleClearText}\r\n                    style={({ pressed, hovered }) => [\r\n                        {\r\n                            borderRadius: 10,\r\n                            marginRight: 10,\r\n                            opacity: pressed ? 0.5 : 1, // Change opacity when pressed\r\n                            // Add hover effect\r\n                            backgroundColor: hovered ? '#ddd' : 'transparent',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <MaterialIcons name=\"close\" size={20} color=\"#000\" />\r\n                </Pressable>\r\n            ) : null}\r\n        </View>);\r\n}\r\n\r\nconst timelineData = [\r\n    { key: '1', title: 'Event 1', description: 'Description 1' },\r\n    { key: '2', title: 'Event 2', description: 'Description 2' },\r\n    // ... more events\r\n];\r\n\r\n// const TimelineItem = ({ title, description }) => (\r\n//     <View style={{ alignItems: 'center', marginRight: 20 }}>\r\n//         <View style={{ width: 10, height: 10, borderRadius: 5, backgroundColor: 'blue', marginBottom: 5 }} />\r\n//         <Text style={{ fontWeight: 'bold' }}>{title}</Text>\r\n//         <Text style={{ textAlign: 'center' }}>{description}</Text>\r\n//     </View>\r\n// );\r\n\r\n// const HorizontalTimeline = () => (\r\n//     <FlatList\r\n//         data={timelineData}\r\n//         renderItem={({ item }) => <TimelineItem title={item.title} description={item.description} />}\r\n//         horizontal\r\n//         showsHorizontalScrollIndicator={false}\r\n//         style={{ flexDirection: 'row', padding: 10 }}\r\n//     />\r\n// );\r\n\r\nconst ModalAddBank = () => {\r\n    const [modalAddBankVisible, setModalAddBankVisible] = useState(false);\r\n    const [isCancelHovered, setCancelHovered] = useState(false);\r\n    const [isAddHovered, setAddHovered] = useState(false);\r\n\r\n\r\n\r\n\r\n    const handleModalAddBankOpen = () => {\r\n        setModalAddBankVisible(true);\r\n    };\r\n\r\n    const handleModalAddBankClose = () => {\r\n        setModalAddBankVisible(false);\r\n    };\r\n\r\n    const bankNameRef = useRef(null);\r\n    const branchNameRef = useRef(null);\r\n    const swiftcodeRef = useRef(null);\r\n    const addressRef = useRef(null);\r\n    const accountHolderRef = useRef(null);\r\n    const accountNumberRef = useRef(null);\r\n\r\n\r\n\r\n    const addBankAccount = async () => {\r\n        const docRef = doc(projectExtensionFirestore, 'DataForInvoice', 'BankAccounts');\r\n\r\n        const bankNameValue = bankNameRef.current?.value;\r\n        const branchNameValue = branchNameRef.current?.value;\r\n        const swiftcodeValue = swiftcodeRef.current?.value;\r\n        const addressValue = addressRef.current?.value;\r\n        const accountHolderValue = accountHolderRef.current?.value;\r\n        const accountNumberValue = accountNumberRef.current?.value;\r\n\r\n        const elementToAdd = {\r\n            bankName: bankNameValue,\r\n            branchName: branchNameValue,\r\n            swiftCode: swiftcodeValue,\r\n            address: addressValue,\r\n            accountHolder: accountHolderValue,\r\n            accountNumberValue: accountNumberValue,\r\n        }\r\n\r\n        try {\r\n            await updateDoc(docRef, {\r\n                [bankNameValue]: elementToAdd,\r\n            });\r\n            console.log(\"Element added to the array field\");\r\n            handleModalAddBankClose();\r\n        } catch (error) {\r\n            console.error(\"Error adding element to the array\", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Pressable onPress={handleModalAddBankOpen} style={{ alignSelf: 'center', marginHorizontal: 5, marginTop: 3, }}>\r\n                <FontAwesome name={'plus-circle'} size={25} color='#16A34A' />\r\n            </Pressable>\r\n\r\n            <Modal isOpen={modalAddBankVisible} onClose={handleModalAddBankClose} useRNModal>\r\n                <Modal.Content>\r\n                    <Modal.Header>Add Bank Account</Modal.Header>\r\n                    <Modal.Body>\r\n                        <View style={{ height: '100%', flex: 1, }}>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Bank Name:</Text>\r\n                                <TextInput\r\n                                    ref={bankNameRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Bank Name'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Branch Name:</Text>\r\n                                <TextInput\r\n                                    ref={branchNameRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Branch Name'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>SWIFTCODE:</Text>\r\n                                <TextInput\r\n                                    ref={swiftcodeRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='SWIFTCODE'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Address:</Text>\r\n                                <TextInput\r\n                                    ref={addressRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Address'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Account Holder:</Text>\r\n                                <TextInput\r\n                                    ref={accountHolderRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Account Holder'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Account Number:</Text>\r\n                                <TextInput\r\n                                    ref={accountNumberRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Account Number'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', }}>\r\n                            <Pressable\r\n                                style={{ width: 100, padding: 5, borderRadius: 3, backgroundColor: isCancelHovered ? '#686868' : '#525252' }}\r\n                                onHoverIn={() => setCancelHovered(true)}\r\n                                onHoverOut={() => setCancelHovered(false)}\r\n                                onPress={handleModalAddBankClose}\r\n                            >\r\n                                <Text style={{ fontWeight: 500, textAlign: 'center', color: 'white', }}>Cancel</Text>\r\n                            </Pressable>\r\n\r\n                            <Pressable\r\n                                onPress={addBankAccount}\r\n                                style={{ width: 100, padding: 5, borderRadius: 3, backgroundColor: isAddHovered ? '#1B8B5A' : '#16A34A' }}\r\n                                onHoverIn={() => setAddHovered(true)}\r\n                                onHoverOut={() => setAddHovered(false)}\r\n                            >\r\n                                <Text style={{ fontWeight: 500, textAlign: 'center', color: 'white', }}>Add</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst BankInformation = () => {\r\n\r\n    let invoiceSelectedDueDate = '';\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [selectedDueDate, setSelectedDueDate] = useState('');\r\n    const [bankAccountsData, setBankAccountsData] = useState({});\r\n    const [selectedBank, setSelectedBank] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.bankAccount.bankName ? invoiceData.bankInformations.bankAccount.bankName : \"SUMITOMO MITSUI BANKING CORPORATION\");\r\n    let selectedBankData = {};\r\n\r\n    const paymentTermsRef = useRef(null);\r\n    const salesAgreementRef = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const subscribeToBankAccounts = () => {\r\n            const docRef = doc(projectExtensionFirestore, 'DataForInvoice', 'BankAccounts');\r\n\r\n            const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    const bankAccounts = {};\r\n\r\n                    // Assuming each entry in your document is a bank account\r\n                    Object.entries(data).forEach(([key, value]) => {\r\n                        if (value.bankName) {\r\n                            bankAccounts[value.bankName] = value;\r\n                        }\r\n                    });\r\n\r\n                    console.log(bankAccounts);\r\n                    setBankAccountsData(bankAccounts);\r\n                    globalInvoiceVariable.bankInformations.bankAccount = bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"];\r\n                    // Use state or context to store selected bank data if needed\r\n                    // setSelectedBank(bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"]);\r\n                    console.log(bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"]);\r\n                } else {\r\n                    console.log(\"No such document!\");\r\n                }\r\n            }, (error) => {\r\n                console.error(\"Error fetching document\", error);\r\n            });\r\n\r\n            return unsubscribe; // Return the unsubscribe function to call it later to stop listening\r\n        };\r\n\r\n\r\n        if (currentDate) {\r\n            const date = new Date(currentDate);\r\n\r\n            // Check the day of the week\r\n            const dayOfWeek = date.getDay();\r\n\r\n            if (dayOfWeek === 5) { // Friday\r\n                date.setDate(date.getDate() + 3); // Add 3 days to reach Monday\r\n            } else if (dayOfWeek === 6) { // Saturday\r\n                date.setDate(date.getDate() + 2); // Add 2 days to reach Monday\r\n            } else {\r\n                date.setDate(date.getDate() + 1); // Sunday to Thursday, add 1 day\r\n            }\r\n\r\n            // Format the date back to string\r\n            const adjustedDate = date.toISOString().split('T')[0];\r\n            setSelectedDueDate(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.dueDate ? invoiceData.bankInformations.dueDate : adjustedDate);\r\n            globalInvoiceVariable.bankInformations.dueDate = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.dueDate ? invoiceData.bankInformations.dueDate : adjustedDate;\r\n            globalInvoiceVariable.bankInformations.paymentTerms = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.paymentTerms ? invoiceData.bankInformations.paymentTerms : paymentTermsRef.current?.value;\r\n            // globalInvoiceVariable.bankInformations.salesAgreement = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.salesAgreement ? invoiceData.bankInformations.salesAgreement : salesAgreementRef.current?.value;\r\n            globalInvoiceVariable.bankInformations.issuingDate = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.issuingDate ? invoiceData.bankInformations.issuingDate : currentDate;\r\n\r\n\r\n        }\r\n\r\n        const unsubscribe = subscribeToBankAccounts();\r\n    }, [currentDate]);\r\n\r\n\r\n\r\n    const ModalCalendar = ({ selectedDate, setSelectedDate, currentDate }) => {\r\n\r\n        const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n        const handleModalCalendarOpen = () => {\r\n            setModalCalendarVisible(true);\r\n        };\r\n\r\n        const handleModalCalendarClose = () => {\r\n            setModalCalendarVisible(false);\r\n        };\r\n\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n                <Pressable style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onPress={handleModalCalendarOpen}>\r\n                    <TextInput value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n                </Pressable>\r\n\r\n                <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Content>\r\n                        <View style={{ height: '100%', flex: 1 }}>\r\n                            <Calendar\r\n                                onDayPress={useCallback(day => {\r\n                                    setSelectedDate(day.dateString);\r\n                                    invoiceSelectedDueDate = day.dateString;\r\n                                    globalInvoiceVariable.bankInformations.dueDate = day.dateString;\r\n                                    handleModalCalendarClose();\r\n                                }, [])}\r\n                                markedDates={{\r\n                                    [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n                                }}\r\n                                renderArrow={(direction) => (\r\n                                    direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n                                )}\r\n                                enableSwipeMonths={true}\r\n                                initialDate={selectedDate}\r\n                                // minDate={currentDate}\r\n                                showSixWeeks />\r\n\r\n                        </View>\r\n\r\n                    </Modal.Content>\r\n\r\n                </Modal>\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n\r\n    const handleValueChange = (selectedBankName) => {\r\n        const selectedBankObj = bankAccountsData[selectedBankName];\r\n        setSelectedBank(selectedBankName);\r\n        globalInvoiceVariable.bankInformations.bankAccount = selectedBankObj;\r\n        // console.log(selectedBankObj);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Due Date:</Text>\r\n                <ModalCalendar currentDate={currentDate} selectedDate={selectedDueDate} setSelectedDate={setSelectedDueDate} />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, marginVertical: 10, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Bank Account: </Text>\r\n                <Select\r\n                    selectedValue={selectedBank}\r\n                    onValueChange={handleValueChange}\r\n                    bgColor={'#FAFAFA'}\r\n                    accessibilityLabel=\"Choose Country\"\r\n                    placeholder=\"---\"\r\n                    _selectedItem={{\r\n                        bg: \"teal.600\",\r\n                        endIcon: <CheckIcon />,\r\n                    }}\r\n                    height={9}\r\n                    width={300}\r\n                    style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\r\n                >\r\n                    {Object.keys(bankAccountsData).map((bankName) => (\r\n                        <Select.Item key={bankName} label={bankName} value={bankName} />\r\n                    ))}\r\n                </Select>\r\n\r\n                <ModalAddBank />\r\n\r\n            </View>\r\n\r\n            <View style={{ flex: 3, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Payment Terms:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.bankInformations.paymentTerms = value;\r\n                }} ref={paymentTermsRef} multiline defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.paymentTerms ? invoiceData.bankInformations.paymentTerms : \"Full payment via Telegraphic Transfer (T/T) required before the due date.\"} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            {/* <View style={{ flex: 4, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Sales Agreement:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.bankInformations.salesAgreement = value;\r\n                }} ref={salesAgreementRef} multiline defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.salesAgreement ? invoiceData.bankInformations.salesAgreement : `Payment Information:\r\nThe customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.\r\nNo warranty service is provided on used vehicles.\r\n\r\nConditions for order cancellation:\r\n(1) Order Cancellation Penalty: If the order is canceled after payment, a penalty of USD 220 will apply.\r\n(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.\r\n\r\nIntermediary Banking Information:\r\nBank Name: SUMITOMO MITSUI BANKING CORPORATION (THE NEW YORK AUTHORITY).\r\nSwift code: SMBCUS33\r\nAddress: 277 Park Avenue\r\nCity: New York, NY\r\nPostal Code: 10172\r\nCountry: United States\r\n`}\r\n                    placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ width: '60%', height: 100, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View> */}\r\n        </>\r\n    );\r\n}\r\n\r\nconst PaymentDetails = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const fobPriceInput = useRef(null);\r\n    const freightInput = useRef(null);\r\n    const inspectionInput = useRef(null);\r\n    const insuranceInput = useRef(null);\r\n\r\n\r\n    const [totalAmountCalculated, setTotalAmountCalculated] = useState('0');\r\n    const [selectedIncoterms, setSelectedIncoterms] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.incoterms ? invoiceData.paymentDetails.incoterms :\r\n        selectedChatData.insurance ? 'CIF' : 'C&F');\r\n\r\n    const [inspectionIsChecked, setInspectionIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionIsChecked : selectedChatData.inspection);\r\n    const [inspectionName, setInspectionName] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionName ? invoiceData.paymentDetails.inspectionName : selectedChatData.inspectionName);\r\n\r\n    const [warrantyIsChecked, setWarrantyIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyIsCheck ? invoiceData.paymentDetails.warrantyIsCheck : selectedChatData.warranty);\r\n\r\n    const warrantyPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyPrice && invoiceData.paymentDetails.warrantyPrice ? invoiceData.paymentDetails.warrantyPrice : 150;\r\n    const insurancePrice = 50;\r\n\r\n\r\n    const additionalNameRef = useRef(null);\r\n    const additionalPriceRef = useRef(null);\r\n\r\n    const safelyParseNumber = (value) => {\r\n        const number = Number(value.replace(/,/g, ''));\r\n        return isNaN(number) ? 0 : number;\r\n    };\r\n\r\n    const calculateTotalAmount = () => {\r\n        const fobPrice = safelyParseNumber(fobPriceInput.current?.value);\r\n        const freight = safelyParseNumber(freightInput.current?.value);\r\n        const inspection = safelyParseNumber(inspectionInput.current?.value);\r\n        const insurance = safelyParseNumber(insuranceInput.current?.value);\r\n\r\n        const additionalPricesTotal = globalAdditionalPriceArray.reduce((sum, value) => sum + safelyParseNumber(value), 0);\r\n\r\n        // const total = Math.round(fobPrice + freight + inspection + (warrantyIsChecked ? warrantyPrice : 0) + insurance + additionalPricesTotal).toLocaleString();\r\n        const total = Math.round(fobPrice + freight + inspection + insurance + additionalPricesTotal).toLocaleString();\r\n        setTotalAmountCalculated(total);\r\n        globalInvoiceVariable.paymentDetails.totalAmount = total;\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        additionalNameRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName.join('\\n') : '';\r\n        additionalPriceRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice.join('\\n') : '';\r\n\r\n        globalInvoiceVariable.paymentDetails.incoterms = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.incoterms ? invoiceData.paymentDetails.incoterms : selectedIncoterms;\r\n        globalInvoiceVariable.paymentDetails.inspectionIsChecked = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionIsChecked : inspectionIsChecked;\r\n        globalInvoiceVariable.paymentDetails.inspectionName = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionName ? invoiceData.paymentDetails.inspectionName : inspectionName;\r\n        globalInvoiceVariable.paymentDetails.inspectionPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionPrice ? invoiceData.paymentDetails.inspectionPrice : inspectionIsChecked ? 300 : 0;\r\n        globalInvoiceVariable.paymentDetails.warrantyIsCheck = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyIsCheck ? invoiceData.paymentDetails.warrantyIsCheck : warrantyIsChecked;\r\n        // globalInvoiceVariable.paymentDetails.warrantyPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyPrice ? invoiceData.paymentDetails.warrantyPrice : warrantyIsChecked ? warrantyPrice : 0;\r\n        globalInvoiceVariable.paymentDetails.fobPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.fobPrice ? invoiceData.paymentDetails.fobPrice : fobPriceInput.current?.value;\r\n        globalInvoiceVariable.paymentDetails.freightPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.freightPrice ? invoiceData.paymentDetails.freightPrice : freightInput.current?.value;\r\n        globalInvoiceVariable.paymentDetails.insurancePrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.insurancePrice ? invoiceData.paymentDetails.insurancePrice : selectedIncoterms == 'CIF' ? insuranceInput.current?.value : 0;\r\n        globalInvoiceVariable.paymentDetails.additionalPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice : [];\r\n        globalInvoiceVariable.paymentDetails.additionalName = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName : [];\r\n        globalAdditionalPriceArray = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice : [];\r\n\r\n        calculateTotalAmount();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        inspectionInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionPrice && invoiceData.paymentDetails.inspectionPrice == true ? invoiceData.paymentDetails.inspectionPrice : inspectionIsChecked ? 300 : 0;\r\n        calculateTotalAmount();\r\n\r\n    }, [inspectionIsChecked]);\r\n\r\n    useEffect(() => {\r\n\r\n        insuranceInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.insurancePrice && invoiceData.paymentDetails.incoterms == 'CIF' ? invoiceData.paymentDetails.insurancePrice : selectedIncoterms == 'CIF' ? 50 : 0;\r\n        freightInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.freightPrice ? invoiceData.paymentDetails.freightPrice : selectedIncoterms == 'FOB' ? 0 : freightCalculation;\r\n\r\n        calculateTotalAmount();\r\n\r\n    }, [selectedIncoterms]);\r\n\r\n    useEffect(() => {\r\n        calculateTotalAmount();\r\n\r\n    }, [warrantyIsChecked]);\r\n\r\n    const freightCalculation = (\r\n        (selectedChatData.m3 ? selectedChatData.m3 :\r\n            (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n                selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice)\r\n    ).toFixed(2);\r\n\r\n    const totalPriceCalculation = (\r\n        (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n            (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n                selectedChatData.carData.fobPrice : 0) *\r\n            (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n                (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                    selectedChatData.currency.jpyToUsd : 0))) +\r\n        parseFloat(freightCalculation)\r\n    ).toFixed(2);\r\n\r\n    const fobPriceDollars = (\r\n        (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n            (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n                selectedChatData.carData.fobPrice : 0) *\r\n            (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n                (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                    selectedChatData.currency.jpyToUsd : 0))\r\n        ).toFixed(2));\r\n\r\n\r\n    const handleAdditionalPriceTextChange = (text) => {\r\n        // Process and filter each line\r\n        const filteredLines = text.split('\\n').map(line => {\r\n            let filteredLine = line.replace(/[^0-9.]/g, '');\r\n            const parts = filteredLine.split('.');\r\n            if (parts.length > 2) {\r\n                filteredLine = parts[0] + '.' + parts[1];\r\n            }\r\n            return filteredLine;\r\n        });\r\n\r\n        // Update the ref and the state\r\n        additionalPriceRef.current.value = filteredLines.join('\\n');\r\n        // setAdditionalPriceArray(filteredLines);\r\n        globalAdditionalPriceArray = filteredLines;\r\n        globalInvoiceVariable.paymentDetails.additionalPrice = filteredLines;\r\n        calculateTotalAmount();\r\n\r\n    };\r\n\r\n    const handleAdditionalNameTextChange = (text) => {\r\n        // Update the ref\r\n        additionalNameRef.current.value = text;\r\n\r\n        // Split the text into lines and update the state\r\n        const lines = text.split('\\n');\r\n        // setAdditionalNameArray(lines);\r\n        globalInvoiceVariable.paymentDetails.additionalName = lines;\r\n    };\r\n\r\n\r\n    const handleFobPriceInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        fobPriceInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.fobPrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleFreightInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        freightInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.freightPrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleInspectionInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        inspectionInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.inspectionPrice = filteredText;\r\n\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleInsuranceInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        insuranceInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.insurancePrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#16A34A', }}>Payment Details</Text>\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Incoterms:</Text>\r\n                <Select\r\n                    selectedValue={selectedIncoterms}\r\n                    onValueChange={(value) => setSelectedIncoterms(value)}\r\n                    bgColor={'#FAFAFA'}\r\n                    accessibilityLabel=\"Choose Country\"\r\n                    placeholder=\"---\"\r\n                    _selectedItem={{\r\n                        bg: \"teal.600\",\r\n                        endIcon: <CheckIcon />,\r\n                    }}\r\n                    height={9}\r\n                    style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\r\n                >\r\n                    <Select.Item key={'C&F'} label={'C&F'} value={'C&F'} />\r\n                    <Select.Item key={'CIF'} label={'CIF'} value={'CIF'} />\r\n                    <Select.Item key={'FOB'} label={'FOB'} value={'FOB'} />\r\n                </Select>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Rate: </Text>\r\n                <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>\r\n                    {selectedChatData.currency && selectedChatData.currency.usdToJpy\r\n                        ? Number(selectedChatData.currency.usdToJpy).toFixed(2) : '0.00'}\r\n                </Text>\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, marginTop: 10, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Inspection:</Text>\r\n                <Checkbox\r\n                    isChecked={inspectionIsChecked}\r\n                    onChange={value => {\r\n                        setInspectionIsChecked(value)\r\n                        globalInvoiceVariable.paymentDetails.inspectionIsChecked = value;\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                />\r\n            </View>\r\n\r\n            {/* <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Warranty:</Text>\r\n                <Checkbox\r\n                    isChecked={warrantyIsChecked}\r\n                    onChange={value => setWarrantyIsChecked(value)}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                />\r\n                <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>${warrantyPrice}</Text>\r\n            </View> */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2 }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3 }}>FOB Price:</Text>\r\n                <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1 }}>$</Text>\r\n                <TextInput\r\n                    onChangeText={handleFobPriceInputChangeText}\r\n                    ref={fobPriceInput}\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.paymentDetails.fobPrice : selectedIncoterms == 'FOB' ? 0 : fobPriceDollars}\r\n                    placeholderTextColor='#9B9E9F'\r\n                    placeholder='FOB Price'\r\n                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2 }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3 }}>Freight:</Text>\r\n                <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1 }}>$</Text>\r\n                <TextInput\r\n                    onChangeText={handleFreightInputChangeText}\r\n                    ref={freightInput}\r\n                    defaultValue={freightCalculation}\r\n                    placeholderTextColor='#9B9E9F'\r\n                    placeholder='Freight'\r\n                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, display: selectedIncoterms == 'CIF' ? 'flex' : 'none' }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Insurance:</Text>\r\n                <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, }}>$</Text>\r\n                <TextInput\r\n                    onChangeText={handleInsuranceInputChangeText}\r\n                    ref={insuranceInput}\r\n                    defaultValue={50}\r\n                    placeholderTextColor='#9B9E9F'\r\n                    placeholder={`Insurance`}\r\n                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, display: inspectionIsChecked ? 'flex' : 'none' }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Inspection:</Text>\r\n                <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, }}>$</Text>\r\n                <TextInput\r\n                    onChangeText={handleInspectionInputChangeText}\r\n                    ref={inspectionInput}\r\n                    placeholderTextColor='#9B9E9F'\r\n                    placeholder={`Inspection [${selectedChatData.inspectionName}]`}\r\n                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                />\r\n                <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>{`[${selectedChatData.inspectionName}]`}</Text>\r\n            </View>\r\n\r\n\r\n            <View style={{ flex: 3, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Additional:</Text>\r\n                <TextInput ref={additionalNameRef} onChangeText={handleAdditionalNameTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                    style={{ width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                <TextInput ref={additionalPriceRef} onChangeText={handleAdditionalPriceTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Price'\r\n                    style={{ width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignItems: 'center', }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Total Amount:</Text>\r\n                <Text style={{ fontWeight: 700, fontSize: 18, margin: 3, color: '#FF0000', }}>{`$${totalAmountCalculated}`}</Text>\r\n            </View>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst SelectPortOfDischarge = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [countriesDischarge, setCountriesDischarge] = useState([]);\r\n    const [portsData, setPortsData] = useState({});\r\n    const [nearestPorts, setNearestPorts] = useState([]);\r\n    const [selectedPortCountry, setSelectedPortCountry] = useState('');\r\n    const [selectedCountry, setSelectedCountry] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.country : selectedChatData.country);\r\n    const [selectedPort, setSelectedPort] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.port : selectedChatData.port);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.port : selectedChatData.port);\r\n\r\n        const fetchPorts = async () => {\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    const sortedPorts = Object.keys(data)\r\n                        .map(portName => ({\r\n                            name: portName.replace(/_/g, '.'), // Replace '_' with '.'\r\n                            ...data[portName]\r\n                        }))\r\n                        .sort((a, b) => a.sortOrder - b.sortOrder);\r\n                    setNearestPorts(sortedPorts);\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n\r\n        const fetchPortsData = async () => {\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    setPortsData(data);\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n\r\n        fetchPorts();\r\n        fetchPortsData();\r\n        // fetchCountries();\r\n\r\n        globalInvoiceVariable.discharge.port = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.discharge.port ? invoiceData.discharge.port : selectedPort;\r\n        globalInvoiceVariable.discharge.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.discharge.country ? invoiceData.discharge.country : selectedPortCountry;\r\n\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        // When selectedCountry changes, update nearestPorts\r\n        const selectedCountryData = countriesDischarge.find(country => country.name === selectedCountry);\r\n        if (selectedCountryData && selectedCountryData.nearestPorts) {\r\n            setNearestPorts(selectedCountryData.nearestPorts);\r\n        } else {\r\n            setNearestPorts([]); // Reset to empty if no ports or country not found\r\n        }\r\n    }, [selectedCountry, countriesDischarge]);\r\n\r\n    useEffect(() => {\r\n        const portData = portsData[selectedPort];\r\n        if (portData && portData.country) {\r\n            setSelectedPortCountry(portData.country);\r\n            // console.log('Nagoya Price ', portData.nagoyaPrice);\r\n            globalInvoiceVariable.discharge.country = portData.country;\r\n        } else {\r\n            setSelectedPortCountry(''); // Reset selected country if port not found or has no country\r\n            console.log('Not found');\r\n        }\r\n    }, [selectedPort, portsData]);\r\n\r\n    return (\r\n        <>\r\n            {/* <Select\r\n                selectedValue={selectedCountry}\r\n                onValueChange={(value) => {\r\n                    setSelectedCountry(value)\r\n                    globalInvoiceVariable.discharge.country = value;\r\n\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"Choose Country\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />,\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}\r\n            >\r\n                {countriesDischarge.map((country) => (\r\n                    <Select.Item key={country.name} label={country.name} value={country.name} />\r\n                ))}\r\n            </Select> */}\r\n            <Select\r\n                selectedValue={selectedPort}\r\n                onValueChange={(value) => {\r\n                    setSelectedPort(value)\r\n                    globalInvoiceVariable.discharge.port = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                accessibilityLabel=\"Choose Port\"\r\n                placeholder=\"Select port\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />,\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}\r\n            >\r\n                {nearestPorts.map((port, index) => (\r\n                    <Select.Item key={index} label={port.name} value={port.name} />\r\n                ))}\r\n            </Select>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst SelectSalesPerson = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [selectedSales, setSelectedSales] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.salesPerson : (selectedChatData.carData && selectedChatData.carData.sales ? selectedChatData.carData.sales : ''));\r\n    const salesData = useSelector((state) => state.salesData);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        globalInvoiceVariable.salesPerson = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.salesPerson ? invoiceData.salesPerson : (selectedChatData.carData && selectedChatData.carData.sales ? selectedChatData.carData.sales : '');\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Select\r\n            selectedValue={selectedSales}\r\n            onValueChange={(value) => {\r\n                setSelectedSales(value);\r\n                globalInvoiceVariable.salesPerson = value;\r\n            }}\r\n            bgColor={'#FAFAFA'}\r\n            accessibilityLabel=\"---\"\r\n            placeholder=\"---\"\r\n            _selectedItem={{\r\n                bg: \"teal.600\",\r\n                endIcon: <CheckIcon />\r\n            }}\r\n            style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}>\r\n            {salesData.map((item) => (\r\n                <Select.Item key={item.id} label={item.name} value={item.name} />\r\n            ))}\r\n        </Select>\r\n    );\r\n}\r\n\r\nconst SelectPortOfDeparture = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const portData = useSelector((state) => state.portData);\r\n    const salesData = useSelector((state) => state.salesData);\r\n    const [selectedPort, setSelectedPort] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : ''));\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : ''));\r\n\r\n        globalInvoiceVariable.departurePort = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.departurePort ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : '');\r\n        globalInvoiceVariable.departureCountry = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.departureCountry ? invoiceData.departureCountry : 'Japan';\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                selectedValue='Japan'\r\n                onValueChange={(value) => {\r\n                    globalInvoiceVariable.departureCountry = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}>\r\n                <Select.Item key={'Japan'} label={'Japan'} value={'Japan'} />\r\n            </Select>\r\n\r\n            <Select\r\n                selectedValue={selectedPort}\r\n                onValueChange={(value) => {\r\n                    setSelectedPort(value);\r\n                    globalInvoiceVariable.departurePort = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}>\r\n                {portData.map((item) => (\r\n                    <Select.Item key={item.id} label={item.name} value={item.name} />\r\n                ))}\r\n            </Select>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst NotifyPartyInput = ({ accountData, setAccountData }) => {\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.sameAsConsignee : true);\r\n\r\n    const notifyPartyName = useRef(null);\r\n    const notifyPartyAddress = useRef(null);\r\n    const notifyPartyCity = useRef(null);\r\n    const notifyPartyCountry = useRef(null);\r\n    const notifyPartyContactNumber = useRef(null);\r\n    const notifyPartyFax = useRef(null);\r\n    const notifyPartyEmail = useRef(null);\r\n\r\n    useEffect(() => {\r\n\r\n        notifyPartyName.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.name ? invoiceData.notifyParty.name : '';\r\n        notifyPartyAddress.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.address ? invoiceData.notifyParty.address : '';\r\n        notifyPartyCity.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.city ? invoiceData.notifyParty.city : '';\r\n        notifyPartyCountry.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.country ? invoiceData.notifyParty.country : '';\r\n        notifyPartyContactNumber.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.contactNumber ? invoiceData.notifyParty.contactNumber : '';\r\n        notifyPartyFax.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.fax ? invoiceData.notifyParty.fax : '';\r\n        notifyPartyEmail.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.email ? invoiceData.notifyParty.email : '';\r\n\r\n        globalInvoiceVariable.notifyParty.name = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.name ? invoiceData.notifyParty.name : notifyPartyName.current?.value;\r\n        globalInvoiceVariable.notifyParty.address = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.address ? invoiceData.notifyParty.address : notifyPartyAddress.current?.value;\r\n        globalInvoiceVariable.notifyParty.city = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.city ? invoiceData.notifyParty.city : notifyPartyCity.current?.value;\r\n        globalInvoiceVariable.notifyParty.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.country ? invoiceData.notifyParty.country : notifyPartyCountry.current?.value;\r\n        globalInvoiceVariable.notifyParty.contactNumber = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.contactNumber ? invoiceData.notifyParty.contactNumber : notifyPartyContactNumber.current?.value;\r\n        globalInvoiceVariable.notifyParty.fax = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.fax ? invoiceData.notifyParty.fax : notifyPartyFax.current?.value;\r\n        globalInvoiceVariable.notifyParty.email = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.email ? invoiceData.notifyParty.email : notifyPartyEmail.current?.value;\r\n        globalInvoiceVariable.notifyParty.sameAsConsignee = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.sameAsConsignee ? invoiceData.notifyParty.sameAsConsignee : isChecked;\r\n\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#FF0000', }}>Notify Party</Text>\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, }}>\r\n                <Checkbox\r\n                    isChecked={isChecked}\r\n                    onChange={value => {\r\n                        setIsChecked(value)\r\n                        globalInvoiceVariable.consignee.sameAsBuyer = value;\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                >\r\n                    Same as consignee\r\n                </Checkbox>\r\n            </View>\r\n\r\n            <View style={{ display: isChecked ? 'none' : 'flex', }}>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Name:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.name = value;\r\n                    }}\r\n                        ref={notifyPartyName} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Address:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.address = value;\r\n                    }} ref={notifyPartyAddress} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Address'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>City:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.city = value;\r\n                    }} ref={notifyPartyCity} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='City'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Country:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.country = value;\r\n                    }} ref={notifyPartyCountry} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Country'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 3, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Contact Number:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.contactNumber = value;\r\n                    }} ref={notifyPartyContactNumber} disabled={isChecked} multiline placeholderTextColor='#9B9E9F' placeholder='Contact Number'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>FAX:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.fax = value;\r\n                    }} ref={notifyPartyFax} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='FAX'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Email:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.email = value;\r\n                    }} ref={notifyPartyEmail} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n            </View>\r\n\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />{/* Horizontal Line */}\r\n        </>\r\n    )\r\n}\r\n\r\nconst ConsigneeInput = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.sameAsBuyer : true);\r\n    const [accountData, setAccountData] = useState({});\r\n\r\n    const consigneeName = useRef(null);\r\n    const consigneeAddress = useRef(null);\r\n    const consigneeCity = useRef(null);\r\n    const consigneeCountry = useRef(null);\r\n    const consigneeContactNumber = useRef(null);\r\n    const consigneeFax = useRef(null);\r\n    const consigneeEmail = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAccountData = async () => {\r\n            if (!selectedChatData.participants && selectedChatData.participants.customer) return; // Make sure there's a selected email\r\n            const docRef = doc(projectExtensionFirestore, 'accounts', selectedChatData.participants.customer);\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    setAccountData(docSnap.data());\r\n                    // console.log(docSnap.data());\r\n                    consigneeName.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.name ? invoiceData.consignee.name : `${data.textFirst ? data.textFirst : ''} ${data.textLast ? data.textLast : ''}`;\r\n                    consigneeAddress.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.address ? invoiceData.consignee.address : `${data.textStreet ? data.textStreet : ''} ${data.textZip ? data.textZip : ''}`;\r\n                    consigneeCity.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.city ? invoiceData.consignee.city : `${data.city ? data.city : ''}`;\r\n                    consigneeCountry.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.country ? invoiceData.consignee.country : `${data.country ? data.country : ''}`;\r\n                    consigneeContactNumber.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.contactNumber ? invoiceData.consignee.contactNumber : `${data.textPhoneNumber ? data.textPhoneNumber : ''}`;\r\n                    consigneeFax.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.fax ? invoiceData.consignee.fax : `${data.fax ? data.fax : ''}`;\r\n                    consigneeEmail.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.email ? invoiceData.consignee.email : `${data.textEmail ? data.textEmail : ''}`;\r\n\r\n\r\n                    globalInvoiceVariable.consignee.name = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.name ? invoiceData.consignee.name : `${data.textFirst ? data.textFirst : ''} ${data.textLast ? data.textLast : ''}`;\r\n                    globalInvoiceVariable.consignee.address = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.address ? invoiceData.consignee.address : `${data.textStreet ? data.textStreet : ''} ${data.textZip ? data.textZip : ''}`;\r\n                    globalInvoiceVariable.consignee.city = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.city ? invoiceData.consignee.city : `${data.city ? data.city : ''}`;\r\n                    globalInvoiceVariable.consignee.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.country ? invoiceData.consignee.country : `${data.country ? data.country : ''}`;\r\n                    globalInvoiceVariable.consignee.contactNumber = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.contactNumber ? invoiceData.consignee.contactNumber : `${data.textPhoneNumber ? data.textPhoneNumber : ''}`;\r\n                    globalInvoiceVariable.consignee.fax = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.fax ? invoiceData.consignee.fax : `${data.fax ? data.fax : ''}`;\r\n                    globalInvoiceVariable.consignee.email = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.email ? invoiceData.consignee.email : `${data.textEmail ? data.textEmail : ''}`;\r\n                    globalInvoiceVariable.consignee.sameAsBuyer = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.sameAsBuyer ? invoiceData.consignee.sameAsBuyer : isChecked;\r\n\r\n                    // console.log(accountData.length);\r\n                } else {\r\n                    console.log('No such document!');\r\n                    setAccountData(null);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n        fetchAccountData();\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isChecked) {\r\n            consigneeName.current.value = `${accountData.textFirst ? accountData.textFirst : ''} ${accountData.textLast ? accountData.textLast : ''}`;\r\n            consigneeAddress.current.value = `${accountData.textStreet ? accountData.textStreet : ''} ${accountData.textZip ? accountData.textZip : ''}`;\r\n            consigneeCity.current.value = `${accountData.city ? accountData.city : ''}`;\r\n            consigneeCountry.current.value = `${accountData.country ? accountData.country : ''}`;\r\n            consigneeContactNumber.current.value = `${accountData.textPhoneNumber ? accountData.textPhoneNumber : ''}`;\r\n            consigneeFax.current.value = `${accountData.fax ? accountData.fax : ''}`;\r\n            consigneeEmail.current.value = `${accountData.textEmail ? accountData.textEmail : ''}`;\r\n        }\r\n\r\n        // console.log(globalInvoiceVariable);\r\n\r\n\r\n    }, [isChecked])\r\n\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#0A78BE', }}>Consignee</Text>\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, }}>\r\n                <Checkbox\r\n                    isChecked={isChecked}\r\n                    onChange={value => {\r\n                        globalInvoiceVariable.consignee.sameAsBuyer = value;\r\n                        setIsChecked(value)\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                >\r\n                    Same as buyer\r\n                </Checkbox>\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Name:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.name = value;\r\n                }} ref={consigneeName} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Address:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.address = value;\r\n                }} ref={consigneeAddress} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Address'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>City:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.city = value;\r\n                }} ref={consigneeCity} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='City'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Country:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.country = value;\r\n                }} ref={consigneeCountry} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Country'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 3, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Contact Number:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.contactNumber = value;\r\n                }} ref={consigneeContactNumber} disabled={isChecked} multiline placeholderTextColor='#9B9E9F' placeholder='Contact Number'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>FAX:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.fax = value;\r\n                }} ref={consigneeFax} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='FAX'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Email:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.email = value;\r\n                }} ref={consigneeEmail} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            <NotifyPartyInput accountData={accountData} setAccountData={setAccountData} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst InvoiceFeatures = ({ widthScaleFactor, heightScaleFactor }) => {\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    return (\r\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', width: 495 * widthScaleFactor, }}>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemAnBrSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Anti-Lock Braking System (ABS)</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemDrAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Driver Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemPaAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Passenger Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemSiAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Side Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAiCoFr ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Air Conditioner (Front)</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAiCoRe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Air Conditioner (Rear)</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAMFMRa ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>AM/FM Radio</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAMFMSt ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>AM/FM Stereo</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCDPl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>CD Player</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCDCh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>CD Changer</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCrSpCo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Cruis Speed Control</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortDiSp ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}> Digital Speedometer</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortDVDPl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>DVD Player</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortHDD ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Hard Disk Drive</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortNaSyGPS ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Navigation System (GPS)</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortPoSt ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Steering</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortPrAuSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Premium Audio System</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortReKeSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Remote Keyless System</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortTiStWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Tilt Steering Wheel</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorLeSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Leather Seats</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoDoLo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Door Locks</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoMi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Mirrors</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Seats</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoWi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Windows</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorReWiDe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Rear Window Defroster</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorReWiWi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Rear Window Wiper</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorThRoSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Third Row Seats</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorTiGl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Tinted Glasses</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorAlWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Alloy Wheels</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorPoSlDo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Sliding Door</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorSuRo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Sunroof</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsCuWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Customized Wheels</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsFuLo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Fully Loaded</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsMaHiAv ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Maintenance History Available</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsBrNeTi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Brand New Tires</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsNoAcHi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>No Accident History</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsNoSmPrOw ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Non-Smoking Previous Owner</Text>\r\n            </View>\r\n\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsOnOwHi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>One Owner History</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsPeRaTi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Performance-rated Tires</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsReBo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Repainted Body</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsTuEn ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Turbo Engine</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsUpAuSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Upgraded Audio System</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst createHmacSha256Hash = (data, secretKey) => {\r\n    const hash = HmacSHA256(data, secretKey);\r\n    return enc.Hex.stringify(hash);\r\n};\r\n\r\n\r\nconst ConfirmPaymentModalContent = () => {\r\n    const dispatch = useDispatch();\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n\r\n\r\n    const [historyModalVisible, setHistoryModalVisible] = useState(false);\r\n\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    const totalAmountString = invoiceData.paymentDetails.totalAmount;\r\n    const totalAmountNumber = parseFloat(totalAmountString.replace(/,/g, ''));\r\n\r\n    const inputAmountRef = useRef(null);\r\n\r\n    const handleHistoryModalOpen = () => {\r\n        setHistoryModalVisible(true);\r\n\r\n        // console.log(selectedChatData.payments);\r\n    }\r\n\r\n    const handleHistoryModalClose = () => {\r\n        setHistoryModalVisible(false);\r\n\r\n    }\r\n\r\n    const handleInputAmountChangeText = (text) => {\r\n        // Remove characters that are not digits, dot, or minus, and ensure minus is only at the start\r\n        const filteredText = text\r\n            .replace(/[^0-9.-]/g, '')  // Remove characters that are not digits, dot, or minus\r\n            .replace(/(.)\\-/g, '$1')   // Remove minus if not at the start\r\n            .replace(/^-(?=\\-)/, '')   // Remove extra minus at the start\r\n            .replace(/(\\..*)\\./g, '$1'); // Allow only one dot\r\n\r\n        // Update the input field\r\n        inputAmountRef.current.value = filteredText;\r\n    };\r\n\r\n\r\n\r\n    const handleCompletePaymentPress = () => {\r\n        const filteredText = invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1') - totalValue;\r\n        inputAmountRef.current.value = filteredText;\r\n    }\r\n\r\n\r\n    const fullPaymentMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `Full Payment Received\r\n\r\nDear Customer,\r\n\r\nI hope this message finds you well. \r\n\r\nWe are writing to confirm that we have received your full payment. \r\n\r\nThank you for settling your account promptly.\r\n\r\nShould you have any further questions or require assistance, please feel free to contact us.\r\n                \r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `Full Payment Received\r\n\r\nDear Customer,\r\n\r\nI hope this message finds you well. \r\n\r\nWe are writing to confirm that we have received your full payment. \r\n                \r\nThank you for settling your account promptly.\r\n                \r\nShould you have any further questions or require assistance, please feel free to contact us.\r\n                                \r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n\r\n    const overBalanceMessage = async (amount) => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `Dear Customer,\r\n\r\nGood day! \r\n\r\nWe're writing to inform you about your account with us at Real Motor Japan.\r\n                \r\nYou have an extra overbalance in your account.\r\n\r\nAmount: $${amount}\r\n                \r\nFeel free to contact us if you have any questions. We're here to help.\r\n                \r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `Dear Customer,\r\n\r\nGood day! \r\n                \r\nWe're writing to inform you about your account with us at Real Motor Japan.\r\n                                \r\nYou have an extra overbalance in your account.\r\n                \r\nAmount: $${amount}\r\n                                \r\nFeel free to contact us if you have any questions. We're here to help.\r\n                                \r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const paymentMessage = async (amount, transactionDate) => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `🌟 Payment Confirmation Alert 🌟\r\n\r\nDear Customer! 👋\r\n\r\nWe're thrilled to inform you that your recent payment has been successfully reflected in our bank account.\r\n\r\nYour prompt and efficient transaction is greatly appreciated! 🎉\r\n\r\n🔍 Payment Details:\r\n\r\nAmount: $${amount}\r\nTransaction Date: ${transactionDate}\r\n\r\nYour account and services are now fully up-to-date. If you have any further questions or require assistance, feel free to reach out.\r\n\r\nThank you for your continued trust in us.\r\nLooking forward to serving you more in the future! 😊\r\n\r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `🌟 Payment Confirmation Alert 🌟\r\n\r\nDear Customer! 👋\r\n\r\nWe're thrilled to inform you that your recent payment has been successfully reflected in our bank account.\r\n\r\nYour prompt and efficient transaction is greatly appreciated! 🎉\r\n\r\n🔍 Payment Details:\r\n\r\nAmount: $${amount}\r\nTransaction Date: ${transactionDate}\r\n\r\nYour account and services are now fully up-to-date. If you have any further questions or require assistance, feel free to reach out.\r\n\r\nThank you for your continued trust in us.\r\nLooking forward to serving you more in the future! 😊\r\n\r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const confirmPayment = async () => {\r\n        setIsConfirmLoading(true);\r\n\r\n        const amountNeeded = invoiceData.paymentDetails.totalAmount ? invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1') - totalValue : '';\r\n        const docRef = doc(projectExtensionFirestore, 'chats', selectedChatData.id);\r\n        const docRefCustomer = doc(projectExtensionFirestore, 'accounts', selectedChatData.participants.customer);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n\r\n        const newPayments = [\r\n            { value: inputAmountRef.current.value, date: formattedTime },\r\n        ];\r\n\r\n        const newPaymentsAccount = [\r\n            { value: inputAmountRef.current.value, date: formattedTime, vehicleRef: selectedChatData.carData.referenceNumber, vehicleName: selectedChatData.carData.carName, },\r\n        ];\r\n\r\n        const inputAmount = inputAmountRef.current.value;\r\n        const numericInputAmount = Number(inputAmount);\r\n        const formattedInputAmount = numericInputAmount.toLocaleString();\r\n        const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n        if (inputAmount === '' || inputAmount === '0') {\r\n            setIsConfirmLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (!inputAmount.startsWith('-')) {\r\n                // First, execute paymentMessage\r\n                await paymentMessage(formattedInputAmount, formattedTime);\r\n                await delay(10); //10ms delay\r\n\r\n                if (numericInputAmount >= amountNeeded) {\r\n                    // Once paymentMessage is successful, execute fullPaymentMessage\r\n                    await fullPaymentMessage();\r\n                    await delay(10); //10ms delay\r\n\r\n                    if (numericInputAmount > amountNeeded) {\r\n                        // Calculate overbalance and execute overBalanceMessage\r\n                        const overBalance = numericInputAmount - amountNeeded;\r\n\r\n                        if (overBalance > 0) {\r\n                            await overBalanceMessage(selectedCustomerData.overBalance ? selectedCustomerData.overBalance + overBalance : '');\r\n                            await delay(10); //10ms delay\r\n                            await updateDoc(docRefCustomer, {\r\n                                overBalance: increment(overBalance),\r\n                            });\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    // Update step indicator for successful payment\r\n                    await updateDoc(docRef, {\r\n                        'stepIndicator.value': 4,\r\n                        'stepIndicator.status': 'Payment Confirmed',\r\n                    });\r\n\r\n                } else {\r\n                    // Handle the case where the payment is less than the amount needed\r\n                    console.log('Partial payment received');\r\n                }\r\n\r\n                // Update payments and payments history\r\n\r\n                await updateDoc(docRef, {\r\n                    payments: arrayUnion(...newPayments)\r\n                });\r\n\r\n                await updateDoc(docRefCustomer, {\r\n                    paymentsHistory: arrayUnion(...newPaymentsAccount)\r\n                });\r\n\r\n            } else {\r\n                console.error('Negative value entered');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error processing payment: ', error);\r\n        } finally {\r\n            setIsConfirmLoading(false);\r\n            dispatch(setTransactionModalVisible(false));\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    function formatDate(dateString) {\r\n        // Remove ' at ' from the date string\r\n        const cleanedDateString = dateString.replace(' at ', ' ');\r\n        const date = new Date(cleanedDateString);\r\n\r\n        if (isNaN(date.getTime())) {\r\n            // Date is not valid\r\n            console.error(\"Invalid Date:\", dateString);\r\n            return \"Invalid Date\";\r\n        }\r\n\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        const year = date.getFullYear();\r\n        const month = months[date.getMonth()];\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n\r\n        let hours = date.getHours();\r\n        const minutes = date.getMinutes().toString().padStart(2, '0');\r\n        const ampm = hours >= 12 ? 'pm' : 'am';\r\n\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n\r\n        return `${year} ${month} ${day} at ${hours}:${minutes}${ampm}`;\r\n    }\r\n\r\n    const PaymentHistoryModal = ({ historyModalVisible, handleHistoryModalClose, payments }) => {\r\n        // Create a copy of payments and sort it by date in descending order\r\n        const sortedPayments = [...payments].sort((a, b) => {\r\n            const dateA = a.date;\r\n            const dateB = b.date;\r\n            return dateB - dateA; // Sorts in descending order\r\n        });\r\n\r\n        // console.log(sortedPayments);\r\n\r\n        return (\r\n            <Modal isOpen={historyModalVisible} onClose={handleHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Payment History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500, }}>\r\n                            {\r\n                                sortedPayments.length > 0 ?\r\n                                    sortedPayments.map((payment, index) => (\r\n                                        <View key={index} style={{\r\n                                            marginBottom: 15,\r\n                                            backgroundColor: '#F8F9FF', // Card background color\r\n                                            borderRadius: 10, // Rounded corners for the card\r\n                                            shadowColor: '#000', // Shadow color\r\n                                            shadowOffset: { width: 0, height: 2 },\r\n                                            shadowOpacity: 0.1,\r\n                                            shadowRadius: 2,\r\n                                            elevation: 3, // Elevation for Android\r\n                                            padding: 15, // Padding inside the card\r\n                                            borderBottomWidth: 1,\r\n                                            borderBottomColor: '#eee',\r\n                                        }}>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Date: </Text>\r\n                                                <Text style={{ color: '#333' }}>\r\n                                                    {formatDate(sortedPayments[sortedPayments.length - 1 - index].date)}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Value: </Text>\r\n                                                <Text style={{ color: Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString().startsWith('-') ? '#FF0000' : '#16A34A' }}>\r\n                                                    ${Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString()}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                        </View>\r\n                                    )) :\r\n                                    <Text style={{ fontWeight: 'bold', alignSelf: 'center', }} italic>No history to show</Text>\r\n                            }\r\n                        </ScrollView>\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        );\r\n    };\r\n\r\n    const totalValue = selectedChatData.payments\r\n        ? selectedChatData.payments.reduce((sum, payment) => {\r\n            const value = Number(payment.value);\r\n            return sum + (isNaN(value) ? 0 : value);\r\n        }, 0)\r\n        : 0;\r\n\r\n    const isTotalValueGreater = Number(totalValue) < Number(invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1'));\r\n    const displayedAmount = isTotalValueGreater ? Number(totalValue).toLocaleString() : invoiceData.paymentDetails.totalAmount;\r\n\r\n    return (\r\n\r\n        <View style={{ flex: 1, }}>\r\n\r\n            <View style={{ marginLeft: 5, }}>\r\n\r\n                <Text style={{ fontWefight: 700, fontSize: 14, }}>Total Paid:</Text>\r\n\r\n                <Progress w=\"300\" shadow={2} value={Number(totalValue)} max={totalAmountNumber} _filledTrack={{\r\n                    bg: \"lime.500\"\r\n                }} />\r\n\r\n                <Text style={{ fontWeight: 700, fontSize: 14, color: '#FF0000', }}>${displayedAmount}\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#8D7777', }}> out of </Text>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#16A34A', }}>{`$${invoiceData.paymentDetails.totalAmount}`}</Text>\r\n                </Text>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ marginLeft: 5, }}>\r\n\r\n                <Pressable\r\n                    onPress={handleHistoryModalOpen}\r\n                    style={{ width: 'fit-content', }}>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#0A78BE', }} underline selectable={false}>Payments History</Text>\r\n                </Pressable>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ marginLeft: 5, marginTop: 5, }}>\r\n\r\n                <Text style={{ fontWeight: 700, fontSize: 14, }}>Input Amount:</Text>\r\n\r\n                <View style={{ flexDirection: 'row', alignItems: 'center', }}>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 18, }}>$</Text>\r\n\r\n                    <TextInput\r\n                        ref={inputAmountRef}\r\n                        placeholderTextColor='#9B9E9F' placeholder='Input Amount'\r\n                        style={{ height: 35, width: 300, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        onChangeText={handleInputAmountChangeText}\r\n                    />\r\n\r\n                </View>\r\n\r\n                <Pressable\r\n                    onPress={handleCompletePaymentPress}\r\n                    style={{ width: 'fit-content', }}>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#16A34A', }} underline selectable={false}>Complete Payment</Text>\r\n                </Pressable>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}>\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        backgroundColor: '#16A34A', // Change color on hover\r\n                        borderRadius: 5,\r\n                        padding: 5,\r\n                    }}\r\n                >\r\n                    {!isConfirmLoading ? (\r\n                        <Pressable\r\n                            onPress={() => confirmPayment()}\r\n                        >\r\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>\r\n                                Confirm\r\n                            </Text>\r\n                        </Pressable>\r\n                    ) : (\r\n                        <Spinner size={'sm'} color={'white'} />)}\r\n\r\n                </View>\r\n            </View>\r\n\r\n            <PaymentHistoryModal\r\n                historyModalVisible={historyModalVisible}\r\n                handleHistoryModalClose={handleHistoryModalClose}\r\n                payments={selectedChatData.payments ? selectedChatData.payments : []} />\r\n\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst IssueProformaInvoiceModalContent = () => {\r\n    const dispatch = useDispatch();\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const [isConfirmHovered, setIsConfirmHovered] = useState(false);\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    const cfsInputRef = useRef(null);\r\n    const placeOfDeliveryInputRef = useRef(null);\r\n    const secretKey = CRYPTO_KEY.toString();\r\n\r\n\r\n\r\n    const invoiceMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: 'Issued Invoice',\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'IssuedInvoice',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: 'Issued Invoice',\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const confirmInvoice = async () => {\r\n        setIsConfirmLoading(true);\r\n        const year = currentDate.split('-')[0]; // Split the date and get the year\r\n        const yearSuffix = year.slice(-2); // Get last 2 digits of the year\r\n        const collectionRef = collection(projectExtensionFirestore, \"IssuedInvoice\");\r\n\r\n        try {\r\n            // Retrieve all documents for the current yearF\r\n            const querySnapshot = await getDocs(collectionRef);\r\n            let maxNumber = 0;\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const docName = doc.id;\r\n                if (docName.startsWith(yearSuffix)) {\r\n                    const number = parseInt(docName.substring(2), 10);\r\n                    if (number > maxNumber) {\r\n                        maxNumber = number;\r\n                    }\r\n                }\r\n            });\r\n\r\n            const nextNumber = maxNumber + 1;\r\n            const docName = `${yearSuffix}${nextNumber}`;\r\n            const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", docName);\r\n            const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\r\n\r\n            const hashedData = createHmacSha256Hash(docName, secretKey);\r\n\r\n            // Create a new document with the globalInvoiceVariable object\r\n            if (selectedChatData.invoiceNumber) {\r\n                const updateDocRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n\r\n                await setDoc(updateDocRef, {\r\n                    ...globalInvoiceVariable,\r\n                    carData: selectedChatData.carData,\r\n                }, { merge: true });\r\n\r\n                if (selectedChatData.stepIndicator.value == 1) {\r\n                    await updateDoc(docRefChatId, {\r\n                        'stepIndicator.status': 'Issue Proforma Invoice',\r\n                        'stepIndicator.value': 2,\r\n                        // finalPrice: globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, ''),\r\n                    });\r\n                }\r\n\r\n                invoiceMessage();\r\n                setIsConfirmLoading(false);\r\n                dispatch(setTransactionModalVisible(false));\r\n            }\r\n\r\n            else {\r\n\r\n                await setDoc(docRef, {\r\n                    ...globalInvoiceVariable,\r\n                    cryptoNumber: hashedData,\r\n                    carData: selectedChatData.carData,\r\n                });\r\n\r\n                await updateDoc(docRefChatId, {\r\n                    keywords: arrayUnion(docName),\r\n                    invoiceNumber: docName,\r\n                    'stepIndicator.status': 'Issue Proforma Invoice',\r\n                    'stepIndicator.value': 2,\r\n                    // finalPrice: globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, ''),\r\n                });\r\n\r\n                invoiceMessage();\r\n                setIsConfirmLoading(false);\r\n                dispatch(setTransactionModalVisible(false));\r\n\r\n\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error creating document: \", error);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     calculateTotalAmount();\r\n    // }, [additionalPriceArray]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        globalInvoiceVariable.cfs = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.cfs ? invoiceData.cfs : cfsInputRef.current?.value;\r\n        globalInvoiceVariable.placeOfDelivery = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.placeOfDelivery ? invoiceData.placeOfDelivery : placeOfDeliveryInputRef.current?.value;\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <ScrollView style={{ flex: 1, maxHeight: 500, }}>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>CFS:</Text>\r\n                <TextInput\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.cfs ? invoiceData.cfs : ''}\r\n                    ref={cfsInputRef} placeholderTextColor='#9B9E9F' placeholder='Input CFS (Optional)'\r\n                    style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onChangeText={(value) => globalInvoiceVariable.cfs = value} />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Place of Delivery:</Text>\r\n                <TextInput\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.placeOfDelivery ? invoiceData.placeOfDelivery : ''}\r\n                    ref={placeOfDeliveryInputRef} placeholderTextColor='#9B9E9F' placeholder='Place of Delivery (Optional)'\r\n                    style={{ height: 25, width: 200, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onChangeText={(value) => globalInvoiceVariable.placeOfDelivery = value} />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, alignItems: 'center' }}>\r\n                <Text style={{ fontWeight: 700, margin: 3 }}>Port of Departure:</Text>\r\n                <SelectPortOfDeparture />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Sales Person:</Text>\r\n                <SelectSalesPerson />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 5, }} />\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Port of Discharge:</Text>\r\n                {/*Select Discharge*/}\r\n                <SelectPortOfDischarge />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 5, }} />\r\n\r\n            <ConsigneeInput />\r\n\r\n            <PaymentDetails />\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />\r\n\r\n            <BankInformation />\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}>\r\n                <View\r\n\r\n                    // onTouchEnd={() => confirmInvoice()}\r\n                    style={{\r\n                        flex: 1,\r\n                        backgroundColor: isConfirmHovered ? '#145A32' : '#16A34A', // Change color on hover\r\n                        borderRadius: 5,\r\n                        padding: 5,\r\n                    }}\r\n\r\n                // onMouseEnter={() => setIsConfirmHovered(true)}\r\n                // onMouseLeave={() => setIsConfirmHovered(false)}\r\n                >\r\n                    {!isConfirmLoading ? (\r\n                        <Pressable onPress={() => confirmInvoice()}>\r\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>\r\n                                Confirm\r\n                            </Text>\r\n                        </Pressable>\r\n\r\n                    ) : (\r\n                        <Spinner size={'sm'} color={'white'} />)}\r\n\r\n                </View>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\n\r\nconst ProfitCalculator = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const [totalSCCAmount, setTotalSCCAmount] = useState(0);\r\n    const [formattedTotalSCCAmount, setFormattedTotalSCCAmount] = useState(0);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [totalProfitAmountDollars, setTotalProfitAmountDollars] = useState(0);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n    const inputPriceRef = useRef(null);\r\n\r\n\r\n    const [portsData, setPortsData] = useState({});\r\n    const [origFreight, setOrigFreight] = useState(0);\r\n    const [lastFetchedPort, setLastFetchedPort] = useState('');\r\n\r\n\r\n    // Function to fetch ports data from Firestore\r\n    const fetchPortsData = async () => {\r\n        const currentPort = invoiceData.discharge.port;\r\n        const freightOrigPrice = selectedChatData.freightOrigPrice;\r\n\r\n        // Fetch data if the current port is different from the last fetched port\r\n        // and if freightOrigPrice is valid (exists, not an empty string, and not 0)\r\n        if (currentPort !== lastFetchedPort && !freightOrigPrice) {\r\n\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    if (data[currentPort]?.kobePrice !== undefined) {\r\n\r\n                        if (invoiceData.departurePort == \"Nagoya\") {\r\n\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].nagoyaPrice,\r\n                            });\r\n                            // console.log(\"Nagoya Price \", data[currentPort].nagoyaPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Yokohama\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].yokohamaPrice,\r\n                            });\r\n                            // console.log(\"Yokohama Price \", data[currentPort].yokohamaPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Kyushu\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].kyushuPrice,\r\n                            });\r\n                            // console.log(\"Kyushu Price \", data[currentPort].kyushuPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Kobe\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].kobePrice,\r\n                            });\r\n                            // console.log(\"Kobe Price \", data[currentPort].kobePrice);\r\n\r\n                        }\r\n\r\n                        setLastFetchedPort(currentPort); // Update last fetched port\r\n                    } else {\r\n                        console.log('Port data not found for the given port');\r\n                    }\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        } else {\r\n            console.log('No need to fetch new data');\r\n        }\r\n    };\r\n\r\n\r\n    // useEffect for fetching ports data\r\n    // useEffect(() => {\r\n    //     // Fetch ports data\r\n    //     const fetchPortsData = async () => {\r\n    //         const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n    //         try {\r\n    //             const docSnap = await getDoc(docRef);\r\n\r\n    //             if (docSnap.exists()) {\r\n    //                 const data = docSnap.data();\r\n    //                 setPortsData(data[invoiceData.discharge.port].kobePrice);\r\n    //                 console.log(data[invoiceData.discharge.port].kobePrice);\r\n    //             } else {\r\n    //                 console.log('No such document!');\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching document:', error);\r\n    //         }\r\n    //     };\r\n\r\n    //     fetchPortsData();\r\n\r\n    // }, [invoiceData]);\r\n\r\n\r\n    const handleModalOpen = () => {\r\n        setModalVisible(true);\r\n        inputPriceRef.current.value = defaultInputPrice;\r\n        calculateTotalAmount();\r\n\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n\r\n    };\r\n\r\n\r\n    const fee = {\r\n        auction: 10000,\r\n        transport: 10000,\r\n        shippingAgent: 15000,\r\n    };\r\n\r\n    const purchasedPrice = Number(selectedChatData.carData && selectedChatData.carData.purchasedPrice ? selectedChatData.carData.purchasedPrice : 0);\r\n    const formattedPurchasedPrice = Number(purchasedPrice).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const auctionFee = Number(fee.auction);\r\n    const formattedAuctionFee = Number(auctionFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const transportFee = Number(fee.transport);\r\n    const formattedTransportFee = Number(transportFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const shippingAgentFee = Number(fee.shippingAgent);\r\n    const formattedShippingAgentFee = Number(shippingAgentFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const cubicMeter = Number(selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ? selectedChatData.carData.dimensionCubicMeters : 0).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n\r\n    const costPerCubicMeter = Number(selectedChatData && selectedChatData.freightOrigPrice ? selectedChatData.freightOrigPrice : 0);\r\n    const formattedCostPerCubicMeter = Number(costPerCubicMeter).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const totalCubicMeterCostDollars = Number(costPerCubicMeter * cubicMeter);\r\n    const formattedTotalCubicMeterCostDollars = Number(costPerCubicMeter * cubicMeter).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const totalCubicMeterCostYen = Number(totalCubicMeterCostDollars * selectedChatData.currency.usdToJpy);\r\n    const formattedTotalCubicMeterCostYen = Number(totalCubicMeterCostYen).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const realTotalPriceYen = (purchasedPrice + auctionFee + transportFee + shippingAgentFee + totalSCCAmount + totalCubicMeterCostYen)\r\n    const formattedRealTotalPriceYen = Number(realTotalPriceYen).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const realTotalPriceDollars = realTotalPriceYen * selectedChatData.currency.jpyToUsd;\r\n    const formattedRealTotalPriceDollars = realTotalPriceDollars.toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n\r\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\r\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice));\r\n\r\n\r\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0))) + freightCalculation;\r\n\r\n    const defaultInputPrice = Math.round(\r\n        invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount\r\n            ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, ''))\r\n            : totalPriceCalculation\r\n    );\r\n\r\n\r\n\r\n\r\n    const safelyParseNumber = (value) => {\r\n        const number = Number(value.replace(/,/g, ''));\r\n        return isNaN(number) ? 0 : number;\r\n    };\r\n\r\n    const calculateTotalAmount = () => {\r\n\r\n        const inputPrice = safelyParseNumber(inputPriceRef.current?.value);\r\n\r\n        const totalAmountDollars = Math.round(inputPrice - realTotalPriceDollars);\r\n        setTotalProfitAmountDollars(totalAmountDollars);\r\n        // const total = Math.round(fobPrice + freight + inspection + insurance + additionalPricesTotal).toLocaleString();\r\n        // setTotalAmountCalculated(total);\r\n        // globalInvoiceVariable.paymentDetails.totalAmount = total;\r\n    };\r\n\r\n    const handleInputPriceChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9]/g, '');\r\n        inputPriceRef.current.value = filteredText;\r\n\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        if (selectedChatData.carData && selectedChatData.carData.supplyChainsCostsData) {\r\n\r\n            const amounts = selectedChatData.carData.supplyChainsCostsData.map((item) => {\r\n                const expenseName = Object.keys(item)[0];\r\n                const expenseData = item[expenseName];\r\n                return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n            });\r\n\r\n            // Use reduce to add up all the amounts\r\n            const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n            const formattedTotalAmount = totalAmount.toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n            setTotalSCCAmount(totalAmount);\r\n            setFormattedTotalSCCAmount(formattedTotalAmount);\r\n\r\n\r\n            // console.log(defaultInputPrice);\r\n            // console.log(realTotalPriceDollars);\r\n            // console.log(formattedRealTotalPriceDollars);\r\n            // console.log(realTotalPriceYen);\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const freightOrigPrice = selectedChatData.freightOrigPrice;\r\n\r\n        if (modalVisible && !freightOrigPrice) {\r\n            fetchPortsData();\r\n        }\r\n\r\n\r\n    }, [modalVisible]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (totalSCCAmount !== 0 || totalSCCAmount !== '') {\r\n            const totalAmountDollars = Math.round(defaultInputPrice - realTotalPriceDollars);\r\n            setTotalProfitAmountDollars(totalAmountDollars);\r\n        }\r\n\r\n\r\n    }, [totalSCCAmount]);\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable\r\n                onPress={handleModalOpen}\r\n                focusable={false}\r\n                variant='ghost'\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#4c555c' : '#6e7a83',\r\n                }}>\r\n                <Ionicons size={15} color={'white'} name='calculator' />\r\n                <Text style={{ textAlign: 'center', color: 'white', fontWeight: 'bold', }} >Profit Calculator</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={modalVisible}\r\n                onClose={() => {\r\n                    handleModalClose()\r\n                }}\r\n                initialFocusRef={inputPriceRef}\r\n                size={'lg'}\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header>Profit Calculator</Modal.Header>\r\n                    <Modal.Body style={{ flexDirection: 'row', backgroundColor: '#fafafa', }}>\r\n\r\n                        <View style={{ flex: 1, borderRightWidth: 1, borderRightColor: '#DADDE1', }}>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, }}>Profit (Yen):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(totalProfitAmountDollars * selectedChatData.currency.usdToJpy) < 0 ? '#FF0000' : '#8D7777',\r\n                                }}>\r\n                                    {`${Number(totalProfitAmountDollars * selectedChatData.currency.usdToJpy).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, }}>Profit (US Dollars):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(totalProfitAmountDollars) < 0 ? '#FF0000' : '#16A34A',\r\n                                }}>\r\n                                    {`${Number(totalProfitAmountDollars).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, }}>Profit (Percentage):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(((totalProfitAmountDollars * selectedChatData.currency.usdToJpy) / purchasedPrice) * 100) <= 10.5 ? '#FF0000' : '#336699',\r\n                                }}>\r\n                                    {`${Number(((totalProfitAmountDollars * selectedChatData.currency.usdToJpy) / purchasedPrice) * 100).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}%`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: '#6E7A83', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, color: 'white', }}>Price to calculate:</Text>\r\n                                <TextInput\r\n                                    onChangeText={handleInputPriceChangeText}\r\n                                    defaultValue={defaultInputPrice}\r\n                                    ref={inputPriceRef}\r\n                                    placeholderTextColor='#9B9E9F' placeholder='Input Price'\r\n                                    style={{\r\n                                        backgroundColor: 'white',\r\n                                        height: 25,\r\n                                        margin: 2,\r\n                                        padding: 1,\r\n                                        borderRadius: 4,\r\n                                        borderWidth: 1,\r\n                                        borderColor: 'white',\r\n                                        outlineStyle: 'none',\r\n                                        fontSize: 18,\r\n                                        fontWeight: '700',\r\n                                    }}\r\n                                />\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n\r\n                        <View style={{ flex: 1, marginLeft: 3 }}>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Purchased Price:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedPurchasedPrice}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Auction Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedAuctionFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Transport Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedTransportFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Shipping Agent Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedShippingAgentFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Supply Chains Costs:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedTotalSCCAmount}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Cubic Meter:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${cubicMeter}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Cost per Cubic Meter:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedCostPerCubicMeter} x ${cubicMeter}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 14, lineHeight: 14, color: '#16A34A', }}>\r\n                                    {`${formattedTotalCubicMeterCostDollars}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 14, lineHeight: 14, color: '#8D7777', }}>\r\n                                    {`${formattedTotalCubicMeterCostYen}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, }}>Total:</Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 18, color: '#8D7777', }}>\r\n                                    {`${formattedRealTotalPriceYen}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 18, color: '#16A34A', }}>\r\n                                    {`${formattedRealTotalPriceDollars}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nconst PreviewInvoice = () => {\r\n\r\n    // npm install html2canvas jspdf\r\n    // import jsPDF from 'jspdf';\r\n    // import html2canvas from 'html2canvas';\r\n    const dispatch = useDispatch();\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const previewInvoiceVisible = useSelector((state) => state.previewInvoiceVisible);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [isPreviewHovered, setIsPreviewHovered] = useState(false);\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const invoiceRef = useRef(null);\r\n    const [invoiceImageUri, setInvoiceImageUri] = useState('');\r\n    const hoverPreviewIn = () => setIsPreviewHovered(true);\r\n    const hoverPreviewOut = () => setIsPreviewHovered(false);\r\n    const [capturedImageUri, setCapturedImageUri] = useState('');\r\n    const [vehicleImageUri, setVehicleImageUri] = useState(globalImageUrl);\r\n    const [featuresTrueCount, setFeaturesTrueCount] = useState(0);\r\n    const [rerenderState, setRerenderState] = useState(0);\r\n\r\n    const handlePreviewInvoiceModalOpen = () => {\r\n        dispatch(setPreviewInvoiceVisible(true));\r\n    };\r\n\r\n    const handlePreviewInvoiceModalClose = () => {\r\n        dispatch(setPreviewInvoiceVisible(false));\r\n        setCapturedImageUri('');\r\n    }\r\n\r\n    function countTrueValuesInCarData(invoiceData) {\r\n        let count = 0;\r\n\r\n        // Check if carData exists in invoiceData\r\n        if (invoiceData.carData) {\r\n            // List of fields to check within carData\r\n            const fields = ['interior', 'exterior', 'safetySystem', 'comfort', 'sellingPoints'];\r\n\r\n            fields.forEach(field => {\r\n                if (invoiceData.carData[field]) {\r\n                    // Count true values in each field of carData\r\n                    count += Object.values(invoiceData.carData[field]).filter(value => value === true).length;\r\n                }\r\n            });\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (previewInvoiceVisible) {\r\n            setRerenderState(rerenderState + 1);\r\n        }\r\n    }, [previewInvoiceVisible])\r\n\r\n\r\n    useEffect(() => {\r\n        const captureImageAsync = async () => {\r\n            try {\r\n                if (invoiceRef.current) {\r\n                    // Adjust the scale to control the captured image resolution\r\n                    const scale = 0.85; // Experiment with different scale values\r\n                    const width = 2480 * scale;\r\n                    const height = 3508 * scale;\r\n\r\n                    const imageUri = await captureRef(invoiceRef, {\r\n                        format: 'jpg',\r\n                        quality: 1, // Adjust quality if needed\r\n                        result: 'base64',\r\n                        width: width,\r\n                        height: height,\r\n                    });\r\n                    setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\r\n                    const trueCount = countTrueValuesInCarData(invoiceData);\r\n                    setFeaturesTrueCount(trueCount);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error capturing view:\", error);\r\n            }\r\n        };\r\n\r\n        const convertImageToBase64 = async (url) => {\r\n            try {\r\n                const response = await fetch(url);\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const blob = await response.blob();\r\n                return new Promise((resolve, reject) => {\r\n                    const reader = new FileReader();\r\n                    reader.onloadend = () => resolve(reader.result);\r\n                    reader.onerror = reject;\r\n                    reader.readAsDataURL(blob);\r\n                });\r\n            } catch (error) {\r\n                console.error('Fetch error:', error.message);\r\n                return null;\r\n            }\r\n        };\r\n        convertImageToBase64(globalImageUrl)\r\n            .then(base64String => {\r\n                setVehicleImageUri(base64String);\r\n            });\r\n        // Trigger image capture when invoiceRef changes\r\n        captureImageAsync();\r\n\r\n        if (screenWidth < 960) {\r\n            const captureImageAsync = async () => {\r\n                try {\r\n                    if (invoiceRef.current) {\r\n                        // Adjust the scale to control the captured image resolution\r\n                        const scale = 0.85; // Experiment with different scale values\r\n                        const width = 2480 * scale;\r\n                        const height = 3508 * scale;\r\n\r\n                        const imageUri = await captureRef(invoiceRef, {\r\n                            format: 'jpg',\r\n                            quality: 1, // Adjust quality if needed\r\n                            result: 'base64',\r\n                            width: width,\r\n                            height: height,\r\n                        });\r\n                        setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\r\n                        const trueCount = countTrueValuesInCarData(invoiceData);\r\n                        setFeaturesTrueCount(trueCount);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Error capturing view:\", error);\r\n                }\r\n            };\r\n\r\n            const convertImageToBase64 = async (url) => {\r\n                try {\r\n                    const response = await fetch(url);\r\n                    if (!response.ok) {\r\n                        throw new Error(`HTTP error! status: ${response.status}`);\r\n                    }\r\n                    const blob = await response.blob();\r\n                    return new Promise((resolve, reject) => {\r\n                        const reader = new FileReader();\r\n                        reader.onloadend = () => resolve(reader.result);\r\n                        reader.onerror = reject;\r\n                        reader.readAsDataURL(blob);\r\n                    });\r\n                } catch (error) {\r\n                    console.error('Fetch error:', error.message);\r\n                    return null;\r\n                }\r\n            };\r\n            convertImageToBase64(globalImageUrl)\r\n                .then(base64String => {\r\n                    setVehicleImageUri(base64String);\r\n                });\r\n            // Trigger image capture when invoiceRef changes\r\n            captureImageAsync();\r\n        }\r\n\r\n    }, [invoiceRef.current, vehicleImageUri]);\r\n\r\n    const captureImage = async () => {\r\n        try {\r\n            // Adjust the scale to control the captured image resolution\r\n            const scale = 0.9; // Experiment with different scale values\r\n            const width = 2480 * scale;\r\n            const height = 3508 * scale;\r\n\r\n            const imageUri = await captureRef(invoiceRef, {\r\n                format: 'jpg',\r\n                quality: 1, // Adjust quality if needed\r\n                result: 'base64',\r\n                width: width,\r\n                height: height,\r\n            });\r\n            return `data:image/jpeg;base64,${imageUri}`;\r\n        } catch (error) {\r\n            console.error(\"Error capturing view:\", error);\r\n        }\r\n    };\r\n\r\n    const createPDF = async () => {\r\n        const element = invoiceRef.current;\r\n        if (element) {\r\n            // Reduce the scale slightly for smaller file size\r\n            const scale = 1; // Fine-tune this value for balance\r\n\r\n            const canvas = await html2canvas(element, {\r\n                scale: scale,\r\n            });\r\n\r\n            // Experiment with JPEG quality for a balance between quality and file size\r\n            const imageData = canvas.toDataURL('image/jpeg', 0.9);\r\n\r\n            // A4 size dimensions in mm\r\n            const pdfWidth = 210;\r\n            const pdfHeight = 297;\r\n\r\n            const pdf = new jsPDF({\r\n                orientation: 'portrait',\r\n                unit: 'mm',\r\n                format: 'a4'\r\n            });\r\n\r\n            // Adjust PDF compression settings\r\n            const options = {\r\n                imageCompression: 'JPEG',\r\n                imageQuality: 1, // Fine-tune this value as well\r\n            };\r\n\r\n            const imgProps = pdf.getImageProperties(imageData);\r\n            const pdfWidthFit = pdfWidth;\r\n            const pdfHeightFit = (imgProps.height * pdfWidthFit) / imgProps.width;\r\n\r\n            pdf.addImage(imageData, 'JPEG', 0, 0, pdfWidthFit, pdfHeightFit, undefined, 'FAST', 0, options);\r\n\r\n            // Filename logic\r\n            selectedChatData.stepIndicator.value < 3 ?\r\n                pdf.save(`Proforma Invoice (${invoiceData.carData.carName} [${invoiceData.carData.referenceNumber}]) (A4 Paper Size).pdf`) :\r\n                pdf.save(`Invoice No. ${invoiceData.id} (A4 Paper Size).pdf`);\r\n        } else {\r\n            console.error(\"No element to capture\");\r\n        }\r\n    };\r\n\r\n\r\n    const handleCaptureAndCreatePDF = async () => {\r\n        const capturedImageUri = await captureImage();\r\n        if (capturedImageUri) {\r\n            await createPDF(capturedImageUri);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\r\n        const dueDateString = invoiceData.bankInformations.dueDate;\r\n        const issuingDateObject = new Date(issuingDateString);\r\n        const dueDateObject = new Date(dueDateString);\r\n\r\n\r\n        const options = {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        };\r\n\r\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\r\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\r\n\r\n    }\r\n\r\n    const originalWidth = 794;\r\n    const originalHeight = 1123;\r\n\r\n    const newWidth = 2480;\r\n    const newHeight = 3508;\r\n\r\n    const widthScaleFactor = newWidth / originalWidth;\r\n    const heightScaleFactor = newHeight / originalHeight;\r\n\r\n    const openImage = () => {\r\n        if (Platform.OS === 'web') {\r\n            const imageWindow = window.open();\r\n            imageWindow.document.write(`\r\n                <style>\r\n                    body {\r\n                        margin: 0;\r\n                        display: flex;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                        height: 100vh;\r\n                        overflow: hidden;\r\n                    }\r\n                    img {\r\n                        width: 595px;\r\n                        height: 842px;\r\n                        object-fit: contain;\r\n                        transition: transform 0.25s ease;\r\n                        cursor: zoom-in; /* Set cursor to magnifying glass */\r\n                    }\r\n                    .zoomed {\r\n                        transform: scale(3);\r\n                        transform-origin: center;\r\n                        cursor: zoom-out; /* Change cursor to indicate zooming out */\r\n                    }\r\n                </style>\r\n                <img id=\"zoomableImage\" src=\"${capturedImageUri}\" alt=\"Base64 Image\" draggable=\"false\" />\r\n                <script>\r\n                    const image = document.getElementById('zoomableImage');\r\n    \r\n                    image.addEventListener('mousedown', function(e) {\r\n                        const rect = this.getBoundingClientRect();\r\n                        const x = e.clientX - rect.left;\r\n                        const y = e.clientY - rect.top;\r\n    \r\n                        // Set the transform origin to the mouse position\r\n                        this.style.transformOrigin = \\`\\${x}px \\${y}px\\`;\r\n                        this.classList.add('zoomed');\r\n                    });\r\n    \r\n                    document.addEventListener('mouseup', function() {\r\n                        image.classList.remove('zoomed');\r\n                    });\r\n                </script>\r\n            `);\r\n        } else {\r\n            console.log('This feature is only available in a web environment');\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <> {invoiceData && Object.keys(invoiceData).length > 0 &&\r\n\r\n            <>\r\n                <Pressable\r\n                    onPress={handlePreviewInvoiceModalOpen}\r\n                    focusable={false}\r\n                    variant='ghost'\r\n                    onHoverIn={hoverPreviewIn}\r\n                    onHoverOut={hoverPreviewOut}\r\n                    style={{\r\n                        marginTop: 3,\r\n                        paddingVertical: 3,\r\n                        paddingHorizontal: 5,\r\n                        flexDirection: 'row', // Align items in a row\r\n                        alignItems: 'center', // Center items vertically\r\n                        justifyContent: 'center',\r\n                        borderRadius: 5,\r\n                        backgroundColor: isPreviewHovered ? '#0772ad' : '#0A8DD5',\r\n                    }}>\r\n\r\n                    {selectedChatData.invoiceNumber && selectedChatData.stepIndicator.value > 2 ?\r\n                        <Text style={{ fontWeight: 700, color: 'white', }}>\r\n                            {`Preview Invoice No. ${selectedChatData.invoiceNumber}`}\r\n                        </Text>\r\n                        :\r\n                        <Text style={{ fontWeight: 700, color: 'white', }}>\r\n                            {`Preview Invoice`}\r\n                        </Text>}\r\n\r\n                </Pressable>\r\n\r\n                <Modal\r\n                    isOpen={previewInvoiceVisible}\r\n                    onClose={() => {\r\n                        handlePreviewInvoiceModalClose();\r\n                    }}\r\n                    size={'full'}\r\n                    useRNModal\r\n                >\r\n                    <View style={{ flexDirection: 'row', margin: 2, }}>\r\n                        <Pressable onPress={() => {\r\n                            capturedImageUri && vehicleImageUri ? handleCaptureAndCreatePDF() : null;\r\n                        }}\r\n                            style={{ justifyContent: 'center', flexDirection: 'row', padding: 5, borderRadius: 5, backgroundColor: '#16A34A', }}>\r\n                            <MaterialCommunityIcons size={20} name='download' color='white' />\r\n                            <Text style={{ color: 'white', }}>Download as PDF</Text>\r\n                        </Pressable>\r\n\r\n                        <Pressable\r\n                            onPress={() => {\r\n                                capturedImageUri && vehicleImageUri ? openImage() : null;\r\n                            }}\r\n                            style={{ position: 'absolute', top: -2, right: -380, flexDirection: 'row', padding: 5, borderRadius: 5, backgroundColor: '#0A8DD5', }}>\r\n                            <Entypo size={20} name='images' color='white' />\r\n                            <Text style={{ color: 'white', }}>View Image</Text>\r\n                        </Pressable>\r\n                    </View>\r\n                    <Modal.CloseButton />\r\n                    {previewInvoiceVisible &&\r\n                        <ScrollView\r\n                            style={{ maxHeight: screenWidth < 960 ? 480 : 720, maxWidth: screenWidth < 960 ? 320 : 900 }}\r\n                        >\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                right: 0,\r\n                                left: 0,\r\n                                backgroundColor: 'white',\r\n                                zIndex: 999,\r\n                                flex: 1,\r\n                                alignItems: 'center', // Center horizontally\r\n                            }}>\r\n                                {capturedImageUri && vehicleImageUri ? (\r\n                                    <NativeImage\r\n                                        source={{ uri: capturedImageUri }}\r\n                                        style={{\r\n                                            marginTop: 5,\r\n                                            width: screenWidth < 960 ? 320 : 595,\r\n                                            height: screenWidth < 960 ? 480 : 842,\r\n                                            resizeMode: 'stretch',\r\n                                            borderWidth: 1,\r\n                                            borderColor: '#DADDE1',\r\n                                        }}\r\n                                    />\r\n                                ) : (<Spinner size={'lg'} color={'#0A9FDC'} style={{ alignSelf: 'center', paddingTop: 80 * heightScaleFactor, }} />)}\r\n                            </View>\r\n\r\n                            {/* Main content with invoice details */}\r\n                            {vehicleImageUri !== '' &&\r\n                                <View ref={invoiceRef} style={{ width: 2480, height: 3508, backgroundColor: 'white', zIndex: 1 }}>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        <NativeImage\r\n                                            source={require('../../assets/RMJ logo for invoice.png')}\r\n                                            style={{\r\n                                                width: 95 * widthScaleFactor,\r\n                                                height: 85 * heightScaleFactor,\r\n                                                resizeMode: 'stretch',\r\n                                            }}\r\n                                        />\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * heightScaleFactor }}>\r\n                                        {/* Title */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`PROFORMA INVOICE`}</Text> :\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`INVOICE`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        {/* QR CODE */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <QRCode\r\n                                                value={invoiceData.cryptoNumber}\r\n                                                size={80 * widthScaleFactor}\r\n                                                color=\"black\"\r\n                                                backgroundColor=\"white\"\r\n                                            />\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 34 * heightScaleFactor }}>\r\n                                        {/* Invoice Number */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Invoice No. RMJ-${invoiceData.id}`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 34 * heightScaleFactor, }}>\r\n                                            {/* Issuing Date */}\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                                            </View>\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#F00A0A', }}>{`Valid Until: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 49 * heightScaleFactor, flexDirection: 'row' }}>\r\n                                            {/* Issuing Date */}\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                            <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                                        </View>\r\n                                    }\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 40 * widthScaleFactor,\r\n                                        top: 134 * heightScaleFactor,\r\n                                        maxWidth: 300 * widthScaleFactor,\r\n                                    }}>\r\n                                        {/* Shipper */}\r\n                                        <Text style={{\r\n                                            fontWeight: 750,\r\n                                            fontSize: 16 * widthScaleFactor,\r\n                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                            width: 'fit-content', // Make the underline cover the text width\r\n                                            marginBottom: 5, // Add some space between text and underline\r\n                                        }}>\r\n                                            {`Shipper`}\r\n                                        </Text>\r\n                                        <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: +81565850606`}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped From:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.departurePort}, ${invoiceData.departureCountry}`}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped To:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.discharge.port}, ${invoiceData.discharge.country}`}</Text>\r\n                                        {invoiceData.placeOfDelivery && invoiceData.placeOfDelivery !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Place of Delivery:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.placeOfDelivery}`}</Text>\r\n                                            </>\r\n                                            : null}\r\n                                        {invoiceData.cfs && invoiceData.cfs !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`CFS:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.cfs}`}</Text>\r\n                                            </>\r\n                                            : null}\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', width: 715 * widthScaleFactor, }}>\r\n\r\n                                            <View style={{\r\n                                                flex: 1, width: 280 * widthScaleFactor,\r\n                                            }}>\r\n                                                {/* Buyer Information */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#0A78BE',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#0A78BE',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n\r\n                                                }}>\r\n                                                    {`Buyer Information`}\r\n                                                </Text>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.name}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.address}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.email}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.contactNumber}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${invoiceData.consignee.fax == '' ? 'N/A' : invoiceData.consignee.fax}`}</Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, paddingLeft: 20 * widthScaleFactor, width: 280 * widthScaleFactor, }}>\r\n                                                {/* Notify Party */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#FF0000',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#FF0000',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n                                                }}>\r\n                                                    {`Notify Party`}\r\n                                                </Text>\r\n                                                {invoiceData.notifyParty.sameAsConsignee == true ? (\r\n                                                    <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\r\n                                                    (<>\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.name}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.address}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.email}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.contactNumber}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${invoiceData.notifyParty.fax == '' ? 'N/A' : invoiceData.notifyParty.fax}`}</Text>\r\n                                                    </>)}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n\r\n                                    </View>\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#FF5C00', height: 194 * heightScaleFactor, }}>\r\n                                            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                <Entypo size={50 * widthScaleFactor} name='warning' color={'#FF0000'} />\r\n                                                <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#FF0000', marginLeft: 20 * widthScaleFactor, }}>{`Bank Information will be provided after placing an order.`}</Text>\r\n                                            </View>\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#1ABA3D', }}>\r\n\r\n                                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * widthScaleFactor, marginBottom: 5 * heightScaleFactor, }}>\r\n                                                <View style={{ flex: 1, marginRight: 50 * widthScaleFactor, }}>\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Bank Account`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Bank Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Branch Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`SWIFTCODE: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Address: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Name of Account Holder: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Account Number: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View style={{ flex: 1 }}>\r\n\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Payment Terms`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Terms: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <View style={{ paddingTop: 30 * heightScaleFactor, }}>\r\n\r\n                                                        <Text style={{\r\n                                                            fontWeight: 750,\r\n                                                            fontSize: 14 * widthScaleFactor,\r\n                                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                            width: 'fit-content', // Make the underline cover the text width\r\n                                                            marginBottom: 2, // Add some space between text and underline\r\n                                                            color: '#F00A0A',\r\n                                                            borderBottomColor: '#F00A0A',\r\n                                                        }}>\r\n                                                            {`Payment Due`}\r\n                                                        </Text>\r\n\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#F00A0A', lineHeight: 14 * widthScaleFactor }}>{`Due Date: `}\r\n                                                            <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, color: 'black', lineHeight: 14 * widthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                                        </Text>\r\n\r\n                                                    </View>\r\n\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                        </View>}\r\n\r\n\r\n\r\n                                    {/* <View style={{ position: 'absolute', left: 260 * widthScaleFactor, top: 335 * heightScaleFactor }}>\r\n\r\n                                        <View style={{ flexDirection: 'row' }}>\r\n                                            {vehicleImageUri ? (\r\n                                                <NativeImage\r\n                                                    source={{ uri: vehicleImageUri }}\r\n                                                    style={{\r\n                                                        width: 99 * widthScaleFactor,\r\n                                                        height: 70 * heightScaleFactor,\r\n                                                        resizeMode: 'stretch',\r\n                                                    }}\r\n                                                />\r\n                                            ) : (\r\n                                                <View\r\n                                                    style={{\r\n                                                        width: 99 * widthScaleFactor,\r\n                                                        height: 70 * heightScaleFactor,\r\n                                                        backgroundColor: '#e0e0e0',\r\n                                                        marginRight: 12,\r\n                                                    }}\r\n                                                />\r\n                                            )}\r\n                                            <View style={{ flex: 1, top: -2 * heightScaleFactor, marginLeft: 5 * widthScaleFactor, height: 59 * heightScaleFactor }}>\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 14 * widthScaleFactor, lineHeight: 16 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.carName}`}\r\n                                                </Text>\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Reference No.: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${invoiceData.carData.referenceNumber}`}\r\n                                                    </Text>\r\n                                                </Text>\r\n\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Year/Month: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${invoiceData.carData.regYear}/${invoiceData.carData.regMonth}`}\r\n                                                    </Text>\r\n                                                </Text>\r\n\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Mileage: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km`}\r\n                                                    </Text>\r\n                                                </Text>\r\n\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Chassis No.: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${invoiceData.carData.chassisNumber}`}\r\n                                                    </Text>\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 260 * widthScaleFactor, top: 410 * heightScaleFactor, flexDirection: 'row', width: 495 * widthScaleFactor, }}>\r\n                                        <View style={{ flex: 1 }}>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Model Code: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.modelCode}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Fuel: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.fuel}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Transmission: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.transmission}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Steering: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.steering}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Displacement: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc`}\r\n                                                </Text>\r\n                                            </Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1 }}>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Doors: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.doors ? invoiceData.carData.doors : 'N/A'}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Drive Type: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.driveType ? invoiceData.carData.driveType : 'N/A'}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Exterior Color: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.exteriorColor}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Number of Seats: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.numberOfSeats ? invoiceData.carData.numberOfSeats : 'N/A'}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Body Type: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.bodyType}`}\r\n                                                </Text>\r\n                                            </Text>\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 260 * widthScaleFactor, top: 484 * heightScaleFactor, width: 495 * widthScaleFactor, }}>\r\n                                        <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginBottom: 3 * heightScaleFactor, }}>\r\n                                            {`Features: `}\r\n                                        </Text>\r\n\r\n                                        <InvoiceFeatures widthScaleFactor={widthScaleFactor} heightScaleFactor={heightScaleFactor} />\r\n\r\n                                    </View> */}\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 38 * widthScaleFactor,\r\n                                        top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * heightScaleFactor : 537 * heightScaleFactor,\r\n                                        width: 718 * widthScaleFactor,\r\n                                        borderWidth: 1 * widthScaleFactor,\r\n                                        borderColor: '#C2E2F4',\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Description`}\r\n                                                </Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Notes`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Quantity`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Amount`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {`FOB`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {`$${Math.round(Number(invoiceData.paymentDetails.fobPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {`Freight`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {`$${Math.round(Number(invoiceData.paymentDetails.freightPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                                </Text>}\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <>\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                marginLeft: 2 * widthScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                                        </Text>\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                marginLeft: 2 * widthScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.incoterms == \"CIF\" ? ` + Insurance` : ' '}\r\n                                                        </Text>\r\n                                                    </>\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? `Insurance` : ' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                        }}>\r\n                                                        {' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n\r\n                                            </View>\r\n\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                </Text>}\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.incoterms === \"CIF\" ? ` + $${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                        </Text>\r\n                                                    </Text>\r\n\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? `$${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n                                            </View>\r\n\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 ? `${invoiceData.paymentDetails.additionalName.join(' + ')}` : ' '}\r\n                                                </Text>}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\r\n                                                        ? invoiceData.paymentDetails.additionalPrice.map(price =>\r\n                                                            `$${parseFloat(price).toLocaleString('en-US', {\r\n                                                                style: 'currency',\r\n                                                                currency: 'USD',\r\n                                                                minimumFractionDigits: 0,\r\n                                                                maximumFractionDigits: 0\r\n                                                            }).slice(1)}`\r\n                                                        ).join(' + ')\r\n                                                        : ' '}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                paddingVertical: 2 * heightScaleFactor,\r\n\r\n                                            }}>\r\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                        {\"Used Vehicle\\n\"}\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.carName}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.chassisNumber}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.exteriorColor}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.fuel}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.transmission}\\n`}\r\n                                                        </Text>\r\n                                                    </Text>\r\n\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.incoterms && invoiceData.discharge.port && invoiceData.discharge ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                        {`${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}`}\r\n                                                    </Text>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 1,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                        {'1'}\r\n                                                    </Text>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                justifyContent: 'center',\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\r\n                                                    <>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            color: '#008AC6',\r\n                                                            marginRight: 10 * widthScaleFactor,\r\n                                                            top: 51 * heightScaleFactor,\r\n                                                            left: 50 * widthScaleFactor,\r\n                                                            position: 'absolute',\r\n                                                        }}>\r\n                                                            {\"Total\"}\r\n                                                            <Text style={{\r\n                                                                fontWeight: 700,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                alignSelf: 'center',\r\n                                                                color: '#00720B',\r\n                                                                marginLeft: 5 * widthScaleFactor,\r\n                                                            }}>\r\n                                                                {`$${invoiceData.paymentDetails.totalAmount}`}\r\n                                                            </Text>\r\n                                                        </Text>\r\n\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 825 * heightScaleFactor, width: 350 * widthScaleFactor, }}>\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Payment Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'No warranty service is provided on used vehicles.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Conditions for order cancellation:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'(1) Order Cancellation Penalty: If the order is canceled after payment, a penalty of USD 220 will apply.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Intermediary Banking Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Swift code: SMBCUS33'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Address: 277 Park Avenue'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'City: New York, NY'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Postal Code: 10172'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Country: United States'}\r\n                                        </Text>\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ? null :\r\n                                        <View style={{ position: 'absolute', right: 39 * widthScaleFactor, top: 835 * heightScaleFactor, width: 300 * widthScaleFactor, }}>\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 80 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n                                                <NativeImage\r\n                                                    source={require('../../assets/RMJ Invoice Signature with Hanko.png')}\r\n                                                    style={{\r\n                                                        width: 276 * widthScaleFactor,\r\n                                                        height: 81 * heightScaleFactor,\r\n                                                        resizeMode: 'contain',\r\n                                                        alignSelf: 'center',\r\n                                                        marginBottom: 0, // Minimize margin to keep the line close\r\n                                                    }}\r\n                                                />\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Real Motor Japan'}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 5 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Your Signature'}\r\n                                                </Text>\r\n                                            </View>\r\n                                        </View>}\r\n\r\n\r\n                                </View>}\r\n\r\n\r\n                        </ScrollView>\r\n\r\n                    }\r\n\r\n                </Modal>\r\n            </>\r\n        }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst ExtendDueDateButton = () => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [isConfirmHovered, setIsConfirmHovered] = useState(false);\r\n    const [isCancelHovered, setIsCancelHovered] = useState(false);\r\n    const [selectedDueDate, setSelectedDueDate] = useState('');\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    let invoiceSelectedDueDate = '';\r\n\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n\r\n    const confirmHoverIn = () => setIsConfirmHovered(true);\r\n    const confirmHoverOut = () => setIsConfirmHovered(false);\r\n\r\n    const cancelHoverIn = () => setIsCancelHovered(true);\r\n    const cancelHoverOut = () => setIsCancelHovered(false);\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleModalOpen = () => {\r\n        setModalVisible(true);\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n    }\r\n\r\n    const handleConfirm = async () => {\r\n\r\n        try {\r\n            await confirmExtendDueDate();\r\n            handleModalClose();\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const extendDueDateMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `The due date has been changed to ${selectedDueDate\r\n                    ? new Date(selectedDueDate).toLocaleDateString(undefined, {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric',\r\n                    })\r\n                    : 'Invalid Date'\r\n                    }`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `The due date has been changed to ${selectedDueDate\r\n                    ? new Date(selectedDueDate).toLocaleDateString(undefined, {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric',\r\n                    })\r\n                    : 'Invalid Date'\r\n                    }`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const confirmExtendDueDate = async () => {\r\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n        setIsConfirmLoading(true);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                'bankInformations.dueDate': selectedDueDate // Update the specific field\r\n            });\r\n            await extendDueDateMessage();\r\n            setIsConfirmLoading(false);\r\n            console.log(\"Document successfully updated\");\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n    };\r\n\r\n    const ModalCalendar = ({ selectedDate, setSelectedDate, currentDate }) => {\r\n\r\n        const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n        const handleModalCalendarOpen = () => {\r\n            setModalCalendarVisible(true);\r\n        };\r\n\r\n        const handleModalCalendarClose = () => {\r\n            setModalCalendarVisible(false);\r\n        };\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n                <Pressable style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onPress={handleModalCalendarOpen}>\r\n                    <Text style={{ flex: 1, }} >{selectedDate}</Text>\r\n                </Pressable>\r\n\r\n                <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Content>\r\n                        <View style={{ height: '100%', flex: 1 }}>\r\n                            <Calendar\r\n                                onDayPress={useCallback(day => {\r\n                                    setSelectedDate(day.dateString);\r\n                                    invoiceSelectedDueDate = day.dateString;\r\n                                    globalInvoiceVariable.bankInformations.dueDate = day.dateString;\r\n                                    handleModalCalendarClose();\r\n                                }, [])}\r\n                                markedDates={{\r\n                                    [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n                                }}\r\n                                renderArrow={(direction) => (\r\n                                    direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n                                )}\r\n                                enableSwipeMonths={true}\r\n                                initialDate={selectedDate}\r\n                                // minDate={currentDate}\r\n                                showSixWeeks />\r\n\r\n                        </View>\r\n\r\n                    </Modal.Content>\r\n\r\n                </Modal>\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (currentDate) {\r\n            const date = new Date(currentDate);\r\n\r\n            // Check the day of the week\r\n            const dayOfWeek = date.getDay();\r\n\r\n            if (dayOfWeek === 5) { // Friday\r\n                date.setDate(date.getDate() + 3); // Add 3 days to reach Monday\r\n            } else if (dayOfWeek === 6) { // Saturday\r\n                date.setDate(date.getDate() + 2); // Add 2 days to reach Monday\r\n            } else {\r\n                date.setDate(date.getDate() + 1); // Sunday to Thursday, add 1 day\r\n            }\r\n\r\n            // Format the date back to string\r\n            const adjustedDate = date.toISOString().split('T')[0];\r\n            setSelectedDueDate(adjustedDate);\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#a8720a' : '#D38F0D',\r\n                }}\r\n            >\r\n                <FontAwesome name='calendar-plus-o' size={15} color={'white'} />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Extend Due Date`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={modalVisible}\r\n                onClose={handleModalClose}\r\n                useRNModal\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.Header >Extend Due Date</Modal.Header>\r\n                    <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                        <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Due Date:</Text>\r\n                        <ModalCalendar currentDate={currentDate} selectedDate={selectedDueDate} setSelectedDate={setSelectedDueDate} />\r\n                    </View>\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onPress={handleModalClose}\r\n                                onHoverIn={cancelHoverIn}\r\n                                onHoverOut={cancelHoverOut}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isCancelHovered ? '#3F3F46' : '#52525B',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text color={'white'} style={{ fontWeight: 700, }}>Cancel</Text>\r\n                            </Pressable>\r\n\r\n                            <View style={{ flex: 1 }} />\r\n\r\n                            <Pressable\r\n                                onPress={handleConfirm}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onHoverIn={confirmHoverIn}\r\n                                onHoverOut={confirmHoverOut}\r\n                                disabled={isConfirmLoading}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isConfirmHovered ? '#0f7534' : '#16A34A',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {!isConfirmLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Confirm</Text> : <Spinner size={'sm'} color={'white'} />}\r\n                            </Pressable>\r\n                        </View>\r\n\r\n\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nconst TransactionModal = () => {\r\n    const transactionModalVisible = useSelector((state) => state.transactionModalVisible);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleTransactionModalClose = () => {\r\n        dispatch(setTransactionModalVisible(false));\r\n    }\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={transactionModalVisible}\r\n            onClose={() => {\r\n                handleTransactionModalClose()\r\n            }}\r\n            size={'lg'}\r\n            useRNModal\r\n        >\r\n            {transactionModalVisible &&\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n\r\n                    <Modal.Header style={{ borderBottomWidth: 2, borderColor: '#0A9FDC', }} >{transactionModalTitle}</Modal.Header>\r\n\r\n                    {transactionModalContentValue == 1 || transactionModalContentValue == 2 &&\r\n                        <IssueProformaInvoiceModalContent />\r\n                    }\r\n\r\n                    {transactionModalContentValue == 3 &&\r\n                        <ConfirmPaymentModalContent />\r\n                    }\r\n                </Modal.Content>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst TransactionButton = ({ title, buttonValue, transactionValue, colorHoverIn, colorHoverOut }) => {\r\n\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleTransactionModalOpen = () => {\r\n        dispatch(setTransactionModalVisible(true));\r\n        transactionModalTitle = title;\r\n        transactionModalContentValue = transactionValue;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleTransactionModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? colorHoverIn : colorHoverOut,\r\n                }}\r\n            >\r\n                <FastImage\r\n                    source={{\r\n                        uri: require(`../../assets/chat_step/chat_step_${buttonValue}_on.png`),\r\n                        priority: FastImage.priority.normal\r\n                    }}\r\n                    style={{\r\n                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                        width: 15,\r\n                        height: 15,\r\n                        alignSelf: 'center',\r\n                    }}\r\n                    resizeMode={FastImage.resizeMode.stretch}\r\n                />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{title}</Text>\r\n            </Pressable>\r\n\r\n        </>\r\n\r\n    );\r\n};\r\n\r\n\r\nconst PaymentHistoryModal = () => {\r\n\r\n    const [paymentHistoryVisible, setPaymentHistoryVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n\r\n    const sortedPayments = selectedCustomerData.paymentsHistory\r\n        ? [...selectedCustomerData.paymentsHistory].sort((a, b) => {\r\n            const dateA = new Date(a.date);\r\n            const dateB = new Date(b.date);\r\n            return dateB - dateA; // Sorts in descending order\r\n        })\r\n        : [];\r\n\r\n    const [displayedPayments, setDisplayedPayments] = useState(sortedPayments.slice(0, 5));\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n\r\n    const loadMorePayments = () => {\r\n        if (loadingMore) return; // Prevent multiple loads\r\n\r\n        setLoadingMore(true);\r\n        const nextItems = sortedPayments.slice(\r\n            displayedPayments.length,\r\n            displayedPayments.length + 5\r\n        );\r\n\r\n        setTimeout(() => { // Simulate network request\r\n            setDisplayedPayments([...displayedPayments, ...nextItems]);\r\n            setLoadingMore(false);\r\n        }, 500); // Adjust the timeout as needed\r\n    };\r\n\r\n    const handlePaymentHistoryModalOpen = () => {\r\n        setDisplayedPayments(sortedPayments.slice(0, 5));\r\n        setPaymentHistoryVisible(true);\r\n\r\n    };\r\n\r\n    const handlePaymentHistoryModalClose = () => {\r\n        setPaymentHistoryVisible(false);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function formatDate(dateString) {\r\n        // Remove ' at ' from the date string\r\n        const cleanedDateString = dateString.replace(' at ', ' ');\r\n        const date = new Date(cleanedDateString);\r\n\r\n        if (isNaN(date.getTime())) {\r\n            // Date is not valid\r\n            console.error(\"Invalid Date:\", dateString);\r\n            return \"Invalid Date\";\r\n        }\r\n\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        const year = date.getFullYear();\r\n        const month = months[date.getMonth()];\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n\r\n        let hours = date.getHours();\r\n        const minutes = date.getMinutes().toString().padStart(2, '0');\r\n        const ampm = hours >= 12 ? 'pm' : 'am';\r\n\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n\r\n        return `${year} ${month} ${day} at ${hours}:${minutes}${ampm}`;\r\n    }\r\n\r\n    const isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\r\n        return layoutMeasurement.height + contentOffset.y >= contentSize.height - 20;\r\n    };\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable onPress={handlePaymentHistoryModalOpen}>\r\n                <Text style={{ fontSize: 14, color: '#0A78BE', textAlign: 'center', }} underline>\r\n                    {`View Payments History`}\r\n                </Text>\r\n            </Pressable>\r\n\r\n            <Modal isOpen={paymentHistoryVisible} onClose={handlePaymentHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ backgroundColor: 'white', textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Payment History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView\r\n                            style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500 }}\r\n                            onScroll={({ nativeEvent }) => {\r\n                                if (isCloseToBottom(nativeEvent)) {\r\n                                    loadMorePayments();\r\n                                }\r\n                            }}\r\n                            scrollEventThrottle={400} // Adjust as needed\r\n                        >\r\n                            {\r\n                                Array.isArray(sortedPayments) && sortedPayments.length > 0 ?\r\n                                    displayedPayments.map((payment, index) => (\r\n                                        <View key={index} style={{\r\n                                            marginBottom: 15,\r\n                                            backgroundColor: '#F8F9FF', // Card background color\r\n                                            borderRadius: 10, // Rounded corners for the card\r\n                                            shadowColor: '#000', // Shadow color\r\n                                            shadowOffset: { width: 0, height: 2 },\r\n                                            shadowOpacity: 0.1,\r\n                                            shadowRadius: 2,\r\n                                            elevation: 3, // Elevation for Android\r\n                                            padding: 15, // Padding inside the card\r\n                                            borderBottomWidth: 1,\r\n                                            borderBottomColor: '#eee',\r\n                                        }}>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Date: </Text>\r\n                                                <Text style={{ color: '#333' }}>\r\n                                                    {formatDate(sortedPayments[sortedPayments.length - 1 - index].date)}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Value: </Text>\r\n                                                <Text style={{ color: Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString().startsWith('-') ? '#FF0000' : '#16A34A' }}>\r\n                                                    ${Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString()}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Vehicle Name: </Text>\r\n                                                <Text style={{ color: '#333' }}>{sortedPayments[sortedPayments.length - 1 - index].vehicleName}</Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Reference Number: </Text>\r\n                                                <Text style={{ color: '#333' }}>{sortedPayments[sortedPayments.length - 1 - index].vehicleRef}</Text>\r\n                                            </Text>\r\n\r\n                                        </View>\r\n\r\n                                    )) :\r\n                                    <Text style={{ fontWeight: 'bold', alignSelf: 'center', }} italic>No history to show</Text>\r\n                            }\r\n                            <View style={{ height: 20, }}>\r\n                                {loadingMore && <Spinner size='sm' color=\"#7B9CFF\" />}\r\n                            </View>\r\n\r\n                        </ScrollView>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst CustomerProfileModal = () => {\r\n    const [customerModalVisible, setCustomerModalVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n\r\n\r\n    const handleModalOpen = () => {\r\n        setCustomerModalVisible(true);\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setCustomerModalVisible(false);\r\n    }\r\n\r\n    const totalPaymentValue = selectedCustomerData.paymentsHistory\r\n        ? selectedCustomerData.paymentsHistory.reduce((sum, payment) => {\r\n            const value = Number(payment.value);\r\n            return sum + (isNaN(value) ? 0 : value);\r\n        }, 0)\r\n        : 0;\r\n\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                onPress={handleModalOpen}\r\n                style={{ width: 'fit-content', }}\r\n            >\r\n                <Text style={{ fontWeight: 700, }} underline>{`${globalCustomerFirstName} ${globalCustomerLastName}`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={customerModalVisible}\r\n                onClose={handleModalClose}\r\n                size={'lg'}\r\n\r\n            >\r\n                <Modal.Content background={'white'}>\r\n\r\n                    <Modal.Body>\r\n\r\n                        <View\r\n                            style={{\r\n                                flex: 1,\r\n                                alignItems: 'center',\r\n                            }}>\r\n\r\n                            <View style={{\r\n                                borderRadius: 10,\r\n                                backgroundColor: '#F8F9FF',\r\n                                width: 440,\r\n                                alignItems: 'center',\r\n                                paddingBottom: 15,\r\n\r\n                            }}>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 26, color: '#0A78BE', }} selectable>\r\n                                    {`${globalCustomerFirstName} ${globalCustomerLastName}`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontSize: 14, color: '#6F6F6F', width: '45%', textAlign: 'center', }} selectable>\r\n                                    {`${selectedCustomerData.textZip}, ${selectedCustomerData.textStreet}, ${selectedCustomerData.city}, ${selectedCustomerData.country}`}\r\n                                </Text>\r\n\r\n                                <View\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'row',\r\n                                        paddingTop: 20,\r\n                                        justifyContent: 'center',\r\n                                    }}\r\n                                >\r\n\r\n                                    <Text style={{ fontSize: 14, color: '#6F6F6F', textAlign: 'center' }} selectable>\r\n                                        {`${selectedCustomerData.textPhoneNumber}`}\r\n                                    </Text>\r\n\r\n                                    {/* Separator */}\r\n\r\n                                    <View style={{\r\n                                        height: '100%', // Full height of the parent View\r\n                                        width: 2, // Width of the line\r\n                                        backgroundColor: '#DCDCDC', // Line color\r\n                                        marginHorizontal: 10, // Space on the sides of the line\r\n                                    }} />\r\n\r\n                                    <Hyperlink\r\n                                        linkDefault={true}\r\n                                        linkStyle={{ color: '#8A64F6', fontSize: 14 }}\r\n\r\n                                    >\r\n                                        <Text style={{ textAlign: 'center' }} selectable>\r\n                                            {selectedCustomerData.textEmail}\r\n                                        </Text>\r\n                                    </Hyperlink>\r\n\r\n                                </View>\r\n\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                        <View\r\n                            style={{\r\n                                width: 440,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                marginTop: 50,\r\n                                flexDirection: 'row',\r\n                                alignSelf: 'center',\r\n                            }}>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 24, color: '#009922', textAlign: 'center', }} selectable>\r\n                                    {`$${(totalPaymentValue).toLocaleString('en-US')}`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Total Payment`}\r\n                                </Text>\r\n\r\n                                <PaymentHistoryModal />\r\n\r\n\r\n                            </View>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 24, color: '#990000', textAlign: 'center', }} selectable>\r\n                                    {`$${selectedCustomerData.overBalance ? Number(selectedCustomerData.overBalance).toLocaleString('en-US') : 0}`}\r\n                                </Text>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Overbalance`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontSize: 14, color: 'transparent', textAlign: 'center', }} underline>\r\n                                    {`-----`}\r\n                                </Text>\r\n\r\n\r\n                            </View>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 24, color: '#0029A3', textAlign: 'center', }} selectable>\r\n                                    {`11`}\r\n                                </Text>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Transactions`}\r\n                                </Text>\r\n\r\n                                <Pressable>\r\n                                    <Text style={{ fontSize: 14, color: '#0A78BE', textAlign: 'center', }} underline>\r\n                                        {`View Transactions`}\r\n                                    </Text>\r\n                                </Pressable>\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                    </Modal.Body>\r\n\r\n\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst ChatMessageHeader = () => {\r\n\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const carImageUrl = useSelector((state) => state.carImageUrl);\r\n\r\n    const [reRenderKey, setReRenderKey] = useState(0);\r\n    const totalPriceCondition = selectedChatData.fobPrice && selectedChatData.jpyToUsd && selectedChatData.m3 && selectedChatData.freightPrice;\r\n\r\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\r\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice));\r\n\r\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0))) + freightCalculation;\r\n\r\n    const fobPriceDollars = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0)));\r\n\r\n    const carName = selectedChatData.carData && selectedChatData.carData.carName ? selectedChatData.carData.carName : (selectedChatData.vehicle && selectedChatData.vehicle.carName ? selectedChatData.vehicle.carName : '');\r\n\r\n    const freightPriceYen = freightCalculation / selectedChatData.currency.jpyToUsd;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setReRenderKey(reRenderKey + 1)\r\n\r\n    }, [activeChatId])\r\n\r\n    return (\r\n\r\n        <View style={{\r\n            flex: 1,\r\n            alignSelf: 'flex-start',\r\n            flexDirection: 'row',\r\n        }}>\r\n\r\n            {carImageUrl ? (\r\n                <FastImage\r\n                    source={{ uri: carImageUrl, priority: FastImage.priority.normal }}\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        alignSelf: 'center',\r\n                        margin: 10,\r\n                    }}\r\n                    resizeMode={FastImage.resizeMode.stretch}\r\n                />\r\n            ) : (\r\n                <View\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginRight: 12,\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            <View style={{ alignSelf: 'center', paddingRight: 10, }}>\r\n                <Text style={{ fontWeight: 700, color: '#0A78BE', }}>{carName}</Text>\r\n\r\n                <CustomerProfileModal />\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 1, color: '#8D7777', }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.referenceNumber ? selectedChatData.carData.referenceNumber : 'Chassis N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                {/* <Text style={{ fontWeight: 700, color: \"#16A34A\", }}>{`$${selectedChatData.offerPrice ? selectedChatData.offerPrice : 0}`}</Text> */}\r\n                <TimelineStatus data={statusData} />\r\n\r\n            </View>\r\n\r\n            {/* <HorizontalTimeline /> */}\r\n\r\n            <View style={{ alignSelf: 'center', justifyContent: 'center', paddingLeft: 10, }}>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.chassisNumber ? selectedChatData.carData.chassisNumber : 'Chassis N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.modelCode ? selectedChatData.carData.modelCode : 'Model Code N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.mileage\r\n                            ? Number(selectedChatData.carData.mileage).toLocaleString('en-US')\r\n                            : 'Mileage N/A'} km\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.fuel ? selectedChatData.carData.fuel : 'Fuel N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.transmission ? selectedChatData.carData.transmission : 'Transmission N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ alignSelf: 'center', justifyContent: 'center', paddingLeft: 15, }}>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontSize: 18, }} bold>Total Price: </Text>\r\n                    <Text selectable style={{ fontSize: 18, color: \"#16A34A\", textAlign: 'right', }} bold>\r\n                        {`$${Number(totalPriceCalculation).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2, }}>\r\n                        ({`¥${Number(\r\n                            totalPriceCalculation /\r\n                            ((selectedChatData && selectedChatData.jpyToUsd) ? Number(selectedChatData.jpyToUsd) :\r\n                                (selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd) ? selectedChatData.currency.jpyToUsd :\r\n                                    0)\r\n                        ).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, }}>FOB Price: </Text>\r\n                    <Text selectable style={{ fontWeight: 700, color: \"#8D7777\", textAlign: 'right', }}>\r\n                        {`${Number(fobPriceDollars).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 2, marginLeft: 2, }}>\r\n                        ({`${(selectedChatData.fobPrice ? selectedChatData.fobPrice : Number(selectedChatData.carData && selectedChatData.carData.fobPrice ? selectedChatData.carData.fobPrice : 0)).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, }}>Freight Price: </Text>\r\n                    <Text selectable style={{ fontWeight: 700, color: \"#8D7777\", textAlign: 'right', }}>\r\n                        {`${Number(freightCalculation).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 2, marginLeft: 2, }}>\r\n                        ({`${(selectedChatData.freightPrice ? freightPriceYen : Number(selectedChatData.carData && selectedChatData.carData.freightPrice ? freightPriceYen : 0)).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, textAlign: 'right', }}>\r\n                        {`${selectedChatData.country && selectedChatData.port ? `${selectedChatData.country} / ${selectedChatData.port}` : 'N/A'}`}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, color: \"#16A34A\", }}>{selectedChatData.insurance ? 'CIF' : 'C&F'}\r\n                        {selectedChatData.inspection ? ` + Inpection[${selectedChatData.inspectionName}]` : ''}</Text>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={{ paddingLeft: 10, paddingRight: 10, paddingTop: 2, }}>\r\n                {(selectedChatData.stepIndicator.value == 1 || selectedChatData.stepIndicator.value == 2) &&\r\n                    <>\r\n                        <ProfitCalculator />\r\n\r\n                        <TransactionButton\r\n                            key={'Issue Proforma Invoice'}\r\n                            title={selectedChatData.stepIndicator.value == 1 ? 'Issue Proforma Invoice' : selectedChatData.stepIndicator.value == 2 ? 'Update Invoice' : ''}\r\n                            colorHoverIn={'#0f7534'}\r\n                            colorHoverOut={'#16A34A'}\r\n                            transactionValue={2}\r\n                            buttonValue={2}\r\n                            iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />\r\n\r\n                        <PreviewInvoice />\r\n\r\n                        <View style={{ flexDirection: 'row' }}>\r\n                            <Text style={{ fontWeight: 700, fontSize: 18 }}>Final Price: </Text>\r\n                            <Text selectable style={{ fontWeight: 700, fontSize: 18, color: \"#FF0000\", textAlign: 'right' }}>\r\n                                {`$${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                            </Text>\r\n                            <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2 }}>\r\n                                ({`¥${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount && selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd ? (Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) / Number(selectedChatData.currency.jpyToUsd)) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                            </Text>\r\n                        </View>\r\n                    </>\r\n                }\r\n\r\n                {(selectedChatData.stepIndicator.value == 3) &&\r\n\r\n                    <View style={{ flexDirection: 'row', paddingRight: 10, paddingTop: 2, }}>\r\n\r\n                        <View style={{ paddingLeft: 10, }}>\r\n                            <ProfitCalculator />\r\n\r\n                            <TransactionButton\r\n                                key={'Input Payment'}\r\n                                title={'Input Payment'}\r\n                                colorHoverOut={'#FF0000'}\r\n                                colorHoverIn={'#800101'}\r\n                                transactionValue={3}\r\n                                buttonValue={4}\r\n                                iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />\r\n\r\n\r\n                            <PreviewInvoice />\r\n\r\n                            <View style={{ flexDirection: 'row' }}>\r\n                                <Text style={{ fontWeight: 700, fontSize: 18 }}>Final Price: </Text>\r\n                                <Text selectable style={{ fontWeight: 700, fontSize: 18, color: \"#FF0000\", textAlign: 'right' }}>\r\n                                    {`$${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2 }}>\r\n                                    ({`¥${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount && selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd ? (Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) / Number(selectedChatData.currency.jpyToUsd)) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                                </Text>\r\n                            </View>\r\n                        </View>\r\n\r\n                        <View style={{ paddingLeft: 10, }}>\r\n\r\n                            <TransactionButton\r\n                                key={'Issue Proforma Invoice'}\r\n                                title={selectedChatData.stepIndicator.value == 1 ? 'Issue Proforma Invoice' : 'Update Invoice'}\r\n                                colorHoverIn={'#0f7534'}\r\n                                colorHoverOut={'#16A34A'}\r\n                                transactionValue={2}\r\n                                buttonValue={2}\r\n                                iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />\r\n\r\n                            <ExtendDueDateButton />\r\n\r\n                            <View style={{ flexDirection: 'row', }}>\r\n                                {invoiceData && invoiceData.bankInformations && invoiceData.bankInformations.dueDate &&\r\n                                    <>\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14, }}>Due Date: </Text>\r\n                                        <Text selectable style={{ fontWeight: 700, fontSize: 14, textAlign: 'right', color: '#FF0000', }}>\r\n                                            {\r\n                                                invoiceData.bankInformations.dueDate\r\n                                                    ? new Date(invoiceData.bankInformations.dueDate).toLocaleDateString(undefined, {\r\n                                                        year: 'numeric',\r\n                                                        month: 'long',\r\n                                                        day: 'numeric',\r\n                                                    })\r\n                                                    : 'Invalid Date'\r\n                                            }\r\n                                        </Text>\r\n                                    </>}\r\n                            </View>\r\n\r\n                        </View>\r\n                    </View>\r\n\r\n                }\r\n\r\n            </View>\r\n            <TransactionModal />\r\n        </View>\r\n\r\n    );\r\n};\r\n\r\n\r\nconst ReadByListModal = ({ userEmail, handleReadByListModalClose }) => {\r\n\r\n    const readByListModalVisible = useSelector((state) => state.readByListModalVisible)\r\n    const selectedChatData = useSelector((state) => state.selectedChatData)\r\n    // const [email, setEmail] = useState(projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '');\r\n\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={readByListModalVisible}\r\n            onClose={() => handleReadByListModalClose()}\r\n            useRNModal\r\n            size={'xs'}\r\n        >\r\n            <Modal.Content borderRadius={0} style={{ padding: 15, backgroundColor: '#f8f8f8', shadowColor: '#000', shadowOffset: { width: 0, height: 2 }, shadowOpacity: 0.25, shadowRadius: 3.84, elevation: 5 }}>\r\n                <Modal.CloseButton />\r\n\r\n                <Modal.Header style={{ fontSize: 22, fontWeight: '600', textAlign: 'center', color: '#333', }}>Read List</Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    {\r\n                        selectedChatData.readBy.length > 0 ? (\r\n                            <ScrollView style={{ maxHeight: 250, borderRadius: 10 }}>\r\n                                {/* Sort and map over the readBy list */}\r\n                                {\r\n                                    [...selectedChatData.readBy]\r\n                                        .sort((a, b) => a === email ? -1 : b === email ? 1 : 0)\r\n                                        .map(item => (\r\n                                            <View key={item} style={{ flexDirection: 'row', alignItems: 'center', marginVertical: 8, borderBottomWidth: 0.5, borderColor: '#ddd', paddingBottom: 8 }}>\r\n                                                <FontAwesome name=\"user-circle\" size={24} color=\"#4A90E2\" style={{ marginRight: 12 }} />\r\n                                                <Text style={{ flex: 1, color: '#555' }}>{email === item ? 'You' : item}</Text>\r\n                                            </View>\r\n                                        ))\r\n                                }\r\n                            </ScrollView>\r\n                        ) : (\r\n                            <Text style={{ textAlign: 'center', color: 'grey', fontSize: 16 }}>No one has read this message yet.</Text>\r\n                        )\r\n                    }\r\n                </Modal.Body>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n}\r\n\r\nconst ImagePreviewModal = ({ isVisible, onClose, imageUrl }) => {\r\n    return (\r\n        <Modal isOpen={isVisible} onClose={onClose} size=\"full\" useRNModal>\r\n            <Modal.Content\r\n                style={{\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                    width: '80%',\r\n                    height: '80%',\r\n                    alignSelf: 'center',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                <Modal.CloseButton />\r\n                <FastImage\r\n                    source={{ uri: imageUrl, priority: FastImage.priority.normal }}\r\n                    style={{ width: '100%', height: '100%', borderRadius: 10 }}\r\n                    resizeMode={FastImage.resizeMode.contain}\r\n                />\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n\r\nconst HoverablePressable = ({ url, printComponent }) => {\r\n    const [isHoveredDownload, setIsHoveredDownload] = useState(false);\r\n    const [isHoveredPrint, setIsHoveredPrint] = useState(false);\r\n    const baseStyle = {\r\n        marginRight: 10,\r\n        borderRadius: 16,\r\n        borderWidth: 1,\r\n        borderColor: 'white',\r\n        width: 26,\r\n        height: 26,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    };\r\n\r\n    const hoverStyle = {\r\n        backgroundColor: '#ddd', // Example hover style\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip label=\"Download\" openDelay={200} bgColor={'white'} _text={{ color: '#1C2B33', }}>\r\n                <Pressable\r\n                    style={{\r\n                        marginRight: 8,\r\n                        borderRadius: 16,\r\n                        width: 32,\r\n                        height: 32,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        backgroundColor: isHoveredDownload ? '#424649' : 'transparent',\r\n                    }}\r\n                    onPress={async () => {\r\n                        await Linking.openURL(url);\r\n                    }}\r\n                    onMouseEnter={() => setIsHoveredDownload(true)}\r\n                    onMouseLeave={() => setIsHoveredDownload(false)}\r\n                >\r\n                    <MaterialCommunityIcons name=\"download\" size={20} color={'#F1F1F1'} />\r\n                </Pressable>\r\n            </Tooltip>\r\n\r\n            {/* <Tooltip label=\"Print\" openDelay={200} bgColor={'white'} _text={{ color: '#1C2B33', }}>\r\n                <Pressable\r\n                    style={{\r\n                        marginRight: 8,\r\n                        borderRadius: 16,\r\n                        width: 32,\r\n                        height: 32,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        backgroundColor: isHoveredPrint ? '#424649' : 'transparent',\r\n                    }}\r\n                    onMouseEnter={() => setIsHoveredPrint(true)}\r\n                    onMouseLeave={() => setIsHoveredPrint(false)}\r\n                    onPress={printComponent}\r\n                >\r\n                    <MaterialCommunityIcons name=\"printer\" size={20} color={'#F1F1F1'} />\r\n                </Pressable>\r\n            </Tooltip> */}\r\n        </>\r\n    );\r\n};\r\n\r\nconst DocumentPreviewModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const selectedFileUrl = useSelector((state) => state.selectedFileUrl);\r\n    const pdfViewerModalVisible = useSelector((state) => state.pdfViewerModalVisible);\r\n\r\n    const [iframeKey, setIframeKey] = useState(0);\r\n\r\n\r\n    const url = 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/ChatFiles%2Fchat_2023090239_marcvan14%40gmail.com%2FC-HUB_01312024153002.887%2FDAILY%20REPORT%202024-01-29.pdf?alt=media&token=88b7be9b-17ef-48d3-b5b3-6f7f0d317b7c'\r\n    const urlDocx = 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/ChatFiles%2Fchat_2023090239_marcvan14%40gmail.com%2FC-HUB_01312024170117.701%2FDAILY%20REPORT%202024-01-29.docx?alt=media&token=9bf45632-e192-45bf-8b40-9fd5cdb9368e';\r\n    const [isLoading, setLoading] = useState(true); // Loading state\r\n\r\n    // console.log(`https://docs.google.com/viewer?url=${encodeURIComponent(urlDocx)}&embedded=true`);\r\n\r\n\r\n    const handleIframeLoad = () => {\r\n        setLoading(false); // Set loading to false when iframe content is loaded\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n\r\n        dispatch(setPdfViewerModalVisible(false))\r\n        dispatch(setSelectedFileUrl(''))\r\n        setLoading(true);\r\n        globalSelectedFileType = '';\r\n        globalSelectedPDFUrl = '';\r\n    }\r\n\r\n    const printIframe = () => {\r\n        // const iframe = document.getElementById('documentIframe');\r\n        // iframe.contentWindow.print();\r\n        const printWindow = window.open(`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`, '_blank');\r\n        printWindow.focus();\r\n        printWindow.print();\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const timeout = setTimeout(() => {\r\n\r\n            if (isLoading) {\r\n                console.log(\"Iframe is taking too long to load. Attempting to reload.\");\r\n                console.log(\"Current URL:\", selectedFileUrl);\r\n                console.log(\"Current Global URL:\", globalSelectedPDFUrl);\r\n\r\n                setIsLoading(false);\r\n                setIframeKey(prevKey => prevKey + 1);\r\n                dispatch(setSelectedFileUrl(globalSelectedPDFUrl));\r\n\r\n            }\r\n\r\n        }, 5000); // Timeout set to 5 seconds\r\n\r\n        return () => clearTimeout(timeout);\r\n\r\n    }, [isLoading,]);\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={pdfViewerModalVisible}\r\n            onClose={() => {\r\n                handleModalClose();\r\n            }\r\n            } size=\"xl\">\r\n            <Modal.Content>\r\n                {globalSelectedFileType !== 'pdf' ?\r\n\r\n                    (<>\r\n                        {isLoading && (\r\n                            <View style={{\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                left: 0,\r\n                                right: 0,\r\n                                position: 'absolute',\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                height: '700px'  // Same height as the iframe for consistent layout\r\n                            }}>\r\n                                <Spinner\r\n                                    animating\r\n                                    size=\"lg\"\r\n                                    color={'#7B9CFF'}\r\n                                />\r\n                            </View>\r\n                        )}\r\n                        {selectedFileUrl !== '' &&\r\n                            <>\r\n                                {!isLoading &&\r\n                                    <View style={{ flexDirection: 'row', width: '100%', height: 57, borderRadius: 0, backgroundColor: '#323639', justifyContent: 'flex-end', alignItems: 'center', }}>\r\n                                        <HoverablePressable url={globalSelectedPDFUrl} printComponent={printIframe} />\r\n                                    </View>\r\n                                }\r\n\r\n                                <iframe\r\n                                    key={iframeKey}\r\n                                    src={`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`}\r\n                                    id='documentIframe'\r\n                                    style={{ width: '100%', height: '700px' }}\r\n                                    title=\"Document Viewer\"\r\n                                    onLoad={() => {\r\n                                        handleIframeLoad();\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </>\r\n                    )\r\n\r\n                    : (\r\n                        <>\r\n                            {isLoading && (\r\n                                <View style={{\r\n                                    top: 0,\r\n                                    bottom: 0,\r\n                                    left: 0,\r\n                                    right: 0,\r\n                                    position: 'absolute',\r\n                                    justifyContent: 'center',\r\n                                    alignItems: 'center',\r\n                                    height: '700px'  // Same height as the iframe for consistent layout\r\n                                }}>\r\n                                    <Spinner\r\n                                        animating\r\n                                        size=\"lg\"\r\n                                        color={'#7B9CFF'}\r\n                                    />\r\n                                </View>\r\n                            )}\r\n                            {selectedFileUrl !== '' && <iframe\r\n                                src={selectedFileUrl}\r\n                                style={{ width: '100%', height: '700px' }}\r\n                                title=\"PDF Viewer\"\r\n                                onLoad={handleIframeLoad} // Event when iframe has loaded\r\n                            />}\r\n                        </>\r\n                    )\r\n\r\n\r\n                }\r\n\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n\r\n};\r\n\r\nconst ChatMessageBox = ({ activeButtonValue, userEmail }) => {\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const loadMoreMessagesLoading = useSelector((state) => state.loadMoreMessagesLoading);\r\n    const noMoreMessagesData = useSelector((state) => state.noMoreMessagesData);\r\n    const [isEyeHovered, setIsEyeHovered] = useState(false);\r\n    const flatListRef = useRef();\r\n    const [hoveredImageIndex, setHoveredImageIndex] = useState(null);\r\n\r\n    const [selectedImageIndex, setSelectedImageIndex] = useState(null);\r\n    const [isPreviewVisible, setIsPreviewVisible] = useState(false);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const screenHeight = Dimensions.get('window').height;\r\n\r\n    const openPreview = (index) => {\r\n        setSelectedImageIndex(index);\r\n        setIsPreviewVisible(true);\r\n    };\r\n\r\n    const closePreview = () => {\r\n        setIsPreviewVisible(false);\r\n        setSelectedImageIndex(null);\r\n    };\r\n\r\n\r\n    const handleImageMessageMouseEnter = (index) => {\r\n        setHoveredImageIndex(index);\r\n    };\r\n\r\n    const handleImageMessageMouseLeave = () => {\r\n        setHoveredImageIndex(null);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [read, setRead] = useState(selectedChatData.read);\r\n\r\n    const handleReadByListModalOpen = () => {\r\n        dispatch(setReadByListModalVisible(true));\r\n    };\r\n\r\n    const handleReadByListModalClose = () => {\r\n        dispatch(setReadByListModalVisible(false));\r\n    };\r\n\r\n    const animatedValue = useRef(new Animated.Value(0)).current;\r\n\r\n    useEffect(() => {\r\n        Animated.loop(\r\n            Animated.sequence([\r\n                Animated.timing(animatedValue, {\r\n                    toValue: 1,\r\n                    duration: 2000,\r\n                    useNativeDriver: false\r\n                }),\r\n                Animated.timing(animatedValue, {\r\n                    toValue: 0,\r\n                    duration: 2000,\r\n                    useNativeDriver: false\r\n                })\r\n            ])\r\n        ).start();\r\n    }, [animatedValue]);\r\n\r\n    const borderColor = animatedValue.interpolate({\r\n        inputRange: [0, 0.25, 0.5, 0.75, 1],\r\n        outputRange: [\r\n            'rgb(255, 100, 100)', // Red\r\n            'rgb(100, 255, 100)', // Green\r\n            'rgb(100, 100, 255)', // Blue\r\n            'rgb(255, 255, 100)', // Yellow\r\n            'rgb(255, 100, 255)'  // Magenta\r\n        ]\r\n    });\r\n\r\n    const renderFooter = () => {\r\n        return (\r\n            <>\r\n                {!noMoreMessagesData && (\r\n                    <View style={{ paddingVertical: 20, height: 60, }}>\r\n                        {loadMoreMessagesLoading && (\r\n                            <Spinner\r\n                                animating\r\n                                size=\"sm\"\r\n                                color={'#7B9CFF'}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </>\r\n\r\n\r\n        );\r\n    };\r\n\r\n    const handleLoadMoreMessages = async () => {\r\n        dispatch(setLoadMoreMessagesLoading(true));\r\n        dispatch(setNoMoreMessagesData(false));\r\n\r\n        let nextQuery;\r\n        if (!globalMessagesLastVisible) {\r\n            // No more data to load or globalLastVisible is undefined\r\n            dispatch(setLoadMoreMessagesLoading(false));\r\n            dispatch(setNoMoreMessagesData(true));\r\n        }\r\n\r\n        else {\r\n            dispatch(setLoadMoreMessagesLoading(true));\r\n            dispatch(setNoMoreMessagesData(false));\r\n\r\n            nextQuery = query(\r\n                collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(globalMessagesLastVisible),\r\n                limit(10)\r\n            );\r\n            try {\r\n                const unsubscribe = onSnapshot(nextQuery, (snapshot) => {\r\n                    if (snapshot.empty) {\r\n                        // Handle the case when there's no more data\r\n                        console.log(\"No more data to load\");\r\n                        setTimeout(() => {\r\n                            dispatch(setLoadMoreMessagesLoading(false));\r\n                            dispatch(setNoMoreMessagesData(true));\r\n                            globalMessagesLastVisible = null;\r\n                        }, 0);  // Delay setting loading and no more data flags\r\n                        return;\r\n                    }\r\n\r\n                    const chatsData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        chatsData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n\r\n                    // Append new data to the existing list\r\n\r\n                    setTimeout(() => {\r\n                        dispatch(setChatMessagesData([...chatMessagesData, ...chatsData]));\r\n                        dispatch(setLoadMoreMessagesLoading(false));\r\n                        globalMessagesLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n                    }, 0);\r\n\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data from Firebase:', error);\r\n                setTimeout(() => dispatch(setLoadMoreMessagesLoading(false)), 0);  // Ensure loading is set to false even if there's an error\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const updateChatToRead = async () => {\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", activeChatId);\r\n        if (email !== '') {\r\n            try {\r\n\r\n                await updateDoc(docRef, {\r\n                    read: true,\r\n                    readBy: arrayUnion(email),\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (activeChatId == selectedChatData.id) {\r\n            if (selectedChatData.stepIndicator.value !== activeButtonValue && activeButtonValue !== 0) {\r\n                dispatch(setChatMessagesData([]));\r\n                dispatch(setActiveChatId(''));\r\n            }\r\n            else {\r\n                updateChatToRead();\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }, [selectedChatData]);\r\n\r\n    const handlePreviewInvoiceModalOpen = () => {\r\n        dispatch(setPreviewInvoiceVisible(true));\r\n    };\r\n\r\n    const formatDate = (timestamp) => {\r\n        // Parse the original timestamp\r\n        // Expected format: \"2024/01/15 at 12:17:50\"\r\n        const parts = timestamp.match(/(\\d{4})\\/(\\d{2})\\/(\\d{2}) at (\\d{2}):(\\d{2}):(\\d{2})/);\r\n        if (!parts) return timestamp; // Return original if parsing fails\r\n\r\n        // Create a new Date object\r\n        const date = new Date(parts[1], parts[2] - 1, parts[3], parts[4], parts[5], parts[6]);\r\n\r\n        // Format month names\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n        // Convert to 12-hour format and determine AM or PM\r\n        const hours = date.getHours();\r\n        const isPM = hours >= 12;\r\n        const formattedHours = hours % 12 || 12; // Convert 0 to 12 for 12 AM\r\n        const amPm = isPM ? 'PM' : 'AM';\r\n\r\n        // Construct the new format with year at the beginning\r\n        return `${date.getFullYear().toString().substr(-2)} ${months[date.getMonth()]} ${date.getDate()}, ${formattedHours}:${date.getMinutes().toString().padStart(2, '0')} ${amPm}`;\r\n    };\r\n\r\n    const extractUsernameFromEmail = (email) => {\r\n        const [username] = email.split('@');\r\n        return username;\r\n    };\r\n\r\n\r\n    const breakUrl = (url, maxUrlLength = 30) => {\r\n        let brokenUrl = '';\r\n        while (url.length > 0) {\r\n            brokenUrl += url.substring(0, maxUrlLength);\r\n            if (url.length > maxUrlLength) {\r\n                brokenUrl += '\\u200B'; // Zero-width space\r\n            }\r\n            url = url.substring(maxUrlLength);\r\n        }\r\n        return brokenUrl;\r\n    };\r\n\r\n    const isUrl = (text) => {\r\n        // Simple URL check\r\n        const urlPattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n        return !!urlPattern.test(text);\r\n    };\r\n\r\n    const handleLinkPress = (url) => {\r\n        Linking.canOpenURL(url).then(supported => {\r\n            if (supported) {\r\n                Linking.openURL(url);\r\n            } else {\r\n                console.log(\"Don't know how to open URI: \" + url);\r\n            }\r\n        });\r\n    };\r\n\r\n    const cleanUrl = (url) => {\r\n        // Removing Zero Width Space and other potential invisible characters\r\n        return url.replace(/[\\u200B-\\u200D\\uFEFF]/g, '');\r\n    };\r\n\r\n\r\n    const renderItemText = (isGlobalCustomerSender, text) => {\r\n        const urlPattern = new RegExp('(https?:\\\\/\\\\/[^\\\\s]+)', 'g');\r\n        let segments = text.split(urlPattern);\r\n\r\n        const insertBreaks = (str, n) => {\r\n            // Inserts a zero-width space every 'n' characters in 'str'\r\n            let result = '';\r\n            while (str.length > 0) {\r\n                result += str.substring(0, n) + '\\u200B';\r\n                str = str.substring(n);\r\n            }\r\n            return result;\r\n        };\r\n\r\n        return segments.map((segment, index) => {\r\n            const segmentWithBreaks = segment.length > 30 && !segment.includes(' ') ? insertBreaks(segment, 30) : segment;\r\n\r\n            if (isUrlForText(segment)) {\r\n                // Apply breaks for long URLs\r\n                return (\r\n                    <Pressable key={index} onPress={() => handleLinkPress(segment)}>\r\n                        <Text\r\n                            selectable\r\n                            style={{\r\n                                fontWeight: '400',\r\n                                color: isGlobalCustomerSender ? 'black' : 'white',\r\n                                fontSize: 16,\r\n                                flexShrink: 1,\r\n                                textDecorationLine: 'underline',\r\n                                flexWrap: 'wrap',\r\n                            }}\r\n                        >\r\n                            {segmentWithBreaks}\r\n                        </Text>\r\n                    </Pressable>\r\n                );\r\n            } else {\r\n                return (\r\n                    <Text\r\n                        selectable\r\n                        key={index}\r\n                        style={{\r\n                            fontWeight: '400',\r\n                            color: isGlobalCustomerSender ? 'black' : 'white',\r\n                            fontSize: 16,\r\n                            flexShrink: 1,\r\n                            flexWrap: 'wrap',\r\n                        }}\r\n                    >\r\n                        {segmentWithBreaks}\r\n                    </Text>\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n    const getFileIcon = (fileName) => {\r\n        const iconSize = 24;\r\n        const lowerFileName = fileName.toLowerCase();\r\n\r\n        if (lowerFileName.endsWith('.pdf')) {\r\n            return <MaterialIcons name={'picture-as-pdf'} size={iconSize} color=\"white\" />;\r\n        }\r\n        // Add more conditions for other file types as needed\r\n        // Example for .docx files\r\n        if (lowerFileName.endsWith('.docx') || lowerFileName.endsWith('.doc')) {\r\n            return <MaterialCommunityIcons name={'microsoft-word'} size={iconSize} color=\"white\" />;\r\n        }\r\n        if (lowerFileName.endsWith('.xlsx') || lowerFileName.endsWith('.xls') || lowerFileName.endsWith('.csv')) {\r\n            return <MaterialCommunityIcons name={'microsoft-excel'} size={iconSize} color=\"white\" />;\r\n        }\r\n\r\n        if (lowerFileName.endsWith('.rar') || lowerFileName.endsWith('.zip')) {\r\n            return <FastImage\r\n                source={{ uri: require('../../assets/rar_icon.png'), priority: FastImage.priority.high }}\r\n                style={{\r\n                    width: iconSize,\r\n                    height: iconSize,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.cover}\r\n            />;\r\n        }\r\n        // Default icon if no specific type is matched\r\n        return <MaterialIcons name=\"insert-drive-file\" size={iconSize} color=\"black\" />;\r\n    };\r\n\r\n    const isUrlForText = (text) => {\r\n        const urlPattern = new RegExp('^(http://www\\\\.|https://www\\\\.|http://|https://)[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(/.*)?$');\r\n        return urlPattern.test(text);\r\n    }\r\n\r\n    const renderItem = ({ item, index }) => {\r\n        const isGlobalCustomerSender = item.sender === globalCustomerId;\r\n        const isLastMessage = index === 0; // Since the list is inverted, the first item is actually the last message\r\n        const isHovered = hoveredImageIndex === index;\r\n\r\n\r\n        return (\r\n            <View style={{\r\n                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                width: '100%',\r\n                alignSelf: isGlobalCustomerSender ? 'flex-start' : 'flex-end',\r\n                marginVertical: 4,\r\n                maxWidth: '60%', // Max width for long messages\r\n                // borderWidth: 1,\r\n                // borderColor: 'red',\r\n            }}>\r\n                {item.messageType == 'IssuedInvoice' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <Animated.View style={{\r\n                                padding: 7,\r\n                                flex: 1,\r\n                                borderRadius: 20,\r\n                                backgroundColor: isGlobalCustomerSender ? '#EFEFEF' : '#0A7CFF',\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                borderWidth: 3,\r\n                                borderColor: borderColor,\r\n                            }}>\r\n                                <Pressable onPress={handlePreviewInvoiceModalOpen}>\r\n                                    <Text underline selectable style={{\r\n                                        fontWeight: 400,\r\n                                        color: isGlobalCustomerSender ? 'black' : 'white',\r\n                                        fontSize: 16,\r\n                                    }}>\r\n                                        {item.text.trim()}\r\n                                    </Text>\r\n                                </Pressable>\r\n                            </Animated.View>\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp, sender email, IP, and country */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n                    </View>\r\n                }\r\n\r\n\r\n                {item.messageType == 'InputPayment' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <Animated.View style={{\r\n                                padding: 7,\r\n                                flex: 1,\r\n                                borderRadius: 20,\r\n                                backgroundColor: isGlobalCustomerSender ? '#EFEFEF' : '#0A7CFF',\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                borderWidth: 3,\r\n                                borderColor: borderColor,\r\n                            }}>\r\n                                <Text selectable style={{\r\n                                    fontWeight: 400,\r\n                                    color: isGlobalCustomerSender ? 'black' : 'white',\r\n                                    fontSize: 16,\r\n                                }}>\r\n                                    {item.text.trim()}\r\n                                </Text>\r\n                            </Animated.View>\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp, sender email, IP, and country */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n                    </View>\r\n                }\r\n\r\n\r\n                {!item.messageType && item.file && item.file.type == 'attachment' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        {item.text && item.text !== '' &&\r\n                            <View style={{\r\n                                marginBottom: 5,\r\n                                padding: 10,\r\n                                borderRadius: 20,\r\n                                backgroundColor: isGlobalCustomerSender ? '#EFEFEF' : '#0A7CFF',\r\n                                marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                flexShrink: 1,\r\n                            }}>\r\n                                {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                            </View>\r\n                        }\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    marginBottom: 5,\r\n                                    padding: 10,\r\n                                    borderRadius: 20,\r\n                                    backgroundColor: isGlobalCustomerSender ? '#EFEFEF' : '#0A7CFF',\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    <Pressable\r\n                                        onPress={() => {\r\n                                            if (item.file.name.endsWith('.pdf')) {\r\n                                                globalSelectedFileType = 'pdf'\r\n                                                dispatch(setPdfViewerModalVisible(true));\r\n                                                dispatch(setSelectedFileUrl(item.file.url));\r\n                                                globalSelectedPDFUrl = item.file.url;\r\n\r\n                                            }\r\n                                            else {\r\n                                                globalSelectedFileType = 'not-pdf'\r\n                                                dispatch(setPdfViewerModalVisible(true));\r\n                                                dispatch(setSelectedFileUrl(item.file.url));\r\n                                                globalSelectedPDFUrl = item.file.url;\r\n\r\n\r\n\r\n                                            }\r\n                                            // dispatch(setSelectedFileUrl(item.file.url));\r\n                                            // // globalSelectedPDFUrl = item.file.url\r\n                                            // dispatch(setPdfViewerModalVisible(true));\r\n\r\n                                        }}\r\n                                        style={{ flexDirection: 'row', }}\r\n                                    >\r\n                                        <View style={{ marginRight: 5, }}>\r\n                                            {getFileIcon(item.file.name)}\r\n                                        </View>\r\n\r\n                                        <Text underline selectable style={{\r\n                                            fontWeight: 400,\r\n                                            color: isGlobalCustomerSender ? 'black' : 'white',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                            {item.file.name.trim()}\r\n                                        </Text>\r\n                                    </Pressable>\r\n                                </View>\r\n                            </View>\r\n\r\n                            {/* Display read status text outside of the message bubble */}\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n                    </View>}\r\n\r\n\r\n                {!item.messageType && item.file && item.file.type == 'image' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        {item.text && item.text !== '' &&\r\n                            <View style={{\r\n                                marginBottom: 5,\r\n                                padding: 10,\r\n                                borderRadius: 20,\r\n                                backgroundColor: isGlobalCustomerSender ? '#EFEFEF' : '#0A7CFF',\r\n                                marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                flexShrink: 1,\r\n                            }}>\r\n                                {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                            </View>\r\n                        }\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    padding: 0,\r\n                                    borderRadius: 10,\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    <Pressable\r\n                                        onMouseEnter={() => handleImageMessageMouseEnter(index)}\r\n                                        onMouseLeave={handleImageMessageMouseLeave}\r\n                                        onPress={() => openPreview(index)}\r\n                                        style={{\r\n                                            position: 'relative', // Ensure relative positioning for the overlay\r\n                                            width: 250,\r\n                                            height: 250,\r\n                                            alignSelf: 'center',\r\n                                        }}\r\n                                    >\r\n                                        <FastImage\r\n                                            source={{ uri: item.file.url, priority: FastImage.priority.normal }}\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                height: '100%',\r\n                                                borderRadius: 10,\r\n                                                borderWidth: 1,\r\n                                                borderColor: '#DADDE1',\r\n                                            }}\r\n                                            resizeMode={FastImage.resizeMode.contain}\r\n                                        />\r\n                                        {isHovered && (\r\n                                            <View style={{\r\n                                                ...StyleSheet.absoluteFillObject, // Make overlay cover the entire image\r\n                                                backgroundColor: 'rgba(0, 0, 0, 0.1)', // Semi-transparent black\r\n                                                borderRadius: 10, // Match the border radius of the image\r\n                                            }} />\r\n                                        )}\r\n                                    </Pressable>\r\n                                </View>\r\n                            </View>\r\n\r\n                            {/* Display read status text outside of the message bubble */}\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n                    </View>}\r\n\r\n                {!item.messageType && !item.file &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    padding: 10,\r\n                                    borderRadius: 20,\r\n                                    backgroundColor: isGlobalCustomerSender ? '#EFEFEF' : '#0A7CFF',\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                                </View>\r\n                            </View>\r\n\r\n                            {/* Display read status text outside of the message bubble */}\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n                    </View>}\r\n\r\n            </View>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        chatMessagesData.length > 0 ? (\r\n            <>\r\n                <FlatList\r\n                    style={{ height: 100 }}\r\n                    ref={flatListRef}\r\n                    data={chatMessagesData}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id}\r\n                    initialNumToRender={10} // Adjust based on your average message size and performance\r\n                    maxToRenderPerBatch={10}\r\n                    windowSize={500}\r\n                    onEndReachedThreshold={0.05}\r\n                    ListFooterComponent={renderFooter}\r\n                    onEndReached={handleLoadMoreMessages}\r\n                    inverted\r\n                />\r\n                {selectedImageIndex !== null && (\r\n                    <ImagePreviewModal\r\n                        isVisible={isPreviewVisible}\r\n                        onClose={closePreview}\r\n                        imageUrl={chatMessagesData[selectedImageIndex].file.url}\r\n                    />\r\n                )}\r\n                <ReadByListModal userEmail={userEmail} handleReadByListModalClose={handleReadByListModalClose} />\r\n            </>\r\n        ) : null\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default function ChatMessages() {\r\n    const navigate = useNavigate();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const chatMessageBoxLoading = useSelector((state) => state.chatMessageBoxLoading);\r\n    const chatListSearchText = useSelector((state) => state.chatListSearchText);\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const loginName = useSelector((state) => state.loginName);\r\n\r\n    const [name, setName] = useState(loginName);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const [activeButton, setActiveButton] = useState('All messages');\r\n    const [activeButtonValue, setActiveButtonValue] = useState(0);\r\n\r\n    const [activeFilterButton, setActiveFilterButton] = useState('');\r\n    const [unreadButtonValue, setUnreadButtonValue] = useState(false);\r\n    const [readButtonValue, setReadButtonValue] = useState(false);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [unreadCount, setUnreadCount] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        // globalImageUrl = '';\r\n\r\n        const fetchIpAndCountry = async () => {\r\n            try {\r\n                // dispatch(setChatMessageBoxLoading(true));\r\n                // Fetch IP Address\r\n                const ipResponse = await axios.get('https://api.ipify.org?format=json');\r\n                const fetchedIp = ipResponse.data.ip;\r\n                ip = fetchedIp;\r\n\r\n                // Fetch IP Country\r\n                if (fetchedIp) {\r\n                    const countryResponse = await axios.get(`https://ipapi.co/${fetchedIp}/json/`);\r\n                    const fetchedIpCountry = countryResponse.data.country_name;\r\n                    ipCountry = fetchedIpCountry;\r\n                    // dispatch(setChatMessageBoxLoading(false));\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching IP data:', error);\r\n            }\r\n        };\r\n        const collectionRef = collection(projectExtensionFirestore, 'chats'); // Replace with your collection name\r\n        const unrepliedQuery = query(\r\n            collectionRef,\r\n            where('read', '==', false),\r\n            limit(10) // Limit the query to 10 documents\r\n        );\r\n\r\n        const unsubscribe = onSnapshot(unrepliedQuery, (querySnapshot) => {\r\n            setUnreadCount(querySnapshot.size); // Update state with the new count\r\n            fetchIpAndCountry();\r\n\r\n        }, (error) => {\r\n            console.error(\"Error fetching documents: \", error);\r\n        });\r\n\r\n\r\n\r\n        // Clean up function to unsubscribe from the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const handlePress = (buttonTitle, buttonTitleValue) => {\r\n        if (activeButton == buttonTitle) {\r\n        }\r\n        else {\r\n            setActiveButton(buttonTitle);\r\n            setActiveButtonValue(buttonTitleValue);\r\n            setActiveFilterButton('');\r\n            setUnreadButtonValue(false);\r\n\r\n            dispatch(setActiveChatId(''));\r\n\r\n            dispatch(setLoadMoreLoading(false));\r\n            dispatch(setNoMoreData(false));\r\n        }\r\n    };\r\n\r\n\r\n    const handleUnreadPress = (buttonTitle) => {\r\n\r\n        setActiveFilterButton(prevState => prevState === buttonTitle ? '' : buttonTitle);\r\n        setUnreadButtonValue(prevState => !prevState);\r\n        setReadButtonValue(false);\r\n    };\r\n\r\n    const handleReadPress = (buttonTitle) => {\r\n\r\n        setActiveFilterButton(prevState => prevState === buttonTitle ? '' : buttonTitle);\r\n        setReadButtonValue(prevState => !prevState);\r\n        setUnreadButtonValue(false);\r\n\r\n    };\r\n\r\n\r\n    //Main fetch\r\n    useEffect(() => {\r\n        let queryRef;\r\n\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setChatMessageBoxLoading(false));\r\n        dispatch(setActiveChatId(''));\r\n\r\n        // Helper function to build the query\r\n        const buildQuery = () => {\r\n            const searchValue = chatListSearchText.toUpperCase();\r\n\r\n            if (unreadButtonValue) {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('read', '==', false), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n            else if (readButtonValue) {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('read', '==', true), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n            else {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n        };\r\n\r\n        // Build and execute the query\r\n        queryRef = buildQuery();\r\n\r\n        const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n            const chatsData = [];\r\n            snapshot.forEach((doc) => {\r\n                chatsData.push({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                });\r\n            });\r\n\r\n            dispatch(setChatListData(chatsData));\r\n            globalLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n            dispatch(setNoMoreData(false));\r\n            dispatch(setLoadMoreLoading(false));\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }, (error) => {\r\n            console.error('Error fetching data from Firebase:', error);\r\n        });\r\n\r\n        // Cleanup function\r\n        return () => {\r\n            if (unsubscribe) {\r\n                unsubscribe();\r\n            }\r\n        };\r\n    }, [unreadButtonValue, readButtonValue, activeButtonValue, chatListSearchText]);\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                navigate(\"/Login\")\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(projectControlAuth)\r\n                    .then(() => {\r\n                        navigate(\"/Login\")\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(projectControlAuth)\r\n                .then(() => {\r\n                    navigate(\"/Login\")\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = projectControlAuth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const listenForNameChange = (documentId) => {\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            onSnapshot(accountDocRef, (docSnapshot) => {\r\n                if (docSnapshot.exists()) {\r\n                    const data = docSnapshot.data();\r\n                    const fieldType = data.type;\r\n                    const fieldName = data.name;\r\n                    dispatch(setLoginName(fieldName));\r\n\r\n                } else {\r\n                    // Handle the case where the document does not exist\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSignOut = () => {\r\n        // Check if currentUser exists before signing out\r\n        if (projectControlAuth.currentUser) {\r\n            signOut(projectControlAuth).then(() => {\r\n                navigate(\"/Login\")\r\n                setEmail('');\r\n                setName('');\r\n            }).catch(() => {\r\n                // Handle any sign out errors here\r\n            });\r\n        } else {\r\n            // Handle the case where there is no user currently signed in\r\n            console.log('No user signed in to sign out');\r\n            // Optionally navigate to the login screen or show a message\r\n            navigate(\"/Login\")\r\n        }\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   const handleScreenResize = () => {\r\n    //     const screenWidth = Dimensions.get('window').width;\r\n    //     setIsMobileView(screenWidth < 1200);\r\n    //   };\r\n\r\n    //   // Initial check on component mount\r\n    //   handleScreenResize();\r\n\r\n    //   // Listen for screen dimension changes\r\n    //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n    //   // Cleanup event listener on component unmount\r\n    //   return () => {\r\n    //     Dimensions.removeEventListener('change', handleScreenResize);\r\n    //   };\r\n    // }, []);\r\n\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <NativeBaseProvider>\r\n                <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                    {/* Header */}\r\n                    <Box\r\n                        px=\"3\"\r\n                        bgColor='#7b9cff'\r\n                        height={54}\r\n                        position=\"sticky\"\r\n                        top={0}\r\n                        zIndex={999}\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                        borderBottomWidth={2}\r\n                        borderBottomColor={'cyan.500'}\r\n                    >\r\n\r\n                        <SideDrawer\r\n                            selectedScreen={selectedScreen} />\r\n\r\n                        <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n\r\n                            <FastImage\r\n                                source={{\r\n                                    uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                    priority: FastImage.priority.high,\r\n                                }}\r\n                                resizeMode={FastImage.resizeMode.stretch}\r\n                                style={styles.image} />\r\n                        </Box>\r\n\r\n                        {/* {screenWidth <= 960 && <MobileViewDrawer\r\n                            selectedScreen={selectedScreen} />} */}\r\n\r\n\r\n                        <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                            <FastImage\r\n                                source={{\r\n                                    uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                    priority: FastImage.priority.high,\r\n                                }}\r\n                                resizeMode={FastImage.resizeMode.stretch}\r\n                                style={styles.image} />\r\n                        </Box>\r\n                        <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n\r\n                    </Box>\r\n\r\n                    {/* Content */}\r\n                    <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\r\n                        {/* Sidebar */}\r\n                        {/* <SideDrawer\r\n                            selectedScreen={selectedScreen} /> */}\r\n\r\n                        {/* Main Content */}\r\n                        {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n                        {/* Main Content Content */}\r\n\r\n\r\n                        {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n                        <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\r\n                            <View style={{ flex: 1, margin: 10, }}>\r\n\r\n                                <View style={{\r\n                                    borderBottomWidth: 1,\r\n                                    borderColor: '#DADDE1',\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    height: 60,\r\n                                    borderTopLeftRadius: 5,\r\n                                    borderTopRightRadius: 5,\r\n                                }}>\r\n                                    {/* Chat Header */}\r\n                                    <View style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'row',\r\n                                    }}>\r\n                                        <View style={{\r\n                                            flex: 1,\r\n                                            flexDirection: 'row',\r\n                                        }}>\r\n                                            <ScrollView scrollEnabled horizontal>\r\n\r\n\r\n                                                <HeaderButton\r\n                                                    key={'All messages'}\r\n                                                    title={'All messages'}\r\n                                                    onPress={() => handlePress('All messages', 0)}\r\n                                                    isActive={activeButton === 'All messages'}\r\n                                                    headerCount={\r\n                                                        unreadCount > 0 ?\r\n                                                            (<View style={{\r\n                                                                backgroundColor: '#FF0000',\r\n                                                                borderRadius: 100, // Half of width and height\r\n                                                                width: 20,\r\n                                                                height: 20, // Same as width for a perfect circle\r\n                                                                marginLeft: 10,\r\n                                                                justifyContent: 'center', // Center children vertically\r\n                                                                alignItems: 'center', // Center children horizontally\r\n                                                            }}>\r\n                                                                <Text style={{\r\n                                                                    color: 'white',\r\n                                                                    fontWeight: 700,\r\n                                                                    fontSize: 14,\r\n                                                                }}>{unreadCount > 9 ? `9+` : unreadCount}</Text>\r\n                                                            </View>) : (<></>)}\r\n                                                />\r\n\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Negotiation'}\r\n                                                    title={'Negotiation'}\r\n                                                    onPress={() => handlePress('Negotiation', 1)}\r\n                                                    isActive={activeButton === 'Negotiation'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Issued Proforma Invoice'}\r\n                                                    title={'Issued Proforma Invoice'}\r\n                                                    onPress={() => handlePress('Issued Proforma Invoice', 2)}\r\n                                                    isActive={activeButton === 'Issued Proforma Invoice'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Order Item'}\r\n                                                    title={'Order Item'}\r\n                                                    onPress={() => handlePress('Order Item', 3)}\r\n                                                    isActive={activeButton === 'Order Item'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Payment Confirmed'}\r\n                                                    title={'Payment Confirmed'}\r\n                                                    onPress={() => handlePress('Payment Confirmed', 4)}\r\n                                                    isActive={activeButton === 'Payment Confirmed'}\r\n                                                />\r\n\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Shipping Schedule'}\r\n                                                    title={'Shipping Schedule'}\r\n                                                    onPress={() => handlePress('Shipping Schedule', 5)}\r\n                                                    isActive={activeButton === 'Shipping Schedule'}\r\n                                                />\r\n\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Documents'}\r\n                                                    title={'Documents'}\r\n                                                    onPress={() => handlePress('Documents', 6)}\r\n                                                    isActive={activeButton === 'Documents'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Vehicle Received'}\r\n                                                    title={'Vehicle Received'}\r\n                                                    onPress={() => handlePress('Vehicle Received', 7)}\r\n                                                    isActive={activeButton === 'Vehicle Received'}\r\n                                                />\r\n                                            </ScrollView>\r\n                                        </View>\r\n\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                    {/* Chat Body */}\r\n\r\n                                    <View>\r\n\r\n                                        <View style={{ flex: 1, maxWidth: 380, minWidth: 380, borderRightWidth: 1, borderColor: '#DADDE1', maxHeight: 100, minHeight: 100, backgroundColor: 'white', }}>\r\n                                            {/* Chat Search */}\r\n                                            <View style={{ flex: 1, paddingHorizontal: 10 }}>\r\n                                                <SearchChat lastVisible={lastVisible} setLastVisible={setLastVisible} unreadButtonValue={unreadButtonValue} activeButtonValue={activeButtonValue} />\r\n                                                {/* <Pressable\r\n                                                variant=\"ghost\"\r\n                                                style={{\r\n                                                    padding: 3,\r\n                                                    width: 100,\r\n                                                    flexDirection: 'row', // Align items in a row\r\n                                                    alignItems: 'center', // Center items vertically\r\n                                                    borderRadius: 5,\r\n                                                }}\r\n                                                backgroundColor='#ECEDF0'\r\n                                                _hover={{ backgroundColor: '#d7d7d9' }}\r\n                                            >\r\n                                                <MaterialIcons name=\"mark-email-unread\" color=\"#1C2B33\" size={20} />\r\n                                                <Text style={{ color: '#1C2B33', marginLeft: 5 }}>Unreplied</Text>\r\n                                            </Pressable> */}\r\n                                                <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                                    <FilterButton\r\n                                                        key={'Unread'}\r\n                                                        title={'Unread '}\r\n                                                        onPress={() => handleUnreadPress('Unread')}\r\n                                                        isActive={activeFilterButton === 'Unread'}\r\n                                                        iconActive={<MaterialIcons name=\"mark-email-unread\" color=\"#0A78BE\" size={16} />}\r\n                                                        iconNotActive={<MaterialIcons name=\"mark-email-unread\" color=\"#1C2B33\" size={16} />}\r\n                                                    />\r\n\r\n                                                    <FilterButton\r\n                                                        key={'Read'}\r\n                                                        title={'Read '}\r\n                                                        onPress={() => handleReadPress('Read')}\r\n                                                        isActive={activeFilterButton === 'Read'}\r\n                                                        iconActive={<MaterialIcons name=\"mark-email-read\" color=\"#0A78BE\" size={16} />}\r\n                                                        iconNotActive={<MaterialIcons name=\"mark-email-read\" color=\"#1C2B33\" size={16} />}\r\n                                                    />\r\n\r\n                                                </View>\r\n\r\n                                            </View>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, maxWidth: 380, minWidth: 380, borderRightWidth: 1, borderColor: '#DADDE1', backgroundColor: 'white', borderBottomLeftRadius: 5, }}>\r\n                                            {/* Chat List */}\r\n                                            <ChatList unreadButtonValue={unreadButtonValue} activeButtonValue={activeButtonValue} />\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    {chatMessageBoxLoading ? (\r\n                                        <View style={{ flex: 1, backgroundColor: 'white', justifyContent: 'center', alignItems: 'center', }}>\r\n                                            <Spinner\r\n                                                animating\r\n                                                size=\"lg\"\r\n                                                color={'#7B9CFF'}\r\n                                            />\r\n                                        </View>) : (\r\n                                        <View style={{ flex: 1, }}>\r\n\r\n                                            <View style={{ flex: 1, minHeight: 90, maxHeight: screenWidth < 1281 ? 130 : 125, borderBottomWidth: 1, borderColor: '#DADDE1', backgroundColor: 'white', justifyContent: 'center', }}>\r\n                                                {/* Chat Message Header */}\r\n                                                <ScrollView scrollEnabled horizontal>\r\n                                                    {chatMessagesData.length < 1 ? null : (<ChatMessageHeader />)}\r\n                                                </ScrollView>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, borderColor: '#DADDE1', backgroundColor: 'white', borderBottomRightRadius: 5, paddingBottom: 5, }}>\r\n\r\n                                                <View style={{ flex: 1 }}>\r\n                                                    {/* Chat Message Box */}\r\n                                                    <ChatMessageBox activeButtonValue={activeButtonValue} userEmail={email} />\r\n                                                    <DocumentPreviewModal />\r\n                                                </View>\r\n\r\n                                                <View style={{ maxHeight: 180, justifyContent: 'flex-end', alignItems: 'center' }}>\r\n                                                    {/* Chat Input Text */}\r\n                                                    {chatMessagesData.length < 1 ? null : (<ChatInputText />)}\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                    )}\r\n\r\n\r\n\r\n\r\n                                </View>\r\n\r\n\r\n                            </View>\r\n                            {/* <SuccessModal /> */}\r\n\r\n                        </View>\r\n\r\n\r\n                        {/* </Box> */}\r\n\r\n                        {/* </Box> */}\r\n                    </View>\r\n\r\n                </View>\r\n                <LoadingModal />\r\n            </NativeBaseProvider>\r\n\r\n\r\n        </>\r\n    );\r\n}","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Flex,\r\n    HStack,\r\n    Icon,\r\n    Image as NativeImage,\r\n    Input,\r\n    Modal,\r\n    NativeBaseProvider,\r\n    Popover,\r\n    Pressable,\r\n    Spinner,\r\n    Stack,\r\n    Text,\r\n    VStack,\r\n    useBreakpointValue,\r\n    TextArea,\r\n    InputRightAddon,\r\n    InputGroup,\r\n    InputLeftAddon,\r\n    Select,\r\n    CheckIcon,\r\n    PresenceTransition,\r\n    CloseIcon,\r\n    ScrollView as ScrollViewNative,\r\n    Divider,\r\n    useDisclosure,\r\n    useDisclose,\r\n    FormControl,\r\n    Checkbox,\r\n    useToast\r\n} from 'native-base';\r\nimport { DataTable } from 'react-native-paper';\r\n\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n    Dimensions,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    StyleSheet,\r\n    View,\r\n    PanResponder,\r\n    Animated,\r\n    InputAccessoryView,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    TextInput,\r\n    Image as RNImage\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo,\r\n    FontAwesome5,\r\n    EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { debounce } from 'lodash';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, deleteField } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n    setVehicleListData,\r\n    setSupplyChainsCostsData,\r\n    setSelectedPaidTo,\r\n    setSelectedExpenseName,\r\n    setSupplyChainsCostsModalVisible,\r\n    setVehicleListSupplyChainsCostsData,\r\n    setDeleteImageVisible,\r\n    setSelectedImages,\r\n    setAddAnotherImages,\r\n    setIsAddPhotoVisible,\r\n    setUploadImagesModalVisible,\r\n    setUploadImagesButtonLoading,\r\n    setViewImagesModalVisible,\r\n    setViewImagesData,\r\n    setLoadingModalVisible,\r\n    setAddVehicleListData,\r\n    setEditVehicleModalVisible,\r\n    setFobPriceHistoryModalVisible,\r\n    setSelectedButton,\r\n    setAddCountryModalVisible,\r\n    setAddPortModalVisible,\r\n    setDeletePortModalVisible,\r\n    setAddPortsForCountriesModalVisible,\r\n    setCountryPortsData,\r\n    setDeleteCountryModalVisible,\r\n    setLoginName\r\n} from './redux/store';\r\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep, merge } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'FREIGHT'\r\n\r\nlet nameVariable = {\r\n    text: ''\r\n}\r\n\r\nlet defaultSelectedButton = 'countries';\r\n\r\nlet selectedPort = '';\r\nlet selectedCountry = '';\r\nlet selectedPortForCountry = '';\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = projectControlAuth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\nconst SearchablePortDropdown = ({ modalAddOpen }) => {\r\n    // const [selectedItem, setSelectedItem] = useState(null);\r\n    const [query, setQuery] = useState('');\r\n    const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n    const [data, setData] = useState([]); // Initialize data state with an empty array\r\n    const searchRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Your data fetching logic here\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map((key) => ({\r\n                        ports: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n            } else {\r\n                console.log('No such document!');\r\n            }\r\n        }, (error) => {\r\n            console.error('Error fetching countries: ', error);\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const filteredData = data.filter((item) =>\r\n        item.ports.toLowerCase().includes(query.toLowerCase().trim()) ||\r\n        item.country.toLowerCase().includes(query.toLowerCase().trim())\r\n    );\r\n\r\n    const renderItem = ({ item }) => (\r\n        <TouchableOpacity\r\n            style={{\r\n                padding: 10,\r\n                borderBottomWidth: 1,\r\n                borderBottomColor: '#ccc',\r\n                width: '100%',\r\n                backgroundColor: '#85929F',\r\n            }}\r\n            onPress={() => {\r\n                // setSelectedItem(item);\r\n                selectedPortForCountry = item;\r\n                setQuery('');\r\n                setIsDropdownVisible(false);\r\n\r\n            }}\r\n        >\r\n            <Text style={{ color: 'white', }}>{item.ports}</Text>\r\n        </TouchableOpacity>\r\n    );\r\n\r\n    useEffect(() => {\r\n\r\n        searchRef.current.focus();\r\n\r\n    }, [isDropdownVisible])\r\n\r\n    useEffect(() => {\r\n\r\n        searchRef.current.focus();\r\n        setIsDropdownVisible(false);\r\n        selectedPortForCountry = '';\r\n\r\n    }, [modalAddOpen])\r\n\r\n    return (\r\n        <View style={{ flex: 1, width: '100%' }}>\r\n            <Button\r\n                title=\"Show Dropdown\"\r\n                onPress={() => {\r\n                    setIsDropdownVisible(!isDropdownVisible)\r\n\r\n                }}\r\n                bgColor={'#102A43'}\r\n                style={{ borderWidth: 1 }}\r\n                flex={1}\r\n            >\r\n                <View style={{\r\n                    flex: 1,\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between', // This will position the children at opposite ends\r\n                }}>\r\n                    <Text style={{ color: 'white', flex: 1, alignSelf: 'flex-start' }}>{selectedPortForCountry ? selectedPortForCountry.ports : 'Select Port'}</Text>\r\n                    <MaterialIcons style={{ alignSelf: 'flex-end' }} name={isDropdownVisible ? 'keyboard-arrow-up' : 'keyboard-arrow-down'} color='white' size={22} />\r\n                </View>\r\n            </Button>\r\n            <View style={{ display: isDropdownVisible ? 'flex' : 'none' }}>\r\n                <TextInput\r\n                    ref={searchRef}\r\n                    style={{\r\n                        outlineStyle: 'none',\r\n                        padding: 10,\r\n                        borderWidth: 1,\r\n                        borderColor: '#102A43',\r\n                        flex: 1,\r\n                    }}\r\n                    placeholder=\"Search...\"\r\n                    value={query}\r\n                    onChangeText={(text) => setQuery(text)}\r\n                />\r\n                <FlatList\r\n                    style={{ height: 150, width: '100%', borderWidth: 1, borderColor: '#102A43', borderRadius: 5, }}\r\n                    data={filteredData}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={(item) => item.ports.toString()}\r\n                />\r\n            </View>\r\n\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n//     const dispatch = useDispatch();\r\n//     const toast = useToast();\r\n//     const [inspectionData, setInspectionData] = useState(['Required', 'Not-Required', 'Optional']);\r\n//     const [key, setKey] = useState(nanoid());\r\n\r\n//     const [selectedStockStatusValue, setSelectedStockStatusValue] = useState(selectedValue);\r\n//     const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n//     const handleSaveStockStatus = async () => {\r\n\r\n//         dispatch(setLoadingModalVisible(true));\r\n\r\n//        const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n//         const { datetime } = response.data;\r\n//         const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n//         const year = moment(datetime).format('YYYY');\r\n//         const month = moment(datetime).format('MM');\r\n//         const monthWithDay = moment(datetime).format('MM/DD');\r\n//         const date = moment(datetime).format('YYYY/MM/DD');\r\n//         const day = moment(datetime).format('DD');\r\n//         const time = moment(datetime).format('HH:mm');\r\n\r\n//         const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n//         if (item.stockStatus == selectedStockStatusValue || selectedStockStatusValue == '' || selectedStockStatusValue == '__NativeBasePlaceHolder__') {\r\n//             dispatch(setLoadingModalVisible(false));\r\n//         }\r\n\r\n//         else {\r\n\r\n//             const stockStatusHistoryData = {\r\n//                 date: formattedTime,\r\n//                 stockStatus: selectedStockStatusValue,\r\n//                 changedBy: nameVariable.text,\r\n//             };\r\n//             const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n//             try {\r\n//                 await updateDoc(vehicleProductRef, {\r\n//                     stockStatus: selectedStockStatusValue,\r\n//                     stockStatusHistory: arrayUnion(stockStatusHistoryData)\r\n//                 });\r\n//                 const logData = {\r\n//                     message: `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to \"${selectedStockStatusValue}\" with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n//                     timestamp: formattedTime,\r\n//                     colorScheme: true,\r\n//                     keywords: [\r\n//                         formattedTime.toLowerCase(),\r\n//                         globalCurrentStockID.toLowerCase(),\r\n//                         `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to ${selectedStockStatusValue} with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n//                         'Stock Status'.toLowerCase(),\r\n//                         'Stock Status Updated'.toLowerCase(),\r\n//                         'Stock'.toLowerCase(),\r\n//                         'Status Updated'.toLowerCase(),\r\n//                         'Updated'.toLowerCase(),\r\n//                         globalSelectedCarName.toLowerCase(),\r\n//                         globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n//                         nameVariable.text.toLowerCase(),\r\n//                         year.toLowerCase(),\r\n//                         month.toLowerCase(),\r\n//                         monthWithDay.toLowerCase(),\r\n//                         date.toLowerCase(),\r\n//                         day.toLowerCase(),\r\n//                         time.toLowerCase(),\r\n//                         timeWithMinutesSeconds.toLowerCase(),\r\n//                     ],\r\n//                 };\r\n//                 addLogToCollection(logData);\r\n//                 dispatch(setLoadingModalVisible(false));\r\n\r\n//                 // console.log('FOB Price updated successfully');\r\n//                 toast.show({\r\n//                     render: () => {\r\n//                         return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n//                             <Text style={{ color: 'white' }}>Stock Status updated successfully!</Text>\r\n//                         </View>;\r\n//                     }\r\n//                 })\r\n//             } catch (error) {\r\n//                 console.error(error);\r\n//                 toast.show({\r\n//                     render: () => {\r\n//                         return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n//                             <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n//                         </View>;\r\n//                     }\r\n//                 })\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <View style={{ flex: 1, flexDirection: 'row' }}>\r\n//             <View style={{ width: screenWidth >= 1360 ? '70%' : '88%', backgroundColor: 'white', }}>\r\n//                 <Select\r\n//                     selectedValue={selectedStockStatusValue}\r\n//                     onValueChange={(value) => {\r\n//                         setSelectedStockStatusValue(value);\r\n//                     }}\r\n//                     flex={3}\r\n//                     accessibilityLabel=\"---\"\r\n//                     placeholder=\"---\"\r\n//                     _selectedItem={{\r\n//                         bg: \"teal.600\",\r\n//                         endIcon: <CheckIcon size=\"5\" />\r\n//                     }}\r\n//                 >\r\n//                     {stockStatusData.map((item) => (\r\n//                         <Select.Item key={item} label={item} value={item} />\r\n//                     ))}\r\n//                 </Select>\r\n//             </View>\r\n\r\n//             <TouchableHighlight\r\n//                 underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n//                 onPress={handleSaveStockStatus}\r\n//                 style={{\r\n//                     backgroundColor: '#16A34A',\r\n//                     borderRadius: 5,\r\n//                     padding: 3,\r\n//                     margin: 2,\r\n//                     alignSelf: 'center',\r\n//                 }}>\r\n//                 <MaterialIcons name='update' color='white' size={22} />\r\n//             </TouchableHighlight>\r\n//         </View>\r\n\r\n\r\n\r\n\r\n//     );\r\n// };\r\n\r\nconst addLogToCollection = async (data) => {\r\n    try {\r\n        const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n        // Add a new document to the \"logs\" collection\r\n        await addDoc(logsCollectionRef, data);\r\n\r\n        console.log('Document added successfully!');\r\n    } catch (error) {\r\n        console.error('Error adding document:', error);\r\n    }\r\n};\r\n\r\n\r\nconst SortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, collectionName, handleFirstModalClose, handleFirstModalOpen }) => {\r\n    const [modalSortOpen, setModalSortOpen] = useState(false);\r\n    const [modalAddOpen, setModalAddOpen] = useState(false);\r\n    const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n    const [modalSave, setModalSave] = useState(false);\r\n    const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n    const [modalData, setModalData] = useState(data);\r\n    const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n    const handleDeleteItemPress = useCallback(\r\n        (item) => {\r\n            setModalData((prevData) => {\r\n                const updatedData = prevData.filter((value) => value !== item);\r\n                return updatedData;\r\n            });\r\n        },\r\n        []\r\n    );\r\n\r\n    // useEffect(() => {\r\n\r\n    //   fetchData();\r\n\r\n    // }, [modalSortOpen]);\r\n\r\n\r\n\r\n    const fetchData = useCallback(async () => {\r\n        const modalDocRef = doc(collection(databaseInit, collectionName), docName);\r\n        const modalDocSnap = await getDoc(modalDocRef);\r\n        if (modalDocSnap.exists()) {\r\n            // setModalData(modalDocSnap.data()?.dataName || []);\r\n            setModalData(modalDocSnap.data()?.[dataName] || []);\r\n        }\r\n    }, [databaseInit, modalData]);\r\n\r\n    // useEffect(() => {\r\n    //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n    //     setModalData(snapshot.data()?.[dataName] || []);\r\n    //   });\r\n\r\n    //   return () => unsubscribe();\r\n    // }, [dataName, databaseInit, docName]);\r\n\r\n    const handleSave = useCallback(async () => {\r\n        setModalSaveLoading(true);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        try {\r\n            await updateDoc(doc(collection(databaseInit, collectionName), docName), { [dataName]: modalData });\r\n            setModalSaveLoading(false);\r\n            setModalSortOpen(true);\r\n            setModalSave(false);\r\n\r\n\r\n            const logData = {\r\n                message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n                    `${title} updated`.toLowerCase(),\r\n                    `\"${title}\" updated`.toLowerCase(),\r\n                    'updated'.toLowerCase(),\r\n                    title.toLowerCase(),\r\n                    nameVariable.text.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n            };\r\n\r\n            addLogToCollection(logData);\r\n\r\n        } catch (error) {\r\n            setModalSaveLoading(false);\r\n            handleModalSaveClose();\r\n            console.error(error);\r\n        }\r\n\r\n\r\n    }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n    const handleSortModalOpen = useCallback(() => {\r\n        setModalIsLoading(true);\r\n        fetchData();\r\n        setModalSortOpen(true);\r\n        // handleFirstModalClose();\r\n    }, [modalSortOpen, modalIsLoading]);\r\n\r\n    const handleSortModalClose = useCallback(async () => {\r\n        setModalSortOpen(false);\r\n        setModalIsLoading(false);\r\n        // handleFirstModalOpen();\r\n    }, [modalSortOpen, modalIsLoading]);\r\n\r\n    // const handleAddTextChange = () => {\r\n    //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n    //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n    // };\r\n\r\n\r\n    const handleModalAddOpen = useCallback(() => {\r\n        setModalAddOpen(true);\r\n        handleSortModalClose();\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, [])\r\n\r\n    const handleModalAddClose = useCallback(() => {\r\n        setModalAddOpen(false);\r\n        handleSortModalOpen();\r\n        textAreaAdd.current?.clear();\r\n    }, [modalAddOpen])\r\n\r\n    const handleModalAddSuccessClose = useCallback(() => {\r\n        setModalAddSuccess(false);\r\n        // setIsLoading(false);\r\n        handleSortModalOpen();\r\n    }, [modalAddSuccess])\r\n\r\n    const handleModalAddSuccessOpen = useCallback(() => {\r\n        setModalAddSuccess(true);\r\n        handleSortModalClose();\r\n        setModalAddOpen(false);\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n    const handleModalSaveOpen = useCallback(() => {\r\n        setModalSave(true);\r\n        setModalSortOpen(false);\r\n        setModalIsLoading(true);\r\n    }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n    const handleModalSaveClose = useCallback(() => {\r\n        setModalSave(false);\r\n        setModalSortOpen(true);\r\n    }, [modalSave, modalSortOpen]);\r\n\r\n    const handleAddSubmit = async () => {\r\n\r\n        const data = textAreaAdd.current?.value;\r\n        const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        if (data !== '') {\r\n\r\n            setModalSaveLoading(true);\r\n\r\n            try {\r\n                const modalCollectionRef = collection(databaseInit, collectionName);\r\n                const modalDocRef = doc(modalCollectionRef, docName);\r\n                await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n                const logData = {\r\n                    message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n                        `${title} added`.toLowerCase(),\r\n                        `\"${title}\" added`.toLowerCase(),\r\n                        'added'.toLowerCase(),\r\n                        title.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                        timeWithMinutesSeconds.toLowerCase(),\r\n                    ],\r\n                };\r\n                addLogToCollection(logData);\r\n                setModalSaveLoading(false);\r\n\r\n                handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n                console.log('Data added to Firestore');\r\n            } catch (error) {\r\n                console.error('Error adding data to Firestore:', error);\r\n                setModalSaveLoading(false);\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Box justifyContent=\"center\" alignItems={'flex-start'} marginRight={1}>\r\n\r\n                {!modalIsLoading ? (\r\n                    <TouchableOpacity onPress={handleSortModalOpen} >\r\n                        <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n                    </TouchableOpacity>\r\n                ) : (\r\n                    <Spinner color=\"white\" size={20} />\r\n                )}\r\n\r\n\r\n            </Box>\r\n\r\n            <Modal\r\n                isOpen={modalSortOpen}\r\n                onClose={handleSortModalClose}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>{headerText}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                        <Box w={'full'} flexDir={'column'}>\r\n                            <Box alignItems={'flex-end'}>\r\n                                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n                            </Box>\r\n\r\n                            <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                                <DraggableFlatList\r\n                                    style={{ alignContent: 'center', flex: 1, }}\r\n                                    data={modalData}\r\n                                    keyExtractor={(item) => item}\r\n                                    renderItem={({ item, drag }) => (\r\n\r\n                                        <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                                            <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n\r\n                                            <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                                            <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                                        </Box>\r\n\r\n                                    )}\r\n                                    onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n                            </Box>\r\n\r\n                        </Box>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalSave}\r\n                onClose={handleModalSaveClose}>\r\n                <Modal.Content >\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Save Order?</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n                        <Text>Are you sure you want to save changes?</Text>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} >\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n                            <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalAddOpen}\r\n                onClose={handleModalAddClose}\r\n                initialFocusRef={textAreaAdd}>\r\n                <Modal.Content >\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Add {title}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n                        <TextArea\r\n                            textAlign={'center'}\r\n                            w={'full'}\r\n                            ref={textAreaAdd}\r\n                            multiline\r\n                            onChangeText={handleAddTextChange}\r\n                            totalLines={4}\r\n                            placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} >\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n            {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n            <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n                <Modal.Content bgColor={'green.100'}>\r\n                    <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n                        <Text textAlign={'center'} color={'#102A43'} bold>\r\n                            😊😎 Success! 😎😊\r\n                        </Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body\r\n                        justifyContent={'center'}\r\n                        alignItems={'center'}\r\n                        bgColor={'green.200'}\r\n                        borderLeftWidth={4}\r\n                        borderLeftColor={'green.600'}\r\n                        margin={5}\r\n                    >\r\n                        <Box flex={1}>\r\n                            <Text color={'green.600'} bold>\r\n                                Added successfully!\r\n                            </Text>\r\n                            <Text color={'green.600'}>\r\n                                Added successfully!\r\n                            </Text>\r\n                        </Box>\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                                Ok\r\n                            </Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\n\r\nconst FreightNavigation = () => {\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const dispatch = useDispatch();\r\n    const [selectedButtonState, setSelectedButtonState] = useState(defaultSelectedButton);\r\n\r\n\r\n    const handlePress = (button) => {\r\n        if (button !== selectedButtonState) {\r\n            dispatch(setLoadingModalVisible(true));\r\n        }\r\n        dispatch(setSelectedButton(button));\r\n        setSelectedButtonState(button);\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center', width: screenWidth >= 960 ? '50%' : '90%' }}>\r\n\r\n            <TouchableOpacity\r\n                onPress={() => handlePress('countries')}\r\n                style={{\r\n                    borderRadius: 5,\r\n                    flex: 1,\r\n                    padding: 10,\r\n                    margin: 10,\r\n                    borderWidth: 1,\r\n                    borderColor: 'white',\r\n                    backgroundColor: selectedButtonState === 'countries' ? '#0642F4' : 'transparent',\r\n                    flexDirection: 'row',\r\n                }}\r\n            >\r\n                <MaterialIcons\r\n                    name=\"flag\" // The icon name from MaterialIcons\r\n                    size={20} // Set the size of the icon\r\n                    color={selectedButtonState === 'countries' ? 'white' : 'black'} // Set the color based on active state\r\n                />\r\n                <Text style={{ color: selectedButtonState === 'countries' ? 'white' : 'black', fontWeight: 'bold', marginLeft: 5, }}>Countries</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n                onPress={() => handlePress('ports')}\r\n                style={{\r\n                    borderRadius: 5,\r\n                    flex: 1,\r\n                    padding: 10,\r\n                    margin: 10,\r\n                    borderWidth: 1,\r\n                    borderColor: 'white',\r\n                    backgroundColor: selectedButtonState === 'ports' ? '#0642F4' : 'transparent',\r\n                    flexDirection: 'row',\r\n                }}\r\n            >\r\n                <MaterialIcons\r\n                    name=\"directions-boat\" // The icon name from MaterialIcons\r\n                    size={20} // Set the size of the icon\r\n                    color={selectedButtonState === 'ports' ? 'white' : 'black'} // Set the color based on active state\r\n                />\r\n                <Text style={{ color: selectedButtonState === 'ports' ? 'white' : 'black', fontWeight: 'bold', marginLeft: 5, }}>Ports</Text>\r\n            </TouchableOpacity>\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectMethod = ({ defaultValue, portCode, page, searchQuery }) => {\r\n    const [selectedMethod, setSelectedMethod] = useState('');\r\n    const methodData = useSelector((state) => state.methodData);\r\n\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updatePortMethod = async (portCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        if (newValue !== '' && newValue !== '__NativeBasePlaceHolder__') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = portCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const methodField = `${formattedCountryCode}.method`;\r\n\r\n            try {\r\n                if (currentValue == selectedMethod) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [methodField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Method Updated: \"${nameVariable.text}\" updated \"${portCode}\" method to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Method Updated: \"${nameVariable.text}\" updated \"${portCode}\" inspection to \"${newValue}\"`.toLowerCase(),\r\n                            'Method'.toLowerCase(),\r\n                            'Method Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            portCode.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Method updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Method updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating method:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedPortCode = portCode.replace(/\\./g, '_');\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const portData = documentSnapshot.data()[formattedPortCode];\r\n                // Make sure to check if portData exists before trying to access its properties\r\n                if (portData && portData.method) {\r\n                    const method = portData.method;\r\n                    setSelectedMethod(method);\r\n                    currentValue = method;\r\n                }\r\n                else {\r\n                    setSelectedMethod('__NativeBasePlaceHolder__');\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: '100%', }}>\r\n\r\n\r\n            <Select\r\n                selectedValue={selectedMethod}\r\n                onValueChange={(value) => {\r\n                    setSelectedMethod(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {methodData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updatePortMethod(portCode, selectedMethod)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectInspectionIsRequired = ({ width, defaultValue, countryCode, page, searchQuery }) => {\r\n    const [selectedInspectionIsRequired, setSelectedInspectionIsRequired] = useState('');\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updateCountryInspection = async (countryCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const inspectionIsRequiredField = `${formattedCountryCode}.inspectionIsRequired`;\r\n\r\n            try {\r\n                if (currentValue == selectedInspectionIsRequired) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [inspectionIsRequiredField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Inspection Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Inspection Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection to \"${newValue}\"`.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Inspection Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Inspection updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Inspection updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.inspectionIsRequired) {\r\n                    const inspectionIsRequired = countryData.inspectionIsRequired;\r\n                    setSelectedInspectionIsRequired(inspectionIsRequired);\r\n                    currentValue = inspectionIsRequired;\r\n\r\n\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: width, }}>\r\n\r\n\r\n            <Select\r\n                selectedValue={selectedInspectionIsRequired}\r\n                onValueChange={(value) => {\r\n                    setSelectedInspectionIsRequired(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {inspectionIsRequiredData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updateCountryInspection(countryCode, selectedInspectionIsRequired)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectInspectionName = ({ width, defaultValue, countryCode, page, searchQuery }) => {\r\n    const [selectedInspectionName, setSelectedInspectionName] = useState('');\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updateCountryInspectionName = async (countryCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const inspectionNameField = `${formattedCountryCode}.inspectionName`;\r\n\r\n            try {\r\n                if (currentValue == selectedInspectionName) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [inspectionNameField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Inspection Name Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection name to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Inspection Name Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection name to \"${newValue}\"`.toLowerCase(),\r\n                            'Inspection Name'.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Inspection Name Updated'.toLowerCase(),\r\n                            'Name'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Inspection Name updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Inspection Name updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.inspectionName) {\r\n                    const inspectionName = countryData.inspectionName;\r\n                    setSelectedInspectionName(inspectionName);\r\n                    currentValue = inspectionName;\r\n\r\n                }\r\n                else {\r\n                    setSelectedInspectionName('__NativeBasePlaceHolder__');\r\n                    currentValue = '__NativeBasePlaceHolder__';\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: width, }}>\r\n            <Select\r\n                selectedValue={selectedInspectionName}\r\n                onValueChange={(value) => {\r\n                    setSelectedInspectionName(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {inspectionNameData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updateCountryInspectionName(countryCode, selectedInspectionName)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\nconst countriesList = [\r\n    \"Zambia\",\r\n    \"D.R.Congo\",\r\n    \"Mozambique\",\r\n    \"Zimbabwe\",\r\n    \"Uganda\",\r\n    \"Tanzania\",\r\n    \"Malawi\",\r\n    \"Burundi\",\r\n    \"Lesotho\",\r\n    \"South Sudan\",\r\n    \"Botswana\",\r\n    \"Kenya\",\r\n    \"Republic of South Africa\",\r\n    \"Djibouti\",\r\n    \"Ethiopia\",\r\n    \"Angola\",\r\n    \"Benin\",\r\n    \"Cameroon\",\r\n    \"Gabon\",\r\n    \"Ghana\",\r\n    \"Guinea\",\r\n    \"Madagascar\",\r\n    \"Mali\",\r\n    \"Namibia\",\r\n    \"Nigeria\",\r\n    \"Rwanda\",\r\n    \"Sierra Leone\",\r\n    \"Sudan\",\r\n    \"Algeria\",\r\n    \"Canary Islands\",\r\n    \"Cape Verde\",\r\n    \"Central African Republic\",\r\n    \"Chad\",\r\n    \"Equatorial Guinea\",\r\n    \"Eritrea\",\r\n    \"Gambia\",\r\n    \"Liberia\",\r\n    \"Mahe\",\r\n    \"Maldives\",\r\n    \"Mauritania\",\r\n    \"Mayotte\",\r\n    \"Morocco\",\r\n    \"Niger\",\r\n    \"Republic of Guinea-Bissau\",\r\n    \"Republic of the Congo\",\r\n    \"Reunion\",\r\n    \"Saint Helena\",\r\n    \"Sao Tome and Principe\",\r\n    \"Seychelles\",\r\n    \"Swaziland\",\r\n    \"Tunisia\",\r\n    \"Afghanistan\",\r\n    \"Albania\",\r\n    \"American Samoa\",\r\n    \"Anguilla\",\r\n    \"Antigua and Barbuda\",\r\n    \"Argentina\",\r\n    \"Armenia\",\r\n    \"Aruba\",\r\n    \"Australia\",\r\n    \"Austria\",\r\n    \"Azerbaijan\",\r\n    \"Bahamas\",\r\n    \"Bahrain\",\r\n    \"Bangladesh\",\r\n    \"Barbados\",\r\n    \"Belgium\",\r\n    \"Belize\",\r\n    \"Bermuda\",\r\n    \"Bhutan\",\r\n    \"Bolivia\",\r\n    \"Bonaire/Netherlands Antilles\",\r\n    \"Brazil\",\r\n    \"British Virgin Islands\",\r\n    \"Brunei Darussalam\",\r\n    \"Bulgaria\",\r\n    \"Burkina Faso\",\r\n    \"Cambodia\",\r\n    \"Canada\",\r\n    \"Cayman Islands\",\r\n    \"Chile\",\r\n    \"Colombia\",\r\n    \"Commonwealth of Dominica\",\r\n    \"Comoros\",\r\n    \"Cook Islands\",\r\n    \"Costa Rica\",\r\n    \"Cote D'Ivoire\",\r\n    \"Croatia\",\r\n    \"Cuba\",\r\n    \"Curacao/Netherlands Antilles\",\r\n    \"Cyprus\",\r\n    \"Czech Republic\",\r\n    \"Denmark\",\r\n    \"Dominican Republic\",\r\n    \"East Timor\",\r\n    \"Ecuador\",\r\n    \"Egypt\",\r\n    \"Estonia\",\r\n    \"Fiji\",\r\n    \"Finland\",\r\n    \"France\",\r\n    \"French Guiana\",\r\n    \"French Polynesia\",\r\n    \"Georgia\",\r\n    \"Germany\",\r\n    \"Greece\",\r\n    \"Grenada\",\r\n    \"Guadeloupe\",\r\n    \"Guatemala\",\r\n    \"Guyana\",\r\n    \"Haiti\",\r\n    \"Honduras\",\r\n    \"Hong Kong\",\r\n    \"Hungary\",\r\n    \"Iceland\",\r\n    \"India\",\r\n    \"Indonesia\",\r\n    \"Iran\",\r\n    \"Iraq\",\r\n    \"Ireland\",\r\n    \"Israel\",\r\n    \"Italy\",\r\n    \"Jamaica\",\r\n    \"Japan\",\r\n    \"Jordan\",\r\n    \"Kazakhstan\",\r\n    \"Kiribati\",\r\n    \"Korea\",\r\n    \"Kuwait\",\r\n    \"Kyrgyzstan\",\r\n    \"LAO PDR\",\r\n    \"Latvia\",\r\n    \"Lebanon\",\r\n    \"Libya\",\r\n    \"Lithuania\",\r\n    \"Luxembourg\",\r\n    \"Macau\",\r\n    \"Malaysia\",\r\n    \"Malta\",\r\n    \"Marshall Islands\",\r\n    \"Martinique\",\r\n    \"Mauritius\",\r\n    \"Mexico\",\r\n    \"Micronesia\",\r\n    \"Moldova\",\r\n    \"Mongolia\",\r\n    \"Montenegro\",\r\n    \"Montserrat\",\r\n    \"Myanmar\",\r\n    \"Nauru\",\r\n    \"Nepal\",\r\n    \"Netherlands\",\r\n    \"Netherlands Antilles\",\r\n    \"New Caledonia\",\r\n    \"New Zealand\",\r\n    \"Niue\",\r\n    \"Norway\",\r\n    \"Oman\",\r\n    \"Pakistan\",\r\n    \"Palau\",\r\n    \"Panama\",\r\n    \"Papua New Guinea\",\r\n    \"Paraguay\",\r\n    \"People's Republic of China\",\r\n    \"Peru\",\r\n    \"Philippines\",\r\n    \"Poland\",\r\n    \"Portugal\",\r\n    \"Puerto Rico\",\r\n    \"Qatar\",\r\n    \"Republic of Belarus\",\r\n    \"Republic of El Salvador\",\r\n    \"Republic of Macedonia\",\r\n    \"Republic of Nicaragua\",\r\n    \"Romania\",\r\n    \"Russian Federation\",\r\n    \"Saba Island\",\r\n    \"Saint Eustatius\",\r\n    \"Saint Kitts And Nevis\",\r\n    \"Samoa\",\r\n    \"Saudi Arabia\",\r\n    \"Senegal\",\r\n    \"Serbia\",\r\n    \"Singapore\",\r\n    \"Slovak Republic\",\r\n    \"Slovenia\",\r\n    \"Solomon Islands\",\r\n    \"Somalia\",\r\n    \"Spain\",\r\n    \"Sri Lanka\",\r\n    \"St. Barthelemy\",\r\n    \"St. Croix\",\r\n    \"St. Lucia\",\r\n    \"St. Maarten\",\r\n    \"St. Thomas\",\r\n    \"St. Vincent\",\r\n    \"Suriname\",\r\n    \"Sweden\",\r\n    \"Switzerland\",\r\n    \"Syria\",\r\n    \"Taiwan\",\r\n    \"Tajikistan\",\r\n    \"Thailand\",\r\n    \"Togo\",\r\n    \"Tonga\",\r\n    \"Tortola\",\r\n    \"Trinidad and Tobago\",\r\n    \"Turkey\",\r\n    \"Turkmenistan\",\r\n    \"Turks and Caicos Islands\",\r\n    \"Tuvalu\",\r\n    \"UAE\",\r\n    \"Ukraine\",\r\n    \"United Kingdom\",\r\n    \"Uruguay\",\r\n    \"US Virgin Islands\",\r\n    \"USA\",\r\n    \"Uzbekistan\",\r\n    \"Vanuatu\",\r\n    \"Venezuela\",\r\n    \"Vietnam\",\r\n    \"Wallis et Futuna\",\r\n    \"Yemen\",\r\n    \"Somaliland\",\r\n\r\n];\r\n\r\n\r\nconst addPort = async (portName, country, sortOrder) => {\r\n    const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n    // New country data\r\n    const newCountryData = {\r\n        [portName]: {\r\n            country: country,\r\n            sortOrder: sortOrder,\r\n            method: '',\r\n        }\r\n    };\r\n\r\n    // Set document with merge option\r\n    try {\r\n        await setDoc(docRef, newCountryData, { merge: true });\r\n        console.log(\"Country added/updated successfully!\");\r\n\r\n    } catch (error) {\r\n        console.error(\"Error adding/updating country: \", error);\r\n    }\r\n};\r\n\r\n\r\nconst addCountry = async (countryName, inspectionIsRequired, inspectionName, sortOrder) => {\r\n    const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n    // New country data\r\n    const newCountryData = {\r\n        [countryName]: {\r\n            inspectionIsRequired: inspectionIsRequired,\r\n            inspectionName: inspectionName,\r\n            sortOrder: sortOrder\r\n        }\r\n    };\r\n\r\n    // Set document with merge option\r\n    try {\r\n        await setDoc(docRef, newCountryData, { merge: true });\r\n        console.log(\"Country added/updated successfully!\");\r\n\r\n    } catch (error) {\r\n        console.error(\"Error adding/updating country: \", error);\r\n    }\r\n};\r\n\r\nconst AddCountryModal = ({ handleAddCountryModalClose }) => {\r\n\r\n    const addCountryModalVisible = useSelector((state) => state.addCountryModalVisible);\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const inputCountryText = useRef(null);\r\n    const textAreaAddInspectionIsRequired = useRef(null);\r\n    const textAreaAddInspectionName = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    const [addButtonLoading, setAddButtonLoading] = useState(false);\r\n\r\n    const handleAddInspectionIsRequiredTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionIsRequired.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionIsRequired.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddInspectionNameTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionName.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionName.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddButton = async () => {\r\n        setAddButtonLoading(true);\r\n        const countryCode = inputCountryText.current?.value;\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        if (inputCountryText.current?.value !== '') {\r\n            try {\r\n                await addCountry(formattedCountryCode, 'Not-Required', '', 999);\r\n                const logData = {\r\n                    message: `Country Added: \"${nameVariable.text}\" added country \"${countryCode}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Country Added: \"${nameVariable.text}\" added country \"${countryCode}\" for Freight.`.toLowerCase(),\r\n                        'Country'.toLowerCase(),\r\n                        'Country Added'.toLowerCase(),\r\n                        'Added'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        countryCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Country added successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                dispatch(setAddCountryModalVisible(false));\r\n                setAddButtonLoading(false);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n\r\n        else {\r\n            setAddButtonLoading(false);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleFirstModalClose = () => {\r\n        dispatch(setAddCountryModalVisible(false));\r\n\r\n    };\r\n    const handleFirstModalOpen = () => {\r\n        dispatch(setAddCountryModalVisible(true));\r\n    }\r\n\r\n    const filterInput = (inputRef) => {\r\n        const currentValue = inputRef.current.value;\r\n        const filteredValue = currentValue.replace(/[^a-zA-Z0-9. ]/g, '');\r\n        if (currentValue !== filteredValue) {\r\n            inputRef.current.setNativeProps({ text: filteredValue });\r\n        }\r\n    };\r\n    return (\r\n        <Modal\r\n            isOpen={addCountryModalVisible}\r\n            onClose={() => {\r\n                handleAddCountryModalClose();\r\n                inputCountryText.current.value = '';\r\n            }}\r\n            size={'md'}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header style={{ backgroundColor: '#7B9CFF', }}><Text color={'white'} fontSize={20} bold>Add Country</Text></Modal.Header>\r\n                <Modal.Body >\r\n                    <View style={{ marginVertical: 5, }}>\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Country</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputCountryText}\r\n                            onChangeText={() => filterInput(inputCountryText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Country' />\r\n\r\n                    </View>\r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"solid\" space=\"2\">\r\n                        <Button colorScheme={'gray'} onPress={() => {\r\n                            handleAddCountryModalClose();\r\n                            inputCountryText.current.value = '';\r\n                        }}>Cancel</Button>\r\n                        {addButtonLoading ?\r\n                            (<Spinner size=\"lg\" color={'#16A34A'} />) :\r\n                            (<Button colorScheme={'success'} onPress={handleAddButton}>Add</Button>)\r\n                        }\r\n\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst NavigatePage = () => {\r\n    const selectedButton = useSelector((state) => state.selectedButton);\r\n\r\n    if (selectedButton === 'countries') {\r\n        return <CountriesTable />;\r\n    }\r\n    if (selectedButton === 'ports') {\r\n        return <PortsTable />;\r\n    }\r\n};\r\n\r\n\r\nconst AddPortsForCountriesModal = ({ handleAddPortsForCountriesModalClose, handleAddPortsForCountriesModalOpen }) => {\r\n\r\n    const addPortsForCountriesModalVisible = useSelector((state) => state.addPortsForCountriesModalVisible);\r\n    const countryPortsData = useSelector((state) => state.countryPortsData);\r\n    const [data, setData] = useState([]);\r\n    const [modalSortOpen, setModalSortOpen] = useState(false);\r\n    const [modalAddOpen, setModalAddOpen] = useState(false);\r\n    const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n    const [modalSave, setModalSave] = useState(false);\r\n    const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n    const [modalIsLoading, setModalIsLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = selectedCountry.replace(/\\./g, '_');\r\n\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.nearestPorts) {\r\n                    const nearestPorts = countryData.nearestPorts;\r\n                    setData(nearestPorts);\r\n\r\n                }\r\n                else {\r\n                    setData([]);\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [addPortsForCountriesModalVisible]);\r\n\r\n    const handleDeleteItemPress = useCallback(\r\n        (item) => {\r\n            setData((prevData) => {\r\n                const updatedData = prevData.filter((value) => value !== item);\r\n                return updatedData;\r\n            });\r\n        },\r\n        []\r\n    );\r\n\r\n    const handleModalAddOpen = useCallback(() => {\r\n        setModalAddOpen(true);\r\n        handleAddPortsForCountriesModalClose();\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, []);\r\n\r\n    const handleModalAddClose = useCallback(() => {\r\n        setModalAddOpen(false);\r\n        dispatch(setAddPortsForCountriesModalVisible(true));\r\n    }, []);\r\n\r\n    const addPortForCountryField = async (newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        setModalSaveLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n\r\n        if (selectedPortForCountry.ports !== '') {\r\n            const formattedCountryCode = selectedCountry.replace(/\\./g, '_');\r\n            const nearestPortsField = `${formattedCountryCode}.nearestPorts`;\r\n\r\n            try {\r\n                // Fetch the current nearestPorts array from Firestore\r\n                const docSnap = await getDoc(documentRef);\r\n                if (docSnap.exists()) {\r\n                    const nearestPorts = docSnap.data()[formattedCountryCode]?.nearestPorts || [];\r\n\r\n                    // Check if selectedPortForCountry is already in the nearestPorts array\r\n                    if (!nearestPorts.includes(selectedPortForCountry.ports)) {\r\n                        // Update the document with the new value\r\n                        await updateDoc(documentRef, {\r\n                            [nearestPortsField]: [...nearestPorts, selectedPortForCountry.ports]\r\n                        });\r\n\r\n                        const logData = {\r\n                            message: `Nearest Ports Added: \"${nameVariable.text}\" added \"${selectedPortForCountry.ports}\" port to \"${selectedCountry}\"`,\r\n                            timestamp: formattedTime,\r\n                            colorScheme: true,\r\n                            keywords: [\r\n                                formattedTime.toLowerCase(),\r\n                                `Nearest Ports Added: \"${nameVariable.text}\" added \"${selectedPortForCountry.ports}\" port to \"${selectedCountry}\"`.toLowerCase(),\r\n                                'Nearest Ports'.toLowerCase(),\r\n                                'Nearest'.toLowerCase(),\r\n                                'Nearest Ports Added'.toLowerCase(),\r\n                                'Ports'.toLowerCase(),\r\n                                'Added'.toLowerCase(),\r\n                                selectedPortForCountry.ports.toLowerCase(),\r\n                                selectedCountry.toLowerCase(),\r\n                                nameVariable.text.toLowerCase(),\r\n                                year.toLowerCase(),\r\n                                month.toLowerCase(),\r\n                                monthWithDay.toLowerCase(),\r\n                                date.toLowerCase(),\r\n                                day.toLowerCase(),\r\n                                time.toLowerCase(),\r\n                            ],\r\n                        };\r\n                        addLogToCollection(logData);\r\n                        handleAddPortsForCountriesModalClose();\r\n                        toast.show({\r\n                            render: () => {\r\n                                return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                    <Text style={{ color: 'white' }}>Nearest Ports added successfully</Text>\r\n                                </View>;\r\n                            }\r\n                        })\r\n                        console.log('Nearest Ports added successfully');\r\n                        setModalSaveLoading(false);\r\n                        handleModalAddClose();\r\n                        // ...\r\n                    } else {\r\n                        // Handle the case where the port already exists\r\n                        console.log('Port already exists in the nearest ports list');\r\n                        setModalSaveLoading(false);\r\n\r\n                        // You can show a message to the user here if needed\r\n                    }\r\n                } else {\r\n                    console.log('No such document!');\r\n                    setModalSaveLoading(false);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n                setModalSaveLoading(false);\r\n                // Error handling...\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.log(newValue);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const updateCountryPortsField = async (newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        setModalSaveLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = selectedCountry.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const nearestPortsField = `${formattedCountryCode}.nearestPorts`;\r\n\r\n            try {\r\n\r\n\r\n                await updateDoc(documentRef, {\r\n                    [nearestPortsField]: newValue\r\n                });\r\n\r\n                dispatch(setLoadingModalVisible(false));\r\n                const logData = {\r\n                    message: `Nearest Ports Updated: \"${nameVariable.text}\" updated \"${selectedCountry}\" nearest ports`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Nearest Ports Updated: \"${nameVariable.text}\" updated \"${selectedCountry}\" nearest ports`.toLowerCase(),\r\n                        'Nearest Ports'.toLowerCase(),\r\n                        'Nearest'.toLowerCase(),\r\n                        'Nearest Ports Updated'.toLowerCase(),\r\n                        'Ports'.toLowerCase(),\r\n                        'Updated'.toLowerCase(),\r\n                        selectedCountry.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                addLogToCollection(logData);\r\n                handleAddPortsForCountriesModalClose();\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Nearest Ports updated successfully</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                console.log('Nearest Ports updated successfully');\r\n                setModalSaveLoading(false);\r\n\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n                setModalSaveLoading(false);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.log(newValue);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <><Modal\r\n            isOpen={addPortsForCountriesModalVisible}\r\n            onClose={handleAddPortsForCountriesModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header borderBottomWidth={0}>\r\n                    <Text color={'#102A43'} bold>Manage ports for {selectedCountry}</Text>\r\n                </Modal.Header>\r\n                <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                    <View style={{ width: '100%' }}>\r\n                        <View style={{ alignItems: 'flex-end', }}>\r\n                            <TouchableOpacity onPress={handleModalAddOpen}><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></TouchableOpacity>\r\n                        </View>\r\n                        <View style={{ flex: 1, borderWidth: 1, borderColor: '#102A43', borderRadius: 5, }}>\r\n                            <DraggableFlatList\r\n                                style={{ alignContent: 'center', flex: 1, }}\r\n                                data={data}\r\n                                keyExtractor={(item) => item}\r\n                                renderItem={({ item, drag }) => (\r\n\r\n                                    <View style={{\r\n                                        flex: 1,\r\n                                        backgroundColor: 'rgba(16,42,67, 0.5)',\r\n                                        borderBottomWidth: 1,\r\n                                        borderBottomColor: '#A8A29E',\r\n                                        flexDirection: 'row',\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center',\r\n                                    }}>\r\n                                        <TouchableOpacity onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></TouchableOpacity>\r\n                                        <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                                        <TouchableOpacity onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></TouchableOpacity>\r\n                                    </View>\r\n\r\n                                )}\r\n                                onDragEnd={useCallback(({ data }) => setData(data), [])} />\r\n\r\n\r\n                        </View>\r\n\r\n                    </View>\r\n                </Modal.Body>\r\n                <Modal.Footer borderTopWidth={0}>\r\n                    <HStack space={5} flex={1}>\r\n                        <Button onPress={handleAddPortsForCountriesModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                        {modalSaveLoading ?\r\n                            (<Button flex={1} size={'sm'} borderRadius={5} colorScheme={'success'} disabled>\r\n                                <Spinner size={18} color={'white'} flex={1} borderRadius={5} />\r\n                            </Button>) :\r\n                            (<Button onPress={() => updateCountryPortsField(data)} flex={1} size={'sm'} borderRadius={5} colorScheme={'success'}>Save</Button>)\r\n                        }\r\n\r\n                    </HStack>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n            <Modal\r\n                isOpen={modalAddOpen}\r\n                onClose={handleModalAddClose}\r\n            // initialFocusRef={textAreaAdd}\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Add Ports for {selectedCountry}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                        <SearchablePortDropdown modalAddOpen={modalAddOpen} />\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={() => addPortForCountryField()} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5} colorScheme={'success'}>Add</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal></>\r\n    );\r\n\r\n}\r\n\r\nconst DeleteCountryModal = ({ handleDeleteCountryModalClose }) => {\r\n    const deleteCountryModalVisible = useSelector((state) => state.deleteCountryModalVisible);\r\n    const [buttonLoading, setButtonLoading] = useState(false);\r\n\r\n    const handleDeleteCountry = async () => {\r\n        setButtonLoading(true);\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        const formattedFieldCode = selectedCountry.replace(/\\./g, '_');\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        updateDoc(documentRef, {\r\n            [formattedFieldCode]: deleteField()\r\n        })\r\n            .then(() => {\r\n                console.log('Field deleted successfully');\r\n                handleDeleteCountryModalClose();\r\n                setButtonLoading(false);\r\n                const logData = {\r\n                    message: `Country Deleted: \"${nameVariable.text}\" deleted country \"${selectedCountry}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: false,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Country Deleted: \"${nameVariable.text}\" deleted country \"${selectedCountry}\" for Freight.`.toLowerCase(),\r\n                        'Country'.toLowerCase(),\r\n                        'Country Deleted'.toLowerCase(),\r\n                        'Deleted'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        selectedCountry.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting field: ', error);\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal isOpen={deleteCountryModalVisible} onClose={handleDeleteCountryModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header>Delete Country?</Modal.Header>\r\n                <Modal.Body>\r\n                    Are you sure you want to delete the selected country?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        <TouchableOpacity\r\n                            style={{ flex: 1, backgroundColor: '#525252', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            onPress={handleDeleteCountryModalClose}\r\n                        >\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }}>No</Text>\r\n                        </TouchableOpacity>\r\n                        {buttonLoading ?\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            ><Spinner size={18} color={'white'} />\r\n                            </TouchableOpacity>) :\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                                onPress={handleDeleteCountry}\r\n                            >\r\n                                <Text style={{ color: 'white', alignSelf: 'center', }}>Yes</Text>\r\n                            </TouchableOpacity>)\r\n                        }\r\n\r\n\r\n                    </View>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst CountriesTable = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const optionsPerPage = [10, 20, 50];\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const [data, setData] = useState([]); // This will hold all the countries data   \r\n    const [page, setPage] = useState(0);\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const inputSearchRef = useRef(null);\r\n    const inputSortOrder = useRef([]);\r\n    const toast = useToast();\r\n    const textAreaAddInspectionIsRequired = useRef(null);\r\n    const textAreaAddInspectionName = useRef(null);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter((item) =>\r\n            item.country.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.inspectionName.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.inspectionIsRequired.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.sortOrder.toString().includes(searchQuery)\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce(() => {\r\n        setSearchQuery(inputSearchRef.current?.value);\r\n    }, 50);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    // useEffect(() => {\r\n    //     const addCountriesToFirestore = async () => {\r\n    //         // Create a new list with dots replaced by underscores\r\n    //         const sanitizedCountriesList = countriesList.map(country =>\r\n    //             country.replace(/\\./g, '_')\r\n    //         );\r\n\r\n    //         for (const [index, country] of sanitizedCountriesList.entries()) {\r\n    //             // The index of an array is zero-based, to make it one-based add 1\r\n    //             // (If you really need a one-based index, otherwise just use index)\r\n    //             const sortOrder = index;\r\n    //             try {\r\n    //                 await addCountry(country, 'Not-Required', '', sortOrder);\r\n    //             } catch (error) {\r\n    //                 console.error(`Error adding country: ${country}`, error);\r\n    //                 // Optionally handle the error by stopping the loop, or continue to the next iteration\r\n    //                 // break; // Stop the loop if an error occurs\r\n    //                 // continue; // Skip to the next iteration\r\n    //             }\r\n    //             // Optionally add a delay here if necessary\r\n    //             // await new Promise(resolve => setTimeout(resolve, 1000)); // 1 second delay\r\n    //         }\r\n    //     };\r\n\r\n    //     addCountriesToFirestore();\r\n    // }, []);\r\n    const handleAddInspectionNameTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionName.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionName.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddInspectionIsRequiredTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionIsRequired.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionIsRequired.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map(key => ({\r\n                        country: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n                setFilteredData(formattedData);\r\n                dispatch(setLoadingModalVisible(false));\r\n            } else {\r\n                console.log(\"No such document!\");\r\n\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching countries: \", error);\r\n\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n\r\n    const handleAddCountryModalOpen = () => {\r\n\r\n        dispatch(setAddCountryModalVisible(true));\r\n\r\n    }\r\n\r\n    const handleAddCountryModalClose = () => {\r\n\r\n        dispatch(setAddCountryModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n    const handleAddPortsForCountriesModalOpen = (nearestPorts, country) => {\r\n\r\n        dispatch(setAddPortsForCountriesModalVisible(true));\r\n        dispatch(setCountryPortsData(nearestPorts));\r\n        // setSelectedCountry(selectedCountry);\r\n        selectedCountry = country;\r\n    }\r\n\r\n\r\n    const handleAddPortsForCountriesModalClose = () => {\r\n\r\n        dispatch(setAddPortsForCountriesModalVisible(false));\r\n    }\r\n\r\n    useEffect(() => {\r\n        paginatedData.forEach(item => {\r\n            inputSortOrder.current[item.country].value = item.sortOrder ? item.sortOrder : 0;\r\n        });\r\n        // setInputMemoValues(initialValues);\r\n\r\n    }, [paginatedData, screenWidth]); // Run this effect when 'items' changes\r\n    // Now, to update a specific field\r\n\r\n    const updateCountrySortOrder = async (countryCode, newValue, inputRef) => {\r\n        // Specify the document reference\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const sortOrderField = `${formattedCountryCode}.sortOrder`;\r\n\r\n            try {\r\n                // Perform the update\r\n                await updateDoc(documentRef, {\r\n                    [sortOrderField]: newValue\r\n                });\r\n\r\n\r\n\r\n                const logData = {\r\n                    message: `Sort Order Updated: \"${nameVariable.text}\" updated \"${countryCode}\" sort order to \"${newValue}\".`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Sort Order Updated: \"${nameVariable.text}\" updated \"${countryCode}\" sort order to \"${newValue}\"`.toLowerCase(),\r\n                        'Sort'.toLowerCase(),\r\n                        'Sort Order'.toLowerCase(),\r\n                        'Sort Order Updated'.toLowerCase(),\r\n                        'Order Updated'.toLowerCase(),\r\n                        'Order'.toLowerCase(),\r\n                        'Updated'.toLowerCase(),\r\n                        countryCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Sort order updated successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                addLogToCollection(logData);\r\n                dispatch(setLoadingModalVisible(false));\r\n                console.log('Sort order updated successfully');\r\n            } catch (error) {\r\n                console.error('Error updating sort order:', error);\r\n\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n    // Call the function to update the field\r\n\r\n\r\n\r\n\r\n    const handleSortOrderTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 3);\r\n\r\n        inputSortOrder.current[item.country].value = numericValue;\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleDeleteCountryModalOpen = (selectedValue) => {\r\n\r\n        dispatch(setDeleteCountryModalVisible(true));\r\n        selectedCountry = selectedValue;\r\n\r\n    }\r\n\r\n    const handleDeleteCountryModalClose = () => {\r\n\r\n        dispatch(setDeleteCountryModalVisible(false));\r\n\r\n    }\r\n\r\n    const handleUpdateInsurance = async (newValue, currentValue, countryCode) => {\r\n\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const insuranceField = `${formattedCountryCode}.insurance`;\r\n\r\n            try {\r\n                if (currentValue == newValue) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [insuranceField]: newValue,\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Insurance Updated: \"${nameVariable.text}\" updated \"${countryCode}\" insurance to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Insurance Updated: \"${nameVariable.text}\" updated \"${countryCode}\" insurance to \"${newValue}\"`.toLowerCase(),\r\n                            'Insurance'.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Insurance Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            newValue.toString().toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Insurance updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Insurance updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {screenWidth >= 1280 ? (\r\n                <View style={{ flex: 1, }}>\r\n                    {/* Search Bar */}\r\n                    <View style={{ padding: 10 }}>\r\n                        <TextInput\r\n                            ref={inputSearchRef}\r\n                            onSubmitEditing={handleSearch}\r\n                            style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                            placeholder='Search'\r\n                            returnKeyType='search'\r\n                            autoCapitalize='none'\r\n                        />\r\n                    </View>\r\n\r\n                    {/* Add Country Button */}\r\n                    <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                        <TouchableOpacity\r\n                            onPress={handleAddCountryModalOpen}\r\n                            style={{\r\n                                borderRadius: 5,\r\n                                padding: 10,\r\n                                borderWidth: 1,\r\n                                borderColor: 'white',\r\n                                backgroundColor: '#16A34A',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                            <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Country</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    {/* Table Headers */}\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: '#E4E4E7',\r\n                            backgroundColor: '#0642F4',\r\n                            padding: 10,\r\n                            borderRadius: 5,\r\n                            marginTop: 10,\r\n                        }}\r\n                    >\r\n                        <View style={{ flex: 1, padding: 2, }}>\r\n                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, }}>\r\n                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, flexDirection: 'row', }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='InspectionIsRequiredDoc'\r\n                                handleAddTextChange={handleAddInspectionIsRequiredTextChange}\r\n                                textAreaAdd={textAreaAddInspectionIsRequired}\r\n                                title='Inspection'\r\n                                dataName={'inspectionIsRequiredData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Inspection\"\r\n                                data={inspectionIsRequiredData}\r\n                            />\r\n                            <Text flex={1} style={{ color: 'white', }} bold>Inspection</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, flexDirection: 'row', }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='InspectionNameDoc'\r\n                                handleAddTextChange={handleAddInspectionNameTextChange}\r\n                                textAreaAdd={textAreaAddInspectionName}\r\n                                title='Inspection Name'\r\n                                dataName={'inspectionNameData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Inspection\"\r\n                                data={inspectionNameData}\r\n                            />\r\n                            <Text style={{ color: 'white', }} bold>Inspection Name</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }} bold>Insurance</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }} bold>Nearest Port</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                        {paginatedData.map((item, index) => (\r\n                            <View\r\n                                key={index}\r\n                                style={{\r\n                                    flex: 1,\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'space-between',\r\n                                    alignItems: 'center',\r\n                                    borderBottomWidth: 1,\r\n                                    borderBottomColor: '#E4E4E7',\r\n                                    backgroundColor: '#BFDBFE',\r\n                                    paddingVertical: 10,\r\n                                }}>\r\n                                <Text style={{ flex: 1, marginHorizontal: 5 }} selectable>{item.country}</Text>\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 5, }}>\r\n                                    {/* <Text style={{ borderTopLeftRadius: 5, borderBottomLeftRadius: 5, alignSelf: 'center', backgroundColor: 'white', padding: 8 }}>{item.sortOrder}→</Text> */}\r\n                                    <TextInput\r\n                                        ref={(ref) => (inputSortOrder.current[item.country] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '20%', backgroundColor: 'white', borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                        onSubmitEditing={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                        onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n\r\n                                </View>\r\n                                {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <SelectInspectionIsRequired width={'70%'} defaultValue={item.inspectionIsRequired} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n\r\n                                </View>\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <SelectInspectionName width={'70%'} defaultValue={item.inspectionName} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, marginHorizontal: 5, justifyContent: 'center', alignItems: 'center', }}>\r\n                                    <BouncyCheckbox\r\n                                        size={25}\r\n                                        fillColor=\"#0642F4\"\r\n                                        unfillColor=\"#FFFFFF\"\r\n                                        innerIconStyle={{ borderWidth: 2 }}\r\n                                        textStyle={{ fontFamily: \"JosefinSans-Regular\" }}\r\n                                        isChecked={item.insurance ? item.insurance : false}\r\n                                        onPress={(isChecked) => handleUpdateInsurance(isChecked, item.insurance ? item.insurance : false, item.country)}\r\n                                    />\r\n                                </View>\r\n                                <View style={{ flexDirection: 'row', flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <TouchableOpacity\r\n                                        onPress={() => handleAddPortsForCountriesModalOpen(item.nearestPorts ? item.nearestPorts : [], item.country)}\r\n                                        style={{ flex: 1, backgroundColor: '#0891B2', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}\r\n                                    >\r\n                                        <MaterialIcons\r\n                                            name=\"directions-boat\" // The icon name from MaterialIcons\r\n                                            size={20} // Set the size of the icon\r\n                                            color={'white'} // Set the color based on active state\r\n                                        />\r\n                                        <Text style={{ alignSelf: 'center', color: 'white', marginLeft: 3, }}>View Ports</Text>\r\n                                    </TouchableOpacity>\r\n                                    {/* <TouchableOpacity style={{ flex: 1 }}>\r\n                                <Text>Add Ports</Text>\r\n                            </TouchableOpacity> */}\r\n                                </View>\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => handleDeleteCountryModalOpen(item.country)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#DC2626',\r\n                                                borderRadius: 5,\r\n                                                padding: 10,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <AntDesign name='delete' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n                                {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                            </View>\r\n                        ))}\r\n                        <DataTable.Pagination\r\n                            page={page}\r\n                            numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                            onPageChange={(page) => setPage(page)}\r\n                            label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                            optionsPerPage={optionsPerPage}\r\n                            itemsPerPage={itemsPerPage}\r\n                            setItemsPerPage={setItemsPerPage}\r\n                            showFastPagination\r\n                            optionsLabel={'Rows per page'}\r\n                        />\r\n                    </DataTable>\r\n                    <AddCountryModal handleAddCountryModalClose={handleAddCountryModalClose} />\r\n                    <AddPortsForCountriesModal handleAddPortsForCountriesModalClose={handleAddPortsForCountriesModalClose} handleAddPortsForCountriesModalOpen={handleAddPortsForCountriesModalOpen} />\r\n                    <DeleteCountryModal handleDeleteCountryModalClose={handleDeleteCountryModalClose} />\r\n                </View>\r\n            ) :\r\n\r\n                (\r\n                    //Countries Table Mobile View\r\n                    <View style={{ flex: 1, }}>\r\n                        {/* Search Bar */}\r\n                        <View style={{ padding: 10 }}>\r\n                            <TextInput\r\n                                ref={inputSearchRef}\r\n                                onSubmitEditing={handleSearch}\r\n                                style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                                placeholder='Search'\r\n                                returnKeyType='search'\r\n                                autoCapitalize='none'\r\n                            />\r\n                        </View>\r\n\r\n                        <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                            <TouchableOpacity\r\n                                onPress={handleAddCountryModalOpen}\r\n                                style={{\r\n                                    borderRadius: 5,\r\n                                    padding: 10,\r\n                                    borderWidth: 1,\r\n                                    borderColor: 'white',\r\n                                    backgroundColor: '#16A34A',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                                <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Country</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n\r\n                        {/* Table Headers */}\r\n\r\n\r\n                        <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                            {paginatedData.map((item, index) => (\r\n                                <View\r\n                                    key={index}\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'column',\r\n                                        borderWidth: 1,\r\n                                        borderColor: '#E4E4E7',\r\n                                        backgroundColor: '#BFDBFE',\r\n                                        margin: 10,\r\n                                    }}>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <Text selectable style={{ marginLeft: 3 }}>{item.country}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            {/* <Text style={{ borderTopLeftRadius: 5, borderBottomLeftRadius: 5, alignSelf: 'center', backgroundColor: 'white', padding: 8 }}>{item.sortOrder}→</Text> */}\r\n                                            <TextInput\r\n                                                ref={(ref) => (inputSortOrder.current[item.country] = ref)}\r\n                                                style={{ outlineStyle: 'none', padding: 5, width: '100%', backgroundColor: 'white', borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                onSubmitEditing={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                                onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                            />\r\n                                            <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                <TouchableHighlight\r\n                                                    onPress={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                                    underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                    style={{\r\n                                                        backgroundColor: '#16A34A',\r\n                                                        borderRadius: 5,\r\n                                                        padding: 5,\r\n                                                        margin: 2,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    <MaterialIcons name='update' color='white' size={22} />\r\n                                                </TouchableHighlight>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Inspection</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <SelectInspectionIsRequired width={'100%'} defaultValue={item.inspectionIsRequired} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Inspection Name</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <SelectInspectionName width={'100%'} defaultValue={item.inspectionName} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Insurance</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <BouncyCheckbox\r\n                                                size={25}\r\n                                                fillColor=\"#0642F4\"\r\n                                                unfillColor=\"#FFFFFF\"\r\n                                                innerIconStyle={{ borderWidth: 2 }}\r\n                                                textStyle={{ fontFamily: \"JosefinSans-Regular\" }}\r\n                                                isChecked={item.insurance ? item.insurance : false}\r\n                                                onPress={(isChecked) => handleUpdateInsurance(isChecked, item.insurance ? item.insurance : false, item.country)}\r\n                                            />\r\n                                        </View>\r\n                                    </View>\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Nearest Port</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flexDirection: 'row', flex: 1, marginHorizontal: 5 }}>\r\n                                                <TouchableOpacity\r\n                                                    onPress={() => handleAddPortsForCountriesModalOpen(item.nearestPorts ? item.nearestPorts : [], item.country)}\r\n                                                    style={{ flex: 1, backgroundColor: '#0891B2', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}\r\n                                                >\r\n                                                    <MaterialIcons\r\n                                                        name=\"directions-boat\" // The icon name from MaterialIcons\r\n                                                        size={20} // Set the size of the icon\r\n                                                        color={'white'} // Set the color based on active state\r\n                                                    />\r\n                                                    <Text style={{ alignSelf: 'center', color: 'white', marginLeft: 3, }}>View Ports</Text>\r\n                                                </TouchableOpacity>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n\r\n                                                <View style={{ flex: 1, borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => handleDeleteCountryModalOpen(item.country)}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 6, }}>\r\n                                                        <AntDesign name='delete' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                </View>\r\n                            ))}\r\n                            <DataTable.Pagination\r\n                                page={page}\r\n                                numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                onPageChange={(page) => setPage(page)}\r\n                                label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                optionsPerPage={optionsPerPage}\r\n                                itemsPerPage={itemsPerPage}\r\n                                setItemsPerPage={setItemsPerPage}\r\n                                showFastPagination\r\n                                optionsLabel={'Rows per page'}\r\n                            />\r\n                        </DataTable>\r\n                        <AddCountryModal handleAddCountryModalClose={handleAddCountryModalClose} />\r\n                        <AddPortsForCountriesModal handleAddPortsForCountriesModalClose={handleAddPortsForCountriesModalClose} handleAddPortsForCountriesModalOpen={handleAddPortsForCountriesModalOpen} />\r\n                        <DeleteCountryModal handleDeleteCountryModalClose={handleDeleteCountryModalClose} />\r\n                    </View>\r\n                )}\r\n\r\n\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst portsList = {\r\n    \"Dar es Salaam\": { country: \"Tanzania\" },\r\n    \"Durban\": { country: \"Republic of South Africa\" },\r\n    \"Maputo\": { country: \"Mozambique\" },\r\n    \"Abidjan\": { country: \"Cote D'Ivoire\" },\r\n    \"Mombasa\": { country: \"Kenya\" },\r\n    \"Lusaka\": { country: \"Zambia\" },\r\n    \"Matadi\": { country: \"D.R. Congo\" },\r\n    \"Zanzibar\": { country: \"Tanzania\" },\r\n    \"St. John's\": { country: \"Antigua and Barbuda\" },\r\n    \"Aarhus\": { country: \"Denmark\" },\r\n    \"Abadan\": { country: \"Iran\" },\r\n    \"Abu Dhabi\": { country: \"United Arab Emirates\" },\r\n    \"Acapulco\": { country: \"Mexico\" },\r\n    \"Adelaide\": { country: \"Australia\" },\r\n    \"Aden\": { country: \"Yemen\" },\r\n    \"Al Khobar\": { country: \"Saudi Arabia\" },\r\n    \"Al Ladhiqiyah\": { country: \"Syria\" },\r\n    \"Al Mukalla\": { country: \"Yemen\" },\r\n    \"Al Qusayr\": { country: \"Egypt\" },\r\n    \"Al Ruwais\": { country: \"Qatar\" },\r\n    \"Alexandria\": { country: \"Egypt\" },\r\n    \"Algiers\": { country: \"Algeria\" },\r\n    \"Antwerp\": { country: \"Belgium\" },\r\n    \"Apia\": { country: \"Samoa\" },\r\n    \"Aqaba\": { country: \"Jordan\" },\r\n    \"Arwad\": { country: \"Syria\" },\r\n    \"As Salif\": { country: \"Yemen\" },\r\n    \"Ash Shihr\": { country: \"Yemen\" },\r\n    \"Ashdod\": { country: \"Israel\" },\r\n    \"Ashgabat\": { country: \"Turkmenistan\" },\r\n    \"Ashkelon\": { country: \"Israel\" },\r\n    \"Assab\": { country: \"Eritrea\" },\r\n    \"Assumption Island\": { country: \"Seychelles\" },\r\n    \"Asunción\": { country: \"Paraguay\" },\r\n    \"Auckland\": { country: \"New Zealand\" },\r\n    \"Avarua\": { country: \"Cook Islands\" },\r\n    \"Balboa\": { country: \"Panama\" },\r\n    \"Balhaf\": { country: \"Yemen\" },\r\n    \"Banana\": { country: \"D.R.Congo\" },\r\n    \"Bandar Abbas\": { country: \"Iran\" },\r\n    \"Bandar Seri Begawan\": { country: \"Brunei Darussalam\" },\r\n    \"Bangkok\": { country: \"Thailand\" },\r\n    \"Baniyas\": { country: \"Syria\" },\r\n    \"Banjul\": { country: \"Gambia\" },\r\n    \"Bar\": { country: \"Montenegro\" },\r\n    \"Barcelona\": { country: \"Spain\" },\r\n    \"Barranquilla\": { country: \"Colombia\" },\r\n    \"Basra\": { country: \"Iraq\" },\r\n    \"Basse-Terre\": { country: \"Guadeloupe\" },\r\n    \"Batroun\": { country: \"Lebanon\" },\r\n    \"Batumi\": { country: \"Georgia\" },\r\n    \"Beira\": { country: \"Mozambique\" },\r\n    \"Beirut\": { country: \"Lebanon\" },\r\n    \"Belize City\": { country: \"Belize\" },\r\n    \"Benghazi\": { country: \"Libya\" },\r\n    \"Berbera\": { country: \"Somalia\" },\r\n    \"Berbera\": { country: \"Somaliland\" },\r\n    \"Bissau\": { country: \"Guinea-Bissau\" },\r\n    \"Bissau\": { country: \"Republic of Guinea-Bissau\" },\r\n    \"Blantyre\": { country: \"Malawi\" },\r\n    \"Bo\": { country: \"Sierra Leone\" },\r\n    \"Boma\": { country: \"D.R.Congo\" },\r\n    \"Bosaso\": { country: \"Somalia\" },\r\n    \"Brava\": { country: \"Somalia\" },\r\n    \"Brazzaville\": { country: \"Republic of the Congo\" },\r\n    \"Bridgetown\": { country: \"Barbados\" },\r\n    \"Brisbane\": { country: \"Australia\" },\r\n    \"Buchanan\": { country: \"Liberia\" },\r\n    \"Bucharest\": { country: \"Romania\" },\r\n    \"Buenos Aires\": { country: \"Argentina\" },\r\n    \"Busan\": { country: \"South Korea\" },\r\n    \"Byblos\": { country: \"Lebanon\" },\r\n    \"Cabinda\": { country: \"Angola\" },\r\n    \"Calabar\": { country: \"Nigeria\" },\r\n    \"Calais\": { country: \"France\" },\r\n    \"Callao\": { country: \"Peru\" },\r\n    \"Cap-Haitien\": { country: \"Haiti\" },\r\n    \"Cape Town\": { country: \"South Africa\" },\r\n    \"Caracas\": { country: \"Venezuela\" },\r\n    \"Cartagena\": { country: \"Colombia\" },\r\n    \"Casablanca\": { country: \"Morocco\" },\r\n    \"Cayenne\": { country: \"French Guiana\" },\r\n    \"Cebu\": { country: \"Philippines\" },\r\n    \"Chabahar\": { country: \"Iran\" },\r\n    \"Charlotte Amalie\": { country: \"US Virgin Islands\" },\r\n    \"Chekka\": { country: \"Lebanon\" },\r\n    \"Chisinau\": { country: \"Moldova\" },\r\n    \"Chittagong\": { country: \"Bangladesh\" },\r\n    \"Christchurch\": { country: \"New Zealand\" },\r\n    \"Colombo\": { country: \"Sri Lanka\" },\r\n    \"Colonia\": { country: \"Micronesia\" },\r\n    \"Comoros\": { country: \"Comoros\" },\r\n    \"Conakry\": { country: \"Guinea\" },\r\n    \"Constanta\": { country: \"Romania\" },\r\n    \"Constanța\": { country: \"Romania\" },\r\n    \"Copenhagen\": { country: \"Denmark\" },\r\n    \"Cork\": { country: \"Ireland\" },\r\n    \"Cotonou\": { country: \"Benin\" },\r\n    \"Cristóbal\": { country: \"Panama\" },\r\n    \"Dakar\": { country: \"Senegal\" },\r\n    \"Dammam\": { country: \"Saudi Arabia\" },\r\n    \"Darwin\": { country: \"Australia\" },\r\n    \"Diego Suarez (Antsiranana)\": { country: \"Madagascar\" },\r\n    \"Dili\": { country: \"East Timor\" },\r\n    \"Djibouti\": { country: \"Djibouti\" },\r\n    \"Doha\": { country: \"Qatar\" },\r\n    \"Doraleh\": { country: \"Djibouti\" },\r\n    \"Douala\": { country: \"Cameroon\" },\r\n    \"Dubai\": { country: \"UAE\" },\r\n    \"Dublin\": { country: \"Ireland\" },\r\n    \"Duqm\": { country: \"Oman\" },\r\n    \"Durrës\": { country: \"Albania\" },\r\n    \"Dzaoudzi\": { country: \"Mayotte\" },\r\n    \"Ehoala\": { country: \"Madagascar\" },\r\n    \"Eil\": { country: \"Somalia\" },\r\n    \"Eilat\": { country: \"Israel\" },\r\n    \"El Arish\": { country: \"Egypt\" },\r\n    \"El Ma'an\": { country: \"Somalia\" },\r\n    \"El Tor\": { country: \"Egypt\" },\r\n    \"Famagusta\": { country: \"Cyprus\" },\r\n    \"Freeport\": { country: \"Bahamas\" },\r\n    \"Freetown\": { country: \"Sierra Leone\" },\r\n    \"Fremantle\": { country: \"Australia\" },\r\n    \"Funafuti\": { country: \"Tuvalu\" },\r\n    \"Garoua\": { country: \"Cameroon\" },\r\n    \"Gdansk\": { country: \"Poland\" },\r\n    \"Gdańsk\": { country: \"Poland\" },\r\n    \"Gdynia\": { country: \"Poland\" },\r\n    \"Genoa\": { country: \"Italy\" },\r\n    \"George Town\": { country: \"Cayman Islands\" },\r\n    \"Georgetown\": { country: \"Guyana\" },\r\n    \"Gizo\": { country: \"Solomon Islands\" },\r\n    \"Gothenburg\": { country: \"Sweden\" },\r\n    \"Grand Turk\": { country: \"Turks and Caicos Islands\" },\r\n    \"Greenville\": { country: \"Liberia\" },\r\n    \"Guangzhou\": { country: \"Peoples Republic of China\" },\r\n    \"Guayaquil\": { country: \"Ecuador\" },\r\n    \"Gwadar\": { country: \"Pakistan\" },\r\n    \"Gydnia\": { country: \"Poland\" },\r\n    \"Hadera\": { country: \"Israel\" },\r\n    \"Haifa\": { country: \"Israel\" },\r\n    \"Hamburg\": { country: \"Germany\" },\r\n    \"Hamilton\": { country: \"Bermuda\" },\r\n    \"Hargeisa\": { country: \"Somaliland\" },\r\n    \"Harper\": { country: \"Liberia\" },\r\n    \"Havana\": { country: \"Cuba\" },\r\n    \"Helsinki\": { country: \"Finland\" },\r\n    \"Ho Chi Minh City\": { country: \"Vietnam\" },\r\n    \"Hobyo\": { country: \"Somalia\" },\r\n    \"Hodeida\": { country: \"Yemen\" },\r\n    \"Hodeidah\": { country: \"Yemen\" },\r\n    \"Hong Kong\": { country: \"Hong Kong\" },\r\n    \"Honiara\": { country: \"Solomon Islands\" },\r\n    \"Incheon\": { country: \"South Korea\" },\r\n    \"Inchon\": { country: \"South Korea\" },\r\n    \"Istanbul\": { country: \"Turkey\" },\r\n    \"Jaffna\": { country: \"Sri Lanka\" },\r\n    \"Jakarta\": { country: \"Indonesia\" },\r\n    \"Jamestown\": { country: \"Saint Helena\" },\r\n    \"Jeddah Islamic Port\": { country: \"Saudi Arabia\" },\r\n    \"Jeddah\": { country: \"Saudi Arabia\" },\r\n    \"Jizan\": { country: \"Saudi Arabia\" },\r\n    \"Jounieh\": { country: \"Lebanon\" },\r\n    \"Jubail\": { country: \"Saudi Arabia\" },\r\n    \"Jurong\": { country: \"Singapore\" },\r\n    \"Kandla\": { country: \"India\" },\r\n    \"Kaohsiung\": { country: \"Taiwan\" },\r\n    \"Karachi\": { country: \"Pakistan\" },\r\n    \"Kathmandu\": { country: \"Nepal\" },\r\n    \"Khartoum\": { country: \"Sudan\" },\r\n    \"Khasab\": { country: \"Oman\" },\r\n    \"King Abdul Aziz Port\": { country: \"Saudi Arabia\" },\r\n    \"King Fahd Industrial Port\": { country: \"Saudi Arabia\" },\r\n    \"Kingston\": { country: \"Jamaica\" },\r\n    \"Kinshasa\": { country: \"D.R.Congo\" },\r\n    \"Kismayo\": { country: \"Somalia\" },\r\n    \"Klaipeda\": { country: \"Lithuania\" },\r\n    \"Kobe\": { country: \"Japan\" },\r\n    \"Kolkata\": { country: \"India\" },\r\n    \"Koror\": { country: \"Palau\" },\r\n    \"Kralendijk\": { country: \"Bonaire/Netherlands Antilles\" },\r\n    \"Kribi\": { country: \"Cameroon\" },\r\n    \"Kuching Port\": { country: \"Malaysia\" },\r\n    \"Kuwait City\": { country: \"Kuwait\" },\r\n    \"Kyrenia\": { country: \"Cyprus\" },\r\n    \"La Ceiba\": { country: \"Honduras\" },\r\n    \"La Digue\": { country: \"Seychelles\" },\r\n    \"La Guaira\": { country: \"Venezuela\" },\r\n    \"La Libertad\": { country: \"El Salvador\" },\r\n    \"Lae\": { country: \"Papua New Guinea\" },\r\n    \"Lagos\": { country: \"Nigeria\" },\r\n    \"Larnaca\": { country: \"Cyprus\" },\r\n    \"Las Palmas\": { country: \"Canary Islands\" },\r\n    \"Latakia\": { country: \"Syria\" },\r\n    \"Le Havre\": { country: \"France\" },\r\n    \"Le Port\": { country: \"Reunion\" },\r\n    \"Libreville\": { country: \"Gabon\" },\r\n    \"Limassol\": { country: \"Cyprus\" },\r\n    \"Limbe\": { country: \"Cameroon\" },\r\n    \"Limón\": { country: \"Costa Rica\" },\r\n    \"Lisbon\": { country: \"Portugal\" },\r\n    \"Lobito\": { country: \"Angola\" },\r\n    \"Lomé\": { country: \"Togo\" },\r\n    \"London\": { country: \"United Kingdom\" },\r\n    \"Luanda\": { country: \"Angola\" },\r\n    \"Luganville\": { country: \"Vanuatu\" },\r\n    \"Lüderitz\": { country: \"Namibia\" },\r\n    \"Mahé\": { country: \"Seychelles\" },\r\n    \"Majunga (Mahajanga)\": { country: \"Madagascar\" },\r\n    \"Majuro\": { country: \"Marshall Islands\" },\r\n    \"Malabo\": { country: \"Equatorial Guinea\" },\r\n    \"Male\": { country: \"Maldives\" },\r\n    \"Malé\": { country: \"Maldives\" },\r\n    \"Manama\": { country: \"Bahrain\" },\r\n    \"Manila\": { country: \"Philippines\" },\r\n    \"Manta\": { country: \"Ecuador\" },\r\n    \"Manzanillo\": { country: \"Mexico\" },\r\n    \"Marsa Matruh\": { country: \"Egypt\" },\r\n    \"MARSAXLOKK\": { country: \"Malta\" },\r\n    \"Marsaxlokk\": { country: \"Malta\" },\r\n    \"Marseille\": { country: \"France\" },\r\n    \"Massawa\": { country: \"Eritrea\" },\r\n    \"Mata-Utu\": { country: \"Wallis and Futuna\" },\r\n    \"Matadi\": { country: \"D.R.Congo\" },\r\n    \"Matarani\": { country: \"Peru\" },\r\n    \"Mayumba\": { country: \"Gabon\" },\r\n    \"Melbourne\": { country: \"Australia\" },\r\n    \"Merca\": { country: \"Somalia\" },\r\n    \"Mindelo\": { country: \"Cape Verde\" },\r\n    \"Miri Port\": { country: \"Malaysia\" },\r\n    \"Mocha\": { country: \"Yemen\" },\r\n    \"Mogadishu\": { country: \"Somalia\" },\r\n    \"Monaco\": { country: \"Monaco\" },\r\n    \"Monrovia\": { country: \"Liberia\" },\r\n    \"Montego Bay\": { country: \"Jamaica\" },\r\n    \"Montevideo\": { country: \"Uruguay\" },\r\n    \"Moroni\": { country: \"Comoros\" },\r\n    \"Muara\": { country: \"Brunei Darussalam\" },\r\n    \"Mukalla\": { country: \"Yemen\" },\r\n    \"Mumbai\": { country: \"India\" },\r\n    \"Muscat\": { country: \"Oman\" },\r\n    \"Nacala\": { country: \"Mozambique\" },\r\n    \"Naha\": { country: \"Japan\" },\r\n    \"Namibe\": { country: \"Angola\" },\r\n    \"Naples\": { country: \"Italy\" },\r\n    \"Nassau\": { country: \"Bahamas\" },\r\n    \"Neiafu\": { country: \"Tonga\" },\r\n    \"New Westminster\": { country: \"Canada\" },\r\n    \"New York\": { country: \"USA\" },\r\n    \"Newcastle\": { country: \"Australia\" },\r\n    \"Nieuw Nickerie\": { country: \"Suriname\" },\r\n    \"Nishtun\": { country: \"Yemen\" },\r\n    \"Nouadhibou\": { country: \"Mauritania\" },\r\n    \"Nouakchott\": { country: \"Mauritania\" },\r\n    \"Noumea\": { country: \"New Caledonia\" },\r\n    \"Novorossiysk\": { country: \"Russian Federation\" },\r\n    \"Nuku'alofa\": { country: \"Tonga\" },\r\n    \"Obock\": { country: \"Djibouti\" },\r\n    \"Odessa\": { country: \"Ukraine\" },\r\n    \"Omboue\": { country: \"Gabon\" },\r\n    \"Onne\": { country: \"Nigeria\" },\r\n    \"Oran\": { country: \"Algeria\" },\r\n    \"Oranjestad\": { country: \"Aruba\" },\r\n    \"Osaka\": { country: \"Japan\" },\r\n    \"Padang\": { country: \"Indonesia\" },\r\n    \"Palermo\": { country: \"Italy\" },\r\n    \"Papeete\": { country: \"French Polynesia\" },\r\n    \"Paramaribo\": { country: \"Suriname\" },\r\n    \"Pattaya\": { country: \"Thailand\" },\r\n    \"Pemba\": { country: \"Mozambique\" },\r\n    \"Penang Port\": { country: \"Malaysia\" },\r\n    \"Philipsburg\": { country: \"Netherlands Antilles\" },\r\n    \"Piraeus\": { country: \"Greece\" },\r\n    \"Plymouth\": { country: \"Montserrat\" },\r\n    \"Pohnpei\": { country: \"Micronesia\" },\r\n    \"Pointe Noire\": { country: \"Republic of the Congo\" },\r\n    \"Pointe-Noire\": { country: \"Republic of the Congo\" },\r\n    \"Pointe-à-Pitre\": { country: \"Guadeloupe\" },\r\n    \"Ponce\": { country: \"Puerto Rico\" },\r\n    \"Port Castries\": { country: \"St. Lucia\" },\r\n    \"Port Elizabeth\": { country: \"South Africa\" },\r\n    \"Port Gentil\": { country: \"Gabon\" },\r\n    \"Port Harcourt\": { country: \"Nigeria\" },\r\n    \"Port Kelang\": { country: \"Malaysia\" },\r\n    \"Port Kembla\": { country: \"Australia\" },\r\n    \"Port Louis\": { country: \"Mauritius\" },\r\n    \"Port Moresby\": { country: \"Papua New Guinea\" },\r\n    \"Port of Spain\": { country: \"Trinidad and Tobago\" },\r\n    \"Port Rashid\": { country: \"United Arab Emirates\" },\r\n    \"Port Réunion\": { country: \"Reunion\" },\r\n    \"Port Sudan\": { country: \"Sudan\" },\r\n    \"Port Sultan Qaboos\": { country: \"Oman\" },\r\n    \"Port Victoria\": { country: \"Seychelles\" },\r\n    \"Port Vila\": { country: \"Vanuatu\" },\r\n    \"Port Villa\": { country: \"Vanuatu\" },\r\n    \"Port-au-Prince\": { country: \"Haiti\" },\r\n    \"Port-Louis\": { country: \"Mauritius\" },\r\n    \"Port-Vila\": { country: \"Vanuatu\" },\r\n    \"Porto Grande (Mindelo)\": { country: \"Cape Verde\" },\r\n    \"Porto-Novo\": { country: \"Benin\" },\r\n    \"Porto\": { country: \"Portugal\" },\r\n    \"Poti\": { country: \"Georgia\" },\r\n    \"Praslin\": { country: \"Seychelles\" },\r\n    \"Principe\": { country: \"Sao Tome and Principe\" },\r\n    \"Providenciales\": { country: \"Turks And Caicos Islands\" },\r\n    \"Puerto Barrios\": { country: \"Guatemala\" },\r\n    \"Puerto Cabello\": { country: \"Venezuela\" },\r\n    \"Puerto Limon\": { country: \"Republic of Costa Rica\" },\r\n    \"Puerto Madryn\": { country: \"Argentina\" },\r\n    \"Puerto Plata\": { country: \"Dominican Republic\" },\r\n    \"Puerto Sucre\": { country: \"Venezuela\" },\r\n    \"Punta del Este\": { country: \"Uruguay\" },\r\n    \"Puntarenas\": { country: \"Costa Rica\" },\r\n    \"Quelimane\": { country: \"Mozambique\" },\r\n    \"Quetzal\": { country: \"Guatemala\" },\r\n    \"Rabaul\": { country: \"Papua New Guinea\" },\r\n    \"Rabigh\": { country: \"Saudi Arabia\" },\r\n    \"Ras Al Ghar\": { country: \"Saudi Arabia\" },\r\n    \"Ras al Khafji\": { country: \"Saudi Arabia\" },\r\n    \"Ras al-Arah\": { country: \"Yemen\" },\r\n    \"Ras Gharib\": { country: \"Egypt\" },\r\n    \"Ras Isa Marine Terminal\": { country: \"Yemen\" },\r\n    \"Ras Isa\": { country: \"Yemen\" },\r\n    \"Ras Shukheir\": { country: \"Egypt\" },\r\n    \"Ras Tanura\": { country: \"Saudi Arabia\" },\r\n    \"Reykjavik\": { country: \"Iceland\" },\r\n    \"Riga\": { country: \"Latvia\" },\r\n    \"Rijeka\": { country: \"Croatia\" },\r\n    \"Rio de Janeiro\": { country: \"Brazil\" },\r\n    \"Road Town\": { country: \"British Virgin Islands\" },\r\n    \"Robertsport\": { country: \"Liberia\" },\r\n    \"Roseau\": { country: \"Commonwealth Of Dominica\" },\r\n    \"Rotterdam\": { country: \"Netherlands\" },\r\n    \"Saida\": { country: \"Lebanon\" },\r\n    \"Saint George's\": { country: \"Grenada\" },\r\n    \"Saint John's\": { country: \"Antigua and Barbuda\" },\r\n    \"Saint John\": { country: \"Barbados\" },\r\n    \"Saint Louis\": { country: \"Senegal\" },\r\n    \"Saint Petersburg\": { country: \"Russian Federation\" },\r\n    \"Saint Pierre\": { country: \"Saint Pierre and Miquelon\" },\r\n    \"Saint-Denis\": { country: \"Reunion\" },\r\n    \"Saipan\": { country: \"Northern Mariana Islands\" },\r\n    \"Salalah\": { country: \"Oman\" },\r\n    \"Saleef\": { country: \"Yemen\" },\r\n    \"San Antonio\": { country: \"Chile\" },\r\n    \"San Jose\": { country: \"Antigua\" },\r\n    \"San Juan\": { country: \"Puerto Rico\" },\r\n    \"San Pedro\": { country: \"Cote D'Ivoire\" },\r\n    \"Sana'a\": { country: \"Yemen\" },\r\n    \"Santo Domingo\": { country: \"Dominican Republic\" },\r\n    \"Santo\": { country: \"Vanuatu\" },\r\n    \"Santos\": { country: \"Brazil\" },\r\n    \"Sao Tome\": { country: \"Sao Tome and Principe\" },\r\n    \"Scarborough\": { country: \"Trinidad and Tobago\" },\r\n    \"Sevastopol\": { country: \"Ukraine\" },\r\n    \"Sfax\": { country: \"Tunisia\" },\r\n    \"Shanghai\": { country: \"Peoples Republic of China\" },\r\n    \"Sharjah\": { country: \"United Arab Emirates\" },\r\n    \"Shenzhen\": { country: \"Peoples Republic of China\" },\r\n    \"Sibu Port\": { country: \"Malaysia\" },\r\n    \"Sidon\": { country: \"Lebanon\" },\r\n    \"Sihanoukville\": { country: \"Cambodia\" },\r\n    \"Singapore\": { country: \"Singapore\" },\r\n    \"Sinop\": { country: \"Turkey\" },\r\n    \"Sittwe\": { country: \"Myanmar\" },\r\n    \"Sochi\": { country: \"Russian Federation\" },\r\n    \"Socotra\": { country: \"Yemen\" },\r\n    \"Sohar\": { country: \"Oman\" },\r\n    \"Sokodé\": { country: \"Togo\" },\r\n    \"Southampton\": { country: \"United Kingdom\" },\r\n    \"Soyo\": { country: \"Angola\" },\r\n    \"Split\": { country: \"Croatia\" },\r\n    \"St. Croix\": { country: \"US Virgin Islands\" },\r\n    \"St. George\": { country: \"Grenada\" },\r\n    \"Stockholm\": { country: \"Sweden\" },\r\n    \"Suakin\": { country: \"Sudan\" },\r\n    \"Sur\": { country: \"Lebanon\" },\r\n    \"Surabaya\": { country: \"Indonesia\" },\r\n    \"Suva\": { country: \"Fiji\" },\r\n    \"Sydney\": { country: \"Australia\" },\r\n    \"Szczecin\": { country: \"Poland\" },\r\n    \"São Tomé\": { country: \"Sao Tome and Principe\" },\r\n    \"Tadjoura\": { country: \"Djibouti\" },\r\n    \"Tainan\": { country: \"Taiwan\" },\r\n    \"Tallinn\": { country: \"Estonia\" },\r\n    \"Tamatave (Toamasina)\": { country: \"Madagascar\" },\r\n    \"Tanajib\": { country: \"Saudi Arabia\" },\r\n    \"Tanjung Pelepas\": { country: \"Malaysia\" },\r\n    \"Tarawa\": { country: \"Kiribati\" },\r\n    \"Tartus\": { country: \"Syria\" },\r\n    \"Tauranga\": { country: \"New Zealand\" },\r\n    \"Tekirdag\": { country: \"Turkey\" },\r\n    \"Tema\": { country: \"Ghana\" },\r\n    \"Tianjin\": { country: \"Peoples Republic of China\" },\r\n    \"Tin Can Island\": { country: \"Nigeria\" },\r\n    \"Toamasina\": { country: \"Madagascar\" },\r\n    \"Toliara\": { country: \"Madagascar\" },\r\n    \"Tonga\": { country: \"Tonga\" },\r\n    \"Toripoli\": { country: \"Libya\" },\r\n    \"Trabzon\": { country: \"Turkey\" },\r\n    \"Trieste\": { country: \"Italy\" },\r\n    \"Trincomalee\": { country: \"Sri Lanka\" },\r\n    \"Tripoli\": { country: \"Lebanon\" },\r\n    \"Tunis\": { country: \"Tunisia\" },\r\n    \"Turkmenbashi\": { country: \"Turkmenistan\" },\r\n    \"Tyre\": { country: \"Lebanon\" },\r\n    \"Tórshavn\": { country: \"Faroe Islands\" },\r\n    \"ULAANBAATAR\": { country: \"Mongolia\" },\r\n    \"Ulcinj\": { country: \"Montenegro\" },\r\n    \"Umm Qasr\": { country: \"Iraq\" },\r\n    \"Ushuaia\": { country: \"Argentina\" },\r\n    \"Valletta\": { country: \"Malta\" },\r\n    \"Valparaíso\": { country: \"Chile\" },\r\n    \"Vancouver\": { country: \"Canada\" },\r\n    \"Varna\": { country: \"Bulgaria\" },\r\n    \"Veracruz\": { country: \"Mexico\" },\r\n    \"Victoria\": { country: \"Mahe (Seychelles)\" },\r\n    \"Visakhapatnam\": { country: \"India\" },\r\n    \"Vladivostok\": { country: \"Russian Federation\" },\r\n    \"Walvis Bay\": { country: \"Namibia\" },\r\n    \"Warri\": { country: \"Nigeria\" },\r\n    \"Wellington\": { country: \"New Zealand\" },\r\n    \"Willemstad\": { country: \"Curacao\" },\r\n    \"Yanbu\": { country: \"Saudi Arabia\" },\r\n    \"Yangon\": { country: \"Myanmar\" },\r\n    \"Yap\": { country: \"Micronesia\" },\r\n    \"Yaren\": { country: \"Nauru\" },\r\n    \"Yokohama\": { country: \"Japan\" },\r\n    \"Zeebrugge\": { country: \"Belgium\" },\r\n    \"Ziguinchor\": { country: \"Senegal\" },\r\n    \"Zonguldak\": { country: \"Turkey\" },\r\n}\r\n\r\n\r\nconst AddPortModal = ({ handleAddPortModalClose }) => {\r\n\r\n    const addPortModalVisible = useSelector((state) => state.addPortModalVisible);\r\n    const inputPortText = useRef(null);\r\n    const inputCountryText = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    const [addButtonLoading, setAddButtonLoading] = useState(false);\r\n\r\n    const handleAddButton = async () => {\r\n        setAddButtonLoading(true);\r\n        if (inputPortText.current?.value !== '' && inputCountryText.current?.value !== '') {\r\n            const countryCode = inputCountryText.current?.value;\r\n            const portCode = inputPortText.current?.value;\r\n            const formattedPortCode = portCode.replace(/\\./g, '_');\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            try {\r\n                await addPort(formattedPortCode, inputCountryText.current?.value, 9999);\r\n                const logData = {\r\n                    message: `Port Added: \"${nameVariable.text}\" added port \"${portCode}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Port Added: \"${nameVariable.text}\" added port \"${portCode}\" for Freight.`.toLowerCase(),\r\n                        'Port'.toLowerCase(),\r\n                        'Port Added'.toLowerCase(),\r\n                        'Added'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        portCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Port added successfully!</Text>\r\n                        </View>;\r\n                    }\r\n\r\n                })\r\n                dispatch(setAddPortModalVisible(false));\r\n                setAddButtonLoading(false);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        else {\r\n            setAddButtonLoading(false);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const filterInput = (inputRef) => {\r\n        const currentValue = inputRef.current.value;\r\n        const filteredValue = currentValue.replace(/[^a-zA-Z0-9. ]/g, '');\r\n        if (currentValue !== filteredValue) {\r\n            inputRef.current.setNativeProps({ text: filteredValue });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={addPortModalVisible}\r\n            onClose={() => {\r\n                handleAddPortModalClose();\r\n                inputPortText.current.value = '';\r\n            }}\r\n            size={'md'}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header style={{ backgroundColor: '#7B9CFF', }}><Text color={'white'} fontSize={20} bold>Add Port</Text></Modal.Header>\r\n                <Modal.Body >\r\n                    <View style={{ marginVertical: 5, }}>\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Port</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputPortText}\r\n                            onChangeText={() => filterInput(inputPortText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Port' />\r\n\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, marginTop: 10, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Country</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputCountryText}\r\n                            onChangeText={() => filterInput(inputCountryText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Country' />\r\n\r\n                    </View>\r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"solid\" space=\"2\">\r\n                        <Button colorScheme={'gray'} onPress={() => {\r\n                            handleAddPortModalClose();\r\n                            inputPortText.current.value = '';\r\n                        }}>Cancel</Button>\r\n                        {addButtonLoading ?\r\n                            (<Spinner size=\"lg\" color={'#16A34A'} />) :\r\n                            (<Button colorScheme={'success'} onPress={handleAddButton}>Add</Button>)\r\n                        }\r\n\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst DeletePortModal = ({ handleDeletePortModalClose }) => {\r\n    const deletePortModalVisible = useSelector((state) => state.deletePortModalVisible);\r\n    const [buttonLoading, setButtonLoading] = useState(false);\r\n\r\n    const handleDeletePort = async () => {\r\n        setButtonLoading(true);\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        const formattedFieldCode = selectedPort.replace(/\\./g, '_');\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        updateDoc(documentRef, {\r\n            [formattedFieldCode]: deleteField()\r\n        })\r\n            .then(() => {\r\n                console.log('Field deleted successfully');\r\n                handleDeletePortModalClose();\r\n                setButtonLoading(false);\r\n                const logData = {\r\n                    message: `Port Deleted: \"${nameVariable.text}\" deleted port \"${selectedPort}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: false,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Port Deleted: \"${nameVariable.text}\" deleted port \"${selectedPort}\" for Freight.`.toLowerCase(),\r\n                        'Port'.toLowerCase(),\r\n                        'Port Deleted'.toLowerCase(),\r\n                        'Deleted'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        selectedPort.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting field: ', error);\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal isOpen={deletePortModalVisible} onClose={handleDeletePortModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header>Delete Port?</Modal.Header>\r\n                <Modal.Body>\r\n                    Are you sure you want to delete the selected port?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        <TouchableOpacity\r\n                            style={{ flex: 1, backgroundColor: '#525252', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            onPress={handleDeletePortModalClose}\r\n                        >\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }}>No</Text>\r\n                        </TouchableOpacity>\r\n                        {buttonLoading ?\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            ><Spinner size={18} color={'white'} />\r\n                            </TouchableOpacity>) :\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                                onPress={handleDeletePort}\r\n                            >\r\n                                <Text style={{ color: 'white', alignSelf: 'center', }}>Yes</Text>\r\n                            </TouchableOpacity>)\r\n                        }\r\n\r\n\r\n                    </View>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst PortsTable = () => {\r\n    const dispatch = useDispatch();\r\n    const methodData = useSelector((state) => state.methodData);\r\n    const toast = useToast();\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const optionsPerPage = [10, 20, 50];\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const inputSearchRef = useRef(null);\r\n    const textAreaAddMethod = useRef(null);\r\n\r\n    const inputSortOrder = useRef([]);\r\n    const inputProfitPrice = useRef([]);\r\n    const inputNagoyaPrice = useRef([]);\r\n    const inputYokohamaPrice = useRef([]);\r\n    const inputKyushuPrice = useRef([]);\r\n    const inputKobePrice = useRef([]);\r\n    const inputMemo = useRef([]);\r\n\r\n    const [inputMemoValues, setInputMemoValues] = useState({});\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const handleSortOrderTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 3);\r\n\r\n        inputSortOrder.current[item.ports].value = numericValue;\r\n\r\n    };\r\n\r\n    const handleProfitPriceTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 4);\r\n\r\n        inputProfitPrice.current[item.ports].value = numericValue;\r\n\r\n    };\r\n\r\n\r\n    const updatePortsField = async (portCode, newValue, inputRef, title, fieldName) => {\r\n        // Specify the document reference\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = portCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const field = `${formattedCountryCode}.${fieldName}`;\r\n\r\n            try {\r\n                // Perform the update\r\n                await updateDoc(documentRef, {\r\n                    [field]: newValue\r\n                });\r\n\r\n                const logData = {\r\n                    message: `${title} Updated: \"${nameVariable.text}\" updated \"${portCode}\" ${title} to \"${newValue}\".`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `${title} Updated: \"${nameVariable.text}\" updated \"${portCode}\" ${title} to \"${newValue}\"`.toLowerCase(),\r\n                        `Sort`.toLowerCase(),\r\n                        `${title}`.toLowerCase(),\r\n                        `${title} Updated`.toLowerCase(),\r\n                        `Updated`.toLowerCase(),\r\n                        portCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>{title} updated successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                addLogToCollection(logData);\r\n                dispatch(setLoadingModalVisible(false));\r\n                console.log(`${title} updated successfully`);\r\n            } catch (error) {\r\n                console.error(`Error updating ${title}:`, error);\r\n\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter((item) =>\r\n            item.country.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.ports.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.sortOrder.toString().includes(searchQuery)\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce(() => {\r\n        setSearchQuery(inputSearchRef.current?.value);\r\n    }, 50);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    // useEffect(() => {\r\n    //     const portsDataWithSortOrder = Object.entries(portsList).reduce((acc, [portName, portDetails], index) => {\r\n    //         // Replace dots in portName with underscores\r\n    //         const sanitizedPortName = portName.replace(/\\./g, '_');\r\n    //         acc[sanitizedPortName] = { ...portDetails, sortOrder: index };\r\n    //         return acc;\r\n    //     }, {});\r\n\r\n    //     setDoc(doc(projectExtensionFirestore, \"CustomerCountryPort\", \"PortsDoc\"), portsDataWithSortOrder)\r\n    //         .then(() => {\r\n    //             console.log(\"Document successfully written!\");\r\n    //             dispatch(setLoadingModalVisible(false));\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(\"Error writing document: \", error);\r\n    //         });\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map(key => ({\r\n                        ports: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n                // setFilteredData(formattedData);\r\n                dispatch(setLoadingModalVisible(false));\r\n            } else {\r\n                console.log(\"No such document!\");\r\n                dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching countries: \", error);\r\n\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n\r\n    const handleAddMethodTextChange = () => {\r\n        const textAreaValue = textAreaAddMethod.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddMethod.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        paginatedData.forEach(item => {\r\n            inputMemo.current[item.ports].value = item.memo ? item.memo : '';\r\n            inputSortOrder.current[item.ports].value = item.sortOrder ? item.sortOrder : 0;\r\n            inputProfitPrice.current[item.ports].value = item.profitPrice ? item.profitPrice : 0;\r\n            inputNagoyaPrice.current[item.ports].value = item.nagoyaPrice ? item.nagoyaPrice : 0;\r\n            inputYokohamaPrice.current[item.ports].value = item.yokohamaPrice ? item.yokohamaPrice : 0;\r\n            inputKyushuPrice.current[item.ports].value = item.kyushuPrice ? item.kyushuPrice : 0;\r\n            inputKobePrice.current[item.ports].value = item.kobePrice ? item.kobePrice : 0;\r\n\r\n\r\n\r\n        });\r\n        // setInputMemoValues(initialValues);\r\n\r\n    }, [paginatedData]); // Run this effect when 'items' changes\r\n\r\n    const handleAddPortModalOpen = () => {\r\n\r\n        dispatch(setAddPortModalVisible(true));\r\n\r\n    }\r\n\r\n    const handleAddPortModalClose = () => {\r\n\r\n        dispatch(setAddPortModalVisible(false));\r\n\r\n    }\r\n\r\n    const handleDeletePortModalOpen = (selectedValue) => {\r\n\r\n        dispatch(setDeletePortModalVisible(true));\r\n        selectedPort = selectedValue;\r\n\r\n    }\r\n\r\n    const handleDeletePortModalClose = () => {\r\n\r\n        dispatch(setDeletePortModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {screenWidth >= 1280 ? (\r\n                <View style={{ flex: 1, }}>\r\n                    {/* Search Bar */}\r\n                    <View style={{ padding: 10 }}>\r\n                        <TextInput\r\n                            ref={inputSearchRef}\r\n                            onSubmitEditing={handleSearch}\r\n                            style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                            placeholder='Search'\r\n                            returnKeyType='search'\r\n                            autoCapitalize='none'\r\n                        />\r\n                    </View>\r\n\r\n                    {/* Add Port Button */}\r\n                    <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                        <TouchableOpacity\r\n                            onPress={handleAddPortModalOpen}\r\n                            style={{\r\n                                borderRadius: 5,\r\n                                padding: 10,\r\n                                borderWidth: 1,\r\n                                borderColor: 'white',\r\n                                backgroundColor: '#16A34A',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                            <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Port</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: '#E4E4E7',\r\n                            backgroundColor: '#0642F4',\r\n                            padding: 10,\r\n                            borderRadius: 5,\r\n                            marginTop: 10,\r\n                        }}\r\n                    >\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Port Name</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Price (USD)</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Nagoya</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Yokohama</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Kyushu</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Kobe</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, padding: 2, flexDirection: 'row' }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='MethodDoc'\r\n                                handleAddTextChange={handleAddMethodTextChange}\r\n                                textAreaAdd={textAreaAddMethod}\r\n                                title='Method'\r\n                                dataName={'methodData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Method\"\r\n                                data={methodData}\r\n                            />\r\n                            <Text style={{ color: 'white', }} bold>Method</Text>\r\n                        </View>\r\n                        <View style={{ flex: 2, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Memo</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n                    <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                        {paginatedData.map((item, index) => (\r\n                            <View\r\n                                key={index}\r\n                                style={{\r\n                                    flex: 1,\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'space-between',\r\n                                    alignItems: 'center',\r\n                                    borderBottomWidth: 1,\r\n                                    borderBottomColor: '#E4E4E7',\r\n                                    backgroundColor: '#BFDBFE',\r\n                                    paddingVertical: 10,\r\n                                }}>\r\n                                <Text style={{ flex: 1, marginHorizontal: 3 }} selectable>{item.ports}</Text>\r\n                                <Text style={{ flex: 1, marginHorizontal: 3, alignSelf: 'center' }} selectable>{item.country}</Text>\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.sortOrder ? item.sortOrder : 0}→</Text> */}\r\n                                    <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, borderLeftColor: '#E4E4E7', }}>\r\n                                        <TextInput\r\n                                            onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                            onSubmitEditing={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                            ref={(ref) => (inputSortOrder.current[item.ports] = ref)}\r\n                                            style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5 }}\r\n                                        />\r\n                                        <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                            <TouchableHighlight\r\n                                                onPress={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                style={{\r\n                                                    backgroundColor: '#16A34A',\r\n                                                    borderRadius: 5,\r\n                                                    padding: 5,\r\n                                                    margin: 2,\r\n                                                    alignSelf: 'center',\r\n                                                }}>\r\n                                                <MaterialIcons name='update' color='white' size={22} />\r\n                                            </TouchableHighlight>\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.profitPrice ? item.profitPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onChangeText={(text) => handleProfitPriceTextChange(text, item)}\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                        ref={(ref) => (inputProfitPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.nagoyaPrice ? item.nagoyaPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                        ref={(ref) => (inputNagoyaPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.yokohamaPrice ? item.yokohamaPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                        ref={(ref) => (inputYokohamaPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kyushuPrice ? item.kyushuPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                        ref={(ref) => (inputKyushuPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kobePrice ? item.kobePrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                        ref={(ref) => (inputKobePrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: screenWidth < 1800 ? 2 : 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    <SelectMethod defaultValue={item.method} portCode={item.ports} page={page} searchQuery={searchQuery} />\r\n                                </View>\r\n\r\n                                <View style={{ flex: 2, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n                                    <TextInput\r\n                                        multiline\r\n                                        // value={inputMemoValues[item.ports] || ''}\r\n                                        // onChangeText={(text) => handleMemoTextChange(text, item.ports)}\r\n                                        ref={(ref) => (inputMemo.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', flex: 2, height: 60, paddingLeft: 5, backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, }}\r\n                                    />\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputMemo.current[item.ports].value, inputMemo, 'Memo', 'memo')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => handleDeletePortModalOpen(item.ports)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#DC2626',\r\n                                                borderRadius: 5,\r\n                                                padding: 10,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <AntDesign name='delete' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n                                {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                            </View>\r\n                        ))}\r\n                        <DataTable.Pagination\r\n                            page={page}\r\n                            numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                            onPageChange={(page) => setPage(page)}\r\n                            label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                            optionsPerPage={optionsPerPage}\r\n                            itemsPerPage={itemsPerPage}\r\n                            setItemsPerPage={setItemsPerPage}\r\n                            showFastPagination\r\n                            optionsLabel={'Rows per page'}\r\n                        />\r\n                    </DataTable>\r\n                    <AddPortModal handleAddPortModalClose={handleAddPortModalClose} />\r\n                    <DeletePortModal handleDeletePortModalClose={handleDeletePortModalClose} />\r\n                </View>) :\r\n                (\r\n                    //Ports Table Mobile View\r\n                    <View style={{ flex: 1, }}>\r\n                        {/* Search Bar */}\r\n                        <View style={{ padding: 10 }}>\r\n                            <TextInput\r\n                                ref={inputSearchRef}\r\n                                onSubmitEditing={handleSearch}\r\n                                style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                                placeholder='Search'\r\n                                returnKeyType='search'\r\n                                autoCapitalize='none'\r\n                            />\r\n                        </View>\r\n\r\n                        {/* Add Port Button */}\r\n                        <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                            <TouchableOpacity\r\n                                onPress={handleAddPortModalOpen}\r\n                                style={{\r\n                                    borderRadius: 5,\r\n                                    padding: 10,\r\n                                    borderWidth: 1,\r\n                                    borderColor: 'white',\r\n                                    backgroundColor: '#16A34A',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                                <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Port</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n                        <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                            {paginatedData.map((item, index) => (\r\n                                <View\r\n                                    key={index}\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'column',\r\n                                        borderWidth: 1,\r\n                                        borderColor: '#E4E4E7',\r\n                                        backgroundColor: '#BFDBFE',\r\n                                        margin: 10,\r\n                                    }}>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Port Name</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <Text style={{ flex: 1, marginHorizontal: 3 }} selectable>{item.ports}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n                                            <Text style={{ flex: 1, marginHorizontal: 3, }} selectable>{item.country}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.sortOrder ? item.sortOrder : 0}→</Text> */}\r\n                                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, borderLeftColor: '#E4E4E7', }}>\r\n                                                    <TextInput\r\n                                                        onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                                        onSubmitEditing={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                        ref={(ref) => (inputSortOrder.current[item.ports] = ref)}\r\n                                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5 }}\r\n                                                    />\r\n                                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                        <TouchableHighlight\r\n                                                            onPress={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                            style={{\r\n                                                                backgroundColor: '#16A34A',\r\n                                                                borderRadius: 5,\r\n                                                                padding: 5,\r\n                                                                margin: 2,\r\n                                                                alignSelf: 'center',\r\n                                                            }}>\r\n                                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                                        </TouchableHighlight>\r\n                                                    </View>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Price (USD)</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.profitPrice ? item.profitPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onChangeText={(text) => handleProfitPriceTextChange(text, item)}\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                                    ref={(ref) => (inputProfitPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Nagoya</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.nagoyaPrice ? item.nagoyaPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                                    ref={(ref) => (inputNagoyaPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Yokohama</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.yokohamaPrice ? item.yokohamaPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                                    ref={(ref) => (inputYokohamaPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Kyushu</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kyushuPrice ? item.kyushuPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                                    ref={(ref) => (inputKyushuPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Kobe</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kobePrice ? item.kobePrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                                    ref={(ref) => (inputKobePrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Method</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                <SelectMethod defaultValue={item.method} portCode={item.ports} page={page} searchQuery={searchQuery} />\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Memo</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 2, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n                                                <TextInput\r\n                                                    multiline\r\n                                                    // value={inputMemoValues[item.ports] || ''}\r\n                                                    // onChangeText={(text) => handleMemoTextChange(text, item.ports)}\r\n                                                    ref={(ref) => (inputMemo.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', flex: 2, height: 60, paddingLeft: 5, backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, }}\r\n                                                />\r\n                                                <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputMemo.current[item.ports].value, inputMemo, 'Memo', 'memo')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            alignSelf: 'center',\r\n                                                            height: '100%',\r\n                                                            justifyContent: 'center',\r\n                                                            alignItems: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n                                                <View style={{ width: '100%', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => handleDeletePortModalOpen(item.ports)}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 6, }}>\r\n                                                        <AntDesign name='delete' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                    {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                    {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                                </View>\r\n                            ))}\r\n                            <DataTable.Pagination\r\n                                page={page}\r\n                                numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                onPageChange={(page) => setPage(page)}\r\n                                label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                optionsPerPage={optionsPerPage}\r\n                                itemsPerPage={itemsPerPage}\r\n                                setItemsPerPage={setItemsPerPage}\r\n                                showFastPagination\r\n                                optionsLabel={'Rows per page'}\r\n                            />\r\n                        </DataTable>\r\n                        <AddPortModal handleAddPortModalClose={handleAddPortModalClose} />\r\n                        <DeletePortModal handleDeletePortModalClose={handleDeletePortModalClose} />\r\n                    </View>\r\n                )}\r\n        </>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default function Freight() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const logo = require('../../assets/C-Hub.png');\r\n    const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n    const [isMobileView, setIsMobileView] = useState(false);\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    const navigation = useNavigation();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n\r\n\r\n    const loginName = useSelector((state) => state.loginName);\r\n    nameVariable.text = loginName;\r\n    const [name, setName] = useState(loginName);\r\n    const [time, setTime] = useState('');\r\n\r\n    const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n    const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n\r\n\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setSelectedButton(defaultSelectedButton));\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                navigation.navigate(\"Login\")\r\n            }\r\n        })\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(projectControlAuth)\r\n                    .then(() => {\r\n                        navigation.navigate('Login');\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(projectControlAuth)\r\n                .then(() => {\r\n                    navigation.navigate('Login');\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = projectControlAuth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const listenForNameChange = (documentId) => {\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(projectControlAuth).then(() => {\r\n            navigation.navigate('Login');\r\n            setEmail('');\r\n            setName('');\r\n        }).catch(() => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#7b9cff'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={2}\r\n                    borderBottomColor={'cyan.500'}\r\n                >\r\n\r\n                    <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image} />\r\n                    </Box>\r\n\r\n                    {screenWidth <= 960 && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen} />}\r\n\r\n\r\n                    <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image} />\r\n                    </Box>\r\n                    <NamePopover name={name} handleSignOut={handleSignOut} />\r\n\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\r\n                    {/* Sidebar */}\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen} />\r\n\r\n                    {/* Main Content */}\r\n                    {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n                    {/* Main Content Content */}\r\n\r\n\r\n                    {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n                    <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\r\n                        <ScrollView style={{ flex: 1, }} keyboardShouldPersistTaps='always'>\r\n                            <View style={{ flex: 1, }}>\r\n\r\n                                <FreightNavigation />\r\n                                <NavigatePage />\r\n                                {/* {selectedButton == 'countries' ? <CountriesTable /> : <></>}\r\n                                {selectedButton == 'ports' ? <PortsTable /> : <></>} */}\r\n                            </View>\r\n                        </ScrollView>\r\n                        {/* <SuccessModal /> */}\r\n\r\n                    </View>\r\n\r\n\r\n                    {/* </Box> */}\r\n\r\n                    {/* </Box> */}\r\n                </View>\r\n\r\n            </View>\r\n            <LoadingModal />\r\n\r\n        </>\r\n    );\r\n}","import { useState } from \"react\";\r\nimport { View, Dimensions, StyleSheet, Image } from \"react-native\";\r\nimport { Box, Flex, Popover, Button, Text } from \"native-base\";\r\nimport FastImage from \"react-native-fast-image-web-support\";\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo,\r\n  FontAwesome5,\r\n  EvilIcons\r\n} from 'react-native-vector-icons';\r\n\r\nimport MobileViewDrawer from \"../SideDrawer/MobileViewDrawer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst NamePopover = ({ name, handleSignOut }) => {\r\n  const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n  const showPopover = () => {\r\n    setShowNamePopover(!showNamePopover);\r\n  };\r\n\r\n  return (\r\n    <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n      <Flex direction=\"row-reverse\">\r\n        <Popover\r\n          isOpen={showNamePopover}\r\n          trigger={(triggerProps) => (\r\n            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n              <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n            </Text>\r\n          )}\r\n          onClose={() => setShowNamePopover(!showNamePopover)}\r\n          placement='bottom right'\r\n          trapFocus={false}\r\n        >\r\n          <Popover.Content backgroundColor={'#7B9CFF'}>\r\n            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n              <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                Logout\r\n              </Button>\r\n            </Popover.Body>\r\n          </Popover.Content>\r\n        </Popover>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst StickyHeader = ({ selectedScreen, handleSignOut }) => {\r\n  const loginName = useSelector((state) => state.loginName);\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  // const logo = require('https://i.imgur.com/V98nKSK.png');\r\n  // const logo2 = require('https://i.imgur.com/NGCIoSV.png');\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  return (\r\n\r\n    <Box\r\n      px=\"3\"\r\n      bgColor='#7b9cff'\r\n      height={54}\r\n      position=\"sticky\"\r\n      top={0}\r\n      zIndex={999}\r\n      flexDirection=\"row\"\r\n      alignItems=\"center\"\r\n      borderBottomWidth={2}\r\n      borderBottomColor={'cyan.500'} >\r\n\r\n      <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n        <Image\r\n          source={{ uri: 'https://i.imgur.com/V98nKSK.png' }}\r\n          style={styles.image}\r\n          resizeMode=\"stretch\"\r\n        />\r\n      </Box>\r\n\r\n      {screenWidth <= 960 && <MobileViewDrawer\r\n        selectedScreen={selectedScreen}\r\n      />}\r\n\r\n\r\n      <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n      <Image\r\n          source={{ uri: 'https://i.imgur.com/NGCIoSV.png' }}\r\n          style={styles.image}\r\n          resizeMode=\"stretch\"\r\n        />\r\n      </Box>\r\n\r\n      <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n    </Box>\r\n\r\n  );\r\n}\r\n\r\nexport default StickyHeader;","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Keyboard } from 'react-native';\r\nimport {\r\n    Input,\r\n    Icon,\r\n    Stack,\r\n    Pressable,\r\n    Center,\r\n    PresenceTransition,\r\n    NativeBaseProvider,\r\n    Button,\r\n    Box,\r\n    HStack,\r\n    Image,\r\n    Container,\r\n    Header,\r\n    Left,\r\n    Body,\r\n    Title,\r\n    Content,\r\n    Text,\r\n    Heading,\r\n    Flex,\r\n    VStack,\r\n    ScrollView,\r\n    SectionList,\r\n    useBreakpointValue,\r\n    Spinner,\r\n    Modal,\r\n    Divider,\r\n    IconButton,\r\n    Popover\r\n} from \"native-base\";\r\nimport { DataTable } from 'react-native-paper';\r\nimport {\r\n    FontAwesome,\r\n    Entypo,\r\n    MaterialIcons,\r\n    Ionicons,\r\n    Fontisto,\r\n    EvilIcons,\r\n    AntDesign,\r\n    MaterialCommunityIcons,\r\n    Feather,\r\n    FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, limit } from '../../firebasecontrol'\r\nimport { arrayUnion, where, startAfter, endBefore, limitToLast, collectionGroup } from 'firebase/firestore';\r\nimport { projectExtensionFirestore, projectControlFirestore } from '../../crossFirebase';\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './../style.css';\r\nimport { debounce, set, throttle } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { bg } from 'date-fns/locale';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { LineChart, BarChart } from 'react-native-chart-kit';\r\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from 'victory';\r\nimport {\r\n    OPEN_EXCHANGE_API_KEY\r\n} from '@env';\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\nimport {\r\n    setLogsData,\r\n    setLoadingModalVisible,\r\n} from './redux/store';\r\nlet selectedScreen = 'LOGS'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const addKeywordsToLogs = async () =>{\r\n//     const logsRef = collection(projectControlFirestore, \"logs\");\r\n\r\n//     try {\r\n//       const querySnapshot = await getDocs(logsRef);\r\n\r\n//       querySnapshot.forEach((doc) => {\r\n//         const data = doc.data();\r\n//         const keywords = [\r\n//           data.timestamp,\r\n//           data.message,\r\n//         ];\r\n\r\n//         updateDoc(doc.ref, {\r\n//           keywords: arrayUnion(...keywords)\r\n//         });\r\n//       });\r\n\r\n//       console.log(\"Keywords added successfully to logs collection.\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding keywords to logs collection:\", error);\r\n//     }\r\n//   }\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nconst LogsTable = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [firstVisible, setFirstVisible] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const searchInputRef = useRef(null);\r\n    const logsData = useSelector((state) => state.logsData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(projectControlFirestore, 'logs'),\r\n            orderBy('timestamp', 'desc'),\r\n            limit(pageSize)\r\n        );\r\n        const unsubscribe = onSnapshot(q, (documents) => {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n            dispatch(setLogsData(logsDatabaseData));\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            setFirstVisible(documents.docs[0]);\r\n        });\r\n        return () => unsubscribe();\r\n\r\n    }, []);\r\n\r\n    const fetchNextData = async () => {\r\n\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collectionGroup(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n        }\r\n\r\n        else {\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const fetchPreviousData = async () => {\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev')\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev');\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchFirstPage = (documents) => {\r\n\r\n\r\n        const logsDatabaseData = [];\r\n\r\n        documents.forEach((document) => {\r\n            logsDatabaseData.push({\r\n                id: document.id,\r\n                ...document.data(),\r\n            });\r\n        });\r\n\r\n        dispatch(setLogsData(logsDatabaseData));\r\n\r\n        if (documents?.docs[0]) {\r\n            setFirstVisible(documents.docs[0]);\r\n        }\r\n        if (documents?.docs[documents.docs.length - 1]) {\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n        if (!documents.empty) {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n\r\n\r\n\r\n            if (documents?.docs[0]) {\r\n                setFirstVisible(documents.docs[0]);\r\n            }\r\n            if (documents?.docs[documents.docs.length - 1]) {\r\n                setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            }\r\n\r\n            if (pageClicked == 'next') {\r\n                setCurrentPage(currentPage + 1);\r\n            }\r\n            if (pageClicked == 'prev') {\r\n                setCurrentPage(currentPage - 1);\r\n            }\r\n\r\n            dispatch(setLogsData(logsDatabaseData));\r\n        }\r\n\r\n        else {\r\n\r\n            if (searchText == '') {\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n            else {\r\n\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleNextPage = async () => {\r\n        // setPageClicked('next');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage + 1);\r\n        await fetchNextData();\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handlePreviousPage = async () => {\r\n        // setPageClicked('previous');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage - 1);\r\n        await fetchPreviousData();\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        searchData();\r\n\r\n    }, [searchText]);\r\n\r\n    const searchData = async () => {\r\n\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        if (searchText === '') {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n    };\r\n\r\n    const handleSearchEnter = () => {\r\n\r\n        if (searchInputRef.current?.value !== '') {\r\n            setSearchText(searchInputRef.current.value.trim());\r\n        }\r\n        else {\r\n            setSearchText('');\r\n\r\n            if (searchText == '') {\r\n                searchData();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={{ flex: 1, }}>\r\n            <View>\r\n                <TextInput ref={searchInputRef} style={{ width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\r\n                    onSubmitEditing={handleSearchEnter}\r\n                    placeholder='Search'\r\n                    returnKeyType='search'\r\n                    keyboardType='default'\r\n                    autoCapitalize='none'\r\n                />\r\n            </View>\r\n            <View\r\n                style={{\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between',\r\n                    borderBottomWidth: 1,\r\n                    borderBottomColor: '#E4E4E7',\r\n                    backgroundColor: '#0642F4',\r\n                    padding: 2,\r\n                    borderRadius: 5,\r\n                }}>\r\n                <View style={{ flex: 1, padding: 2 }}>\r\n                    <Text style={{ color: 'white', }} bold>Timestamp</Text>\r\n                </View>\r\n                <View style={{ flex: 1, padding: 2 }}>\r\n                    <Text style={{ color: 'white', }} bold>Action</Text>\r\n                </View>\r\n            </View>\r\n            {logsData.map((item) => (\r\n                <View\r\n                    key={item.id}\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#E4E4E7',\r\n                        backgroundColor: item.colorScheme ? '#BBF7D0' : '#EAC7D6',\r\n                        paddingVertical: 10,\r\n                        flexGrow: 1,\r\n                    }}>\r\n                    <View style={{ flex: 1, }}>\r\n                        <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.timestamp}</Text>\r\n                    </View>\r\n                    <View style={{ flex: 1 }}>\r\n                        <Text selectable style={{ width: '90%', }}>{item.message} </Text>\r\n                    </View>\r\n                </View>\r\n            ))}\r\n\r\n            <View style={{ flexDirection: 'row', width: screenWidth < 960 ? '90%' : '30%', alignSelf: 'center', }}>\r\n\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <TouchableOpacity\r\n                        style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                        onPress={handlePreviousPage}>\r\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                            <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n                <View style={{ flex: 1, backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n                </View>\r\n\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                    <TouchableOpacity\r\n                        onPress={handleNextPage}>\r\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                            <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n            <TouchableOpacity\r\n              onPress={addKeywordsToVehicleProducts}>\r\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                <MaterialIcons name='save' size={40} color={'white'} />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View> */}\r\n\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n\r\n};\r\n\r\nconst addLogToCollection = async (data) => {\r\n    try {\r\n        const firestore = getFirestore();\r\n        const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n        // Add a new document to the \"logs\" collection\r\n        await addDoc(logsCollectionRef, data);\r\n\r\n        // console.log('Document added successfully!');\r\n    } catch (error) {\r\n        console.error('Error adding document:', error);\r\n    }\r\n};\r\n\r\nconst CurrencyConverterComponent = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n    const [successModalVisible, setSuccessModalVisible] = useState(false);\r\n    const [todayCurrency, setTodayCurrency] = useState([]);\r\n    const [timestampCurrency, setTimestampCurrency] = useState([]);\r\n    const [exchangeRate, setExchangeRate] = useState('');\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [time, setTime] = useState('');\r\n    const [lastUpdate, setLastUpdate] = useState(null);\r\n    const loginName = useSelector((state) => state.loginName);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onSnapshot(\r\n            doc(projectExtensionFirestore, 'currency', 'currency'),\r\n            (snapshot) => {\r\n                const data = snapshot.data();\r\n                setTodayCurrency(data?.todayCurrency);\r\n                setTimestampCurrency(data?.timestampCurrency);\r\n            }\r\n        );\r\n\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const CurrencyConverter = async () => {\r\n\r\n        setIsLoading(true);\r\n        setIsYesLoading(true);\r\n        try {\r\n            const response = await axios.get(\r\n                `https://openexchangerates.org/api/latest.json?app_id=${OPEN_EXCHANGE_API_KEY}`\r\n            );\r\n\r\n            // Replace 'YOUR_APP_ID' with your actual API key obtained from Open Exchange Rates\r\n\r\n\r\n            const rates = response.data.rates;\r\n            const usdToJpy = 1 / rates.JPY; // Invert the rate to convert USD to JPY\r\n            const JpyToUsd = rates.JPY / 1;\r\n\r\n\r\n\r\n            const yenToDollar = Number(usdToJpy.toFixed(4)); // Move the toFixed here\r\n            const dollarToYen = Number(JpyToUsd.toFixed(4));\r\n\r\n            const usdToEur = 1 / rates.EUR;\r\n            const eurToUsd = rates.EUR;\r\n\r\n            const usdToGbp = 1 / rates.GBP;\r\n            const gbpToUsd = rates.GBP;\r\n\r\n            const usdToAud = 1 / rates.AUD;\r\n            const audToUsd = rates.AUD;\r\n\r\n\r\n            const usdToCad = 1 / rates.CAD;\r\n            const cadToUsd = rates.CAD;\r\n\r\n            // Calculate Yen to Euro and Euro to Yen\r\n            const yenToEuro = yenToDollar * eurToUsd; // Convert Yen to USD first, then to Euro\r\n            const euroToYen = dollarToYen * usdToEur; // Convert Euro to USD first, then to Yen\r\n\r\n            const yenToGbp = yenToDollar * gbpToUsd; // Convert Yen to USD first, then to Pound Sterling\r\n            const gbpToYen = dollarToYen * usdToGbp; // Convert Pound Sterling to USD first, then to Yen\r\n\r\n            const yenToAud = yenToDollar * audToUsd; // Convert Yen to USD first, then to Australian Dollars\r\n            const audToYen = dollarToYen * usdToAud; // Convert Australian Dollars to USD first, then to Yen\r\n\r\n            const yenToCad = yenToDollar * cadToUsd; // Convert Yen to USD first, then to Canadian Dollars\r\n            const cadToYen = dollarToYen * usdToCad; // Convert Canadian Dollars to USD first, then to Yen\r\n\r\n            // Format the new rates\r\n\r\n\r\n\r\n            setExchangeRate(yenToDollar);\r\n\r\n            const timestamp = response.data.timestamp;\r\n            const lastUpdateDate = new Date(timestamp * 1000);\r\n            setLastUpdate(lastUpdateDate);\r\n\r\n            const formattedLastUpdate = lastUpdateDate.toLocaleString('en-US', {\r\n                month: 'long',\r\n                day: 'numeric',\r\n                year: 'numeric',\r\n                hour: 'numeric',\r\n                minute: 'numeric',\r\n                second: 'numeric',\r\n                timeZoneName: 'short',\r\n            });\r\n\r\n            const newTodayCurrency = `1 JPY = ${yenToDollar} USD / 1 USD = ${dollarToYen} JPY\\n1 JPY = ${yenToEuro.toFixed(4)} EUR / 1 EUR = ${euroToYen.toFixed(4)} JPY\\n1 JPY = ${yenToAud.toFixed(4)} AUD / 1 AUD = ${audToYen.toFixed(4)} JPY\\n1 JPY = ${yenToGbp.toFixed(4)} GBP / 1 GBP = ${gbpToYen.toFixed(4)} JPY\\n1 JPY = ${yenToCad.toFixed(4)} CAD / 1 CAD = ${cadToYen.toFixed(4)} JPY\\n`;\r\n            const currencyRef = doc(projectExtensionFirestore, 'currency', 'currency');\r\n\r\n            try {\r\n                await setDoc(currencyRef, {\r\n                    jpyToUsd: Number(usdToJpy),\r\n                    usdToJpy: Number(JpyToUsd),\r\n                    jpyToEur: yenToEuro,\r\n                    eurToJpy: euroToYen,\r\n                    jpyToGbp: yenToGbp,\r\n                    gbpToJpy: gbpToYen,\r\n                    jpyToAud: yenToAud,\r\n                    audToJpy: audToYen,\r\n                    usdToEur: eurToUsd,\r\n                    eurToUsd: usdToEur,\r\n                    usdToGbp: gbpToUsd,\r\n                    gbpToUsd: usdToGbp,\r\n                    usdToAud: audToUsd,\r\n                    audToUsd: usdToAud,\r\n                    cadToUsd: usdToCad,\r\n                    usdToCad: cadToUsd,\r\n                    jpyToCad: cadToYen,\r\n                    cadToJpy: yenToCad,\r\n                    todayCurrency: newTodayCurrency,\r\n                    timestampCurrency: 'Updated Last: ' + formattedLastUpdate,\r\n                }, { merge: true });\r\n                // console.log('Currency data updated successfully!');\r\n                setSuccessModalVisible(true);\r\n                setModalVisible(false);\r\n                setIsLoading(false);\r\n                setIsYesLoading(false);\r\n                try {\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime(formattedTime);\r\n\r\n                    const logDataCurrency = {\r\n                        message: `Currency Update: \"${loginName}\" updated the currency exchange.\\n¥JPY → $USD = ${Number(usdToJpy).toFixed(4)} / $USD → ¥JPY = ${Number(JpyToUsd).toFixed(4)}\\n¥JPY → €EUR = ${yenToEuro.toFixed(4)} / €EUR → ¥JPY = ${euroToYen.toFixed(4)}\\n¥JPY → A$AUD = ${yenToAud.toFixed(4)} / A$AUD → ¥JPY = ${audToYen.toFixed(4)}\\n¥JPY → £GBP = ${yenToGbp.toFixed(4)} / £GBP → ¥JPY = ${gbpToYen.toFixed(4)}\\n¥JPY → C$CAD = ${yenToCad.toFixed(4)} / C$CAD → ¥JPY = ${cadToYen.toFixed(4)}`,\r\n                        timestamp: formattedTime, // Use the formatted time here\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            loginName.toLowerCase(),\r\n                            '$'.toLowerCase(),\r\n                            '¥'.toLowerCase(),\r\n                            `Currency Update: \"${loginName}\" updated the currency exchange.`.toLowerCase(),\r\n                            'Update'.toLowerCase(),\r\n                            'Currency'.toLowerCase(),\r\n                            formattedTime.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n\r\n                    };\r\n\r\n                    addLogToCollection(logDataCurrency);\r\n                }\r\n                catch (error) {\r\n                    console.error('Error fetching time:', error);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Error updating currency data:', error);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching exchange rate:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleCloseCurrencyModal = () => {\r\n        setModalVisible(false);\r\n        setIsLoading(false);\r\n    };\r\n    const handleOpenCurrencyModal = () => {\r\n        setModalVisible(true);\r\n        setIsLoading(true);\r\n    };\r\n\r\n    const handleCloseSuccessModal = () => {\r\n        setSuccessModalVisible(false);\r\n        setIsLoading(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                flex={1}\r\n                borderWidth={1}\r\n                borderColor=\"gray.200\"\r\n                borderRadius={4}\r\n                overflow=\"hidden\"\r\n                margin={1}\r\n                alignItems={'center'}\r\n                bg=\"#F5F5F5\">\r\n                <Image\r\n                    source={require('../../assets/currency_background.jpg')}\r\n                    alt=\"Background Image\"\r\n                    resizeMode=\"stretch\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    position={'absolute'}\r\n\r\n                />\r\n\r\n                <Center height=\"100%\">\r\n\r\n                    <Box alignItems=\"center\" backgroundColor={\"rgba(0, 0, 0, 0.7)\"} borderRadius={5} paddingBottom={1}>\r\n\r\n                        <Text bold color=\"#39ff14\" margin={1} textAlign={'center'} fontSize={screenWidth > 960 ? '' : 12} >{todayCurrency}</Text>\r\n                        <Text textAlign=\"center\" color=\"#39ff14\" margin={1} fontSize={screenWidth > 960 ? '' : 12}>{timestampCurrency}</Text>\r\n                        <Button alignSelf={'center'} w={'95%'} _hover={{ bgColor: \"green.800\" }} bgColor={'transparent'} variant={'outline'} borderColor={\"#39ff14\"} _text={{ color: \"#39ff14\", }} onPress={handleOpenCurrencyModal}>{isLoading ? <Spinner color=\"#39ff14\" size={21} /> : 'Update'}</Button>\r\n\r\n                    </Box>\r\n\r\n                </Center>\r\n\r\n            </Box>\r\n\r\n            <Modal isOpen={modalVisible} onClose={handleCloseCurrencyModal}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>Update currency</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to update to the latest currency?\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <Button onPress={handleCloseCurrencyModal} flex={1} margin={1} colorScheme={'danger'}>No</Button>\r\n                        <Button onPress={CurrencyConverter} colorScheme={'success'} flex={1} margin={1}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal><Modal isOpen={successModalVisible} onClose={handleCloseSuccessModal}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header bgColor={'green.200'} borderBottomWidth={0}>Update success!</Modal.Header>\r\n                    <Modal.Body bgColor={'green.200'}>\r\n                        <Text bold margin={1}>{todayCurrency}</Text>\r\n                        <Text margin={1}>{timestampCurrency}</Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer bgColor={'green.200'} borderTopWidth={0}>\r\n                        <Button onPress={handleCloseSuccessModal} flex={1} margin={1}>Ok</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nconst MyBarChart = () => {\r\n    const dataValues = [\r\n        { day: 1, value: 30 },\r\n        { day: 2, value: 45 },\r\n        // ... add data for each day of the month\r\n        { day: 31, value: 60 }\r\n    ];\r\n\r\n    return (\r\n        <ScrollView style={{ flex: 1, margin: 5, borderRadius: 5, }}>\r\n            <VictoryChart\r\n                theme={VictoryTheme.material}\r\n                domainPadding={10}\r\n                style={{\r\n                    parent: {\r\n                        backgroundColor: \"#FFF\", // White background\r\n                    }\r\n                }}\r\n            >\r\n                <VictoryAxis\r\n                    style={{\r\n                        axis: { stroke: \"#757575\" }, // Style for the axis itself\r\n                        ticks: { stroke: \"grey\", size: 5 }, // Style for axis ticks\r\n                        tickLabels: { fontSize: 10, padding: 5, fill: \"grey\" } // Style for the labels\r\n                    }}\r\n                />\r\n                <VictoryAxis\r\n                    dependentAxis\r\n                    style={{\r\n                        axis: { stroke: \"#757575\" },\r\n                        ticks: { stroke: \"grey\", size: 5 },\r\n                        tickLabels: { fontSize: 10, padding: 5, fill: \"grey\" }\r\n                    }}\r\n                />\r\n                <VictoryBar\r\n                    data={dataValues}\r\n                    x=\"day\"\r\n                    y=\"value\"\r\n                    style={{\r\n                        data: {\r\n                            fill: ({ datum }) => datum.value > 50 ? \"#4178BE\" : \"#5AA9E6\", // Blue shades for bars\r\n                            width: 8 // Width of each bar\r\n                        }\r\n                    }}\r\n                    barRatio={0.8} // Adjusts the width of the bars\r\n                />\r\n            </VictoryChart>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\n\r\nexport default function Logs() {\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const loginName = useSelector((state) => state.loginName);\r\n\r\n    // const navigation = useNavigation();\r\n\r\n    const [isSelectedLogs, setIsSelectedLogs] = useState(true);\r\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\r\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    const [remainingTime, setRemainingTime] = useState(0);\r\n    const [todayCurrency, setTodayCurrency] = useState('')\r\n    const [timestampCurrency, setTimestampCurrency] = useState('');\r\n    const [exchangeRate, setExchangeRate] = useState(null);\r\n    const [lastUpdate, setLastUpdate] = useState(null);\r\n\r\n    const [time, setTime] = useState('');\r\n    const optionsPerPage = [13, 26, 52];\r\n    const [page, setPage] = useState(0);\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    const searchInput = useRef(null);\r\n    const searchInputValue = searchInput.current?.value;\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'logs'), orderBy('timestamp', 'desc'));\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                    setData(documents);\r\n                });\r\n\r\n                return () => unsubscribe();\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // const delayedSearch = (text) => {\r\n    //     clearTimeout(timeoutId);\r\n    //     timeoutId = setTimeout(() => {\r\n    //         handleSearch(text);\r\n    //     }, 300); // Set the delay to 300 milliseconds\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n    // const handleChange = text => {\r\n    //     setEmail(text)\r\n    //     setErrorShow(false)\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const SuccessModal = () => {\r\n        return <Center>\r\n            <Modal isOpen={showModal} onClose={() => setShowModal(false)} size=\"lg\"  >\r\n                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n                    <Modal.Body >\r\n                        <Text color=\"white\" textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowModal(false)}>\r\n                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </Center>;\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                // navigation.navigate(\"Login\")\r\n                navigate(\"/Login\");\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(auth)\r\n                    .then(() => {\r\n                        // navigation.navigate('Login');\r\n                        navigate(\"/Login\");\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(auth)\r\n                .then(() => {\r\n                    // navigation.navigate('Login');\r\n                    navigate(\"/Login\");\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = auth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n    const listenForNameChange = (documentId) => {\r\n        const userRef = doc(db, 'accounts', documentId);\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(auth).then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n            setEmail('');\r\n            setName('');\r\n        }).catch(() => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n    // Function to hide the Popover\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n    return (\r\n        <NativeBaseProvider>\r\n            <SuccessModal />\r\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#7b9cff'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={2}\r\n                    borderBottomColor={'cyan.500'} >\r\n\r\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    {/* \r\n                    {showDrawerIcon && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen} />} */}\r\n\r\n\r\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n\r\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <Box flex={[1]} flexDirection=\"row\" >\r\n                    {/* Sidebar */}\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    />\r\n\r\n                    {/* Main Content */}\r\n                    <Box flex={1} flexGrow={1} minHeight={0} flexDirection={screenWidth <= 960 ? 'column' : 'row'}>\r\n                        {/* Main Content Content */}\r\n\r\n\r\n\r\n                        <Box flex={1}>\r\n                            <CurrencyConverterComponent />\r\n                            <MyBarChart />\r\n                        </Box>\r\n\r\n\r\n\r\n                        <Box flex={1} height={'100%'}>\r\n                            <ScrollView flex={1}>\r\n                                <LogsTable />\r\n                            </ScrollView>\r\n\r\n\r\n                        </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <LoadingModal />\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","\r\nimport {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  HStack,\r\n  Modal,\r\n  Text,\r\n  VStack,\r\n  ScrollView,\r\n\r\n} from 'native-base';\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo\r\n} from 'react-native-vector-icons';\r\nimport { View, TouchableOpacity, Easing, Image, Dimensions, Animated } from 'react-native';\r\nimport { TouchableHighlight } from 'react-native-gesture-handler';\r\nimport { useNavigation } from '@react-navigation/core';\r\n\r\n\r\n\r\nconst MobileViewDrawer = ({ selectedScreen }) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const logo2 = require('../../../assets/C-Hub Logo Only.png');\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const handleOpen = () => {\r\n\r\n    setIsOpen(true);\r\n\r\n  }\r\n  const handleClose = () => {\r\n\r\n    setIsOpen(false);\r\n\r\n  }\r\n\r\n  const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"LOGS\");\r\n  }, []);\r\n\r\n  const handleToggleAddAccount = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  }, []);\r\n\r\n  const handleToggleAccountList = useCallback(() => {\r\n\r\n    navigation.navigate(\"ACCOUNT LIST\");\r\n  }, []);\r\n\r\n  const handleToggleAddVehicle = useCallback(() => {\r\n\r\n    navigation.navigate(\"ADD NEW VEHICLE\");\r\n  }, []);\r\n\r\n\r\n  const handleVehicleList = useCallback(() => {\r\n    navigation.navigate(\"VEHICLE LIST\");\r\n  }, []);\r\n\r\n\r\n  const handleFreight = useCallback(() => {\r\n    navigation.navigate(\"FREIGHT\");\r\n  }, []);\r\n\r\n  const handleChatMessages = useCallback(() => {\r\n    navigation.navigate(\"CHAT MESSAGES\");\r\n  }, []);\r\n\r\n\r\n  const slideAnimation = useRef(new Animated.Value(0)).current;\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      Animated.timing(slideAnimation, {\r\n        toValue: 1,\r\n        duration: 500,\r\n        easing: Easing.inOut(Easing.ease),\r\n        useNativeDriver: true,\r\n      }).start();\r\n    } else {\r\n      Animated.timing(slideAnimation, {\r\n        toValue: 0,\r\n        duration: 500,\r\n        easing: Easing.inOut(Easing.ease),\r\n        useNativeDriver: true,\r\n      }).start();\r\n    }\r\n  }, [isOpen, slideAnimation]);\r\n\r\n  return (\r\n\r\n    <>\r\n      <TouchableHighlight onPress={() => handleOpen()} onPressOut={() => handleOpen()} underlayColor=\"#5a7bc9\" style={{ borderRadius: 5, flex: 1 }}>\r\n        <FontAwesome name=\"navicon\" size={30} color=\"white\" style={{ margin: 2 }} />\r\n      </TouchableHighlight>\r\n\r\n\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onClose={handleClose}\r\n        useRNModal\r\n        style={{\r\n          alignItems: 'flex-start',\r\n          justifyContent: 'flex-start',\r\n          height: '100%',\r\n\r\n        }}\r\n      >\r\n        <Modal.Content\r\n          maxWidth={255}\r\n          borderRadius={0}\r\n          maxHeight=\"100%\"\r\n          height=\"full\"\r\n          bgColor={'transparent'}\r\n        >\r\n          <Animated.View\r\n            style={{\r\n              flex: 1,\r\n              transform: [\r\n                {\r\n                  translateX: slideAnimation.interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [-255, 0],\r\n                  }),\r\n                },\r\n              ],\r\n            }}\r\n          >\r\n            <View style={{ backgroundColor: '#7b9cff', flex: 1, borderRightWidth: 2, borderColor: 'cyan' }}>\r\n              <View style={{ flex: 1, }}>\r\n\r\n                <View style={{ flexDirection: 'row', margin: 3, justifyContent: 'space-between' }}>\r\n                  <View style={{ width: '80%', alignItems: 'center', justifyContent: 'center' }}>\r\n                    <Image\r\n                      source={{\r\n                        uri: logo2,\r\n                      }}\r\n                      resizeMode=\"stretch\"\r\n                      style={{ width: 170, height: 30 }}\r\n                    />\r\n                  </View>\r\n                  <TouchableOpacity\r\n                    style={{ flexDirection: 'row', alignItems: 'flex-end', marginVertical: 1.5, marginHorizontal: 1.5 }}\r\n                  >\r\n                    <MaterialIcons\r\n                      name=\"arrow-back\"\r\n                      size={30}\r\n                      color=\"white\"\r\n                      onPress={handleClose}\r\n                    />\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* Sidebar Content */}\r\n                <View style={{ paddingHorizontal: 1, backgroundColor: '#7b9cff', flex: 1 }}>\r\n                  <ScrollView>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderTopWidth: 1,\r\n                        borderColor: 'white',\r\n                        backgroundColor: selectedScreen == 'LOGS' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleLogs}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <MaterialCommunityIcons name=\"history\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          LOGS\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n\r\n                    {/* ACCOUNT MANAGEMENT */}\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAddAccount}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n\r\n                        <MaterialIcons name=\"person-add\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          ADD C-HUB ACCOUNT\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAccountList}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <MaterialCommunityIcons name=\"account-details\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          ACCOUNT LIST\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n                    {/* VEHICLE INFORMATION INPUT */}\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAddVehicle}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 4, }}>\r\n                          <FontAwesome name=\"automobile\" size={15} color=\"white\" />\r\n                          <FontAwesome\r\n                            name=\"plus\"\r\n                            size={10}\r\n                            color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          UPDATE / ADD NEW VEHICLE\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleVehicleList}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <FontAwesome\r\n                            name=\"automobile\"\r\n                            size={15}\r\n                            color=\"white\" />\r\n\r\n                          <MaterialCommunityIcons name=\"format-list-bulleted\" size={10} color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          VEHICLE LIST\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'FREIGHT' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleFreight}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <MaterialIcons\r\n                            name=\"public\"\r\n                            size={20}\r\n                            color=\"white\" />\r\n\r\n                          <MaterialIcons name=\"sync\" size={12} color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          FREIGHT\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleChatMessages}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <Entypo\r\n                            name=\"chat\"\r\n                            size={20}\r\n                            color=\"white\" />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          CHAT MESSAGES\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    {/* Footer Content */}\r\n                    {/* <TouchableOpacity\r\n              style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\r\n              onPress={handleSignOut}\r\n            >\r\n              <Text style={{ color: 'white', textAlign: 'center' }}>\r\n                Logout\r\n              </Text>\r\n            </TouchableOpacity> */}\r\n                  </ScrollView>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </Animated.View>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default MobileViewDrawer;","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    HStack,\r\n    Modal,\r\n    Text,\r\n    VStack,\r\n    ScrollView,\r\n\r\n} from 'native-base';\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo\r\n} from 'react-native-vector-icons';\r\nimport { View, TouchableOpacity, Easing, Image, Dimensions, Animated, Pressable } from 'react-native';\r\nimport { TouchableHighlight } from 'react-native-gesture-handler';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { HashRouter as Router, Route, Routes, Navigate, useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nconst SideDrawer = ({ selectedScreen }) => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const logo2 = require('../../../assets/C-Hub Logo Only.png');\r\n    const [onHover, setOnHover] = useState(false);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    // const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n    const handleOpen = () => {\r\n\r\n        setIsOpen(true);\r\n\r\n    }\r\n    const handleClose = () => {\r\n\r\n        setIsOpen(false);\r\n\r\n    }\r\n\r\n    const handleToggleLogs = useCallback(() => {\r\n        navigate(\"/devadmin/logs\");\r\n    }, []);\r\n\r\n    const handleToggleAddAccount = useCallback(() => {\r\n        navigate(\"/devadmin/add-c-hub-account\");\r\n    }, []);\r\n\r\n    const handleToggleAccountList = useCallback(() => {\r\n\r\n        navigate(\"/devadmin/account-list\");\r\n    }, []);\r\n\r\n    const handleToggleAddVehicle = useCallback(() => {\r\n\r\n        navigate(\"/devadmin/add-new-vehicle\");\r\n    }, []);\r\n\r\n\r\n    const handleVehicleList = useCallback(() => {\r\n        navigate(\"/devadmin/vehicle-list\");\r\n    }, []);\r\n\r\n\r\n    const handleFreight = useCallback(() => {\r\n        navigate(\"/devadmin/freight\");\r\n    }, []);\r\n\r\n    const handleChatMessages = useCallback(() => {\r\n        navigate(\"/devadmin/chat-messages\");\r\n    }, []);\r\n\r\n\r\n    const slideAnimation = useRef(new Animated.Value(0)).current;\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            Animated.timing(slideAnimation, {\r\n                toValue: 1,\r\n                duration: 500,\r\n                easing: Easing.inOut(Easing.ease),\r\n                useNativeDriver: true,\r\n            }).start();\r\n        } else {\r\n            Animated.timing(slideAnimation, {\r\n                toValue: 0,\r\n                duration: 500,\r\n                easing: Easing.inOut(Easing.ease),\r\n                useNativeDriver: true,\r\n            }).start();\r\n        }\r\n    }, [isOpen, slideAnimation]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable\r\n                onHoverIn={() => {\r\n                    handleOpen()\r\n                    setOnHover(true);\r\n                }}\r\n                onHoverOut={() =>\r\n                    setTimeout(() => setOnHover(false), [100])\r\n                }\r\n                onPress={() => handleOpen()} onPressOut={() => handleOpen()} underlayColor=\"#5a7bc9\" style={{\r\n                    backgroundColor: onHover ? '#5a7bc9' : 'transparent',\r\n                    borderRadius: 5,\r\n                }}>\r\n                <FontAwesome name=\"navicon\" size={30} color=\"white\" style={{ margin: 2 }} />\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={handleClose}\r\n                useRNModal\r\n                style={{\r\n                    alignItems: 'flex-start',\r\n                    justifyContent: 'flex-start',\r\n                    height: '100%',\r\n                }}\r\n            >\r\n                <Modal.Content\r\n                    maxWidth={255}\r\n                    borderRadius={0}\r\n                    maxHeight=\"100%\"\r\n                    height=\"full\"\r\n                    bgColor={'transparent'}\r\n                >\r\n                    <Animated.View\r\n                        style={{\r\n                            flex: 1,\r\n                            transform: [\r\n                                {\r\n                                    translateX: slideAnimation.interpolate({\r\n                                        inputRange: [0, 1],\r\n                                        outputRange: [-255, 0],\r\n                                    }),\r\n                                },\r\n                            ],\r\n                        }}\r\n                    >\r\n\r\n                        <View style={{ backgroundColor: '#7b9cff', flex: 1, borderRightWidth: 2, borderColor: 'cyan' }}>\r\n                            <View style={{ flex: 1, }}>\r\n\r\n                                <View style={{ flexDirection: 'row', margin: 3, justifyContent: 'space-between' }}>\r\n                                    <View style={{ width: '80%', alignItems: 'center', justifyContent: 'center' }}>\r\n                                        <Image\r\n                                            source={{\r\n                                                uri: logo2,\r\n                                            }}\r\n                                            resizeMode=\"stretch\"\r\n                                            style={{ width: 170, height: 30 }}\r\n                                        />\r\n                                    </View>\r\n                                    <TouchableOpacity\r\n                                        style={{ flexDirection: 'row', alignItems: 'flex-end', marginVertical: 1.5, marginHorizontal: 1.5 }}\r\n                                    >\r\n                                        <MaterialIcons\r\n                                            name=\"arrow-back\"\r\n                                            size={30}\r\n                                            color=\"white\"\r\n                                            onPress={handleClose}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n\r\n                                {/* Sidebar Content */}\r\n                                <View style={{ paddingHorizontal: 1, backgroundColor: '#7b9cff', height: '100%' }}>\r\n                                    <ScrollView style={{ width: 245 }}>\r\n                                        <View style={{ height: 20 }}>\r\n                                            {/* Sidebar Content Items */}\r\n                                            <Button\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'LOGS' ? '#0642F4' : '#5a7bc9', }}\r\n                                                marginTop={0}\r\n                                                w={'full'}\r\n                                                onPress={() => selectedScreen == 'LOGS' ? null : handleToggleLogs()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'LOGS' ? '#0642F4' : '#7b9cff'}\r\n                                                leftIcon={<MaterialCommunityIcons name=\"history\" size={20} color=\"white\" />}\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >\r\n                                                LOGS\r\n                                            </Button>\r\n\r\n                                            {/* ACCOUNT MANAGEMENT */}\r\n                                            <Button\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : '#5a7bc9', }}\r\n                                                marginTop={0} w={'full'}\r\n                                                onPress={() => selectedScreen == 'ADD C-HUB ACCOUNT' ? null : handleToggleAddAccount()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : '#7b9cff'}\r\n                                                leftIcon={<MaterialIcons name=\"person-add\" size={20} color=\"white\" />}\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >ADD C-HUB ACCOUNT</Button>\r\n\r\n                                            <Button\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : '#5a7bc9', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => selectedScreen == 'ACCOUNT LIST' ? null : handleToggleAccountList()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : '#7b9cff'}\r\n                                                leftIcon={\r\n                                                    <MaterialCommunityIcons name=\"account-details\" size={20} color=\"white\" />\r\n\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >ACCOUNT LIST</Button>\r\n                                            {/* VEHICLE INFORMATION INPUT */}\r\n                                            <Button\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : '#5a7bc9', }}\r\n                                                marginTop={0} w={'full'}\r\n                                                onPress={() => selectedScreen == 'ADD NEW VEHICLE' ? null : handleToggleAddVehicle()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : '#7b9cff'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <FontAwesome name=\"automobile\" size={15} color=\"white\" />\r\n                                                            <FontAwesome\r\n                                                                name=\"plus\"\r\n                                                                size={10}\r\n                                                                color=\"white\"\r\n                                                                style={{\r\n                                                                    position: 'absolute', // Position it absolutely...\r\n                                                                    top: -3, // ...at the top...\r\n                                                                    left: -5 // ...and left.\r\n                                                                }}\r\n                                                            />\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >UPDATE / ADD NEW VEHICLE</Button>\r\n\r\n                                            <Button\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : '#5a7bc9', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => selectedScreen == 'VEHICLE LIST' ? null : handleVehicleList()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'VEHICLE LIST' ? '#0642F4' : '#7b9cff'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <FontAwesome\r\n                                                                name=\"automobile\"\r\n                                                                size={15}\r\n                                                                color=\"white\" />\r\n\r\n                                                            <MaterialCommunityIcons name=\"format-list-bulleted\" size={10} color=\"white\"\r\n                                                                style={{\r\n                                                                    position: 'absolute', // Position it absolutely...\r\n                                                                    top: -3, // ...at the top...\r\n                                                                    left: -5 // ...and left.\r\n                                                                }}\r\n                                                            />\r\n\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                            >VEHICLE LIST</Button>\r\n\r\n                                            <Button\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'FREIGHT' ? '#0642F4' : '#5a7bc9', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => selectedScreen == 'FREIGHT' ? null : handleFreight()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'FREIGHT' ? '#0642F4' : '#7b9cff'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <MaterialIcons\r\n                                                                name=\"public\"\r\n                                                                size={20}\r\n                                                                color=\"white\" />\r\n\r\n                                                            <MaterialIcons name=\"sync\" size={12} color=\"white\"\r\n                                                                style={{\r\n                                                                    position: 'absolute', // Position it absolutely...\r\n                                                                    top: -3, // ...at the top...\r\n                                                                    left: -5 // ...and left.\r\n                                                                }}\r\n                                                            />\r\n\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                            >FREIGHT</Button>\r\n\r\n                                            <Button\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : '#5a7bc9', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => { selectedScreen == 'CHAT MESSAGES' ? null : handleChatMessages() }}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : '#7b9cff'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <Entypo\r\n                                                                name=\"chat\"\r\n                                                                size={20}\r\n                                                                color=\"white\" />\r\n\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                            >CHAT MESSAGES</Button>\r\n                                        </View>\r\n                                        {/* Footer Content */}\r\n                                        {/* <TouchableOpacity\r\n            style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\r\n            onPress={handleSignOut}\r\n          >\r\n            <Text style={{ color: 'white', textAlign: 'center' }}>\r\n              Logout\r\n            </Text>\r\n          </TouchableOpacity> */}\r\n                                    </ScrollView>\r\n                                    <View style={{ borderTopWidth: 0, backgroundColor: '#7b9cff', position: 'absolute', bottom: 0, left: 0, right: 0, borderTopColor: 'gray', paddingTop: 3 }}>\r\n                                        {/* Footer Content */}\r\n                                        {/* <Center marginBottom={1.5}>\r\n            <Button w={100} colorScheme=\"error\" onPress={handleSignOut}>\r\n              <MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" /> Logout\r\n            </Button>\r\n          </Center> */}\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n\r\n                    </Animated.View>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default SideDrawer;","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  Image as NativeImage,\r\n  Input,\r\n  Modal,\r\n  NativeBaseProvider,\r\n  Popover,\r\n  Pressable,\r\n  Spinner,\r\n  Stack,\r\n  Text,\r\n  VStack,\r\n  useBreakpointValue,\r\n  TextArea,\r\n  InputRightAddon,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  Select,\r\n  CheckIcon,\r\n  PresenceTransition,\r\n  CloseIcon,\r\n  ScrollView as ScrollViewNative,\r\n  Divider,\r\n  useDisclosure,\r\n  useDisclose,\r\n  FormControl,\r\n  Checkbox,\r\n  useToast\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n  Dimensions,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  StyleSheet,\r\n  View,\r\n  PanResponder,\r\n  Animated,\r\n  InputAccessoryView,\r\n  FlatList,\r\n  ScrollView,\r\n  TouchableHighlight,\r\n  TextInput,\r\n  Image as RNImage\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo,\r\n  FontAwesome5,\r\n  EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n  setVehicleListData,\r\n  setSupplyChainsCostsData,\r\n  setSelectedPaidTo,\r\n  setSelectedExpenseName,\r\n  setSupplyChainsCostsModalVisible,\r\n  setVehicleListSupplyChainsCostsData,\r\n  setDeleteImageVisible,\r\n  setSelectedImages,\r\n  setAddAnotherImages,\r\n  setIsAddPhotoVisible,\r\n  setUploadImagesModalVisible,\r\n  setUploadImagesButtonLoading,\r\n  setViewImagesModalVisible,\r\n  setViewImagesData,\r\n  setLoadingModalVisible,\r\n  setAddVehicleListData,\r\n  setEditVehicleModalVisible,\r\n  setFobPriceHistoryModalVisible,\r\n  setFobHistoryData,\r\n  setLoginName\r\n} from './redux/store';\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'VEHICLE LIST'\r\n\r\nlet globalSupplyChainCostsData = [];\r\nlet globalCurrentSupplyChainCostsData = [];\r\nlet globalFobPriceHistoryData = [];\r\nlet globalCurrentStockID = '';\r\nlet globalSelectedPaidTo = '';\r\nlet globalSPCSelectedDate = '';\r\nlet globalSelectedExpenseName = '';\r\nlet globalSupplyChainCostsAmount = 0;\r\nlet globalSelectedImages = [];\r\nlet globalSelectedVehicle = '';\r\nlet globalSelectedVehicleReferenceNumber = '';\r\nlet globalSelectedCarName = '';\r\nconst nameVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = projectControlAuth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    // console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nconst storage = getStorage(projectExtensionFirebase);\r\n\r\nconst SelectStockStatus = ({ selectedValue, id, item }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n  const [selectedStockStatusValue, setSelectedStockStatusValue] = useState(selectedValue);\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', id), (doc) => {\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        // Handle the data from the document\r\n        setSelectedStockStatusValue(data.stockStatus);\r\n        // console.log(`Read ${doc.size} documents from VehicleProducts`);\r\n\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleSaveStockStatus = async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n    if (item.stockStatus == selectedStockStatusValue || selectedStockStatusValue == '' || selectedStockStatusValue == '__NativeBasePlaceHolder__') {\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n    else {\r\n\r\n      const stockStatusHistoryData = {\r\n        date: formattedTime,\r\n        stockStatus: selectedStockStatusValue,\r\n        changedBy: nameVariable.text,\r\n      };\r\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n      try {\r\n        await updateDoc(vehicleProductRef, {\r\n          stockStatus: selectedStockStatusValue,\r\n          stockStatusHistory: arrayUnion(stockStatusHistoryData)\r\n        });\r\n        const logData = {\r\n          message: `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to \"${selectedStockStatusValue}\" with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            globalCurrentStockID.toLowerCase(),\r\n            `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to ${selectedStockStatusValue} with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n            'Stock Status'.toLowerCase(),\r\n            'Stock Status Updated'.toLowerCase(),\r\n            'Stock'.toLowerCase(),\r\n            'Status Updated'.toLowerCase(),\r\n            'Updated'.toLowerCase(),\r\n            globalSelectedCarName.toLowerCase(),\r\n            globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n        // console.log('FOB Price updated successfully');\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Stock Status updated successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n      <View style={{ width: screenWidth >= 1360 ? '70%' : '88%', backgroundColor: 'white', }}>\r\n        <Select\r\n          selectedValue={selectedStockStatusValue}\r\n          onValueChange={(value) => {\r\n            setSelectedStockStatusValue(value);\r\n          }}\r\n          flex={3}\r\n          accessibilityLabel=\"---\"\r\n          placeholder=\"---\"\r\n          _selectedItem={{\r\n            bg: \"teal.600\",\r\n            endIcon: <CheckIcon size=\"5\" />\r\n          }}\r\n        >\r\n          {stockStatusData.map((item) => (\r\n            <Select.Item key={item} label={item} value={item} />\r\n          ))}\r\n        </Select>\r\n      </View>\r\n\r\n      <TouchableHighlight\r\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n        onPress={handleSaveStockStatus}\r\n        style={{\r\n          backgroundColor: '#16A34A',\r\n          borderRadius: 5,\r\n          padding: 3,\r\n          margin: 2,\r\n          alignSelf: 'center',\r\n        }}>\r\n        <MaterialIcons name='update' color='white' size={22} />\r\n      </TouchableHighlight>\r\n    </View>\r\n\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nconst addLogToCollection = async (data) => {\r\n  try {\r\n    const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n    // Add a new document to the \"logs\" collection\r\n    await addDoc(logsCollectionRef, data);\r\n\r\n    // console.log('Document added successfully!');\r\n  } catch (error) {\r\n    console.error('Error adding document:', error);\r\n  }\r\n};\r\n\r\nconst LoadingModal = () => {\r\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        flex: 1,\r\n        display: loadingModalVisible ? 'flex' : 'none',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      {/* Content within the modal */}\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Spinner size=\"lg\" color=\"white\" />\r\n        <Text style={{ color: 'white' }}>Loading, please wait!</Text>\r\n      </View>\r\n    </View>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\r\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n\r\n  const handleModalDeleteOpen = () => {\r\n    setModalDeleteImagesVisible(true);\r\n  };\r\n\r\n  const handleModalDeleteClose = () => {\r\n    setModalDeleteImagesVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          right: 0,\r\n          backgroundColor: '#FF4136',\r\n          borderRadius: 3,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          display: isAddPhotoVisible ? 'none' : 'flex',\r\n        }}\r\n      >\r\n        <TouchableHighlight onPress={handleModalDeleteOpen} style={{ flex: 1 }}>\r\n          <Ionicons name=\"trash-sharp\" size={20} color=\"white\" />\r\n        </TouchableHighlight>\r\n      </View>\r\n\r\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\r\n        <Modal.Content bgColor={'error.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear Images\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'error.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.400'}\r\n            margin={5}\r\n          >\r\n            <View style={{ flex: 1 }}>\r\n              <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>Alert!</Text>\r\n              <Text style={{ color: '#FF4136' }}>\r\n                Are you sure you want to clear{' '}\r\n                <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>\r\n                  {selectedImages.length}\r\n                </Text>{' '}\r\n                selected image(s)?\r\n              </Text>\r\n            </View>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\r\n            <View style={{ flexDirection: 'row', flex: 1 }}>\r\n              <TouchableOpacity\r\n                onPress={handleModalDeleteClose}\r\n                style={{\r\n                  flex: 1,\r\n                  backgroundColor: '#57534E', // Replace with your desired color\r\n                  borderRadius: 5,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  margin: 5,\r\n                  padding: 5,\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 14, color: 'white' }}>No</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={handleClearImages}\r\n                style={{\r\n                  flex: 1,\r\n                  backgroundColor: '#DC2626', // Replace with your desired color\r\n                  borderRadius: 5,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  margin: 5,\r\n                  padding: 5,\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 14, color: 'white' }}>Clear Images</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\r\n  const dispatch = useDispatch();\r\n  const { width } = Dimensions.get('window');\r\n\r\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  const [boolean, setBoolean] = useState(true);\r\n  const selectedImages = useSelector((state) => state.selectedImages);\r\n  // const [selectedImages, setSelectedImages] = useState([]);\r\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\r\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\r\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\r\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\r\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n  const [scrollEnabled, setscrollEnabled] = useState(true);\r\n  const [isEnterEdit, setisEnterEdit] = useState(false);\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setIsCursorLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    dropdown: {\r\n      margin: 16,\r\n      height: 50,\r\n      borderBottomColor: 'gray',\r\n      borderBottomWidth: 0.5,\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n      fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n      height: 40,\r\n      fontSize: 16,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 20,\r\n\r\n    },\r\n    txt: {\r\n      fontSize: 18,\r\n      lineHeight: 24,\r\n      padding: 5\r\n    },\r\n    sort: {\r\n    },\r\n    item_children: {\r\n      width: 90,\r\n      height: 90,\r\n      backgroundColor: 'black',\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    item_delete_icon: {\r\n      width: 14,\r\n      height: 14,\r\n      position: \"absolute\",\r\n      right: 1,\r\n      top: 1\r\n    },\r\n    item_icon: {\r\n      width: 90,\r\n      height: 90,\r\n      resizeMode: \"contain\",\r\n      position: \"absolute\"\r\n    }\r\n  });\r\n\r\n  const handleImageAddToSelection = async () => {\r\n    dispatch(setDeleteImageVisible(true));\r\n    if (selectedImages.length === 40) {\r\n      return; // Limit reached, do not add a new image\r\n    }\r\n\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        // console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        // console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        // console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Filter out images larger than 10MB\r\n      const newImages = [...selectedImages];\r\n      const promises = response.assets.map(async (asset) => {\r\n        const file = await fetch(asset.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          const exists = newImages.some((image) => image.uri === asset.uri);\r\n          if (!exists) {\r\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\r\n          }\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      });\r\n\r\n      await Promise.all(promises);\r\n\r\n      const limitedImages = newImages.slice(0, 40);\r\n      dispatch(setSelectedImages(limitedImages));\r\n      globalSelectedImages = limitedImages;\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      // limitedImages.forEach((image) => {\r\n      //   console.log(`File size: ${image.fileSize}`);\r\n      // });\r\n\r\n    } catch (error) {\r\n      // console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n  const reloadData = useCallback(() => {\r\n    if (selectedImages.length > 0) {\r\n      // ... Logic to reload data using selectedImages and width\r\n\r\n      // Assuming your logic has updated selectedImages, you can directly use it here\r\n      const updatedSelectedImages = [...selectedImages];\r\n\r\n      // Dispatch the updatedSelectedImages array to the state\r\n      dispatch(setSelectedImages(updatedSelectedImages));\r\n    }\r\n\r\n  }, [widthState]);\r\n\r\n  useEffect(() => {\r\n    const handleWidthChange = ({ window }) => {\r\n      setWidthState(window.width);\r\n    };\r\n\r\n    Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n    return () => {\r\n      Dimensions.removeEventListener('change', handleWidthChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, [reloadData]);\r\n\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    setModalDeleteImagesVisible(false);\r\n    // dispatch(setSelectedImages([]));\r\n    // globalSelectedImages = [];\r\n    // dispatch(setIsAddPhotoVisible(true));\r\n    // dispatch(setAddAnotherImages(false));\r\n    // dispatch(setDeleteImageVisible(true));\r\n    handleClearImagesExtra();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const renderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleImageSelection = async () => {\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40,\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        // console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        // console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        // console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Remove duplicates from the selected images\r\n      const uniqueImages = response.assets.filter(\r\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\r\n      );\r\n\r\n      // Filter out images larger than 10MB\r\n      const filteredImages = [];\r\n      const imageOrder = [];\r\n      for (let index = 0; index < uniqueImages.length; index++) {\r\n        const image = uniqueImages[index];\r\n        const file = await fetch(image.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          filteredImages.push(image);\r\n          imageOrder.push(index);\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      }\r\n\r\n\r\n      // Sort the filtered images based on their original order\r\n      const sortedImages = filteredImages.sort((a, b) => {\r\n        const indexA = imageOrder[filteredImages.indexOf(a)];\r\n        const indexB = imageOrder[filteredImages.indexOf(b)];\r\n        return indexA - indexB;\r\n      });\r\n\r\n\r\n\r\n      // Limit the number of selected images to 40\r\n      const limitedImages = sortedImages.slice(0, 40);\r\n\r\n      globalSelectedImages = limitedImages;\r\n      if (limitedImages.length > 0) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(true));\r\n      }\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      dispatch(setSelectedImages(globalSelectedImages));\r\n\r\n    } catch (error) {\r\n      // console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleDeleteImagePress = useCallback((uri) => {\r\n\r\n    globalSelectedImages = globalSelectedImages.filter((item) => {\r\n      // Replace 'uriToDelete' with the URI you want to delete\r\n      return item.uri !== uri;\r\n    });\r\n\r\n    if (globalSelectedImages.length < 40) {\r\n      dispatch(setAddAnotherImages(true));\r\n    }\r\n\r\n    if (globalSelectedImages.length == 0) {\r\n      dispatch(setAddAnotherImages(false));\r\n      dispatch(setIsAddPhotoVisible(true));\r\n    }\r\n    dispatch(setSelectedImages(globalSelectedImages));\r\n    // dispatch(setSelectedImages((prevImages) => {\r\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\r\n\r\n    //   if (updatedImages.length < 40) {\r\n    //     dispatch(setAddAnotherImages(true));\r\n    //   }\r\n    //   if (updatedImages.length == 0) {\r\n    //    dispatch(setAddAnotherImages(false));\r\n    //     dispatch(setIsAddPhotoVisible(true));\r\n    //   }\r\n    //   return updatedImages;\r\n    // }));\r\n\r\n    // console.log(globalSelectedImages.map((item) => item.uri));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\r\n\r\n\r\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\r\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\r\n\r\n            <ClearImagesModal\r\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\r\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\r\n              handleClearImages={handleClearImages}\r\n              selectedImages={selectedImages}\r\n              isAddPhotoVisible={isAddPhotoVisible} />\r\n\r\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\r\n\r\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"#12293F\" />\r\n\r\n\r\n              <ScrollView\r\n                scrollEnabled={scrollEnabled}\r\n                flex={1}\r\n              >\r\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    delayLongPress={100}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onDragStart={useCallback(() => {\r\n                      if (!isEnterEdit) {\r\n                        setisEnterEdit(true);\r\n                        setscrollEnabled(false);\r\n                      } else {\r\n                        setscrollEnabled(false);\r\n                      }\r\n                    }, [])}\r\n                    onDragEnd={useCallback(() => {\r\n                      setscrollEnabled(true);\r\n                    }, [])}\r\n                    onDataChange={useCallback((data) => {\r\n\r\n                      if (data.length !== data) {\r\n                        dispatch(setSelectedImages(data));\r\n                        globalSelectedImages = data;\r\n                      }\r\n\r\n                    }, [])}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => renderItem(item, index), [])} />\r\n\r\n                  <Center>\r\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"#12293F\" />\r\n                  </Center>\r\n\r\n                </Box>\r\n\r\n\r\n\r\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    sortable={false}\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\r\n\r\n                </Box>\r\n              </ScrollView>\r\n\r\n\r\n\r\n\r\n            </Box>\r\n\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={0}\r\n              left={0}\r\n              borderRadius={3}\r\n              bgColor={'rgba(0, 0, 0, 0.5)'}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              display={isAddPhotoVisible ? 'none' : 'block'}>\r\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\r\n            </Box>\r\n          </Box>\r\n\r\n        </ScrollView>\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      {/* </Box> */}\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} useRNModal>\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Please select image(s) smaller than 10MB!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploadModal = ({ handleUploadImagesModalClose, screenWidth, dragSortableViewRef, handleClearImagesExtra, handleUploadImages }) => {\r\n\r\n  const uploadImagesModalVisible = useSelector((state) => state.uploadImagesModalVisible)\r\n  const uploadImagesButtonLoading = useSelector((state) => state.uploadImagesButtonLoading)\r\n  return (\r\n    <Modal isOpen={uploadImagesModalVisible} onClose={handleUploadImagesModalClose} size={'full'} useRNModal>\r\n      <Modal.Content bgColor={'white'} w={'90%'} h={'100%'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Upload Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n\r\n\r\n        <View style={{ flex: 1, height: '100%', width: '100%', alignItems: 'center', justifyContent: 'center' }}>\r\n\r\n          <View style={{ borderWidth: 1, borderColor: '#12293F', width: '95%', height: '95%' }}>\r\n\r\n            <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\r\n\r\n          </View>\r\n\r\n        </View>\r\n\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <TouchableOpacity\r\n            onPress={handleUploadImagesModalClose}\r\n            style={{\r\n              backgroundColor: '#525252',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Close</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ flex: 4 }} />\r\n\r\n          <TouchableOpacity\r\n            disabled={uploadImagesButtonLoading}\r\n            onPress={handleUploadImages}\r\n            style={{\r\n              backgroundColor: '#16A34A',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            {!uploadImagesButtonLoading ? (\r\n              <Text style={{ color: 'white' }}>Upload</Text>) : (\r\n              <Spinner color=\"white\" />\r\n            )}\r\n          </TouchableOpacity>\r\n\r\n\r\n        </View>\r\n\r\n\r\n\r\n      </Modal.Content>\r\n\r\n    </Modal>\r\n\r\n  );\r\n}\r\n\r\nconst UploadImagesModal = ({ fetchImageCounts }) => {\r\n\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const dragSortableViewRef = useRef();\r\n\r\n  const handleClearImagesExtra = () => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n    dispatch(setDeleteImageVisible(true));\r\n  };\r\n\r\n\r\n  const handleUploadImagesModalClose = () => {\r\n\r\n    dispatch(setUploadImagesModalVisible(false));\r\n    // globalCurrentStockID = '';\r\n    handleClearImagesExtra();\r\n    globalSelectedVehicle = '';\r\n  }\r\n\r\n  const uploadImages = useCallback(async () => {\r\n\r\n    const storageRef = ref(storage, `${globalCurrentStockID}`);\r\n    const ImageFormat = { jpg: 'jpg' };\r\n    const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n    const docRef = doc(collectionRef, globalCurrentStockID);\r\n\r\n\r\n\r\n    try {\r\n      // Get the names of the images to keep\r\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n      // Delete existing files in the folder that do not match the names of the images to keep\r\n      const listResult = await listAll(storageRef);\r\n      await Promise.all(\r\n        listResult.items\r\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n          .map((itemRef) => deleteObject(itemRef))\r\n      );\r\n\r\n      await Promise.all(\r\n        globalSelectedImages.map(async (asset, index) => {\r\n          const { uri } = asset;\r\n          const imagename = index.toString();\r\n\r\n          const response = await fetch(uri);\r\n          const blob = await response.blob();\r\n\r\n          // Create an offscreen canvas\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          // Create a new image object\r\n          const img = new Image();\r\n          img.src = URL.createObjectURL(blob);\r\n\r\n          // Draw the image on the canvas\r\n          img.onload = async () => {\r\n            // Create a canvas element\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            // Calculate the desired width and height for the resized image\r\n            const maxWidth = 800; // Set your desired maximum width\r\n            const maxHeight = 600; // Set your desired maximum height\r\n            let newWidth = img.width;\r\n            let newHeight = img.height;\r\n\r\n            // Check if the image needs resizing\r\n            if (img.width > maxWidth) {\r\n              newWidth = maxWidth;\r\n              newHeight = (img.height * maxWidth) / img.width;\r\n            }\r\n\r\n            if (newHeight > maxHeight) {\r\n              newWidth = (newWidth * maxHeight) / newHeight;\r\n              newHeight = maxHeight;\r\n            }\r\n\r\n            // Set the canvas dimensions to the new width and height\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n\r\n            // Draw the resized image onto the canvas\r\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n\r\n            // Calculate the font size as a percentage of the image width\r\n            const fontSizePercentage = 3;\r\n            const imageRes = img.height * img.width;\r\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\r\n\r\n            ctx.font = `bold ${fontSize}px Arial`;\r\n            ctx.fillStyle = '#fff';\r\n            ctx.shadowColor = 'transparent';\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.lineWidth = 2;\r\n\r\n            // Calculate the position for the watermark text\r\n            const watermarkText = `Real Motor Japan ${globalSelectedVehicleReferenceNumber}`;\r\n            const textWidth = ctx.measureText(watermarkText).width;\r\n            const textHeight = fontSize; // Font size determines the text height\r\n\r\n            // Set padding around the text (adjust as needed)\r\n            const paddingX = 10;\r\n            const paddingY = 5;\r\n\r\n            // Calculate the position for the text shadow\r\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\r\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\r\n\r\n            // Increase the shadow thickness by adjusting the shadow blur radius\r\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\r\n\r\n            // Draw the text shadow (black)\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(watermarkText, xShadow, yShadow);\r\n\r\n            // Reset the shadow blur radius for the actual text\r\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\r\n\r\n            // Calculate the position for the actual text\r\n            const x = (canvas.width - textWidth) / 2;\r\n            const y = canvas.height - 20;\r\n\r\n            // Draw the actual text (white)\r\n            ctx.fillStyle = '#fff';\r\n            ctx.fillText(watermarkText, x, y);\r\n\r\n            // Convert the canvas to a blob\r\n            const watermarkedImageBlob = await new Promise(resolve => {\r\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\r\n            });\r\n\r\n            // Upload the resized image to Firebase Storage\r\n            const imageRef = ref(storage, `${globalCurrentStockID}/${imagename}`);\r\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\r\n          };\r\n        })\r\n      );\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n      const year = moment(datetime).format('YYYY');\r\n      const month = moment(datetime).format('MM');\r\n      const monthWithDay = moment(datetime).format('MM/DD');\r\n      const date = moment(datetime).format('YYYY/MM/DD');\r\n      const day = moment(datetime).format('DD');\r\n      const time = moment(datetime).format('HH:mm');\r\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n      const imageCount = {\r\n        imageCount: globalSelectedImages.length,\r\n      };\r\n\r\n      await updateDoc(docRef, imageCount);\r\n\r\n      const logData = {\r\n        message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber}\" using Vehicle List`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber} using Vehicle List\"`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle Updated'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n\r\n      // console.log(`Images uploaded to folder ${globalCurrentStockID}`);\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleUploadImages = async () => {\r\n\r\n    dispatch(setUploadImagesButtonLoading(true));\r\n\r\n    if (globalSelectedImages.length > 0) {\r\n      toast.closeAll();\r\n      try {\r\n        await uploadImages();\r\n        dispatch(setUploadImagesButtonLoading(false));\r\n        fetchImageCounts();\r\n        handleUploadImagesModalClose();\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Uploaded Images successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        dispatch(setUploadImagesButtonLoading(false));\r\n        handleUploadImagesModalClose();\r\n\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Uploaded Error: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    else {\r\n      dispatch(setUploadImagesButtonLoading(false));\r\n    }\r\n\r\n\r\n\r\n  };\r\n\r\n  return (\r\n\r\n    <>\r\n      <ImageUploadModal\r\n        handleUploadImagesModalClose={handleUploadImagesModalClose}\r\n        screenWidth={screenWidth}\r\n        dragSortableViewRef={dragSortableViewRef}\r\n        handleClearImagesExtra={handleClearImagesExtra}\r\n        handleUploadImages={handleUploadImages} />\r\n    </>\r\n  );\r\n\r\n};\r\n\r\n\r\nconst SupplyChainsCosts = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsOpen = useCallback((data) => {\r\n    dispatch(setSupplyChainsCostsModalVisible(true));\r\n    dispatch(setVehicleListSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\r\n    globalSupplyChainCostsData = data.supplyChainsCostsData;\r\n    globalCurrentSupplyChainCostsData = data.supplyChainsCostsData;\r\n    globalCurrentStockID = data.stockID;\r\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\r\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\r\n    globalSelectedCarName = data.carName;\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <><TouchableOpacity\r\n      onPress={() => handleModalSupplyChainsCostsOpen(data)}\r\n      style={{\r\n        backgroundColor: '#12293F',\r\n        borderRadius: 5,\r\n        padding: 2,\r\n        // flex: 1,\r\n        width: '90%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}\r\n    >\r\n      {/* <Text style={{ textAlign: 'center', }}>Expense</Text> */}\r\n      <MaterialIcons name=\"payments\" size={22} color=\"white\" />\r\n    </TouchableOpacity>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n}\r\n\r\nconst AllSccModals = ({ supplyChainsCostsModalVisible, supplyChainsCostsData, expenseNameData, paidToData, currentDate, vehicleListSupplyChainsCostsData }) => {\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const toast = useToast();\r\n\r\n  const [sccData, setSccData] = useState([]);\r\n\r\n  // const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible);\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const [clearModalVisible, setClearModalVisible] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\r\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\r\n  const [paidToIsError, setPaidToIsError] = useState(false);\r\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\r\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\r\n  const selectExpenseNameRef = useRef(null);\r\n  const selectPaidToRef = useRef(null);\r\n  const expenseViewRef = useRef(null);\r\n\r\n  const textAreaAddExpenseName = useRef(null);\r\n  const textAreaAddPaidTo = useRef(null);\r\n  const inputExpenseAmount = useRef(null);\r\n  const handleInputExpenseAmountChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputExpenseAmount.current.value = formattedValue;\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsClose = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(false));\r\n    inputExpenseAmount.current?.clear();\r\n    globalSelectedExpenseName = '';\r\n    setSelectResetKey(nanoid());\r\n    globalSelectedPaidTo = '';\r\n    setSelectedDate(currentDate);\r\n    globalSPCSelectedDate = currentDate;\r\n    dispatch(setSelectedExpenseName(''));\r\n    dispatch(setSelectedPaidTo(''));\r\n    setInputAmountIsError(false);\r\n    setExpenseNameIsError(false);\r\n    setPaidToIsError(false);\r\n    globalSelectedVehicle = '';\r\n  };\r\n\r\n\r\n  const handleClearModalOpen = () => {\r\n    setClearModalVisible(true);\r\n  };\r\n\r\n  const handleClearModalClose = () => {\r\n    setClearModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const amounts = vehicleListSupplyChainsCostsData.map((item) => {\r\n      const expenseName = Object.keys(item)[0];\r\n      const expenseData = item[expenseName];\r\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n    });\r\n\r\n    // Use reduce to add up all the amounts\r\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n    const formattedTotalAmount = totalAmount.toLocaleString();\r\n    setTotalAmount(formattedTotalAmount);\r\n    globalSupplyChainCostsAmount = formattedTotalAmount;\r\n\r\n  }, [vehicleListSupplyChainsCostsData]);\r\n\r\n  const handleSave = useCallback(() => {\r\n\r\n\r\n\r\n    if (inputExpenseAmount.current?.value == ''\r\n      || inputExpenseAmount.current?.value == 0\r\n      || globalSelectedExpenseName == ''\r\n      || globalSelectedPaidTo == ''\r\n    ) {\r\n\r\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\r\n        setInputAmountIsError(true);\r\n      }\r\n\r\n      if (globalSelectedExpenseName == '') {\r\n        setExpenseNameIsError(true);\r\n      }\r\n\r\n      if (globalSelectedPaidTo == '') {\r\n        setPaidToIsError(true);\r\n      }\r\n    }\r\n\r\n    else {\r\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\r\n\r\n      if (existingIndex !== -1) {\r\n        // If an entry with the same expense name exists, update it\r\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\r\n        updatedData[existingIndex][globalSelectedExpenseName] = {\r\n          expenseName: globalSelectedExpenseName,\r\n          amount: inputExpenseAmount.current?.value,\r\n          date: globalSPCSelectedDate,\r\n          paidName: globalSelectedPaidTo,\r\n        };\r\n        globalSupplyChainCostsData = updatedData;\r\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n\r\n      } else {\r\n        setInputAmountIsError(false);\r\n        setExpenseNameIsError(false);\r\n        setPaidToIsError(false);\r\n        // If no entry with the same expense name exists, add a new entry\r\n        const newData = {\r\n          [globalSelectedExpenseName]: {\r\n            expenseName: globalSelectedExpenseName,\r\n            amount: inputExpenseAmount.current?.value,\r\n            date: globalSPCSelectedDate,\r\n            paidName: globalSelectedPaidTo,\r\n          },\r\n        };\r\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\r\n        // console.log(globalSupplyChainCostsData);\r\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\r\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\r\n        setSelectResetKey(nanoid());\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const handleEditPress = useCallback((item) => {\r\n    // console.log(item.amount);\r\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\r\n    dispatch(setSelectedExpenseName(item.expenseName));\r\n    globalSelectedExpenseName = item.expenseName;\r\n    dispatch(setSelectedPaidTo(item.paidName));\r\n    globalSelectedPaidTo = item.paidName;\r\n    globalSPCSelectedDate = item.date;\r\n    setSelectedDate(item.date);\r\n    expenseViewRef.current.scrollIntoView({ behavior: 'smooth' });\r\n\r\n  }, [])\r\n\r\n\r\n  const handleDeleteItem = (expenseName) => {\r\n    // Find the index of the item to be deleted\r\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\r\n\r\n    if (itemIndex !== -1) {\r\n      // Create a copy of the data array and remove the item at the found index\r\n      const newData = [...globalSupplyChainCostsData];\r\n      newData.splice(itemIndex, 1);\r\n\r\n      // Update the state with the new array\r\n      dispatch(setVehicleListSupplyChainsCostsData(newData));\r\n      globalSupplyChainCostsData = newData;\r\n    }\r\n  };\r\n\r\n  const handleFirstModalClose = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(false));\r\n\r\n  };\r\n  const handleFirstModalOpen = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(true));\r\n\r\n  }\r\n\r\n  const handleAddExpenseNameTextChange = () => {\r\n    const textAreaValue = textAreaAddExpenseName.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPaidToTextChange = () => {\r\n    const textAreaValue = textAreaAddPaidTo.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleSaveSupplyChainsCosts = async () => {\r\n\r\n    toast.closeAll();\r\n    if (globalCurrentSupplyChainCostsData == globalSupplyChainCostsData) {\r\n      // console.log('Same price, will not update')\r\n      dispatch(setSupplyChainsCostsModalVisible(false));\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), globalCurrentStockID);\r\n\r\n      try {\r\n        await updateDoc(vehicleProductRef, { supplyChainsCostsData: globalSupplyChainCostsData });\r\n        dispatch(setSupplyChainsCostsModalVisible(false));\r\n        // console.log('Supply Chains Costs updated successfully');\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n\r\n        dispatch(setSupplyChainsCostsModalVisible(false));\r\n        dispatch(setVehicleListSupplyChainsCostsData([]));\r\n        globalSupplyChainCostsData = [];\r\n        globalCurrentSupplyChainCostsData = [];\r\n        globalCurrentStockID = '';\r\n\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n  return (\r\n\r\n    <><Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 960 ? '90%' : '50%'} h={'auto'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 1380 ? 'column' : 'row'} alignItems={screenWidth <= 1380 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\r\n          <Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 1380 ? 'center' : ''}> {globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <View style={{ height: '100%' }}>\r\n            <View paddingBottom={5}>\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} ref={expenseViewRef}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\r\n                  <SupplyChainsCostsSortAndAddModal\r\n                    docName='ExpenseName'\r\n                    handleAddTextChange={handleAddExpenseNameTextChange}\r\n                    textAreaAdd={textAreaAddExpenseName}\r\n                    title='Expense Name'\r\n                    dataName={'expenseName'}\r\n                    databaseInit={projectExtensionFirestore}\r\n                    headerText=\"Rearrange/Add Expense Name\"\r\n                    data={expenseNameData}\r\n                    handleFirstModalClose={handleFirstModalClose}\r\n                    handleFirstModalOpen={handleFirstModalOpen} />\r\n                </View>\r\n                <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\r\n              </View>\r\n\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: screenWidth <= 960 ? 8 : 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={2}>Amount</Text>\r\n                </View>\r\n                <Input\r\n                  borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\r\n                  flex={3}\r\n                  ref={inputExpenseAmount}\r\n                  onChangeText={handleInputExpenseAmountChange}\r\n                  placeholder=\"Amount\"\r\n                  bgColor={'white'}\r\n                  placeholderTextColor={'muted.400'}\r\n                  InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\r\n              </View>\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\r\n                </View>\r\n                <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\r\n              </View>\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\r\n                  <SupplyChainsCostsSortAndAddModal\r\n                    docName='PaidTo'\r\n                    handleAddTextChange={handleAddPaidToTextChange}\r\n                    textAreaAdd={textAreaAddExpenseName}\r\n                    title='Paid To'\r\n                    dataName={'paidTo'}\r\n                    databaseInit={projectExtensionFirestore}\r\n                    headerText=\"Rearrange/Add Paid To\"\r\n                    data={paidToData}\r\n                    handleFirstModalClose={handleFirstModalClose}\r\n                    handleFirstModalOpen={handleFirstModalOpen} />\r\n                </View>\r\n                <SelectPaidTo paidToIsError={paidToIsError} />\r\n              </View>\r\n\r\n              <TouchableHighlight\r\n                onPress={handleSave}\r\n                underlayColor=\"lightgreen\"\r\n                style={{\r\n                  backgroundColor: '#16A34A',\r\n                  borderRadius: 5,\r\n                  margin: 1,\r\n                  flex: 1,\r\n                  width: screenWidth <= 960 ? '80%' : '40%',\r\n                  alignSelf: 'center',\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 10,\r\n                }}>\r\n                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                  <MaterialIcons name=\"add\" color=\"white\" size={20} />\r\n                  <Text style={{ color: 'white', marginLeft: 5 }}>ADD/EDIT</Text>\r\n                </View>\r\n              </TouchableHighlight>\r\n            </View>\r\n            {screenWidth >= 1360 ? (\r\n\r\n              <View>\r\n                <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#0642F4', }}\r\n                  flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\r\n                </View>\r\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n                  return (\r\n                    <View style={{ flexDirection: 'row', backgroundColor: '#D4D4D4', borderBottomColor: '#E4E4E7', borderBottomWidth: 1, justifyContent: 'center', alignItems: 'center', }} key={index}\r\n                      flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\r\n                      justifyContent={'center'} alignItems={'center'}>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      <View style={{ flex: 1, flexDirection: 'row', marginLeft: 1 }}\r\n                        flex={1} marginLeft={1} flexDir={'row'}>\r\n                        <TouchableHighlight\r\n                          onPress={() => handleEditPress(expenseData)}\r\n                          underlayColor={'#005691'}\r\n                          style={{\r\n                            flex: 1,\r\n                            margin: 1,\r\n                            borderRadius: 3,\r\n                          }}>\r\n                          <View\r\n                            style={{\r\n                              flex: 1,\r\n                              backgroundColor: '#06B6D4',\r\n                              borderRadius: 3,\r\n                              justifyContent: 'center',\r\n                              alignItems: 'center',\r\n                            }}>\r\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\r\n                          </View>\r\n                        </TouchableHighlight>\r\n                        <TouchableHighlight\r\n                          onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                          underlayColor={'#005691'}\r\n                          style={{\r\n                            flex: 1,\r\n                            margin: 1,\r\n                            borderRadius: 3,\r\n                          }}>\r\n                          <View\r\n                            style={{\r\n                              flex: 1,\r\n                              backgroundColor: '#EF4444',\r\n                              borderRadius: 3,\r\n                              justifyContent: 'center',\r\n                              alignItems: 'center',\r\n                            }}>\r\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                          </View>\r\n                        </TouchableHighlight>\r\n                        {/* <TouchableHighlight\r\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                        style={() => ({\r\n                          flex: 1,\r\n                          margin: 1,\r\n                          borderRadius: 3,\r\n                          backgroundColor: '#CD5C5C',\r\n                        })}>\r\n                        <View\r\n                          style={{\r\n                            flex: 1,\r\n                            borderRadius: 3,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            backgroundColor: '#CD5C5C',\r\n                          }}>\r\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                        </View>\r\n                      </TouchableHighlight> */}\r\n                      </View>\r\n                    </View>\r\n                  )\r\n                })}\r\n\r\n              </View>\r\n\r\n            ) : (\r\n\r\n              <View>\r\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n                  return (\r\n\r\n                    <View style={{ flexDirection: 'column', justifyContent: 'center', flex: 1, margin: 3, marginBottom: 10, }} key={index}>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Expense Name</Text>\r\n                        </View>\r\n\r\n                        <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Amount</Text>\r\n                        </View>\r\n\r\n                        <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Date</Text>\r\n                        </View>\r\n                        <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Paid To</Text>\r\n                        </View>\r\n                        <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Modify</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, flexDirection: 'row', }}\r\n                          flex={1} marginLeft={1} flexDir={'row'}>\r\n\r\n                          <TouchableHighlight\r\n                            onPress={() => handleEditPress(expenseData)}\r\n                            underlayColor={'#005691'}\r\n                            style={{\r\n                              flex: 1,\r\n                              margin: 1,\r\n                              borderRadius: 3,\r\n                            }}>\r\n                            <View\r\n                              style={{\r\n                                flex: 1,\r\n                                backgroundColor: '#06B6D4',\r\n                                borderRadius: 3,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                              }}>\r\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\r\n                            </View>\r\n                          </TouchableHighlight>\r\n                          <TouchableHighlight\r\n                            onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                            underlayColor={'#005691'}\r\n                            style={{\r\n                              flex: 1,\r\n                              margin: 1,\r\n                              borderRadius: 3,\r\n                            }}>\r\n                            <View\r\n                              style={{\r\n                                flex: 1,\r\n                                backgroundColor: '#EF4444',\r\n                                borderRadius: 3,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                              }}>\r\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                            </View>\r\n                          </TouchableHighlight>\r\n                          {/* <TouchableHighlight\r\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                        style={() => ({\r\n                          flex: 1,\r\n                          margin: 1,\r\n                          borderRadius: 3,\r\n                          backgroundColor: '#CD5C5C',\r\n                        })}>\r\n                        <View\r\n                          style={{\r\n                            flex: 1,\r\n                            borderRadius: 3,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            backgroundColor: '#CD5C5C',\r\n                          }}>\r\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                        </View>\r\n                      </TouchableHighlight> */}\r\n                        </View>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n\r\n                  )\r\n                })}\r\n\r\n              </View>\r\n\r\n\r\n            )}\r\n\r\n          </View>\r\n\r\n\r\n        </Modal.Body>\r\n        <View\r\n          style={{\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            width: '100%',\r\n          }}>\r\n          <TouchableOpacity\r\n            onPress={handleModalSupplyChainsCostsClose}\r\n            style={{\r\n              backgroundColor: '#525252',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Close</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ flex: 4 }} />\r\n          <TouchableOpacity\r\n            onPress={handleSaveSupplyChainsCosts}\r\n            style={{\r\n              backgroundColor: '#16A34A',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Save</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Modal.Content>\r\n    </Modal>\r\n      {/* <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n        <Modal.Content bgColor={'amber.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'amber.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'amber.600'}\r\n            margin={5}>\r\n            <View flex={1}>\r\n              <Text color={'amber.600'} bold>Warning!</Text>\r\n              <Text color={'amber.600'}>Are you sure you want to clear?</Text>\r\n            </View>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleClearModalClose}\r\n                colorScheme={'warmGray'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button\r\n                onPress={() => {\r\n                }}\r\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                Clear\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal> */}\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nconst SelectPaidTo = ({ paidToIsError, }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedPaidTo}\r\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedPaidTo = value\r\n      dispatch(setSelectedPaidTo(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Paid To\"\r\n    placeholder=\"Choose Paid To\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {paidToData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n    ;\r\n};\r\n\r\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  nameVariable.text = loginName;\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n    handleFirstModalClose();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n    handleFirstModalOpen();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        // console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'flex-end', marginRight: 1 }}>\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity onPress={handleSortModalOpen}>\r\n            <MaterialCommunityIcons name=\"playlist-edit\" size={25} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n      </View>\r\n\r\n      <Modal isOpen={modalSortOpen} onClose={handleSortModalClose} useRNModal>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <View style={{\r\n              width: '100%',\r\n              flexDirection: 'column',\r\n            }}>\r\n              <View style={{ alignItems: 'flex-end' }}>\r\n                <TouchableHighlight onPress={handleModalAddOpen}>\r\n                  <FontAwesome name=\"plus-circle\" size={25} color=\"#102A43\" />\r\n                </TouchableHighlight>\r\n              </View>\r\n\r\n              <View style={{\r\n                flex: 1,\r\n                borderWidth: 1,\r\n                borderColor: '#102A43',\r\n                borderRadius: 5,\r\n              }}>\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n                    <View\r\n                      style={{\r\n                        flex: 1,\r\n                        backgroundColor: 'rgba(16,42,67, 0.5)',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#D3D3D3', // You can use a specific color code here\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                      }}\r\n                    >\r\n                      <TouchableOpacity onPress={() => handleDeleteItemPress(item)}>\r\n                        <AntDesign name=\"minuscircle\" size={16} color=\"#102A43\" />\r\n                      </TouchableOpacity>\r\n                      <Text style={{ flex: 1, textAlign: 'center', color: 'white' }}>{item}</Text>\r\n                      <TouchableOpacity onPressIn={drag}>\r\n                        <Entypo name=\"menu\" size={16} color=\"#102A43\" />\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </View>\r\n            </View>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <View style={{ flexDirection: 'row', flex: 1 }}>\r\n              <TouchableOpacity\r\n                onPress={handleSortModalClose}\r\n                style={{\r\n                  flex: 1,\r\n                  borderRadius: 5,\r\n                  backgroundColor: '#525252',\r\n                  margin: 5,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 8,\r\n                }}\r\n              >\r\n                <Text style={{ color: 'white' }}>Close</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={handleModalSaveOpen}\r\n                style={{\r\n                  flex: 1,\r\n                  borderRadius: 5,\r\n                  backgroundColor: '#0891B2',\r\n                  margin: 5,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 8,\r\n                }}\r\n              >\r\n                <Text style={{ color: 'white' }}>Save</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} useRNModal>\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nconst SCC_Modals = () => {\r\n\r\n  const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible)\r\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const currentDate = useSelector((state) => state.currentDate);\r\n  const vehicleListSupplyChainsCostsData = useSelector((state) => state.vehicleListSupplyChainsCostsData);\r\n\r\n  return (\r\n    <AllSccModals\r\n      supplyChainsCostsModalVisible={supplyChainsCostsModalVisible}\r\n      supplyChainsCostsData={supplyChainsCostsData}\r\n      expenseNameData={expenseNameData}\r\n      paidToData={paidToData}\r\n      currentDate={currentDate}\r\n      vehicleListSupplyChainsCostsData={vehicleListSupplyChainsCostsData}\r\n    />\r\n  );\r\n}\r\n\r\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\r\n\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const handleModalCalendarOpen = () => {\r\n    setModalCalendarVisible(true);\r\n  };\r\n\r\n  const handleModalCalendarClose = () => {\r\n    setModalCalendarVisible(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <TouchableOpacity onPress={handleModalCalendarOpen} style={{ flex: 3 }}>\r\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n      </TouchableOpacity>\r\n\r\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n        <Modal.CloseButton />\r\n        <Modal.Content>\r\n          <Box height={'full'} flex={1}>\r\n\r\n            <Calendar\r\n              onDayPress={useCallback(day => {\r\n                setSelectedDate(day.dateString);\r\n                // console.log(day.dateString);\r\n                globalSPCSelectedDate = day.dateString;\r\n                handleModalCalendarClose();\r\n              }, [])}\r\n              markedDates={{\r\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n              }}\r\n              renderArrow={(direction) => (\r\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n              )}\r\n              enableSwipeMonths={true}\r\n              initialDate={selectedDate}\r\n              showSixWeeks />\r\n\r\n          </Box>\r\n\r\n        </Modal.Content>\r\n\r\n      </Modal></>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedExpenseName}\r\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedExpenseName = value\r\n      dispatch(setSelectedExpenseName(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Expense Name\"\r\n    placeholder=\"Choose Expense Name\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {expenseNameData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n\r\n\r\n};\r\n\r\nconst VehicleEditModal = ({ handleEditModalClose }) => {\r\n\r\n  const editVehicleModalVisible = useSelector((state) => state.editVehicleModalVisible);\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  return (\r\n    <Modal isOpen={editVehicleModalVisible} onClose={handleEditModalClose} size={'full'}>\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'100%'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Edit Vehicle </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n\r\n\r\n        <Modal.Body >\r\n          Sit nulla est ex deserunt exercitation anim occaecat.\r\n        </Modal.Body>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n\r\n  );\r\n};\r\n\r\nconst EditVehicleModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEditModalClose = () => {\r\n    dispatch(setEditVehicleModalVisible(false));\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = '';\r\n    globalSelectedVehicleReferenceNumber = '';\r\n    globalSelectedCarName = '';\r\n\r\n  }\r\n\r\n  return (\r\n    <VehicleEditModal handleEditModalClose={handleEditModalClose} />\r\n\r\n\r\n  );\r\n\r\n};\r\n\r\nconst EditVehicle = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleModalOpen = () => {\r\n\r\n    dispatch(setEditVehicleModalVisible(true));\r\n    globalCurrentStockID = data.stockID;\r\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\r\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\r\n    globalSelectedCarName = data.carName;\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        onPress={handleModalOpen}\r\n        style={{\r\n          backgroundColor: '#7B9CFF',\r\n          marginHorizontal: 5,\r\n          borderRadius: 5,\r\n          padding: 2,\r\n          flex: 1,\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        {/* <Text style={{ textAlign: 'center',  color: 'white', }}>Edit</Text> */}\r\n        <MaterialIcons name={\"edit\"} color='white' size={22} />\r\n      </TouchableOpacity>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst ViewImagesModal = ({ handleViewImagesModalClose }) => {\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const viewImagesModalVisible = useSelector((state) => state.viewImagesModalVisible);\r\n  const viewImagesData = useSelector((state) => state.viewImagesData);\r\n\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    const styles = StyleSheet.create({\r\n      dropdown: {\r\n        margin: 16,\r\n        height: 50,\r\n        borderBottomColor: 'gray',\r\n        borderBottomWidth: 0.5,\r\n      },\r\n      icon: {\r\n        marginRight: 5,\r\n      },\r\n      placeholderStyle: {\r\n        fontSize: 16,\r\n      },\r\n      selectedTextStyle: {\r\n        fontSize: 16,\r\n      },\r\n      iconStyle: {\r\n        width: 20,\r\n        height: 20,\r\n      },\r\n      inputSearchStyle: {\r\n        height: 40,\r\n        fontSize: 16,\r\n      },\r\n      container: {\r\n        flex: 1,\r\n        paddingTop: 20,\r\n\r\n      },\r\n      txt: {\r\n        fontSize: 18,\r\n        lineHeight: 24,\r\n        padding: 5\r\n      },\r\n      sort: {\r\n      },\r\n      item_children: {\r\n        width: 90,\r\n        height: 90,\r\n        backgroundColor: 'black',\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      },\r\n      item_delete_icon: {\r\n        width: 14,\r\n        height: 14,\r\n        position: \"absolute\",\r\n        right: 1,\r\n        top: 1\r\n      },\r\n      item_icon: {\r\n        width: 90,\r\n        height: 90,\r\n        resizeMode: \"contain\",\r\n        position: \"absolute\"\r\n      }\r\n    });\r\n\r\n    return (\r\n\r\n      <Box key={item.id} style={styles.item}>\r\n        <Box style={styles.item_children}>\r\n\r\n          <FastImage\r\n            style={styles.item_icon}\r\n            source={{\r\n              uri: item.uri,\r\n              priority: FastImage.priority.normal,\r\n            }}\r\n            resizeMode={FastImage.resizeMode.contain}\r\n\r\n          />\r\n\r\n        </Box>\r\n      </Box>\r\n    );\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <>\r\n      <Modal isOpen={viewImagesModalVisible} onClose={handleViewImagesModalClose} size={'full'} useRNModal>\r\n        <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '60%'} h={'100%'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n            <Text color={'white'} fontSize={20} bold>View Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n          </Modal.Header>\r\n\r\n\r\n          <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', margin: '5%', marginLeft: '10%' }}>\r\n\r\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n              <ScrollView style={{ height: '90%' }}>\r\n                <DragSortableView\r\n                  sortable={false}\r\n                  // ref={dragSortableViewRef}\r\n                  dataSource={viewImagesData}\r\n                  parentWidth={width * 0.33}\r\n                  childrenWidth={100}\r\n                  childrenHeight={100}\r\n                  marginChildrenTop={3}\r\n                  marginChildrenBottom={0}\r\n                  marginChildrenLeft={0}\r\n                  marginChildrenRight={0}\r\n                  onClickItem={(item, index) => {\r\n                    handleImagePress(index.uri);\r\n                  }}\r\n                  keyExtractor={(item) => item.uri}\r\n                  renderItem={useCallback((item, index) => getImagesRenderItem(item, index), [])}\r\n                />\r\n              </ScrollView>\r\n            </View>\r\n\r\n\r\n          </View>\r\n\r\n\r\n        </Modal.Content>\r\n\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\n\r\nconst FobPriceHistoryModal = ({ handleFobPriceHistoryClose }) => {\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const fobPriceHistoryModalVisible = useSelector((state) => state.fobPriceHistoryModalVisible);\r\n  const fobHistoryData = useSelector((state) => state.fobHistoryData);\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={fobPriceHistoryModalVisible}\r\n      onClose={handleFobPriceHistoryClose}\r\n      size={'full'}\r\n      useRNModal\r\n    >\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'auto'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} alignItems={screenWidth <= 960 ? 'center' : 'flex-start'}>\r\n          <Text color={'white'} fontSize={20} bold>FOB Price History </Text>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ScrollView style={{ width: '100%' }}>\r\n            {screenWidth >= 960 ? (\r\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\r\n                {/* Table Header */}\r\n                <View style={{\r\n                  borderRadius: 3,\r\n                  backgroundColor: '#0642F4',\r\n                  flexDirection: 'row',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#0642F4',\r\n                }}>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\r\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n\r\n                </View>\r\n\r\n                {/* Table Rows */}\r\n                {[...fobHistoryData]\r\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\r\n                  .map((data, index) => (\r\n                    <View\r\n                      key={index}\r\n                      style={{\r\n                        backgroundColor: '#BBF7D0',\r\n                        flexDirection: 'row',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#CCCCCC',\r\n                      }}\r\n                    >\r\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\r\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\r\n                      <Text style={{ width: '20%', fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\r\n                    </View>\r\n                  ))\r\n                }\r\n              </View>\r\n            ) : (\r\n              // Mobile View FOB Price History\r\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\r\n                {/* Table Header */}\r\n                {/* <View style={{\r\n                  borderRadius: 3,\r\n                  backgroundColor: '#0642F4',\r\n                  flexDirection: 'row',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#0642F4',\r\n                }}>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price</Text>\r\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n\r\n                </View> */}\r\n\r\n                {/* Table Rows */}\r\n                {[...fobHistoryData]\r\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\r\n                  .map((data, index) => (\r\n                    <View\r\n                      key={index}\r\n                      style={{\r\n                        backgroundColor: '#BBF7D0',\r\n                        flexDirection: 'column',\r\n                        borderWidth: 1,\r\n                        borderColor: '#E4E4E7',\r\n                        margin: 3,\r\n                      }}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                        </View>\r\n\r\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\r\n                        </View><Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n                        </View>\r\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\r\n                      </View>\r\n                    </View>\r\n                  ))\r\n                }\r\n              </View>\r\n            )}\r\n\r\n          </ScrollView>\r\n\r\n\r\n\r\n\r\n        </Modal.Body>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nconst FobPriceHistory = () => {\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleFobPriceHistoryClose = () => {\r\n\r\n    dispatch(setFobPriceHistoryModalVisible(false));\r\n    globalFobPriceHistoryData = [];\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = '';\r\n    globalSelectedVehicleReferenceNumber = '';\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <FobPriceHistoryModal handleFobPriceHistoryClose={handleFobPriceHistoryClose} />\r\n\r\n  );\r\n}\r\n\r\n\r\nconst ImageCountComponent = ({ item, handleViewImagesModalOpen, handleUploadImagesModalOpen }) => {\r\n  // State for the image count\r\n  const [imageCount, setImageCount] = useState(item.imageCount || 0);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        setImageCount(data.imageCount || 0); // Update the image count with the new value from Firestore\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, [item.stockID]); // useEffect will re-run if item.stockID changes\r\n\r\n  // Function placeholders\r\n  // const handleViewImagesModalOpen = (item) => {\r\n  //   console.log('View images', item);\r\n  // };\r\n\r\n  // const handleUploadImagesModalOpen = (item) => {\r\n  //   console.log('Upload images', item);\r\n  // };\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n      {imageCount > 0 ? (\r\n        <TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n          <Text style={{ textDecorationLine: 'underline' }}>\r\n            {imageCount} image/s\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ) : (\r\n        <Text>{imageCount} image/s</Text>\r\n      )}\r\n\r\n      <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n        {imageCount > 0 ? null : (\r\n          <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n        )}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst FobPriceInput = ({ item, index, }) => {\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const [fobPrice, setFobPrice] = useState(item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : '');\r\n  const inputFobJpy = useRef([]);\r\n\r\n  useEffect(() => {\r\n    // Assume you have a collection named 'stocks' and the document ID is `item.stockID`\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\r\n      // console.log(`Read ${doc.size} documents from VehicleProducts`);\r\n\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        // Update the fobPrice state with the new value from Firestore\r\n        setFobPrice(data.fobPrice ? parseFloat(data.fobPrice).toLocaleString() : '');\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // ... rest of your component\r\n  const formatValueWithCommas = (value) => {\r\n    const numericValue = value.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    return formattedValue;\r\n  };\r\n\r\n  const handleTextChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    const currentNumericValue = fobPrice.replace(/[^0-9]/g, '');\r\n\r\n    // Update state only if the numeric value has changed\r\n    if (numericValue !== currentNumericValue) {\r\n      setFobPrice(numericValue);\r\n    }\r\n  };\r\n\r\n  // This function will format the displayed text\r\n  const handleInputFobJpyChange = (text, stockID) => {\r\n    const formattedValue = formatValueWithCommas(text);\r\n\r\n    // Apply the formatted value to the input without resetting the state\r\n    if (inputFobJpy.current[stockID]) {\r\n      inputFobJpy.current[stockID].setNativeProps({ text: formattedValue });\r\n    }\r\n  };\r\n\r\n  const handleSaveFob = async (item, index,) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    toast.closeAll();\r\n    // if (item.fobPrice == fobValue || fobValue == '') {\r\n    //   dispatch(setLoadingModalVisible(false));\r\n\r\n    //   console.log('same');\r\n    //   console.log(item.fobPrice);\r\n\r\n    // }\r\n    // else {\r\n\r\n    const fobHistoryData = {\r\n      date: formattedTime,\r\n      fobPrice: fobValue,\r\n      changedBy: nameVariable.text,\r\n    };\r\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n    try {\r\n      await updateDoc(vehicleProductRef, {\r\n        fobPrice: fobValue,\r\n        fobHistory: arrayUnion(fobHistoryData)\r\n      });\r\n      const logData = {\r\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle FOB Price Updated'.toLowerCase(),\r\n          'Vehicle FOB Price'.toLowerCase(),\r\n          'Vehicle FOB'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'FOB Price Updated'.toLowerCase(),\r\n          'FOB Price'.toLowerCase(),\r\n          'FOB'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n      // console.log('FOB Price updated successfully');\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    // }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextInput\r\n        ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n        value={formatValueWithCommas(fobPrice)} // Display the formatted value\r\n        style={{ outlineStyle: 'none', flex: 1, padding: 5, borderRadius: 5, width: '90%' }}\r\n        key={item.id}\r\n        onChangeText={(text) => {\r\n          handleTextChange(text); // This sets the numeric value state\r\n          handleInputFobJpyChange(text, item.stockID); // This formats the display\r\n        }}\r\n        onSubmitEditing={() => handleSaveFob(item, index)} />\r\n      <TouchableHighlight\r\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n        onPress={() => handleSaveFob(item, index)}\r\n        style={{\r\n          backgroundColor: '#16A34A',\r\n          borderRadius: 5,\r\n          padding: 5,\r\n          margin: 2,\r\n          alignSelf: 'center',\r\n        }}>\r\n        {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n        <MaterialIcons name='update' color='white' size={22} />\r\n      </TouchableHighlight>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst VehicleListTable = () => {\r\n  const toast = useToast();\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const dispatch = useDispatch();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [data, setData] = useState([]);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const vehicleListData = useSelector((state) => state.vehicleListData);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const searchInputRef = useRef(null);\r\n\r\n\r\n  const [stockIDs, setStockIDs] = useState([]);\r\n  const [imageCounts, setImageCounts] = useState([]);\r\n\r\n  const inputExpenseAmount = useRef(null);\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const inputFobJpy = useRef([]);\r\n  const [pageClicked, setPageClicked] = useState('');\r\n  const [lastVisible, setLastVisible] = useState(null);\r\n  const [firstVisible, setFirstVisible] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [fobPrices, setFobPrices] = useState({});\r\n  // Memoize the filtered data using useMemo\r\n  const [sortField, setSortField] = useState('dateAdded'); // null when sorting is off\r\n  const [isSortActive, setIsSortActive] = useState(false);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  nameVariable.text = loginName;\r\n\r\n  const handleSortChange = (field) => {\r\n    setCurrentPage(1);\r\n    // If the field is the same as the current sortField, toggle sorting\r\n    setSearchText('');\r\n    searchInputRef.current.clear();\r\n    if (field === sortField) {\r\n      setIsSortActive(!isSortActive); // Toggle sorting for the same field\r\n      if (!isSortActive) {\r\n        // If it was off, we turn it on and keep the same field\r\n        setSortField(field);\r\n      } else {\r\n        // If it was on, we turn it off and reset to default 'dateAdded'\r\n        setSortField('dateAdded');\r\n      }\r\n    } else {\r\n      // If the field is different, turn sorting on and change the field\r\n      setSortField(field);\r\n      setIsSortActive(true); // Always turn on sorting when a new field is clicked\r\n    }\r\n    // You might want to dispatch setLoadingModalVisible(true) when you start a new query\r\n    dispatch(setLoadingModalVisible(true));\r\n  };\r\n\r\n\r\n  const fetchWithSort = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n    let q;\r\n\r\n    if (searchText === '') {\r\n      q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        limit(pageSize)\r\n      );\r\n    } else {\r\n      q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        limit(pageSize)\r\n      );\r\n    }\r\n\r\n    try {\r\n      const documents = await getDocs(q);\r\n      const vehicleProductData = [];\r\n      documents.forEach((document) => {\r\n        vehicleProductData.push({\r\n          id: document.id,\r\n          ...document.data(),\r\n        });\r\n      });\r\n      dispatch(setVehicleListData(vehicleProductData));\r\n      setLastVisible(documents.docs[documents.docs.length - 1]);\r\n      setFirstVisible(documents.docs[0]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching vehicle products:\", error);\r\n    } finally {\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchWithSort();\r\n  }, [sortField])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // Determine the field and direction to sort by\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n    // Define the query\r\n    const q = query(\r\n      collection(projectExtensionFirestore, 'VehicleProducts'),\r\n      orderBy(fieldToSortBy, sortDirection),\r\n      limit(pageSize)\r\n    );\r\n\r\n    // Fetch the data once\r\n    getDocs(q)\r\n      .then((documents) => {\r\n        const vehicleProductData = [];\r\n        documents.forEach((document) => {\r\n          vehicleProductData.push({\r\n            id: document.id,\r\n            ...document.data(),\r\n          });\r\n        });\r\n        dispatch(setVehicleListData(vehicleProductData));\r\n        setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        setFirstVisible(documents.docs[0]);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching vehicle products: \", error);\r\n        // Handle the error appropriately\r\n      });\r\n\r\n    // Since this effect does not subscribe to real-time updates, there's no need to return a cleanup function\r\n  }, [projectExtensionFirestore, pageSize, sortField, isSortActive]); // Add dependencies as necessary\r\n\r\n\r\n\r\n  const fetchNextData = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n\r\n    if (searchText === '') {\r\n\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        startAfter(lastVisible),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'next');\r\n\r\n\r\n\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n    }\r\n\r\n    else {\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        startAfter(lastVisible),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'next');\r\n\r\n\r\n\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const fetchPreviousData = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n    if (searchText === '') {\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        endBefore(firstVisible),\r\n        limitToLast(pageSize)\r\n      );\r\n\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'prev')\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n\r\n    else {\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        endBefore(firstVisible),\r\n        limitToLast(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'prev');\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  const fetchFirstPage = (documents) => {\r\n\r\n\r\n    const vehicleProductData = [];\r\n\r\n    documents.forEach((document) => {\r\n      vehicleProductData.push({\r\n        id: document.id,\r\n        ...document.data(),\r\n      });\r\n    });\r\n\r\n    dispatch(setVehicleListData(vehicleProductData));\r\n\r\n    if (documents?.docs[0]) {\r\n      setFirstVisible(documents.docs[0]);\r\n    }\r\n    if (documents?.docs[documents.docs.length - 1]) {\r\n      setLastVisible(documents.docs[documents.docs.length - 1]);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n    if (!documents.empty) {\r\n      const vehicleProductData = [];\r\n      documents.forEach((document) => {\r\n        vehicleProductData.push({\r\n          id: document.id,\r\n          ...document.data(),\r\n        });\r\n      });\r\n\r\n\r\n\r\n      if (documents?.docs[0]) {\r\n        setFirstVisible(documents.docs[0]);\r\n      }\r\n      if (documents?.docs[documents.docs.length - 1]) {\r\n        setLastVisible(documents.docs[documents.docs.length - 1]);\r\n      }\r\n\r\n      if (pageClicked == 'next') {\r\n        setCurrentPage(currentPage + 1);\r\n      }\r\n      if (pageClicked == 'prev') {\r\n        setCurrentPage(currentPage - 1);\r\n      }\r\n      if (vehicleProductData.length < 1) {\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n      }\r\n\r\n      dispatch(setVehicleListData(vehicleProductData));\r\n    }\r\n\r\n    else {\r\n      const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n      const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n      if (searchText == '') {\r\n        setCurrentPage(1);\r\n\r\n        const q = query(\r\n          collection(projectExtensionFirestore, 'VehicleProducts'),\r\n          orderBy(fieldToSortBy, sortDirection),\r\n          limit(pageSize)\r\n        );\r\n        const firstPageDocuments = await getDocs(q);\r\n        fetchFirstPage(firstPageDocuments);\r\n\r\n      }\r\n      else {\r\n\r\n        setCurrentPage(1);\r\n\r\n        const q = query(\r\n          collection(projectExtensionFirestore, 'VehicleProducts'),\r\n          where('keywords', 'array-contains', searchText.toUpperCase()),\r\n          orderBy(fieldToSortBy, sortDirection),\r\n          limit(pageSize)\r\n        );\r\n        const firstPageDocuments = await getDocs(q);\r\n        fetchFirstPage(firstPageDocuments);\r\n\r\n      }\r\n\r\n\r\n    }\r\n  };\r\n\r\n  const handleNextPage = async () => {\r\n    // setPageClicked('next');\r\n    dispatch(setLoadingModalVisible(true));\r\n    // setCurrentPage(currentPage + 1);\r\n    await fetchNextData();\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  const handlePreviousPage = async () => {\r\n    // setPageClicked('previous');\r\n    dispatch(setLoadingModalVisible(true));\r\n    // setCurrentPage(currentPage - 1);\r\n    await fetchPreviousData();\r\n\r\n\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    searchData();\r\n\r\n  }, [searchText])\r\n\r\n  const searchData = async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    if (searchText === '') {\r\n      setCurrentPage(1);\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const firstPageDocuments = await getDocs(q);\r\n      fetchFirstPage(firstPageDocuments);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n    }\r\n\r\n    else {\r\n      setCurrentPage(1);\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const firstPageDocuments = await getDocs(q);\r\n      fetchFirstPage(firstPageDocuments);\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const filteredData = useMemo(() => {\r\n    const sanitizedSearchQuery = searchQuery.trim().toLowerCase();\r\n\r\n    // Filter the data based on the sanitized searchQuery (removing whitespace from the beginning and end)\r\n    const filteredResults = vehicleListData.filter((item) => {\r\n      const carName = item.carName ? item.carName.trim().toLowerCase() : '';\r\n      const referenceNumber = item.referenceNumber ? item.referenceNumber.trim().toLowerCase() : '';\r\n      const chassisNumber = item.chassisNumber ? item.chassisNumber.trim().toLowerCase() : '';\r\n      const stockStatus = item.stockStatus ? item.stockStatus.trim().toLowerCase() : '';\r\n      const fobPrice = item.fobPrice ? item.fobPrice.toString().trim().toLowerCase() : '';\r\n\r\n      return (\r\n        carName.includes(sanitizedSearchQuery) ||\r\n        referenceNumber.includes(sanitizedSearchQuery) ||\r\n        chassisNumber.includes(sanitizedSearchQuery) ||\r\n        stockStatus.includes(sanitizedSearchQuery) ||\r\n        fobPrice.includes(sanitizedSearchQuery)\r\n      );\r\n    });\r\n\r\n    return filteredResults;\r\n  }, [searchQuery, vehicleListData]);\r\n\r\n\r\n\r\n  const formatValueWithCommas = (value) => {\r\n    const numericValue = value.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    return formattedValue;\r\n  };\r\n\r\n  // Function to handle input changes for each item\r\n  const handleInputFobJpyChange = (text, index) => {\r\n    const formattedValue = formatValueWithCommas(text);\r\n\r\n    if (inputFobJpy.current[index]) {\r\n      inputFobJpy.current[index].value = formattedValue;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const fetchImageCounts = async () => {\r\n\r\n    // Extract and store the stockIDs in the state\r\n    const ids = filteredData.map(item => item.stockID);\r\n    setStockIDs(ids);\r\n\r\n    // Fetch image counts\r\n    const counts = await Promise.all(\r\n      ids.map(async stockID => {\r\n        const count = await getImageCountInFolder(stockID);\r\n        return { stockID, count };\r\n      })\r\n    );\r\n\r\n    // Create an object where stockID is the index value\r\n    const imageCountsObject = counts.reduce((acc, { stockID, count }) => {\r\n      acc[stockID] = count;\r\n      return acc;\r\n    }, {});\r\n\r\n    setImageCounts(imageCountsObject);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImageCounts();\r\n  }, []);\r\n\r\n  const getImageCountInFolder = async (folderPath) => {\r\n    try {\r\n      const folderRef = ref(storage, folderPath);\r\n      const listResult = await listAll(folderRef);\r\n\r\n      return listResult.items.length;\r\n    } catch (error) {\r\n      console.error('Error getting image count:', error);\r\n      return -1; // Handle the error accordingly\r\n    }\r\n  };\r\n\r\n\r\n  const handleTextChange = (text) => {\r\n    setSearchQuery(text);\r\n  };\r\n\r\n  const handleFobPriceHistoryOpen = async (item) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n    dispatch(setFobPriceHistoryModalVisible(true));\r\n    if (item.stockID) {\r\n      const docRef = doc(projectExtensionFirestore, 'VehicleProducts', item.stockID);\r\n      try {\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n          // Assuming you have an action to set the FOB history like setFobHistory\r\n          dispatch(setFobHistoryData(docSnap.data().fobHistory || []));\r\n          dispatch(setLoadingModalVisible(false));\r\n\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching document: \", error);\r\n      }\r\n    }\r\n    // globalFobPriceHistoryData = item.fobHistory ? item.fobHistory : [];\r\n    globalCurrentStockID = item.stockID ? item.stockID : '';\r\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n\r\n  }\r\n\r\n  const handleSaveFob = async (item, index,) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    toast.closeAll();\r\n    // if (item.fobPrice == fobValue || fobValue == '') {\r\n    //   dispatch(setLoadingModalVisible(false));\r\n\r\n    // }\r\n    // else {\r\n\r\n    const fobHistoryData = {\r\n      date: formattedTime,\r\n      fobPrice: fobValue,\r\n      changedBy: nameVariable.text,\r\n    };\r\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n    try {\r\n      await updateDoc(vehicleProductRef, {\r\n        fobPrice: fobValue,\r\n        fobHistory: arrayUnion(fobHistoryData)\r\n      });\r\n      const logData = {\r\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle FOB Price Updated'.toLowerCase(),\r\n          'Vehicle FOB Price'.toLowerCase(),\r\n          'Vehicle FOB'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'FOB Price Updated'.toLowerCase(),\r\n          'FOB Price'.toLowerCase(),\r\n          'FOB'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n      // console.log('FOB Price updated successfully');\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    // }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n\r\n  const handleUploadImagesModalOpen = (item) => {\r\n    dispatch(setUploadImagesModalVisible(true));\r\n    globalCurrentStockID = item.stockID;\r\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n    globalSelectedCarName = item.carName;\r\n\r\n  }\r\n\r\n  const handleViewImagesModalOpen = async (item) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n    try {\r\n      await getImages(item.stockID);\r\n      globalCurrentStockID = item.stockID;\r\n      globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n      globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n      dispatch(setLoadingModalVisible(false));\r\n      dispatch(setViewImagesModalVisible(true));\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n  }\r\n\r\n  const handleViewImagesModalClose = () => {\r\n    dispatch(setViewImagesModalVisible(false));\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = ``;\r\n    globalSelectedVehicleReferenceNumber = '';\r\n    globalSelectedCarName = '';\r\n    dispatch(setViewImagesData([]));\r\n  };\r\n\r\n  const getImages = useCallback(async (folderName) => {\r\n    try {\r\n\r\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\r\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n\r\n      const urls = await Promise.all(\r\n        imageRefs.items.map(async (itemRef) => {\r\n          const uri = await getDownloadURL(itemRef);\r\n          return { uri, fileName: itemRef.name };\r\n        })\r\n      );\r\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\r\n      urls.sort((a, b) => {\r\n        const fileNameA = parseInt(a.fileName);\r\n        const fileNameB = parseInt(b.fileName);\r\n        return fileNameA - fileNameB;\r\n      });\r\n\r\n      if (urls.length > 0) {\r\n        dispatch(setViewImagesData(urls));\r\n\r\n      }\r\n\r\n      else {\r\n        dispatch(setViewImagesData([]));\r\n      }\r\n\r\n      // console.log(urls);\r\n\r\n    } catch (error) {\r\n      // Handle any errors that may occur during the Firebase operations\r\n      console.error('Error getting image URLs:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const addStockStatusToVehicleProducts = async () => {\r\n    const vehicleProductsRef = collection(projectExtensionFirestore, \"VehicleProducts\");\r\n\r\n    try {\r\n      const querySnapshot = await getDocs(vehicleProductsRef);\r\n      querySnapshot.forEach(async (doc) => {\r\n        const data = doc.data();\r\n\r\n        // Check if the imageCount field does not exist\r\n        if (data.stockStatus === undefined) {\r\n          try {\r\n            // If the imageCount field doesn't exist, initialize it to 0\r\n            await updateDoc(doc.ref, {\r\n              stockStatus: ''\r\n            });\r\n            console.log(`stockStatus initialized to 0 for document ID: ${doc.id}`);\r\n          } catch (error) {\r\n            console.error('Error initializing stockStatus field:', error);\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error reading VehicleProducts collection:\", error);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const handleSearchEnter = () => {\r\n    // setSortField('dateAdded');\r\n    // setIsSortActive(false)\r\n    if (searchInputRef.current?.value !== '') {\r\n      setSearchText(searchInputRef.current.value.trim());\r\n      setSortField('dateAdded');\r\n      setIsSortActive(false);\r\n    }\r\n    else {\r\n      setSearchText('');\r\n      setSortField('dateAdded');\r\n      setIsSortActive(false)\r\n      if (searchText == '') {\r\n\r\n        searchData();\r\n\r\n      }\r\n\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {screenWidth >= 1360 ?\r\n        (\r\n          <View style={{ flex: 1, }}>\r\n            <View>\r\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                returnKeyType='search'\r\n                autoCapitalize='none'\r\n\r\n              />\r\n            </View>\r\n            <View\r\n              style={{\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-between',\r\n                borderBottomWidth: 1,\r\n                borderBottomColor: '#E4E4E7',\r\n                backgroundColor: '#0642F4',\r\n                padding: 2,\r\n                borderRadius: 5,\r\n              }}>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Ref #</Text>\r\n              </View>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Car Name</Text>\r\n              </View>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Chassis #</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('imageCount')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'imageCount' ? '#FBBC04' : 'white', }} bold underline>Images</Text>\r\n                </TouchableOpacity></View>\r\n\r\n\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('stockStatus')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'stockStatus' ? '#FBBC04' : 'white', }} bold underline>Stock Status</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('fobPrice')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'fobPrice' ? '#FBBC04' : 'white', }} bold underline>FOB Price</Text>\r\n                </TouchableOpacity></View>\r\n\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', alignSelf: 'center', }} bold>Operate</Text>\r\n              </View>\r\n            </View>\r\n            {vehicleListData.map((item, index) => (\r\n              <View\r\n                key={item.id}\r\n                style={{\r\n                  flex: 1,\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'space-between',\r\n                  alignItems: 'center',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#E4E4E7',\r\n                  backgroundColor: '#BFDBFE',\r\n                  paddingVertical: 10,\r\n                }}>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.referenceNumber}</Text>\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', }}>{item.carName} </Text>\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', }}>{item.chassisNumber}</Text>\r\n                </View>\r\n                <ImageCountComponent item={item} handleViewImagesModalOpen={handleViewImagesModalOpen} handleUploadImagesModalOpen={handleUploadImagesModalOpen} />\r\n                {/* <View style={{ flex: 1, flexDirection: 'row' }}>\r\n\r\n                  {item.imageCount > 0 ?\r\n                    (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n                      <Text underline>\r\n                        {item.imageCount ? item.imageCount : 0} image/s\r\n                      </Text>\r\n                    </TouchableOpacity>) :\r\n                    (<Text>\r\n                      {item.imageCount ? item.imageCount : 0} image/s\r\n                    </Text>)\r\n                  }\r\n\r\n\r\n                  <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n                    {item.imageCount > 0 ? null : (\r\n                      <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n                    )}\r\n                  </TouchableOpacity>\r\n                </View> */}\r\n                <View style={{ flex: 1, }}>\r\n                  <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\r\n                  {/* <Text style={{ width: '90%', }}>{item.stockStatus}</Text> */}\r\n                </View>\r\n\r\n                <View style={{ width: '90%', flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, }}>\r\n                  <TouchableOpacity\r\n                    onPress={() => handleFobPriceHistoryOpen(item)}\r\n                    style={{\r\n                      margin: 5,\r\n                      alignSelf: 'center',\r\n                    }}>\r\n                    {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n                    <FontAwesome name='clock-o' color='black' size={22} />\r\n                  </TouchableOpacity>\r\n                  <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\r\n                  {/* <TextInput\r\n                    ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n                    defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\r\n                    style={{ flex: 1, padding: 5, borderRadius: 5, width: '90%', }}\r\n                    key={item.id}\r\n                    onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\r\n                    onSubmitEditing={() => handleSaveFob(item, index)} /> */}\r\n\r\n                </View>\r\n                <View style={{ flexDirection: 'row', flex: 1, alignItems: 'center', justifyContent: 'center', }}>\r\n                  <SupplyChainsCosts data={item} />\r\n                  {/* <EditVehicle data={item} /> */}\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={{\r\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\r\n              alignSelf: 'center',\r\n            }}>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <TouchableOpacity\r\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                  onPress={handlePreviousPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n\r\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={handleNextPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n\r\n\r\n\r\n\r\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\r\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\r\n\r\n            {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n              <TouchableOpacity\r\n                onPress={addStockStatusToVehicleProducts}>\r\n                <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                  <FontAwesome name='save' size={40} color={'white'} />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View> */}\r\n\r\n          </View>\r\n        ) :\r\n\r\n\r\n\r\n        (\r\n          <View style={{ flex: 1, }}>\r\n            <View >\r\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '98%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', alignSelf: 'center', marginTop: 5, }}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                returnKeyType='search'\r\n                autoCapitalize='none'\r\n              />\r\n            </View>\r\n\r\n            {vehicleListData.map((item, index) => (\r\n              <View\r\n                key={item.id}\r\n                style={{\r\n                  flex: 1,\r\n                  flexDirection: 'column',\r\n                  borderWidth: 1,\r\n                  borderColor: '#E4E4E7',\r\n                  backgroundColor: '#BFDBFE',\r\n                  margin: 10,\r\n                }}>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Ref #</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.referenceNumber}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Car Name</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.carName} </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Chassis #</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.chassisNumber}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Images</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    {item.imageCount > 0 ?\r\n                      (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n                        <Text underline style={{ marginLeft: 3 }}>\r\n                          {item.imageCount ? item.imageCount : 0} image/s\r\n                        </Text>\r\n                      </TouchableOpacity>) :\r\n                      (<Text style={{ marginLeft: 3 }}>\r\n                        {item.imageCount ? item.imageCount : 0} image/s\r\n                      </Text>)\r\n                    }\r\n\r\n\r\n                    <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n                      {item.imageCount > 0 ? null : (\r\n                        <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n                      )}\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>Stock Status</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, paddingVertical: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\r\n                  </View>\r\n                </View>\r\n\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>FOB Price ¥</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <TouchableOpacity\r\n                      onPress={() => handleFobPriceHistoryOpen(item)}\r\n                      style={{\r\n                        margin: 5,\r\n                        alignSelf: 'center',\r\n                      }}>\r\n                      {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n                      <FontAwesome name='clock-o' color='black' size={22} />\r\n                    </TouchableOpacity>\r\n                    <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\r\n\r\n                    {/* <TextInput\r\n                      ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n                      defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\r\n                      style={{ width: '90%', borderRadius: 5, }}\r\n                      key={item.id}\r\n                      onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\r\n                      onSubmitEditing={() => handleSaveFob(item, index)} /> */}\r\n                    {/* <TouchableHighlight\r\n                      underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                      onPress={() => handleSaveFob(item, index)}\r\n                      style={{\r\n                        backgroundColor: '#16A34A',\r\n                        margin: 2,\r\n                        marginLeft: 2,\r\n                        alignSelf: 'center',\r\n                        borderRadius: 5,\r\n                      }}>\r\n                      <MaterialIcons name='update' color='white' size={22} />\r\n                    </TouchableHighlight> */}\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                  </View>\r\n                  <View style={{ flexDirection: 'row', flex: 1, margin: 5, }}>\r\n                    <SupplyChainsCosts data={item} />\r\n                    {/* <EditVehicle data={item} /> */}\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={{\r\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\r\n              alignSelf: 'center',\r\n            }}>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <TouchableOpacity\r\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                  onPress={handlePreviousPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n\r\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={handleNextPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n            <TouchableOpacity\r\n              onPress={addKeywordsToVehicleProducts}>\r\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                <MaterialIcons name='save' size={40} color={'white'} />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View> */}\r\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={addImageCountToVehicleProducts}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <FontAwesome name='dollar' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View> */}\r\n            </View>\r\n\r\n\r\n\r\n\r\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\r\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\r\n\r\n          </View>\r\n\r\n        )}\r\n\r\n\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function VehicleList() {\r\n  const [email, setEmail] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n  const [isMobileView, setIsMobileView] = useState(false);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n\r\n\r\n  const [typeOfAccount, setTypeOfAccount] = useState('');\r\n\r\n\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [name, setName] = useState(loginName);\r\n  const [time, setTime] = useState('');\r\n\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const handleWidthChange = ({ window }) => {\r\n  //     setWidthState(window.width);\r\n  //   };\r\n\r\n  //   Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleWidthChange);\r\n  //   };\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   reloadData();\r\n  // }, [reloadData]);\r\n\r\n\r\n  // useEffect(() => {\r\n  // }, [typeOfAccount]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n      if (!user) {\r\n        navigation.navigate(\"Login\")\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(projectControlAuth)\r\n          .then(() => {\r\n            navigation.navigate('Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(projectControlAuth)\r\n        .then(() => {\r\n          navigation.navigate('Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = projectControlAuth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n      listenForNameChange(documentId);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const listenForNameChange = (documentId) => {\r\n\r\n\r\n    // To stop listening for updates, you can call unsubscribe()\r\n    // unsubscribe();\r\n  };\r\n\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(projectControlAuth).then(() => {\r\n      navigation.navigate('Login');\r\n      setEmail('');\r\n      setName('');\r\n    }).catch(() => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   const handleScreenResize = () => {\r\n  //     const screenWidth = Dimensions.get('window').width;\r\n  //     setIsMobileView(screenWidth < 1200);\r\n  //   };\r\n\r\n  //   // Initial check on component mount\r\n  //   handleScreenResize();\r\n\r\n  //   // Listen for screen dimension changes\r\n  //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n  //   // Cleanup event listener on component unmount\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleScreenResize);\r\n  //   };\r\n  // }, []);\r\n\r\n\r\n  const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#7B9CFF'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  const SuccessModal = ({ isOpen, onClose, bodyText, headerText }) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Modal isOpen={isOpen} onClose={onClose} useRNModal>\r\n          <Modal.Content bgColor={'green.100'}>\r\n            <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n              <Text textAlign={'center'} color={'#102A43'} bold>\r\n                😊😎 Success! 😎😊\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'green.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'green.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'green.600'} bold>\r\n                  {headerText}\r\n                  {/* Vehicle Added! */}\r\n                </Text>\r\n                <Text color={'green.600'}>\r\n                  {bodyText}\r\n                  {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n                  Ok\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    // <NativeBaseProvider>\r\n    <>\r\n\r\n      <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#7b9cff'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={2}\r\n          borderBottomColor={'cyan.500'}\r\n        >\r\n\r\n          <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n\r\n            <FastImage\r\n              source={{\r\n                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image} />\r\n          </Box>\r\n\r\n          {screenWidth <= 960 && <MobileViewDrawer\r\n            selectedScreen={selectedScreen} />}\r\n\r\n\r\n          <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n            <FastImage\r\n              source={{\r\n                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image} />\r\n          </Box>\r\n          <NamePopover name={name} handleSignOut={handleSignOut} />\r\n\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\r\n          {/* Sidebar */}\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen} />\r\n\r\n          {/* Main Content */}\r\n          {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n          {/* Main Content Content */}\r\n\r\n\r\n          {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n          <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\r\n            <ScrollView style={{ flex: 1, }} keyboardShouldPersistTaps='always'>\r\n              <View style={{ flex: 1, }}>\r\n                <VehicleListTable />\r\n\r\n\r\n              </View>\r\n            </ScrollView>\r\n            <SCC_Modals />\r\n            <EditVehicleModal />\r\n            <FobPriceHistory />\r\n            {/* <SuccessModal /> */}\r\n\r\n          </View>\r\n\r\n\r\n          {/* </Box> */}\r\n\r\n          {/* </Box> */}\r\n        </View>\r\n\r\n      </View>\r\n      <LoadingModal />\r\n\r\n    </>\r\n\r\n\r\n\r\n\r\n\r\n    // </NativeBaseProvider>\r\n\r\n\r\n\r\n\r\n  );\r\n\r\n};","import { useState, useEffect } from 'react';\r\nimport { collection, query, orderBy, startAfter, limit, onSnapshot } from 'firebase/firestore';\r\nimport { useSelector } from 'react-redux';\r\nimport { setVehicleListData } from '../redux/store';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const UsePagination = (projectExtensionFirestore) => {\r\n    const dispatch = useDispatch();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    // const [data, setData] = useState([]);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const handleNextPage = () => {\r\n        setCurrentPage(currentPage + 1);\r\n    };\r\n\r\n    const handlePreviousPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                let q;\r\n                if (lastVisible) {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n                        orderBy('dateAdded', 'desc'),\r\n                        startAfter(lastVisible),\r\n                        limit(pageSize)\r\n                    );\r\n                } else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n                        orderBy('dateAdded', 'desc'),\r\n                        limit(pageSize)\r\n                    );\r\n                }\r\n\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const vehicleProductData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        vehicleProductData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n                    if (!snapshot.empty) {\r\n                        setLastVisible(snapshot.docs[snapshot.docs.length - 1]);\r\n                    }\r\n\r\n                    // setData(vehicleProductData);\r\n                    dispatch(setVehicleListData(vehicleProductData));\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data: ', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [projectExtensionFirestore, currentPage, pageSize]);\r\n\r\n    return { handleNextPage, handlePreviousPage };\r\n};","import { configureStore, createSlice, } from '@reduxjs/toolkit'\r\nimport { useEffect, useMemo } from 'react';\r\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where, orderBy, limit } from 'firebase/firestore';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../../crossFirebase\";\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSelector } from 'react-redux';\r\n\r\nlet makeDataVariable = [];\r\nlet email = '';\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\n\r\nconst carImageUrlSlice = createSlice({\r\n  name: 'carImageUrl',\r\n  initialState: '',\r\n  reducers: {\r\n    setCarImageUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedFileUrlSlice = createSlice({\r\n  name: 'selectedFileUrl',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedFileUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst pdfViewerModalVisibleSlice = createSlice({\r\n  name: 'pdfViewerModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setPdfViewerModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedCustomerDataSlice = createSlice({\r\n  name: 'selectedCustomerData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedCustomerData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst previewInvoiceVisibleSlice = createSlice({\r\n  name: 'previewInvoiceVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setPreviewInvoiceVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst transactionModalVisibleSlice = createSlice({\r\n  name: 'transactionModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setTransactionModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst invoiceDataSlice = createSlice({\r\n  name: 'invoiceData',\r\n  initialState: {},\r\n  reducers: {\r\n    setInvoiceData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst deleteMessageTemplateVisibleSlice = createSlice({\r\n  name: 'deleteMessageTemplateVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeleteMessageTemplateVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loadMoreMessagesLoadingSlice = createSlice({\r\n  name: 'loadMoreMessagesLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadMoreMessagesLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst noMoreMessagesDataSlice = createSlice({\r\n  name: 'noMoreMessagesData',\r\n  initialState: false,\r\n  reducers: {\r\n    setNoMoreMessagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst readByListModalVisibleSlice = createSlice({\r\n  name: 'readByListModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setReadByListModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedChatDataSlice = createSlice({\r\n  name: 'selectedChatData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedChatData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst chatMessageBoxLoadingSlice = createSlice({\r\n  name: 'chatMessageBoxLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setChatMessageBoxLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatMessagesDataSlice = createSlice({\r\n  name: 'chatMessagesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setChatMessagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst chatListSearchTextSlice = createSlice({\r\n  name: 'chatListSearchText',\r\n  initialState: '',\r\n  reducers: {\r\n    setChatListSearchText: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst activeChatIdSlice = createSlice({\r\n  name: 'activeChatId',\r\n  initialState: '',\r\n  reducers: {\r\n    setActiveChatId: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loadMoreLoadingSlice = createSlice({\r\n  name: 'loadMoreLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadMoreLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst noMoreDataSlice = createSlice({\r\n  name: 'noMoreData',\r\n  initialState: false,\r\n  reducers: {\r\n    setNoMoreData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListLastVisibleSlice = createSlice({\r\n  name: 'chatListLastVisible',\r\n  initialState: null,\r\n  reducers: {\r\n    setChatListLastVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListDataSlice = createSlice({\r\n  name: 'chatListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setChatListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListImageUrlSlice = createSlice({\r\n  name: 'chatListImageUrl',\r\n  initialState: null,\r\n  reducers: {\r\n    setChatListImageUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\n\r\n\r\n\r\n// =============================== Freight ========================================\r\n\r\n\r\nconst countryPortsDataSlice = createSlice({\r\n  name: 'countryPortsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setCountryPortsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst addPortsForCountriesModalVisibleSlice = createSlice({\r\n  name: 'addPortsForCountriesModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddPortsForCountriesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst methodDataSlice = createSlice({\r\n  name: 'methodData',\r\n  initialState: [],\r\n  reducers: {\r\n    setMethodData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst inspectionIsRequiredDataSlice = createSlice({\r\n  name: 'inspectionIsRequiredData',\r\n  initialState: [],\r\n  reducers: {\r\n    setInspectionIsRequiredData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst inspectionNameDataSlice = createSlice({\r\n  name: 'inspectionNameData',\r\n  initialState: [],\r\n  reducers: {\r\n    setInspectionNameData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst deletePortModalVisibleSlice = createSlice({\r\n  name: 'deletePortModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeletePortModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst deleteCountryModalVisibleSlice = createSlice({\r\n  name: 'deleteCountryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeleteCountryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst addPortModalVisibleSlice = createSlice({\r\n  name: 'addPortModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddPortModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst addCountryModalVisibleSlice = createSlice({\r\n  name: 'addCountryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddCountryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst selectedButtonSlice = createSlice({\r\n  name: 'selectedButton',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedButton: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst freightCountriesDataSlice = createSlice({\r\n  name: 'freightCountriesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFreightCountriesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst freightPortsDataSlice = createSlice({\r\n  name: 'freightPortsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFreightPortsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\nconst fobHistoryDataSlice = createSlice({\r\n  name: 'fobHistoryData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFobHistoryData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst inputFobSlice = createSlice({\r\n  name: 'inputFob',\r\n  initialState: '',\r\n  reducers: {\r\n    setInputFob: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst fobPriceHistoryModalVisibleSlice = createSlice({\r\n  name: 'fobPriceHistoryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setFobPriceHistoryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst editVehicleModalVisibleSlice = createSlice({\r\n  name: 'editVehicleModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setEditVehicleModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst vehicleListDataSlice = createSlice({\r\n  name: 'vehicleListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setVehicleListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst addVehicleListDataSlice = createSlice({\r\n  name: 'addVehicleListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setAddVehicleListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst supplyChainsCostsModalVisibleSlice = createSlice({\r\n  name: 'supplyChainsCostsModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setSupplyChainsCostsModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst uploadImagesModalVisibleSlice = createSlice({\r\n  name: 'uploadImagesModalVisibleVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setUploadImagesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst vehicleListSupplyChainsCostsDataSlice = createSlice({\r\n  name: 'vehicleListSupplyChainsCostsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setVehicleListSupplyChainsCostsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst uploadImagesButtonLoadingSlice = createSlice({\r\n  name: 'uploadImagesButtonLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setUploadImagesButtonLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst viewImagesModalVisibleSlice = createSlice({\r\n  name: 'viewImagesModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setViewImagesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst viewImagesDataSlice = createSlice({\r\n  name: 'viewImagesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setViewImagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst lastVisibleSlice = createSlice({\r\n  name: 'lastVisible',\r\n  initialState: '',\r\n  reducers: {\r\n    setLastVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Account List ========================================\r\nconst accountListDataSlice = createSlice({\r\n  name: 'accountListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setAccountListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\n// =============================== Account List ========================================\r\n\r\n// =============================== Logs ======================================== \r\n\r\n\r\nconst logsDataSlice = createSlice({\r\n  name: 'logsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setLogsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// =============================== Logs ======================================== \r\n\r\n\r\nconst stockStatusDataSlice = createSlice({\r\n  name: 'stockStatusData',\r\n  initialState: [\r\n    'On-Sale',\r\n    'Reserved',\r\n    'Sold',\r\n    'Hidden',],\r\n  reducers: {\r\n    setStockStatusData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isSuccessModalOpenSlice = createSlice({\r\n  name: 'isSuccessModalOpen',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsSuccessModalOpen: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isUpdateSuccessModalOpenSlice = createSlice({\r\n  name: 'isUpdateSuccessModalOpen',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsUpdateSuccessModalOpen: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loadingModalVisibleSlice = createSlice({\r\n  name: 'loadingModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadingModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedExpenseNameSlice = createSlice({\r\n  name: 'selectedExpenseName',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedExpenseName: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedPaidToSlice = createSlice({\r\n  name: 'selectedPaidTo',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedPaidTo: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst supplyChainsCostsDataSlice = createSlice({\r\n  name: 'supplyChainsCostsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSupplyChainsCostsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst currentDateSlice = createSlice({\r\n  name: 'currentDate',\r\n  initialState: '',\r\n  reducers: {\r\n    setCurrentDate: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loginEmailSlice = createSlice({\r\n  name: 'loginEmail',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoginEmail: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loginNameSlice = createSlice({\r\n  name: 'loginName',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoginName: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst modalDeleteImagesVisibleSlice = createSlice({\r\n  name: 'modalDeleteImages',\r\n  initialState: false,\r\n  reducers: {\r\n    setModalDeleteImagesVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst addAnotherImagesSlice = createSlice({\r\n  name: 'addAnotherImagesVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddAnotherImages: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isAddPhotoVisibleSlice = createSlice({\r\n  name: 'isAddPhotoVisible',\r\n  initialState: true,\r\n  reducers: {\r\n    setIsAddPhotoVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst jpyToUsdSlice = createSlice({\r\n  name: 'jpyToUsd',\r\n  initialState: '',\r\n  reducers: {\r\n    setJpyToUsd: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst usdToJpySlice = createSlice({\r\n  name: 'usdToJpy',\r\n  initialState: '',\r\n  reducers: {\r\n    setUsdToJpy: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst modelDataSlice = createSlice({\r\n  name: 'modelData',\r\n  initialState: [],\r\n  reducers: {\r\n    setModelData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst makeDataSlice = createSlice({\r\n  name: 'makeData',\r\n  initialState: makeDataVariable,\r\n  reducers: {\r\n    setMakeData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst expenseNameDataSlice = createSlice({\r\n  name: 'expenseName',\r\n  initialState: [],\r\n  reducers: {\r\n    setExpenseNameData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst paidToDataSlice = createSlice({\r\n  name: 'paidTo',\r\n  initialState: [],\r\n  reducers: {\r\n    setPaidToData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedMakeSlice = createSlice({\r\n  name: 'selectedMake',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedMake: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isLoadingSlice = createSlice({\r\n  name: 'isLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedImagesSlice = createSlice({\r\n  name: 'selectedImages',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedImages: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst portDataSlice = createSlice({\r\n  name: 'portData',\r\n  initialState: [],\r\n  reducers: {\r\n    setPortData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst transmissionDataSlice = createSlice({\r\n  name: 'transmissionData',\r\n  initialState: [],\r\n  reducers: {\r\n    setTransmissionData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst fuelDataSlice = createSlice({\r\n  name: 'fuelData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFuelData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst buyerDataSlice = createSlice({\r\n  name: 'buyerData',\r\n  initialState: [],\r\n  reducers: {\r\n    setBuyerData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst salesDataSlice = createSlice({\r\n  name: 'salesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSalesData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst driveTypeDataSlice = createSlice({\r\n  name: 'driveTypeData',\r\n  initialState: [],\r\n  reducers: {\r\n    setDriveTypeData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst bodyTypeDataSlice = createSlice({\r\n  name: 'bodyTypeData',\r\n  initialState: [],\r\n  reducers: {\r\n    setBodyTypeData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst exteriorColorDataSlice = createSlice({\r\n  name: 'exteriorColorData',\r\n  initialState: [],\r\n  reducers: {\r\n    setExteriorColorData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst currentYearSlice = createSlice({\r\n  name: 'currentYear',\r\n  initialState: '',\r\n  reducers: {\r\n    setCurrentYear: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n\r\nconst deleteImageVisibleSlice = createSlice({\r\n  name: 'deleteImageVisible',\r\n  initialState: true,\r\n  reducers: {\r\n    setDeleteImageVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n});\r\n\r\n// =============================== Chat Messages ========================================\r\nexport const { setCarImageUrl } = carImageUrlSlice.actions\r\nexport const { setSelectedFileUrl } = selectedFileUrlSlice.actions\r\nexport const { setPdfViewerModalVisible } = pdfViewerModalVisibleSlice.actions\r\nexport const { setSelectedCustomerData } = selectedCustomerDataSlice.actions\r\nexport const { setPreviewInvoiceVisible } = previewInvoiceVisibleSlice.actions\r\nexport const { setInvoiceData } = invoiceDataSlice.actions\r\nexport const { setTransactionModalVisible } = transactionModalVisibleSlice.actions\r\nexport const { setDeleteMessageTemplateVisible } = deleteMessageTemplateVisibleSlice.actions\r\nexport const { setLoadMoreMessagesLoading } = loadMoreMessagesLoadingSlice.actions\r\nexport const { setNoMoreMessagesData } = noMoreMessagesDataSlice.actions\r\nexport const { setReadByListModalVisible } = readByListModalVisibleSlice.actions\r\nexport const { setSelectedChatData } = selectedChatDataSlice.actions\r\nexport const { setChatMessageBoxLoading } = chatMessageBoxLoadingSlice.actions\r\nexport const { setChatMessagesData } = chatMessagesDataSlice.actions\r\nexport const { setActiveChatId } = activeChatIdSlice.actions\r\nexport const { setChatListSearchText } = chatListSearchTextSlice.actions\r\nexport const { setLoadMoreLoading } = loadMoreLoadingSlice.actions\r\nexport const { setNoMoreData } = noMoreDataSlice.actions\r\nexport const { setChatListLastVisible } = chatListLastVisibleSlice.actions\r\nexport const { setChatListData } = chatListDataSlice.actions\r\nexport const { setChatListImageUrl } = chatListImageUrlSlice.actions\r\n// =============================== Chat Messages ========================================\r\n\r\n// =============================== Freight ========================================\r\nexport const { setDeletePortModalVisible } = deletePortModalVisibleSlice.actions\r\nexport const { setDeleteCountryModalVisible } = deleteCountryModalVisibleSlice.actions\r\nexport const { setCountryPortsData } = countryPortsDataSlice.actions\r\nexport const { setAddPortsForCountriesModalVisible } = addPortsForCountriesModalVisibleSlice.actions\r\nexport const { setInspectionIsRequiredData } = inspectionIsRequiredDataSlice.actions\r\nexport const { setMethodData } = methodDataSlice.actions\r\nexport const { setInspectionNameData } = inspectionNameDataSlice.actions\r\nexport const { setSelectedButton } = selectedButtonSlice.actions\r\nexport const { setAddCountryModalVisible } = addCountryModalVisibleSlice.actions\r\nexport const { setAddPortModalVisible } = addPortModalVisibleSlice.actions\r\nexport const { setFreightPortsData } = freightPortsDataSlice.actions\r\nexport const { setFreightCountriesData } = freightCountriesDataSlice.actions\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Vehicle List ========================================\r\nexport const { setInputFob } = inputFobSlice.actions\r\nexport const { setFobHistoryData } = fobHistoryDataSlice.actions\r\nexport const { setFobPriceHistoryModalVisible } = fobPriceHistoryModalVisibleSlice.actions\r\nexport const { setEditVehicleModalVisible } = editVehicleModalVisibleSlice.actions\r\nexport const { setVehicleListData } = vehicleListDataSlice.actions\r\nexport const { setAddVehicleListData } = addVehicleListDataSlice.actions\r\nexport const { setSupplyChainsCostsModalVisible } = supplyChainsCostsModalVisibleSlice.actions\r\nexport const { setVehicleListSupplyChainsCostsData } = vehicleListSupplyChainsCostsDataSlice.actions\r\nexport const { setUploadImagesModalVisible } = uploadImagesModalVisibleSlice.actions\r\nexport const { setUploadImagesButtonLoading } = uploadImagesButtonLoadingSlice.actions\r\nexport const { setViewImagesModalVisible } = viewImagesModalVisibleSlice.actions\r\nexport const { setViewImagesData } = viewImagesDataSlice.actions\r\nexport const { setLastVisible } = lastVisibleSlice.actions\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Account List ========================================\r\nexport const { setAccountListData } = accountListDataSlice.actions\r\n\r\n// =============================== Account List ========================================\r\n\r\n// =============================== Logs ======================================== \r\nexport const { setLogsData } = logsDataSlice.actions\r\n// =============================== Logs ======================================== \r\n\r\nexport const { setStockStatusData } = stockStatusDataSlice.actions\r\nexport const { setIsSuccessModalOpen } = isSuccessModalOpenSlice.actions\r\nexport const { setIsUpdateSuccessModalOpen } = isUpdateSuccessModalOpenSlice.actions\r\nexport const { setLoadingModalVisible } = loadingModalVisibleSlice.actions\r\nexport const { setSelectedPaidTo } = selectedPaidToSlice.actions\r\nexport const { setSelectedExpenseName } = selectedExpenseNameSlice.actions\r\nexport const { setSupplyChainsCostsData } = supplyChainsCostsDataSlice.actions\r\nexport const { setCurrentDate } = currentDateSlice.actions\r\nexport const { setPaidToData } = paidToDataSlice.actions\r\nexport const { setDeleteImageVisible } = deleteImageVisibleSlice.actions\r\nexport const { setExpenseNameData } = expenseNameDataSlice.actions\r\nexport const { setLoginEmail } = loginEmailSlice.actions\r\nexport const { setLoginName } = loginNameSlice.actions\r\nexport const { setIsAddPhotoVisible } = isAddPhotoVisibleSlice.actions\r\nexport const { setAddAnotherImages } = addAnotherImagesSlice.actions\r\nexport const { setModalDeleteImagesVisible } = modalDeleteImagesVisibleSlice.actions\r\nexport const { setMakeData } = makeDataSlice.actions\r\nexport const { setSelectedMake } = selectedMakeSlice.actions\r\nexport const { setIsLoading } = isLoadingSlice.actions\r\nexport const { setSelectedImages } = selectedImagesSlice.actions\r\nexport const { setPortData } = portDataSlice.actions\r\nexport const { setTransmissionData } = transmissionDataSlice.actions;\r\nexport const { setFuelData } = fuelDataSlice.actions;\r\nexport const { setBuyerData } = buyerDataSlice.actions;\r\nexport const { setSalesData } = salesDataSlice.actions;\r\nexport const { setDriveTypeData } = driveTypeDataSlice.actions;\r\nexport const { setBodyTypeData } = bodyTypeDataSlice.actions;\r\nexport const { setExteriorColorData } = exteriorColorDataSlice.actions;\r\nexport const { setJpyToUsd } = jpyToUsdSlice.actions;\r\nexport const { setUsdToJpy } = usdToJpySlice.actions;\r\nexport const { setCurrentYear } = currentYearSlice.actions;\r\nexport const { setModelData } = modelDataSlice.actions\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n\r\n    // =============================== Chat Messages ========================================     \r\n    carImageUrl: carImageUrlSlice.reducer,\r\n    selectedFileUrl: selectedFileUrlSlice.reducer,\r\n    pdfViewerModalVisible: pdfViewerModalVisibleSlice.reducer,\r\n    selectedCustomerData: selectedCustomerDataSlice.reducer,\r\n    previewInvoiceVisible: previewInvoiceVisibleSlice.reducer,\r\n    invoiceData: invoiceDataSlice.reducer,\r\n    transactionModalVisible: transactionModalVisibleSlice.reducer,\r\n    deleteMessageTemplateVisible: deleteMessageTemplateVisibleSlice.reducer,\r\n    loadMoreMessagesLoading: loadMoreMessagesLoadingSlice.reducer,\r\n    noMoreMessagesData: noMoreMessagesDataSlice.reducer,\r\n    readByListModalVisible: readByListModalVisibleSlice.reducer,\r\n    selectedChatData: selectedChatDataSlice.reducer,\r\n    chatMessageBoxLoading: chatMessageBoxLoadingSlice.reducer,\r\n    chatMessagesData: chatMessagesDataSlice.reducer,\r\n    chatListSearchText: chatListSearchTextSlice.reducer,\r\n    activeChatId: activeChatIdSlice.reducer,\r\n    loadMoreLoading: loadMoreLoadingSlice.reducer,\r\n    noMoreData: noMoreDataSlice.reducer,\r\n    chatListLastVisible: chatListLastVisibleSlice.reducer,\r\n    chatListData: chatListDataSlice.reducer,\r\n    chatListImageUrl: chatListImageUrlSlice.reducer,\r\n    // =============================== Chat Messages ======================================== \r\n\r\n    // =============================== Freight ======================================== \r\n    deletePortModalVisible: deletePortModalVisibleSlice.reducer,\r\n    deleteCountryModalVisible: deleteCountryModalVisibleSlice.reducer,\r\n    countryPortsData: countryPortsDataSlice.reducer,\r\n    addPortsForCountriesModalVisible: addPortsForCountriesModalVisibleSlice.reducer,\r\n    inspectionIsRequiredData: inspectionIsRequiredDataSlice.reducer,\r\n    methodData: methodDataSlice.reducer,\r\n    freightPortsData: freightPortsDataSlice.reducer,\r\n    inspectionNameData: inspectionNameDataSlice.reducer,\r\n    addCountryModalVisible: addCountryModalVisibleSlice.reducer,\r\n    addPortModalVisible: addPortModalVisibleSlice.reducer,\r\n    freightCountriesData: freightCountriesDataSlice.reducer,\r\n    selectedButton: selectedButtonSlice.reducer,\r\n    // =============================== Freight ========================================\r\n\r\n    // =============================== Vehicle List ========================================\r\n    inputFob: inputFobSlice.reducer,\r\n    fobHistoryData: fobHistoryDataSlice.reducer,\r\n    fobPriceHistoryModalVisible: fobPriceHistoryModalVisibleSlice.reducer,\r\n    editVehicleModalVisible: editVehicleModalVisibleSlice.reducer,\r\n    vehicleListData: vehicleListDataSlice.reducer,\r\n    addVehicleListData: addVehicleListDataSlice.reducer,\r\n    supplyChainsCostsModalVisible: supplyChainsCostsModalVisibleSlice.reducer,\r\n    uploadImagesModalVisible: uploadImagesModalVisibleSlice.reducer,\r\n    uploadImagesButtonLoading: uploadImagesButtonLoadingSlice.reducer,\r\n    viewImagesModalVisible: viewImagesModalVisibleSlice.reducer,\r\n    viewImagesData: viewImagesDataSlice.reducer,\r\n    lastVisible: lastVisibleSlice.reducer,\r\n    // =============================== Vehicle List ========================================\r\n\r\n\r\n    // =============================== Account List ========================================\r\n    accountListData: accountListDataSlice.reducer,\r\n    // =============================== Account List ========================================\r\n\r\n\r\n    // =============================== Logs ======================================== \r\n    logsData: logsDataSlice.reducer,\r\n    // =============================== Logs ======================================== \r\n    stockStatusData: stockStatusDataSlice.reducer,\r\n    isUpdateSuccessModalOpen: isUpdateSuccessModalOpenSlice.reducer,\r\n    loadingModalVisible: loadingModalVisibleSlice.reducer,\r\n    selectedPaidTo: selectedPaidToSlice.reducer,\r\n    selectedExpenseName: selectedExpenseNameSlice.reducer,\r\n    supplyChainsCostsData: supplyChainsCostsDataSlice.reducer,\r\n    vehicleListSupplyChainsCostsData: vehicleListSupplyChainsCostsDataSlice.reducer,\r\n    currentDate: currentDateSlice.reducer,\r\n    paidToData: paidToDataSlice.reducer,\r\n    expenseNameData: expenseNameDataSlice.reducer,\r\n    modelData: modelDataSlice.reducer,\r\n    makeData: makeDataSlice.reducer,\r\n    selectedMake: selectedMakeSlice.reducer,\r\n    isLoading: isLoadingSlice.reducer,\r\n    selectedImages: selectedImagesSlice.reducer,\r\n    portData: portDataSlice.reducer,\r\n    transmissionData: transmissionDataSlice.reducer,\r\n    fuelData: fuelDataSlice.reducer,\r\n    buyerData: buyerDataSlice.reducer,\r\n    salesData: salesDataSlice.reducer,\r\n    driveTypeData: driveTypeDataSlice.reducer,\r\n    bodyTypeData: bodyTypeDataSlice.reducer,\r\n    exteriorColorData: exteriorColorDataSlice.reducer,\r\n    jpyToUsd: jpyToUsdSlice.reducer,\r\n    usdToJpy: usdToJpySlice.reducer,\r\n    currentYear: currentYearSlice.reducer,\r\n    isAddPhotoVisible: isAddPhotoVisibleSlice.reducer,\r\n    addAnotherImages: addAnotherImagesSlice.reducer,\r\n    modalDeleteImagesVisible: modalDeleteImagesVisibleSlice.reducer,\r\n    loginName: loginNameSlice.reducer,\r\n    loginEmail: loginEmailSlice.reducer,\r\n    deleteImageVisible: deleteImageVisibleSlice.reducer,\r\n  },\r\n\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: ['chatMessagesData/setChatMessagesData'],\r\n        ignoredPaths: ['chatMessagesData.somePathToTimestamp'],\r\n      },\r\n    }),\r\n});\r\n\r\n\r\nexport const fetchCurrency = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(projectControlFirestore, 'currency', 'currency');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const jpyToUsd = snapshot.data()?.jpyToUsd || [];\r\n        const usdToJpy = snapshot.data()?.usdToJpy || [];\r\n        dispatch(setJpyToUsd(jpyToUsd));\r\n        dispatch(setUsdToJpy(usdToJpy));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchExpenseNameData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'ExpenseName'), 'ExpenseName');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const expenseNameData = snapshot.data()?.expenseName || [];\r\n        dispatch(setExpenseNameData(expenseNameData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const fetchPaidToData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'PaidTo'), 'PaidTo');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const paidToData = snapshot.data()?.paidTo || [];\r\n        dispatch(setPaidToData(paidToData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const fetchMakeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Make'), 'Make');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const makeData = snapshot.data()?.make || [];\r\n        dispatch(setMakeData(makeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPortData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Port'), 'Port');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const portData = snapshot.data()?.port || [];\r\n        dispatch(setPortData(portData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// Dispatch the fetchMakeData action when your app starts or as needed\r\n\r\nexport const fetchTransmissionData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Transmission'), 'Transmission');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const transmissionData = snapshot.data()?.transmission || [];\r\n        dispatch(setTransmissionData(transmissionData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const fetchFuelData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Fuel'), 'Fuel');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const fuelData = snapshot.data()?.fuel || [];\r\n        dispatch(setFuelData(fuelData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBuyerData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Buyer'), 'Buyer');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const buyerData = snapshot.data()?.buyer || [];\r\n        dispatch(setBuyerData(buyerData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchSalesData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Sales'), 'Sales');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const salesData = snapshot.data()?.sales || [];\r\n        dispatch(setSalesData(salesData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchDriveTypeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'DriveType'), 'DriveType');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const driveTypeData = snapshot.data()?.driveType || [];\r\n        dispatch(setDriveTypeData(driveTypeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBodyTypeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'BodyType'), 'BodyType');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const bodyTypeData = snapshot.data()?.bodyType || [];\r\n        dispatch(setBodyTypeData(bodyTypeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchExteriorColorData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'ExteriorColor'), 'ExteriorColor');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const exteriorColorData = snapshot.data()?.exteriorColor || [];\r\n        dispatch(setExteriorColorData(exteriorColorData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchYear = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY');\r\n      dispatch(setCurrentYear(formattedTime));\r\n    } catch (error) {\r\n      console.error('Error fetching time:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchCurrentDate = () => {\r\n\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY-MM-DD');\r\n      dispatch(setCurrentDate(formattedTime));\r\n    } catch (error) {\r\n      console.error('Error fetching time:', error);\r\n    }\r\n  };\r\n};\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n\r\nexport const fetchVehicleListData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const queryRef = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n        const vehicleProductData = [];\r\n        snapshot.forEach((doc) => {\r\n          vehicleProductData.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(setVehicleListData(vehicleProductData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Logs ========================================\r\n// export const fetchLogsData = () => {\r\n//   return async (dispatch) => {\r\n//     try {\r\n\r\n//       const queryRef = query(\r\n//         collection(projectControlFirestore, 'logs'),\r\n//         orderBy('timestamp', 'desc'),\r\n//         limit(10)\r\n//       );\r\n\r\n//       const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n//         const logsDatabaseData = [];\r\n//         snapshot.forEach((doc) => {\r\n//           logsDatabaseData.push({\r\n//             id: doc.id,\r\n//             ...doc.data(),\r\n//           });\r\n//         });\r\n//         dispatch(setLogsData(logsDatabaseData));\r\n//       });\r\n\r\n//       // Return the unsubscribe function to stop listening when necessary\r\n//       return unsubscribe;\r\n//     } catch (error) {\r\n//       // Handle errors here\r\n//       console.error('Error fetching data from Firebase:', error);\r\n//     }\r\n//   };\r\n// };\r\n\r\n// =============================== Logs ========================================\r\n\r\n// =============================== Freight ========================================\r\n\r\nexport const fetchMethodData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'MethodDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const methodData = snapshot.data()?.methodData || [];\r\n        dispatch(setMethodData(methodData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchInspectionIsRequiredData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionIsRequiredDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const inspectionIsRequiredData = snapshot.data()?.inspectionIsRequiredData || [];\r\n        dispatch(setInspectionIsRequiredData(inspectionIsRequiredData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchInspectionNameData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionNameDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const inspectionNameData = snapshot.data()?.inspectionNameData || [];\r\n        dispatch(setInspectionNameData(inspectionNameData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\nexport const fetchChatListData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const queryRef = query(\r\n        collection(projectExtensionFirestore, 'chats'),\r\n        orderBy('lastMessageDate', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n        const chatsData = [];\r\n        snapshot.forEach((doc) => {\r\n          chatsData.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(setChatListData(chatsData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// =============================== Chat Messages ========================================\r\n// To stop listening for updates, you can call unsubscribe()\r\n// unsubscribe();\r\n\r\nstore.dispatch(fetchCurrentDate());\r\nstore.dispatch(fetchPaidToData());\r\nstore.dispatch(fetchExpenseNameData());\r\nstore.dispatch(fetchMakeData());\r\nstore.dispatch(fetchPortData());\r\nstore.dispatch(fetchTransmissionData());\r\nstore.dispatch(fetchFuelData());\r\nstore.dispatch(fetchBuyerData());\r\nstore.dispatch(fetchSalesData());\r\nstore.dispatch(fetchDriveTypeData());\r\nstore.dispatch(fetchBodyTypeData());\r\nstore.dispatch(fetchExteriorColorData());\r\nstore.dispatch(fetchCurrency());\r\nstore.dispatch(fetchYear());\r\n\r\n\r\n\r\n// store.dispatch(fetchVehicleListData());\r\n\r\nstore.dispatch(fetchMethodData());\r\nstore.dispatch(fetchInspectionIsRequiredData());\r\nstore.dispatch(fetchInspectionNameData());\r\n\r\n// store.dispatch(fetchChatListData());\r\n\r\n\r\nexport default store","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport {\r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID\r\n} from '@env';\r\n\r\nimport {\r\n  REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID\r\n} from '@env';\r\n\r\n// Configuration for Firebase project 1\r\nconst firebaseConfigControl = {\r\n  apiKey: REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain: REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL: REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId: REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket: REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId: REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId: REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// Configuration for Firebase project 2\r\nconst firebaseConfigExtension = {\r\n  // Replace with your project 2 configuration\r\n  apiKey: REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\r\n  authDomain: REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\r\n  projectId: REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\r\n  storageBucket: REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\r\n  appId: REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\r\n  measurementId: REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID,\r\n\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Initialize Firebase for project 1\r\nexport const projectControlFirebase = initializeApp(firebaseConfigControl);\r\nexport const projectControlAuth = getAuth(projectControlFirebase);\r\nexport const projectControlFirestore = getFirestore(projectControlFirebase);\r\n\r\n// Initialize Firebase for project 2\r\nexport const projectExtensionFirebase = initializeApp(firebaseConfigExtension, 'projectExtension');\r\nexport const projectExtensionAuth = getAuth(projectExtensionFirebase);\r\nexport const projectExtensionFirestore = getFirestore(projectExtensionFirebase);\r\n","\r\n\r\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc, getDocs, orderBy, deleteDoc, startAfter, limit } from 'firebase/firestore';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { \r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nconst firebaseControlConfig = {\r\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n  };\r\n\r\n// Initialize Firebase\r\n\r\nconst app = initializeApp(firebaseControlConfig);\r\nconst analytics = getAnalytics(app);\r\nconst auth = getAuth(app);\r\nrequire('firebase/auth');\r\n// export const auth = app.auth()\r\nconst db = getFirestore (app);\r\n// export default app\r\nexport {app, db, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, getAuth, signInWithEmailAndPassword, updateDoc, getDocs, orderBy, deleteDoc, limit, startAfter };","\r\n\r\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc } from 'firebase/firestore';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { \r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nconst firebaseControlCreateUserConfig = {\r\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n  };\r\n\r\n// Initialize Firebase\r\n\r\n\r\nrequire('firebase/auth');\r\n// export const auth = app.auth()\r\nconst firebaseAppForCreateUser = initializeApp(firebaseControlCreateUserConfig, 'Secondary' );\r\nconst authForCreateUser = getAuth(firebaseAppForCreateUser);\r\n// export default app\r\nexport {authForCreateUser};","// extracted by mini-css-extract-plugin\nexport default {};","var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 44707,\n\t\"./bs.js\": 44707,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 2553,\n\t\"./es-mx.js\": 2553,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"162\":\"da88e0a0\",\"245\":\"704124dc\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/samplecontrolhub/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [612], () => (__webpack_require__(19386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","_Dimensions$get","Dimensions","get","width","height","LoginPage","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","_useState5","_useState6","password","setPassword","_React$useState","React","_React$useState2","show","setShow","_React$useState3","_React$useState4","errorShow","setErrorShow","_React$useState5","_React$useState6","_React$useState7","_React$useState8","errorTitle","setErrorTitle","_React$useState9","_React$useState10","errorMessage","setErrorMessage","logo","require","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","isDisabled","setIsDisabled","navigate","useNavigate","useEffect","auth","onAuthStateChanged","user","ErrorLoginShow","_jsx","Box","w","alignItems","children","PresenceTransition","visible","initial","opacity","scale","animate","transition","duration","Alert","maxW","status","_jsxs","VStack","space","flexShrink","HStack","justifyContent","Icon","Text","fontSize","fontWeight","_dark","color","pl","_text","updateFieldData","_ref","_asyncToGenerator","documentId","fieldName","newValue","userRef","doc","db","updateDoc","_defineProperty","error","console","_x","_x2","_x3","apply","arguments","handleSignIn","setTimeout","signInWithEmailAndPassword","trim","then","re","catch","errorCode","message","log","length","NativeBaseProvider","bgColor","h","Center","flex","px","Image","source","uri","resizeMode","alt","style","Stack","Input","base","md","sm","value","onSubmitEditing","onChangeText","text","InputLeftElement","as","MaterialIcons","name","size","ml","placeholder","placeholderTextColor","type","InputRightElement","Pressable","onPress","mr","Button","_hover","_pressed","_focus","borderWidth","borderColor","disabled","Spinner","StyleSheet","create","container","paddingHorizontal","input","borderRadius","marginBottom","loginButton","backgroundColor","paddingVertical","loginButtonText","textAlign","loadingContainer","createNativeStackNavigator","getFirestore","DevAdmin","navigation","setDrawerVisible","createDrawerNavigator","Routes","Route","path","element","Navigate","to","replace","ChatMessages","Freight","AddVehicle","Logs","VehicleList","AccountList","AddAccount","SuperAdmin","useNavigation","signOut","firestore","getEmailOfCurrentUser","currentUser","Checkpoint","dispatch","useDispatch","useSelector","state","loginEmail","loginName","setType","handleDocumentChange","snapshot","exists","data","active","unsubscribe","_auth$currentUser","userId","onSnapshot","subscribeToFieldChange","currentUserEmail","getFieldValueByEmail","accountDocRef","docSnapshot","fieldType","setLoginName","Math","floor","random","App","initializing","setInitializing","setUser","Provider","store","Router","Admin","selectedScreen","_searchInput$current","setEmailError","logo2","_useState11","_useState12","_useState13","_useState14","setName","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","isSelectedLogs","_useState21","_useState22","isSelectedAddAccount","_useState23","_useState24","isSelectedAccountList","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","setAccountTypeSpAd","_useState31","_useState32","setAccountTypeDevAd","_useState33","_useState34","setAccountTypeAd","_useState35","_useState36","setAccountType3","_useState37","_useState38","setAccountType4","_useState39","_useState40","inputName","setInputName","_useState41","_useState42","_useState43","_useState44","inputEmail","setInputEmail","_useState45","_useState46","inputPassword","setInputPassword","_useState47","_useState48","setInputConfirmPassword","_useState49","_useState50","typeOfAccount","setTypeOfAccount","_useState51","_useState52","setTypeOfAccountDisplay","showSuccessModal","setShowSuccessModal","showDisableModal","setShowDisableModal","showEnableModal","setShowEnableModal","_React$useState11","_React$useState12","showDeleteModal","setShowDeleteModal","_React$useState13","_React$useState14","_useState53","useRef","_useState54","selectedItem","setSelectedItem","_useState55","_useState56","modalVisible","setModalVisible","_useState57","_useState58","_useState59","_useState60","setTime","_useState61","_useState62","selectedType","setSelectedType","_useState63","_useState64","selectedTypeDisplay","setSelectedTypeDisplay","_useState65","_useState66","selectedItemType","setSelectedItemType","_useState67","_useState68","isEmailDuplicate","setIsEmailDuplicate","_useState69","_useState70","authEmail","setAuthEmail","_useState71","_useState72","authPassword","setAuthPassword","_useState73","_useState74","isYesLoading","setIsYesLoading","_useState75","_useState76","isSaveLoading","setIsSaveLoading","inputEmailRef","inputNameRef","inputPassRef","_useState77","_useState78","page","setPage","optionsPerPage","_useState79","_useState80","itemsPerPage","setItemsPerPage","_useState81","_useState82","setData","_useState83","_useState84","searchQuery","setSearchQuery","_useState85","_useState86","filteredData","setFilteredData","_useState87","_useState88","_useState89","_useState90","ref0","ref1","ref2","ref3","searchInput","searchInputValue","current","_useState91","_useState92","pageSize","_useState93","_useState94","lastVisible","setLastVisible","_useState95","_useState96","firstVisible","setFirstVisible","_useState97","_useState98","searchText","_useState99","_useState100","currentPage","setCurrentPage","q","query","collection","orderBy","limit","documents","logsDatabaseData","forEach","document","push","_objectSpread","setAccountListData","docs","fetchNextData","collectionGroup","projectControlFirestore","startAfter","getDocs","updateState","setLoadingModalVisible","where","toLowerCase","fetchPreviousData","_ref2","endBefore","limitToLast","fetchFirstPage","accountListDatabaseData","_ref3","pageClicked","empty","firstPageDocuments","_ref4","_ref5","searchData","_ref6","handleToggleAccountTypeAd","useCallback","handleToggleAccountTypeDevAd","handleToggleAccountType3","handleToggleAccountType4","handleToggleAccountTypeSpAd","fetchData","_ref7","updatedData","listenForNameChange","_auth$currentUser2","getEmailFromDocument","_ref8","collectionPath","documentRef","documentSnapshot","getDoc","pass","_x4","_ref9","accountDocSnapshot","_x5","validateEmail","test","showDrawerIcon","useBreakpointValue","handleEdit","find","item","typeDisplay","setNativeProps","handleInputEmailChange","debounce","handleInputNameChange","handleInputPassChange","handleCloseModal","handleCloseDisableModal","handleCloseDeleteModal","handleCloseEnableModal","addLogToCollection","_ref10","logsCollectionRef","addDoc","_x6","handleEnable","_ref11","itemDocRef","datetime","axios","formattedTime","moment","format","year","month","monthWithDay","date","day","time","timeWithMinutesSeconds","applySearchFilter","logData","keywords","timestamp","colorScheme","_x7","deleteDocument","_ref12","customId","deleteDoc","_x8","_x9","handleDelete","_ref13","deleteUser","_x10","handleDisable","_ref14","_searchInput$current2","_x11","filter","includes","handleSave","_ref15","isPasswordLengthLabel","updatedFields","lastUpdatedDate","_searchInput$current3","updatePassword","userDocRef","dateOfCreation","setDoc","oldDocumentRef","newDocumentRef","createUserWithEmailAndPassword","updatedItem","fetchSignInMethodsForEmail","_x12","_ref16","filtered","useMemo","paginatedData","startIndex","endIndex","slice","handleSearch","min","styles","image","flexDirection","position","top","zIndex","borderBottomWidth","borderBottomColor","marginTop","FastImage","priority","high","stretch","MobileViewDrawer","marginLeft","_ref17","handleSignOut","_useState101","_useState102","showNamePopover","setShowNamePopover","showPopover","Flex","direction","Popover","isOpen","trigger","triggerProps","marginRight","MaterialCommunityIcons","Ionicons","onClose","placement","trapFocus","Content","Body","leftIcon","SideDrawer","flexGrow","minHeight","ref","ScrollView","contentContainerStyle","DataTable","margin","overflow","display","padding","paddingBottom","handleOpenDisableModal","handleOpenEnableModal","handleOpenDeleteModal","Pagination","numberOfPages","ceil","onPageChange","label","showFastPagination","optionsLabel","Modal","CloseButton","Header","defaultValue","bold","FontAwesome","Footer","borderTopWidth","maxWidth","variant","show2","setShow2","accountTypeSpAd","accountTypeDevAd","accountTypeAd","accountType3","accountType4","typeOfAccountDisplay","showModal","setShowModal","inputConfirmPassword","passwordMatch","setPasswordMatch","passwordMatchLabel","setPasswordMatchLabel","passwordLengthLabel","setPasswordLengthLabel","isNameEmpty","setIsNameEmpty","setIsIntervalActive","closeModal","handleAddAccount","isAccountType","_inputEmail$current","authForCreateUser","userCredential","_inputName$current","_inputName$current2","_inputEmail$current2","_inputName$current3","_inputPassword$curren","customID","docRef","handleClear","handlePasswordStatus","_inputPassword$curren3","_inputConfirmPassword2","inputPasswordValue","inputConfirmPasswordValue","inputPasswordValueLength","_inputEmail$current3","emailValue","handleEmailSubmit","_inputName$current4","AntDesign","_inputPassword$curren2","_inputConfirmPassword","globalSupplyChainCostsData","globalSelectedExpenseName","globalSupplyChainCostsAmount","globalSelectedPaidTo","globalModelDataVariable","globalRegYearDataVariable","globalSelectedImages","globalVehicleFolderName","globalReferenceNumber","globalSPCSelectedDate","globalFobPrice","UpdateSuccessModal","bodyText","headerText","isUpdateSuccessModalOpen","borderLeftWidth","borderLeftColor","UploadSuccessModal","isSuccessModalOpen","LoadingModal","loadingModalVisible","bottom","left","right","SelectExpenseName","expenseNameIsError","selectExpenseNameRef","selectResetKey","expenseNameData","selectedExpenseName","nanoid","Select","selectedValue","onValueChange","setSelectedExpenseName","accessibilityLabel","_selectedItem","bg","endIcon","CheckIcon","Item","SelectPaidTo","paidToIsError","paidToData","selectedPaidTo","setSelectedPaidTo","ModalCalendar","selectedDate","setSelectedDate","modalCalendarVisible","setModalCalendarVisible","handleModalCalendarOpen","handleModalCalendarClose","_Fragment","onFocus","useRNModal","Calendar","onDayPress","dateString","markedDates","selected","disableTouchEvent","selectedDotColor","renderArrow","enableSwipeMonths","initialDate","showSixWeeks","SupplyChainsCosts","handleAddExpenseNameTextChange","textAreaAddExpenseName","inputExpenseAmount","handleInputExpenseAmountChange","handleAddPaidToTextChange","inputCarNotes","supplyChainsCostsData","currentDate","supplyChainsCostsModalVisible","setSupplyChainsCostsModalVisible","clearModalVisible","setClearModalVisible","inputAmountIsError","setInputAmountIsError","setExpenseNameIsError","setPaidToIsError","totalAmount","setTotalAmount","setSelectResetKey","handleModalSupplyChainsCostsClose","_inputExpenseAmount$c","clear","handleClearModalClose","formattedTotalAmount","expenseData","parseFloat","amount","reduce","accumulator","currentValue","toLocaleString","_inputExpenseAmount$c2","_inputExpenseAmount$c3","_inputExpenseAmount$c4","_inputExpenseAmount$c5","existingIndex","findIndex","_inputExpenseAmount$c6","cloneDeep","expenseName","paidName","setSupplyChainsCostsData","_inputExpenseAmount$c7","newData","concat","_toConsumableArray","handleEditPress","handleFirstModalClose","handleFirstModalOpen","flexDir","alignSelf","SupplyChainsCostsSortAndAddModal","docName","handleAddTextChange","textAreaAdd","title","dataName","databaseInit","projectExtensionFirestore","index","isHovered","isFocused","isPressed","itemIndex","splice","handleDeleteItem","projectControlAuth","storage","getStorage","projectExtensionFirebase","ClearImagesModal","modalDeleteImagesVisible","setModalDeleteImagesVisible","handleClearImages","selectedImages","isAddPhotoVisible","handleModalDeleteClose","cursor","ImageUploader","dragSortableViewRef","handleClearImagesExtra","deleteImageVisible","boolean","addAnotherImages","scrollEnabled","setscrollEnabled","isEnterEdit","setisEnterEdit","widthState","setWidthState","setIsCursorLoading","modalImageUri","setModalImageUri","imageModalVisible","setImageModalVisible","isFileSizeLimitModal","setIsFileSizeLimitModal","handleImagePress","dropdown","icon","placeholderStyle","selectedTextStyle","iconStyle","inputSearchStyle","paddingTop","txt","lineHeight","sort","item_children","item_delete_icon","item_icon","handleImageAddToSelection","setDeleteImageVisible","options","mediaType","maxHeight","selectionLimit","storageOptions","skipBackup","response","launchImageLibrary","didCancel","assets","newImages","promises","asset","fetch","res","blob","some","Promise","all","limitedImages","setSelectedImages","setAddAnotherImages","reloadData","updatedSelectedImages","handleWidthChange","window","addEventListener","removeEventListener","renderItem","normal","contain","handleDeleteImagePress","Entypo","getImagesRenderItem","handleImageSelection","uniqueImages","self","a","filteredImages","imageOrder","b","indexOf","setIsAddPhotoVisible","DragSortableView","dataSource","delayLongPress","parentWidth","childrenWidth","childrenHeight","marginChildrenTop","marginChildrenBottom","marginChildrenLeft","marginChildrenRight","onDragStart","onDragEnd","onDataChange","onClickItem","keyExtractor","sortable","italic","alignContent","NativeImage","SuccessFailModal","isSuccessOpen","isFailedOpen","handleFailModalClose","inputStockIDNumber","handleSuccessModalClose","okSuccessButtonRef","okFailButtonRef","initialFocusRef","finalFocusRef","StockIDAndMakeAndModel","selectStockStatus","handleSetBordersWhite","inputFobUsd","handleClearIfError","monthNumbers","steeringData","selectPort","selectSales","selectBuyer","inputRefNum","inputChassis","inputModelCode","inputEngineCode","inputEngineDis","selectSteering","inputMileage","selectTransmission","selectExteriorColor","inputNumOfSeats","inputDoors","inputPurchasedPrice","selectFuel","inputDimensionLength","inputDimensionWidth","inputDimensionHeight","inputDimensionCubicMeters","selectDriveType","inputWeight","selectBodyType","inputCarName","inputCarDesc","inputFobJpy","selectRegYear","selectRegMonth","setRefNumFromSelects","stockIDNumError","selectMakeForModelRef","textAreaAddModel","selectMakeForAddModelRef","handleAddMakeTextChange","textAreaAddMake","makeError","modelError","selectMakeBoxRef","selectMakeRef","selectModelRef","selectModelBoxRef","setCarNameFromSelects","setCarNameFromSelectsModel","inputCarMemo","purchasedPriceError","handleInputPurchasedPriceChange","makeData","stockStatusData","portData","transmissionData","fuelData","buyerData","salesData","driveTypeData","bodyTypeData","exteriorColorData","jpyToUsd","modelData","setModelData","isSearchLoading","setIsSearchLoading","setIsSuccessOpen","setIsFailedOpen","getImages","_ref18","folderName","imageRefs","listAll","urls","items","_ref19","itemRef","getDownloadURL","fileName","parseInt","handleSearchPress","_inputStockIDNumber$c","_inputStockIDNumber$c2","querySnapshot","_ref21","_fetchDataAndSelectIndex","collectionRef","make","selectIndex","modelVariable","reset","modelsDataFromFirebase","model","fetchDataAndSelectIndex","stockStatus","regYear","regMonth","portID","salesID","buyerID","referenceNumber","chassisNumber","modelCode","engineCode","engineDisplacement","steering","mileage","transmission","exteriorColor","numberOfSeats","doors","purchasedPrice","toString","fuel","dimensionLength","dimensionWidth","dimensionHeight","dimensionCubicMeters","driveType","weight","bodyType","carName","carDescription","fobPrice","numericValue","startsWith","truncatedValue","formattedValue","multipliedValue","isNaN","formattedMultipliedValue","toFixed","handleInputFobJpyChange","undefined","notes","memo","featuresState","SafetySystemAnBrSy","SafetySystemDrAi","SafetySystemPaAi","SafetySystemSiAi","ComfortAiCoFr","ComfortAiCoRe","ComfortAMFMRa","ComfortAMFMSt","ComfortCDPl","ComfortCDCh","ComfortCrSpCo","ComfortDiSp","ComfortDVDPl","ComfortHDD","ComfortNaSyGPS","ComfortPoSt","ComfortPrAuSy","ComfortReKeSy","ComfortTiStWh","InteriorLeSe","InteriorPoDoLo","InteriorPoMi","InteriorPoSe","InteriorPoWi","InteriorReWiDe","InteriorReWiWi","InteriorThRoSe","InteriorTiGl","ExteriorAlWh","ExteriorPoSlDo","ExteriorSuRo","SellingPointsCuWh","SellingPointsFuLo","SellingPointsMaHiAv","SellingPointsBrNeTi","SellingPointsNoAcHi","SellingPointsNoSmPrOw","SellingPointsOnOwHi","SellingPointsPeRaTi","SellingPointsReBo","SellingPointsTuEn","SellingPointsUpAuSy","resetKey","stockStatusVariable","makeVariable","regYearVariable","regMonthVariable","portVariable","port","salesVariable","sales","buyerVariable","buyer","referenceNumberVariable","stockID","steeringVariable","transmissionVariable","exteriorColorVariable","fuelVariable","driveTypeVariable","bodyTypeVariable","handleModelChange","handleMakeChange","_ref22","handleInputStockIDNumberChange","handleModelOnFocus","isLoadingText","keyboardType","SortAndAddModal","SelectDropdown","buttonStyle","buttonTextStyle","dropdownStyle","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","rowStyle","rowTextStyle","onSelect","defaultButtonText","buttonTextAfterSelection","renderDropdownIcon","isOpened","rowTextForSelection","searchPlaceHolder","searchInputStyle","disableAutoScroll","search","ModelSortAndAddModal","_ref23","modalSortOpen","setModalSortOpen","modalAddOpen","setModalAddOpen","modalAddSuccess","setModalAddSuccess","modalSave","setModalSave","modalSaveLoading","setModalSaveLoading","modalData","setModalData","modalIsLoading","setModalIsLoading","handleDeleteItemPress","prevData","_ref24","_modalDocSnap$data","modalDocRef","modalDocSnap","nameVariable","handleModalSaveClose","handleSortModalOpen","handleSortModalClose","handleModalAddOpen","handleModalAddClose","_textAreaAdd$current","handleModalAddSuccessClose","handleModalAddSuccessOpen","handleModalSaveOpen","handleAddSubmit","_ref28","_textAreaAdd$current2","dataArray","split","modalCollectionRef","arrayUnion","merge","TouchableOpacity","focusable","DraggableFlatList","_ref29","drag","onPressIn","_ref30","TextArea","multiline","totalLines","_ref31","_ref32","_modalDocSnap$data2","_textAreaAdd$current3","_ref36","_textAreaAdd$current4","_ref37","_ref38","PSBSortAndAddModal","_ref39","textAreaAddCode","handleAddCodeTextChange","_ref40","_modalDocSnap$data3","_ref44","_textAreaAdd$current5","_textAreaAddCode$curr","dataCode","dataCodeArray","dataToUpdate","updateObject","_ref45","_ref46","_ref47","modalAddModel","setModalAddModel","_useState103","_useState104","modalSaveModel","setModalSaveModel","_useState105","_useState106","modalModel","setModalModel","_useState107","_useState108","modalAddModelSuccess","setModalAddModelSuccess","_useState109","_useState110","keySelectMakeForModel","setKeySelectMakeForModel","_useState111","_useState112","keySelectMakeForAddModel","setKeySelectMakeForAddModel","_useState113","_useState114","modelSortData","setModelSortData","_useState115","_useState116","isAddModelDisabled","setIsAddModelDisabled","_useState117","_useState118","modalSaveModelLoading","setModalSaveModelLoading","_useState119","_useState120","_useState121","_useState122","_useState123","_useState124","_useState125","_useState126","_useState127","_useState128","fetchModelSortData","_ref48","_selectMakeForModelRe","_selectMakeForModelRe2","_modelSortDocSnap$dat","modelSortDocRef","modelSortDocSnap","handleDeleteModelPress","prevModelData","_ref49","handleSaveModel","_selectMakeForModelRe3","_selectMakeForModelRe4","_selectMakeForModelRe5","_selectMakeForModelRe6","_selectMakeForModelRe7","handleModalSaveModelClose","handleMakeForModelChange","_selectMakeForAddMode","makeForAddModelVariable","handleMakeForAddModelChange","handleModalModelOpen","handleModalModelClose","prevKey","handleModalAddModelOpen","handleModalAddModelClose","handleModalAddModelSuccessOpen","handleModalAddModelSuccessClose","handleModalSaveModelOpen","_selectMakeForModelRe8","handleAddModelSubmit","_ref51","_textAreaAddModel$cur4","_selectMakeForAddMode2","_selectMakeForAddMode3","_selectMakeForAddMode4","makeCollectionRef","makeDocRef","_ref52","_ref53","_textAreaAddModel$cur","_textAreaAddModel$cur2","_textAreaAddModel$cur3","newText","toUpperCase","CheckBoxButton","_ref54","onChange","variable","_useState129","_useState130","checked","setChecked","noOfLines","screenWidth","_useState131","_useState132","_useState133","_useState134","_useState135","_useState136","_useState137","_useState138","_useState139","_useState140","inputRegYear","inputRegMonth","inputFuel","inputDriveType","textAreaAddTransmission","textAreaAddExteriorColor","textAreaAddFuel","textAreaAddPort","textAreaAddPortCode","textAreaAddSales","textAreaAddBuyer","textAreaAddSalesCode","textAreaAddBuyerCode","textAreaAddDriveType","textAreaAddBodyType","textAreaAddPaidTo","currentYear","years","Array","from","_","_useState141","_useState142","isNoFeaturesSelected","setIsNoFeaturesSelected","_useState143","_useState144","carNameError","setCarNameError","_useState145","_useState146","setMakeError","_useState147","_useState148","setModelError","_useState149","_useState150","regYearError","setRegYearError","_useState151","_useState152","regMonthError","setRegMonthError","_useState153","_useState154","refNumError","setRefNumError","_useState155","_useState156","setStockIDNumError","_useState157","_useState158","chassisError","setChassisError","_useState159","_useState160","modelCodeError","setModelCodeError","_useState161","_useState162","engineDisError","setEngineDisError","_useState163","_useState164","steeringError","setSteeringError","_useState165","_useState166","mileageError","setMileageError","_useState167","_useState168","transmissionError","setTransmissionError","_useState169","_useState170","exteriorColoError","setExteriorColoError","_useState171","_useState172","numOfSeatsError","setNumOfSeatsError","_useState173","_useState174","doorsError","setDoorsError","_useState175","_useState176","setPurchasedPriceError","_useState177","_useState178","fuelError","setFuelError","_useState179","_useState180","portError","setPortError","_useState181","_useState182","buyerError","setBuyerError","_useState183","_useState184","salesError","setSalesError","_useState185","_useState186","dimensionLengthError","setDimensionLengthError","_useState187","_useState188","dimensionWidthError","setDimensionWidthError","_useState189","_useState190","dimensionHeightError","setDimensionHeightError","_useState191","_useState192","driveTypeError","setDriveTypeError","_useState193","_useState194","weightError","setWeightError","_useState195","_useState196","bodyTypeError","setBodyTypeError","_useState197","_useState198","stockStatusError","setStockStatusError","inputVehicleBoxRef","selectRegYearBoxRef","selectRegMonthBoxRef","selectSteeringBoxRef","selectTransmissionBoxRef","selectExteriorColorBoxRef","selectFuelBoxRef","selectPortBoxRef","selectBuyerBoxRef","selectSalesBoxRef","selectDriveTypeBoxRef","selectBodyTypeBoxRef","selectStockStatusBoxRef","property","_ref55","_inputCarName$current","_inputCarDesc$current","_inputFobJpy$current","_inputFobUsd$current","_inputRegYear$current","_inputRegMonth$curren","_inputRefNum$current","_inputChassis$current","_inputModelCode$curre","_inputEngineCode$curr","_inputEngineDis$curre","_inputMileage$current","_inputNumOfSeats$curr","_inputDoors$current","_inputPurchasedPrice$","_inputFuel$current","_inputDimensionLength","_inputDimensionWidth$","_inputDimensionHeight","_inputDriveType$curre","_inputWeight$current","handleClearToggleButton","clearSelect","uploadImages","storageRef","imageNamesToKeep","listResult","deleteObject","_ref57","imagename","img","createElement","getContext","src","URL","createObjectURL","onload","canvas","ctx","newWidth","newHeight","drawImage","font","fillStyle","imageSmoothingEnabled","lineWidth","watermarkText","textWidth","measureText","xShadow","yShadow","shadowBlur","fillText","x","y","watermarkedImageBlob","toBlob","imageRef","uploadBytes","contentType","handleUpload","_inputStockIDNumber$c3","_inputRefNum$current2","_inputChassis$current2","_inputModelCode$curre2","_inputEngineDis$curre2","_inputEngineDis$curre3","_inputMileage$current2","_inputMileage$current3","_inputNumOfSeats$curr2","_inputDoors$current2","_inputNumOfSeats$curr3","_inputDoors$current3","_inputPurchasedPrice$2","_inputPurchasedPrice$3","_inputDimensionLength2","_inputDimensionWidth$2","_inputDimensionHeight2","_inputDimensionCubicM","_inputDimensionLength3","_inputDimensionWidth$3","_inputDimensionHeight3","_inputDimensionCubicM2","_inputWeight$current2","_inputWeight$current3","_inputCarName$current2","selectIsEmpty","inputIsEmpty","allValuesAreFalse","values","every","_inputCarName$current3","_inputWeight$current4","_inputWeight$current5","_inputDimensionHeight4","_inputDimensionHeight5","_inputDimensionWidth$4","_inputDimensionWidth$5","_inputDimensionLength4","_inputDimensionLength5","_inputDoors$current4","_inputDoors$current5","_inputPurchasedPrice$4","_inputPurchasedPrice$5","_inputNumOfSeats$curr4","_inputMileage$current4","_inputMileage$current5","_inputEngineDis$curre4","_inputEngineDis$curre5","_inputModelCode$curre3","_inputChassis$current3","_inputRefNum$current3","_inputStockIDNumber$c4","scrollIntoView","behavior","_inputStockIDNumber$c5","_inputRefNum$current4","_inputStockIDNumber$c6","_inputRefNum$current5","_inputCarName$current4","_inputStockIDNumber$c7","_inputChassis$current4","_inputFobJpy$current2","_inputStockIDNumber$c8","_inputRefNum$current6","_inputChassis$current5","_inputModelCode$curre4","_inputEngineCode$curr2","_inputNumOfSeats$curr5","_inputDoors$current6","_inputCarName$current5","_inputCarDesc$current2","_inputCarNotes$curren","_inputCarMemo$current","stockCollectionRef","docQuery","docSnap","fobHistoryValue","keywordsData","fobHistoryData","changedBy","inputFobValue","imageCount","fobHistory","photos","comfort","safetySystem","interior","exterior","sellingPoints","_inputCarName$current6","_inputRefNum$current7","_inputCarName$current7","_inputRefNum$current8","setIsUpdateSuccessModalOpen","dataDoc","updates","updatedDate","dateAdded","dataWithDateAdded","_inputCarName$current8","_inputRefNum$current9","_inputCarName$current9","_inputRefNum$current10","setIsSuccessModalOpen","_ref62","_x13","_inputStockIDNumber$c9","_inputCarName$current10","_inputCarDesc$current3","_inputFobJpy$current3","_inputFobUsd$current2","_inputRegYear$current2","_inputRegMonth$curren2","_inputRefNum$current11","_inputChassis$current6","_inputModelCode$curre5","_inputEngineCode$curr3","_inputEngineDis$curre6","_inputMileage$current6","_inputNumOfSeats$curr6","_inputDoors$current7","_inputPurchasedPrice$6","_inputFuel$current2","_inputDimensionLength6","_inputDimensionWidth$6","_inputDimensionHeight6","_inputDriveType$curre2","_inputWeight$current6","_inputCarNotes$curren2","_inputCarMemo$current2","_inputFobJpy$current4","calculateCubicMeters","_inputDimensionLength7","_inputDimensionLength8","_inputDimensionWidth$7","_inputDimensionWidth$8","_inputDimensionHeight7","_inputDimensionHeight8","resultFormatted","_inputStockIDNumber$c10","_useState199","_useState200","handleUpdateSuccessModalClose","_ref66","_useState211","_useState212","_textAreaAddMake$curr","_textAreaAddMake$curr2","_textAreaAddMake$curr3","Number","outlineStyle","_textAreaAddPort$curr","textAreaValue","line","charAt","join","_textAreaAddPortCode$","_textAreaAddPortCode$2","_textAreaAddPortCode$3","_textAreaAddSales$cur","_textAreaAddSalesCode","_textAreaAddSalesCode2","_textAreaAddSalesCode3","_textAreaAddBuyer$cur","_inputRefNum$current12","_inputRefNum$current13","_inputRefNum$current14","_inputChassis$current7","_inputChassis$current8","_inputChassis$current9","_inputModelCode$curre6","_inputModelCode$curre7","_inputModelCode$curre8","_inputEngineCode$curr4","_inputEngineCode$curr5","_inputEngineCode$curr6","InputGroup","InputRightAddon","_textAreaAddTransmiss","_textAreaAddExteriorC","_textAreaAddFuel$curr","dotIndex","editable","_textAreaAddDriveType","_textAreaAddBodyType$","borderTopColor","_textAreaAddExpenseNa","_textAreaAddPaidTo$cu","_useState203","_useState204","featuresModalVisible","setFeaturesModalVisible","_useState205","_useState206","featuresClearModalVisible","_useState207","_useState208","setKey","handleModalSelectFeaturesClose","pressDuration","InputLeftAddon","_ref63","_useState201","_useState202","modalClearVisible","setModalClearVisible","handleModalClearOpen","handleModalClearClose","_ref64","_useState209","_useState210","modalUploadVisible","setModalUploadVisible","handleModalUploadClose","globalLastVisible","globalMessagesLastVisible","globalSearchText","globalCustomerId","globalImageUrl","globalCustomerFirstName","globalCustomerLastName","globalAdditionalPriceArray","globalMessageTemplateSelectedTitle","formattedIssuingDate","formattedDueDate","transactionModalTitle","transactionModalContentValue","ip","ipCountry","globalInvoiceVariable","carData","cfs","placeOfDelivery","departureCountry","departurePort","salesPerson","discharge","country","consignee","sameAsBuyer","address","contactNumber","fax","notifyParty","sameAsConsignee","paymentDetails","incoterms","inspectionIsChecked","inspectionName","warrantyIsCheck","warrantyAmount","freightPrice","insurancePrice","inspectionPrice","additionalName","additionalPrice","bankInformations","dueDate","issuingDate","bankAccount","paymentTerms","salesAgreement","globalSelectedPDFUrl","globalSelectedFileType","TimelineStatus","selectedChatData","stepIndicator","View","Tooltip","tintColor","statusData","HeaderButton","isActive","headerCount","activeStyle","setIsHovered","onHoverIn","onHoverOut","marginVertical","FilterButton","iconActive","iconNotActive","SkeletonChatListLayout","subIndex","DeleteMessageTemplateYesNo","handleDeleteMessageTemplateClose","deleteMessageTemplateVisible","selectedTitle","isDeleteLoading","setIsDeleteLoading","handleClose","deleteMessageTemplate","titleToDelete","updatedTemplates","messageTemplate","template","Group","MessageTemplateItem","setOriginalTitle","titleInputRef","addVisible","valueInputRef","setAddVisible","textInputRef","setPopoverOpen","isTemplateItemHovered","setIsTemplateItemHovered","isTemplateMenuHovered","setIsTemplateMenuHovered","isTemplateEditHovered","setIsTemplateEditHovered","isTemplateDeleteHovered","setIsTemplateDeleteHovered","templateMenuOpen","setTemplateMenuOpen","setIsAddVisible","numberOfLines","ellipsizeMode","onEditPress","setDeleteMessageTemplateVisible","MessageTemplate","isTemplateHovered","setIsTemplateHovered","isAddHovered","setIsAddHovered","popoverOpen","setSearchText","isCancelHovered","setIsCancelHovered","isSaveHovered","setIsSaveHovered","originalTitle","saveLoading","setSaveLoading","templateData","setTemplateData","searchInputRef","saveMessageTemplate","_titleInputRef$curren","_valueInputRef$curren","messageTemplates","newTitle","handleCancelPressed","arrayFieldData","titleA","titleB","pressed","Arrow","TextInput","underlineColorAndroid","marginHorizontal","animating","textDecorationLine","FlatList","borderBottomLeftRadius","FileDisplay","file","onRemove","cover","ChatInputText","activeChatId","isSendHovered","setIsSendHovered","selectedFile","setSelectedFile","selectedFilePreview","setSelectedFilePreview","selectedImage","setSelectedImage","imageUri","setImageUri","fileUri","setFileUri","setFileName","isSendImageHovered","setIsSendImageHovered","isSendAttachmentHovered","setIsSendAttachmentHovered","sendIsLoading","setSendIsLoading","removeImage","removeFile","selectFile","maxFileSize","Platform","OS","reject","accept","onchange","files","alert","reader","FileReader","target","result","focus","onerror","readAsDataURL","click","fileSize","selectedImageUri","selectImage","dataUrl","addFileMessage","_textInputRef$current","formattedTimeForFile","inputValue","fileUrl","fileRef","uploadResult","sender","url","lastMessageSender","lastMessage","lastMessageDate","customerRead","read","readBy","addImageMessage","_textInputRef$current2","imageUrl","resizedImage","event","File","lastModified","Date","now","addMessage","_textInputRef$current3","handleSendMessage","onKeyPress","nativeEvent","key","shiftKey","preventDefault","ChatListItem","_ref20","messageUnread","formattedDate","chatListData","setImageUrl","textFirst","setTextFirst","textLast","setTextLast","isUnreadHovered","setIsUnreadHovered","customerData","setCustomerData","vehicle","updateChatToUnread","setActiveChatId","setChatMessagesData","setSelectedChatData","carId","docId","participants","customer","loadingCondition","chatStepIconOn","chatStepIconOff","borderRightColor","borderRightWidth","setSelectedCustomerData","setCarImageUrl","invoiceNumber","openDelay","ChatList","unreadButtonValue","activeButtonValue","selectedCustomerData","chatListLastVisible","loadMoreLoading","noMoreData","chatId","useParams","updateChatToRead","setChatMessageBoxLoading","messagesRef","messagesQuery","unsubscribeDoc","dataWithId","invoiceDocRef","unsubscribeInvoice","invoiceDocSnapshot","invoiceDataWithId","setInvoiceData","unsubscribeMessages","messages","fetchChatMessages","parts","stockIdPart","emailPart","_selectedChatData$par","handleChatPress","customerId","_ref25","formattedTimestamp","givenDate","currentFormattedDate","getFullYear","getMonth","getDate","getTime","startOfWeek","setDate","getDay","setHours","toLocaleDateString","weekday","formatDate","initialNumToRender","maxToRenderPerBatch","windowSize","onEndReachedThreshold","removeClippedSubviews","ListFooterComponent","onEndReached","nextQuery","setLoadMoreLoading","setNoMoreData","chatsData","setChatListData","SearchChat","_ref26","clearVisible","setClearVisible","_ref27","_searchInputRef$curre","_objectDestructuringEmpty","searchValue","setChatListSearchText","_searchInputRef$curre2","hovered","ModalAddBank","modalAddBankVisible","setModalAddBankVisible","setCancelHovered","setAddHovered","handleModalAddBankClose","bankNameRef","branchNameRef","swiftcodeRef","addressRef","accountHolderRef","accountNumberRef","addBankAccount","_bankNameRef$current","_branchNameRef$curren","_swiftcodeRef$current","_addressRef$current","_accountHolderRef$cur","_accountNumberRef$cur","bankNameValue","elementToAdd","bankName","branchName","swiftCode","accountHolder","accountNumberValue","BankInformation","invoiceData","selectedDueDate","setSelectedDueDate","bankAccountsData","setBankAccountsData","selectedBank","setSelectedBank","paymentTermsRef","_paymentTermsRef$curr","dayOfWeek","adjustedDate","toISOString","bankAccounts","entries","subscribeToBankAccounts","_ref33","selectedBankName","selectedBankObj","paddingLeft","PaymentDetails","fobPriceInput","freightInput","inspectionInput","insuranceInput","totalAmountCalculated","setTotalAmountCalculated","insurance","selectedIncoterms","setSelectedIncoterms","inspection","setInspectionIsChecked","warranty","warrantyIsChecked","additionalNameRef","warrantyPrice","additionalPriceRef","safelyParseNumber","number","calculateTotalAmount","_fobPriceInput$curren","_freightInput$current","_inspectionInput$curr","_insuranceInput$curre","freight","additionalPricesTotal","sum","total","round","_fobPriceInput$curren2","_freightInput$current2","_insuranceInput$curre2","freightCalculation","m3","fobPriceDollars","currency","usdToJpy","Checkbox","isChecked","filteredText","lines","filteredLines","filteredLine","SelectPortOfDischarge","countriesDischarge","portsData","setPortsData","nearestPorts","setNearestPorts","selectedPortCountry","setSelectedPortCountry","selectedCountry","selectedPort","setSelectedPort","fetchPorts","_ref35","sortedPorts","portName","sortOrder","fetchPortsData","selectedCountryData","SelectSalesPerson","selectedSales","setSelectedSales","SelectPortOfDeparture","NotifyPartyInput","accountData","setAccountData","setIsChecked","notifyPartyName","notifyPartyAddress","notifyPartyCity","notifyPartyCountry","notifyPartyContactNumber","notifyPartyFax","notifyPartyEmail","_notifyPartyName$curr","_notifyPartyAddress$c","_notifyPartyCity$curr","_notifyPartyCountry$c","_notifyPartyContactNu","_notifyPartyFax$curre","_notifyPartyEmail$cur","city","ConsigneeInput","consigneeName","consigneeAddress","consigneeCity","consigneeCountry","consigneeContactNumber","consigneeFax","consigneeEmail","fetchAccountData","textStreet","textZip","textPhoneNumber","textEmail","ConfirmPaymentModalContent","historyModalVisible","setHistoryModalVisible","isConfirmLoading","setIsConfirmLoading","totalAmountString","totalAmountNumber","inputAmountRef","fullPaymentMessage","messageType","overBalanceMessage","_ref41","paymentMessage","_ref42","transactionDate","confirmPayment","_ref43","amountNeeded","totalValue","docRefCustomer","newPayments","newPaymentsAccount","vehicleRef","vehicleName","inputAmount","numericInputAmount","formattedInputAmount","delay","ms","overBalance","increment","payments","paymentsHistory","setTransactionModalVisible","cleanedDateString","padStart","hours","getHours","ampm","getMinutes","payment","displayedAmount","fontWefight","Progress","shadow","max","_filledTrack","underline","selectable","handleHistoryModalClose","sortedPayments","dateA","IssueProformaInvoiceModalContent","isConfirmHovered","cfsInputRef","placeOfDeliveryInputRef","secretKey","invoiceMessage","confirmInvoice","yearSuffix","maxNumber","substring","docRefChatId","hashedData","hash","HmacSHA256","enc","Hex","stringify","createHmacSha256Hash","updateDocRef","cryptoNumber","_cfsInputRef$current","_placeOfDeliveryInput","ProfitCalculator","totalSCCAmount","setTotalSCCAmount","formattedTotalSCCAmount","setFormattedTotalSCCAmount","totalProfitAmountDollars","setTotalProfitAmountDollars","inputPriceRef","lastFetchedPort","setLastFetchedPort","currentPort","freightOrigPrice","_data$currentPort","kobePrice","nagoyaPrice","yokohamaPrice","kyushuPrice","fee","formattedPurchasedPrice","minimumFractionDigits","maximumFractionDigits","auctionFee","formattedAuctionFee","transportFee","formattedTransportFee","shippingAgentFee","formattedShippingAgentFee","cubicMeter","costPerCubicMeter","formattedCostPerCubicMeter","totalCubicMeterCostDollars","formattedTotalCubicMeterCostDollars","totalCubicMeterCostYen","formattedTotalCubicMeterCostYen","realTotalPriceYen","formattedRealTotalPriceYen","realTotalPriceDollars","formattedRealTotalPriceDollars","totalPriceCalculation","defaultInputPrice","_inputPriceRef$curren","inputPrice","totalAmountDollars","PreviewInvoice","previewInvoiceVisible","isPreviewHovered","setIsPreviewHovered","invoiceRef","capturedImageUri","setCapturedImageUri","vehicleImageUri","setVehicleImageUri","setFeaturesTrueCount","rerenderState","setRerenderState","countTrueValuesInCarData","count","field","captureImageAsync","captureRef","quality","trueCount","convertImageToBase64","ok","onloadend","base64String","_ref50","captureImage","createPDF","imageData","html2canvas","toDataURL","pdf","jsPDF","orientation","unit","imgProps","getImageProperties","pdfHeightFit","addImage","imageCompression","imageQuality","save","handleCaptureAndCreatePDF","issuingDateString","dueDateString","issuingDateObject","dueDateObject","setPreviewInvoiceVisible","open","write","QRCode","useGrouping","price","ExtendDueDateButton","setIsConfirmHovered","handleModalClose","handleConfirm","confirmExtendDueDate","extendDueDateMessage","_ref56","_ref58","TransactionModal","transactionModalVisible","TransactionButton","_ref60","buttonValue","transactionValue","colorHoverIn","colorHoverOut","PaymentHistoryModal","paymentHistoryVisible","setPaymentHistoryVisible","displayedPayments","setDisplayedPayments","loadingMore","setLoadingMore","onScroll","_ref61","layoutMeasurement","contentOffset","contentSize","isCloseToBottom","nextItems","loadMorePayments","scrollEventThrottle","isArray","CustomerProfileModal","customerModalVisible","setCustomerModalVisible","totalPaymentValue","background","Hyperlink","linkDefault","linkStyle","ChatMessageHeader","carImageUrl","reRenderKey","setReRenderKey","freightPriceYen","paddingRight","FontAwesome5","ReadByListModal","userEmail","handleReadByListModalClose","readByListModalVisible","ImagePreviewModal","isVisible","HoverablePressable","_ref65","printComponent","isHoveredDownload","setIsHoveredDownload","Linking","openURL","onMouseEnter","onMouseLeave","DocumentPreviewModal","selectedFileUrl","pdfViewerModalVisible","iframeKey","setIframeKey","setLoading","handleIframeLoad","timeout","setSelectedFileUrl","clearTimeout","setPdfViewerModalVisible","printWindow","encodeURIComponent","print","onLoad","ChatMessageBox","_ref67","chatMessagesData","loadMoreMessagesLoading","noMoreMessagesData","isEyeHovered","setIsEyeHovered","flatListRef","hoveredImageIndex","setHoveredImageIndex","selectedImageIndex","setSelectedImageIndex","isPreviewVisible","setIsPreviewVisible","handleImageMessageMouseLeave","handleReadByListModalOpen","setReadByListModalVisible","animatedValue","Animated","Value","loop","sequence","timing","toValue","useNativeDriver","start","interpolate","inputRange","outputRange","handleLoadMoreMessages","_ref68","setLoadMoreMessagesLoading","setNoMoreMessagesData","_ref69","handlePreviewInvoiceModalOpen","match","formattedHours","amPm","substr","extractUsernameFromEmail","_email$split","renderItemText","isGlobalCustomerSender","urlPattern","RegExp","segments","segment","segmentWithBreaks","str","n","insertBreaks","isUrlForText","canOpenURL","supported","flexWrap","getFileIcon","iconSize","lowerFileName","endsWith","_ref70","isLastMessage","handleImageMessageMouseEnter","openPreview","absoluteFillObject","inverted","chatMessageBoxLoading","chatListSearchText","_useState213","_useState214","_useState215","_useState216","activeButton","setActiveButton","_useState217","_useState218","setActiveButtonValue","_useState219","_useState220","activeFilterButton","setActiveFilterButton","_useState221","_useState222","setUnreadButtonValue","_useState223","_useState224","readButtonValue","setReadButtonValue","_useState225","_useState226","_useState227","_useState228","unreadCount","setUnreadCount","fetchIpAndCountry","_ref71","fetchedIp","fetchedIpCountry","country_name","unrepliedQuery","handlePress","buttonTitle","buttonTitleValue","queryRef","buildQuery","_projectControlAuth$c","_ref72","_ref73","_useState229","_useState230","borderTopLeftRadius","borderTopRightRadius","horizontal","minWidth","prevState","borderBottomRightRadius","defaultSelectedButton","selectedPortForCountry","SearchablePortDropdown","setQuery","isDropdownVisible","setIsDropdownVisible","searchRef","formattedData","ports","collectionName","FreightNavigation","selectedButtonState","setSelectedButtonState","button","setSelectedButton","SelectMethod","portCode","selectedMethod","setSelectedMethod","methodData","toast","useToast","updatePortMethod","methodField","render","formattedPortCode","method","TouchableHighlight","underlayColor","SelectInspectionIsRequired","countryCode","selectedInspectionIsRequired","setSelectedInspectionIsRequired","inspectionIsRequiredData","updateCountryInspection","inspectionIsRequiredField","formattedCountryCode","countryData","inspectionIsRequired","SelectInspectionName","selectedInspectionName","setSelectedInspectionName","inspectionNameData","updateCountryInspectionName","inspectionNameField","addPort","newCountryData","addCountry","countryName","_x14","AddCountryModal","handleAddCountryModalClose","addCountryModalVisible","inputCountryText","addButtonLoading","setAddButtonLoading","handleAddButton","_inputCountryText$cur","_inputCountryText$cur2","setAddCountryModalVisible","inputRef","filteredValue","filterInput","NavigatePage","selectedButton","CountriesTable","PortsTable","AddPortsForCountriesModal","handleAddPortsForCountriesModalClose","addPortsForCountriesModalVisible","handleAddPortsForCountriesModalOpen","countryPortsData","setAddPortsForCountriesModalVisible","addPortForCountryField","nearestPortsField","_docSnap$data$formatt","_x15","updateCountryPortsField","_x16","DeleteCountryModal","handleDeleteCountryModalClose","deleteCountryModalVisible","buttonLoading","setButtonLoading","handleDeleteCountry","formattedFieldCode","deleteField","inputSearchRef","inputSortOrder","textAreaAddInspectionIsRequired","textAreaAddInspectionName","_inputSearchRef$curre","handleAddCountryModalOpen","setCountryPortsData","updateCountrySortOrder","sortOrderField","_x17","_x18","_x19","handleSortOrderTextChange","handleDeleteCountryModalOpen","setDeleteCountryModalVisible","handleUpdateInsurance","insuranceField","_x20","_x21","_x22","returnKeyType","autoCapitalize","_textAreaAddInspectio4","_textAreaAddInspectio3","BouncyCheckbox","fillColor","unfillColor","innerIconStyle","textStyle","fontFamily","AddPortModal","handleAddPortModalClose","addPortModalVisible","inputPortText","_inputPortText$curren","_inputCountryText$cur3","_inputCountryText$cur4","_inputPortText$curren2","_inputCountryText$cur5","setAddPortModalVisible","DeletePortModal","_ref34","handleDeletePortModalClose","deletePortModalVisible","handleDeletePort","textAreaAddMethod","inputProfitPrice","inputNagoyaPrice","inputYokohamaPrice","inputKyushuPrice","inputKobePrice","inputMemo","handleProfitPriceTextChange","updatePortsField","_x23","_x24","_x25","_x26","_x27","_inputSearchRef$curre2","profitPrice","handleAddPortModalOpen","handleDeletePortModalOpen","setDeletePortModalVisible","_textAreaAddMethod$cu","_x28","keyboardShouldPersistTaps","NamePopover","LogsTable","logsData","setLogsData","handleNextPage","handlePreviousPage","CurrencyConverterComponent","successModalVisible","setSuccessModalVisible","todayCurrency","setTodayCurrency","timestampCurrency","setTimestampCurrency","setExchangeRate","setLastUpdate","CurrencyConverter","rates","JPY","JpyToUsd","yenToDollar","dollarToYen","usdToEur","EUR","eurToUsd","usdToGbp","GBP","gbpToUsd","usdToAud","AUD","audToUsd","usdToCad","CAD","cadToUsd","yenToEuro","euroToYen","yenToGbp","gbpToYen","yenToAud","audToYen","yenToCad","cadToYen","lastUpdateDate","formattedLastUpdate","hour","minute","second","timeZoneName","newTodayCurrency","currencyRef","jpyToEur","eurToJpy","jpyToGbp","gbpToJpy","jpyToAud","audToJpy","jpyToCad","cadToJpy","logDataCurrency","handleCloseCurrencyModal","handleCloseSuccessModal","MyBarChart","VictoryChart","theme","VictoryTheme","material","domainPadding","parent","VictoryAxis","axis","stroke","ticks","tickLabels","fill","dependentAxis","VictoryBar","datum","barRatio","setIsOpen","handleOpen","handleToggleLogs","handleToggleAddAccount","handleToggleAccountList","handleToggleAddVehicle","handleVehicleList","handleFreight","handleChatMessages","slideAnimation","easing","Easing","inOut","ease","onPressOut","transform","translateX","onHover","setOnHover","globalCurrentSupplyChainCostsData","globalCurrentStockID","globalSelectedVehicle","globalSelectedVehicleReferenceNumber","globalSelectedCarName","SelectStockStatus","selectedStockStatusValue","setSelectedStockStatusValue","handleSaveStockStatus","stockStatusHistoryData","vehicleProductRef","stockStatusHistory","ImageUploadModal","handleUploadImagesModalClose","handleUploadImages","uploadImagesModalVisible","uploadImagesButtonLoading","UploadImagesModal","fetchImageCounts","setUploadImagesModalVisible","setUploadImagesButtonLoading","closeAll","handleModalSupplyChainsCostsOpen","setVehicleListSupplyChainsCostsData","AllSccModals","vehicleListSupplyChainsCostsData","expenseViewRef","handleSaveSupplyChainsCosts","SCC_Modals","VehicleEditModal","handleEditModalClose","editVehicleModalVisible","EditVehicleModal","setEditVehicleModalVisible","ViewImagesModal","handleViewImagesModalClose","viewImagesModalVisible","viewImagesData","FobPriceHistoryModal","handleFobPriceHistoryClose","fobPriceHistoryModalVisible","FobPriceHistory","setFobPriceHistoryModalVisible","ImageCountComponent","handleViewImagesModalOpen","handleUploadImagesModalOpen","setImageCount","FobPriceInput","setFobPrice","formatValueWithCommas","handleSaveFob","fobValue","handleTextChange","VehicleListTable","vehicleListData","setStockIDs","setImageCounts","sortField","setSortField","isSortActive","setIsSortActive","handleSortChange","fetchWithSort","fieldToSortBy","sortDirection","vehicleProductData","setVehicleListData","sanitizedSearchQuery","ids","counts","getImageCountInFolder","imageCountsObject","acc","folderPath","folderRef","handleFobPriceHistoryOpen","setFobHistoryData","setViewImagesModalVisible","setViewImagesData","handleSearchEnter","vehicleProductsRef","UsePagination","carImageUrlSlice","createSlice","initialState","reducers","action","payload","selectedFileUrlSlice","pdfViewerModalVisibleSlice","selectedCustomerDataSlice","previewInvoiceVisibleSlice","transactionModalVisibleSlice","invoiceDataSlice","deleteMessageTemplateVisibleSlice","loadMoreMessagesLoadingSlice","noMoreMessagesDataSlice","readByListModalVisibleSlice","selectedChatDataSlice","chatMessageBoxLoadingSlice","chatMessagesDataSlice","chatListSearchTextSlice","activeChatIdSlice","loadMoreLoadingSlice","noMoreDataSlice","chatListLastVisibleSlice","setChatListLastVisible","chatListDataSlice","chatListImageUrlSlice","setChatListImageUrl","countryPortsDataSlice","addPortsForCountriesModalVisibleSlice","methodDataSlice","setMethodData","inspectionIsRequiredDataSlice","setInspectionIsRequiredData","inspectionNameDataSlice","setInspectionNameData","deletePortModalVisibleSlice","deleteCountryModalVisibleSlice","addPortModalVisibleSlice","addCountryModalVisibleSlice","selectedButtonSlice","freightCountriesDataSlice","setFreightCountriesData","freightPortsDataSlice","setFreightPortsData","fobHistoryDataSlice","inputFobSlice","setInputFob","fobPriceHistoryModalVisibleSlice","editVehicleModalVisibleSlice","vehicleListDataSlice","addVehicleListDataSlice","setAddVehicleListData","supplyChainsCostsModalVisibleSlice","uploadImagesModalVisibleSlice","vehicleListSupplyChainsCostsDataSlice","uploadImagesButtonLoadingSlice","viewImagesModalVisibleSlice","viewImagesDataSlice","lastVisibleSlice","accountListDataSlice","logsDataSlice","stockStatusDataSlice","setStockStatusData","isSuccessModalOpenSlice","isUpdateSuccessModalOpenSlice","loadingModalVisibleSlice","selectedExpenseNameSlice","selectedPaidToSlice","supplyChainsCostsDataSlice","currentDateSlice","setCurrentDate","loginEmailSlice","setLoginEmail","loginNameSlice","modalDeleteImagesVisibleSlice","addAnotherImagesSlice","isAddPhotoVisibleSlice","jpyToUsdSlice","setJpyToUsd","usdToJpySlice","setUsdToJpy","modelDataSlice","makeDataSlice","setMakeData","expenseNameDataSlice","setExpenseNameData","paidToDataSlice","setPaidToData","selectedMakeSlice","setSelectedMake","isLoadingSlice","selectedImagesSlice","portDataSlice","setPortData","transmissionDataSlice","setTransmissionData","fuelDataSlice","setFuelData","buyerDataSlice","setBuyerData","salesDataSlice","setSalesData","driveTypeDataSlice","setDriveTypeData","bodyTypeDataSlice","setBodyTypeData","exteriorColorDataSlice","setExteriorColorData","currentYearSlice","setCurrentYear","deleteImageVisibleSlice","actions","configureStore","reducer","chatListImageUrl","freightPortsData","freightCountriesData","inputFob","addVehicleListData","accountListData","selectedMake","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","fetchCurrency","_snapshot$data","_snapshot$data2","fetchExpenseNameData","_snapshot$data3","fetchPaidToData","_snapshot$data4","paidTo","fetchMakeData","_snapshot$data5","fetchPortData","_snapshot$data6","fetchTransmissionData","_snapshot$data7","fetchFuelData","_snapshot$data8","fetchBuyerData","_snapshot$data9","fetchSalesData","_snapshot$data10","fetchDriveTypeData","_snapshot$data11","fetchBodyTypeData","_snapshot$data12","fetchExteriorColorData","_snapshot$data13","fetchYear","fetchCurrentDate","fetchVehicleListData","fetchMethodData","_snapshot$data14","fetchInspectionIsRequiredData","_snapshot$data15","fetchInspectionNameData","_snapshot$data16","fetchChatListData","projectControlFirebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","projectExtensionAuth","app","getAnalytics","firebaseAppForCreateUser","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","notFulfilled","Infinity","i","fulfilled","j","r","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","setAttribute","onScriptComplete","prev","doneFns","parentNode","removeChild","bind","head","appendChild","Symbol","toStringTag","nmd","paths","p","installedChunks","installedChunkData","promise","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}