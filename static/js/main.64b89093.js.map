{"version":3,"file":"static/js/main.64b89093.js","mappings":"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","sources":["assets/chat_step|sync|/^/chat_step_.*_off/.png$","assets/chat_step|sync|/^/chat_step_.*_on/.png$","components/LoginPage.js","components/DevAdminComponents/Lazy Screen/LazyScreen.js","components/DevAdminComponents/ParseCSV.js","components/Top.js","components/Checkpoint.js","components/ResetPassword.js","components/ResetPasswordSuccess.js","App.js","components/DevAdminComponents/AccountList.js","components/DevAdminComponents/AddAccount.js","components/DevAdminComponents/AddVehicle.js","components/DevAdminComponents/ChatMessages.js","components/DevAdminComponents/Freight.js","components/DevAdminComponents/Header/StickyHeader.js","components/DevAdminComponents/Logs.js","components/DevAdminComponents/QrCodeScanner/QrCodeScanner.js","components/DevAdminComponents/SideDrawer/MobileViewDrawer.js","components/DevAdminComponents/SideDrawer/SideDrawer.js","components/DevAdminComponents/VehicleList.js","components/DevAdminComponents/VehicleListComponent/UsePagination.js","components/DevAdminComponents/redux/store.js","crossFirebase.js","firebasecontrol.js","firebasecontrolCreateUser.js","webpack://web/./components/style.css?30b9","node_modules/moment/locale|sync|/^/.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/ensure chunk","webpack/runtime/get javascript chunk filename","webpack/runtime/get mini-css chunk filename","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/load script","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["var map = {\n\t\"./chat_step_1_off.png\": 29413,\n\t\"./chat_step_2_off.png\": 35290,\n\t\"./chat_step_3_off.png\": 38715,\n\t\"./chat_step_4_off.png\": 65256,\n\t\"./chat_step_5_off.png\": 58038,\n\t\"./chat_step_6_off.png\": 49232,\n\t\"./chat_step_7_off.png\": 88618\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 66516;","var map = {\n\t\"./chat_step_1_on.png\": 40027,\n\t\"./chat_step_2_on.png\": 22558,\n\t\"./chat_step_3_on.png\": 80851,\n\t\"./chat_step_4_on.png\": 14740,\n\t\"./chat_step_5_on.png\": 80904,\n\t\"./chat_step_6_on.png\": 81151,\n\t\"./chat_step_7_on.png\": 30443\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 82049;","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition,\r\n  Item,\r\n  Label\r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth, updateDoc } from '../firebasecontrol';\r\nimport { signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  // const navigation = useNavigation();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        // navigation.replace(\"Checkpoint\")\r\n        navigate('/Checkpoint');\r\n\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n      <PresenceTransition visible={errorShow} initial={{\r\n        opacity: 0,\r\n        scale: 0,\r\n      }} animate={{\r\n        opacity: 1,\r\n        scale: 1,\r\n        transition: {\r\n          duration: 200\r\n        }\r\n      }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n        <Alert maxW=\"400\" status=\"error\">\r\n          <VStack space={1} flexShrink={1} w=\"100%\">\r\n            <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                <Alert.Icon />\r\n                <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                  {errorTitle}\r\n                </Text>\r\n              </HStack>\r\n            </HStack>\r\n            <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n              {errorMessage}\r\n            </Box>\r\n          </VStack>\r\n        </Alert>\r\n        {/* </Collapse> */}\r\n      </PresenceTransition>\r\n\r\n    </Box>;\r\n\r\n  };\r\n\r\n  const updateFieldData = async (documentId, fieldName, newValue) => {\r\n    const userRef = doc(db, 'accounts', documentId);\r\n\r\n    try {\r\n      await updateDoc(userRef, {\r\n        [fieldName]: newValue\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating field data:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleSignIn = () => {\r\n    setIsLoading(true);\r\n    setIsDisabled(true);\r\n    setTimeout(() => {\r\n      // Reset loading and disabled state\r\n      setIsLoading(false);\r\n      setIsDisabled(false);\r\n    }, 2000); // Replace with your actual async operation\r\n    setErrorShow(false);\r\n    signInWithEmailAndPassword(auth, email.trim(), password)\r\n      .then((re) => {\r\n        const documentId = email;\r\n        const fieldName = 'pass';\r\n        const newValue = password;\r\n\r\n        updateFieldData(documentId, fieldName, newValue);\r\n        // navigation.navigate('Checkpoint');\r\n        navigate('/Checkpoint');\r\n\r\n\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log(errorCode, errorMessage);\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n        setErrorShow(true);\r\n        if (errorCode === 'auth/user-not-found') {\r\n          console.log('Please use a valid email or check for misspellings.☹️');\r\n          setErrorTitle('Email do not exist!');\r\n          setErrorMessage('Please use an existing email or check for misspellings.☹️');\r\n          <ErrorLoginShow />\r\n        } else if (errorCode === 'auth/wrong-password') {\r\n          console.log('Password is incorrect, please try again. ☹️');\r\n          setErrorTitle('Incorrect password');\r\n          setErrorMessage('Password is incorrect, please try again. ☹️');\r\n          <ErrorLoginShow />\r\n        } else if (errorCode === 'auth/missing-password') {\r\n          console.log('Please enter a password. ☹️');\r\n          setErrorTitle('Password is empty!');\r\n          setErrorMessage('Please enter a password. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n        else if (errorCode === 'auth/invalid-email') {\r\n          console.log('Email is invalid. ☹️');\r\n          setErrorTitle('Invalid email!');\r\n          setErrorMessage('Please enter a valid email. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n        else if (errorCode === 'auth/user-disabled') {\r\n          console.log('User is disabled. ☹️');\r\n          setErrorTitle('Account is disabled!');\r\n          setErrorMessage('Please contact the administrator. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n      })\r\n  };\r\n\r\n  const handleChange = text => setEmail(text);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (email.length > 1) {\r\n      setErrorShow(false)\r\n    }\r\n  }, [email])\r\n\r\n  const handleEmailOnChangeText = (text) => {\r\n    setEmail(text)\r\n    setErrorShow(false)\r\n  };\r\n\r\n  const handlePasswordOnChangeText = text => setPassword(text);\r\n\r\n  useEffect(() => {\r\n    if (password.length > 1) {\r\n      setErrorShow(false)\r\n    }\r\n  }, [password])\r\n\r\n\r\n  // const handleReset = () => {\r\n  //   navigation.navigate('ResetPassword');\r\n  // };\r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n        <ErrorLoginShow />\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n              <Input w={{\r\n                base: \"90%\",\r\n                md: \"90%\",\r\n                sm: \"90%\",\r\n              }} value={email} onSubmitEditing={handleSignIn} onChangeText={handleChange} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\r\n              <Input w={{\r\n                base: \"90%\",\r\n                md: \"90%\",\r\n                sm: \"90%\",\r\n              }} value={password} onSubmitEditing={handleSignIn} onChangeText={handlePasswordOnChangeText} fontSize='16' type={show ? \"text\" : \"password\"} InputRightElement={<Pressable onPress={() => setShow(!show)}>\r\n                <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n              </Pressable>} placeholder=\"Password\" placeholderTextColor='white' color='white' />\r\n              <HStack space={1} justifyContent=\"center\">\r\n                {/* <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                  base: 130,\r\n                  md: 130,\r\n                  sm: 130,\r\n                }} onPress={handleReset}><Text style={{ color: 'white', }}>Reset Password</Text></Button> */}\r\n                <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                  base: 130,\r\n                  md: 130,\r\n                  sm: 130,\r\n                }} onPress={handleSignIn} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Login</Text>}</Button>\r\n\r\n              </HStack>\r\n\r\n            </Stack>\r\n\r\n          </Center>\r\n\r\n\r\n        </Center>\r\n\r\n\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { lazy, Suspense } from 'react';\r\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\r\nimport { Box, Center, Stack, HStack, Spinner, Image } from 'native-base';\r\nconst logo = require('../../../assets/RMJ C-Hub 制御ハブ.png');\r\n// Create a loading component to display while the screen is loading\r\nconst Loading = () => (\r\n\r\n\r\n  <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n\r\n    <Center flex={1}>\r\n      <Center px=\"3\">\r\n        <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n          <Image source={{\r\n            uri: logo\r\n          }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n        </Box>\r\n        {/* <LoginForm /> */}\r\n\r\n        <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n          <HStack space={1} justifyContent=\"center\">\r\n            <Spinner color='white' size='lg' />\r\n          </HStack>\r\n        </Stack>\r\n\r\n      </Center>\r\n\r\n\r\n    </Center>\r\n\r\n\r\n  </Box>\r\n);\r\n\r\nconst LazyScreen = (props) => {\r\n  // Dynamically import the component using React.lazy\r\n  const LazyComponent = lazy(props.importFunc);\r\n\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <LazyComponent {...props} />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default LazyScreen;\r\n","import React, { useState } from 'react';\r\nimport { Button, View, Text } from 'react-native';\r\nimport Papa from 'papaparse';\r\nimport Encoding from 'encoding-japanese';\r\n\r\n\r\n\r\n\r\nconst data = [\r\n    {\r\n        \"仕入No.\": 2024030011,\r\n        \"排気量\": 1400,\r\n    },\r\n    // {\r\n    //     \"仕入No.\": 2024030011,\r\n    //     \"状況\": \"在庫\",\r\n    //     \"車名\": \"ベルタ\",\r\n    //     \"グレード\": \"1.3G 1.3G\",\r\n    //     \"色\": \"Silver\",\r\n    //     \"型式\": \"DBA-SCP92\",\r\n    //     \"年式\": \"H18/09\",\r\n    //     \"ボディ形状\": \"ｾﾀﾞﾝ\",\r\n    //     \"排気量\": 1300,\r\n    //     \"ミッション\": null,\r\n    //     \"エンジン区分\": \"ガソリン\",\r\n    //     \"車台番号\": \"SCP92-1022093\",\r\n    //     \"装備\": \"Anti-Lock Brakes・Driver Airbag・Passenger Airbag・A/C:front・Power Steering・Power Windows・Rear Window Defroster・AM/FM Radio・AM/FM Stereo・CD Player・Premium Sound・Alloy Wheels・Power Door Locks・Power Mirrors・No accidents・Non-smoker\",\r\n    //     \"車輌用途\": null,\r\n    //     \"車検\": null,\r\n    //     \"走行距離\": 57817,\r\n    //     \"長さ\": 4300,\r\n    //     \"幅\": 1690,\r\n    //     \"高さ \": 1460,\r\n    //     \"仕入日\": \"04/03/2024\",\r\n    //     \"仕入区分\": \"ＡＡ\",\r\n    //     \"仕入先\": \"TAA兵庫\",\r\n    //     \"仕入担当\": \"北村祐亮\",\r\n    //     \"仕入店舗\": \"書類未入庫\",\r\n    //     \"仕入価格(税込)\": 235400,\r\n    //     \"仕入価格(税抜)\": 214000,\r\n    //     \"経費計\": 15950,\r\n    //     \"加修費計\": 0,\r\n    //     \"輸出検査料\": 0,\r\n    //     \"課税仕入額\": 228500,\r\n    //     \"消費税額\": 22850, \r\n    //     \"仕入合計金額\": 251350,\r\n    //     \"自動車税\": 0,\r\n    //     \"リサイクル料\": 10280,\r\n    //     \"展示場所\": \"輸出(神戸）\",\r\n    //     \"販売担当\": \"y.kitamura\",\r\n    // },\r\n    // {\r\n    //     \"仕入No.\": 2024030019,\r\n    //     \"状況\": \"在庫\",\r\n    //     \"車名\": \"カローラアクシオ\",\r\n    //     \"グレード\": \"G 1.5 G\",\r\n    //     \"色\": \"Gold\",\r\n    //     \"型式\": \"DBA-NZE141\",\r\n    //     \"年式\": \"H23/07\",\r\n    //     \"ボディ形状\": \"ｾﾀﾞﾝ\",\r\n    //     \"排気量\": 1500,\r\n    //     \"ミッション\": null,\r\n    //     \"エンジン区分\": \"ガソリン\",\r\n    //     \"車台番号\": \"NZE141-3003061\",\r\n    //     \"装備\": \"Anti-Lock Brakes・Driver Airbag・Passenger Airbag・A/C:front・Navigation System・Power Steering・Remote Keyless Entry・Power Windows・Rear Window Defroster・AM/FM Radio・AM/FM Stereo・CD Player・Premium Sound・Power Door Locks・Power Mirrors・No accidents・One owner・Non-smoker\", \"車輌用途\": null, \"車検\": null, \"走行距離\": 9851, \"長さ\": 4410, \"幅\": 1695, \"高さ \": 1460,\r\n    //     \"仕入日\": \"04/03/2024\",\r\n    //     \"仕入区分\": \"ＡＡ\",\r\n    //     \"仕入先\": \"JU東京\",\r\n    //     \"仕入担当\": \"森川\",\r\n    //     \"仕入店舗\": \"書類未入庫\",\r\n    //     \"仕入価格(税込)\": 396000,\r\n    //     \"仕入価格(税抜)\": 360000,\r\n    //     \"経費計\": 19635,\r\n    //     \"加修費計\": 0,\r\n    //     \"輸出検査料\": 0,\r\n    //     \"課税仕入額\": 377850,\r\n    //     \"消費税額\": 37785,\r\n    //     \"仕入合計金額\": 415635,\r\n    //     \"自動車税\": 0,\r\n    //     \"リサイクル料\": 10620,\r\n    //     \"展示場所\": \"輸出（横浜）\",\r\n    //     \"販売担当\": \"y.kitamura\"\r\n    // }\r\n]\r\n\r\n\r\n\r\n\r\nconst ParseCSV = () => {\r\n    const [csvData, setCsvData] = useState([]);\r\n\r\n    const handleFileChange = async (event) => {\r\n        const file = event.target.files[0];\r\n        if (!file) {\r\n            return;\r\n        }\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            const codes = new Uint8Array(e.target.result);\r\n            // Convert from SHIFT_JIS to UNICODE\r\n            const unicodeString = Encoding.codeToString(Encoding.convert(codes, 'UNICODE', 'SJIS'));\r\n            // Parse CSV using PapaParse\r\n            Papa.parse(unicodeString, {\r\n                header: true,\r\n                dynamicTyping: true,\r\n                complete: async function (results) {\r\n                    console.log('Parsed results:', results);\r\n                    setCsvData(results.data);\r\n\r\n                    // Iterate over each row and add to the server\r\n                    results.data.forEach(async (row) => {\r\n                        try {\r\n                            const documentId = row['仕入No.']; // Get the value of 仕入No. field\r\n                            const response = await fetch('http://192.168.24.126:7000/addVehicleData', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    'username': 'rmj-marc',\r\n                                    'accessKey': 'U2FsdGVkX1+ZE9ufgN17Tr4SbuH1B3ehEDMHs4hn6pY=',\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    documentId: documentId,\r\n                                    documentData: row,\r\n                                }) // Include documentId in the request body\r\n                            });\r\n                            if (response.ok) {\r\n                                console.log('Data added successfully:', row);\r\n                            } else {\r\n                                console.error('Failed to add data:', response.status);\r\n                            }\r\n                        } catch (error) {\r\n                            console.error('Error adding data:', error);\r\n                        }\r\n                    });\r\n\r\n                }\r\n            });\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n    };\r\n\r\n    const convertToFirestoreDocument = (row) => {\r\n        // Define the mapping of CSV keys to Firestore keys\r\n        const mapping = {\r\n            '仕入No.': 'documentId',\r\n            '状況': 'status',\r\n            '車名': 'carName',\r\n            'グレード': 'grade',\r\n            '色': 'color',\r\n            '型式': 'model',\r\n            '年式': 'year',\r\n            'ボディ形状': 'bodyShape',\r\n            '排気量': 'displacement',\r\n            'ミッション': 'transmission',\r\n            'エンジン区分': 'engineType',\r\n            '車台番号': 'chassisNumber',\r\n            '装備': 'equipment',\r\n            '車輌用途': 'vehiclePurpose',\r\n            '車検': 'inspection',\r\n            '走行距離': 'mileage',\r\n            '長さ': 'length',\r\n            '幅': 'width',\r\n            '高さ ': 'height',\r\n            '仕入日': 'purchaseDate',\r\n            '仕入区分': 'purchaseCategory',\r\n            '仕入先': 'purchaseSource',\r\n            '仕入担当': 'purchaseContact',\r\n            '仕入店舗': 'purchaseStore',\r\n            '仕入価格(税込)': 'purchasePriceInclusiveTax',\r\n            '仕入価格(税抜)': 'purchasePriceExclusiveTax',\r\n            '経費計': 'expenseTotal',\r\n            '加修費計': 'repairCostTotal',\r\n            '輸出検査料': 'exportInspectionFee',\r\n            '課税仕入額': 'taxablePurchaseAmount',\r\n            '消費税額': 'consumptionTaxAmount',\r\n            '仕入合計金額': 'totalPurchaseAmount',\r\n            '自動車税': 'automobileTax',\r\n            'リサイクル料': 'recycleFee',\r\n            '展示場所': 'exhibitionPlace',\r\n            '販売担当': 'salesContact'\r\n        };\r\n        // Create the Firestore document object\r\n        const firestoreDocument = {};\r\n        for (const [csvKey, firestoreKey] of Object.entries(mapping)) {\r\n            if (row[csvKey]) {\r\n                // Special handling for numeric values\r\n                if (csvKey === '仕入No.') {\r\n                    firestoreDocument[firestoreKey] = parseInt(row[csvKey]);\r\n                } else if (csvKey === '車検') {\r\n                    // Handle 'null' values for Firestore\r\n                    firestoreDocument[firestoreKey] = row[csvKey] === 'null' ? null : row[csvKey];\r\n                } else {\r\n                    firestoreDocument[firestoreKey] = row[csvKey];\r\n                }\r\n            }\r\n        }\r\n\r\n        return firestoreDocument;\r\n    };\r\n\r\n    const handlePressUpdate = async () => {\r\n\r\n        data.forEach(async (row) => {\r\n            try {\r\n                const documentId = row['仕入No.']; // Get the value of 仕入No. field\r\n                const response = await fetch('http://192.168.24.126:7000/updateVehicleData', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'username': 'rmj-marc',\r\n                        'accessKey': 'U2FsdGVkX1+ZE9ufgN17Tr4SbuH1B3ehEDMHs4hn6pY=',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        documentId: documentId,\r\n                        documentData: row,\r\n                    }) // Include documentId in the request body\r\n                });\r\n                if (response.ok) {\r\n                    console.log('Data updated successfully:', row);\r\n                } else {\r\n                    console.error('Failed to update data:', response.status);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error updating data:', error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <input\r\n                type=\"file\"\r\n                accept=\".csv\"\r\n                onChange={handleFileChange}\r\n                style={{ marginBottom: 20 }}\r\n            />\r\n            <View>\r\n                {csvData.map((row, index) => (\r\n                    <Text key={index}>\r\n                        {JSON.stringify(row)}\r\n                    </Text>\r\n                ))}\r\n            </View>\r\n\r\n            <Button\r\n                style={{ width: 100 }}\r\n                onPress={handlePressUpdate}\r\n            >\r\n                Press to update\r\n            </Button>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default ParseCSV;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  PresenceTransition,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Title,\r\n  Content,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  VStack,\r\n  ScrollView,\r\n  SectionList,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Modal,\r\n  Divider\r\n} from \"native-base\";\r\nimport {\r\n  FontAwesome,\r\n  Entypo,\r\n  MaterialIcons,\r\n  Ionicons,\r\n  Fontisto,\r\n  EvilIcons,\r\n  AntDesign,\r\n  MaterialCommunityIcons,\r\n  Feather,\r\n  FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './style.css';\r\nimport { debounce } from 'lodash';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\n\r\nimport LazyScreen from './DevAdminComponents/Lazy Screen/LazyScreen';\r\n\r\nimport { HashRouter as Router, Route, Routes, useNavigate, Navigate } from 'react-router-dom';\r\n\r\nimport AddAccount from './DevAdminComponents/AddAccount';\r\nimport Logs from './DevAdminComponents/Logs';\r\nimport AccountList from './DevAdminComponents/AccountList';\r\nimport AddVehicle from './DevAdminComponents/AddVehicle';\r\nimport VehicleList from './DevAdminComponents/VehicleList';\r\nimport Freight from './DevAdminComponents/Freight';\r\nimport ChatMessages from './DevAdminComponents/ChatMessages';\r\nimport ParseCSV from './DevAdminComponents/ParseCSV';\r\nimport { setLoginAccountType, setLoginName } from './DevAdminComponents/redux/store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst StackNavigator = createNativeStackNavigator();\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nexport default function Top({ navigation }) {\r\n  const [drawerVisible, setDrawerVisible] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const loginAccountType = useSelector((state) => state.loginAccountType);\r\n  const Drawer = createDrawerNavigator();\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const ChatMessagesComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\r\n  );\r\n\r\n  const LogsComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\r\n  );\r\n\r\n  const FreightComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\r\n  );\r\n\r\n  const VehicleListComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\r\n  );\r\n\r\n  const AccountListComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\r\n  );\r\n\r\n  const AddVehicleComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\r\n  );\r\n\r\n  const AddAccountComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = navigation.addListener('state', () => {\r\n  //     // Close the drawer on navigation change\r\n  //     setDrawerVisible(false);\r\n  //   });\r\n\r\n  //   return unsubscribe;\r\n  // }, [navigation]);\r\n\r\n  useEffect(() => {\r\n    // Initially hide the drawer\r\n    setDrawerVisible(false);\r\n  }, []);\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate('/Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate('/Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const getRandomDelay = () => {\r\n    const minDelay = 100; // Minimum delay in milliseconds\r\n    const maxDelay = 200; // Maximum delay in milliseconds\r\n    return Math.floor(Math.random() * (maxDelay - minDelay + 1) + minDelay);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n\r\n      onSnapshot(accountDocRef, (docSnapshot) => {\r\n        if (docSnapshot.exists()) {\r\n          const data = docSnapshot.data();\r\n          const fieldType = data.type;\r\n          const fieldName = data.name;\r\n\r\n          if (data.active === true) {\r\n            setType(fieldType);\r\n            dispatch(setLoginAccountType(fieldType));\r\n            // console.log('Account Type: ', fieldType);\r\n            dispatch(setLoginName(fieldName));\r\n            const delay = getRandomDelay();\r\n            // setTimeout(() => {\r\n            // navigation.replace(fieldType);\r\n            // navigate(`/top`)\r\n            // }, delay);\r\n          }\r\n          else {\r\n            signOut(auth)\r\n              .then(() => {\r\n                // navigation.navigate('Login');\r\n                navigate('/Login');\r\n              })\r\n              .catch((error) => {\r\n                console.error('Error signing out:', error);\r\n              });\r\n          }\r\n        } else {\r\n          // Handle the case where the document does not exist\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n\r\n  };\r\n\r\n  const ProtectedRoute = ({ loginAccountType, allowedAccountTypes, redirectTo, children }) => {\r\n    return allowedAccountTypes.includes(loginAccountType) ? children : <Navigate to={redirectTo} replace />;\r\n  };\r\n\r\n\r\n  const style = document.createElement('style');\r\n  style.textContent = `\r\n  body, html {\r\n    overscroll-behavior-x: none;\r\n    overscroll-behavior-y: none;\r\n  }\r\n`;\r\n\r\n  document.head.append(style);\r\n\r\n  return (\r\n\r\n\r\n    // <Drawer.Navigator\r\n    //   // useLegacyImplementation\r\n    //   screenOptions={{\r\n    //     headerShown: false,\r\n    //     drawerStyle: { backgroundColor: '#7B9CFF' },\r\n    //     drawerContentOptions: {\r\n    //       activeTintColor: '#7B9CFF',\r\n    //       inactiveTintColor: '#7B9CFF',\r\n    //       activeLabelStyle: { color: '#7B9CFF' },\r\n    //       inactiveLabelStyle: { color: '#7B9CFF' },\r\n    //     },\r\n    //   }}\r\n    // >\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"CHAT MESSAGES\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    // <Drawer.Screen\r\n    //   name=\"LOGS\"\r\n    //   component={() => (\r\n    //     <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\r\n    //   )}\r\n    //   options={{ unmountOnBlur: true }}\r\n    // />\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"FREIGHT\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"VEHICLE LIST\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"ACCOUNT LIST\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"ADD NEW VEHICLE\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"ADD C-HUB ACCOUNT\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    // </Drawer.Navigator>\r\n\r\n    // <StackNavigator.Navigator screenOptions={{ headerShown: false }}>\r\n\r\n    //   <StackNavigator.Screen name=\"CHAT MESSAGES\" component={ChatMessagesComponent} />\r\n    //   <StackNavigator.Screen name=\"FREIGHT\" component={FreightComponent} />\r\n    //   <StackNavigator.Screen name=\"ADD NEW VEHICLE\" component={AddVehicleComponent} />\r\n    //   <StackNavigator.Screen name=\"LOGS\" component={LogsComponent} />\r\n    //   <StackNavigator.Screen name=\"VEHICLE LIST\" component={VehicleListComponent} />\r\n    //   <StackNavigator.Screen name=\"ACCOUNT LIST\" component={AccountListComponent} />\r\n    //   <StackNavigator.Screen name=\"ADD C-HUB ACCOUNT\" component={AddAccountComponent} />\r\n\r\n    // </StackNavigator.Navigator>\r\n    <NativeBaseProvider>\r\n      <Routes>\r\n        <Route path=\"*\" element={<Navigate to=\"chat-messages\" replace />} />\r\n        <Route path=\"parse-csv\" element={<ParseCSV />} />\r\n        <Route path=\"chat-messages\" element={<ChatMessages />} />\r\n        <Route path=\"chat-messages/:chatId\" element={<ChatMessages />} />\r\n        <Route path=\"freight\" element={<FreightComponent />} />\r\n        <Route path=\"add-new-vehicle\" element={<AddVehicleComponent />} />\r\n        <Route path=\"logs\" element={<LogsComponent />} />\r\n        <Route path=\"vehicle-list\" element={<VehicleListComponent />} />\r\n        <Route path=\"account-list\" element={<AccountListComponent />} />\r\n        <Route path=\"add-c-hub-account\" element={<AddAccountComponent />} />\r\n        {/* Add additional nested routes as needed */}\r\n      </Routes>\r\n    </NativeBaseProvider>\r\n    // <Drawer.Navigator useLegacyImplementation screenOptions={{\r\n    //   headerShown: false,\r\n    //   drawerStyle: { backgroundColor: '#D0DCFF' },\r\n    //   drawerContentOptions: {\r\n    //     activeTintColor: 'white',\r\n    //     inactiveTintColor: 'white',\r\n    //     activeLabelStyle: { color: 'white' },\r\n    //     inactiveLabelStyle: { color: 'white' }\r\n    //   }\r\n    // }} >  \r\n    //        <Drawer.Screen name=\"ADD NEW VEHICLE\" component={AddVehicle} />\r\n    //   <Drawer.Screen name=\"VEHICLE LIST\" component={VehicleList} />\r\n\r\n    //   <Drawer.Screen name=\"ACCOUNT LIST\" component={AccountList} />\r\n    //   <Drawer.Screen name=\"LOGS\" component={Logs} />\r\n    //   <Drawer.Screen name=\"ADD C-HUB ACCOUNT\" component={AddAccount} />\r\n\r\n\r\n    // </Drawer.Navigator>\r\n\r\n\r\n    //  <NativeBaseProvider>\r\n    //       <StackNavigator.Navigator options={{ headerShown: false }}>\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AccountList\" component={AccountList} />\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"Logs\" component={Logs} />\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AddAccount\" component={AddAccount} />\r\n\r\n    //       </StackNavigator.Navigator>\r\n\r\n    //     </NativeBaseProvider>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition\r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot } from '../firebasecontrol'\r\nimport { signOut, onAuthStateChanged, reload, getAuth } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  setLoginAccountType,\r\n  // setModelData,\r\n  setLoginEmail,\r\n  setLoginName\r\n} from './DevAdminComponents/redux/store'\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Checkpoint() {\r\n  const dispatch = useDispatch();\r\n  const loginEmail = useSelector((state) => state.loginEmail);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const loginAccountType = useSelector((state) => state.loginAccountType);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [emailCredential, setEmailCredential] = React.useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n\r\n  // const navigation = useNavigation()\r\n  const navigate = useNavigate();\r\n\r\n\r\n  // const handleDocumentChange = (snapshot) => {\r\n  //   if (!snapshot.exists()) {\r\n  //     signOut(auth)\r\n  //       .then(() => {\r\n  //         navigation.navigate('Login');\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.error('Error signing out:', error);\r\n  //       });\r\n  //   }\r\n  // };\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate('/Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate('/Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const getRandomDelay = () => {\r\n    const minDelay = 100; // Minimum delay in milliseconds\r\n    const maxDelay = 200; // Maximum delay in milliseconds\r\n    return Math.floor(Math.random() * (maxDelay - minDelay + 1) + minDelay);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n\r\n      // if (loginAccountType !== '') {\r\n      const delay = getRandomDelay();\r\n      setTimeout(() => {\r\n        // navigation.replace(fieldType);\r\n        navigate(`/top`)\r\n      }, delay);\r\n      // navigate(`/top`)\r\n      // }\r\n      // else {\r\n      //   onSnapshot(accountDocRef, (docSnapshot) => {\r\n      //     if (docSnapshot.exists()) {\r\n      //       const data = docSnapshot.data();\r\n      //       const fieldType = data.type;\r\n      //       const fieldName = data.name;\r\n\r\n      //       if (data.active === true) {\r\n      //         setType(fieldType);\r\n      //         dispatch(setLoginAccountType(fieldType));\r\n      //         dispatch(setLoginName(fieldName));\r\n      //         const delay = getRandomDelay();\r\n      //         // setTimeout(() => {\r\n      //         // navigation.replace(fieldType);\r\n      //         navigate(`/top`)\r\n      //         // }, delay);\r\n      //       }\r\n      //       else {\r\n      //         signOut(auth)\r\n      //           .then(() => {\r\n      //             // navigation.navigate('Login');\r\n      //             navigate('/Login');\r\n      //           })\r\n      //           .catch((error) => {\r\n      //             console.error('Error signing out:', error);\r\n      //           });\r\n      //       }\r\n      //     } else {\r\n      //       // Handle the case where the document does not exist\r\n      //     }\r\n      //   });\r\n      // }\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n\r\n  };\r\n\r\n  // const getFieldValueByEmail = (email, navigation) => {\r\n\r\n\r\n  //   try {\r\n  //     const accountDocRef = doc(firestore, 'accounts', email);\r\n  //     const unsubscribe = onSnapshot(accountDocRef, (accountDocSnapshot) => {\r\n  //       if (accountDocSnapshot.exists()) {\r\n  //         const data = accountDocSnapshot.data();\r\n  //         const fieldType = data.type;\r\n  //         const fieldName = data.name;\r\n\r\n  //         if (data.active === true) {\r\n  //           dispatch(setLoginName(fieldName));\r\n  //           const delay = getRandomDelay();\r\n  //           setTimeout(() => {\r\n  //             navigation.replace(fieldType);\r\n  //           }, delay);\r\n  //         } else {\r\n  //           signOut(auth)\r\n  //             .then(() => {\r\n  //               navigation.navigate('Login');\r\n  //             })\r\n  //             .catch((error) => {\r\n  //               console.error('Error signing out:', error);\r\n  //             });\r\n  //         }\r\n  //       } else {\r\n  //         console.log('Document does not exist');\r\n  //       }\r\n  //     });\r\n\r\n  //     // Return the unsubscribe function to stop listening when necessary\r\n  //     return unsubscribe;\r\n  //   } catch (error) {\r\n  //     console.error('Error fetching field value:', error);\r\n  //   }\r\n  // };\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n              <HStack space={1} justifyContent=\"center\">\r\n                <Spinner color='white' size='lg' />\r\n              </HStack>\r\n            </Stack>\r\n\r\n          </Center>\r\n\r\n\r\n        </Center>\r\n\r\n\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { \r\n  Input,\r\n  Icon, \r\n  Stack, \r\n  Pressable, \r\n  Center, \r\n  NativeBaseProvider, \r\n  Button, \r\n  Box, \r\n  HStack, \r\n  Image, \r\n  VStack, \r\n  Alert, \r\n  IconButton, \r\n  CloseIcon, \r\n  Spinner, \r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition \r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\r\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail, confirmPasswordReset  } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ResetPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n      \r\n    })\r\n\r\n    return unsubscribe\r\n  }, []) \r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n            <PresenceTransition visible={errorShow} initial={{\r\n            opacity: 0,\r\n            scale: 0,\r\n          }} animate={{\r\n            opacity: 1,\r\n            scale: 1,\r\n            transition: {\r\n              duration: 200\r\n            }\r\n          }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n          <Alert maxW=\"400\" status=\"error\">\r\n            <VStack space={1} flexShrink={1} w=\"100%\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                  <Alert.Icon />\r\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                    {errorTitle}\r\n                  </Text>\r\n                </HStack>\r\n              </HStack>\r\n              <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n                {errorMessage}\r\n              </Box>\r\n            </VStack>\r\n          </Alert>\r\n        {/* </Collapse> */}\r\n        </PresenceTransition>\r\n \r\n      </Box>;\r\n  \r\n};\r\n\r\n\r\n\r\n  const handleReturnLogin = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n   const handleEmailOnChangeText = (text) => {\r\n    setEmail(text) \r\n    setErrorShow(false)\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setIsLoading(true);\r\n    setIsDisabled(true);\r\n    setErrorShow(false);\r\n    sendPasswordResetEmail(auth, email)\r\n    .then((re)=> {\r\n      console.log(re);\r\n      navigation.navigate('ResetPasswordSuccess');\r\n    \r\n    })\r\n    .catch((error) =>{\r\n      setIsLoading(false);\r\n      setIsDisabled(false);\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log(error);\r\n      setErrorShow(true);\r\n      if (errorCode === 'auth/missing-email') {\r\n        console.log('Please enter an email.☹️');\r\n        setErrorTitle('Email is empty!');\r\n        setErrorMessage('Please enter an email.☹️');\r\n        <ErrorLoginShow/>\r\n      }\r\n      else if (errorCode === 'auth/invalid-email') {\r\n        console.log('Email is invalid. ☹️');\r\n        setErrorTitle('Invalid email!');\r\n        setErrorMessage('Please enter a valid email. ☹️');\r\n         <ErrorLoginShow/>\r\n      } \r\n      else if (errorCode === 'auth/user-not-found') {\r\n        console.log('Please use an existing email. ☹️');\r\n        setErrorTitle('User not found!');\r\n        setErrorMessage('Please use an existing email. ☹️');\r\n         <ErrorLoginShow/>\r\n      }       else if (errorCode === 'auth/too-many-requests') {\r\n        console.log('Too many requests detected, please try again later. ☹️');\r\n        setErrorTitle('Too many requests!');\r\n        setErrorMessage('Too many requests detected, please try again later. ☹️');\r\n         <ErrorLoginShow/>\r\n      } \r\n    })\r\n  };\r\n  \r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n      <ErrorLoginShow/>\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n    <Input w={{\r\n      base: \"90%\",\r\n      md: \"90%\",\r\n      sm: \"90%\", \r\n    }} value={email} onSubmitEditing={handleReset} onChangeText={handleEmailOnChangeText} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\r\n\r\n    <HStack space={1} justifyContent=\"center\">\r\n      <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReset} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16}  />:<Text style={{color: 'white',}}>Reset Password</Text>}</Button>\r\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\r\n\r\n    </HStack>\r\n\r\n  </Stack>\r\n\r\n          </Center>  \r\n\r\n          \r\n        </Center>\r\n\r\n   \r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { \r\n  Input,\r\n  Icon, \r\n  Stack, \r\n  Pressable, \r\n  Center, \r\n  NativeBaseProvider, \r\n  Button, \r\n  Box, \r\n  HStack, \r\n  Image, \r\n  VStack, \r\n  Alert, \r\n  IconButton, \r\n  CloseIcon, \r\n  Spinner, \r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition \r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\r\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail  } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ResetPasswordSuccess() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(true);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n      \r\n    })\r\n\r\n    return unsubscribe\r\n  }, []) \r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n            <PresenceTransition visible={errorShow} initial={{\r\n            opacity: 0,\r\n            scale: 0,\r\n          }} animate={{\r\n            opacity: 1,\r\n            scale: 1,\r\n            transition: {\r\n              duration: 200\r\n            }\r\n          }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n          <Alert maxW=\"400\" status=\"Success\">\r\n            <VStack space={1} flexShrink={1} w=\"100%\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                  <Alert.Icon />\r\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                    Success!\r\n                  </Text>\r\n                </HStack>\r\n              </HStack>\r\n              <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n                Password reset link has been sent to your email! 😊\r\n              </Box>\r\n            </VStack>\r\n          </Alert>\r\n        {/* </Collapse> */}\r\n        </PresenceTransition>\r\n \r\n      </Box>;\r\n  \r\n};\r\n\r\n\r\n  \r\n  const handleReturnLogin = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n      <ErrorLoginShow/>\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n   \r\n\r\n    <HStack space={1} justifyContent=\"center\">\r\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\r\n\r\n    </HStack>\r\n\r\n  </Stack>\r\n\r\n          </Center>  \r\n\r\n          \r\n        </Center>\r\n\r\n   \r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect, StrictMode } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition\r\n} from \"native-base\";\r\nimport { getAuth, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, } from './firebasecontrol'\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport LoginPage from './components/LoginPage';\r\nimport Top from './components/Top';\r\nimport Admin from './components/Top';\r\nimport Checkpoint from './components/Checkpoint';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport ResetPasswordSuccess from './components/ResetPasswordSuccess';\r\nimport './style.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './components/DevAdminComponents/redux/store';\r\nimport { HashRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\n\r\n\r\nconst StackNavigator = createNativeStackNavigator();\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\nexport default function App() {\r\n  const [initializing, setInitializing] = useState(true);\r\n  const [user, setUser] = useState(null);\r\n\r\n  function onAuthStateChanged(user) {\r\n    setUser(user);\r\n    if (initializing) setInitializing(false);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const subscriber = auth.onAuthStateChanged(onAuthStateChanged)\r\n\r\n    return subscriber;\r\n  }, [])\r\n\r\n\r\n  if (initializing) {\r\n    return null; // or a loading screen if needed\r\n  }\r\n\r\n\r\n  const config = {\r\n    screens: {\r\n      Login: 'login',\r\n      Checkpoint: 'checkpoint',\r\n      devadmin: {\r\n        path: 'devadmin',\r\n        screens: {\r\n          'CHAT MESSAGES': 'ChatMessages/:chatId',\r\n          'FREIGHT': 'Freight',\r\n          'ADD NEW VEHICLE': 'AddNewVehicle',\r\n          'LOGS': 'Logs',\r\n          'VEHICLE LIST': 'VehicleList',\r\n          'ACCOUNT LIST': 'AccountList',\r\n          'ADD C-HUB ACCOUNT': 'AddCHubAccount',\r\n        },\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const linking = {\r\n    prefixes: ['https://lontokkayo.github.io/samplecontrolhub/'],\r\n    config,\r\n  };\r\n\r\n  const style = document.createElement('style');\r\n  style.textContent = `\r\n  body, html {\r\n    overscroll-behavior-x: none;\r\n    overscroll-behavior-y: none;\r\n  }\r\n`;\r\n\r\n  document.head.append(style);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\r\n          <Route path=\"/Login\" element={<LoginPage />} />\r\n          <Route path=\"/Login/*\" element={<LoginPage />} />\r\n          <Route path=\"/Checkpoint\" element={<Checkpoint />} />\r\n          {/* Corrected path for Admin if needed */}\r\n          <Route path=\"/top/*\" element={<Top />} />\r\n          {/* Define other routes */}\r\n        </Routes>\r\n      </Router>\r\n    </Provider>\r\n    // <Router>\r\n    //   <Provider store={store}>\r\n    //     <NativeBaseProvider>\r\n    //       {/* <LoginPage/> */}\r\n    //       <NavigationContainer linking={linking}>\r\n    //         <StackNavigator.Navigator options={{ headerShown: false }}>\r\n    //           <StackNavigator.Screen options={{ headerShown: false, }} name=\"Login\" component={LoginPage} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false, }} name=\"Checkpoint\" component={Checkpoint} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false, unmountOnBlur: true }} name=\"devadmin\" component={DevAdmin} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPassword\" component={ResetPassword} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPasswordSuccess\" component={ResetPasswordSuccess} />\r\n    //           {/* {user ? (<StackNavigator.Screen options={{ headerShown: false }} name=\"Checkpoint\" component={Checkpoint} /> ) : user ?\r\n    //       (<StackNavigator.Screen options={{ headerShown: false }} name=\"superadmin\" component={SuperAdmin} />) : user ?\r\n    //       (<StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />) :  (\r\n    //       <StackNavigator.Screen  options={{ headerShown: false }} name=\"Login\" component={LoginPage} />\r\n    //     )} */}\r\n    //         </StackNavigator.Navigator>\r\n    //       </NavigationContainer>\r\n    //     </NativeBaseProvider>\r\n    //   </Provider>\r\n    // </Router>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Alert } from 'react-native';\r\nimport {\r\n    Input,\r\n    Icon,\r\n    Stack,\r\n    Pressable,\r\n    Center,\r\n    PresenceTransition,\r\n    NativeBaseProvider,\r\n    Button,\r\n    Box,\r\n    HStack,\r\n    Image,\r\n    Container,\r\n    Header,\r\n    Left,\r\n    Body,\r\n    Title,\r\n    Content,\r\n    Text,\r\n    Heading,\r\n    Flex,\r\n    VStack,\r\n    ScrollView,\r\n    SectionList,\r\n    useBreakpointValue,\r\n    Spinner,\r\n    Modal,\r\n    Divider,\r\n    Popover\r\n} from \"native-base\";\r\nimport { DataTable } from 'react-native-paper';\r\nimport {\r\n    FontAwesome,\r\n    Entypo,\r\n    MaterialIcons,\r\n    Ionicons,\r\n    Fontisto,\r\n    EvilIcons,\r\n    AntDesign,\r\n    MaterialCommunityIcons,\r\n    Feather,\r\n    FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail, deleteUser, signInWithEmailAndPassword, updateEmail, updatePassword } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, deleteDoc, limit } from '../../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport './../style.css';\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { color } from 'react-native-reanimated';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport {\r\n    createDrawerNavigator,\r\n    DrawerContentScrollView,\r\n    DrawerItemList,\r\n    DrawerItem,\r\n} from '@react-navigation/drawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setAccountListData, setLoadingModalVisible, setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { collectionGroup, endBefore, limitToLast, startAfter, where } from 'firebase/firestore';\r\nimport { projectControlFirestore } from '../../crossFirebase';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\nlet selectedScreen = 'ACCOUNT LIST'\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AccountList() {\r\n    const dispatch = useDispatch();\r\n    const loginName = useSelector((state) => state.loginName);\r\n    const [email, setEmail] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [showModal, setShowModal] = useState('');\r\n    const [type, setType] = useState('');\r\n    const logo = require('../../assets/C-Hub.png');\r\n    const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const [isMobileView, setIsMobileView] = useState(false);\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [show, setShow] = React.useState(false);\r\n    const [show2, setShow2] = React.useState(false);\r\n    const [isDisabled, setIsDisabled] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    // const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n\r\n    const [isSelectedLogs, setIsSelectedLogs] = useState(false);\r\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\r\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(true);\r\n    const [isSelected3, setIsSelected3] = useState(false);\r\n    const [isSelected4, setIsSelected4] = useState(false);\r\n\r\n    const [accountTypeSpAd, setAccountTypeSpAd] = useState(false);\r\n    const [accountTypeDevAd, setAccountTypeDevAd] = useState(false);\r\n    const [accountTypeAd, setAccountTypeAd] = useState(false);\r\n    const [accountType3, setAccountType3] = useState(false);\r\n    const [accountType4, setAccountType4] = useState(false);\r\n\r\n    const [inputName, setInputName] = useState('');\r\n    const [isInputNameBlank, setIsInputNameBlank] = useState(false);\r\n    const [inputEmail, setInputEmail] = useState('');\r\n    const [inputPassword, setInputPassword] = useState('');\r\n    const [inputConfirmPassword, setInputConfirmPassword] = useState('');\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n    const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\r\n    const [showSuccessModal, setShowSuccessModal] = React.useState(false);\r\n    const [showDisableModal, setShowDisableModal] = React.useState(false);\r\n    const [showEnableModal, setShowEnableModal] = React.useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = React.useState(false);\r\n    const [showSaveSuccessModal, setShowSaveSuccessModal] = React.useState(false);\r\n    const inputRefs = useRef([]);\r\n\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [isIntervalActive, setIsIntervalActive] = useState(true);\r\n    const [time, setTime] = useState('');\r\n    const [selectedType, setSelectedType] = useState('');\r\n    const [selectedTypeDisplay, setSelectedTypeDisplay] = useState('');\r\n    const [selectedItemType, setSelectedItemType] = useState('');\r\n    const [isEmailDuplicate, setIsEmailDuplicate] = useState('');\r\n    const [authEmail, setAuthEmail] = useState('');\r\n    const [authPassword, setAuthPassword] = useState('');\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n    const [isSaveLoading, setIsSaveLoading] = useState(false);\r\n    const inputEmailRef = useRef(null);\r\n    const inputNameRef = useRef(null);\r\n    const inputPassRef = useRef(null);\r\n\r\n    const [page, setPage] = useState(0);\r\n    const optionsPerPage = [13, 25, 50];\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const [documentListener, setDocumentListener] = useState(false);\r\n\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const ref0 = useRef(null);\r\n    const ref1 = useRef(null);\r\n    const ref2 = useRef(null);\r\n    const ref3 = useRef(null);\r\n    const searchInputRef = useRef(null);\r\n\r\n    const searchInput = useRef(null);\r\n    const searchInputValue = searchInput.current?.value;\r\n\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [firstVisible, setFirstVisible] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(db, 'accounts'),\r\n            orderBy('timestamp', 'desc'),\r\n            limit(pageSize)\r\n        );\r\n        const unsubscribe = onSnapshot(q, (documents) => {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n            dispatch(setAccountListData(logsDatabaseData));\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            setFirstVisible(documents.docs[0]);\r\n        });\r\n        return () => unsubscribe();\r\n\r\n    }, []);\r\n\r\n    const fetchNextData = async () => {\r\n\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collectionGroup(projectControlFirestore, 'accounts'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n        }\r\n\r\n        else {\r\n            const q = query(\r\n                collection(projectControlFirestore, 'accounts'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const fetchPreviousData = async () => {\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev')\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev');\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchFirstPage = (documents) => {\r\n\r\n\r\n        const accountListDatabaseData = [];\r\n\r\n        documents.forEach((document) => {\r\n            accountListDatabaseData.push({\r\n                id: document.id,\r\n                ...document.data(),\r\n            });\r\n        });\r\n\r\n        dispatch(setAccountListData(accountListDatabaseData));\r\n\r\n        if (documents?.docs[0]) {\r\n            setFirstVisible(documents.docs[0]);\r\n        }\r\n        if (documents?.docs[documents.docs.length - 1]) {\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n        if (!documents.empty) {\r\n            const accountListDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                accountListDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n\r\n\r\n\r\n            if (documents?.docs[0]) {\r\n                setFirstVisible(documents.docs[0]);\r\n            }\r\n            if (documents?.docs[documents.docs.length - 1]) {\r\n                setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            }\r\n\r\n            if (pageClicked == 'next') {\r\n                setCurrentPage(currentPage + 1);\r\n            }\r\n            if (pageClicked == 'prev') {\r\n                setCurrentPage(currentPage - 1);\r\n            }\r\n\r\n            dispatch(setAccountListData(accountListDatabaseData));\r\n        }\r\n\r\n        else {\r\n\r\n            if (searchText == '') {\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n            else {\r\n\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'accounts'),\r\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleNextPage = async () => {\r\n        // setPageClicked('next');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage + 1);\r\n        await fetchNextData();\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handlePreviousPage = async () => {\r\n        // setPageClicked('previous');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage - 1);\r\n        await fetchPreviousData();\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        searchData();\r\n\r\n    }, [searchText]);\r\n\r\n    const searchData = async () => {\r\n\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        if (searchText === '') {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'accounts'),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n    };\r\n\r\n    const handleSearchEnter = () => {\r\n\r\n        if (searchInputRef.current?.value !== '') {\r\n            setSearchText(searchInputRef.current.value.trim());\r\n        }\r\n        else {\r\n            setSearchText('');\r\n\r\n            if (searchText == '') {\r\n                searchData();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleToggleAccountTypeAd = useCallback(() => {\r\n        const text = 'admin';\r\n\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Admin');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountTypeDevAd = useCallback(() => {\r\n        const text = 'devadmin';\r\n\r\n        setSelectedTypeDisplay('Developer Admin');\r\n\r\n        setSelectedType(text);\r\n        setSelectedItemType(text);\r\n\r\n    }, []);\r\n\r\n    const handleToggleAccountType3 = useCallback(() => {\r\n        const text = 'staff';\r\n\r\n        setSelectedType(text);\r\n\r\n        setSelectedTypeDisplay('Staff');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountType4 = useCallback(() => {\r\n        const text = 'booking';\r\n\r\n\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Booking');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountTypeSpAd = useCallback(() => {\r\n        const text = 'superadmin';\r\n\r\n        setSelectedItemType(text);\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Super Admin');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // console.log(selectedType);\r\n        // console.log(selectedTypeDisplay);\r\n\r\n    }, [selectedType, selectedTypeDisplay])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')); // Replace 'your-collection' with the actual collection name and 'timestamp' with the timestamp field in your documents\r\n                const querySnapshot = await getDocs(q);\r\n                const docs = querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                setData(docs);\r\n                setFilteredData(docs);\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        const unsubscribe = onSnapshot(query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')), (snapshot) => {\r\n            const updatedData = snapshot.docs.map((doc) => doc.data());\r\n            setData(updatedData);\r\n            setFilteredData(updatedData);\r\n        });\r\n\r\n        fetchData();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n    }, [typeOfAccount]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n\r\n            if (!user) {\r\n                // navigation.navigate(\"Login\")\r\n                navigate(\"/Login\")\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const firebaseFirestore = getFirestore();\r\n\r\n\r\n\r\n\r\n    // const handleUpdate = async () => {\r\n    //     setIsDisabled(true);\r\n    //     setIsLoading(true);\r\n\r\n    //     if (\r\n    //         validateEmail() === false ||\r\n    //         inputName === ''\r\n    //     ) {\r\n    //         setTimeout(() => {\r\n    //             // Reset loading and disabled state\r\n    //             setIsLoading(false);\r\n    //             setIsDisabled(false);\r\n    //         }, 500);\r\n    //     } else {\r\n    //         try {\r\n    //             const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\r\n    //             if (signInMethods.length > 0) {\r\n    //                 // Email already exists\r\n    //                 setIsEmailDuplicate(true);\r\n    //                 setEmailError(false);\r\n    //                 validateEmail(false);\r\n    //                 setIsLoading(false);\r\n    //                 setIsDisabled(false);\r\n    //                 return;\r\n    //             }\r\n\r\n    //             await createUserWithEmailAndPassword(authForCreateUser, inputEmail, inputPassword)\r\n    //                 .then((userCredential) => {\r\n\r\n    //                     const user = userCredential.user;\r\n    //                     try {\r\n    //                         const customID = inputEmail; // Replace 'your-custom-id' with your desired custom ID\r\n    //                         const docRef = doc(db, 'accounts', selectedItem.email); // Replace 'myCollection' with the name of your desired collection\r\n    //                         updateDoc(docRef, {\r\n    //                             // Specify the data you want to add to the document\r\n    //                             email: inputEmail,\r\n    //                             name: inputName,\r\n    //                             pass: inputPassword,\r\n    //                             type: typeOfAccount,\r\n    //                             // ...\r\n    //                         });\r\n\r\n    //                         addLogToCollection(logData);\r\n    //                         // console.log(logData);\r\n    //                         setIsLoading(false);\r\n    //                         setIsDisabled(false);\r\n    //                         handleClear();\r\n    //                         setShowModal(true);\r\n\r\n    //                         // console.log('Document added with custom ID: ', customID);\r\n    //                     } catch (error) {\r\n    //                         console.error('Error adding document: ', error);\r\n    //                     }\r\n\r\n\r\n    //                     // Reset loading and disabled state\r\n\r\n\r\n\r\n    //                 })\r\n    //                 .catch((error) => {\r\n    //                     // console.log('An error occurred during sign-up. Please try again later.');\r\n    //                     console.log(error);\r\n    //                     setIsLoading(false);\r\n    //                     setIsDisabled(false);\r\n    //                 });\r\n    //         } catch (error) {\r\n    //             const errorCode = error.code;\r\n    //             const errorMessage = error.message;\r\n    //             console.log('An error occurred while checking the email existence. Please try again later.');\r\n    //             // console.log(errorCode, errorMessage);\r\n    //             setIsLoading(false);\r\n    //             setIsDisabled(false);\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n    const handleClear = useCallback(() => {\r\n        const text = '';\r\n\r\n        ref0.current.value = \"\";\r\n        ref1.current.value = \"\";\r\n        ref2.current.value = \"\";\r\n        ref3.current.value = \"\";\r\n        setAccountTypeAd(false);\r\n        setAccountTypeSpAd(false);\r\n        setAccountTypeDevAd(false);\r\n        setAccountType3(false);\r\n        setAccountType4(false);\r\n        setEmailError(false);\r\n        setIsEmailDuplicate(false);\r\n\r\n\r\n        setInputConfirmPassword('');\r\n        setInputEmail('');\r\n        setInputName('');\r\n        setInputPassword('');\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    // const handleToggleLogs = useCallback(() => {\r\n    //     // setIsSelectedLogs(true);\r\n\r\n    //     // setIsSelectedAddAccount(false);\r\n    //     // setIsSelectedAccountList(false);\r\n    //     // setIsSelected3(false);\r\n    //     // setIsSelected4(false);\r\n\r\n    //     navigation.navigate(\"LOGS\");\r\n    // }, []);\r\n    // const handleToggleAddAccount = useCallback(() => {\r\n    //     // setIsSelectedAddAccount(true);\r\n\r\n    //     // setIsSelectedLogs(false);\r\n    //     // setIsSelectedAccountList(false);\r\n    //     // setIsSelected3(false);\r\n    //     // setIsSelected4(false);\r\n\r\n    //     navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n    // }, []);\r\n\r\n    // const handleToggleAccountList = useCallback(() => {\r\n    //     // setIsSelectedAccountList(true);\r\n\r\n    //     // setIsSelectedAddAccount(false);\r\n    //     // setIsSelected3(false);\r\n    //     // setIsSelected4(false);\r\n    //     // setIsSelectedLogs(false);\r\n    //     navigation.navigate(\"ACCOUNT LIST\");\r\n    // }, []);\r\n\r\n    // const handleToggleAddVehicle = useCallback(() => {\r\n    //     // setIsSelected3(true);\r\n\r\n    //     // setIsSelectedAddAccount(false);\r\n    //     // setIsSelectedAccountList(false);\r\n    //     // setIsSelected4(false);\r\n    //     // setIsSelectedLogs(false);\r\n    //     navigation.navigate(\"ADD NEW VEHICLE\");\r\n    // }, []);\r\n\r\n    // const handleVehicleList = useCallback(() => {\r\n    //     navigation.navigate(\"VEHICLE LIST\");\r\n    // }, []);\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n\r\n\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(auth)\r\n                    .then(() => {\r\n                        // navigation.navigate('Login');\r\n                        navigate(\"/Login\")\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(auth)\r\n                .then(() => {\r\n                    // navigation.navigate('Login');\r\n                    navigate(\"/Login\")\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n\r\n\r\n    };\r\n    const subscribeToFieldChange = () => {\r\n        const userId = auth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const listenForNameChange = (documentId) => {\r\n        const userRef = doc(db, 'accounts', documentId);\r\n\r\n        const unsubscribe = onSnapshot(userRef, (doc) => {\r\n            if (doc.exists()) {\r\n                const name = doc.data().name;\r\n                const type = doc.data().type;\r\n                setName(name);\r\n                setType(type);\r\n                // Perform any necessary actions with the name value\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        });\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n    useEffect(() => {\r\n        getEmailFromDocument('accounts', auth.currentUser?.email);\r\n        // console.log(authEmail, authPassword)\r\n    }, [authEmail, authPassword]);\r\n\r\n    const getEmailFromDocument = async (collectionPath, documentId) => {\r\n        const firestore = getFirestore();\r\n        const documentRef = doc(firestore, collectionPath, documentId);\r\n\r\n        try {\r\n            const documentSnapshot = await getDoc(documentRef);\r\n            if (documentSnapshot.exists()) {\r\n                const email = documentSnapshot.data().email;\r\n                const pass = documentSnapshot.data().pass;\r\n\r\n                setAuthEmail(email);\r\n                setAuthPassword(pass);\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error retrieving email:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const validateEmail = () => {\r\n        // Regular expression for email validation\r\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n        const isValid = emailRegex.test(inputEmail);\r\n\r\n        return isValid;\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(auth).then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\")\r\n\r\n            setEmail('');\r\n            setName('');\r\n        }).catch((error) => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     const handleScreenResize = () => {\r\n    //         const screenWidth = Dimensions.get('window').width;\r\n    //         setIsMobileView(screenWidth < 1200);\r\n    //     };\r\n\r\n    //     // Initial check on component mount\r\n    //     handleScreenResize();\r\n\r\n    //     // Listen for screen dimension changes\r\n    //     Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n    //     // Cleanup event listener on component unmount\r\n    //     return () => {\r\n    //         Dimensions.removeEventListener('change', handleScreenResize);\r\n    //     };\r\n    // }, []);\r\n\r\n\r\n\r\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleEdit = useCallback((id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputPassword(selectedItem.pass);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setModalVisible(true);\r\n        setSelectedItemType(selectedItem.type);\r\n        setSelectedType(selectedItem.type);\r\n        setSelectedTypeDisplay(selectedItem.typeDisplay);\r\n        setIsEmailDuplicate(false);\r\n        // console.log(selectedItem);\r\n\r\n        if (inputEmailRef.current) {\r\n            inputEmailRef.current.setNativeProps({ text: selectedItem.email });\r\n        }\r\n\r\n        if (inputNameRef.current) {\r\n            inputNameRef.current.setNativeProps({ text: selectedItem.name });\r\n        }\r\n        if (inputPassRef.current) {\r\n            inputPassRef.current.setNativeProps({ text: selectedItem.pass });\r\n        }\r\n    }, [data]);\r\n\r\n\r\n\r\n    const handleInputEmailChange = debounce((value) => {\r\n        setInputEmail(value);\r\n    }, 50);\r\n\r\n    const handleInputNameChange = debounce((value) => {\r\n        setInputName(value);\r\n    }, 50);\r\n\r\n    const handleInputPassChange = debounce((value) => {\r\n        setInputPassword(value);\r\n    }, 50);\r\n\r\n\r\n    const handleOpenDisableModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowDisableModal(true);\r\n    };\r\n\r\n    const handleOpenEnableModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowEnableModal(true);\r\n    };\r\n\r\n    const handleOpenDeleteModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowDeleteModal(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setModalVisible(false);\r\n        setShow(false);\r\n    };\r\n\r\n    const handleCloseDisableModal = () => {\r\n        setShowDisableModal(false);\r\n    };\r\n\r\n    const handleOpenSaveSuccessModal = () => {\r\n        setShowDisableModal(false);\r\n    };\r\n\r\n\r\n    const handleCloseDeleteModal = () => {\r\n        setShowDeleteModal(false);\r\n    };\r\n    const handleCloseEnableModal = () => {\r\n        setShowEnableModal(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [selectedItem]);\r\n    const addLogToCollection = async (data) => {\r\n        try {\r\n            const firestore = getFirestore();\r\n            const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n            // Add a new document to the \"logs\" collection\r\n            await addDoc(logsCollectionRef, data);\r\n\r\n        } catch (error) {\r\n            console.error('Error adding document:', error);\r\n        }\r\n    };\r\n    // useEffect(() => {\r\n    //     const fetchTime = async () => {\r\n    //         try {\r\n    //             const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    //             const { datetime } = response.data;\r\n    //             const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    //             setTime(formattedTime);\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching time:', error);\r\n    //         }\r\n    //     };\r\n\r\n    //     const interval = setInterval(() => {\r\n    //         if (isIntervalActive) {\r\n    //             fetchTime();\r\n    //         }\r\n    //     }, 1000);\r\n\r\n    //     return () => {\r\n    //         clearInterval(interval);\r\n    //     };\r\n    // }, [isIntervalActive]);\r\n\r\n    const openSuccessModal = () => {\r\n        setShowSuccessModal(true);\r\n\r\n    };\r\n\r\n    const closeSuccessModal = () => {\r\n        setShowSuccessModal(false);\r\n        setIsDisabled(false);\r\n        setIsYesLoading(false);\r\n    };\r\n\r\n\r\n    // async function disableUserByUid(uid) {\r\n    //     try {\r\n    //         await updateDisabled(auth, uid, true);\r\n    //         console.log('User account disabled successfully');\r\n    //     } catch (error) {\r\n    //         console.error('Error disabling user account:', error);\r\n    //     }\r\n    // }\r\n\r\n    const handleEnable = useCallback(async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n        try {\r\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n            const updates = {\r\n                active: true,\r\n            };\r\n\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            await updateDoc(itemDocRef, updates);\r\n\r\n            const updatedData = data.map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, active: true };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            setData(updatedData);\r\n            const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            // console.log('Field updated successfully.');\r\n\r\n            const logData = {\r\n                message: `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`.toLowerCase(),\r\n                    'Account Enabled'.toLowerCase(),\r\n                    'Enabled'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n            };\r\n            addLogToCollection(logData);\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n            handleCloseEnableModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n        }\r\n    }, [data]);\r\n\r\n    const deleteDocument = async (collectionPath, customId) => {\r\n        const firestore = getFirestore();\r\n        const documentRef = doc(firestore, collectionPath, customId);\r\n\r\n        try {\r\n            await deleteDoc(documentRef);\r\n            console.log('Document deleted successfully.');\r\n        } catch (error) {\r\n            console.error('Error deleting document:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleDelete = useCallback(async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n\r\n\r\n        try {\r\n\r\n            const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n            const user = userCredential.user;\r\n\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            await deleteUser(user);\r\n            const logData = {\r\n                message: `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`,\r\n                timestamp: formattedTime,\r\n                colorScheme: false,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`.toLowerCase(),\r\n                    'Account Deleted'.toLowerCase(),\r\n                    'Deleted'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n            };\r\n            addLogToCollection(logData);\r\n\r\n\r\n            console.log('Account deleted successfully');\r\n\r\n            const signInCredential = await signInWithEmailAndPassword(\r\n                auth,\r\n                authEmail,\r\n                authPassword\r\n            );\r\n            const signedInUser = signInCredential.user;\r\n            signedInUser\r\n            deleteDocument('accounts', selectedItem.email);\r\n            // setData(updatedData);\r\n            // const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            navigate('/account-list')\r\n            // console.log('Field updated successfully.');\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n\r\n            handleCloseDeleteModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n        }\r\n    }, [data]);\r\n\r\n    const handleDisable = useCallback(async (id) => {\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n\r\n        try {\r\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n            const updates = {\r\n                active: false,\r\n            };\r\n\r\n            await updateDoc(itemDocRef, updates);\r\n\r\n            const updatedData = data.map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, active: false };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            setData(updatedData);\r\n            const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            // console.log('Field updated successfully.');\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            const logData = {\r\n                message: `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`,\r\n                timestamp: formattedTime,\r\n                colorScheme: false,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`.toLowerCase(),\r\n                    'Account Disabled'.toLowerCase(),\r\n                    'Disabled'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n\r\n            };\r\n            addLogToCollection(logData);\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n            handleCloseDisableModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n            setIsDisabled(false);\r\n            setIsSaveLoading(false);\r\n        }\r\n    }, [data]);\r\n\r\n    // Apply search filter to the data\r\n    const applySearchFilter = (data, searchInputValue) => {\r\n        if (!searchInputValue) {\r\n            return data;\r\n        }\r\n        const filteredData = data.filter((item) =>\r\n            item.email.toLowerCase().includes(searchInputValue.toLowerCase()) ||\r\n            item.name.toLowerCase().includes(searchInputValue.toLowerCase()) ||\r\n            item.typeDisplay.toLowerCase().includes(searchInputValue.toLowerCase())\r\n        );\r\n        return filteredData;\r\n    };\r\n\r\n\r\n\r\n    const handleSave = async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setIsDisabled(true);\r\n        setIsSaveLoading(true);\r\n        if (\r\n            isPasswordLengthLabel() === false ||\r\n            validateEmail() === false ||\r\n            inputName === ''\r\n        ) {\r\n            setTimeout(() => {\r\n                // Reset loading and disabled state\r\n                setIsLoading(false);\r\n                setIsDisabled(false);\r\n            }, 500);\r\n        } else {\r\n\r\n            if (inputEmail === selectedItem.email && inputPassword === selectedItem.pass) {\r\n\r\n\r\n                const documentRef = doc(db, 'accounts', selectedItem.id);\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime(formattedTime);\r\n\r\n                const updatedFields = {\r\n                    name: inputName,\r\n                    type: selectedType,\r\n                    typeDisplay: selectedTypeDisplay,\r\n                    lastUpdatedDate: formattedTime,\r\n                    // Add more fields as needed\r\n\r\n                };\r\n\r\n                try {\r\n\r\n                    await updateDoc(documentRef, updatedFields);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n\r\n\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime(formattedTime);\r\n\r\n                    const logData = {\r\n                        message: `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            selectedItem.email.toLowerCase(),\r\n                            selectedItem.name.toLowerCase(),\r\n                            inputName.toLowerCase(),\r\n                            name.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n                    }\r\n\r\n                    addLogToCollection(logData);\r\n\r\n                    const updatedData = data.map((item) => {\r\n                        if (item.id === id) {\r\n                            item.name = inputName;\r\n                            item.type = selectedType;\r\n                            item.typeDisplay = selectedTypeDisplay;\r\n                            item.lastUpdatedDate = formattedTime;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setData(updatedData);\r\n                    const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n                    setFilteredData(filteredData);\r\n                    // console.log('Field updated successfully.');\r\n                    // console.log('Document successfully updated!');\r\n                    handleCloseModal();\r\n                    setShowSuccessModal(true);\r\n                } catch (error) {\r\n                    console.error('Error updating document:', error);\r\n                }\r\n\r\n            }\r\n\r\n            else if (inputEmail === selectedItem.email && inputPassword !== selectedItem.pass) {\r\n\r\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n                const user = userCredential.user;\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime();\r\n\r\n                try {\r\n                    await updatePassword(user, inputPassword);\r\n\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime();\r\n                    // console.log('Password changed successfully');\r\n                    const userDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n\r\n\r\n                    const updatedFields = {\r\n                        email: inputEmail,\r\n                        name: inputName,\r\n                        type: selectedType,\r\n                        typeDisplay: selectedTypeDisplay,\r\n                        dateOfCreation: selectedItem.dateOfCreation,\r\n                        lastUpdatedDate: formattedTime,\r\n                        pass: inputPassword,\r\n                        active: true,\r\n\r\n                        // Add more fields as needed\r\n                    };\r\n                    // Perform setDoc operation\r\n                    await setDoc(userDocRef, updatedFields);\r\n\r\n                    const signInCredential = await signInWithEmailAndPassword(\r\n                        auth,\r\n                        authEmail,\r\n                        authPassword\r\n                    );\r\n\r\n                    const signedInUser = signInCredential.user;\r\n                    signedInUser\r\n\r\n\r\n                    // console.log(authEmail, authPassword);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n\r\n                    setTime(formattedTime);\r\n\r\n                    const logData = {\r\n                        message: `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`.toLowerCase(),\r\n                            'Password Changed'.toLowerCase(),\r\n                            'Password'.toLowerCase(),\r\n                            selectedItem.email.toLowerCase(),\r\n                            selectedItem.name.toLowerCase(),\r\n                            name.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n\r\n                    const updatedItem = {\r\n                        ...selectedItem,\r\n                        email: inputEmail,\r\n                        name: inputName,\r\n                        type: selectedType,\r\n                        typeDisplay: selectedTypeDisplay,\r\n                        lastUpdatedDate: formattedTime,\r\n                    };\r\n\r\n                    const updatedData = data.map((item) => {\r\n                        if (item.id === id) {\r\n                            item.name = inputName;\r\n                            item.type = selectedType;\r\n                            item.typeDisplay = selectedTypeDisplay;\r\n                            item.lastUpdatedDate = formattedTime;\r\n                            item.pass = inputPassword;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setData(updatedData);\r\n                    const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\r\n                    setFilteredData(filteredData);\r\n                    // console.log('Document set successfully');\r\n                    handleCloseModal();\r\n                    setShowSuccessModal(true);\r\n                } catch (error) {\r\n                    console.error('Error:', error);\r\n                }\r\n\r\n            }\r\n\r\n            else if (inputEmail !== selectedItem.email) {\r\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n                const user = userCredential.user;\r\n\r\n\r\n                // updateEmail(user, inputEmail)\r\n                //     .then(async () => {\r\n                //         // Email change successful\r\n                //         setIsDisabled(false);\r\n                //         setIsSaveLoading(false);\r\n                //         const documentRef = doc(db, 'accounts', selectedItem.email);\r\n\r\n                const oldDocumentRef = doc(db, 'accounts', selectedItem.email);\r\n                const newDocumentRef = doc(db, 'accounts', inputEmail);\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime(formattedTime);\r\n\r\n                try {\r\n                    // Get the data from the old document\r\n                    const documentSnapshot = await getDoc(oldDocumentRef);\r\n                    if (documentSnapshot.exists()) {\r\n                        const documentData = documentSnapshot.data();\r\n\r\n                        // Merge the updated fields with the existing document data\r\n\r\n                        // Create the new document with the desired ID and copy the merged data\r\n\r\n                        const updatedFields = {\r\n                            email: inputEmail,\r\n                            name: inputName,\r\n                            type: selectedType,\r\n                            typeDisplay: selectedTypeDisplay,\r\n                            dateOfCreation: selectedItem.dateOfCreation,\r\n                            lastUpdatedDate: formattedTime,\r\n                            pass: inputPassword,\r\n                            active: true,\r\n\r\n                            // Add more fields as needed\r\n                        };\r\n\r\n                        await setDoc(newDocumentRef, updatedFields);\r\n                        await deleteDoc(oldDocumentRef);\r\n                        // Optionally, delete the old document\r\n\r\n                        try {\r\n                            const userCredential = await createUserWithEmailAndPassword(auth, inputEmail, inputPassword);\r\n                            // console.log('User created successfully:', userCredential.user);\r\n\r\n                            setIsDisabled(false);\r\n                            setIsSaveLoading(false);\r\n\r\n                            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                            const { datetime } = response.data;\r\n                            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                            const year = moment(datetime).format('YYYY');\r\n                            const month = moment(datetime).format('MM');\r\n                            const monthWithDay = moment(datetime).format('MM/DD');\r\n                            const date = moment(datetime).format('YYYY/MM/DD');\r\n                            const day = moment(datetime).format('DD');\r\n                            const time = moment(datetime).format('HH:mm');\r\n                            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                            setTime(formattedTime);\r\n\r\n                            const logData = {\r\n                                message: `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`,\r\n                                timestamp: formattedTime,\r\n                                colorScheme: true,\r\n                                keywords: [\r\n                                    formattedTime.toLowerCase(),\r\n                                    `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`.toLowerCase(),\r\n                                    'Updated'.toLowerCase(),\r\n                                    'Email'.toLowerCase(),\r\n                                    selectedItem.email.toLowerCase(),\r\n                                    selectedItem.name.toLowerCase(),\r\n                                    inputEmail.toLowerCase(),\r\n                                    monthWithDay.toLowerCase(),\r\n                                    name.toLowerCase(),\r\n                                    year.toLowerCase(),\r\n                                    month.toLowerCase(),\r\n                                    day.toLowerCase(),\r\n                                    date.toLowerCase(),\r\n                                    time.toLowerCase(),\r\n                                    timeWithMinutesSeconds.toLowerCase(),\r\n                                ],\r\n                            }\r\n                            try {\r\n                                await deleteUser(user);\r\n                                // console.log('User authentication record deleted successfully.');\r\n\r\n\r\n\r\n                                setIsDisabled(false);\r\n                                setIsSaveLoading(false);\r\n\r\n                                const signInCredential = await signInWithEmailAndPassword(\r\n                                    auth,\r\n                                    authEmail,\r\n                                    authPassword\r\n                                );\r\n\r\n                                const signedInUser = signInCredential.user;\r\n                                signedInUser\r\n\r\n                                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                                const { datetime } = response.data;\r\n                                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                                setTime(formattedTime);\r\n\r\n                                const updatedItem = {\r\n                                    ...selectedItem,\r\n                                    email: inputEmail,\r\n                                    name: inputName,\r\n                                    type: selectedType,\r\n                                    typeDisplay: selectedTypeDisplay,\r\n                                    lastUpdatedDate: formattedTime,\r\n                                };\r\n\r\n                                const updatedData = data.map((item) =>\r\n                                    item.id === id ? updatedItem : item\r\n                                );\r\n                                setData(updatedData);\r\n                                const filteredData = applySearchFilter(updatedData, searchInputValue);\r\n                                setFilteredData(filteredData);\r\n                                // console.log(authEmail, authPassword);\r\n\r\n\r\n                            } catch (error) {\r\n                                console.error('Error deleting user authentication record:', error);\r\n                            }\r\n\r\n                            addLogToCollection(logData);\r\n                            handleCloseModal();\r\n                            setShowSuccessModal(true);\r\n\r\n                            // console.log('Document ID successfully changed!');\r\n                        } catch (error) {\r\n                            console.error('Error creating user:', error);\r\n                        }\r\n                    } else {\r\n                        console.error('Old document does not exist!');\r\n                    }\r\n\r\n                } catch (error) {\r\n                    console.error('Error changing document ID:', error);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n                }\r\n\r\n\r\n                // })\r\n                // .catch((error) => {\r\n                //     console.error('Error changing email:', error);\r\n                // });\r\n            }\r\n\r\n\r\n\r\n\r\n            else {\r\n                try {\r\n                    const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\r\n                    if (signInMethods.length > 0) {\r\n                        // Email already exists                        \r\n                        setIsDisabled(false);\r\n                        setIsSaveLoading(false);\r\n                        setIsEmailDuplicate(true);\r\n                        setEmailError(false);\r\n                        validateEmail(false);\r\n\r\n                        return;\r\n                    }\r\n\r\n\r\n                } catch (error) {\r\n                    const errorCode = error.code;\r\n                    const errorMessage = error.message;\r\n                    console.log('An error occurred while checking the email existence. Please try again later.');\r\n                    // console.log(errorCode, errorMessage);\r\n                    setIsLoading(false);\r\n                    setIsDisabled(false);\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n    };\r\n\r\n    const handleChangeEmailText = (text) => {\r\n        setInputEmail(text);\r\n    };\r\n\r\n\r\n\r\n    const isPasswordLengthLabel = () => {\r\n        return inputPassword.length >= 6;\r\n    };\r\n    // const handlePasswordChange = _.debounce((value) => {\r\n    //     setInputPassword(value);\r\n    // }, 50);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc'));\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                    setData(documents);\r\n                });\r\n\r\n                return () => unsubscribe();\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter(\r\n            (item) =>\r\n                item.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                item.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                item.typeDisplay.toLowerCase().includes(searchQuery.toLowerCase())\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce((text) => {\r\n        setSearchQuery(text);\r\n    }, 300);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    const showPopover = () => {\r\n        setShowNamePopover(true);\r\n    };\r\n\r\n    // Function to hide the Popover\r\n    const hidePopover = () => {\r\n        setShowNamePopover(false);\r\n    };\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#0642F4'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#0642F4'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n    return (\r\n        <NativeBaseProvider>\r\n\r\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#0642f4'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={0}\r\n                    borderBottomColor={'cyan.500'}\r\n\r\n                >\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen} />\r\n\r\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: logo,\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    {/* {showDrawerIcon && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    />} */}\r\n\r\n\r\n\r\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: logo2,\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n\r\n\r\n                    <View style={{ alignItems: 'center', flex: 1 }}>\r\n                        <QRCodeScanner />\r\n                    </View>\r\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n                    {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                        <Flex direction=\"row-reverse\">\r\n                            <Popover isOpen={showNamePopover} trigger={triggerProps => {\r\n                                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                    <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                                </Text>;\r\n                            }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\r\n                                <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                                    <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                        <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                            Logout\r\n                                        </Button>\r\n                                    </Popover.Body>\r\n                                </Popover.Content>\r\n                            </Popover>\r\n                        </Flex>\r\n                    </Box> */}\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <Box flex={[1]} flexDirection=\"row\" >\r\n                    {/* Sidebar */}\r\n                    {/* <SideDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    /> */}\r\n\r\n                    {/* Main Content */}\r\n                    <Box flex={1} flexGrow={1} minHeight={0}>\r\n                        {/* Main Content Content */}\r\n                        <Input ref={searchInput} onChangeText={handleSearch} placeholder=\"Search\" bgColor={'white'} />\r\n                        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n                            <Box height={'100%'}>\r\n\r\n                                <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                                    <Box borderWidth={1} borderColor=\"gray.200\" borderRadius={4} overflow=\"hidden\" display={['none', 'none', 'none', '', '', '']}>\r\n                                        <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor={'#0642F4'} >\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Email</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Name</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Type of Account</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Date of Creation</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Last Updated</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Status</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Operate</Text>\r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <PresenceTransition visible={true} initial={{\r\n                                        opacity: 0\r\n                                    }} animate={{\r\n                                        opacity: 1,\r\n                                        transition: {\r\n                                            duration: 250\r\n                                        }\r\n                                    }}>\r\n                                        {paginatedData.map((item) => (\r\n                                            <Box key={item.id} margin={[2, 2, 2, 0, 0, 0]} flexDirection={['column', 'column', 'column', 'row', 'row', 'row']} bgColor={item.active ? 'blue.200' : 'amber.500'} borderColor={'gray.200'} borderWidth={[2, 2, 2, 1, 1, 1]} paddingBottom={1} marginRight={0}>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Email</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.email}</Text>\r\n\r\n\r\n                                                    </Box>\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Name</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.name}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}  > Type of Account</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.typeDisplay}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Date of Creation</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.dateOfCreation}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Last Updated</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.lastUpdatedDate}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Status</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.active ? 'Enabled' : 'Disabled'}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Operate</Text>\r\n                                                        </Box>\r\n                                                        <HStack space={1} flex={[5, 5, 5, 1, 1, 1]}>\r\n                                                            <Button\r\n                                                                onPress={() => handleEdit(item.id)}\r\n                                                                flex={[1, 1, 1, 2, 2, 2]}\r\n                                                                padding={1}\r\n                                                                justifyContent='center'\r\n                                                                alignItems='center'\r\n                                                                flexDirection='row'>\r\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Edit</Text>\r\n                                                                <Icon as={<MaterialIcons name={\"edit\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                            </Button>\r\n                                                            {item.active ? (\r\n                                                                <Button onPress={() => handleOpenDisableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'amber'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Disable</Text>\r\n                                                                    <Icon as={<MaterialIcons name={\"block\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                                </Button>\r\n                                                            ) : (\r\n                                                                <Button onPress={() => handleOpenEnableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'success'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Enable</Text>\r\n                                                                    <Icon as={<MaterialIcons name={\"check-circle\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                                </Button>\r\n                                                            )}\r\n                                                            <Button onPress={() => handleOpenDeleteModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'error'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Delete</Text>\r\n                                                                <Icon as={<MaterialIcons name={\"delete\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                            </Button>\r\n                                                        </HStack>\r\n                                                    </Box>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n\r\n                                        ))}\r\n                                    </PresenceTransition>\r\n                                    <DataTable.Pagination\r\n                                        page={page}\r\n                                        numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                        onPageChange={(page) => setPage(page)}\r\n                                        label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                        optionsPerPage={optionsPerPage}\r\n                                        itemsPerPage={itemsPerPage}\r\n                                        setItemsPerPage={setItemsPerPage}\r\n                                        showFastPagination\r\n                                        optionsLabel={'Rows per page'}\r\n                                    />\r\n                                </DataTable>\r\n                            </Box>\r\n                            <Modal isOpen={modalVisible} onClose={handleCloseModal}>\r\n                                <Modal.Content>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header borderBottomWidth={0}>Edit Acccount</Modal.Header>\r\n                                    <Modal.Body>\r\n\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <VStack><Text>Email: </Text> <Input color={!isEmailDuplicate ? 'black' : 'red.500'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputEmail} ref={inputEmailRef} onChangeText={handleInputEmailChange} /></VStack>\r\n                                                {!validateEmail() && (\r\n                                                    <Text color={'#D22730'} bold>Invalid Email!</Text>\r\n                                                )}\r\n                                                {isEmailDuplicate && (\r\n                                                    <Text color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\r\n                                                )}\r\n                                                <VStack><Text>Name: </Text> <Input borderBottomColor={inputName !== '' ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputName} ref={inputNameRef} onChangeText={handleInputNameChange} /></VStack>\r\n                                                {inputName === '' && (\r\n                                                    <Text color={'#D22730'} bold>Empty Name!</Text>\r\n                                                )}\r\n                                                <VStack><Text>Password: </Text>\r\n                                                    <Input borderBottomColor={isPasswordLengthLabel() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputPassword} ref={inputPassRef} onChangeText={handleInputPassChange} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\r\n                                                        <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" />\r\n                                                    </Pressable>} />\r\n                                                </VStack>\r\n\r\n                                                <VStack><Text>Type of Account:</Text>\r\n                                                    <HStack space={1} justifyContent=\"center\" >\r\n                                                        <Button _hover={{ bgColor: 'booking' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountType4} bgColor={'booking' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Booking</Text></Button>\r\n\r\n                                                        <Button _hover={{ bgColor: 'staff' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountType3} bgColor={'staff' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Staff</Text></Button>\r\n\r\n                                                        <Button _hover={{ bgColor: 'admin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeAd} bgColor={'admin' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Admin</Text></Button>\r\n\r\n\r\n\r\n                                                    </HStack>\r\n                                                    <HStack space={1} justifyContent=\"center\" marginTop={1}>\r\n                                                        <Button _hover={{ bgColor: 'superadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeSpAd} bgColor={'superadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Super Admin</Text></Button>\r\n                                                        <Button _hover={{ bgColor: 'devadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeDevAd} bgColor={'devadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Dev Admin</Text></Button>\r\n                                                    </HStack>\r\n                                                </VStack>\r\n\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseModal} flex={1} padding={1} margin={1}>Close</Button>\r\n                                        <Button onPress={() => handleSave(selectedItem.id)} disabled={isDisabled} flex={1} padding={1} colorScheme={'success'} margin={1}>{isSaveLoading ? <Spinner color=\"white\" size={21} /> : 'Save'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={showDisableModal} onClose={handleCloseDisableModal}>\r\n                                <Modal.Content bgColor={'amber.500'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'amber.500'} borderBottomWidth={0} _text={{ color: 'white', }}>Disable Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'amber.500'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text color={'white'}>Email: {selectedItem.email}</Text>\r\n                                                <Text color={'white'}>Name: {selectedItem.name}</Text>\r\n                                                <Text color={'white'}>Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'amber.500'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleDisable(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={showDeleteModal} onClose={handleCloseDeleteModal}>\r\n                                <Modal.Content bgColor={'error.300'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'error.300'} borderBottomWidth={0} >Delete Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'error.300'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text >Email: {selectedItem.email}</Text>\r\n                                                <Text >Name: {selectedItem.name}</Text>\r\n                                                <Text >Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'error.300'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleDelete(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n\r\n                            <Modal isOpen={showEnableModal} onClose={handleCloseEnableModal}>\r\n                                <Modal.Content bgColor={'success.200'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'success.200'} borderBottomWidth={0}>Enable Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'success.200'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text>Email: {selectedItem.email}</Text>\r\n                                                <Text>Name: {selectedItem.name}</Text>\r\n                                                <Text>Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'success.200'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseEnableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleEnable(selectedItem.id)} colorScheme={'success'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                            <Modal isOpen={showSuccessModal} onClose={() => setShowSuccessModal(false)} size=\"lg\"  >\r\n                                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n                                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n                                    <Modal.Body >\r\n                                        <Text color=\"white\" textAlign={'center'}>The account update was successful.</Text>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n                                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowSuccessModal(false)}>\r\n                                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                        </ScrollView>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  PresenceTransition,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Title,\r\n  Content,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  VStack,\r\n  ScrollView,\r\n  SectionList,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Modal,\r\n  Divider,\r\n  Popover\r\n} from \"native-base\";\r\nimport {\r\n  FontAwesome,\r\n  Entypo,\r\n  MaterialIcons,\r\n  Ionicons,\r\n  Fontisto,\r\n  EvilIcons,\r\n  AntDesign,\r\n  MaterialCommunityIcons,\r\n  Feather,\r\n  FontAwesome5Brands,\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './../style.css';\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport { setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\nlet selectedScreen = 'ADD C-HUB ACCOUNT'\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AddAccount() {\r\n  const dispatch = useDispatch();\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const [isMobileView, setIsMobileView] = useState(false);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [show2, setShow2] = React.useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n  const [isSelectedLogs, setIsSelectedLogs] = useState(false);\r\n  const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(true);\r\n  const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\r\n  const [isSelected3, setIsSelected3] = useState(false);\r\n  const [isSelected4, setIsSelected4] = useState(false);\r\n\r\n  const [accountTypeAdmin, setAccountTypeAdmin] = useState(false);\r\n  const [accountTypeBooking, setAccountTypeBooking] = useState(false);\r\n  const [accountTypeSales, setAccountTypeSales] = useState(false);\r\n  const [accountTypeHamanasu, setAccountTypeHamanasu] = useState(false);\r\n  const [accountTypeApi, setAccountTypeApi] = useState(false);\r\n\r\n\r\n  const [nameVerify, setNameVerify] = useState(false);\r\n  const [emailVerify, setEmailVerify] = useState(false);\r\n  const [passwordVerify, setPasswordVerify] = useState(false);\r\n  const [confirmPasswordVerify, setConfirmPasswordVerify] = useState(false);\r\n  const [accountTypeVerify, setAccountTypeVerify] = useState(false);\r\n  const [isEmailDuplicate, setIsEmailDuplicate] = useState(false);\r\n  const [emailError, setEmailError] = useState(false);\r\n  // const [inputName, setInputName] = useState('');\r\n  // const [inputEmail, setInputEmail] = useState('');\r\n  // const [inputPassword, setInputPassword] = useState('');\r\n  // const [inputConfirmPassword, setInputConfirmPassword] = useState('');\r\n  const [typeOfAccount, setTypeOfAccount] = useState('');\r\n  const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const inputRefs = useRef([]);\r\n\r\n\r\n  const inputName = useRef(null);\r\n  const inputEmail = useRef(null);\r\n  const inputPassword = useRef(null);\r\n  const inputConfirmPassword = useRef(null);\r\n\r\n  const [passwordMatch, setPasswordMatch] = useState(false);\r\n  const [passwordMatchLabel, setPasswordMatchLabel] = useState(true);\r\n  const [passwordLengthLabel, setPasswordLengthLabel] = useState(false);\r\n  const [isNameEmpty, setIsNameEmpty] = useState(true);\r\n\r\n  const [formattedTime, setFormattedTime] = useState('');\r\n\r\n  const [time, setTime] = useState('');\r\n  const fetchTimeRef = useRef();\r\n  const [isIntervalActive, setIsIntervalActive] = useState(true);\r\n\r\n  const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n  }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\r\n\r\n\r\n\r\n\r\n  const SuccessModal = () => {\r\n    return <Center>\r\n      <Modal isOpen={showModal} onClose={closeModal} size=\"lg\"  >\r\n        <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n          <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n          <Modal.Body >\r\n\r\n            <Text textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\r\n          </Modal.Body>\r\n          <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n            <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={closeModal} _text={{ color: 'black', }}>\r\n              Ok\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </Center>;\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n  }, [typeOfAccount]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (!user) {\r\n        // navigation.navigate(\"Login\")\r\n        navigate(\"/Login\")\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const firebaseFirestore = getFirestore();\r\n\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const firestore = getFirestore();\r\n      const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const fetchTime = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n  //       const { datetime } = response.data;\r\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n  //       setTime(formattedTime);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching time:', error);\r\n  //     }\r\n  //   };\r\n  //   const interval = setInterval(fetchTime, 1000);\r\n  //   return () => clearInterval(interval);\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   const fetchTime = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n  //       const { datetime } = response.data;\r\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n  //       setTime(formattedTime);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching time:', error);\r\n  //     }\r\n  //   };\r\n\r\n  //   const interval = setInterval(() => {\r\n  //     if (isIntervalActive) {\r\n  //       fetchTime();\r\n  //     }\r\n  //   }, 1000);\r\n\r\n  //   return () => {\r\n  //     clearInterval(interval);\r\n  //   };\r\n  // }, [isIntervalActive]);\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n    setIsIntervalActive(false); // Pause the interval when the modal is opened\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setIsIntervalActive(true); // Resume the interval when the modal is closed\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleAddAccount = async () => {\r\n    setIsDisabled(true);\r\n    setIsLoading(true);\r\n    if (\r\n      passwordLengthLabel === false ||\r\n      passwordMatch === false ||\r\n      passwordMatchLabel === false ||\r\n      validateEmail() === false ||\r\n      isNameEmpty === true ||\r\n      typeOfAccount === ''\r\n    ) {\r\n      setTimeout(() => {\r\n        // Reset loading and disabled state\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n      }, 500);\r\n    } else {\r\n      try {\r\n        const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail.current?.value);\r\n        if (signInMethods.length > 0) {\r\n          // Email already exists\r\n          setIsEmailDuplicate(true);\r\n          setEmailError(false);\r\n          validateEmail(false);\r\n          setIsLoading(false);\r\n          setIsDisabled(false);\r\n          return;\r\n        }\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        await createUserWithEmailAndPassword(authForCreateUser, inputEmail.current.value, inputPassword.current.value)\r\n          .then((userCredential) => {\r\n\r\n            const user = userCredential.user;\r\n\r\n\r\n\r\n            try {\r\n\r\n              // setTime(formattedTime);\r\n\r\n              const customID = inputEmail.current.value; // Replace 'your-custom-id' with your desired custom ID\r\n              const docRef = doc(db, 'accounts', customID); // Replace 'myCollection' with the name of your desired collection\r\n              const logData = {\r\n                message: `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`,\r\n                timestamp: formattedTime,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`.toLowerCase(),\r\n                  'Account Added'.toLowerCase(),\r\n                  'Added'.toLowerCase(),\r\n                  inputName.current.value.toLowerCase(),\r\n                  typeOfAccountDisplay.toLowerCase(),\r\n                  name.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n                colorScheme: true,\r\n              };\r\n\r\n              setDoc(docRef, {\r\n                // Specify the data you want to add to the document\r\n                email: inputEmail.current?.value,\r\n                name: inputName.current?.value,\r\n                pass: inputPassword.current?.value,\r\n                type: typeOfAccount,\r\n                typeDisplay: typeOfAccountDisplay,\r\n                dateOfCreation: formattedTime,\r\n                lastUpdatedDate: formattedTime,\r\n                active: true,\r\n                // ...\r\n              });\r\n\r\n              addLogToCollection(logData);\r\n              console.log(logData);\r\n              console.log(formattedTime);\r\n              setIsLoading(false);\r\n              setIsDisabled(false);\r\n              handleClear();\r\n              openModal();\r\n\r\n              console.log('Document added with custom ID: ', customID);\r\n            } catch (error) {\r\n              console.error('Error adding document: ', error);\r\n            }\r\n\r\n\r\n\r\n\r\n            // Reset loading and disabled state\r\n\r\n\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.log('An error occurred during sign-up. Please try again later.');\r\n            console.log(error);\r\n            setIsLoading(false);\r\n            setIsDisabled(false);\r\n          });\r\n      } catch (error) {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log('An error occurred while checking the email existence. Please try again later.');\r\n        // console.log(errorCode, errorMessage);\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    const text = '';\r\n\r\n    inputName.current.value = \"\";\r\n    inputEmail.current.value = \"\";\r\n    inputPassword.current.value = \"\";\r\n    inputConfirmPassword.current.value = \"\";\r\n\r\n    setEmailError(false);\r\n    setIsEmailDuplicate(false);\r\n    setIsNameEmpty(true);\r\n\r\n    setPasswordLengthLabel(false);\r\n    setPasswordMatch(false);\r\n    setPasswordMatchLabel(true);\r\n\r\n    setTypeOfAccount('');\r\n    setTypeOfAccountDisplay('');\r\n    // setInputConfirmPassword('');\r\n    // setInputEmail('');\r\n    // setInputName('');\r\n    // setInputPassword('');\r\n\r\n\r\n  };\r\n\r\n  const registerInputRef = (index) => (ref) => {\r\n    inputRefs.current[index] = ref;\r\n  };\r\n\r\n  const handleToggleAccountTypeAdmin = () => {\r\n    const text = 'admin';\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Admin');\r\n  };\r\n\r\n  const handleToggleAccountTypeBooking = () => {\r\n    const text = 'booking';\r\n\r\n\r\n    setTypeOfAccount(text);\r\n\r\n    setTypeOfAccountDisplay('Booking');\r\n  };\r\n\r\n\r\n  const handleToggleAccountTypeSales = () => {\r\n    const text = 'sales';\r\n\r\n\r\n    setTypeOfAccount(text);\r\n\r\n    setTypeOfAccountDisplay('Sales');\r\n  };\r\n\r\n  const handleToggleAccountTypeHamanasu = () => {\r\n    const text = 'hamanasu';\r\n\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Hamanasu');\r\n  };\r\n\r\n\r\n  const handleToggleAccountTypeApi = () => {\r\n    const text = 'api';\r\n\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Api');\r\n  };\r\n\r\n  // const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n  //   navigation.navigate(\"LOGS\");\r\n  // }, []);\r\n\r\n  // const handleToggleAddAccount = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  // }, []);\r\n\r\n  // const handleToggleAccountList = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ACCOUNT LIST\");\r\n  // }, []);\r\n\r\n  // const handleToggleAddVehicle = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ADD NEW VEHICLE\");\r\n  // }, []);\r\n\r\n  // const handleVehicleList = useCallback(() => {\r\n  //   navigation.navigate(\"VEHICLE LIST\");\r\n  // }, []);\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\")\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate(\"/Login\")\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      // This will now always be a function\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n      listenForNameChange(documentId);\r\n    }\r\n  }, []);\r\n\r\n  const listenForNameChange = (documentId) => {\r\n    const userRef = doc(db, 'accounts', documentId);\r\n\r\n    const unsubscribe = onSnapshot(userRef, (doc) => {\r\n      if (doc.exists()) {\r\n        const name = doc.data().name;\r\n        const type = doc.data().type;\r\n        setName(name);\r\n        setType(type);\r\n        // Perform any necessary actions with the name value\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    });\r\n\r\n    // To stop listening for updates, you can call unsubscribe()\r\n    // unsubscribe();\r\n  };\r\n\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handlePasswordChange = () => {\r\n    // const inputPasswordValue = inputPassword.current?.value;\r\n    // const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    // const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    // setPasswordMatch(\r\n    //   inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    // );\r\n    // setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n    // setPasswordLengthLabel(inputPasswordValueLength >= 6);\r\n    handlePasswordStatus();\r\n  };\r\n\r\n  const handleConfirmPasswordChange = () => {\r\n    const inputPasswordValue = inputPassword.current?.value;\r\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    setPasswordMatch(\r\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    );\r\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n  };\r\n\r\n\r\n  const handlePasswordStatus = () => {\r\n    const inputPasswordValue = inputPassword.current?.value;\r\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    setPasswordMatch(\r\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    );\r\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n    setPasswordLengthLabel(inputPasswordValueLength >= 6);\r\n\r\n  };\r\n\r\n  // const isPasswordMatch = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n  //   return (\r\n  //     inputPasswordValue === inputConfirmPasswordValue &&\r\n  //     inputPasswordValueLength >= 6\r\n  //   );\r\n  // };\r\n\r\n  // const isAccountType = () => {\r\n  //   return accountTypeDevAd || accountTypeSpAd || accountTypeAd || accountType3 || accountType4 === true;\r\n  // };\r\n\r\n  // const isPasswordMatchLabel = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n  //   return inputPassword.current?.value === inputConfirmPassword.current?.value;\r\n  // };\r\n\r\n  // const isPasswordLengthLabel = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n  //   return inputPasswordValueLength >= 6;\r\n  // };\r\n\r\n\r\n  const handleEmailChange = () => {\r\n    setIsEmailDuplicate(false);\r\n    handleEmailSubmit();\r\n  };\r\n\r\n  const handleNameChange = () => {\r\n    setIsNameEmpty(inputName.current?.value === '')\r\n  };\r\n\r\n\r\n  const validateEmail = () => {\r\n    const emailValue = inputEmail.current?.value;\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    const isValid = emailRegex.test(emailValue);\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleEmailSubmit = (value) => {\r\n    setEmailError(validateEmail(value));\r\n\r\n    if (emailError) {\r\n      // console.log(emailError);\r\n      // setEmailError(validateEmail());\r\n    } else {\r\n\r\n    }\r\n  };\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(auth).then(() => {\r\n      // navigation.navigate('Login');\r\n      navigate(\"/Login\")\r\n      setEmail('');\r\n      setName('');\r\n    }).catch((error) => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const handleScreenResize = () => {\r\n  //     const screenWidth = Dimensions.get('window').width;\r\n  //     setIsMobileView(screenWidth < 1200);\r\n  //   };\r\n\r\n  //   // Initial check on component mount\r\n  //   handleScreenResize();\r\n\r\n  //   // Listen for screen dimension changes\r\n  //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n  //   // Cleanup event listener on component unmount\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleScreenResize);\r\n  //   };\r\n  // }, []);\r\n\r\n  const sidebarListData = [{\r\n    title: \"VEHICLE INFORMATION INPUT\",\r\n    data: [\"Add New Vehicle\", \"Vehicle List\",]\r\n  },];\r\n\r\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n  const showPopover = () => {\r\n    setShowNamePopover(true);\r\n  };\r\n\r\n  // Function to hide the Popover\r\n  const hidePopover = () => {\r\n    setShowNamePopover(false);\r\n  };\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#0642F4'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#0642F4'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n  return (\r\n    <NativeBaseProvider>\r\n      <SuccessModal />\r\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#0642f4'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={0}\r\n          borderBottomColor={'cyan.500'}\r\n\r\n        >\r\n\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen} />\r\n\r\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          {/* {showDrawerIcon && <MobileViewDrawer\r\n            selectedScreen={selectedScreen}\r\n          />} */}\r\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n            <FastImage\r\n              source={{\r\n                uri: logo2,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n\r\n          <View style={{ alignItems: 'center', flex: 1 }}>\r\n            <QRCodeScanner />\r\n          </View>\r\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <Box flex={[1]} flexDirection=\"row\" >\r\n\r\n\r\n          {/* Main Content */}\r\n          <Box flex={1} flexGrow={1} minHeight={0}>\r\n            {/* Main Content Content */}\r\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n\r\n              {/* <AddAccount/> */}\r\n\r\n              <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" >\r\n\r\n\r\n                <Box bgColor='#A6BCFE' w='100%' h='100%' margin={1}>\r\n                  <Center flex={1}>\r\n                    <Center px=\"3\">\r\n\r\n\r\n                      <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n                        <Text marginTop={5} marginBottom={1} fontSize={[12, 14, 16]} color={'white'} bold={'center'}>ADD ACCOUNT FOR REAL MOTOR JAPAN CONTROL HUB</Text>\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputName} onSubmitEditing={handleAddAccount} onChangeText={handleNameChange} borderColor={'white'} borderBottomColor={!isNameEmpty ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<AntDesign name=\"idcard\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Name\" placeholderTextColor='white' color='white' />\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputEmail} onChangeText={handleEmailChange} onSubmitEditing={handleAddAccount} color={!isEmailDuplicate ? 'white' : 'red.500'} borderColor={'white'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' />\r\n\r\n\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordLengthLabel ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handlePasswordChange} fontSize='16' borderColor={'white'} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\r\n                          <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n                        </Pressable>} placeholder=\"Password\" placeholderTextColor='gray' color='white' />\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputConfirmPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordMatch ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handleConfirmPasswordChange} fontSize='16' borderColor={'white'} type={show2 ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show2 ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow2(!show2)}>\r\n                          <Icon as={<MaterialIcons name={show2 ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n                        </Pressable>} placeholder=\"Confirm Password\" placeholderTextColor='white' color='white' />\r\n                        {!validateEmail() && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Invalid Email!</Text>\r\n                        )}\r\n                        {isEmailDuplicate && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\r\n                        )}\r\n                        {!passwordLengthLabel && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Password must be at least 6 characters or above!</Text>\r\n                        )}\r\n                        {!passwordMatchLabel && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Passwords do not match!</Text>\r\n                        )}\r\n\r\n                        <Text fontSize={16} color={'white'} bold>ACCOUNT TYPE:                                                             </Text>\r\n                        <Box borderColor={typeOfAccount !== '' ? 'green.300' : 'red.500'} borderWidth={2}>\r\n                          <Flex wrap=\"wrap\" flexDir={'row'} justifyContent=\"center\" space={1}>\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'hamanasu' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeHamanasu}\r\n                              bgColor={typeOfAccount == 'hamanasu' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Hamanasu</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'booking' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeBooking}\r\n                              bgColor={typeOfAccount == 'booking' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Booking</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'sales' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeSales}\r\n                              bgColor={typeOfAccount == 'sales' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Sales</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'admin' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeAdmin}\r\n                              bgColor={typeOfAccount == 'admin' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Admin</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'api' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeApi}\r\n                              bgColor={typeOfAccount == 'api' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>API</Text>\r\n                            </Button>\r\n                          </Flex>\r\n                        </Box>\r\n                        <HStack space={1} justifyContent=\"center\" marginBottom={5}>\r\n                          <Button _hover={{ bgColor: '#D9D9D9', }} _pressed={{ bgColor: '#D9D9D9', }} _focus={{ bgColor: '#D9D9D9', }} bgColor='warmGray.200' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                            base: 130,\r\n                            md: 130,\r\n                            sm: 130,\r\n                          }} onPress={handleClear} ><Text style={{ color: 'gray', }}>Clear</Text></Button>\r\n                          <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                            base: 130,\r\n                            md: 130,\r\n                            sm: 130,\r\n                          }} onPress={handleAddAccount} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Add Acccount</Text>}</Button>\r\n\r\n                        </HStack>\r\n\r\n\r\n                      </Stack>\r\n\r\n                    </Center>\r\n\r\n\r\n                  </Center>\r\n\r\n\r\n                </Box>\r\n\r\n              </Box>\r\n\r\n            </ScrollView>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </NativeBaseProvider>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  Image as NativeImage,\r\n  Input,\r\n  Modal,\r\n  NativeBaseProvider,\r\n  Popover,\r\n  Pressable,\r\n  Spinner,\r\n  Text,\r\n  VStack,\r\n  useBreakpointValue,\r\n  TextArea,\r\n  InputRightAddon,\r\n  InputGroup,\r\n  Select,\r\n  CheckIcon,\r\n  ScrollView,\r\n  PresenceTransition,\r\n  Drawer,\r\n  InputLeftAddon,\r\n  Heading,\r\n  FormControl,\r\n  WarningOutlineIcon\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useCallback, useMemo, useLayoutEffect } from 'react';\r\nimport { Dimensions, TouchableOpacity, StyleSheet, Platform, View } from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject, } from 'firebase/storage';\r\nimport { DragSortableView } from \"react-native-drag-sort\";\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport SelectDropdown from 'react-native-select-dropdown';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { cloneDeep } from 'lodash';\r\nimport ImageMarker, { Position } from \"react-native-image-marker\";\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\n\r\n\r\nimport {\r\n  // setModelData,\r\n  setMakeData,\r\n  setIsLoading,\r\n  setSelectedImages,\r\n  setIsAddPhotoVisible,\r\n  setAddAnotherImages,\r\n  setLoginName,\r\n  setDeleteImageVisible,\r\n  setExpenseNameData,\r\n  setPaidToData,\r\n  setCurrentDate,\r\n  setSupplyChainsCostsData,\r\n  setSelectedExpenseName,\r\n  setSelectedPaidTo,\r\n  setLoadingModalVisible,\r\n  setIsSuccessModalOpen,\r\n  setIsUpdateSuccessModalOpen\r\n\r\n} from './redux/store'\r\n\r\n\r\nimport \"setimmediate\";\r\n\r\n\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css'; // Import a CSS effect for the lazy loading transition\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\n\r\nimport { AutocompleteDropdown, AutocompleteDropdownContextProvider } from 'react-native-autocomplete-dropdown';\r\nimport { nanoid } from 'nanoid';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst { width } = Dimensions.get('window');\r\n\r\n\r\nconst childrenWidth = 76;\r\nconst childrenHeight = 76;\r\nconst marginChildrenTop = 7;\r\nconst marginChildrenBottom = 0;\r\n\r\nlet globalJpyToUsd = '';\r\nlet globalUsdToJpy = '';\r\n\r\nlet globalSupplyChainCostsData = [];\r\nlet globalSelectedExpenseName = '';\r\nlet globalSupplyChainCostsAmount = 0;\r\nlet globalSelectedPaidTo = '';\r\nlet globalModelDataVariable = [];\r\nlet globalMakeDataVariable = [];\r\nlet globalRegYearDataVariable = [];\r\nlet globalPortDataVariable = [];\r\nlet globalSalesDataVariable = [];\r\nlet globalBuyerDataVariable = [];\r\nlet globalTransmissionDataVariable = [];\r\nlet globalExteriorColorDataVariable = [];\r\nlet globalFuelDataVariable = [];\r\nlet globalDriveTypeDataVariable = [];\r\nlet globalBodyTypeDataVariable = [];\r\nlet globalSelectedImages = [];\r\nlet globalVehicleFolderName = '';\r\nlet selectedScreen = 'ADD NEW VEHICLE'\r\nlet globalReferenceNumber = '';\r\nlet globalSPCSelectedDate = '';\r\nlet globalFobPrice = '';\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst UpdateSuccessModal = ({ onClose, bodyText, headerText }) => {\r\n\r\n  const isUpdateSuccessModalOpen = useSelector((state) => state.isUpdateSuccessModalOpen);\r\n\r\n  return (\r\n    <Modal isOpen={isUpdateSuccessModalOpen} onClose={onClose} >\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text textAlign={'center'} color={'#102A43'} bold>\r\n            😊😎 Success! 😎😊\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          justifyContent={'center'}\r\n          alignItems={'center'}\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              {headerText}\r\n              {/* Vehicle Added! */}\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              {bodyText}\r\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UploadSuccessModal = ({ onClose, bodyText, headerText }) => {\r\n\r\n  const isSuccessModalOpen = useSelector((state) => state.isSuccessModalOpen);\r\n\r\n  return (\r\n    <Modal isOpen={isSuccessModalOpen} onClose={onClose} >\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text textAlign={'center'} color={'#102A43'} bold>\r\n            😊😎 Success! 😎😊\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          justifyContent={'center'}\r\n          alignItems={'center'}\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              {headerText}\r\n              {/* Vehicle Added! */}\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              {bodyText}\r\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst LoadingModal = () => {\r\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n  return (\r\n\r\n    <Box\r\n      position=\"absolute\"\r\n      top={0}\r\n      bottom={0}\r\n      left={0}\r\n      right={0}\r\n      backgroundColor=\"rgba(0, 0, 0, 0.5)\"\r\n      flex={1}\r\n      display={loadingModalVisible ? '' : 'none'}\r\n    >\r\n      {/* Content within the modal */}\r\n      <Center flex={1}>\r\n        <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n          <Spinner size=\"lg\" color=\"white\" />\r\n          <Text color={'white'} selectable={false}>Loading, please wait!</Text>\r\n        </Box>\r\n      </Center>\r\n    </Box>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedExpenseName}\r\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedExpenseName = value\r\n      dispatch(setSelectedExpenseName(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Expense Name\"\r\n    placeholder=\"Choose Expense Name\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {expenseNameData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n\r\n\r\n};\r\nconst SelectPaidTo = ({ paidToIsError, }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedPaidTo}\r\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedPaidTo = value\r\n      dispatch(setSelectedPaidTo(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Paid To\"\r\n    placeholder=\"Choose Paid To\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {paidToData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n    ;\r\n};\r\n\r\n\r\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\r\n\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const handleModalCalendarOpen = () => {\r\n    setModalCalendarVisible(true);\r\n  };\r\n\r\n  const handleModalCalendarClose = () => {\r\n    setModalCalendarVisible(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <Pressable onPress={handleModalCalendarOpen} flex={3}>\r\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n      </Pressable>\r\n\r\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n        <Modal.CloseButton />\r\n        <Modal.Content>\r\n          <Box height={'full'} flex={1}>\r\n\r\n            <Calendar\r\n              onDayPress={useCallback(day => {\r\n                setSelectedDate(day.dateString);\r\n                // console.log(day.dateString);\r\n                globalSPCSelectedDate = day.dateString;\r\n                handleModalCalendarClose();\r\n              }, [])}\r\n              markedDates={{\r\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n              }}\r\n              renderArrow={(direction) => (\r\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n              )}\r\n              enableSwipeMonths={true}\r\n              initialDate={selectedDate}\r\n              showSixWeeks />\r\n\r\n          </Box>\r\n\r\n        </Modal.Content>\r\n\r\n      </Modal></>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst SupplyChainsCosts = ({\r\n  handleAddExpenseNameTextChange,\r\n  textAreaAddExpenseName,\r\n  inputExpenseAmount,\r\n  handleInputExpenseAmountChange,\r\n  handleAddPaidToTextChange,\r\n  paidToData,\r\n  inputCarNotes,\r\n\r\n}) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const [sccData, setSccData] = useState([]);\r\n  const currentDate = useSelector((state) => state.currentDate);\r\n  const [supplyChainsCostsModalVisible, setSupplyChainsCostsModalVisible] = useState(false);\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n\r\n  const [clearModalVisible, setClearModalVisible] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\r\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\r\n  const [paidToIsError, setPaidToIsError] = useState(false);\r\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\r\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\r\n  const selectExpenseNameRef = useRef(null);\r\n  const selectPaidToRef = useRef(null);\r\n\r\n\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsOpen = () => {\r\n    setSupplyChainsCostsModalVisible(true);\r\n  };\r\n\r\n  const handleModalSupplyChainsCostsClose = () => {\r\n    setSupplyChainsCostsModalVisible(false);\r\n    inputExpenseAmount.current?.clear();\r\n    globalSelectedExpenseName = '';\r\n    setSelectResetKey(nanoid());\r\n    globalSelectedPaidTo = '';\r\n    setSelectedDate(currentDate);\r\n    globalSPCSelectedDate = currentDate;\r\n    dispatch(setSelectedExpenseName(''));\r\n    dispatch(setSelectedPaidTo(''));\r\n    setInputAmountIsError(false);\r\n    setExpenseNameIsError(false);\r\n    setPaidToIsError(false);\r\n  };\r\n\r\n  const handleClearModalOpen = () => {\r\n    setClearModalVisible(true);\r\n  };\r\n\r\n  const handleClearModalClose = () => {\r\n    setClearModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const amounts = supplyChainsCostsData.map((item) => {\r\n      const expenseName = Object.keys(item)[0];\r\n      const expenseData = item[expenseName];\r\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n    });\r\n\r\n    // Use reduce to add up all the amounts\r\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n    const formattedTotalAmount = totalAmount.toLocaleString();\r\n    setTotalAmount(formattedTotalAmount);\r\n    globalSupplyChainCostsAmount = formattedTotalAmount;\r\n\r\n  }, [supplyChainsCostsData]);\r\n\r\n  const handleSave = useCallback(() => {\r\n\r\n\r\n\r\n    if (inputExpenseAmount.current?.value == ''\r\n      || inputExpenseAmount.current?.value == 0\r\n      || globalSelectedExpenseName == ''\r\n      || globalSelectedPaidTo == ''\r\n    ) {\r\n\r\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\r\n        setInputAmountIsError(true);\r\n      }\r\n\r\n      if (globalSelectedExpenseName == '') {\r\n        setExpenseNameIsError(true);\r\n      }\r\n\r\n      if (globalSelectedPaidTo == '') {\r\n        setPaidToIsError(true);\r\n      }\r\n    }\r\n\r\n    else {\r\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\r\n\r\n      if (existingIndex !== -1) {\r\n        // If an entry with the same expense name exists, update it\r\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\r\n        updatedData[existingIndex][globalSelectedExpenseName] = {\r\n          expenseName: globalSelectedExpenseName,\r\n          amount: inputExpenseAmount.current?.value,\r\n          date: globalSPCSelectedDate,\r\n          paidName: globalSelectedPaidTo,\r\n        };\r\n        globalSupplyChainCostsData = updatedData;\r\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n\r\n      } else {\r\n        setInputAmountIsError(false);\r\n        setExpenseNameIsError(false);\r\n        setPaidToIsError(false);\r\n        // If no entry with the same expense name exists, add a new entry\r\n        const newData = {\r\n          [globalSelectedExpenseName]: {\r\n            expenseName: globalSelectedExpenseName,\r\n            amount: inputExpenseAmount.current?.value,\r\n            date: globalSPCSelectedDate,\r\n            paidName: globalSelectedPaidTo,\r\n          },\r\n        };\r\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\r\n        console.log(globalSupplyChainCostsData);\r\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\r\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\r\n        setSelectResetKey(nanoid());\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const handleEditPress = useCallback((item) => {\r\n    console.log(item.amount);\r\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\r\n    dispatch(setSelectedExpenseName(item.expenseName));\r\n    globalSelectedExpenseName = item.expenseName;\r\n    dispatch(setSelectedPaidTo(item.paidName));\r\n    globalSelectedPaidTo = item.paidName;\r\n    globalSPCSelectedDate = item.date;\r\n    setSelectedDate(item.date);\r\n  }, [])\r\n\r\n\r\n  const handleDeleteItem = (expenseName) => {\r\n    // Find the index of the item to be deleted\r\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\r\n\r\n    if (itemIndex !== -1) {\r\n      // Create a copy of the data array and remove the item at the found index\r\n      const newData = [...globalSupplyChainCostsData];\r\n      newData.splice(itemIndex, 1);\r\n\r\n      // Update the state with the new array\r\n      dispatch(setSupplyChainsCostsData(newData));\r\n      globalSupplyChainCostsData = newData;\r\n    }\r\n  };\r\n\r\n  const handleFirstModalClose = () => {\r\n    setSupplyChainsCostsModalVisible(false);\r\n\r\n  };\r\n  const handleFirstModalOpen = () => {\r\n    setSupplyChainsCostsModalVisible(true);\r\n\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        borderRadius={3}\r\n        flex={1}\r\n        onPress={handleModalSupplyChainsCostsOpen}\r\n        variant={'outline'}\r\n        _text={{ color: 'black', }}\r\n        leftIcon={<MaterialIcons name=\"payments\" size={20} color=\"black\" />}>\r\n        <Text>Supply Chains Costs: ¥{totalAmount}</Text>\r\n      </Button>\r\n\r\n      <Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\r\n        <Modal.Content bgColor={'white'} w={'50%'} h={'auto'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header bgColor={'#7B9CFF'}>\r\n            <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\r\n\r\n\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Box height={'full'}>\r\n              <Box paddingBottom={5}>\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\r\n\r\n                    <SupplyChainsCostsSortAndAddModal\r\n                      docName='ExpenseName'\r\n                      handleAddTextChange={handleAddExpenseNameTextChange}\r\n                      textAreaAdd={textAreaAddExpenseName}\r\n                      title='Expense Name'\r\n                      dataName={'expenseName'}\r\n                      databaseInit={projectExtensionFirestore}\r\n                      headerText=\"Rearrange/Add Expense Name\"\r\n                      data={expenseNameData}\r\n                      handleFirstModalClose={handleFirstModalClose}\r\n                      handleFirstModalOpen={handleFirstModalOpen}\r\n                    />\r\n                  </Box>\r\n\r\n                  <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\r\n                  {/* <Select\r\n                    // ref={selectExpenseNameRef}\r\n                    key={`expenseName${resetKey}`}\r\n                    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n                    flex={3}\r\n                    onValueChange={(value) => {\r\n                      globalSelectedExpenseName = value\r\n                    }}\r\n                    accessibilityLabel=\"Choose Expense Name\"\r\n                    placeholder=\"Choose Expense Name\"\r\n                    _selectedItem={{\r\n                      bg: \"teal.600\",\r\n                      endIcon: <CheckIcon size=\"5\" />\r\n                    }}>\r\n                    {expenseNameData.map((item) => (\r\n\r\n                      <Select.Item key={item} label={item} value={item} />\r\n\r\n                    ))}\r\n                  </Select> */}\r\n\r\n\r\n                </Box>\r\n\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1} >Amount</Text>\r\n                  </Box>\r\n                  <Input\r\n                    borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\r\n                    flex={3}\r\n                    ref={inputExpenseAmount}\r\n                    onChangeText={handleInputExpenseAmountChange}\r\n                    placeholder=\"Amount\"\r\n                    bgColor={'white'}\r\n                    placeholderTextColor={'muted.400'}\r\n                    InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\r\n                </Box>\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\r\n                  </Box>\r\n\r\n                  <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\r\n                </Box>\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\r\n\r\n\r\n                    <SupplyChainsCostsSortAndAddModal\r\n                      docName='PaidTo'\r\n                      handleAddTextChange={handleAddPaidToTextChange}\r\n                      textAreaAdd={textAreaAddExpenseName}\r\n                      title='Paid To'\r\n                      dataName={'paidTo'}\r\n                      databaseInit={projectExtensionFirestore}\r\n                      headerText=\"Rearrange/Add Paid To\"\r\n                      data={paidToData}\r\n                      handleFirstModalClose={handleFirstModalClose}\r\n                      handleFirstModalOpen={handleFirstModalOpen}\r\n                    />\r\n\r\n                  </Box>\r\n\r\n                  <SelectPaidTo paidToIsError={paidToIsError} />\r\n                </Box>\r\n\r\n                <Button\r\n                  onPress={handleSave}\r\n                  colorScheme={'success'}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                  margin={1}\r\n                  flex={1}\r\n                  width={'40%'}\r\n                  alignSelf={'center'}\r\n                  leftIcon={<MaterialIcons name='add' color='white' size={20} />}\r\n                >\r\n                  ADD\r\n                </Button>\r\n              </Box>\r\n\r\n              <Box>\r\n                <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\r\n                </Box>\r\n                {supplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n\r\n                  return (\r\n                    <Box key={index} flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\r\n                      justifyContent={'center'} alignItems={'center'}>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      <Box flex={1} marginLeft={1} flexDir={'row'}>\r\n\r\n                        <Pressable flex={1} margin={1} onPress={() => handleEditPress(expenseData)}>\r\n                          {({\r\n                            isHovered,\r\n                            isFocused,\r\n                            isPressed\r\n                          }) => {\r\n                            return <Box flex={1} bgColor={isHovered ? 'primary.700' : 'primary.500'} borderRadius={3}>\r\n                              <Text flex={1} textAlign={'center'} color={'white'}>Edit</Text>\r\n                            </Box>\r\n                          }}\r\n                        </Pressable>\r\n\r\n                        <Pressable flex={1} margin={1} onPress={() => handleDeleteItem(expenseData.expenseName)}>\r\n                          {({\r\n                            isHovered,\r\n                            isFocused,\r\n                            isPressed\r\n                          }) => {\r\n                            return <Box flex={1} bgColor={isHovered ? 'error.800' : 'error.500'} borderRadius={3}>\r\n                              <Text flex={1} textAlign={'center'} color={'white'}>Delete</Text>\r\n                            </Box>\r\n                          }}\r\n                        </Pressable>\r\n                      </Box>\r\n                    </Box>\r\n                  );\r\n                })}\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n\r\n          </Modal.Body>\r\n\r\n\r\n          <HStack space={5} width={'full'} justifyContent={'space-between'}>\r\n            <Box flex={4} />\r\n            <Button\r\n              onPress={handleModalSupplyChainsCostsClose}\r\n              colorScheme={'gray'}\r\n              size={'sm'}\r\n              borderRadius={5}\r\n              margin={1}\r\n              flex={1}\r\n            >\r\n              Close\r\n            </Button>\r\n          </HStack>\r\n\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n        <Modal.Content bgColor={'amber.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'amber.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'amber.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'amber.600'} bold>\r\n                Warning!\r\n              </Text>\r\n              <Text color={'amber.600'}>\r\n                Are you sure you want to clear?\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleClearModalClose}\r\n                colorScheme={'warmGray'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button\r\n                onPress={() => {\r\n\r\n                }}\r\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                Clear\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = projectControlAuth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nconst storage = getStorage(projectExtensionFirebase);\r\n\r\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\r\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n\r\n  const handleModalDeleteOpen = () => {\r\n    setModalDeleteImagesVisible(true);\r\n  };\r\n\r\n  const handleModalDeleteClose = () => {\r\n    setModalDeleteImagesVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        position=\"absolute\"\r\n        top={0}\r\n        right={0}\r\n        bg=\"error.500\"\r\n        borderRadius={3}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        display={isAddPhotoVisible ? 'none' : 'block'}\r\n      >\r\n        <Pressable onPress={handleModalDeleteOpen} flex={1}>\r\n          <Icon as={<Ionicons name=\"trash-sharp\" />} size={5} color=\"white\" cursor={'pointer'} />\r\n        </Pressable>\r\n      </Box>\r\n\r\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\r\n        <Modal.Content bgColor={'error.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear Images\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'error.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.400'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.500'} bold>\r\n                Alert!\r\n              </Text>\r\n              <Text color={'danger.500'}>\r\n                Are you sure you want to clear <Text color={'danger.500'} bold>{selectedImages.length} </Text>selected image(s)?\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalDeleteClose} colorScheme={'warmGray'} flex={1} size={'sm'} borderRadius={5}>\r\n                No\r\n              </Button>\r\n              <Button onPress={handleClearImages} flex={1} size={'sm'} colorScheme={'error'} borderRadius={5}>\r\n                Clear Images\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\r\n  const dispatch = useDispatch();\r\n  const { width } = Dimensions.get('window');\r\n\r\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  const [boolean, setBoolean] = useState(true);\r\n  const selectedImages = useSelector((state) => state.selectedImages);\r\n  // const [selectedImages, setSelectedImages] = useState([]);\r\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\r\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\r\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\r\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\r\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n  const [scrollEnabled, setscrollEnabled] = useState(true);\r\n  const [isEnterEdit, setisEnterEdit] = useState(false);\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setIsCursorLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    dropdown: {\r\n      margin: 16,\r\n      height: 50,\r\n      borderBottomColor: 'gray',\r\n      borderBottomWidth: 0.5,\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n      fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n      height: 40,\r\n      fontSize: 16,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 20,\r\n\r\n    },\r\n    txt: {\r\n      fontSize: 18,\r\n      lineHeight: 24,\r\n      padding: 5\r\n    },\r\n    sort: {\r\n    },\r\n    item_children: {\r\n      width: 90,\r\n      height: 90,\r\n      backgroundColor: 'black',\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    item_delete_icon: {\r\n      width: 14,\r\n      height: 14,\r\n      position: \"absolute\",\r\n      right: 1,\r\n      top: 1\r\n    },\r\n    item_icon: {\r\n      width: 90,\r\n      height: 90,\r\n      resizeMode: \"contain\",\r\n      position: \"absolute\"\r\n    }\r\n  });\r\n\r\n  const handleImageAddToSelection = async () => {\r\n    dispatch(setDeleteImageVisible(true));\r\n    if (selectedImages.length === 40) {\r\n      return; // Limit reached, do not add a new image\r\n    }\r\n\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Filter out images larger than 10MB\r\n      const newImages = [...selectedImages];\r\n      const promises = response.assets.map(async (asset) => {\r\n        const file = await fetch(asset.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          const exists = newImages.some((image) => image.uri === asset.uri);\r\n          if (!exists) {\r\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\r\n          }\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      });\r\n\r\n      await Promise.all(promises);\r\n\r\n      const limitedImages = newImages.slice(0, 40);\r\n      dispatch(setSelectedImages(limitedImages));\r\n      globalSelectedImages = limitedImages;\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      // limitedImages.forEach((image) => {\r\n      //   console.log(`File size: ${image.fileSize}`);\r\n      // });\r\n\r\n    } catch (error) {\r\n      console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n  const reloadData = useCallback(() => {\r\n    if (selectedImages.length > 0) {\r\n      // ... Logic to reload data using selectedImages and width\r\n\r\n      // Assuming your logic has updated selectedImages, you can directly use it here\r\n      const updatedSelectedImages = [...selectedImages];\r\n\r\n      // Dispatch the updatedSelectedImages array to the state\r\n      dispatch(setSelectedImages(updatedSelectedImages));\r\n    }\r\n\r\n  }, [widthState]);\r\n\r\n  useEffect(() => {\r\n    const handleWidthChange = ({ window }) => {\r\n      setWidthState(window.width);\r\n    };\r\n\r\n    Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n    return () => {\r\n      Dimensions.removeEventListener('change', handleWidthChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, [reloadData]);\r\n\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    setModalDeleteImagesVisible(false);\r\n    // dispatch(setSelectedImages([]));\r\n    // globalSelectedImages = [];\r\n    // dispatch(setIsAddPhotoVisible(true));\r\n    // dispatch(setAddAnotherImages(false));\r\n    // dispatch(setDeleteImageVisible(true));\r\n    handleClearImagesExtra();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const renderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleImageSelection = async () => {\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40,\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Remove duplicates from the selected images\r\n      const uniqueImages = response.assets.filter(\r\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\r\n      );\r\n\r\n      // Filter out images larger than 10MB\r\n      const filteredImages = [];\r\n      const imageOrder = [];\r\n      for (let index = 0; index < uniqueImages.length; index++) {\r\n        const image = uniqueImages[index];\r\n        const file = await fetch(image.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          filteredImages.push(image);\r\n          imageOrder.push(index);\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      }\r\n\r\n\r\n      // Sort the filtered images based on their original order\r\n      const sortedImages = filteredImages.sort((a, b) => {\r\n        const indexA = imageOrder[filteredImages.indexOf(a)];\r\n        const indexB = imageOrder[filteredImages.indexOf(b)];\r\n        return indexA - indexB;\r\n      });\r\n\r\n\r\n\r\n      // Limit the number of selected images to 40\r\n      const limitedImages = sortedImages.slice(0, 40);\r\n\r\n      globalSelectedImages = limitedImages;\r\n      if (limitedImages.length > 0) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(true));\r\n      }\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      dispatch(setSelectedImages(globalSelectedImages));\r\n\r\n    } catch (error) {\r\n      console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleDeleteImagePress = useCallback((uri) => {\r\n\r\n    globalSelectedImages = globalSelectedImages.filter((item) => {\r\n      // Replace 'uriToDelete' with the URI you want to delete\r\n      return item.uri !== uri;\r\n    });\r\n\r\n    if (globalSelectedImages.length < 40) {\r\n      dispatch(setAddAnotherImages(true));\r\n    }\r\n\r\n    if (globalSelectedImages.length == 0) {\r\n      dispatch(setAddAnotherImages(false));\r\n      dispatch(setIsAddPhotoVisible(true));\r\n    }\r\n    dispatch(setSelectedImages(globalSelectedImages));\r\n    // dispatch(setSelectedImages((prevImages) => {\r\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\r\n\r\n    //   if (updatedImages.length < 40) {\r\n    //     dispatch(setAddAnotherImages(true));\r\n    //   }\r\n    //   if (updatedImages.length == 0) {\r\n    //    dispatch(setAddAnotherImages(false));\r\n    //     dispatch(setIsAddPhotoVisible(true));\r\n    //   }\r\n    //   return updatedImages;\r\n    // }));\r\n\r\n    // console.log(globalSelectedImages.map((item) => item.uri));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\r\n\r\n\r\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\r\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\r\n\r\n            <ClearImagesModal\r\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\r\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\r\n              handleClearImages={handleClearImages}\r\n              selectedImages={selectedImages}\r\n              isAddPhotoVisible={isAddPhotoVisible} />\r\n\r\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\r\n\r\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"white\" />\r\n\r\n\r\n              <ScrollView\r\n                scrollEnabled={scrollEnabled}\r\n                flex={1}\r\n              >\r\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\r\n\r\n\r\n                  <DragSortableView\r\n\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    delayLongPress={100}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onDragStart={useCallback(() => {\r\n                      if (!isEnterEdit) {\r\n                        setisEnterEdit(true);\r\n                        setscrollEnabled(false);\r\n                      } else {\r\n                        setscrollEnabled(false);\r\n                      }\r\n                    }, [])}\r\n                    onDragEnd={useCallback(() => {\r\n                      setscrollEnabled(true);\r\n                    }, [])}\r\n                    onDataChange={useCallback((data) => {\r\n\r\n                      if (data.length !== data) {\r\n                        dispatch(setSelectedImages(data));\r\n                        globalSelectedImages = data;\r\n                      }\r\n\r\n                    }, [])}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => renderItem(item, index), [])} />\r\n\r\n                  <Center>\r\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"white\" />\r\n                  </Center>\r\n\r\n                </Box>\r\n\r\n\r\n\r\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    sortable={false}\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\r\n\r\n                </Box>\r\n              </ScrollView>\r\n\r\n\r\n\r\n\r\n            </Box>\r\n\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={0}\r\n              left={0}\r\n              borderRadius={3}\r\n              bgColor={'rgba(0, 0, 0, 0.5)'}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              display={isAddPhotoVisible ? 'none' : 'block'}>\r\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\r\n            </Box>\r\n          </Box>\r\n\r\n        </ScrollView>\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      {/* </Box> */}\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'}>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} >\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Please select image(s) smaller than 10MB!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst SuccessFailModal = ({ isSuccessOpen, isFailedOpen, handleFailModalClose, inputStockIDNumber, handleSuccessModalClose }) => {\r\n  const okSuccessButtonRef = useRef(null);\r\n  const okFailButtonRef = useRef(null);\r\n\r\n  return (\r\n    <><Modal isOpen={isSuccessOpen} onClose={handleSuccessModalClose} initialFocusRef={okSuccessButtonRef} finalFocusRef={inputStockIDNumber}>\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text color={'#102A43'} bold>\r\n            Success!\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              Success!\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              Stock ID Exist!\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button ref={okSuccessButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleSuccessModalClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n      <Modal isOpen={isFailedOpen} onClose={handleFailModalClose} initialFocusRef={okFailButtonRef} finalFocusRef={inputStockIDNumber} >\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Stock ID Do Not Exist!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button ref={okFailButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleFailModalClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal></>\r\n  );\r\n}\r\n\r\n\r\nconst StockIDAndMakeAndModel = ({\r\n  selectStockStatus,\r\n  handleSetBordersWhite,\r\n  inputFobUsd,\r\n  handleClearIfError,\r\n  monthNumbers,\r\n  steeringData,\r\n  selectPort,\r\n  selectSales,\r\n  selectBuyer,\r\n  inputRefNum,\r\n  inputChassis,\r\n  inputModelCode,\r\n  inputEngineCode,\r\n  inputEngineDis,\r\n  selectSteering,\r\n  inputMileage,\r\n  selectTransmission,\r\n  selectExteriorColor,\r\n  inputNumOfSeats,\r\n  inputDoors,\r\n  inputPurchasedPrice,\r\n  selectFuel,\r\n  inputDimensionLength,\r\n  inputDimensionWidth,\r\n  inputDimensionHeight,\r\n  inputDimensionCubicMeters,\r\n  selectDriveType,\r\n  inputWeight,\r\n  selectBodyType,\r\n  inputCarName,\r\n  inputCarDesc,\r\n  inputFobJpy,\r\n  selectRegYear,\r\n  selectRegMonth,\r\n  setRefNumFromSelects,\r\n  inputStockIDNumber,\r\n  stockIDNumError,\r\n  selectMakeForModelRef,\r\n  textAreaAddModel,\r\n  selectMakeForAddModelRef,\r\n  handleAddMakeTextChange,\r\n  textAreaAddMake,\r\n  makeError,\r\n  modelError,\r\n  selectMakeBoxRef,\r\n  selectMakeRef,\r\n  selectModelRef,\r\n  selectModelBoxRef,\r\n  setCarNameFromSelects,\r\n  setCarNameFromSelectsModel,\r\n  inputCarNotes,\r\n  inputCarMemo,\r\n  purchasedPriceError,\r\n  handleInputPurchasedPriceChange }) => {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  // const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const makeData = useSelector((state) => state.makeData);\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const portData = useSelector((state) => state.portData);\r\n  // const isLoading = useSelector((state) => state.isLoading);\r\n  const transmissionData = useSelector((state) => state.transmissionData);\r\n  const fuelData = useSelector((state) => state.fuelData);\r\n  const buyerData = useSelector((state) => state.buyerData);\r\n  const salesData = useSelector((state) => state.salesData);\r\n  const driveTypeData = useSelector((state) => state.driveTypeData);\r\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\r\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\r\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\r\n  // const usdToJpy = useSelector((state) => state.usdToJpy);\r\n\r\n\r\n  const [modelData, setModelData] = useState([]);\r\n  const [isSearchLoading, setIsSearchLoading] = useState(false);\r\n  const [isSuccessOpen, setIsSuccessOpen] = useState(false);\r\n  const [isFailedOpen, setIsFailedOpen] = useState(false);\r\n  const [fetchedData, setFetchedData] = useState([]);\r\n  const [model, setModel] = useState('');\r\n  const [key, setKey] = useState(0);\r\n  // useEffect(() => {\r\n\r\n  //   selectModelRef.current.selectIndex(modelData.indexOf(model));\r\n  //   console.log(model);\r\n  // }, [modelData]);\r\n\r\n  // const exportFunction = () => {\r\n  //   const clearModelData = () =>{\r\n  //       setModelData([]);\r\n  //   };\r\n\r\n  //   return clearModelData;\r\n  // }\r\n\r\n  const handleInputFobJpyChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    // console.log(globalJpyToUsd);\r\n    // Check if the numeric value starts with 0\r\n    if (numericValue.startsWith('0')) {\r\n      // Handle the case when the value starts with 0\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n      return;\r\n    }\r\n\r\n    // Truncate the numeric value to a maximum of 9 digits\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n    if (formattedValue !== '') {\r\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\r\n\r\n      if (!isNaN(multipliedValue)) {\r\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\r\n      } else {\r\n        // Handle the case when the multipliedValue is NaN\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: '' });\r\n      }\r\n    } else {\r\n      // Handle the case when formattedValue is empty\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n    }\r\n  };\r\n\r\n\r\n  const getImages = useCallback(async (folderName) => {\r\n    // const dispatch = useDispatch();\r\n    dispatch(setLoadingModalVisible(true));\r\n    try {\r\n\r\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\r\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n\r\n      const urls = await Promise.all(\r\n        imageRefs.items.map(async (itemRef) => {\r\n          const uri = await getDownloadURL(itemRef);\r\n          return { uri, fileName: itemRef.name };\r\n        })\r\n      );\r\n\r\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\r\n      urls.sort((a, b) => {\r\n        const fileNameA = parseInt(a.fileName);\r\n        const fileNameB = parseInt(b.fileName);\r\n        return fileNameA - fileNameB;\r\n      });\r\n\r\n      if (urls.length > 0) {\r\n        dispatch(setDeleteImageVisible(false));\r\n        dispatch(setSelectedImages(urls));\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n        globalSelectedImages = urls;\r\n\r\n      }\r\n\r\n      else {\r\n        dispatch(setDeleteImageVisible(true));\r\n        dispatch(setIsAddPhotoVisible(true));\r\n        dispatch(setAddAnotherImages(false));\r\n        dispatch(setSelectedImages([]));\r\n        dispatch(setDeleteImageVisible(true));\r\n        globalSelectedImages = [];\r\n      }\r\n\r\n\r\n      console.log(urls);\r\n\r\n    } catch (error) {\r\n      // Handle any errors that may occur during the Firebase operations\r\n      console.error('Error getting image URLs:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleSearchPress = useCallback(async () => {\r\n\r\n\r\n    if (inputStockIDNumber.current?.value !== '') {\r\n      dispatch(setLoadingModalVisible(true));\r\n      setIsSearchLoading(true);\r\n      setIsSuccessOpen(false);\r\n      setIsFailedOpen(false);\r\n\r\n      const q = query(collection(projectExtensionFirestore, 'VehicleProducts'), where('stockID', '==', inputStockIDNumber.current?.value));\r\n\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      if (querySnapshot.empty) {\r\n        console.log('No documents found');\r\n        // setIsLoading(false);\r\n        dispatch(setDeleteImageVisible(true));\r\n        setIsSearchLoading(false);\r\n        setIsFailedOpen(true);\r\n        dispatch(setIsAddPhotoVisible(true));\r\n        dispatch(setAddAnotherImages(false));\r\n        dispatch(setSelectedImages([]));\r\n        globalSelectedImages = [];\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n      }\r\n\r\n\r\n      else {\r\n\r\n        // dispatch(setSelectedImages([]));\r\n        // globalSelectedImages = [];\r\n\r\n        querySnapshot.forEach(async (item) => {\r\n          const data = item.data();\r\n          selectModelRef.current.reset();\r\n          // console.log(item.id, \" => \", item.data().make);\r\n          setIsSearchLoading(false);\r\n          // setIsSuccessOpen(true);\r\n\r\n          // fetchModelData();\r\n          // setModel(data.model);\r\n\r\n          // console.log(portData);    \r\n          async function fetchDataAndSelectIndex() {\r\n            try {\r\n              const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\r\n              const docSnapshot = await getDoc(collectionRef);\r\n              if (docSnapshot.exists()) {\r\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n              }\r\n            } catch (error) {\r\n              console.error('Error fetching models data from Firebase: ', error);\r\n            }\r\n          }\r\n\r\n          try {\r\n            const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\r\n            const docSnapshot = await getDoc(collectionRef);\r\n            if (docSnapshot.exists()) {\r\n              const modelsDataFromFirebase = docSnapshot.data().model;\r\n              setModelData(modelsDataFromFirebase);\r\n              globalModelDataVariable = modelsDataFromFirebase;\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching models data from Firebase: ', error);\r\n          }\r\n\r\n          handleSetBordersWhite();\r\n          fetchDataAndSelectIndex();\r\n          selectStockStatus.current.selectIndex(stockStatusData.indexOf(data.stockStatus));\r\n          selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\r\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\r\n          selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(parseInt(data.regYear, 10)));\r\n          selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\r\n          selectPort.current.selectIndex(portData.findIndex(item => item.id === data.portID));\r\n          selectSales.current.selectIndex(salesData.findIndex(item => item.id === data.salesID));\r\n          selectBuyer.current.selectIndex(buyerData.findIndex(item => item.id === data.buyerID));\r\n          inputRefNum.current.setNativeProps({ text: data.referenceNumber || '' });\r\n          inputChassis.current.setNativeProps({ text: data.chassisNumber || '' });\r\n          inputModelCode.current.setNativeProps({ text: data.modelCode || '' });\r\n          inputEngineCode.current.setNativeProps({ text: data.engineCode || '' });\r\n          inputEngineDis.current.setNativeProps({ text: data.engineDisplacement ? data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\r\n          inputMileage.current.setNativeProps({ text: data.mileage ? data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\r\n          selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\r\n          inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats || '' });\r\n          inputDoors.current.setNativeProps({ text: data.doors || '' });\r\n          inputPurchasedPrice.current.setNativeProps({ text: data.purchasedPrice ? data.purchasedPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\").toString() : '' });\r\n          selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\r\n          inputDimensionLength.current.setNativeProps({ text: data.dimensionLength ? data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth ? data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight ? data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters || '' });\r\n          selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\r\n          inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\r\n          selectBodyType.current.selectIndex(bodyTypeData.findIndex(item => item.toLowerCase() === data.bodyType.toLowerCase()));\r\n          inputCarName.current.setNativeProps({ text: data.carName || '' });\r\n          inputCarDesc.current.setNativeProps({ text: data.carDescription || '' });\r\n          inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          globalFobPrice = data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '';\r\n          handleInputFobJpyChange(data.fobPrice ? data.fobPrice : \"0\");\r\n          // selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\r\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\r\n          // selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\r\n          // selectPort.current.selectIndex(portData.findIndex(item => item.name === data.port));\r\n          // selectSales.current.selectIndex(salesData.findIndex(item => item.name === data.sales));\r\n          // selectBuyer.current.selectIndex(buyerData.findIndex(item => item.name === data.buyer));\r\n          // inputRefNum.current.setNativeProps({ text: data.referenceNumber });\r\n          // inputChassis.current.setNativeProps({ text: data.chassisNumber });\r\n          // inputModelCode.current.setNativeProps({ text: data.modelCode });\r\n          // inputEngineCode.current.setNativeProps({ text: data.engineCode });\r\n          // inputEngineDis.current.setNativeProps({ text: data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\r\n          // inputMileage.current.setNativeProps({ text: data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\r\n          // selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\r\n          // inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats });\r\n          // inputDoors.current.setNativeProps({ text: data.doors });\r\n          // selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\r\n          // inputDimensionLength.current.setNativeProps({ text: data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters });\r\n          // selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\r\n          // inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});          \r\n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\r\n          // inputCarName.current.setNativeProps({ text: data.carName });\r\n          // inputCarDesc.current.setNativeProps({ text: data.carDescription });\r\n          // inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});\r\n          // handleInputFobJpyChange(data.fobPrice);\r\n\r\n          if (data.notes == undefined) {\r\n            inputCarNotes.current.setNativeProps({ text: '' });\r\n          }\r\n          else {\r\n            inputCarNotes.current.setNativeProps({ text: data.notes });\r\n          }\r\n\r\n          if (data.memo == undefined) {\r\n            inputCarMemo.current.setNativeProps({ text: '' });\r\n\r\n          }\r\n          else {\r\n            inputCarMemo.current.setNativeProps({ text: data.memo });\r\n\r\n          }\r\n\r\n          featuresState.SafetySystemAnBrSy = data.SafetySystemAnBrSy;\r\n          featuresState.SafetySystemDrAi = data.SafetySystemDrAi;\r\n          featuresState.SafetySystemPaAi = data.SafetySystemPaAi;\r\n          featuresState.SafetySystemSiAi = data.SafetySystemSiAi;\r\n          featuresState.ComfortAiCoFr = data.ComfortAiCoFr;\r\n          featuresState.ComfortAiCoRe = data.ComfortAiCoRe;\r\n          featuresState.ComfortAMFMRa = data.ComfortAMFMRa;\r\n          featuresState.ComfortAMFMSt = data.ComfortAMFMSt;\r\n          featuresState.ComfortCDPl = data.ComfortCDPl;\r\n          featuresState.ComfortCDCh = data.ComfortCDCh;\r\n          featuresState.ComfortCrSpCo = data.ComfortCrSpCo;\r\n          featuresState.ComfortDiSp = data.ComfortDiSp;\r\n          featuresState.ComfortDVDPl = data.ComfortDVDPl;\r\n          featuresState.ComfortHDD = data.ComfortHDD;\r\n          featuresState.ComfortNaSyGPS = data.ComfortNaSyGPS;\r\n          featuresState.ComfortPoSt = data.ComfortPoSt;\r\n          featuresState.ComfortPrAuSy = data.ComfortPrAuSy;\r\n          featuresState.ComfortReKeSy = data.ComfortReKeSy;\r\n          featuresState.ComfortTiStWh = data.ComfortTiStWh;\r\n          featuresState.InteriorLeSe = data.InteriorLeSe;\r\n          featuresState.InteriorPoDoLo = data.InteriorPoDoLo;\r\n          featuresState.InteriorPoMi = data.InteriorPoMi;\r\n          featuresState.InteriorPoSe = data.InteriorPoSe;\r\n          featuresState.InteriorPoWi = data.InteriorPoWi;\r\n          featuresState.InteriorReWiDe = data.InteriorReWiDe;\r\n          featuresState.InteriorReWiWi = data.InteriorReWiWi;\r\n          featuresState.InteriorThRoSe = data.InteriorThRoSe;\r\n          featuresState.InteriorTiGl = data.InteriorTiGl;\r\n          featuresState.ExteriorAlWh = data.ExteriorAlWh;\r\n          featuresState.ExteriorPoSlDo = data.ExteriorPoSlDo;\r\n          featuresState.ExteriorSuRo = data.ExteriorSuRo;\r\n          featuresState.SellingPointsCuWh = data.SellingPointsCuWh;\r\n          featuresState.SellingPointsFuLo = data.SellingPointsFuLo;\r\n          featuresState.SellingPointsMaHiAv = data.SellingPointsMaHiAv;\r\n          featuresState.SellingPointsBrNeTi = data.SellingPointsBrNeTi;\r\n          featuresState.SellingPointsNoAcHi = data.SellingPointsNoAcHi;\r\n          featuresState.SellingPointsNoSmPrOw = data.SellingPointsNoSmPrOw;\r\n          featuresState.SellingPointsOnOwHi = data.SellingPointsOnOwHi;\r\n          featuresState.SellingPointsPeRaTi = data.SellingPointsPeRaTi;\r\n          featuresState.SellingPointsReBo = data.SellingPointsReBo;\r\n          featuresState.SellingPointsTuEn = data.SellingPointsTuEn;\r\n          featuresState.SellingPointsUpAuSy = data.SellingPointsUpAuSy;\r\n\r\n          resetKey++;\r\n\r\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\r\n          makeVariable.text = data.make ? data.make : \"\";\r\n          modelVariable.text = data.model ? data.model : \"\";\r\n          regYearVariable.text = data.regYear ? data.regYear : \"\";\r\n          regMonthVariable.text = data.regMonth ? data.regMonth : \"\";\r\n          portVariable.text = data.port ? data.port : \"\";\r\n          salesVariable.text = data.sales ? data.sales : \"\";\r\n          buyerVariable.text = data.buyer ? data.buyer : \"\";\r\n          portVariable.id = data.portID ? data.portID : \"\";\r\n          salesVariable.id = data.salesID ? data.salesID : \"\";\r\n          buyerVariable.id = data.buyerID ? data.buyerID : \"\";\r\n          referenceNumberVariable.text = data.referenceNumber ? data.referenceNumber : \"\";\r\n          globalVehicleFolderName = data.stockID ? data.stockID : \"\";\r\n          steeringVariable.text = data.steering ? data.steering : \"\";\r\n          transmissionVariable.text = data.transmission ? data.transmission : \"\";\r\n          exteriorColorVariable.text = data.exteriorColor ? data.exteriorColor : \"\";\r\n          fuelVariable.text = data.fuel ? data.fuel : \"\";\r\n          driveTypeVariable.text = data.driveType ? data.driveType : \"\";\r\n          bodyTypeVariable.text = data.bodyType ? data.bodyType : \"\";\r\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\r\n          globalSupplyChainCostsData = data.supplyChainsCostsData ? data.supplyChainsCostsData : [];\r\n          dispatch(setSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\r\n\r\n          await getImages(globalVehicleFolderName);\r\n\r\n          dispatch(setLoadingModalVisible(false));\r\n\r\n          // const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), makeVariable.text), (snapshot) => {\r\n          //   setModelData(snapshot.data()?.model || []);\r\n          //   selectModelRef.current.selectIndex(modelData.indexOf(data.model));\r\n\r\n          //   return () => unsubscribe();\r\n          // });\r\n\r\n\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);;\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (isFailedOpen == false) {\r\n  //     handleClearIfError();\r\n  //   }\r\n\r\n\r\n  // }, [isFailedOpen])\r\n  const handleFailModalClose = useCallback(() => {\r\n    setIsFailedOpen(false);\r\n\r\n    handleClearIfError();\r\n\r\n\r\n  }, []);\r\n\r\n  const handleSuccessModalClose = useCallback(() => {\r\n    setIsSuccessOpen(false);\r\n\r\n    selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n    // console.log(globalModelDataVariable.indexOf(makeVariable.text));\r\n\r\n\r\n  }, []);\r\n\r\n  const handleModelChange = useCallback(() => {\r\n    // console.log('Selected make:', value);\r\n    setCarNameFromSelectsModel();\r\n\r\n  }, []);\r\n\r\n\r\n  const handleMakeChange = useCallback(async (item) => {\r\n    setCarNameFromSelects();\r\n    // dispatch(setSelectedMake(item));\r\n    // fetchModelData();\r\n    //  dispatch(setIsLoading(true));\r\n    try {\r\n      if (makeVariable.text !== '') {\r\n\r\n        try {\r\n\r\n          const collectionRef = doc(projectExtensionFirestore, 'Model', item);\r\n\r\n          const docSnapshot = await getDoc(collectionRef);\r\n          if (docSnapshot.exists()) {\r\n            const modelsDataFromFirebase = docSnapshot.data().model;\r\n            setModelData(modelsDataFromFirebase);\r\n            globalModelDataVariable = modelsDataFromFirebase;\r\n            // console.log(globalModelVariable);\r\n\r\n            // modelKey++;\r\n            // console.log(modelKey);\r\n            // dispatch(setIsLoading(false));\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching models data from Firebase: ', error);\r\n        }\r\n\r\n      }\r\n\r\n      else {\r\n        //  dispatch(setModelData([]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching models data from Firebase: ', error);\r\n    }\r\n\r\n  }, [projectExtensionFirestore, modelData, makeData]);\r\n\r\n  const handleInputStockIDNumberChange = useCallback((text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 10);\r\n    inputStockIDNumber.current.value = truncatedValue;\r\n    globalVehicleFolderName = truncatedValue;\r\n    setRefNumFromSelects();\r\n    // // Limit the numeric value to a maximum of 4 characters\r\n    // const truncatedValue = numericValue.slice(5);\r\n\r\n    // // Format the truncated numeric value with comma separator\r\n    // const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    // // Remove comma separator from the formatted value\r\n    // const valueWithoutCommas = formattedValue.replace(/,/g, '');\r\n\r\n    // inputStockIDNumber.current.value = valueWithoutCommas;\r\n  }, []);\r\n\r\n  const handleModelOnFocus = useCallback(() => {\r\n    // console.log(globalModelVariable.length);\r\n    const condition = makeVariable.text === '' && globalModelDataVariable.length > 0;\r\n\r\n    if (condition) {\r\n      globalModelDataVariable = [];\r\n      setModelData([]);\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n        <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={handleSearchPress} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\r\n          InputRightElement={\r\n            <Button isLoading={isSearchLoading} isLoadingText=\"Search\" size={'xs'} colorScheme={'primary'}\r\n              leftIcon={<Icon as={<MaterialIcons name=\"search\" />} size={5} color=\"white\" />}\r\n              onPress={() => {\r\n                handleSearchPress()\r\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n              }}>Search</Button>\r\n          }\r\n        />\r\n        </Box>\r\n        <SuccessFailModal inputStockIDNumber={inputStockIDNumber} isSuccessOpen={isSuccessOpen} setIsSuccessOpen={setIsSuccessOpen} isFailedOpen={isFailedOpen} setIsFailedOpen={setIsFailedOpen} handleSuccessModalClose={handleSuccessModalClose} handleFailModalClose={handleFailModalClose} />\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Purchase Price</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n        <Box bgColor={'white'} flex={1} borderColor={purchasedPriceError} borderWidth={1}>\r\n          <Input keyboardType=\"numeric\" flex={1} ref={inputPurchasedPrice} onChangeText={handleInputPurchasedPriceChange} bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"Purchase Price\" placeholderTextColor={'muted.400'} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Make</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n          <SortAndAddModal docName='Make' handleAddTextChange={handleAddMakeTextChange} textAreaAdd={textAreaAddMake} title='Make' dataName={'make'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Make\" data={makeData} />\r\n        </Box>\r\n\r\n        <Box ref={selectMakeBoxRef} bgColor={'white'} flex={1} borderColor={makeError} borderWidth={1}>\r\n\r\n\r\n          <SelectDropdown\r\n            ref={selectMakeRef}\r\n            buttonStyle={{\r\n              flex: 1,\r\n              width: '100%',\r\n              backgroundColor: 'white',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              padding: 4,\r\n            }}\r\n            buttonTextStyle={{\r\n              textAlign: 'left',\r\n              color: '#424242',\r\n              fontSize: 12,\r\n            }}\r\n            dropdownStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              shadowColor: '#000000',\r\n              shadowOffset: { width: 0, height: 2 },\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 4,\r\n              elevation: 2,\r\n            }}\r\n            rowStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 15,\r\n            }}\r\n            rowTextStyle={{\r\n              color: '#424242',\r\n              fontSize: 16,\r\n            }}\r\n            data={makeData}\r\n            onSelect={useCallback((selectedItem) => {\r\n              makeVariable.text = selectedItem;\r\n              selectModelRef.current.reset();\r\n              modelVariable.text = '';\r\n              handleMakeChange(selectedItem);\r\n\r\n\r\n            }, [])}\r\n            defaultButtonText=\"-- Choose Make --\"\r\n            buttonTextAfterSelection={(selectedItem) => {\r\n              return selectedItem;\r\n            }} SelectDropdown\r\n            renderDropdownIcon={(isOpened) => {\r\n              return (\r\n                <Ionicons\r\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                  color={'#424242'}\r\n                  size={18}\r\n                />\r\n              );\r\n            }}\r\n            rowTextForSelection={(item) => {\r\n              return item;\r\n            }}\r\n            searchPlaceHolder=\"Search for Make\"\r\n            searchInputStyle={{ marginTop: 2, }}\r\n            disableAutoScroll\r\n            search />\r\n\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} >\r\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Model</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n          <ModelSortAndAddModal\r\n            selectMakeForAddModelRef={selectMakeForAddModelRef}\r\n            selectMakeForModelRef={selectMakeForModelRef}\r\n            textAreaAddModel={textAreaAddModel}\r\n            makeData={makeData} />\r\n        </Box>\r\n        <Box ref={selectModelBoxRef} bgColor={'white'} flex={1} borderColor={modelError} borderWidth={1}>\r\n\r\n\r\n          <SelectDropdown\r\n\r\n            onFocus={handleModelOnFocus}\r\n            ref={selectModelRef}\r\n            // disabled={makeVariable.text === '' ? true : false}\r\n            // key={`make${key}`}\r\n            buttonStyle={{\r\n              flex: 1,\r\n              width: '100%',\r\n              backgroundColor: 'white',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              padding: 4,\r\n            }}\r\n            buttonTextStyle={{\r\n              textAlign: 'left',\r\n              color: '#424242',\r\n              fontSize: 12,\r\n            }}\r\n            dropdownStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              shadowColor: '#000000',\r\n              shadowOffset: { width: 0, height: 2 },\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 4,\r\n              elevation: 2,\r\n            }}\r\n            rowStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 15,\r\n            }}\r\n            rowTextStyle={{\r\n              color: '#424242',\r\n              fontSize: 16,\r\n            }}\r\n            // data={modelData.map((item) => item)}\r\n            data={modelData}\r\n            onSelect={useCallback((selectedItem) => {\r\n              modelVariable.text = selectedItem;\r\n              // console.log(modelVariable.text);\r\n\r\n\r\n              handleModelChange()\r\n            }, [])}\r\n            defaultButtonText=\"-- Choose Model --\"\r\n            buttonTextAfterSelection={(selectedItem) => {\r\n              return selectedItem;\r\n            }}\r\n            renderDropdownIcon={(isOpened) => {\r\n              return (\r\n                <Ionicons\r\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                  color={'#424242'}\r\n                  size={18}\r\n                />\r\n              );\r\n            }}\r\n            rowTextForSelection={(item) => {\r\n              return item;\r\n            }}\r\n            searchPlaceHolder=\"Search for Model\"\r\n            searchInputStyle={{ marginTop: 2, width: '100%', }}\r\n            disableAutoScroll\r\n            search\r\n\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n    handleFirstModalClose();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    handleFirstModalOpen();\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n\r\n  }, [modalSortOpen, modalIsLoading]);\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose} useRNModal>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        useRNModal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nconst SortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nconst PSBSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAddCode, textAreaAdd, handleAddTextChange, handleAddCodeTextChange, docName }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n  }, []);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n  }, []);\r\n\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    textAreaAdd.current.clear();\r\n    textAreaAddCode.current.clear();\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n\r\n  }, [])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, []);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataCode = textAreaAddCode.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n    const dataCodeArray = dataCode.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n\r\n    if (data !== '' && dataCode !== '') {\r\n      setModalSaveLoading(true);\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n\r\n        const dataToUpdate = dataArray.map((data, index) => ({\r\n          id: dataCodeArray[index],\r\n          name: data,\r\n        }));\r\n\r\n        const updateObject = {};\r\n        updateObject[dataName] = arrayUnion(...dataToUpdate);\r\n\r\n        await setDoc(modalDocRef, updateObject, { merge: true });\r\n        // const updateData = {\r\n        //   [dataName]: arrayUnion({ id: arrayUnion(...dataCodeArray), name: arrayUnion(...dataArray) })\r\n        // };\r\n\r\n        // await setDoc(modalDocRef, updateData, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity onPress={handleSortModalOpen} focusable={false}>\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item.id}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item.name}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAddCode}\r\n        size={'lg'}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          {/* <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} w={'full'}> */}\r\n          <HStack space={5} flex={1} margin={2}>\r\n            <VStack space={1} flex={1}>\r\n              <Text textAlign={'center'}>Code</Text>\r\n              <TextArea\r\n                flex={2}\r\n                textAlign={'center'}\r\n                w={'full'}\r\n                ref={textAreaAddCode}\r\n                multiline\r\n                onChangeText={handleAddCodeTextChange}\r\n                totalLines={8}\r\n                placeholder=\"Enter your data, separated by new lines\"\r\n              />\r\n            </VStack>\r\n            <VStack space={1} flex={1}>\r\n              <Text textAlign={'center'}>Name</Text>\r\n              <TextArea\r\n                flex={2}\r\n                textAlign={'center'}\r\n                w={'full'}\r\n                ref={textAreaAdd}\r\n                multiline\r\n                onChangeText={handleAddTextChange}\r\n                totalLines={8}\r\n                placeholder=\"Enter your data, separated by new lines\"\r\n              />\r\n            </VStack>\r\n          </HStack>\r\n          {/* </Modal.Body> */}\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleModalAddClose}\r\n                colorScheme={'muted'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}>\r\n                Close\r\n              </Button>\r\n              <Button\r\n                onPress={handleAddSubmit}\r\n                isLoading={modalSaveLoading ? true : false}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}>\r\n                Add\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nconst ModelSortAndAddModal = ({ selectMakeForAddModelRef, selectMakeForModelRef, textAreaAddModel, makeData }) => {\r\n\r\n  const [modalAddModel, setModalAddModel] = useState(false);\r\n  const [modalSaveModel, setModalSaveModel] = useState(false);\r\n  const [modalModel, setModalModel] = useState(false);\r\n  const [modalAddModelSuccess, setModalAddModelSuccess] = useState(false);\r\n  const [keySelectMakeForModel, setKeySelectMakeForModel] = useState(1);\r\n  const [keySelectMakeForAddModel, setKeySelectMakeForAddModel] = useState(1);\r\n  const [modelSortData, setModelSortData] = useState([]);\r\n  const [isAddModelDisabled, setIsAddModelDisabled] = useState(false);\r\n  const [modalSaveModelLoading, setModalSaveModelLoading] = useState(false);\r\n  const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n\r\n  const fetchModelSortData = async () => {\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n\r\n      const modelSortDocRef = doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value);\r\n      const modelSortDocSnap = await getDoc(modelSortDocRef);\r\n      if (modelSortDocSnap.exists()) {\r\n        setModelSortData(modelSortDocSnap.data()?.model || []);\r\n\r\n      }\r\n      else {\r\n        setModelSortData([]);\r\n      }\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n\r\n  //     const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), (snapshot) => {\r\n  //       setModelSortData(snapshot.data()?.model || []);\r\n  //       return () => unsubscribe();\r\n  //     });\r\n\r\n  //   }\r\n\r\n  // }, []);\r\n\r\n  const handleDeleteModelPress = useCallback(\r\n    (item) => {\r\n      setModelSortData((prevModelData) => {\r\n        const updatedModelData = prevModelData.filter((model) => model !== item);\r\n        return updatedModelData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const handleSaveModel = useCallback(async () => {\r\n    setModalSaveModelLoading(true);\r\n    console.log(selectMakeForModelRef.current?.value);\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n      try {\r\n        await updateDoc(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), { model: modelSortData });\r\n        setModalSaveModelLoading(false);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const logData = {\r\n          message: `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`.toLowerCase(),\r\n            'Model Update'.toLowerCase(),\r\n            'Model'.toLowerCase(),\r\n            'Update'.toLowerCase(),\r\n            selectMakeForModelRef.current.value.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n\r\n        addLogToCollection(logData);\r\n\r\n        handleModalSaveModelClose();\r\n      } catch (error) {\r\n        console.error(error);\r\n        setModalSaveModelLoading(false);\r\n        handleModalSaveModelClose();\r\n      }\r\n\r\n    }\r\n    else {\r\n      setModalSaveModelLoading(false);\r\n    }\r\n\r\n\r\n\r\n\r\n  }, [projectExtensionFirestore, modelSortData]);\r\n\r\n  const handleAddModelTextChange = () => {\r\n    const newText = textAreaAddModel.current?.value?.toUpperCase();\r\n    textAreaAddModel.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n  const handleMakeForModelChange = useCallback(() => {\r\n    makeForAddModelVariable.text = selectMakeForAddModelRef.current?.value;\r\n    fetchModelSortData();\r\n\r\n    // console.log(selectMakeForModelRef.current?.value);\r\n  }, []);\r\n\r\n  const handleMakeForAddModelChange = useCallback(() => {\r\n    setIsAddModelDisabled(false);\r\n\r\n  }, []);\r\n\r\n\r\n  const handleModalModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalModel(true);\r\n    fetchModelSortData();\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  const handleModalModelClose = useCallback(() => {\r\n    setModalIsLoading(false);\r\n\r\n    setModalModel(false);\r\n    setIsLoading(false);\r\n    setKeySelectMakeForModel(prevKey => prevKey + 1);\r\n    setModelSortData([]);\r\n  }, []);\r\n\r\n  const handleModalAddModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalAddModel(true);\r\n    // handleModalModelClose();\r\n    setModalModel(false);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleModalAddModelClose = useCallback(() => {\r\n    handleModalModelOpen();\r\n    setModalAddModel(false);\r\n    textAreaAddModel.current.clear();\r\n    setIsAddModelDisabled(true);\r\n    setIsLoading(false);\r\n    setKeySelectMakeForAddModel(prevKey => prevKey + 1);\r\n\r\n  }, []);\r\n\r\n  const handleModalAddModelSuccessOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalAddModel(false);\r\n    setModalModel(false);\r\n    textAreaAddModel.current.clear();\r\n    setModalAddModelSuccess(true);\r\n\r\n\r\n  }, []);\r\n\r\n  const handleModalAddModelSuccessClose = useCallback(() => {\r\n    setModalAddModelSuccess(false);\r\n    handleModalModelOpen();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleModalSaveModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n      setModalSaveModel(true);\r\n      // handleModalModelClose();\r\n      setModalModel(false);\r\n      setIsLoading(false);\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleModalSaveModelClose = useCallback(() => {\r\n    setModalSaveModel(false);\r\n    handleModalModelOpen();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleAddModelSubmit = async () => {\r\n    const data = textAreaAddModel.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n      setModalSaveLoading(true);\r\n      try {\r\n\r\n        const makeCollectionRef = collection(projectExtensionFirestore, 'Model');\r\n        const makeDocRef = doc(makeCollectionRef, selectMakeForAddModelRef.current?.value);\r\n        await setDoc(makeDocRef, { model: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`.toLowerCase(),\r\n            'Model Added'.toLowerCase(),\r\n            'Model'.toLowerCase(),\r\n            'Added'.toLowerCase(),\r\n            selectMakeForAddModelRef.current.value.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        setModalSaveLoading(false);\r\n        addLogToCollection(logData);\r\n\r\n        handleModalAddModelSuccessOpen();\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleModalModelOpen}>\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) :\r\n          (<Spinner color=\"white\" />)\r\n        }\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalModel}\r\n        onClose={handleModalModelClose} >\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Rearrange/Add Model</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n            <Box w={'full'} flexDir={'column'} height={'f'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddModelOpen}><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n              <Box>\r\n                <Select key={keySelectMakeForModel} ref={selectMakeForModelRef} onValueChange={handleMakeForModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\r\n                  bg: \"teal.600\",\r\n                  endIcon: <CheckIcon size=\"5\" />\r\n                }}>\r\n                  {makeData.map((item) => (\r\n\r\n                    <Select.Item key={item} label={item} value={item} />\r\n\r\n                  ))}\r\n                </Select>\r\n              </Box>\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modelSortData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16, 42, 67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteModelPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModelSortData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveModelOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n\r\n\r\n\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddModel}\r\n        onClose={handleModalAddModelClose}\r\n        initialFocusRef={selectMakeForAddModelRef}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add Model</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n            <Select key={keySelectMakeForAddModel} ref={selectMakeForAddModelRef} onValueChange={handleMakeForAddModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\r\n              bg: \"teal.600\",\r\n              endIcon: <CheckIcon size=\"5\" />\r\n            }}>\r\n              {makeData.map((item) => (\r\n\r\n                <Select.Item key={item} label={item} value={item} />\r\n\r\n              ))}\r\n            </Select>\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAddModel}\r\n              multiline\r\n              onChangeText={handleAddModelTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\"\r\n              isDisabled={isAddModelDisabled ? true : false}\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddModelSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSaveModel}\r\n        onClose={handleModalSaveModelClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Model Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSaveModel} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveModelLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalAddModelSuccess} onClose={handleModalAddModelSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Model Added!\r\n                {/* Vehicle Added! */}\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Model was successfully added! You can view it in the model list.\r\n                {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddModelSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nconst referenceNumberVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nconst nameVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nconst makeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst makeForAddModelVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\n\r\nconst modelVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst regYearVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst regMonthVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst steeringVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst transmissionVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst exteriorColorVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst fuelVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst portVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst salesVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst buyerVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst driveTypeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst bodyTypeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst stockStatusVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nlet resetKey = 0;\r\nconst featuresState = {\r\n  SafetySystemAnBrSy: false,\r\n  SafetySystemDrAi: false,\r\n  SafetySystemPaAi: false,\r\n  SafetySystemSiAi: false,\r\n  ComfortAiCoFr: false,\r\n  ComfortAiCoRe: false,\r\n  ComfortAMFMRa: false,\r\n  ComfortAMFMSt: false,\r\n  ComfortCDPl: false,\r\n  ComfortCDCh: false,\r\n  ComfortCrSpCo: false,\r\n  ComfortDiSp: false,\r\n  ComfortDVDPl: false,\r\n  ComfortHDD: false,\r\n  ComfortNaSyGPS: false,\r\n  ComfortPoSt: false,\r\n  ComfortPrAuSy: false,\r\n  ComfortReKeSy: false,\r\n  ComfortTiStWh: false,\r\n  InteriorLeSe: false,\r\n  InteriorPoDoLo: false,\r\n  InteriorPoMi: false,\r\n  InteriorPoSe: false,\r\n  InteriorPoWi: false,\r\n  InteriorReWiDe: false,\r\n  InteriorReWiWi: false,\r\n  InteriorThRoSe: false,\r\n  InteriorTiGl: false,\r\n  ExteriorAlWh: false,\r\n  ExteriorPoSlDo: false,\r\n  ExteriorSuRo: false,\r\n  SellingPointsCuWh: false,\r\n  SellingPointsFuLo: false,\r\n  SellingPointsMaHiAv: false,\r\n  SellingPointsBrNeTi: false,\r\n  SellingPointsNoAcHi: false,\r\n  SellingPointsNoSmPrOw: false,\r\n  SellingPointsOnOwHi: false,\r\n  SellingPointsPeRaTi: false,\r\n  SellingPointsReBo: false,\r\n  SellingPointsTuEn: false,\r\n  SellingPointsUpAuSy: false,\r\n};\r\n\r\nconst CheckBoxButton = ({ label, onChange, variable }) => {\r\n  const [checked, setChecked] = useState(variable);\r\n\r\n  // useEffect(() => {console.log(checked)}, [checked])\r\n\r\n  const handlePress = () => {\r\n\r\n    setChecked(!checked);\r\n    onChange(!checked);\r\n\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={{ flex: 1, justifyContent: 'center', }}\r\n      onPress={handlePress}\r\n    >\r\n      <Box\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        borderRadius={3}\r\n        bgColor={checked ? '#7b9cff' : 'white'}\r\n        margin={1}\r\n        overflow={'hidden'}\r\n        // h={50}\r\n        // w={180}\r\n        padding={2}\r\n        borderWidth={1}\r\n        borderColor={checked ? 'white' : 'muted.400'}\r\n      >\r\n        <Text\r\n          // fontSize={[9, 11, 12, 11, 12, 13]}\r\n          // maxW={[85, 100, 180, 100, 130, 180]}\r\n          textAlign={'center'}\r\n          noOfLines={3}\r\n          color={checked ? 'white' : 'muted.400'}\r\n        >\r\n          {label}\r\n        </Text>\r\n      </Box>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default function AddVehicle() {\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const loginName = useSelector((state) => state.loginName);\r\n\r\n  const [renderLoading, setRenderLoading] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n\r\n  const [name, setName] = useState(loginName);\r\n  // const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n  const dragSortableViewRef = useRef();\r\n\r\n  nameVariable.text = loginName;\r\n\r\n  const inputCarNotes = useRef(null);\r\n  const inputCarMemo = useRef(null);\r\n  const inputCarName = useRef(null);\r\n  const inputCarDesc = useRef(null);\r\n  const inputFobJpy = useRef(null);\r\n  const inputFobUsd = useRef(null);\r\n  const inputRegYear = useRef(null);\r\n  const selectRegYear = useRef(null);\r\n  const selectRegMonth = useRef(null);\r\n  const inputRegMonth = useRef(null);\r\n  const inputRefNum = useRef(null);\r\n  const inputStockIDNumber = useRef(null);\r\n  const inputChassis = useRef(null);\r\n  const inputModelCode = useRef(null);\r\n  const inputEngineCode = useRef(null);\r\n  const inputEngineDis = useRef(null);\r\n  const selectSteering = useRef(null);\r\n  const inputMileage = useRef(null);\r\n  const selectTransmission = useRef(null);\r\n  const selectExteriorColor = useRef(null);\r\n  const inputNumOfSeats = useRef(null);\r\n  const inputDoors = useRef(null);\r\n  const inputPurchasedPrice = useRef(null);\r\n  const inputFuel = useRef(null);\r\n  const selectFuel = useRef(null);\r\n  const selectPort = useRef(null);\r\n  const selectSales = useRef(null);\r\n  const selectBuyer = useRef(null);\r\n  const selectDriveType = useRef(null);\r\n  const inputDimensionLength = useRef(null);\r\n  const inputDimensionWidth = useRef(null);\r\n  const inputDimensionHeight = useRef(null);\r\n  const inputDimensionCubicMeters = useRef(null);\r\n  const inputDriveType = useRef(null);\r\n  const inputWeight = useRef(null);\r\n  const selectBodyType = useRef(null);\r\n  const selectStockStatus = useRef(null);\r\n  const textAreaAddMake = useRef(null);\r\n  const textAreaAddModel = useRef(null);\r\n  const textAreaAddTransmission = useRef(null);\r\n  const textAreaAddExteriorColor = useRef(null);\r\n  const textAreaAddFuel = useRef(null);\r\n  const textAreaAddPort = useRef(null);\r\n  const textAreaAddPortCode = useRef(null);\r\n  const textAreaAddSales = useRef(null);\r\n  const textAreaAddBuyer = useRef(null);\r\n  const textAreaAddSalesCode = useRef(null);\r\n  const textAreaAddBuyerCode = useRef(null);\r\n  const textAreaAddDriveType = useRef(null);\r\n  const textAreaAddBodyType = useRef(null);\r\n  const textAreaAddExpenseName = useRef(null);\r\n  const textAreaAddPaidTo = useRef(null);\r\n  const inputExpenseAmount = useRef(null);\r\n\r\n  // const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  // const selectedImages = useSelector((state) => state.selectedImages);\r\n  const portData = useSelector((state) => state.portData);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const transmissionData = useSelector((state) => state.transmissionData);\r\n  const fuelData = useSelector((state) => state.fuelData);\r\n  const buyerData = useSelector((state) => state.buyerData);\r\n  const salesData = useSelector((state) => state.salesData);\r\n  const driveTypeData = useSelector((state) => state.driveTypeData);\r\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\r\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\r\n  const currentYear = useSelector((state) => state.currentYear);\r\n\r\n  const minYear = 1970;\r\n  const years = Array.from({ length: currentYear - minYear + 1 }, (_, index) => currentYear - index);\r\n  globalRegYearDataVariable = years;\r\n\r\n\r\n\r\n\r\n  const steeringData = ['Left', 'Right'];\r\n\r\n\r\n  const selectMakeRef = useRef(null);\r\n  const selectModelRef = useRef(null);\r\n\r\n  const selectMakeForModelRef = useRef(null);\r\n  const selectMakeForAddModelRef = useRef(null);\r\n\r\n\r\n  const [isNoFeaturesSelected, setIsNoFeaturesSelected] = useState('white');\r\n\r\n\r\n  const [carNameError, setCarNameError] = useState('muted.500');\r\n  const [makeError, setMakeError] = useState('white');\r\n  const [modelError, setModelError] = useState('white');\r\n  const [regYearError, setRegYearError] = useState('white');\r\n  const [regMonthError, setRegMonthError] = useState('white');\r\n  const [refNumError, setRefNumError] = useState('white');\r\n  const [stockIDNumError, setStockIDNumError] = useState('white');\r\n  const [chassisError, setChassisError] = useState('white');\r\n  const [modelCodeError, setModelCodeError] = useState('white');\r\n  const [engineDisError, setEngineDisError] = useState('white');\r\n  const [steeringError, setSteeringError] = useState('white');\r\n  const [mileageError, setMileageError] = useState('white');\r\n  const [transmissionError, setTransmissionError] = useState('white');\r\n  const [exteriorColoError, setExteriorColoError] = useState('white');\r\n  const [numOfSeatsError, setNumOfSeatsError] = useState('white');\r\n  const [doorsError, setDoorsError] = useState('white');\r\n  const [purchasedPriceError, setPurchasedPriceError] = useState('white');\r\n  const [fuelError, setFuelError] = useState('white');\r\n  const [portError, setPortError] = useState('white');\r\n  const [buyerError, setBuyerError] = useState('white');\r\n  const [salesError, setSalesError] = useState('white');\r\n  const [dimensionLengthError, setDimensionLengthError] = useState('white');\r\n  const [dimensionWidthError, setDimensionWidthError] = useState('white');\r\n  const [dimensionHeightError, setDimensionHeightError] = useState('white');\r\n  const [driveTypeError, setDriveTypeError] = useState('white');\r\n  const [weightError, setWeightError] = useState('white');\r\n  const [bodyTypeError, setBodyTypeError] = useState('white');\r\n  const [stockStatusError, setStockStatusError] = useState('white');\r\n\r\n\r\n\r\n  const inputVehicleBoxRef = useRef(null);\r\n\r\n\r\n  const selectMakeBoxRef = useRef(null);\r\n  const selectModelBoxRef = useRef(null);\r\n  const selectRegYearBoxRef = useRef(null);\r\n  const selectRegMonthBoxRef = useRef(null);\r\n  const selectSteeringBoxRef = useRef(null);\r\n  const selectTransmissionBoxRef = useRef(null);\r\n  const selectExteriorColorBoxRef = useRef(null);\r\n  const selectFuelBoxRef = useRef(null);\r\n  const selectPortBoxRef = useRef(null);\r\n  const selectBuyerBoxRef = useRef(null);\r\n  const selectSalesBoxRef = useRef(null);\r\n  const selectDriveTypeBoxRef = useRef(null);\r\n  const selectBodyTypeBoxRef = useRef(null);\r\n  const selectStockStatusBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n\r\n    handleClearImages();\r\n\r\n    dispatch(setSupplyChainsCostsData([]));\r\n    dispatch(setDeleteImageVisible(true));\r\n    portVariable.id = '';\r\n    portVariable.text = '';\r\n    salesVariable.id = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.id = '';\r\n    buyerVariable.text = '';\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n    Object.keys(featuresState).forEach(property => {\r\n      featuresState[property] = false;\r\n    });\r\n\r\n    console.log('Sample');\r\n\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n  }, []);\r\n\r\n\r\n  const handleClearIfError = useCallback(() => {\r\n\r\n\r\n    handleClearToggleButton();\r\n    clearSelect();\r\n\r\n    inputCarName.current?.clear();\r\n    inputCarDesc.current?.clear();\r\n    inputFobJpy.current?.clear();\r\n    inputFobUsd.current?.clear();\r\n\r\n    inputRegYear.current?.clear();\r\n    inputRegMonth.current?.clear();\r\n    inputRefNum.current?.clear();\r\n    inputChassis.current?.clear();\r\n    inputModelCode.current?.clear();\r\n    inputEngineCode.current?.clear();\r\n    inputEngineDis.current?.clear();\r\n    inputMileage.current?.clear();\r\n    inputNumOfSeats.current?.clear();\r\n    inputDoors.current?.clear();\r\n    inputPurchasedPrice.current?.clear();\r\n    inputFuel.current?.clear();\r\n    inputDimensionLength.current?.clear();\r\n    inputDimensionWidth.current?.clear();\r\n    inputDimensionHeight.current?.clear();\r\n    inputDimensionCubicMeters.current.value = \"0.00\";\r\n    inputDriveType.current?.clear();\r\n    inputWeight.current?.clear();\r\n\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    portVariable.text = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.text = '';\r\n    portVariable.id = '';\r\n    salesVariable.id = '';\r\n    buyerVariable.id = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n  }, []);\r\n\r\n  // const uploadImages = useCallback(async () => {\r\n  //   const storageRef = ref(storage, `${globalVehicleFolderName}`);\r\n  //   const ImageFormat = { jpg: 'jpg' };\r\n\r\n  //   try {\r\n  //     // Get the names of the images to keep\r\n  //     const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n  //     // Delete existing files in the folder that do not match the names of the images to keep\r\n  //     const listResult = await listAll(storageRef);\r\n  //     await Promise.all(\r\n  //       listResult.items\r\n  //         .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n  //         .map((itemRef) => deleteObject(itemRef))\r\n  //     );\r\n\r\n  //     // Upload new images with or without watermarks based on the platform\r\n  //     function blobToArrayBuffer(blob) {\r\n  //       return new Promise((resolve, reject) => {\r\n  //         const reader = new FileReader();\r\n  //         reader.onload = () => resolve(reader.result);\r\n  //         reader.onerror = reject;\r\n  //         reader.readAsArrayBuffer(blob);\r\n  //       });\r\n  //     }\r\n\r\n  //     // ...\r\n\r\n  //     await Promise.all(\r\n  //       globalSelectedImages.map(async (asset, index) => {\r\n  //         const { uri } = asset;\r\n  //         const imageName = index.toString();\r\n\r\n  //         const response = await fetch(uri);\r\n  //         const blob = await response.blob();\r\n\r\n  //         const imageRef = ref(storage, `${globalVehicleFolderName}/${imageName}`);\r\n\r\n  //         // Define your watermark options\r\n  //         const watermarkOptions = {\r\n  //           text: 'Real Motor Japan',\r\n  //           color: '#FFFFFF', // Text color\r\n  //           fontSize: 20,\r\n  //           opacity: 50, // Set opacity if needed\r\n  //         };\r\n\r\n  //         // Convert the blob to an ArrayBuffer\r\n  //         const arrayBuffer = await blobToArrayBuffer(blob);\r\n\r\n  //         // Use watermark.js to add the watermark\r\n  //         const watermarkedArrayBuffer = await watermark([arrayBuffer, watermarkOptions])\r\n  //           .image(watermark.image.bottomCenter())\r\n  //           .then((img) => img.arrayBuffer());\r\n\r\n  //         // Convert the ArrayBuffer back to a Blob\r\n  //         const watermarkedBlob = new Blob([watermarkedArrayBuffer]);\r\n\r\n  //         await uploadBytes(imageRef, watermarkedBlob, { contentType: 'image/jpeg' });\r\n  //       })\r\n  //     );\r\n\r\n  //     console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\r\n  //   } catch (error) {\r\n  //     console.error('Error uploading images:', error);\r\n  //   }\r\n  // }, []);\r\n\r\n  const uploadImages = useCallback(async () => {\r\n\r\n    const storageRef = ref(storage, `${globalVehicleFolderName}`);\r\n    const ImageFormat = { jpg: 'jpg' };\r\n\r\n\r\n\r\n    try {\r\n      // Get the names of the images to keep\r\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n      // Delete existing files in the folder that do not match the names of the images to keep\r\n      const listResult = await listAll(storageRef);\r\n      await Promise.all(\r\n        listResult.items\r\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n          .map((itemRef) => deleteObject(itemRef))\r\n      );\r\n\r\n      await Promise.all(\r\n        globalSelectedImages.map(async (asset, index) => {\r\n          const { uri } = asset;\r\n          const imagename = index.toString();\r\n\r\n          const response = await fetch(uri);\r\n          const blob = await response.blob();\r\n\r\n          // Create an offscreen canvas\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          // Create a new image object\r\n          const img = new Image();\r\n          img.src = URL.createObjectURL(blob);\r\n\r\n          // Draw the image on the canvas\r\n          img.onload = async () => {\r\n            // Create a canvas element\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            // Calculate the desired width and height for the resized image\r\n            const maxWidth = 800; // Set your desired maximum width\r\n            const maxHeight = 600; // Set your desired maximum height\r\n            let newWidth = img.width;\r\n            let newHeight = img.height;\r\n\r\n            // Check if the image needs resizing\r\n            if (img.width > maxWidth) {\r\n              newWidth = maxWidth;\r\n              newHeight = (img.height * maxWidth) / img.width;\r\n            }\r\n\r\n            if (newHeight > maxHeight) {\r\n              newWidth = (newWidth * maxHeight) / newHeight;\r\n              newHeight = maxHeight;\r\n            }\r\n\r\n            // Set the canvas dimensions to the new width and height\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n\r\n            // Draw the resized image onto the canvas\r\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n\r\n            // Calculate the font size as a percentage of the image width\r\n            const fontSizePercentage = 3;\r\n            const imageRes = img.height * img.width;\r\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\r\n\r\n            ctx.font = `bold ${fontSize}px Arial`;\r\n            ctx.fillStyle = '#fff';\r\n            ctx.shadowColor = 'transparent';\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.lineWidth = 2;\r\n\r\n            // Calculate the position for the watermark text\r\n            const watermarkText = `Real Motor Japan ${globalReferenceNumber}`;\r\n            const textWidth = ctx.measureText(watermarkText).width;\r\n            const textHeight = fontSize; // Font size determines the text height\r\n\r\n            // Set padding around the text (adjust as needed)\r\n            const paddingX = 10;\r\n            const paddingY = 5;\r\n\r\n            // Calculate the position for the text shadow\r\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\r\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\r\n\r\n            // Increase the shadow thickness by adjusting the shadow blur radius\r\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\r\n\r\n            // Draw the text shadow (black)\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(watermarkText, xShadow, yShadow);\r\n\r\n            // Reset the shadow blur radius for the actual text\r\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\r\n\r\n            // Calculate the position for the actual text\r\n            const x = (canvas.width - textWidth) / 2;\r\n            const y = canvas.height - 20;\r\n\r\n            // Draw the actual text (white)\r\n            ctx.fillStyle = '#fff';\r\n            ctx.fillText(watermarkText, x, y);\r\n\r\n            // Convert the canvas to a blob\r\n            const watermarkedImageBlob = await new Promise(resolve => {\r\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\r\n            });\r\n\r\n            // Upload the resized image to Firebase Storage\r\n            const imageRef = ref(storage, `${globalVehicleFolderName}/${imagename}`);\r\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\r\n          };\r\n\r\n        })\r\n\r\n      );\r\n\r\n\r\n      console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleUpload = useCallback(async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    setCarNameError('muted.500');\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setBuyerError('white');\r\n    setSalesError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    const selectIsEmpty = makeVariable.text == \"\" ||\r\n      modelVariable.text == \"\" ||\r\n      regYearVariable.text == \"\" ||\r\n      regMonthVariable.text == \"\" ||\r\n      steeringVariable.text == \"\" ||\r\n      transmissionVariable.text == \"\" ||\r\n      exteriorColorVariable.text == \"\" ||\r\n      fuelVariable.text == \"\" ||\r\n      portVariable.text == \"\" ||\r\n      buyerVariable.text == \"\" ||\r\n      salesVariable.text == \"\" ||\r\n      driveTypeVariable.text == \"\" ||\r\n      bodyTypeVariable.text == \"\" ||\r\n      stockStatusVariable.text == \"\";\r\n\r\n    const inputIsEmpty = inputStockIDNumber.current?.value == \"\" || inputRefNum.current?.value == \"\" ||\r\n      inputChassis.current?.value == \"\" ||\r\n      inputModelCode.current?.value == \"\" ||\r\n      inputEngineDis.current?.value == \"\" ||\r\n      inputEngineDis.current?.value == 0 ||\r\n      inputMileage.current?.value == \"\" ||\r\n      inputMileage.current?.value == 0 ||\r\n      inputNumOfSeats.current?.value == \"\" ||\r\n      inputDoors.current?.value == \"\" ||\r\n      inputNumOfSeats.current?.value == 0 ||\r\n      inputDoors.current?.value == 0 ||\r\n      inputPurchasedPrice.current?.value == 0 ||\r\n      inputPurchasedPrice.current?.value == \"\" ||\r\n      inputDimensionLength.current?.value == \"\" ||\r\n      inputDimensionWidth.current?.value == \"\" ||\r\n      inputDimensionHeight.current?.value == \"\" ||\r\n      inputDimensionCubicMeters.current?.value == \"\" ||\r\n      inputDimensionLength.current?.value == 0 ||\r\n      inputDimensionWidth.current?.value == 0 ||\r\n      inputDimensionHeight.current?.value == 0 ||\r\n      inputDimensionCubicMeters.current?.value == 0 ||\r\n      inputWeight.current?.value == \"\" ||\r\n      inputWeight.current?.value == 0 ||\r\n      inputCarName.current?.value == \"\";\r\n\r\n    // const inputExceedLength = input;\r\n    const allValuesAreFalse = Object.values(featuresState).every((value) => value === false);\r\n\r\n    console.log(inputIsEmpty || selectIsEmpty);\r\n\r\n    if (inputIsEmpty || selectIsEmpty || allValuesAreFalse) {\r\n      dispatch(setLoadingModalVisible(false));\r\n      inputVehicleBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n      if (allValuesAreFalse) {\r\n        // All features are false\r\n        console.log('All features are false');\r\n        setIsNoFeaturesSelected('danger.400');\r\n        // featureBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        // handleModalUploadClose();\r\n      } else {\r\n        // At least one feature is true\r\n        console.log('At least one feature is true.');\r\n        // handleModalUploadClose();\r\n      }\r\n\r\n      if (inputCarName.current?.value == \"\") {\r\n        inputCarName.current.scrollIntoView({ behavior: 'smooth' });\r\n        setCarNameError('danger.400');\r\n      }\r\n\r\n      if (bodyTypeVariable.text == \"\") {\r\n        selectBodyTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setBodyTypeError('danger.400');\r\n      }\r\n\r\n      if (stockStatusVariable.text == \"\") {\r\n        selectStockStatusBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setStockStatusError('danger.400');\r\n      }\r\n\r\n      if (inputWeight.current?.value == \"\" || inputWeight.current?.value == 0) {\r\n        inputWeight.current.scrollIntoView({ behavior: 'smooth' });\r\n        setWeightError('danger.400');\r\n      }\r\n\r\n      if (driveTypeVariable.text == \"\") {\r\n        selectDriveTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDriveTypeError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionHeight.current?.value == \"\" || inputDimensionHeight.current?.value == 0) {\r\n        inputDimensionHeight.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionHeightError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionWidth.current?.value == \"\" || inputDimensionWidth.current?.value == 0) {\r\n        inputDimensionWidth.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionWidthError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionLength.current?.value == \"\" || inputDimensionLength.current?.value == 0) {\r\n        inputDimensionLength.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionLengthError('danger.400');\r\n      }\r\n\r\n      if (fuelVariable.text == \"\") {\r\n        selectFuelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setFuelError('danger.400');\r\n      }\r\n\r\n      if (inputDoors.current?.value == \"\" || inputDoors.current?.value == 0) {\r\n        inputDoors.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDoorsError('danger.400');\r\n      }\r\n      if (inputPurchasedPrice.current?.value == \"\" || inputPurchasedPrice.current?.value == 0) {\r\n        inputPurchasedPrice.current.scrollIntoView({ behavior: 'smooth' });\r\n        setPurchasedPriceError('danger.400');\r\n      }\r\n\r\n      if (inputNumOfSeats.current?.value == \"\") {\r\n        inputNumOfSeats.current.scrollIntoView({ behavior: 'smooth' });\r\n        setNumOfSeatsError('danger.400');\r\n      }\r\n\r\n      if (exteriorColorVariable.text == \"\") {\r\n        selectExteriorColorBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setExteriorColoError('danger.400');\r\n      }\r\n\r\n      if (transmissionVariable.text == \"\") {\r\n        selectTransmissionBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setTransmissionError('danger.400');\r\n      }\r\n\r\n      if (inputMileage.current?.value == \"\" || inputMileage.current?.value == 0) {\r\n        inputMileage.current.scrollIntoView({ behavior: 'smooth' });\r\n        setMileageError('danger.400');\r\n      }\r\n\r\n      if (steeringVariable.text == \"\") {\r\n        selectSteeringBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setSteeringError('danger.400');\r\n      }\r\n\r\n      if (inputEngineDis.current?.value == \"\" || inputEngineDis.current?.value == 0) {\r\n        inputEngineDis.current.scrollIntoView({ behavior: 'smooth' });\r\n        setEngineDisError('danger.400');\r\n      }\r\n\r\n      if (inputModelCode.current?.value == \"\") {\r\n        inputModelCode.current.scrollIntoView({ behavior: 'smooth' });\r\n        setModelCodeError('danger.400');\r\n      }\r\n\r\n      if (inputChassis.current?.value == \"\") {\r\n        inputChassis.current.scrollIntoView({ behavior: 'smooth' });\r\n        setChassisError('danger.400');\r\n      }\r\n\r\n      if (inputRefNum.current?.value == \"\") {\r\n        inputRefNum.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRefNumError('danger.400');\r\n      }\r\n      if (buyerVariable.text == \"\") {\r\n        selectBuyerBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setBuyerError('danger.400');\r\n      }\r\n\r\n      if (salesVariable.text == \"\") {\r\n        selectSalesBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setSalesError('danger.400');\r\n      }\r\n\r\n\r\n      if (portVariable.text == \"\") {\r\n        selectPortBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setPortError('danger.400');\r\n      }\r\n\r\n\r\n      if (regMonthVariable.text == \"\") {\r\n        selectRegMonthBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRegMonthError('danger.400');\r\n      }\r\n\r\n      if (regYearVariable.text == \"\") {\r\n        selectRegYearBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRegYearError('danger.400');\r\n      }\r\n\r\n      if (modelVariable.text == \"\") {\r\n        selectModelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setModelError('danger.400');\r\n      }\r\n\r\n      if (makeVariable.text == \"\") {\r\n        selectMakeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setMakeError('danger.400');\r\n      }\r\n\r\n      if (inputStockIDNumber.current?.value == \"\") {\r\n        inputStockIDNumber.current.scrollIntoView({ behavior: 'smooth' });\r\n        setStockIDNumError('danger.400');\r\n      }\r\n\r\n    }\r\n    else {\r\n      const stockCollectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n      const stockID = inputStockIDNumber.current?.value;\r\n      const docQuery = doc(stockCollectionRef, stockID);\r\n      const docSnap = await getDoc(docQuery);\r\n\r\n      dispatch(setLoadingModalVisible(true));\r\n      globalReferenceNumber = inputRefNum.current?.value;\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const timestampForID = moment(datetime).format('YYYYMMDDHHmmss');\r\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n      const year = moment(datetime).format('YYYY');\r\n      const month = moment(datetime).format('MM');\r\n      const monthWithDay = moment(datetime).format('MM/DD');\r\n      const date = moment(datetime).format('YYYY/MM/DD');\r\n      const day = moment(datetime).format('DD');\r\n      const time = moment(datetime).format('HH:mm');\r\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n      // console.log(`${timestampForID}${inputRefNum.current?.value}`);\r\n\r\n      const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n      const docRef = doc(collectionRef, inputStockIDNumber.current?.value);\r\n\r\n      const docData = docSnap.data();\r\n      // Your data object to be added\r\n      const docSnapshot = await getDoc(docRef);\r\n\r\n\r\n\r\n\r\n      const keywordsData = [\r\n        inputRefNum.current?.value,\r\n        inputCarName.current?.value,\r\n        inputStockIDNumber.current?.value,\r\n        regYearVariable.text,\r\n        makeVariable.text,\r\n        modelVariable.text,\r\n        inputChassis.current?.value,\r\n        `${makeVariable.text} ${modelVariable.text}`,\r\n        `${regYearVariable.text} ${makeVariable.text}`,\r\n      ]\r\n      const fobHistoryData = {\r\n        date: formattedTime,\r\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\r\n        changedBy: nameVariable.text,\r\n      };\r\n\r\n      let fobHistoryValue;\r\n      const inputFobValue = inputFobJpy.current?.value;\r\n      if (globalFobPrice !== inputFobValue && inputFobValue !== '') {\r\n        fobHistoryValue = arrayUnion(fobHistoryData);\r\n      }\r\n\r\n      const data = {\r\n        keywords: keywordsData,\r\n        imageCount: globalSelectedImages.length,\r\n        supplyChainsCostsData: globalSupplyChainCostsData,\r\n        ...(fobHistoryValue && { fobHistory: fobHistoryValue }),\r\n        // ...(docSnap.exists() || docData.inputStockIDNumber.current?.value.hasOwnProperty('dateAdded')\r\n        // ? { updatedDate: formattedTime }\r\n        // : { dateAdded: formattedTime }),\r\n        // dateAdded: formattedTime, \r\n        display: false,\r\n        photos: false,\r\n        stockID: inputStockIDNumber.current?.value,\r\n        make: makeVariable.text,\r\n        model: modelVariable.text,\r\n        regYear: regYearVariable.text,\r\n        regMonth: regMonthVariable.text,\r\n        referenceNumber: inputRefNum.current?.value,\r\n        chassisNumber: inputChassis.current?.value,\r\n        modelCode: inputModelCode.current?.value,\r\n        engineCode: inputEngineCode.current?.value,\r\n        engineDisplacement: inputEngineDis.current.value.replace(/,/g, ''),\r\n        steering: steeringVariable.text,\r\n        mileage: inputMileage.current.value.replace(/,/g, ''),\r\n        transmission: transmissionVariable.text,\r\n        exteriorColor: exteriorColorVariable.text,\r\n        numberOfSeats: inputNumOfSeats.current?.value,\r\n        doors: inputDoors.current?.value,\r\n        purchasedPrice: inputPurchasedPrice.current.value.replace(/,/g, ''),\r\n        fuel: fuelVariable.text,\r\n        port: portVariable.text,\r\n        sales: salesVariable.text,\r\n        buyer: buyerVariable.text,\r\n        portID: portVariable.id,\r\n        salesID: salesVariable.id,\r\n        buyerID: buyerVariable.id,\r\n        dimensionLength: inputDimensionLength.current.value.replace(/,/g, ''),\r\n        dimensionWidth: inputDimensionWidth.current.value.replace(/,/g, ''),\r\n        dimensionHeight: inputDimensionHeight.current.value.replace(/,/g, ''),\r\n        dimensionCubicMeters: inputDimensionCubicMeters.current.value.replace(/,/g, ''),\r\n        driveType: driveTypeVariable.text,\r\n        weight: inputWeight.current.value.replace(/,/g, ''),\r\n        bodyType: bodyTypeVariable.text,\r\n        stockStatus: stockStatusVariable.text,\r\n        carName: inputCarName.current?.value,\r\n        carDescription: inputCarDesc.current?.value,\r\n        notes: inputCarNotes.current?.value,\r\n        memo: inputCarMemo.current?.value,\r\n\r\n        comfort: {\r\n          ComfortAiCoFr: featuresState.ComfortAiCoFr,\r\n          ComfortAiCoRe: featuresState.ComfortAiCoRe,\r\n          ComfortAMFMRa: featuresState.ComfortAMFMRa,\r\n          ComfortAMFMSt: featuresState.ComfortAMFMSt,\r\n          ComfortCDPl: featuresState.ComfortCDPl,\r\n          ComfortCDCh: featuresState.ComfortCDCh,\r\n          ComfortCrSpCo: featuresState.ComfortCrSpCo,\r\n          ComfortDiSp: featuresState.ComfortDiSp,\r\n          ComfortDVDPl: featuresState.ComfortDVDPl,\r\n          ComfortHDD: featuresState.ComfortHDD,\r\n          ComfortNaSyGPS: featuresState.ComfortNaSyGPS,\r\n          ComfortPoSt: featuresState.ComfortPoSt,\r\n          ComfortPrAuSy: featuresState.ComfortPrAuSy,\r\n          ComfortReKeSy: featuresState.ComfortReKeSy,\r\n          ComfortTiStWh: featuresState.ComfortTiStWh,\r\n        },\r\n\r\n        ComfortAiCoFr: featuresState.ComfortAiCoFr,\r\n        ComfortAiCoRe: featuresState.ComfortAiCoRe,\r\n        ComfortAMFMRa: featuresState.ComfortAMFMRa,\r\n        ComfortAMFMSt: featuresState.ComfortAMFMSt,\r\n        ComfortCDPl: featuresState.ComfortCDPl,\r\n        ComfortCDCh: featuresState.ComfortCDCh,\r\n        ComfortCrSpCo: featuresState.ComfortCrSpCo,\r\n        ComfortDiSp: featuresState.ComfortDiSp,\r\n        ComfortDVDPl: featuresState.ComfortDVDPl,\r\n        ComfortHDD: featuresState.ComfortHDD,\r\n        ComfortNaSyGPS: featuresState.ComfortNaSyGPS,\r\n        ComfortPoSt: featuresState.ComfortPoSt,\r\n        ComfortPrAuSy: featuresState.ComfortPrAuSy,\r\n        ComfortReKeSy: featuresState.ComfortReKeSy,\r\n        ComfortTiStWh: featuresState.ComfortTiStWh,\r\n\r\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\r\n\r\n        safetySystem: {\r\n          SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy,\r\n          SafetySystemDrAi: featuresState.SafetySystemDrAi,\r\n          SafetySystemPaAi: featuresState.SafetySystemPaAi,\r\n          SafetySystemSiAi: featuresState.SafetySystemSiAi,\r\n\r\n        },\r\n\r\n        SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy,\r\n        SafetySystemDrAi: featuresState.SafetySystemDrAi,\r\n        SafetySystemPaAi: featuresState.SafetySystemPaAi,\r\n        SafetySystemSiAi: featuresState.SafetySystemSiAi,\r\n\r\n        interior: {\r\n          InteriorLeSe: featuresState.InteriorLeSe,\r\n          InteriorPoDoLo: featuresState.InteriorPoDoLo,\r\n          InteriorPoMi: featuresState.InteriorPoMi,\r\n          InteriorPoSe: featuresState.InteriorPoSe,\r\n          InteriorPoWi: featuresState.InteriorPoWi,\r\n          InteriorReWiDe: featuresState.InteriorReWiDe,\r\n          InteriorReWiWi: featuresState.InteriorReWiWi,\r\n          InteriorThRoSe: featuresState.InteriorThRoSe,\r\n          InteriorTiGl: featuresState.InteriorTiGl,\r\n        },\r\n\r\n        InteriorLeSe: featuresState.InteriorLeSe,\r\n        InteriorPoDoLo: featuresState.InteriorPoDoLo,\r\n        InteriorPoMi: featuresState.InteriorPoMi,\r\n        InteriorPoSe: featuresState.InteriorPoSe,\r\n        InteriorPoWi: featuresState.InteriorPoWi,\r\n        InteriorReWiDe: featuresState.InteriorReWiDe,\r\n        InteriorReWiWi: featuresState.InteriorReWiWi,\r\n        InteriorThRoSe: featuresState.InteriorThRoSe,\r\n        InteriorTiGl: featuresState.InteriorTiGl,\r\n\r\n        exterior: {\r\n          ExteriorAlWh: featuresState.ExteriorAlWh,\r\n          ExteriorPoSlDo: featuresState.ExteriorPoSlDo,\r\n          ExteriorSuRo: featuresState.ExteriorSuRo,\r\n        },\r\n        ExteriorAlWh: featuresState.ExteriorAlWh,\r\n        ExteriorPoSlDo: featuresState.ExteriorPoSlDo,\r\n        ExteriorSuRo: featuresState.ExteriorSuRo,\r\n\r\n        sellingPoints: {\r\n          SellingPointsCuWh: featuresState.SellingPointsCuWh,\r\n          SellingPointsFuLo: featuresState.SellingPointsFuLo,\r\n          SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv,\r\n          SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi,\r\n          SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi,\r\n          SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw,\r\n          SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi,\r\n          SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi,\r\n          SellingPointsReBo: featuresState.SellingPointsReBo,\r\n          SellingPointsTuEn: featuresState.SellingPointsTuEn,\r\n          SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy,\r\n        },\r\n\r\n        SellingPointsCuWh: featuresState.SellingPointsCuWh,\r\n        SellingPointsFuLo: featuresState.SellingPointsFuLo,\r\n        SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv,\r\n        SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi,\r\n        SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi,\r\n        SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw,\r\n        SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi,\r\n        SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi,\r\n        SellingPointsReBo: featuresState.SellingPointsReBo,\r\n        SellingPointsTuEn: featuresState.SellingPointsTuEn,\r\n        SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy,\r\n\r\n\r\n        // Add more fields as needed\r\n      };\r\n\r\n      // Get a reference to the document with the given stock ID\r\n\r\n\r\n      // Get the document\r\n\r\n\r\n      // Check if the document exists\r\n      if (docSnap.exists()) {\r\n        updateDoc(docRef, data)\r\n          .then(async () => {\r\n            try {\r\n\r\n              await uploadImages();\r\n              dispatch(setLoadingModalVisible(false));\r\n              dispatch(setIsUpdateSuccessModalOpen(true));\r\n\r\n              try {\r\n                // Check if the document exists\r\n                const docSnapshot = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                  const dataDoc = docSnap.data();\r\n                  if (dataDoc) {\r\n                    if ('dateAdded' in dataDoc) {\r\n                      // The document exists and has a 'dateAdded' field\r\n                      console.log('Date Update');\r\n                      // Update the 'updatedDate' field without removing 'dateAdded'\r\n                      const updates = {\r\n                        updatedDate: formattedTime, // Replace 'formattedTime' with the updated date value\r\n                      };\r\n\r\n                      // Use updateDoc to only update the 'updatedDate' field in the document\r\n                      await updateDoc(docRef, updates);\r\n                    } else {\r\n                      // The document exists, but it doesn't have a 'dateAdded' field\r\n                      console.log('Date Added');\r\n                      // Update the 'dateAdded' field without removing other fields\r\n                      const updates = {\r\n                        dateAdded: formattedTime, // Replace 'formattedTime' with the date value\r\n                      };\r\n\r\n                      // Use updateDoc to only update the 'dateAdded' field in the document\r\n                      await updateDoc(docRef, updates);\r\n                    }\r\n                  } else {\r\n                    // The document exists, but it doesn't have a 'dateAdded' field\r\n                    console.log('Date Added');\r\n                    // Update the 'dateAdded' field without removing other fields\r\n                    const updates = {\r\n                      dateAdded: formattedTime, // Replace 'formattedTime' with the date value\r\n                    };\r\n\r\n                    // Use updateDoc to only update the 'dateAdded' field in the document\r\n                    await updateDoc(docRef, updates);\r\n                  }\r\n                } else {\r\n                  // The document does not exist\r\n                  console.log('Date Added');\r\n                }\r\n              } catch (error) {\r\n                console.error('Error checking document:', error);\r\n              }\r\n\r\n              const logData = {\r\n                message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  inputStockIDNumber.current.value.toLowerCase(),\r\n                  `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\r\n                  'Vehicle Updated'.toLowerCase(),\r\n                  'Vehicle'.toLowerCase(),\r\n                  'Updated'.toLowerCase(),\r\n                  inputCarName.current.value.toLowerCase(),\r\n                  inputRefNum.current.value.toLowerCase(),\r\n                  nameVariable.text.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n              };\r\n              dispatch(setLoadingModalVisible(false));\r\n              handleClearImages();\r\n              addLogToCollection(logData);\r\n              handleClear();\r\n              console.log('Document updated successfully!');\r\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\r\n            } catch (error) {\r\n              // Handle errors that may occur during the update process\r\n              console.error('Error updating document:', error);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.error('Error updating document: ', error);\r\n          });\r\n      }\r\n      else {\r\n        const dataWithDateAdded = {\r\n          ...data,\r\n          dateAdded: formattedTime,\r\n        };\r\n\r\n        setDoc(docRef, dataWithDateAdded)\r\n          .then(async () => {\r\n\r\n            try {\r\n              await uploadImages();\r\n              dispatch(setLoadingModalVisible(false));\r\n              dispatch(setIsSuccessModalOpen(true));\r\n\r\n              // try {\r\n              //   // Check if the document exists\r\n              //   const docSnapshot = await getDoc(docRef);\r\n\r\n              //   if (docSnapshot.exists()) {\r\n              //     const data = docSnapshot.data();\r\n              //     if (data) {\r\n              //       if ('dateAdded' in data) {\r\n              //         // The document exists and has a 'dateAdded' field\r\n              //         console.log('Date Update');\r\n              //         // Update the 'updatedDate' field in the document\r\n              //         const updates = {\r\n              //           updatedDate: formattedTime, // Replace 'newFieldValue' with the updated date value\r\n              //         };\r\n\r\n              //         // Use setDoc to update the 'updatedDate' field in the document\r\n              //         await setDoc(docRef, updates, { merge: true });\r\n              //       } else {\r\n              //         // The document exists, but it doesn't have a 'dateAdded' field\r\n              //         console.log('Date Added');\r\n              //         // Update the 'dateAdded' field in the document\r\n              //         const updates = {\r\n              //           dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\r\n              //         };\r\n\r\n              //         // Use setDoc to update the 'dateAdded' field in the document\r\n              //         await setDoc(docRef, updates, { merge: true });\r\n              //       }\r\n              //     } else {\r\n              //       // The document exists, but it doesn't have a 'dateAdded' field\r\n              //       console.log('Date Added');\r\n              //       // Update the 'dateAdded' field in the document\r\n              //       const updates = {\r\n              //         dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\r\n              //       };\r\n\r\n              //       // Use setDoc to update the 'dateAdded' field in the document\r\n              //       await setDoc(docRef, updates, { merge: true });\r\n              //     }\r\n              //   } else {\r\n              //     // The document does not exist\r\n              //     console.log('Date Added');\r\n              //   }\r\n              // } catch (error) {\r\n              //   console.error('Error checking document:', error);\r\n              // }\r\n\r\n              const logData = {\r\n                message: `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  inputStockIDNumber.current.value.toLowerCase(),\r\n                  `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\r\n                  'Vehicle Added'.toLowerCase(),\r\n                  'Vehicle'.toLowerCase(),\r\n                  'Added'.toLowerCase(),\r\n                  inputCarName.current.value.toLowerCase(),\r\n                  inputRefNum.current.value.toLowerCase(),\r\n                  nameVariable.text.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n              };\r\n\r\n              handleClearImages();\r\n              addLogToCollection(logData);\r\n              handleClear();\r\n              console.log('Document added successfully!');\r\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n          })\r\n          .catch((error) => {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.error('Error adding document: ', error);\r\n          });\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleClearToggleButton = () => {\r\n    resetKey++;\r\n\r\n    featuresState.SafetySystemAnBrSy = false;\r\n    featuresState.SafetySystemDrAi = false;\r\n    featuresState.SafetySystemPaAi = false;\r\n    featuresState.SafetySystemSiAi = false;\r\n    featuresState.ComfortAiCoFr = false;\r\n    featuresState.ComfortAiCoRe = false;\r\n    featuresState.ComfortAMFMRa = false;\r\n    featuresState.ComfortAMFMSt = false;\r\n    featuresState.ComfortCDPl = false;\r\n    featuresState.ComfortCDCh = false;\r\n    featuresState.ComfortCrSpCo = false;\r\n    featuresState.ComfortDiSp = false;\r\n    featuresState.ComfortDVDPl = false;\r\n    featuresState.ComfortHDD = false;\r\n    featuresState.ComfortNaSyGPS = false;\r\n    featuresState.ComfortPoSt = false;\r\n    featuresState.ComfortPrAuSy = false;\r\n    featuresState.ComfortReKeSy = false;\r\n    featuresState.ComfortTiStWh = false;\r\n    featuresState.InteriorLeSe = false;\r\n    featuresState.InteriorPoDoLo = false;\r\n    featuresState.InteriorPoMi = false;\r\n    featuresState.InteriorPoSe = false;\r\n    featuresState.InteriorPoWi = false;\r\n    featuresState.InteriorReWiDe = false;\r\n    featuresState.InteriorReWiWi = false;\r\n    featuresState.InteriorThRoSe = false;\r\n    featuresState.InteriorTiGl = false;\r\n    featuresState.ExteriorAlWh = false;\r\n    featuresState.ExteriorPoSlDo = false;\r\n    featuresState.ExteriorSuRo = false;\r\n    featuresState.SellingPointsCuWh = false;\r\n    featuresState.SellingPointsFuLo = false;\r\n    featuresState.SellingPointsMaHiAv = false;\r\n    featuresState.SellingPointsBrNeTi = false;\r\n    featuresState.SellingPointsNoAcHi = false;\r\n    featuresState.SellingPointsNoSmPrOw = false;\r\n    featuresState.SellingPointsOnOwHi = false;\r\n    featuresState.SellingPointsPeRaTi = false;\r\n    featuresState.SellingPointsReBo = false;\r\n    featuresState.SellingPointsTuEn = false;\r\n    featuresState.SellingPointsUpAuSy = false;\r\n  };\r\n\r\n  const handleClear = useCallback(() => {\r\n\r\n    handleClearToggleButton();\r\n    handleClearImages();\r\n    clearSelect();\r\n\r\n\r\n    dispatch(setSupplyChainsCostsData([]));\r\n    globalSupplyChainCostsData = [];\r\n    globalSupplyChainCostsAmount = '';\r\n    globalFobPrice = '';\r\n\r\n    inputStockIDNumber.current?.clear();\r\n    inputCarName.current?.clear();\r\n    inputCarDesc.current?.clear();\r\n    inputFobJpy.current?.clear();\r\n    inputFobUsd.current?.clear();\r\n\r\n    inputRegYear.current?.clear();\r\n    inputRegMonth.current?.clear();\r\n    inputRefNum.current?.clear();\r\n    inputChassis.current?.clear();\r\n    inputModelCode.current?.clear();\r\n    inputEngineCode.current?.clear();\r\n    inputEngineDis.current?.clear();\r\n    inputMileage.current?.clear();\r\n    inputNumOfSeats.current?.clear();\r\n    inputDoors.current?.clear();\r\n    inputPurchasedPrice.current?.clear();\r\n    inputFuel.current?.clear();\r\n    inputDimensionLength.current?.clear();\r\n    inputDimensionWidth.current?.clear();\r\n    inputDimensionHeight.current?.clear();\r\n    inputDimensionCubicMeters.current.value = \"0.00\";\r\n    inputDriveType.current?.clear();\r\n    inputWeight.current?.clear();\r\n    inputCarNotes.current?.clear();\r\n    inputCarMemo.current?.clear();\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    portVariable.text = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.text = '';\r\n    portVariable.id = '';\r\n    salesVariable.id = '';\r\n    buyerVariable.id = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    // handleModalClearClose();\r\n\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  // const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n  //   navigation.navigate(\"LOGS\");\r\n  // }, []);\r\n  // const handleToggleAddAccount = useCallback(() => {\r\n\r\n\r\n  //   navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  // }, []);\r\n\r\n  // const handleToggleAccountList = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ACCOUNT LIST\");\r\n  // }, []);\r\n\r\n  // const handleToggleAddVehicle = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ADD NEW VEHICLE\");\r\n  // }, []);\r\n\r\n\r\n  // const handleVehicleList = useCallback(() => {\r\n  //   navigation.navigate(\"VEHICLE LIST\");\r\n  // }, []);\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(projectControlAuth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(projectControlAuth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate(\"/Login\");\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = projectControlAuth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(projectControlAuth).then(() => {\r\n      // navigation.navigate('Login');\r\n      navigate(\"/Login\");\r\n      setEmail('');\r\n      setName('');\r\n    }).catch(() => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n  const { width } = Dimensions.get('window');\r\n\r\n\r\n  const handleInputPurchasedPriceChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputPurchasedPrice.current.value = formattedValue;\r\n\r\n  };\r\n\r\n\r\n  const handleInputFobJpyChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Check if the numeric value starts with 0\r\n    if (numericValue.startsWith('0')) {\r\n      // Handle the case when the value starts with 0\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n      return;\r\n    }\r\n\r\n    // Truncate the numeric value to a maximum of 9 digits\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n    if (formattedValue !== '') {\r\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\r\n\r\n      if (!isNaN(multipliedValue)) {\r\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\r\n      } else {\r\n        // Handle the case when the multipliedValue is NaN\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: '' });\r\n      }\r\n    } else {\r\n      // Handle the case when formattedValue is empty\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleInputFobJpyChange(inputFobJpy.current?.value);\r\n  }, [jpyToUsd]);\r\n\r\n\r\n\r\n  const handleAddMakeTextChange = () => {\r\n    const newText = textAreaAddMake.current?.value?.toUpperCase();\r\n    textAreaAddMake.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n\r\n  const handleAddTransmissionTextChange = () => {\r\n    const textAreaValue = textAreaAddTransmission.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddTransmission.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddFuelTextChange = () => {\r\n    const textAreaValue = textAreaAddFuel.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddFuel.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddPortTextChange = () => {\r\n    const textAreaValue = textAreaAddPort.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPort.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPortCodeTextChange = () => {\r\n    const newText = textAreaAddPortCode.current?.value?.toUpperCase();\r\n    textAreaAddPortCode.current?.setNativeProps({ text: newText });\r\n    // Remove any non-numeric characters\r\n\r\n\r\n  };\r\n\r\n  const handleAddSalesTextChange = () => {\r\n    const textAreaValue = textAreaAddSales.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddSales.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddSalesCodeTextChange = () => {\r\n    const newText = textAreaAddSalesCode.current?.value?.toUpperCase();\r\n    textAreaAddSalesCode.current?.setNativeProps({ text: newText });\r\n  };\r\n\r\n  const handleAddBuyerTextChange = () => {\r\n    const textAreaValue = textAreaAddBuyer.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddBuyer.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddBuyerCodeTextChange = (text) => {\r\n\r\n    const numericValue = text.replace(/[^0-9\\n]/g, '');\r\n\r\n    // Update the value of the textarea while preventing new lines\r\n    textAreaAddBuyerCode.current.value = numericValue;\r\n  };\r\n\r\n  const handleAddDriveTypeTextChange = () => {\r\n    const textAreaValue = textAreaAddDriveType.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddDriveType.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddBodyTypeTextChange = () => {\r\n    const textAreaValue = textAreaAddBodyType.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddBodyType.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddExteriorColorTextChange = () => {\r\n    const textAreaValue = textAreaAddExteriorColor.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExteriorColor.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddExpenseNameTextChange = () => {\r\n    const textAreaValue = textAreaAddExpenseName.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPaidToTextChange = () => {\r\n    const textAreaValue = textAreaAddPaidTo.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleInputRefNumChange = () => {\r\n    const newText = inputRefNum.current?.value?.toUpperCase();\r\n    inputRefNum.current?.setNativeProps({ text: newText });\r\n\r\n    setRefNumFromSelects();\r\n  };\r\n\r\n  const handleInputChassisChange = () => {\r\n    const newText = inputChassis.current?.value?.toUpperCase();\r\n    inputChassis.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n  const handleInputModelCodeChange = () => {\r\n    const newText = inputModelCode.current?.value?.toUpperCase();\r\n    inputModelCode.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n  const handleInputEngineCodeChange = () => {\r\n    const newText = inputEngineCode.current?.value?.toUpperCase();\r\n    inputEngineCode.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n\r\n\r\n  const handleInputEngineDisChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 5);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputEngineDis.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputExpenseAmountChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputExpenseAmount.current.value = formattedValue;\r\n  };\r\n\r\n\r\n  const handleInputMileageChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputMileage.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputNumOfSeatsChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 3);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputNumOfSeats.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputDoorsChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 2);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputDoors.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputDimensionLengthChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionLength.current.value = formattedValue;\r\n\r\n    calculateCubicMeters();\r\n  };\r\n\r\n\r\n  const handleInputDimensionWidthChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionWidth.current.value = formattedValue;\r\n\r\n    calculateCubicMeters();\r\n  };\r\n\r\n  const handleInputDimensionHeightChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionHeight.current.value = formattedValue;\r\n    calculateCubicMeters();\r\n\r\n  };\r\n\r\n  const handleInputDimensionCubicMetersChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputDimensionCubicMeters.current.value = formattedValue;\r\n    calculateCubicMeters();\r\n  };\r\n\r\n  const handleInputWeightChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 5);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputWeight.current.value = formattedValue;\r\n  };\r\n\r\n  const monthNumbers = [\r\n    '01',\r\n    '02',\r\n    '03',\r\n    '04',\r\n    '05',\r\n    '06',\r\n    '07',\r\n    '08',\r\n    '09',\r\n    '10',\r\n    '11',\r\n    '12'\r\n  ];\r\n\r\n  const calculateCubicMeters = () => {\r\n    const length = parseFloat(inputDimensionLength.current?.value?.replace(/,/g, '')) || 0;\r\n    const width = parseFloat(inputDimensionWidth.current?.value?.replace(/,/g, '')) || 0;\r\n    const height = parseFloat(inputDimensionHeight.current?.value?.replace(/,/g, '')) || 0;\r\n\r\n    const result = (length * width * height) / 1000000;\r\n    const resultFormatted = result.toFixed(2);\r\n\r\n    // setCubicMeters(resultFormatted);\r\n    inputDimensionCubicMeters.current.setNativeProps({ text: resultFormatted });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   let makeValue = makeVariable.text;\r\n\r\n  //   if (makeValue !== '') {\r\n  //     setCarNameFromSelects();\r\n  //   }\r\n\r\n  // }, [modelData]);\r\n\r\n\r\n  const setRefNumFromSelects = () => {\r\n    let portValue = portVariable.id;\r\n    let stockIDValue = inputStockIDNumber.current?.value;\r\n    let salesValue = salesVariable.id;\r\n    let buyerValue = buyerVariable.id;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${portValue}${stockIDValue}${salesValue}-${buyerValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    // inputCarName.current.setNativeProps({ text: carName });\r\n    inputRefNum.current.setNativeProps({ text: carName });\r\n    referenceNumberVariable.text = carName;\r\n    // console.log(carName);\r\n  };\r\n\r\n\r\n  const setCarNameFromSelects = () => {\r\n    let regYearValue = regYearVariable.text;\r\n    let makeValue = makeVariable.text;\r\n    let modelValue = modelVariable.text;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    inputCarName.current.setNativeProps({ text: carName });\r\n\r\n  };\r\n\r\n  const setCarNameFromSelectsModel = () => {\r\n    let regYearValue = regYearVariable.text;\r\n    let makeValue = makeVariable.text;\r\n    let modelValue = modelVariable.text;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    inputCarName.current.setNativeProps({ text: carName });\r\n\r\n\r\n  };\r\n  // const [selectedMake, setSelectedMake] = useState();\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n\r\n\r\n  // }, []);\r\n\r\n  const clearSelect = () => {\r\n    // setModelData([]);\r\n\r\n    // if (makeVariable.text !== '') {\r\n    //   dispatch(setModelData([]));\r\n    // }\r\n\r\n\r\n\r\n    selectMakeRef.current.reset();\r\n    selectModelRef.current.reset();\r\n    selectRegYear.current.reset();\r\n    selectRegMonth.current.reset();\r\n    selectSteering.current.reset();\r\n    selectTransmission.current.reset();\r\n    selectExteriorColor.current.reset();\r\n    selectFuel.current.reset();\r\n    selectPort.current.reset();\r\n    selectSales.current.reset();\r\n    selectBuyer.current.reset();\r\n    selectDriveType.current.reset();\r\n    selectBodyType.current.reset();\r\n    selectStockStatus.current.reset();\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n\r\n\r\n  const ClearModalButton = ({ handleClear }) => {\r\n    const [modalClearVisible, setModalClearVisible] = useState(false);\r\n\r\n    const handleModalClearOpen = useCallback(() => {\r\n      setModalClearVisible(true);\r\n\r\n\r\n      // selectMakeRef.current.selectIndex(makeData.indexOf('TOYOTA'));\r\n    }, []);\r\n\r\n    const handleModalClearClose = useCallback(() => {\r\n      setModalClearVisible(false);\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          bgColor={'#D9D9D9'}\r\n          onPress={handleModalClearOpen}\r\n          _text={{ color: 'muted.500' }}\r\n          _hover={{ bgColor: '#f0eded' }}\r\n        >\r\n          Clear\r\n        </Button>\r\n\r\n        <Modal isOpen={modalClearVisible} onClose={handleModalClearClose}>\r\n          <Modal.Content bgColor={'amber.100'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n              <Text color={'#102A43'} bold>\r\n                Clear\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'amber.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'amber.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'amber.600'} bold>\r\n                  Warning!\r\n                </Text>\r\n                <Text color={'amber.600'}>\r\n                  Are you sure you want to clear all inputs? This action will clear all the fields and cannot be undone!\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalClearClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  onPress={() => {\r\n                    handleModalClearClose();\r\n                    handleClear();\r\n                  }}\r\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                  Clear\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  const SelectFeaturesButton = () => {\r\n    const [featuresModalVisible, setFeaturesModalVisible] = useState(false);\r\n    const [featuresClearModalVisible, setClearModalVisible] = useState(false);\r\n\r\n    const [key, setKey] = useState(resetKey);\r\n\r\n\r\n    const handleModalSelectFeaturesOpen = () => {\r\n      setFeaturesModalVisible(true);\r\n    };\r\n\r\n    const handleModalSelectFeaturesClose = () => {\r\n      setFeaturesModalVisible(false);\r\n    };\r\n\r\n    const handleClearModalOpen = () => {\r\n      setClearModalVisible(true);\r\n    };\r\n\r\n    const handleClearModalClose = () => {\r\n      setClearModalVisible(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          onPress={handleModalSelectFeaturesOpen}\r\n          variant={'outline'}\r\n          _text={{ color: 'black', }}\r\n          leftIcon={<MaterialCommunityIcons name=\"car-info\" size={20} color=\"black\" />}>\r\n\r\n          Select Features\r\n        </Button>\r\n\r\n        <Modal\r\n          isOpen={featuresModalVisible}\r\n          onClose={handleModalSelectFeaturesClose} size={'full'} useRNModal>\r\n          <Modal.Content bgColor={'white'} w={'80%'} h={'80%'}>\r\n            <Modal.CloseButton />\r\n            {/* <Modal.Header borderBottomWidth={0} bgColor={'white'}>\r\n              <Text color={'#102A43'} bold>\r\n                Features\r\n              </Text>\r\n            </Modal.Header> */}\r\n            {/* <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'white'}\r\n              flex={1}\r\n              h={'100%'}\r\n            > */}\r\n            <ScrollView flex={1} flexDirection={'column'} margin={10}>\r\n\r\n              {/* <Box bgColor={'#7b9cff'} borderColor={isNoFeaturesSelected} borderWidth={'1'} marginTop={1} ref={featureBoxRef}>\r\n                  <Text color={'white'} bold fontSize={20} width={'full'}> Features</Text>\r\n                </Box> */}\r\n\r\n              <Box>\r\n                <Text color={'black'} bold fontSize={16} width={'full'}> Safety System</Text>\r\n              </Box>\r\n\r\n\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SafetySystemAnBrSy} key={`SafetySystemAnBrSy-${resetKey}`} label=\"Anti-Lock Braking System (ABS)\" onChange={(checked) => featuresState.SafetySystemAnBrSy = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemDrAi} key={`SafetySystemDrAi-${resetKey}`} label=\"Driver Airbag\" onChange={(checked) => featuresState.SafetySystemDrAi = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemPaAi} key={`SafetySystemPaAi-${resetKey}`} label=\"Passenger Airbag\" onChange={(checked) => featuresState.SafetySystemPaAi = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemSiAi} key={`SafetySystemSiAi-${resetKey}`} label=\"Side Airbag\" onChange={(checked) => featuresState.SafetySystemSiAi = checked} />\r\n              </Box>\r\n\r\n              <Box>\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Comfort</Text>\r\n              </Box>\r\n\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortAiCoFr} key={`ComfortAiCoFr-${resetKey}`} label=\"Air Conditioner (Front)\" onChange={(checked) => featuresState.ComfortAiCoFr = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAiCoRe} key={`ComfortAiCoRe-${resetKey}`} label=\"Air Conditioner (Rear)\" onChange={(checked) => featuresState.ComfortAiCoRe = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAMFMRa} key={`ComfortAMFMRa-${resetKey}`} label=\"AM/FM Radio\" onChange={(checked) => featuresState.ComfortAMFMRa = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAMFMSt} key={`ComfortAMFMSt-${resetKey}`} label=\"AM/FM Stereo\" onChange={(checked) => featuresState.ComfortAMFMSt = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortCDPl} key={`ComfortCDPl-${resetKey}`} label=\"CD Player\" onChange={(checked) => featuresState.ComfortCDPl = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortCDCh} key={`ComfortCDCh-${resetKey}`} label=\"CD Changer\" onChange={(checked) => featuresState.ComfortCDCh = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortCrSpCo} key={`ComfortCrSpCo-${resetKey}`} label=\"Cruise Speed Control\" onChange={(checked) => featuresState.ComfortCrSpCo = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortDiSp} key={`ComfortDiSp-${resetKey}`} label=\"Digital Speedometer\" onChange={(checked) => featuresState.ComfortDiSp = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortDVDPl} key={`ComfortDVDPl-${resetKey}`} label=\"DVD Player\" onChange={(checked) => featuresState.ComfortDVDPl = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortHDD} key={`ComfortHDD-${resetKey}`} label=\"Hard Disk Drive\" onChange={(checked) => featuresState.ComfortHDD = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortNaSyGPS} key={`ComfortNaSyGPS-${resetKey}`} label=\"Navigation System (GPS)\" onChange={(checked) => featuresState.ComfortNaSyGPS = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortPoSt} key={`ComfortPoSt-${resetKey}`} label=\"Power Steering\" onChange={(checked) => featuresState.ComfortPoSt = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortPrAuSy} key={`ComfortPrAuSy-${resetKey}`} label=\"Premium Audio System\" onChange={(checked) => featuresState.ComfortPrAuSy = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortReKeSy} key={`ComfortReKeSy-${resetKey}`} label=\"Remote Keyless System\" onChange={(checked) => featuresState.ComfortReKeSy = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortTiStWh} key={`ComfortTiStWh-${resetKey}`} label=\"Tilt Steering Wheel\" onChange={(checked) => featuresState.ComfortTiStWh = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n\r\n              <Box>\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Interior</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorLeSe} key={`InteriorLeSe-${resetKey}`} label=\"Leather Seats\" onChange={(checked) => featuresState.InteriorLeSe = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoDoLo} key={`InteriorPoDoLo-${resetKey}`} label=\"Power Door Locks\" onChange={(checked) => featuresState.InteriorPoDoLo = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoMi} key={`InteriorPoMi-${resetKey}`} label=\"Power Mirrors\" onChange={(checked) => featuresState.InteriorPoMi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoSe} key={`InteriorPoSe-${resetKey}`} label=\"Power Seats\" onChange={(checked) => featuresState.InteriorPoSe = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorPoWi} key={`InteriorPoWi-${resetKey}`} label=\"Power Windows\" onChange={(checked) => featuresState.InteriorPoWi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorReWiDe} key={`InteriorReWiDe-${resetKey}`} label=\"Rear Window Defroster\" onChange={(checked) => featuresState.InteriorReWiDe = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorReWiWi} key={`InteriorReWiWi-${resetKey}`} label=\"Rear Window Wiper\" onChange={(checked) => featuresState.InteriorReWiWi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorThRoSe} key={`InteriorThRoSe-${resetKey}`} label=\"Third Row Seats\" onChange={(checked) => featuresState.InteriorThRoSe = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorTiGl} key={`InteriorTiGl-${resetKey}`} label=\"Tinted Glasses\" onChange={(checked) => featuresState.InteriorTiGl = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n              <Box >\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Exterior</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ExteriorAlWh} key={`ExteriorAlWh-${resetKey}`} label=\"Alloy Wheels\" onChange={(checked) => featuresState.ExteriorAlWh = checked} />\r\n                <CheckBoxButton variable={featuresState.ExteriorPoSlDo} key={`ExteriorPoSlDo-${resetKey}`} label=\"Power Sliding Door\" onChange={(checked) => featuresState.ExteriorPoSlDo = checked} />\r\n                <CheckBoxButton variable={featuresState.ExteriorSuRo} key={`ExteriorSuRo-${resetKey}`} label=\"Sunroof\" onChange={(checked) => featuresState.ExteriorSuRo = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n              <Box >\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Selling Points</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsCuWh} key={`SellingPointsCuWh-${resetKey}`} label=\"Customized Wheels\" onChange={(checked) => featuresState.SellingPointsCuWh = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsFuLo} key={`SellingPointsFuLo-${resetKey}`} label=\"Fully Loaded\" onChange={(checked) => featuresState.SellingPointsFuLo = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsMaHiAv} key={`SellingPointsMaHiAv-${resetKey}`} label=\"Maintenance History Available\" onChange={(checked) => featuresState.SellingPointsMaHiAv = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsBrNeTi} key={`SellingPointsBrNeTi-${resetKey}`} label=\"Brand New Tires\" onChange={(checked) => featuresState.SellingPointsBrNeTi = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsNoAcHi} key={`SellingPointsNoAcHi-${resetKey}`} label=\"No Accident History\" onChange={(checked) => featuresState.SellingPointsNoAcHi = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsNoSmPrOw} key={`SellingPointsNoSmPrOw-${resetKey}`} label=\"Non-Smoking Previous Owner\" onChange={(checked) => featuresState.SellingPointsNoSmPrOw = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsOnOwHi} key={`SellingPointsOnOwHi-${resetKey}`} label=\"One Owner History\" onChange={(checked) => featuresState.SellingPointsOnOwHi = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsPeRaTi} key={`SellingPointsPeRaTi-${resetKey}`} label=\"Performance-rated Tires\" onChange={(checked) => featuresState.SellingPointsPeRaTi = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsReBo} key={`SellingPointsReBo-${resetKey}`} label=\"Repainted Body\" onChange={(checked) => featuresState.SellingPointsReBo = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsTuEn} key={`SellingPointsTuEn-${resetKey}`} label=\"Turbo Engine\" onChange={(checked) => featuresState.SellingPointsTuEn = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsUpAuSy} key={`SellingPointsUpAuSy-${resetKey}`} label=\"Upgraded Audio System\" onChange={(checked) => featuresState.SellingPointsUpAuSy = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n            </ScrollView>\r\n            <HStack space={5} width={'full'} justifyContent={'space-between'}>\r\n              <Button\r\n                onPress={() => {\r\n                  handleClearModalOpen();\r\n                }}\r\n                colorScheme={'gray'}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n                margin={1}\r\n                flex={1}\r\n              >\r\n                Clear\r\n              </Button>\r\n              <Box flex={2} />\r\n              <Button\r\n                onPress={handleModalSelectFeaturesClose}\r\n                colorScheme={'primary'}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n                margin={1}\r\n                flex={1}\r\n              >\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n            {/* </Modal.Body> */}\r\n            {/* <Modal.Footer borderTopWidth={0} bgColor={'white'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalSelectFeaturesClose}\r\n                  colorScheme={'warmGray'}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer> */}\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n        <Modal isOpen={featuresClearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n          <Modal.Content bgColor={'amber.100'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n              <Text color={'#102A43'} bold>\r\n                Clear\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'amber.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'amber.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'amber.600'} bold>\r\n                  Warning!\r\n                </Text>\r\n                <Text color={'amber.600'}>\r\n                  Are you sure you want to clear?\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleClearModalClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  onPress={() => {\r\n                    handleClearToggleButton();\r\n                    setKey(resetKey++);\r\n                    handleClearModalClose();\r\n                  }}\r\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                  Clear\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleClearImagesExtra = () => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n    dispatch(setDeleteImageVisible(true));\r\n  };\r\n\r\n  const UploadModalButton = ({ handleUpload }) => {\r\n    const [modalUploadVisible, setModalUploadVisible] = useState(false);\r\n    const handleModalUploadOpen = () => {\r\n      setModalUploadVisible(true);\r\n    };\r\n\r\n    const handleModalUploadClose = () => {\r\n      setModalUploadVisible(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          onPress={handleModalUploadOpen}\r\n          bgColor={'#7B9CFF'}\r\n          _hover={{ bgColor: '#517cfc', }}>\r\n          Upload/Save\r\n        </Button>\r\n\r\n        <Modal isOpen={modalUploadVisible} onClose={handleModalUploadClose}>\r\n          <Modal.Content bgColor={'white'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'white'}>\r\n              <Text color={'#102A43'} bold>\r\n                Upload/Save\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'gray.300'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'black'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'black'} bold>\r\n                  Attention!\r\n                </Text>\r\n                <Text color={'black'}>\r\n                  Are you sure you want to upload/save? This action will upload a new vehicle to the list and can be edited later.\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'white'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalUploadClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button isLoading={isLoading} onPress={async () => {\r\n                  await handleUpload();\r\n                  handleModalUploadClose()\r\n                }}\r\n                  flex={1} size={'sm'} colorScheme={'primary'} borderRadius={5}>\r\n                  Upload/Save\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#0642F4'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#0642F4'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const handleSuccessModalClose = useCallback(() => {\r\n    dispatch(setIsSuccessModalOpen(false));\r\n  }, []);\r\n\r\n  const handleUpdateSuccessModalClose = useCallback(() => {\r\n    dispatch(setIsUpdateSuccessModalOpen(false));\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  const handleSetBordersWhite = () => {\r\n\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n\r\n  };\r\n  return (\r\n\r\n\r\n\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#0642f4'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={0}\r\n          borderBottomColor={'cyan.500'} >\r\n\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen} />\r\n\r\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          {/* {showDrawerIcon && <MobileViewDrawer\r\n            selectedScreen={selectedScreen}\r\n          />} */}\r\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo2,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          <View style={{ alignItems: 'center', flex: 1 }}>\r\n            <QRCodeScanner />\r\n          </View>\r\n\r\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n          {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n            <Flex direction=\"row-reverse\">\r\n              <Popover isOpen={showNamePopover} trigger={triggerProps => {\r\n                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                  <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                </Text>;\r\n              }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\r\n                <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                 \r\n                  <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                    <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                      Logout\r\n                    </Button>\r\n                  </Popover.Body>\r\n                </Popover.Content>\r\n              </Popover>\r\n            </Flex>\r\n          </Box> */}\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <Box flex={[1]} flexDirection=\"row\" >\r\n\r\n\r\n          {/* Main Content */}\r\n\r\n          <Box flex={1} flexGrow={1} minHeight={0}>\r\n            {/* Main Content Content */}\r\n\r\n\r\n\r\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n              <PresenceTransition visible={true} initial={{\r\n                opacity: 0,\r\n              }} animate={{\r\n                opacity: 1,\r\n                transition: {\r\n                  duration: 250\r\n                }\r\n              }}>\r\n\r\n\r\n                <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" flexDir={'column'}>\r\n\r\n\r\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\r\n\r\n                  </Box>\r\n\r\n\r\n\r\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} >\r\n\r\n\r\n                    <Box flexDir={['column', 'column', 'column', 'column', 'row', 'row']} height={'full'} flex={1} display={screenWidth < 1280 ? 'none' : 'flex'}>\r\n                      <Box flexDir={'row'} flex={1}>\r\n                        <Box margin={2} flex={1} flexDir={['column']} >\r\n\r\n\r\n                          <Box borderColor={'white'} borderWidth={1} ref={inputVehicleBoxRef}>\r\n\r\n                            <Box flex={1} bgColor={'#7b9cff'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Text color={'white'} marginLeft={1} bold fontSize={20} width={'full'}>Input Vehicle Specification</Text>\r\n                            </Box>\r\n\r\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                            <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                            <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={() => buttonSearchRef.current?.handlePress()} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\r\n                              InputRightElement={\r\n                                <StockIDNumber />\r\n                              }\r\n                            />\r\n                            </Box>\r\n\r\n\r\n                          </Box> */}\r\n\r\n                            <StockIDAndMakeAndModel\r\n                              selectStockStatus={selectStockStatus}\r\n                              handleSetBordersWhite={handleSetBordersWhite}\r\n                              handleClearIfError={handleClearIfError}\r\n                              handleClearToggleButton={handleClearToggleButton}\r\n                              inputFobUsd={inputFobUsd}\r\n                              years={years}\r\n                              monthNumbers={monthNumbers}\r\n                              portData={portData}\r\n                              salesData={salesData}\r\n                              buyerData={buyerData}\r\n                              steeringData={steeringData}\r\n                              transmissionData={transmissionData}\r\n                              exteriorColorData={exteriorColorData}\r\n                              fuelData={fuelData}\r\n                              driveTypeData={driveTypeData}\r\n                              bodyTypeData={bodyTypeData}\r\n                              selectPort={selectPort}\r\n                              selectSales={selectSales}\r\n                              selectBuyer={selectBuyer}\r\n                              inputRefNum={inputRefNum}\r\n                              inputChassis={inputChassis}\r\n                              inputModelCode={inputModelCode}\r\n                              inputEngineCode={inputEngineCode}\r\n                              inputEngineDis={inputEngineDis}\r\n                              selectSteering={selectSteering}\r\n                              inputMileage={inputMileage}\r\n                              selectTransmission={selectTransmission}\r\n                              selectExteriorColor={selectExteriorColor}\r\n                              inputNumOfSeats={inputNumOfSeats}\r\n                              inputDoors={inputDoors}\r\n                              inputPurchasedPrice={inputPurchasedPrice}\r\n                              selectFuel={selectFuel}\r\n                              inputDimensionLength={inputDimensionLength}\r\n                              inputDimensionWidth={inputDimensionWidth}\r\n                              inputDimensionHeight={inputDimensionHeight}\r\n                              inputDimensionCubicMeters={inputDimensionCubicMeters}\r\n                              selectDriveType={selectDriveType}\r\n                              inputWeight={inputWeight}\r\n                              selectBodyType={selectBodyType}\r\n                              inputCarName={inputCarName}\r\n                              inputCarDesc={inputCarDesc}\r\n                              inputFobJpy={inputFobJpy}\r\n                              selectRegYear={selectRegYear}\r\n                              selectRegMonth={selectRegMonth}\r\n                              setRefNumFromSelects={setRefNumFromSelects}\r\n                              inputStockIDNumber={inputStockIDNumber}\r\n                              stockIDNumError={stockIDNumError}\r\n                              selectMakeForModelRef={selectMakeForModelRef}\r\n                              textAreaAddModel={textAreaAddModel}\r\n                              selectMakeForAddModelRef={selectMakeForAddModelRef}\r\n                              handleAddMakeTextChange={handleAddMakeTextChange}\r\n                              textAreaAddMake={textAreaAddMake}\r\n                              modelError={modelError}\r\n                              // makeData={makeData}\r\n                              makeError={makeError}\r\n                              selectMakeBoxRef={selectMakeBoxRef}\r\n                              selectMakeRef={selectMakeRef}\r\n                              selectModelRef={selectModelRef}\r\n                              selectModelBoxRef={selectModelBoxRef}\r\n                              setCarNameFromSelects={setCarNameFromSelects}\r\n                              setCarNameFromSelectsModel={setCarNameFromSelectsModel}\r\n                              inputCarNotes={inputCarNotes}\r\n                              inputCarMemo={inputCarMemo}\r\n                              purchasedPriceError={purchasedPriceError}\r\n                              handleInputPurchasedPriceChange={handleInputPurchasedPriceChange}\r\n                            />\r\n\r\n\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={2} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Year & Month</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box ref={selectRegYearBoxRef} bgColor={'white'} flex={1} borderColor={regYearError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectRegYear}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={years}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    regYearVariable.text = selectedItem;\r\n                                    // console.log(regYearVariable.text);\r\n                                    setCarNameFromSelects()\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Year --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\"Year\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n\r\n                              </Box>\r\n                              <Box ref={selectRegMonthBoxRef} bgColor={'white'} flex={1} borderColor={regMonthError} borderWidth={1}>\r\n\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectRegMonth}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={monthNumbers}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    regMonthVariable.text = selectedItem;\r\n                                    // console.log(regMonthVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"--Choose Month--\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\"Month\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    outlineStyle: 'none',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Port</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Port'}\r\n                                  handleAddTextChange={handleAddPortTextChange}\r\n                                  handleAddCodeTextChange={handleAddPortCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddPortCode}\r\n                                  textAreaAdd={textAreaAddPort}\r\n                                  title='Port'\r\n                                  dataName={'port'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Port\"\r\n                                  data={portData} />\r\n                              </Box>\r\n                              <Box ref={selectPortBoxRef} bgColor={'white'} flex={1} borderColor={portError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectPort}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={portData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    portVariable.text = selectedItem.name;\r\n                                    portVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Port --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Port\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Sales In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Sales'}\r\n                                  handleAddTextChange={handleAddSalesTextChange}\r\n                                  handleAddCodeTextChange={handleAddSalesCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddSalesCode}\r\n                                  textAreaAdd={textAreaAddSales}\r\n                                  title='Sales'\r\n                                  dataName={'sales'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Sales\"\r\n                                  data={salesData} />\r\n                              </Box>\r\n                              <Box ref={selectSalesBoxRef} bgColor={'white'} flex={1} borderColor={salesError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectSales}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={salesData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    salesVariable.text = selectedItem.name;\r\n                                    salesVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Sales --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Sales\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Buyer In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalBuyerOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Buyer'}\r\n                                  handleAddTextChange={handleAddBuyerTextChange}\r\n                                  handleAddCodeTextChange={handleAddBuyerCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddBuyerCode}\r\n                                  textAreaAdd={textAreaAddBuyer}\r\n                                  title='Buyer'\r\n                                  dataName={'buyer'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add buyer\"\r\n                                  data={buyerData} />\r\n                              </Box>\r\n                              <Box ref={selectBuyerBoxRef} bgColor={'white'} flex={1} borderColor={buyerError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectBuyer}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={buyerData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    buyerVariable.text = selectedItem.name;\r\n                                    buyerVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Buyer --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Buyer\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n\r\n\r\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                            <Box bgColor={'#8096D7'} flex={1} justifyContent=\"center\" alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Month</Text></Box>\r\n                            <Box bgColor={'white'} flex={1}><Input placeholder=\"Registration Month\" /></Box>\r\n                          </Box> */}\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Reference Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={refNumError} borderWidth={1}><Input defaultValue=\"\" ref={inputRefNum} onChangeText={handleInputRefNumChange} placeholder=\" Reference Number\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Chassis / Frame Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={chassisError} borderWidth={1}><Input defaultValue=\"\" ref={inputChassis} onChangeText={handleInputChassisChange} placeholder=\" Chassis / Frame Number\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Model Code</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={modelCodeError} borderWidth={1}><Input defaultValue=\"\" ref={inputModelCode} onChangeText={handleInputModelCodeChange} placeholder=\" Model Code\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Code</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}><Input defaultValue=\"\" ref={inputEngineCode} onChangeText={handleInputEngineCodeChange} placeholder=\" Engine Code\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Displacement</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={engineDisError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputEngineDis} onChangeText={handleInputEngineDisChange} flex={1} placeholder=\" Engine Displacement\" /><InputRightAddon children={\"cc\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Steering</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}></Box>\r\n                              </Box>\r\n                              <Box ref={selectSteeringBoxRef} bgColor={'white'} flex={1} borderColor={steeringError} borderWidth={1}>\r\n                                {/* <Select key={keySelectSteering} ref={selectSteering} accessibilityLabel=\"Choose Steering\" placeholder=\"Choose Steering\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                <Select.Item key={'Left'} label={'Left'} value={'Left'} />\r\n                                <Select.Item key={'Right'} label={'Right'} value={'Right'} />\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectSteering}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={steeringData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    steeringVariable.text = selectedItem;\r\n                                    // console.log(steeringVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Steering --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Steering\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} bgColor={'#8096D7'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Mileage</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={mileageError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputMileage} onChangeText={handleInputMileageChange} flex={1} placeholder=\" Mileage\" /><InputRightAddon children={\"km\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={1} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Transmission</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalTransmissionOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal docName={'Transmission'} handleAddTextChange={handleAddTransmissionTextChange} textAreaAdd={textAreaAddTransmission} title='Transmission' dataName={'transmission'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Transmission\" data={transmissionData} />\r\n                              </Box>\r\n                              <Box ref={selectTransmissionBoxRef} bgColor={'white'} flex={1} borderColor={transmissionError} borderWidth={1}>\r\n                                {/* <Select key={keySelectTransmission} accessibilityLabel=\"Choose Transmission\" placeholder=\"Choose Transmission\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {transmissionData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectTransmission}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={transmissionData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    transmissionVariable.text = selectedItem;\r\n                                    // console.log(transmissionVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Transmission --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Transmission\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Exterior Color</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalExteriorColorOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='ExteriorColor'\r\n                                  handleAddTextChange={handleAddExteriorColorTextChange}\r\n                                  textAreaAdd={textAreaAddExteriorColor}\r\n                                  title='Exterior Color'\r\n                                  dataName={'exteriorColor'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Transmission\"\r\n                                  data={transmissionData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectExteriorColorBoxRef} bgColor={'white'} flex={1} borderColor={exteriorColoError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectExteriorColor}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={exteriorColorData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    exteriorColorVariable.text = selectedItem;\r\n                                    // console.log(exteriorColorVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Exterior Color --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Exterior Color\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Number of Seats</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={numOfSeatsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputNumOfSeats} onChangeText={handleInputNumOfSeatsChange} placeholder=\" Number of Seats\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Doors</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={doorsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDoors} onChangeText={handleInputDoorsChange} placeholder=\" Doors\" /></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Fuel</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalFuelOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='Fuel'\r\n                                  handleAddTextChange={handleAddFuelTextChange}\r\n                                  textAreaAdd={textAreaAddFuel}\r\n                                  title='Fuel'\r\n                                  dataName={'fuel'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Fuel\"\r\n                                  data={fuelData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectFuelBoxRef} bgColor={'white'} flex={1} borderColor={fuelError} borderWidth={1}>\r\n                                {/* <Select key={keySelectFuel} accessibilityLabel=\"Choose Fuel\" placeholder=\"Choose Fuel\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {fuelData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectFuel}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={fuelData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    fuelVariable.text = selectedItem;\r\n                                    // console.log(fuelVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Fuel --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Fuel\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} alignSelf={'center'} flex={[1, 1, 1, 1, 2, 2]} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Dimension</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionLengthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionLength} onChangeText={handleInputDimensionLengthChange} flex={1} placeholder=\"Length\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionWidthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionWidth} onChangeText={handleInputDimensionWidthChange} flex={1} placeholder=\"Width\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionHeightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionHeight} onChangeText={handleInputDimensionHeightChange} flex={1} placeholder=\"Height\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1}><InputGroup><Input keyboardType=\"numeric\" ref={inputDimensionCubicMeters} defaultValue=\"0.00\" onChangeText={handleInputDimensionCubicMetersChange} bgColor={'muted.100'} disabled editable={false} flex={1} placeholder=\"Cubic Meters\" /><InputRightAddon children={\"m³\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Drive Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalDriveTypeOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='DriveType'\r\n                                  handleAddTextChange={handleAddDriveTypeTextChange}\r\n                                  textAreaAdd={textAreaAddDriveType}\r\n                                  title='Drive Type'\r\n                                  dataName={'driveType'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Drive Type\"\r\n                                  data={driveTypeData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectDriveTypeBoxRef} bgColor={'white'} flex={1} borderColor={driveTypeError} borderWidth={1}>\r\n                                {/* <Select key={keySelectDriveType} accessibilityLabel=\"Choose Drive Type\" placeholder=\"Choose Drive Type\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {driveTypeData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectDriveType}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={driveTypeData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    driveTypeVariable.text = selectedItem;\r\n                                    // console.log(driveTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Drive Type --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Drive Type\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Weight</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={weightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" ref={inputWeight} keyboardType=\"numeric\" onChangeText={handleInputWeightChange} flex={1} placeholder=\" Weight\" /><InputRightAddon children={\"kg\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'0'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Body Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n                                <SortAndAddModal\r\n                                  docName='BodyType'\r\n                                  handleAddTextChange={handleAddBodyTypeTextChange}\r\n                                  textAreaAdd={textAreaAddBodyType}\r\n                                  title='Body Type'\r\n                                  dataName={'bodyType'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Body Type\"\r\n                                  data={bodyTypeData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectBodyTypeBoxRef} bgColor={'white'} flex={1} borderColor={bodyTypeError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectBodyType}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={bodyTypeData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    bodyTypeVariable.text = selectedItem;\r\n                                    // console.log(bodyTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Body Type --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Body Type\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Supply Chains Costs</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}>\r\n                                <SupplyChainsCosts\r\n                                  handleAddExpenseNameTextChange={handleAddExpenseNameTextChange}\r\n                                  textAreaAddExpenseName={textAreaAddExpenseName}\r\n                                  inputExpenseAmount={inputExpenseAmount}\r\n                                  handleInputExpenseAmountChange={handleInputExpenseAmountChange}\r\n                                  handleAddPaidToTextChange={handleAddPaidToTextChange}\r\n                                  paidToData={paidToData}\r\n                                  inputCarNotes={inputCarNotes}\r\n                                /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Select Features</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={isNoFeaturesSelected} borderWidth={1}><SelectFeaturesButton /></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock Status</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n                              </Box>\r\n                              <Box ref={selectStockStatusBoxRef} bgColor={'white'} flex={1} borderColor={stockStatusError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectStockStatus}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={stockStatusData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    stockStatusVariable.text = selectedItem;\r\n                                    // console.log(bodyTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Stock Status --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Stock Status\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n\r\n\r\n                          </Box>\r\n\r\n\r\n                        </Box>\r\n\r\n                      </Box>\r\n\r\n                      <br /> <br /> <br /> <br />\r\n\r\n                      <Box flex={1} bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\r\n                        {/*=============================================================== Add Image(s)===============================================================*/}\r\n                        <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\r\n\r\n                      </Box>\r\n\r\n                    </Box>\r\n\r\n                  </Box>\r\n\r\n                  <Box flex={1} margin={1} flexDirection={'column'} h={'full'} display={['none', 'none', 'none', 'none', 'flex', 'flex']}>\r\n                    <Box h={'full'} w={'full'}>\r\n\r\n                      <HStack flex={1}>\r\n                        <Input\r\n                          ref={inputCarName}\r\n                          borderColor={carNameError}\r\n                          placeholder=\"Car Name\" margin={1} bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} flex={1} />\r\n                        <HStack flex={1}>\r\n                          <InputGroup flex={1}>\r\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} children={\"Notes \"} />\r\n                            <Input flex={1} ref={inputCarNotes} borderColor={carNameError} placeholder=\"Note\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                          </InputGroup>\r\n                        </HStack>\r\n                      </HStack>\r\n\r\n                      <HStack flex={2}>\r\n                        <TextArea flex={1} ref={inputCarDesc} borderColor='muted.500' bgColor={'white'} placeholder=\"Car Description / Salespoint\" borderWidth={1} placeholderTextColor={'muted.400'} margin={1} />\r\n                        <HStack marginTop={1} flex={1}>\r\n                          <InputGroup flex={1}>\r\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} color={'white'} children={\"Memo\"} />\r\n                            <Input multiline flex={1} ref={inputCarMemo} borderColor={carNameError} placeholder=\"Memo\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                          </InputGroup>\r\n                        </HStack>\r\n                      </HStack>\r\n\r\n\r\n                      <HStack>\r\n                        <Input keyboardType=\"numeric\" flex={1} ref={inputFobJpy} onChangeText={handleInputFobJpyChange} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"FOB Price\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                        <Input disabled ref={inputFobUsd} flex={1} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"dollar\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"0\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                      </HStack>\r\n\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  <Box w={'full'} flexDir={'row'} margin={1} paddingBottom={10} paddingTop={10} display={screenWidth < 1280 ? 'none' : 'flex'}>\r\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#D9D9D9'} onPress={handleModalClearOpen} _text={{ color: 'muted.500', }} _hover={{ bgColor: '#f0eded', }}>Clear</Button> */}\r\n                    <ClearModalButton handleClear={handleClear} />\r\n                    <Button borderRadius={3} flex={1} bgColor={'#A6BCFE'} disabled></Button> <Button flex={1} bgColor={'#A6BCFE'} disabled></Button>\r\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#7B9CFF'} _hover={{ bgColor: '#517cfc', }}>Upload</Button> */}\r\n                    <UploadModalButton handleUpload={handleUpload} />\r\n\r\n                  </Box>\r\n\r\n                </Box>\r\n              </PresenceTransition>\r\n            </ScrollView>\r\n\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n\r\n      <LoadingModal />\r\n      {/* <Box\r\n        position=\"absolute\"\r\n        top={0}\r\n        bottom={0}\r\n        left={0}\r\n        right={0}\r\n        backgroundColor=\"rgba(0, 0, 0, 0.5)\"\r\n        flex={1}\r\n        display={isLoading ? '' : 'none'}\r\n      >\r\n        <Center flex={1}>\r\n          <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Spinner size=\"lg\" color=\"white\" />\r\n            <Text color={'white'}>Loading, please wait!</Text>\r\n          </Box>\r\n        </Center>\r\n      </Box> */}\r\n\r\n      <UpdateSuccessModal onClose={handleUpdateSuccessModalClose} headerText={'Vehicle Updated!'} bodyText={'Vehicle was successfully updated!'} />\r\n      <UploadSuccessModal onClose={handleSuccessModalClose} headerText={'Vehicle Added!'} bodyText={'Vehicle was successfully added! You can view it in the vehicle list.'} />\r\n    </NativeBaseProvider>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Flex,\r\n    HStack,\r\n    Icon,\r\n    Image as NativeImage,\r\n    Input,\r\n    Modal,\r\n    NativeBaseProvider,\r\n    Popover,\r\n    Spinner,\r\n    Stack,\r\n    Text,\r\n    VStack,\r\n    TextArea,\r\n    InputRightAddon,\r\n    InputGroup,\r\n    InputLeftAddon,\r\n    Select,\r\n    CheckIcon,\r\n    PresenceTransition,\r\n    CloseIcon,\r\n    ScrollView as ScrollViewNative,\r\n    Divider,\r\n    useDisclosure,\r\n    useDisclose,\r\n    FormControl,\r\n    Checkbox,\r\n    useToast,\r\n    Tooltip,\r\n    Progress,\r\n    Alert\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n    Dimensions,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    StyleSheet,\r\n    View,\r\n    PanResponder,\r\n    Animated,\r\n    Easing,\r\n    InputAccessoryView,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    TextInput,\r\n    Image as RNImage,\r\n    Pressable,\r\n    Linking,\r\n    Modal as RNModal,\r\n    Platform,\r\n    SafeAreaView,\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo,\r\n    FontAwesome5,\r\n    EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup, increment } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n    setVehicleListData,\r\n    setSupplyChainsCostsData,\r\n    setSelectedPaidTo,\r\n    setSelectedExpenseName,\r\n    setSupplyChainsCostsModalVisible,\r\n    setVehicleListSupplyChainsCostsData,\r\n    setDeleteImageVisible,\r\n    setSelectedImages,\r\n    setAddAnotherImages,\r\n    setIsAddPhotoVisible,\r\n    setUploadImagesModalVisible,\r\n    setUploadImagesButtonLoading,\r\n    setViewImagesModalVisible,\r\n    setViewImagesData,\r\n    setLoadingModalVisible,\r\n    setAddVehicleListData,\r\n    setEditVehicleModalVisible,\r\n    setFobPriceHistoryModalVisible,\r\n    setChatListData,\r\n    setChatListImageUrl,\r\n    setChatListLastVisible,\r\n    setLoadMoreLoading,\r\n    setNoMoreData,\r\n    setActiveChatId,\r\n    setChatListSearchText,\r\n    setChatMessagesData,\r\n    setChatMessageBoxLoading,\r\n    setSelectedChatData,\r\n    setReadByListModalVisible,\r\n    setLoadMoreMessagesLoading,\r\n    setNoMoreMessagesData,\r\n    setDeleteMessageTemplateVisible,\r\n    setInvoiceData,\r\n    setTransactionModalVisible,\r\n    setPreviewInvoiceVisible,\r\n    setSelectedCustomerData,\r\n    setPdfViewerModalVisible,\r\n    setSelectedFileUrl,\r\n    setIsLoading,\r\n    setLoginName,\r\n    setCarImageUrl,\r\n    setSelectedVehicleData,\r\n    setMessageTextInputValue,\r\n    setCustomInvoiceVisible,\r\n} from './redux/store';\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\nimport Hyperlink from 'react-native-hyperlink';\r\nimport { HmacSHA256, enc } from 'crypto-js';\r\nimport { AES } from 'crypto-js';\r\nimport { CRYPTO_KEY, CRYPTO_KEY_API } from '@env';\r\nimport { captureRef } from 'react-native-view-shot';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport QRCode from 'react-native-qrcode-svg';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { HashRouter as Router, Route, Routes, useNavigate, Navigate, useParams, useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'CHAT MESSAGES'\r\nlet globalLastVisible;\r\nlet globalMessagesLastVisible;\r\nlet globalSearchText = '';\r\nlet globalCustomerId = '';\r\nlet globalChatId = '';\r\nlet globalImageUrl = '';\r\nlet globalCustomerCarName = '';\r\nlet globalCustomerFirstName = '';\r\nlet globalCustomerLastName = '';\r\n\r\nlet globalAdditionalNameArray = [];\r\n\r\nlet globalAdditionalPriceArray = [];\r\n\r\nlet globalMessageTemplateSelectedTitle = '';\r\n\r\n// let userEmail = projectControlAuth.currentUser.email;\r\n\r\nlet formattedIssuingDate = ''; // Initialize the variable outside the conditional rendering block\r\nlet formattedDueDate = '';\r\n\r\nlet transactionModalTitle = '';\r\n\r\nlet transactionModalContentValue = 0;\r\n\r\nlet ip = '';\r\nlet ipCountry = '';\r\n\r\nlet globalInvoiceVariable = {\r\n    carData: {\r\n\r\n    },\r\n    cfs: '',\r\n    placeOfDelivery: '',\r\n    departureCountry: '',\r\n    departurePort: '',\r\n    salesPerson: '',\r\n\r\n    discharge: {\r\n        port: '',\r\n        country: '',\r\n    },\r\n\r\n    consignee: {\r\n        sameAsBuyer: null,\r\n        name: '',\r\n        address: '',\r\n        contactNumber: '',\r\n        fax: '',\r\n        email: '',\r\n    },\r\n\r\n    notifyParty: {\r\n        sameAsConsignee: null,\r\n        name: '',\r\n        address: '',\r\n        contactNumber: '',\r\n        fax: '',\r\n        email: '',\r\n    },\r\n\r\n    paymentDetails: {\r\n        incoterms: '',\r\n        inspectionIsChecked: null,\r\n        inspectionName: '',\r\n        warrantyIsCheck: null,\r\n        warrantyAmount: 0,\r\n        fobPrice: 0,\r\n        freightPrice: 0,\r\n        insurancePrice: 0,\r\n        inspectionPrice: 0,\r\n        totalAmount: 0,\r\n        additionalName: [],\r\n        additionalPrice: [],\r\n    },\r\n\r\n    bankInformations: {\r\n        dueDate: '',\r\n        issuingDate: '',\r\n        bankAccount: {\r\n\r\n        },\r\n        paymentTerms: '',\r\n        salesAgreement: '',\r\n    },\r\n\r\n}\r\n\r\nconst mobileViewBreakpoint = 1367;\r\n\r\nlet globalSelectedPDFUrl = '';\r\nlet globalSelectedFileType = '';\r\n\r\n\r\nconst firestore = getFirestore();\r\n\r\n\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n\r\n    const user = projectControlAuth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\nconst encryptDataAPI = (data) => {\r\n    try {\r\n        const secretKey = CRYPTO_KEY_API.toString();\r\n        return AES.encrypt(data, secretKey).toString();\r\n    } catch (error) {\r\n        console.error(\"Error encrypting data:\", error);\r\n        // useNavigate(`/devadmin/chat-messages`);\r\n\r\n        // Handle the encryption error or return a fallback\r\n        return null; // or handle it in another appropriate way\r\n    }\r\n};\r\n\r\nconst encryptData = (data) => {\r\n    try {\r\n        const secretKey = CRYPTO_KEY.toString();\r\n        return AES.encrypt(data, secretKey).toString();\r\n    } catch (error) {\r\n        console.error(\"Error encrypting data:\", error);\r\n        // useNavigate(`/devadmin/chat-messages`);\r\n\r\n        // Handle the encryption error or return a fallback\r\n        return null; // or handle it in another appropriate way\r\n    }\r\n};\r\n\r\nconst decryptData = (ciphertext) => {\r\n    try {\r\n        const secretKey = CRYPTO_KEY.toString();\r\n\r\n        const bytes = AES.decrypt(ciphertext, secretKey);\r\n        return bytes.toString(enc.Utf8);\r\n    } catch (error) {\r\n        console.error(\"Error decrypting data:\", error);\r\n        // useNavigate(`/devadmin/chat-messages`);\r\n\r\n        // Handle the decryption error or return a fallback\r\n        return null; // or handle it in another appropriate way\r\n    }\r\n};\r\n\r\n\r\nconst TimelineStatus = ({ data }) => {\r\n\r\n    const selectedChatData = useSelector(state => state.selectedChatData);\r\n\r\n    const changeIndex = data.findIndex(item => selectedChatData.stepIndicator.value < item.value);\r\n\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', paddingTop: 3, }}>\r\n            {/* Dots and individual line segments */}\r\n            {data.map((item, index) => (\r\n                <View key={index} style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                    {/* Dot */}\r\n                    <Tooltip label={item.title} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33' }}>\r\n                        <View style={{\r\n                            width: 20,\r\n                            height: 20,\r\n                            borderRadius: 10,\r\n                            backgroundColor: selectedChatData.stepIndicator.value < item.value ? '#C1C1C1' : '#abf7c7',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            {selectedChatData.stepIndicator.value < item.value ? (\r\n                                <FastImage\r\n                                    source={{\r\n                                        uri: require(`../../assets/chat_step/chat_step_${item.value}_off.png`),\r\n                                        priority: FastImage.priority.normal,\r\n                                    }}\r\n                                    style={{\r\n                                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                                        width: 15,\r\n                                        height: 15,\r\n                                        alignSelf: 'center',\r\n                                    }}\r\n                                    resizeMode={FastImage.resizeMode.stretch}\r\n                                />\r\n                            ) : (\r\n                                <FastImage\r\n                                    source={{\r\n                                        uri: require(`../../assets/chat_step/chat_step_${item.value}_on.png`),\r\n                                        priority: FastImage.priority.normal\r\n                                    }}\r\n                                    style={{\r\n                                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                                        width: 15,\r\n                                        height: 15,\r\n                                        alignSelf: 'center',\r\n                                    }}\r\n                                    resizeMode={FastImage.resizeMode.stretch}\r\n                                />\r\n                            )}\r\n\r\n                        </View>\r\n                    </Tooltip>\r\n                    {/* Line Segment (except for the last dot) */}\r\n                    {index < data.length - 1 && (\r\n                        <View style={{\r\n                            height: 3,\r\n                            width: 20, // Adjust the width to match the space between the dots\r\n                            backgroundColor: selectedChatData.stepIndicator.value <= item.value ? '#C1C1C1' : '#abf7c7',\r\n                        }} />\r\n                    )}\r\n                </View>\r\n            ))}\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nconst statusData = [\r\n    { title: 'Negotiation', value: 1 },\r\n    { title: 'Issued Proforma Invoice', value: 2 },\r\n    { title: 'Order Item', value: 3 },\r\n    { title: 'Payment Confirmed', value: 4 },\r\n    { title: 'Shipping Schedule', value: 5 },\r\n    { title: 'Documents', value: 6 },\r\n    { title: 'Vehicle Received', value: 7 },\r\n    // Add more events as needed\r\n];\r\n\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }} selectable={false}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n// const SkeletonChatListLayout = () => {\r\n//     return (\r\n//         <SkeletonPlaceholder>\r\n//             <SkeletonPlaceholder.Item flexDirection=\"row\" alignItems=\"center\" padding={12}>\r\n//                 {/* Placeholder for Image */}\r\n//                 <SkeletonPlaceholder.Item width={60} height={60} borderRadius={30} />\r\n\r\n//                 {/* Placeholder for Texts */}\r\n//                 <SkeletonPlaceholder.Item flex={1} marginLeft={20}>\r\n//                     {/* Date */}\r\n//                     <SkeletonPlaceholder.Item width={80} height={12} marginBottom={6} />\r\n//                     {/* Car Name */}\r\n//                     <SkeletonPlaceholder.Item width={120} height={14} marginBottom={6} />\r\n//                     {/* Text First and Last */}\r\n//                     <SkeletonPlaceholder.Item width={140} height={14} marginBottom={6} />\r\n//                     {/* Last Message */}\r\n//                     <SkeletonPlaceholder.Item width={160} height={12} marginBottom={6} />\r\n//                 </SkeletonPlaceholder.Item>\r\n//             </SkeletonPlaceholder.Item>\r\n//         </SkeletonPlaceholder>\r\n//     );\r\n// };\r\n\r\nconst HeaderButton = ({ title, onPress, isActive, headerCount }) => {\r\n    const activeStyle = isActive ? { backgroundColor: '#E1EDF7' } : {};\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n    return (\r\n        <Pressable\r\n            onHoverIn={hoverIn}\r\n            onHoverOut={hoverOut}\r\n            focusable={false}\r\n            onPress={onPress}\r\n            style={{ backgroundColor: isHovered ? '#f2f2f2' : 'transparent', padding: 12, marginVertical: screenWidth > 1818 ? 10 : 2, borderWidth: 5, borderColor: 'transparent', marginLeft: 8, width: 195, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 5, ...activeStyle }}\r\n        >\r\n            <Text color={isActive ? '#0A78BE' : '#1C2B33'} fontSize={14} style={{ fontWeight: isActive ? 700 : 400, alignSelf: 'center', textAlign: 'center', }}>{title}</Text>\r\n            {headerCount}\r\n\r\n        </Pressable>\r\n    );\r\n\r\n};\r\n\r\nconst FilterButton = ({ title, onPress, isActive, iconActive, iconNotActive }) => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n    return (\r\n        <Pressable\r\n            focusable={false}\r\n            variant='ghost'\r\n            onPress={onPress}\r\n            onHoverIn={hoverIn}\r\n            onHoverOut={hoverOut}\r\n            style={{\r\n                padding: 5,\r\n                width: 100,\r\n                margin: 5,\r\n                flexDirection: 'row', // Align items in a row\r\n                alignItems: 'center', // Center items vertically\r\n                justifyContent: 'center',\r\n                borderRadius: 5,\r\n                backgroundColor: isActive ? '#E1EDF7' : (isHovered ? '#d7d7d9' : '#ECEDF0'),\r\n            }}\r\n        >\r\n            {isActive ? iconActive : iconNotActive}\r\n            <Text color={isActive ? '#0A78BE' : '#1C2B33'} fontSize={14} style={{ fontWeight: isActive ? 700 : 400, marginLeft: 5, }}>{title}</Text>\r\n\r\n\r\n        </Pressable>\r\n    );\r\n};\r\n\r\nconst formatDate = (timestamp) => {\r\n    const currentDate = new Date();\r\n    const formattedTimestamp = timestamp.replace(' at ', 'T').replace(/\\//g, '-');\r\n    const givenDate = new Date(formattedTimestamp);\r\n\r\n    // Resetting the time part to compare dates only\r\n    const currentFormattedDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\r\n    const givenFormattedDate = new Date(givenDate.getFullYear(), givenDate.getMonth(), givenDate.getDate());\r\n\r\n    // Check if the dates are the same\r\n    if (givenFormattedDate.getTime() === currentFormattedDate.getTime()) {\r\n        return \"This day\";\r\n    }\r\n\r\n    const oneDay = 24 * 60 * 60 * 1000;\r\n    const startOfWeek = new Date();\r\n    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() + (startOfWeek.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    // Check if the date is within this week\r\n    if (givenDate >= startOfWeek && givenDate < currentFormattedDate) {\r\n        return givenDate.toLocaleDateString('en-US', { weekday: 'short' });\r\n    }\r\n\r\n    // Check if the date is within this year\r\n    const startOfYear = new Date(new Date().getFullYear(), 0, 1);\r\n    if (givenDate >= startOfYear) {\r\n        return givenDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    }\r\n\r\n    // If the date is not within this year\r\n    return givenDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });\r\n};\r\n\r\nconst SkeletonChatListLayout = () => {\r\n\r\n    return (\r\n        <>\r\n            <View // Add a unique key here\r\n                style={{\r\n                    padding: 12,\r\n                    alignItems: 'flex-start',\r\n                    flexDirection: 'row',\r\n                    backgroundColor: 'white',\r\n                }}\r\n            >\r\n                {/* Skeleton for the image */}\r\n                <View\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginRight: 12,\r\n                    }}\r\n                />\r\n                {/* Skeleton for the text */}\r\n                <View style={{ flex: 1 }}>\r\n                    {Array.from({ length: 3 }).map((_, subIndex) => (\r\n                        <View\r\n                            key={`text-${subIndex}`}  // Add a unique key here for each text line\r\n                            style={{\r\n                                height: 10,\r\n                                backgroundColor: '#e0e0e0',\r\n                                marginBottom: 6,\r\n                                width: '80%',\r\n                                borderRadius: 4,\r\n                            }}\r\n                        />\r\n                    ))}\r\n                    <View style={{\r\n                        position: 'absolute',\r\n                        right: 10, height: 10,\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginBottom: 6,\r\n                        width: '5%',\r\n                        borderRadius: 4,\r\n                    }} />\r\n\r\n                    <View\r\n                        style={{\r\n                            borderRadius: 4,\r\n                            backgroundColor: '#e0e0e0',\r\n                            position: 'absolute',\r\n                            right: -20,\r\n                            top: -20,\r\n                            padding: 10,\r\n                            alignSelf: 'center',\r\n                        }}\r\n\r\n                    />\r\n                </View>\r\n            </View>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst DeleteMessageTemplateYesNo = ({ handleDeleteMessageTemplateClose }) => {\r\n\r\n    const deleteMessageTemplateVisible = useSelector((state) => state.deleteMessageTemplateVisible);\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n    const selectedTitle = globalMessageTemplateSelectedTitle;\r\n    const [isDeleteLoading, setIsDeleteLoading] = useState(false);\r\n    const handleClose = () => {\r\n        handleDeleteMessageTemplateClose();\r\n\r\n    }\r\n\r\n\r\n    const deleteMessageTemplate = async (titleToDelete) => {\r\n        const documentRef = doc(projectControlFirestore, 'MessageTemplate', email);\r\n        setIsDeleteLoading(true);\r\n        try {\r\n            // Fetch current data\r\n            const docSnap = await getDoc(documentRef);\r\n\r\n            if (docSnap.exists()) {\r\n                let messageTemplates = docSnap.data().messageTemplate || [];\r\n\r\n                // Filter out the item with the specified title\r\n                const updatedTemplates = messageTemplates.filter(template => template.title !== titleToDelete);\r\n\r\n                // Update the document with the new array\r\n                await updateDoc(documentRef, { messageTemplate: updatedTemplates });\r\n\r\n                console.log('Item successfully deleted');\r\n                setIsDeleteLoading(false);\r\n                handleClose();\r\n            } else {\r\n                console.log('Document does not exist');\r\n                setIsDeleteLoading(false);\r\n\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting item: ', error);\r\n            setIsDeleteLoading(false);\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={deleteMessageTemplateVisible}\r\n            onClose={handleClose}\r\n        >\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header >Delete Message Template?</Modal.Header>\r\n                <Modal.Body>\r\n                    <View style={{ flex: 1, }}>\r\n                        <Text style={{ fontWeight: 400, }}>Are you sure you want to delete the selected message template?</Text>\r\n                    </View>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"ghost\" space=\"2\">\r\n                        <Button style={{ width: 80, height: 36, }} onPress={handleClose} variant={'solid'} colorScheme={'warmGray'}>Cancel</Button>\r\n                        <Button isLoading={isDeleteLoading ? true : false} onPress={() => deleteMessageTemplate(selectedTitle)} style={{ padding: 16, height: 36, }} variant={'solid'} colorScheme={'error'}>Delete</Button>\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n};\r\n\r\nconst MessageTemplateItem = ({ setOriginalTitle, addVisible, titleInputRef, valueInputRef, setAddVisible, item, textInputRef, setPopoverOpen }) => {\r\n    const [isTemplateItemHovered, setIsTemplateItemHovered] = useState(false);\r\n    const [isTemplateMenuHovered, setIsTemplateMenuHovered] = useState(false);\r\n    const [isTemplateEditHovered, setIsTemplateEditHovered] = useState(false);\r\n    const [isTemplateDeleteHovered, setIsTemplateDeleteHovered] = useState(false);\r\n    const [templateMenuOpen, setTemplateMenuOpen] = useState(false);\r\n    const [currentItem, setCurrentItem] = useState(null);\r\n    const [addIsVisible, setIsAddVisible] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const onPress = (item) => {\r\n        // textInputRef.current.value = item.value;\r\n        dispatch(setMessageTextInputValue(item.value));\r\n        setPopoverOpen(false);\r\n    };\r\n\r\n    const onEditPress = (item) => {\r\n\r\n        setAddVisible(true);\r\n        // setCurrentItem(item);\r\n        setIsAddVisible(true);\r\n        setTemplateMenuOpen(false);\r\n        titleInputRef.current.value = item.title;\r\n        valueInputRef.current.value = item.value;\r\n        setOriginalTitle(item.title);\r\n        textInputRef.current.focus();\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n\r\n\r\n    //     if (addIsVisible == true) {\r\n    //         console.log(addIsVisible);\r\n    //         titleInputRef.current.value = currentItem.title;\r\n    //         valueInputRef.current.value = currentItem.value;\r\n    //     }\r\n    //     if (titleInputRef.current && valueInputRef.current) {\r\n    //         titleInputRef.current.value = currentItem.title;\r\n    //         valueInputRef.current.value = currentItem.value;\r\n    //     }\r\n    // }, [currentItem]);\r\n\r\n    const handleDeletePress = (title) => {\r\n\r\n        dispatch(setDeleteMessageTemplateVisible(true));\r\n        globalMessageTemplateSelectedTitle = title;\r\n    }\r\n\r\n\r\n    return (\r\n        <Pressable\r\n            onPress={() => onPress(item)}\r\n            onHoverIn={() => setIsTemplateItemHovered(true)}\r\n            onHoverOut={() => setIsTemplateItemHovered(false)}\r\n            style={{\r\n                padding: 10,\r\n                backgroundColor: isTemplateItemHovered ? '#f2f2f2' : 'transparent',\r\n                flex: 1,\r\n                borderRadius: 5,\r\n            }}>\r\n            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                <Text style={{ fontWeight: '700', flex: 1, }} numberOfLines={1} ellipsizeMode='tail'>{item.title}</Text>\r\n                <Popover\r\n                    isOpen={templateMenuOpen}\r\n                    onClose={() => setTemplateMenuOpen(false)}\r\n                    trigger={(triggerProps) => {\r\n                        return <Pressable\r\n                            {...triggerProps}\r\n                            onPress={() => setTemplateMenuOpen(true)}\r\n                            onHoverIn={() => setIsTemplateMenuHovered(true)}\r\n                            onHoverOut={() => setIsTemplateMenuHovered(false)}\r\n                            style={{ backgroundColor: isTemplateMenuHovered ? '#dedede' : 'transparent', padding: 5, justifyContent: 'center', borderRadius: 5, }}>\r\n                            <Entypo size={16} name='dots-three-horizontal' color='#171717' />\r\n                        </Pressable>\r\n                    }}\r\n\r\n                >\r\n                    <Popover.Content>\r\n\r\n                        <Pressable\r\n                            onPress={() => onEditPress(item)}\r\n                            onHoverIn={() => setIsTemplateEditHovered(true)}\r\n                            onHoverOut={() => setIsTemplateEditHovered(false)} style={{ flex: 1, width: 50, backgroundColor: isTemplateEditHovered ? '#dedede' : 'white', padding: 5, }} focusable={false}>\r\n                            <Text>Edit</Text>\r\n                        </Pressable>\r\n\r\n                        <Pressable\r\n                            onPress={() => handleDeletePress(item.title)}\r\n                            onHoverIn={() => setIsTemplateDeleteHovered(true)}\r\n                            onHoverOut={() => setIsTemplateDeleteHovered(false)} style={{ flex: 1, width: 50, backgroundColor: isTemplateDeleteHovered ? '#dedede' : 'white', padding: 5, }} focusable={false}>\r\n                            <Text>Delete</Text>\r\n                        </Pressable>\r\n\r\n                    </Popover.Content>\r\n                </Popover>\r\n            </View>\r\n            <Text style={{ fontWeight: '400', fontSize: 12, }} numberOfLines={1} ellipsizeMode='tail'>{item.value}</Text>\r\n        </Pressable>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst MessageTemplate = ({ textInputRef }) => {\r\n    const dispatch = useDispatch();\r\n    const [isTemplateHovered, setIsTemplateHovered] = useState(false);\r\n    const [isAddHovered, setIsAddHovered] = useState(false);\r\n    const [popoverOpen, setPopoverOpen] = useState(false);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [addVisible, setAddVisible] = useState(false);\r\n\r\n    const [isCancelHovered, setIsCancelHovered] = useState(false);\r\n    const [isSaveHovered, setIsSaveHovered] = useState(false);\r\n    const [originalTitle, setOriginalTitle] = useState('');\r\n\r\n\r\n    const [saveLoading, setSaveLoading] = useState(false);\r\n\r\n    const [templateData, setTemplateData] = useState([]);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const searchInputRef = useRef(null);\r\n    const titleInputRef = useRef(null);\r\n    const valueInputRef = useRef(null);\r\n\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n    const data = [\r\n        { title: 'Message 1', value: 'Sample Message 1' },\r\n        { title: 'Message 2', value: 'Sample Message 2' },\r\n        { title: 'Message 3', value: 'Sample Message 3' },\r\n    ];\r\n\r\n\r\n\r\n    const saveMessageTemplate = async () => {\r\n        setSaveLoading(true);\r\n        const documentRef = doc(projectControlFirestore, 'MessageTemplate', email);\r\n\r\n        try {\r\n            // Fetch current data\r\n            const docSnap = await getDoc(documentRef);\r\n\r\n            let messageTemplates = [];\r\n            const newTitle = titleInputRef.current?.value;\r\n            const newValue = valueInputRef.current?.value;\r\n\r\n            if (newTitle && newValue) {\r\n                if (docSnap.exists()) {\r\n                    // Document exists, get the current templates\r\n                    messageTemplates = docSnap.data().messageTemplate || [];\r\n\r\n                    // Find index based on the original title\r\n                    const index = messageTemplates.findIndex(template => template.title === originalTitle);\r\n\r\n                    if (index !== -1) {\r\n                        // Update existing template\r\n                        messageTemplates[index] = { title: newTitle, value: newValue };\r\n                    } else {\r\n                        // Add new template if original title does not exist\r\n                        messageTemplates.push({ title: newTitle, value: newValue });\r\n                    }\r\n                } else {\r\n                    // Document does not exist, create a new array with the new template\r\n                    console.log('Creating a new document');\r\n                    messageTemplates = [{ title: newTitle, value: newValue }];\r\n                }\r\n\r\n                // Update or set the document\r\n                await setDoc(documentRef, { messageTemplate: messageTemplates }, { merge: true });\r\n\r\n                console.log('Document successfully updated or created');\r\n            } else {\r\n                console.log('Title or value is empty');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating or creating document: ', error);\r\n        } finally {\r\n            setSaveLoading(false);\r\n            handleCancelPressed();\r\n        }\r\n    };\r\n\r\n\r\n    const handleSearch = (text) => {\r\n        setSearchText(text);\r\n        const filtered = templateData.filter(item =>\r\n            item.title.toLowerCase().includes(text.toLowerCase()) ||\r\n            item.value.toLowerCase().includes(text.toLowerCase())\r\n        );\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const handlePopoverClose = () => {\r\n        setPopoverOpen(false);\r\n        setAddVisible(false);\r\n        setIsAddHovered(false);\r\n    };\r\n\r\n    const handleCancelPressed = () => {\r\n        setIsAddHovered(false);\r\n        setAddVisible(false);\r\n        setIsCancelHovered(false)\r\n        setIsSaveHovered(false)\r\n        titleInputRef.current.clear();\r\n        valueInputRef.current.clear();\r\n\r\n    };\r\n\r\n    const renderItem = ({ item }) => {\r\n        return <MessageTemplateItem setOriginalTitle={setOriginalTitle} addVisible={addVisible} titleInputRef={titleInputRef} valueInputRef={valueInputRef} setAddVisible={setAddVisible} item={item} textInputRef={textInputRef} setPopoverOpen={setPopoverOpen} />;\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectControlFirestore, \"MessageTemplate\", email);\r\n\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                let arrayFieldData = docSnap.data().messageTemplate;\r\n\r\n                // Sort the array by title\r\n                arrayFieldData.sort((a, b) => {\r\n                    let titleA = a.title.toUpperCase(); // ignore upper and lowercase\r\n                    let titleB = b.title.toUpperCase(); // ignore upper and lowercase\r\n                    if (titleA < titleB) {\r\n                        return -1;\r\n                    }\r\n                    if (titleA > titleB) {\r\n                        return 1;\r\n                    }\r\n                    // titles must be equal\r\n                    return 0;\r\n                });\r\n\r\n                setTemplateData(arrayFieldData);\r\n            } else {\r\n                console.log(\"No such document!\");\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching document:\", error);\r\n        });\r\n\r\n        // Cleanup subscription on unmount\r\n        return () => unsubscribe();\r\n    }, [popoverOpen]);\r\n\r\n    const handleDeleteMessageTemplateClose = () => {\r\n\r\n        dispatch(setDeleteMessageTemplateVisible(false));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <DeleteMessageTemplateYesNo handleDeleteMessageTemplateClose={handleDeleteMessageTemplateClose} />\r\n            <Popover\r\n                isOpen={popoverOpen}\r\n                onClose={handlePopoverClose}\r\n                // initialFocusRef={searchInputRef}\r\n                finalFocusRef={textInputRef}\r\n                placement={'top'}\r\n                trigger={(triggerProps) => {\r\n                    return <Pressable\r\n                        focusable={false}\r\n                        {...triggerProps}\r\n                        onPress={() => setPopoverOpen(true)}\r\n                        onHoverIn={() => setIsTemplateHovered(true)}\r\n                        onHoverOut={() => setIsTemplateHovered(false)}\r\n                        style={({ pressed }) => [\r\n                            {\r\n                                bottom: 0,\r\n                                right: 100,\r\n                                position: 'absolute',\r\n                                borderRadius: 20,\r\n                                opacity: pressed ? 0.5 : 1\r\n                            }\r\n                        ]}\r\n\r\n                    >\r\n                        <Ionicons name=\"chatbox-ellipses-outline\" size={24} color={isTemplateHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n                    </Pressable>\r\n                }} >\r\n                <Popover.Content w={screenWidth < mobileViewBreakpoint ? 320 : 400} marginRight={10} >\r\n                    <Popover.Arrow />\r\n                    <View style={{ display: addVisible ? 'flex' : 'none', }}><Popover.Header backgroundColor={'white'}>\r\n                        <View style={{ flexDirection: 'row', flex: 1 }}>\r\n                            <Text style={{ fontWeight: 700, fontSize: 16, flex: 1 }}>Create a message template</Text>\r\n                        </View>\r\n                    </Popover.Header>\r\n                        <Popover.Body backgroundColor={'white'} height={250}>\r\n                            <Text style={{ fontWeight: 700, }}>Title</Text>\r\n                            <TextInput\r\n                                ref={titleInputRef}\r\n                                placeholder='Input Title'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 40, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5 }} />\r\n                            <br />\r\n                            <Text style={{ fontWeight: 700, }}>Message</Text>\r\n                            <TextInput\r\n                                multiline\r\n                                ref={valueInputRef}\r\n                                placeholder='Input Message'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 100, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5 }} />\r\n\r\n                        </Popover.Body>\r\n                        <Popover.Footer backgroundColor={'white'}>\r\n                            <View style={{ height: 30, flexDirection: 'row', justifyContent: 'center', }}>\r\n                                <Pressable\r\n                                    onHoverIn={() => setIsCancelHovered(true)}\r\n                                    onHoverOut={() => setIsCancelHovered(false)}\r\n                                    onPress={handleCancelPressed}\r\n                                    style={{ backgroundColor: isCancelHovered ? '#DADADA' : 'white', width: 60, borderRadius: 5, padding: 5, borderWidth: 1, borderColor: '#DADDE1', marginHorizontal: 5, }}>\r\n                                    <Text style={{ textAlign: 'center', fontWeight: 500, }}>Cancel</Text>\r\n                                </Pressable>\r\n\r\n                                <Pressable\r\n                                    onPress={saveMessageTemplate}\r\n                                    onHoverIn={() => setIsSaveHovered(true)}\r\n                                    onHoverOut={() => setIsSaveHovered(false)}\r\n                                    style={{ backgroundColor: isSaveHovered ? '#107a37' : '#16A34A', width: 60, borderRadius: 5, padding: 5, borderWidth: 1, borderColor: '#DADDE1', marginHorizontal: 5, }}>\r\n                                    {saveLoading ?\r\n                                        (<Spinner\r\n                                            animating\r\n                                            size=\"sm\"\r\n                                            color={'white'}\r\n                                        />) :\r\n                                        (\r\n                                            <Text style={{ textAlign: 'center', color: 'white', fontWeight: 500, }}>Save</Text>\r\n                                        )}\r\n                                </Pressable>\r\n                            </View>\r\n                        </Popover.Footer>\r\n                    </View><View style={{ display: !addVisible ? 'flex' : 'none', }}><Popover.Header backgroundColor={'white'}>\r\n                        <View style={{ flexDirection: 'row', flex: 1 }}>\r\n                            <Text style={{ fontWeight: 700, fontSize: 16, flex: 1 }}>Message Template</Text>\r\n                            <Pressable focusable={false} onPress={() => setAddVisible(true)} onHoverIn={() => setIsAddHovered(true)} onHoverOut={() => setIsAddHovered(false)}>\r\n                                <Text style={{ fontWeight: 400, fontSize: 16, color: '#1B81C2', textDecorationLine: isAddHovered ? 'underline' : 'none' }}>+ ADD</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </Popover.Header>\r\n                        <Popover.Body backgroundColor={'white'} height={300}>\r\n                            <TextInput\r\n                                ref={searchInputRef}\r\n                                focusable={false}\r\n                                placeholder='Search'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 40, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5, marginBottom: 5, }}\r\n                                keyboardType='search'\r\n                                onChangeText={handleSearch}\r\n                                value={searchText} />\r\n                            {templateData.length > 0 || filteredData.length > 0 ? (\r\n                                <FlatList\r\n                                    style={{ height: 100, borderBottomLeftRadius: 5 }}\r\n                                    renderItem={renderItem}\r\n                                    keyExtractor={item => item.title.toString()}\r\n                                    data={searchText ? filteredData : templateData} />\r\n                            ) : (\r\n                                <Text style={{ fontWeight: 700, alignSelf: 'center', }}>No message template found</Text>\r\n                            )}\r\n\r\n                        </Popover.Body>\r\n                    </View>\r\n                </Popover.Content>\r\n            </Popover>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst FileDisplay = ({ file, onRemove }) => {\r\n    const iconSize = 24;\r\n    if (!file) return null;  // Define the icon size\r\n\r\n\r\n\r\n\r\n    const getFileIcon = (type) => {\r\n        if (type.includes('pdf')) {\r\n            return <MaterialIcons name={'picture-as-pdf'} size={iconSize} color=\"#FF0000\" />; // Red for PDF\r\n        }\r\n        if (type.includes('msword') || type.includes('wordprocessingml')) {\r\n            return <MaterialCommunityIcons name={'microsoft-word'} size={iconSize} color=\"#2B579A\" />; // Blue for Word\r\n        }\r\n        if (type.includes('vnd.ms-excel') || type.includes('spreadsheetml') || type === 'text/csv') {\r\n            return <MaterialCommunityIcons name={'microsoft-excel'} size={iconSize} color=\"#217346\" />; // Green for Excel and CSV\r\n        }\r\n        if (type.includes('rar') || type.includes('x-rar-compressed') || type.includes('x-compressed')) {\r\n            return <FastImage\r\n                source={{ uri: require('../../assets/rar_icon.png'), priority: FastImage.priority.high }}\r\n                style={{\r\n                    width: 24,\r\n                    height: 24,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.cover}\r\n            />; // Color of your choice for RAR files\r\n        }\r\n\r\n        return <MaterialIcons name=\"insert-drive-file\" size={iconSize} color=\"black\" />; // Default color for others\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', margin: 5 }}>\r\n            {getFileIcon(file.type)}\r\n            <Text style={{ marginLeft: 10 }}>{file.name}</Text>\r\n            <Pressable onPress={onRemove}>\r\n                <MaterialIcons name=\"close\" size={20} color=\"black\" />\r\n            </Pressable>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst MessageTextInput = ({ handleSendMessage, textInputRef }) => {\r\n    const [inputHeight, setInputHeight] = useState(50);\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const messageTextInputValue = useSelector((state) => state.messageTextInputValue)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleContentOnChange = (event) => {\r\n        const target = event.target;\r\n        // Temporarily reset height to ensure scrollHeight reflects current content\r\n        target.style.height = '0px'; // Reset height to recalculate\r\n        const updatedHeight = Math.max(50, Math.min(200, target.scrollHeight));\r\n        target.style.height = `${updatedHeight}px`; // Set to new calculated height\r\n        setInputHeight(updatedHeight);\r\n\r\n    };\r\n\r\n    const handleContentSizeChange = (event) => {\r\n        const { width, height } = event.nativeEvent.contentSize;\r\n        const updatedHeight = Math.max(50, Math.min(200, height));\r\n        setInputHeight(updatedHeight); // Set to new calculated height\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        // Define a breakpoint for mobile resolution, e.g., 768 pixels\r\n        const mobileBreakpoint = 768;\r\n\r\n        // Check if the screen width is less than or equal to the mobile breakpoint\r\n        if (screenWidth >= mobileBreakpoint) {\r\n            // Check if 'Enter' key is pressed\r\n            if (e.nativeEvent.key === 'Enter' && !e.nativeEvent.shiftKey) {\r\n                e.preventDefault(); // Prevent the default behavior of adding a new line\r\n                handleSendMessage();\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (text) => {\r\n        dispatch(setMessageTextInputValue(text));\r\n        // You can also call handleContentSizeChange manually here if needed\r\n    };\r\n\r\n    return (\r\n        <TextInput\r\n            ref={textInputRef}\r\n            value={messageTextInputValue} // Controlled component\r\n            multiline\r\n            placeholder='Send a message...'\r\n            placeholderTextColor='#9B9E9F'\r\n            onChangeText={handleInputChange} // Use onChangeText for React Native\r\n            onChange={handleContentOnChange}\r\n            onContentSizeChange={handleContentSizeChange}\r\n            onKeyPress={handleKeyPress}\r\n            style={{\r\n                outlineStyle: 'none',\r\n                width: '100%',\r\n                minHeight: 50,\r\n                maxHeight: 200,\r\n                height: inputHeight,\r\n                alignSelf: 'center',\r\n                padding: 10,\r\n                overflow: 'auto',\r\n                marginBottom: 25,\r\n                marginRight: 50,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nconst ChatInputText = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n\r\n    const [isSendHovered, setIsSendHovered] = useState(false);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [selectedFilePreview, setSelectedFilePreview] = useState(null);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [imageUri, setImageUri] = useState(null);\r\n    const [fileUri, setFileUri] = useState(null);\r\n    const [fileName, setFileName] = useState('');\r\n    const [isSendImageHovered, setIsSendImageHovered] = useState(false);\r\n    const [isSendAttachmentHovered, setIsSendAttachmentHovered] = useState(false);\r\n    const [sendIsLoading, setSendIsLoading] = useState(false);\r\n    const textInputRef = useRef(null);\r\n    const [inputHeight, setInputHeight] = useState(50);\r\n\r\n    const [inputValue, setInputValue] = useState(''); // Add state for input value\r\n    const messageTextInputValue = useSelector((state) => state.messageTextInputValue)\r\n    const dispatch = useDispatch();\r\n    const handleContentSizeChange = (event) => {\r\n        const target = event.target;\r\n        // Temporarily reset height to ensure scrollHeight reflects current content\r\n        target.style.height = '0px'; // Reset height to recalculate\r\n        const updatedHeight = Math.max(50, Math.min(200, target.scrollHeight));\r\n        target.style.height = `${updatedHeight}px`; // Set to new calculated height\r\n        setInputHeight(updatedHeight);\r\n\r\n    };\r\n\r\n    const removeImage = () => {\r\n        setImageUri(null);\r\n        setSelectedImage(null);\r\n        setFileName(null);\r\n\r\n    };\r\n\r\n    const removeFile = () => {\r\n        setSelectedFile(null);\r\n        setSelectedFilePreview(null);\r\n        setFileUri(null);\r\n        setFileName(null);\r\n\r\n\r\n    };\r\n\r\n    const selectFile = async () => {\r\n        const maxFileSize = 10 * 1024 * 1024; // 5MB in bytes\r\n\r\n        if (Platform.OS === 'web') {\r\n            return new Promise((resolve, reject) => {\r\n                const input = document.createElement('input');\r\n                input.type = 'file';\r\n                input.accept = '.pdf, .doc, .docx, .xls, .xlsx, .rar'; // Acceptable file types\r\n                input.onchange = () => {\r\n                    const file = input.files[0];\r\n\r\n                    if (file) {\r\n                        if (![\r\n                            'application/pdf',\r\n                            'application/msword',\r\n                            'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n                            'application/vnd.ms-excel',\r\n                            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                            'application/x-rar-compressed',\r\n                            'application/x-compressed',\r\n                            'text/csv'\r\n                        ].includes(file.type)) {\r\n                            alert('File type not allowed');\r\n                            reject('File type not allowed');\r\n                            return;\r\n                        }\r\n\r\n                        if (file.size > maxFileSize) {\r\n                            alert('File size should be less than 10MB');\r\n                            reject('File size should be less than 10MB');\r\n                            return;\r\n                        }\r\n                        removeImage();\r\n                        // Read the file as a Data URL and set it in the state\r\n                        const reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            setFileUri(e.target.result);\r\n                            resolve(file);\r\n                            setSelectedFile(file);\r\n                            setSelectedFilePreview({ name: file.name, type: file.type });\r\n                            setFileName(file.name);\r\n                            textInputRef.current.focus();\r\n                        };\r\n                        reader.onerror = (e) => {\r\n                            reject(e);\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                };\r\n                input.click();\r\n            });\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                launchImageLibrary({ mediaType: 'photo' }, (response) => {\r\n                    if (response.didCancel) {\r\n                        reject('User cancelled image picker');\r\n                    } else if (response.errorCode) {\r\n                        reject(response.errorMessage);\r\n                    } else {\r\n                        const asset = response.assets[0];\r\n\r\n                        if (!asset.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if (asset.fileSize > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('File size should be less than 10MB');\r\n                            return;\r\n                        }\r\n\r\n                        const selectedImageUri = asset.uri;\r\n                        const fileName = asset.fileName || 'Unknown name';\r\n                        resolve({ uri: selectedImageUri, name: fileName });\r\n                        setImageUri(selectedImageUri); // Set imageUri here\r\n                        // console.log(`File name: ${fileName}`);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const selectImage = async () => {\r\n        const maxFileSize = 10 * 1024 * 1024; // 5MB in bytes\r\n\r\n        if (Platform.OS === 'web') {\r\n\r\n            return new Promise((resolve, reject) => {\r\n                const input = document.createElement('input');\r\n                input.type = 'file';\r\n                input.accept = 'image/*';\r\n                input.onchange = () => {\r\n                    const file = input.files[0];\r\n                    if (file) {\r\n\r\n                        if (!file.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if (file.size > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('File size should be less than 10MB');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        removeFile();\r\n                        const reader = new FileReader();\r\n                        reader.readAsDataURL(file);\r\n                        reader.onload = () => {\r\n                            resolve({ dataUrl: reader.result, name: file.name });\r\n                            setImageUri(reader.result); // Set imageUri here\r\n                            setFileName(file.name);\r\n                            // console.log(`File name: ${file.name}`);\r\n                        };\r\n                        setSelectedImage(file);\r\n                        reader.onerror = error => reject(error);\r\n                    }\r\n                };\r\n                input.click();\r\n            });\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                launchImageLibrary({ mediaType: 'photo' }, (response) => {\r\n                    if (response.didCancel) {\r\n                        reject('User cancelled image picker');\r\n                    } else if (response.errorCode) {\r\n                        reject(response.errorMessage);\r\n                    } else {\r\n                        const asset = response.assets[0];\r\n\r\n                        if (!asset.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n                            return;\r\n                        }\r\n\r\n                        if (asset.fileSize > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('Only image files are allowed');\r\n                            return;\r\n                        }\r\n\r\n                        const selectedImageUri = asset.uri;\r\n                        const fileName = asset.fileName || 'Unknown name';\r\n                        resolve({ uri: selectedImageUri, name: fileName });\r\n                        setImageUri(selectedImageUri); // Set imageUri here\r\n                        // console.log(`File name: ${fileName}`);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const resizeImage = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = (event) => {\r\n                const img = new Image();\r\n                img.src = event.target.result;\r\n                img.onload = () => {\r\n                    const canvas = document.createElement('canvas');\r\n                    const ctx = canvas.getContext('2d');\r\n\r\n                    // Set your desired image size here\r\n                    const maxWidth = 800; // Example value\r\n                    const maxHeight = 800; // Example value\r\n                    let width = img.width;\r\n                    let height = img.height;\r\n\r\n                    if (width > height) {\r\n                        if (width > maxWidth) {\r\n                            height *= maxWidth / width;\r\n                            width = maxWidth;\r\n                        }\r\n                    } else {\r\n                        if (height > maxHeight) {\r\n                            width *= maxHeight / height;\r\n                            height = maxHeight;\r\n                        }\r\n                    }\r\n\r\n                    canvas.width = width;\r\n                    canvas.height = height;\r\n                    ctx.drawImage(img, 0, 0, width, height);\r\n                    canvas.toBlob((blob) => {\r\n                        resolve(new File([blob], file.name, {\r\n                            type: 'image/jpeg',\r\n                            lastModified: Date.now()\r\n                        }));\r\n                    }, 'image/jpeg', 0.7); // Adjust the quality (0.7 is a good balance between quality and file size)\r\n                };\r\n                img.onerror = error => reject(error);\r\n            };\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    };\r\n\r\n    const addFileMessage = async () => {\r\n        setSendIsLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeForFile = moment(datetime).format('MMDDYYYYHHmmss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const inputValue = textInputRef.current?.value;\r\n\r\n        textInputRef.current.clear();\r\n        textInputRef.current.focus();\r\n        removeFile();\r\n\r\n        const storage = getStorage(projectExtensionFirebase);\r\n\r\n        if (fileUri) { // Assuming you have a fileUri state for the selected file\r\n\r\n            try {\r\n\r\n                let fileUrl = null;\r\n                if (fileUri) {\r\n                    // Upload file and get URL\r\n                    const fileRef = ref(storage, `ChatFiles/${selectedChatData.id}/C-HUB_${formattedTimeForFile}/${fileName}`);\r\n                    const uploadResult = await uploadBytes(fileRef, selectedFile);\r\n                    fileUrl = await getDownloadURL(uploadResult.ref);\r\n                }\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime,\r\n                    ip: ip,\r\n                    ipCountry: ipCountry,\r\n                    file: {\r\n                        name: fileName,\r\n                        type: 'attachment', // Set the file type\r\n                        url: fileUrl,\r\n                    } // Include file URL if available\r\n                });\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: `Sent an attachment`,\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const addImageMessage = async () => {\r\n        setSendIsLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeForFile = moment(datetime).format('MMDDYYYYHHmmss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const inputValue = textInputRef.current?.value;\r\n\r\n\r\n\r\n        const storage = getStorage(projectExtensionFirebase);\r\n\r\n        if (imageUri) { // Assuming imageFile holds the file to be uploaded\r\n\r\n            textInputRef.current.clear();\r\n            textInputRef.current.focus();\r\n            removeImage();\r\n\r\n            try {\r\n                let imageUrl = null;\r\n                if (imageUri) {\r\n                    // Upload image and get URL\r\n                    const resizedImage = await resizeImage(selectedImage);\r\n                    const imageRef = ref(storage, `ChatFiles/${selectedChatData.id}/C-HUB_${formattedTimeForFile}/${fileName}`);\r\n                    const uploadResult = await uploadBytes(imageRef, resizedImage);\r\n                    imageUrl = await getDownloadURL(uploadResult.ref);\r\n                }\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime,\r\n                    ip: ip,\r\n                    ipCountry: ipCountry,\r\n                    file: {\r\n                        name: fileName,\r\n                        type: 'image',\r\n                        url: imageUrl,\r\n                    } // Include image URL if available\r\n                });\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: 'Sent an image',\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const addMessage = async () => {\r\n        setSendIsLoading(true);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        // const inputValue = textInputRef.current?.value;\r\n        const inputValue = messageTextInputValue;\r\n        dispatch(setMessageTextInputValue(''));\r\n        textInputRef.current.clear();\r\n        textInputRef.current.focus();\r\n\r\n        if (inputValue !== '') {\r\n            const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n            try {\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime, // Using the fetched timestamp\r\n                    ip: ip, // IP Address\r\n                    ipCountry: ipCountry // Country of the IP Address\r\n                });\r\n\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: inputValue,\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n\r\n    };\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const handleKeyPress = (e) => {\r\n        // Define a breakpoint for mobile resolution, e.g., 768 pixels\r\n        const mobileBreakpoint = 768;\r\n\r\n        // Check if the screen width is less than or equal to the mobile breakpoint\r\n        if (screenWidth >= mobileBreakpoint) {\r\n            // Check if 'Enter' key is pressed\r\n            if (e.nativeEvent.key === 'Enter' && !e.nativeEvent.shiftKey) {\r\n                e.preventDefault(); // Prevent the default behavior of adding a new line\r\n                handleSendMessage();\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const handleSendMessage = () => {\r\n        textInputRef.current.focus();\r\n\r\n        if (imageUri !== null) {\r\n            addImageMessage();\r\n        }\r\n        if (fileUri !== null) {\r\n            addFileMessage();\r\n        }\r\n        else {\r\n            addMessage();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <View style={{ width: '98%', flexDirection: 'row', backgroundColor: 'white', }}>\r\n\r\n            <View style={{ flexDirection: 'column', flex: 1, }}>\r\n\r\n                {fileUri &&\r\n                    (\r\n                        <FileDisplay file={selectedFilePreview} onRemove={removeFile} />\r\n                    )}\r\n\r\n                {imageUri && (\r\n                    <View style={{\r\n                        position: 'relative', // Make sure the parent View is positioned relative\r\n                        width: 70,\r\n                        height: 70,\r\n                        borderRadius: 5,\r\n                        overflow: 'hidden', // This ensures that nothing spills out of the container\r\n                        borderWidth: 1,\r\n                        borderColor: '#DADDE1',\r\n                        margin: 2,\r\n                    }}>\r\n                        <FastImage\r\n                            source={{ uri: imageUri }}\r\n                            style={{ width: '100%', height: '100%', borderRadius: 10 }}\r\n                            resizeMode={FastImage.resizeMode.cover}\r\n                        />\r\n                        <Pressable\r\n                            onPress={removeImage}\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                right: 0,\r\n                                backgroundColor: 'rgba(255, 255, 255, 0.6)', // Semi-transparent background for better visibility\r\n                                borderRadius: 12 // Circular shape\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"close\" size={20} color=\"black\" />\r\n                        </Pressable>\r\n                    </View>\r\n\r\n                )}\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <View style={{ marginHorizontal: 5, marginTop: 5, }}>\r\n                        <FastImage\r\n                            source={{ uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FRMJ%20Round.jpg?alt=media&token=90d7f2fe-d9cd-4a6f-9a6b-bc39fe2b33b2', priority: FastImage.priority.high }}\r\n                            style={{\r\n                                width: 30,\r\n                                height: 30,\r\n                                borderRadius: 15,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.cover}\r\n                        />\r\n                    </View>\r\n                    {/* <TextInput\r\n                        ref={textInputRef}\r\n                        multiline\r\n                        placeholder='Send a message...'\r\n                        placeholderTextColor='#9B9E9F'\r\n                        onChange={handleContentSizeChange}\r\n                        onKeyPress={handleKeyPress}\r\n                        style={{\r\n                            outlineStyle: 'none',\r\n                            width: '100%',\r\n                            minHeight: 50, // Set your desired minHeight\r\n                            maxHeight: 200, // Set your desired maxHeight\r\n                            height: inputHeight, // Dynamic height\r\n                            alignSelf: 'center',\r\n                            padding: 10,\r\n                            overflow: 'auto',\r\n                            marginBottom: 25,\r\n                            marginRight: 50,\r\n                        }}\r\n                    /> */}\r\n\r\n                    <MessageTextInput handleSendMessage={handleSendMessage} textInputRef={textInputRef} />\r\n\r\n                    <Pressable\r\n                        focusable={false}\r\n                        onPress={() => sendIsLoading ? null : handleSendMessage()}\r\n                        onHoverIn={() => setIsSendHovered(true)}\r\n                        onHoverOut={() => setIsSendHovered(false)}\r\n                        style={({ pressed }) => [\r\n                            {\r\n                                padding: 10,\r\n                                top: 20,\r\n                                right: 10,\r\n                                position: 'absolute',\r\n                                borderRadius: 20,\r\n                                backgroundColor: isSendHovered ? '#e8f4ff' : 'transparent', // Change color on hover\r\n                                opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                            }\r\n                        ]}\r\n                    >\r\n                        {sendIsLoading ? <Spinner\r\n                            animating\r\n                            size=\"sm\"\r\n                            color={\"#95BCF9\"}\r\n                        /> :\r\n                            <MaterialIcons name=\"send\" size={24} color=\"#95BCF9\" />\r\n                        }\r\n                    </Pressable>\r\n                </View>\r\n            </View>\r\n\r\n            <Pressable\r\n                onHoverIn={() => setIsSendImageHovered(true)}\r\n                onHoverOut={() => setIsSendImageHovered(false)}\r\n                style={({ pressed }) => [\r\n                    {\r\n                        padding: 10,\r\n                        bottom: -10,\r\n                        right: 125,\r\n                        position: 'absolute',\r\n                        borderRadius: 20,\r\n                        opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                    }\r\n                ]}\r\n                onPress={selectImage}\r\n            >\r\n                <Ionicons name=\"image-outline\" size={24} color={isSendImageHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n            </Pressable>\r\n\r\n            <Pressable\r\n                onHoverIn={() => setIsSendAttachmentHovered(true)}\r\n                onHoverOut={() => setIsSendAttachmentHovered(false)}\r\n                style={({ pressed }) => [\r\n                    {\r\n                        padding: 10,\r\n                        bottom: -9,\r\n                        right: 155,\r\n                        position: 'absolute',\r\n                        borderRadius: 20,\r\n                        opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                    }\r\n                ]}\r\n                onPress={selectFile}\r\n            >\r\n                <MaterialIcons name=\"attach-file\" size={24} color={isSendAttachmentHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n            </Pressable>\r\n\r\n            <MessageTemplate textInputRef={textInputRef} />\r\n\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst CancelledView = () => {\r\n\r\n    return (\r\n        <View style={{\r\n            zIndex: 999,\r\n            position: 'absolute',\r\n            borderRadius: 40,\r\n            borderWidth: 0, // Border width\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            opacity: 0.5,\r\n            // Centering the view within its parent\r\n            top: 38,\r\n            left: 17,\r\n        }}>\r\n\r\n            <View style={{ backgroundColor: \"#FF0000\", width: 50, height: 6, borderRadius: 20, }} />\r\n        </View>\r\n    );\r\n\r\n};\r\n\r\nconst ChatListItem = ({ item, onPress, onPressNewTab, isActive, messageUnread, formattedDate, chatListData }) => {\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    const [chatListStepImageUrl, setChatListStepImageUrl] = useState(null);\r\n    const [textFirst, setTextFirst] = useState('');\r\n    const [textLast, setTextLast] = useState('');\r\n    const dispatch = useDispatch();\r\n    const [isUnreadHovered, setIsUnreadHovered] = useState(false);\r\n    const [isOpenNewTabHovered, setIsOpenNewTabHovered] = useState(false);\r\n    const [isUnreadVisible, setIsUnreadVisible] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [customerData, setCustomerData] = useState({});\r\n\r\n    const carName = item.carData && item.carData.carName ? item.carData.carName : (item.vehicle && item.vehicle.carName ? item.vehicle.carName : '');\r\n    const updateChatToUnread = async () => {\r\n        dispatch(setActiveChatId(''));\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setSelectedChatData([]));\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", item.id);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                read: false,\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n    };\r\n\r\n    const hoverIn = () => {\r\n        setIsHovered(true)\r\n    };\r\n\r\n    const hoverOut = () => {\r\n        setIsHovered(false);\r\n    };\r\n\r\n    const hoverOpenNewTabIn = () => {\r\n        setIsHovered(true)\r\n        setIsOpenNewTabHovered(true)\r\n    };\r\n\r\n    const hoverOpenNewTabOut = () => {\r\n        setIsOpenNewTabHovered(false)\r\n    };\r\n\r\n    const hoverUnreadIn = () => {\r\n        setIsHovered(true)\r\n        setIsUnreadHovered(true)\r\n    };\r\n\r\n    const hoverUnreadOut = () => {\r\n        setIsUnreadHovered(false)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // getChatListStepImageUrl();\r\n        const folderName = item.carData && item.carData.stockID ? item.carData.stockID : (item.vehicle && item.vehicle.carId ? item.vehicle.carId : '');\r\n        const storage = getStorage(projectExtensionFirebase);\r\n        const imageRef = ref(storage, `${folderName}/0`); // Ensure this path is correct\r\n\r\n        getDownloadURL(imageRef)\r\n            .then((url) => {\r\n                setImageUrl(url);\r\n            })\r\n            .catch((error) => {\r\n                if (error.code === 'storage/object-not-found') {\r\n                    // Handle the 'object not found' error.\r\n                    setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n                } else {\r\n                    // Handle other errors differently\r\n\r\n                    setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n\r\n                }\r\n            });\r\n\r\n        const collectionPath = 'accounts';\r\n        const docId = item.participants.customer; // Ensure this is a valid document ID\r\n\r\n        const docRef = doc(projectExtensionFirestore, collectionPath, docId);\r\n\r\n        const unsubscribe = onSnapshot(docRef, (doc) => {\r\n            if (doc.exists()) {\r\n                const data = doc.data();\r\n                setCustomerData(data ? data : {});\r\n                setTextFirst(data.textFirst ? data.textFirst : '');\r\n                setTextLast(data.textLast ? data.textLast : '');\r\n\r\n            } else {\r\n                console.log(\"Document not found\");\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching document: \", error);\r\n        });\r\n\r\n        // Clean up function to unsubscribe from the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const loadingCondition = !imageUrl || imageUrl == null || imageUrl == '' || imageUrl == undefined || !item;\r\n\r\n    const chatStepIconOn = require(`../../assets/chat_step/chat_step_${item.stepIndicator.value}_on.png`);\r\n    const chatStepIconOff = require(`../../assets/chat_step/chat_step_${item.stepIndicator.value}_off.png`);\r\n\r\n\r\n    const handlePress = () => {\r\n        onPress()\r\n\r\n        // dispatch(setSelectedCustomerData(customerData));\r\n        globalCustomerFirstName = textFirst ? textFirst : '';\r\n        globalCustomerLastName = textLast ? textLast : '';\r\n        globalImageUrl = imageUrl ? imageUrl : '';\r\n        dispatch(setCarImageUrl(imageUrl ? imageUrl : ''));\r\n\r\n        globalCustomerCarName = carName;\r\n        setIsHovered(false);\r\n        setIsUnreadHovered(false)\r\n\r\n\r\n    }\r\n\r\n    const handlePressNewTab = () => {\r\n        onPressNewTab()\r\n\r\n        // dispatch(setSelectedCustomerData(customerData));\r\n        globalCustomerFirstName = textFirst ? textFirst : '';\r\n        globalCustomerLastName = textLast ? textLast : '';\r\n        globalImageUrl = imageUrl ? imageUrl : '';\r\n        dispatch(setCarImageUrl(imageUrl ? imageUrl : ''));\r\n\r\n        globalCustomerCarName = carName;\r\n        setIsHovered(false);\r\n        setIsUnreadHovered(false)\r\n\r\n\r\n    }\r\n\r\n    if (loadingCondition) {\r\n        return <SkeletonChatListLayout />\r\n    }\r\n    else {\r\n        return (\r\n            <Pressable\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                focusable={false}\r\n                style={{\r\n                    padding: 12,\r\n                    alignItems: 'flex-start', // Align items to the start of the button\r\n                    flexDirection: 'row',\r\n                    backgroundColor: isActive ? '#f2f2f2' : (isHovered ? '#f2f2f2' : 'white'),\r\n                    borderLeftColor: isActive ? '#0A9FDC' : 'transparent',\r\n                    borderRightColor: isActive ? '#0A9FDC' : 'transparent',\r\n                    borderLeftWidth: 2,\r\n                    borderRightWidth: 2,\r\n\r\n                }}\r\n                onPress={handlePress}\r\n            >\r\n                {item.isCancelled && <CancelledView />}\r\n\r\n                <View style={{ paddingRight: 10, justifyContent: 'center', }}>\r\n                    {imageUrl ? (\r\n                        <FastImage\r\n                            source={{ uri: imageUrl, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                width: 60,\r\n                                height: 60,\r\n                                borderRadius: 30,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    ) : (\r\n                        <View\r\n                            style={{\r\n                                width: 60,\r\n                                height: 60,\r\n                                borderRadius: 30,\r\n                                backgroundColor: '#e0e0e0',\r\n                                marginRight: 12,\r\n                            }}\r\n                        />\r\n                    )}\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                    {!isHovered ? (<Text style={{ fontSize: 12, position: 'absolute', right: 10, color: messageUnread ? '#0A78BE' : '#90949C', fontWeight: messageUnread ? 700 : 400, }}>{formattedDate}</Text>) : (!item.read ? (<Text style={{ fontSize: 12, position: 'absolute', right: 10, color: messageUnread ? '#0A78BE' : '#90949C', fontWeight: messageUnread ? 700 : 400, }}>{formattedDate}</Text>) : null)}\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 14, width: '70%', overflow: 'hidden', fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#1C2B33' : '#586369', }}>{carName}</Text>\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 14, width: '80%', overflow: 'hidden', flex: 1, fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#1C2B33' : '#586369', }}>{`${textFirst} ${textLast}`}</Text>\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 12, width: '80%', overflow: 'hidden', flex: 1, fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#0A78BE' : '#90949c', }}>{item.lastMessageSender == item.participants.customer ? (item.lastMessage ? item.lastMessage : 'No message found') : (item.lastMessage ? `Sales: ${item.lastMessage}` : `Sales: No message found`)}</Text>\r\n                    {!item.read ? (\r\n                        <FastImage\r\n                            source={{ uri: chatStepIconOn, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                tintColor: 'rgba(128, 128, 128, 1)',\r\n                                width: 22,\r\n                                height: 20,\r\n                                position: 'absolute',\r\n                                right: 10,\r\n                                bottom: 0,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    ) : (\r\n                        <FastImage\r\n                            source={{ uri: chatStepIconOff, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                tintColor: 'rgba(128, 128, 128, 1)',\r\n                                width: 22,\r\n                                height: 20,\r\n                                position: 'absolute',\r\n                                right: 10,\r\n                                bottom: 0,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    )}\r\n\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        top: 10,\r\n                        padding: 10,\r\n                        alignSelf: 'center',\r\n                        fontSize: 12,\r\n                        overflow: 'hidden',\r\n                        flex: 1,\r\n                        fontWeight: messageUnread ? 700 : 400,\r\n                        color: messageUnread ? '#FF0000' : '#90949c',\r\n                    }}>\r\n                        {item.invoiceNumber && item.stepIndicator.value > 2 ? item.invoiceNumber : ''}\r\n                    </Text>\r\n\r\n                    {isHovered && item.read && (\r\n                        <Tooltip label=\"Mark as unread\" placement='right' openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                onHoverIn={hoverUnreadIn}\r\n                                onHoverOut={hoverUnreadOut}\r\n                                onPress={updateChatToUnread}\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    right: 0,\r\n                                    top: -10,\r\n                                    padding: 10,\r\n                                    alignSelf: 'center',\r\n                                }}\r\n\r\n                            >\r\n                                <MaterialIcons name=\"mark-as-unread\" size={22} color={isUnreadHovered ? \"#1B81C2\" : \"#BABABA\"} />\r\n                            </Pressable>\r\n                        </Tooltip>\r\n                    )}\r\n\r\n                    {isHovered && (\r\n                        <Tooltip label=\"Open in new tab\" placement='right' openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                onHoverIn={hoverOpenNewTabIn}\r\n                                onHoverOut={hoverOpenNewTabOut}\r\n                                onPress={handlePressNewTab}\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    right: -22,\r\n                                    top: -22,\r\n                                    padding: 10,\r\n                                    alignSelf: 'center',\r\n                                }}\r\n\r\n                            >\r\n                                <MaterialIcons name=\"open-in-new\" size={16} color={isOpenNewTabHovered ? \"#1B81C2\" : \"#BABABA\"} />\r\n                            </Pressable>\r\n                        </Tooltip>\r\n                    )}\r\n                </View>\r\n\r\n\r\n\r\n            </Pressable>\r\n        );\r\n    }\r\n\r\n\r\n};\r\n\r\nconst ChatList = ({ unreadButtonValue, activeButtonValue, }) => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const chatListLastVisible = useSelector((state) => state.chatListLastVisible);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const loadMoreLoading = useSelector((state) => state.loadMoreLoading);\r\n    const noMoreData = useSelector((state) => state.noMoreData);\r\n    const renderFooterRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    const { chatId } = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const updateChatToRead = async () => {\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", activeChatId);\r\n        const user = projectControlAuth.currentUser\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        if (email !== '') {\r\n\r\n            try {\r\n                await updateDoc(docRef, {\r\n                    read: true,\r\n                    readBy: arrayUnion(email),\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n                dispatch(setActiveChatId(''));\r\n                navigate(`/top/chat-messages`);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const fetchChatMessages = () => {\r\n        if (!activeChatId) {\r\n            // Handle the case where there's no active chat ID\r\n        }\r\n        else {\r\n            dispatch(setChatMessagesData([]));\r\n            dispatch(setChatMessageBoxLoading(true));\r\n            updateChatToRead();\r\n\r\n            try {\r\n                // References to the document and its 'messages' subcollection\r\n                let activeInvoiceNumer;\r\n                const docRef = doc(projectExtensionFirestore, 'chats', activeChatId);\r\n\r\n                const messagesRef = collection(docRef, 'messages');\r\n\r\n                // Query for the 'messages' subcollection\r\n                const messagesQuery = query(messagesRef, orderBy('timestamp', 'desc'), limit(10));\r\n\r\n                // Listen to the document\r\n                const unsubscribeDoc = onSnapshot(docRef, (docSnapshot) => {\r\n                    if (docSnapshot.exists()) {\r\n                        const data = docSnapshot.data();\r\n                        // Add the document ID to the data\r\n                        const dataWithId = {\r\n                            ...data,\r\n                            id: docSnapshot.id\r\n                        };\r\n                        // Dispatch any action you need with the document data\r\n                        dispatch(setSelectedChatData(dataWithId));\r\n\r\n                        // Define and listen to the invoice document only after the chat document is confirmed to exist\r\n                        if (dataWithId.invoiceNumber || dataWithId.invoiceNumber == '') {\r\n                            const invoiceDocRef = doc(projectExtensionFirestore, 'IssuedInvoice', dataWithId.invoiceNumber);\r\n                            const unsubscribeInvoice = onSnapshot(invoiceDocRef, (invoiceDocSnapshot) => {\r\n                                if (invoiceDocSnapshot.exists()) {\r\n                                    const invoiceData = invoiceDocSnapshot.data();\r\n                                    // Add the document ID to the data\r\n                                    const invoiceDataWithId = {\r\n                                        ...invoiceData,\r\n                                        id: invoiceDocSnapshot.id\r\n                                    };\r\n                                    // Dispatch any action you need with the invoice document data\r\n                                    dispatch(setInvoiceData(invoiceDataWithId ? invoiceDataWithId : {}));\r\n\r\n                                } else {\r\n                                    // Handle the case where the invoice document does not exist\r\n                                    console.log('No Invoice Yet');\r\n                                    dispatch(setInvoiceData({}));\r\n                                }\r\n                            });\r\n\r\n                            // Cleanup function for the invoice listener\r\n                            return () => {\r\n                                unsubscribeInvoice();\r\n\r\n                            };\r\n                        } else {\r\n                            dispatch(setInvoiceData({}));\r\n                            console.log('No Invoice Yet');\r\n                        }\r\n\r\n                    }\r\n\r\n                });\r\n                const unsubscribeMessages = onSnapshot(messagesQuery, (querySnapshot) => {\r\n                    let messages = [];\r\n                    querySnapshot.forEach((doc) => {\r\n                        const data = doc.data();\r\n                        const timestamp = data.timestamp ? data.timestamp.toString() : null;\r\n                        messages.push({ id: doc.id, ...data, timestamp });\r\n                    });\r\n\r\n                    dispatch(setChatMessagesData(messages));\r\n                    dispatch(setChatMessageBoxLoading(false));\r\n                    globalMessagesLastVisible = querySnapshot.docs[querySnapshot.docs.length - 1];\r\n                });\r\n\r\n                // Return a cleanup function\r\n                return () => {\r\n                    unsubscribeDoc();\r\n                    unsubscribeMessages();\r\n                    // if (activeInvoiceNumer && activeInvoiceNumer !== '') {\r\n                    //     unsubscribeInvoice();\r\n                    // }\r\n                };\r\n            } catch (error) {\r\n                console.error(\"Error setting up real-time messages: \", error);\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleLoadMore = () => {\r\n        dispatch(setLoadMoreLoading(true));\r\n\r\n        let nextQuery;\r\n        if (!globalLastVisible) {\r\n            // No more data to load or globalLastVisible is undefined\r\n            console.log(\"No more data to load or globalLastVisible is undefined\");\r\n            setTimeout(() => {\r\n                dispatch(setLoadMoreLoading(false));\r\n                dispatch(setNoMoreData(true));\r\n            }, 0);\r\n            return;\r\n        }\r\n        else {\r\n\r\n            if (chatListData.length >= 10) {\r\n                if (unreadButtonValue == true) {\r\n\r\n                    if (activeButtonValue == 0) {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    else {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                where('read', '==', false),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    if (activeButtonValue == 0) {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    else {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            else {\r\n                dispatch(setNoMoreData(true));\r\n                dispatch(setLoadMoreLoading(false));\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        if (chatListData.length < 10) {\r\n            setTimeout(() => {\r\n                dispatch(setLoadMoreLoading(false));\r\n                dispatch(setNoMoreData(true));\r\n            }, 0);\r\n        }\r\n\r\n        else {\r\n            try {\r\n                const unsubscribe = onSnapshot(nextQuery, (snapshot) => {\r\n                    if (snapshot.empty) {\r\n                        // Handle the case when there's no more data\r\n                        console.log(\"No more data to load\");\r\n                        setTimeout(() => {\r\n                            dispatch(setLoadMoreLoading(false));\r\n                            dispatch(setNoMoreData(true));\r\n                            globalLastVisible = null;\r\n                        }, 0);  // Delay setting loading and no more data flags\r\n                        return;\r\n                    }\r\n\r\n                    const chatsData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        chatsData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n\r\n                    // Append new data to the existing list\r\n\r\n                    setTimeout(() => {\r\n                        dispatch(setChatListData([...chatListData, ...chatsData]));\r\n                        dispatch(setLoadMoreLoading(false));\r\n                        globalLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n                    }, 0);\r\n\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data from Firebase:', error);\r\n                setTimeout(() => dispatch(setLoadMoreLoading(false)), 0);  // Ensure loading is set to false even if there's an error\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        // dispatch(setCarImageUrl(''));\r\n        dispatch(setMessageTextInputValue(''));\r\n\r\n        if (chatId) {\r\n\r\n            setTimeout(() => {\r\n                const decodedChatId = decodeURIComponent(chatId);\r\n                const decryptedChatId = decryptData(decodedChatId).toString();\r\n                let parts = decryptedChatId.split('_');\r\n                let stockIdPart = parts[1];\r\n                let emailPart = parts[parts.length - 1];\r\n\r\n\r\n                // console.log(decryptedChatId);\r\n\r\n                if (!emailPart) {\r\n                    console.error(\"Invalid email part:\", emailPart);\r\n                    return;\r\n                }\r\n                const folderName = selectedChatData.carData && selectedChatData.carData.stockID ? selectedChatData.carData.stockID : (selectedChatData.vehicle && selectedChatData.vehicle.carId ? selectedChatData.vehicle.carId : '');\r\n                const storage = getStorage(projectExtensionFirebase);\r\n                const imageRef = ref(storage, `${stockIdPart}/0`); // Ensure this path is correct\r\n\r\n                // console.log('Folder Name: ', folderName)\r\n                getDownloadURL(imageRef)\r\n                    .then((url) => {\r\n                        setImageUrl(url);\r\n                        globalImageUrl = url;\r\n                        dispatch(setCarImageUrl(url));\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        if (error.code === 'storage/object-not-found') {\r\n                            // Handle the 'object not found' error.\r\n                            setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n                        } else {\r\n                            // Handle other errors differently\r\n\r\n                            setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n\r\n                        }\r\n                    });\r\n\r\n\r\n                if (selectedChatData) {\r\n                    const collectionPath = 'accounts';\r\n                    const docId = selectedChatData.participants?.customer; // Ensure this is a valid document ID\r\n\r\n                    const docRef = doc(projectExtensionFirestore, collectionPath, emailPart);\r\n\r\n                    const docRefVehicle = doc(projectExtensionFirestore, 'VehicleProducts', stockIdPart);\r\n\r\n                    const unsubscribeVehicle = onSnapshot(docRefVehicle, (doc) => {\r\n                        if (doc.exists()) {\r\n                            const data = doc.data();\r\n                            dispatch(setSelectedVehicleData(data ? data : {}));\r\n                            // console.log(`Name: ${data.textFirst} ${data.textLast}`)\r\n\r\n                            // globalCustomerCarName = carName;\r\n                            // setTextFirst(data.textFirst ? data.textFirst : '');\r\n                            // setTextLast(data.textLast ? data.textLast : '');\r\n\r\n\r\n                        } else {\r\n                            console.log(\"Document not found\");\r\n                        }\r\n                    }, (error) => {\r\n                        console.error(\"Error fetching document: \", error);\r\n                    });\r\n\r\n                    const unsubscribe = onSnapshot(docRef, (doc) => {\r\n                        if (doc.exists()) {\r\n                            const data = doc.data();\r\n                            dispatch(setSelectedCustomerData(data ? data : {}));\r\n                            globalCustomerFirstName = data.textFirst ? data.textFirst : '';\r\n                            globalCustomerLastName = data.textLast ? data.textLast : '';\r\n                            // console.log(`Name: ${data.textFirst} ${data.textLast}`)\r\n\r\n\r\n                            // globalCustomerCarName = carName;\r\n                            // setTextFirst(data.textFirst ? data.textFirst : '');\r\n                            // setTextLast(data.textLast ? data.textLast : '');\r\n\r\n\r\n                        } else {\r\n                            console.log(\"Document not found\");\r\n                        }\r\n                    }, (error) => {\r\n                        console.error(\"Error fetching document: \", error);\r\n                    });\r\n\r\n                    // Clean up function to unsubscribe from the listener when the component unmounts\r\n                    return () => {\r\n\r\n                        unsubscribe()\r\n                        unsubscribeVehicle()\r\n                    };\r\n                }\r\n\r\n\r\n\r\n\r\n            }, 1);\r\n        }\r\n\r\n        const unsubscribe = fetchChatMessages();\r\n\r\n\r\n        return () => {\r\n            if (unsubscribe) {\r\n\r\n                unsubscribe(); // Unsubscribe when the component unmounts\r\n            }\r\n        };\r\n\r\n    }, [activeChatId]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (chatId) {\r\n            const decryptedChatId = decryptData(chatId).toString();\r\n\r\n            setTimeout(() => {\r\n                // console.log(decryptedChatId)\r\n                dispatch(setActiveChatId(decryptedChatId));\r\n\r\n            }, 1);\r\n\r\n\r\n        }\r\n    }, [chatId]);\r\n\r\n    const handleChatPress = async (customerId, chatId) => {\r\n        if (chatId !== activeChatId) {\r\n            const encryptedChatId = encryptData(chatId);\r\n            const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\r\n            navigate(`/top/chat-messages/${encodedChatId}`);\r\n            // console.log(encodedChatId)\r\n            // console.log(decodeURIComponent(encodedChatId))\r\n            // console.log(decryptData(decodeURIComponent(encodedChatId)))\r\n\r\n            // // Assuming chatId is already properly encoded and needs no further encoding\r\n            // const path = `/devadmin/chat-messages/${encodedChatId}`;\r\n            // // Construct the URL for hash-based routing\r\n            // const baseUrl = window.location.origin + window.location.pathname;\r\n            // const fullPath = `${baseUrl}#${path}`;\r\n            // window.open(fullPath, '_blank');\r\n\r\n            dispatch(setActiveChatId(chatId));\r\n\r\n            globalCustomerId = customerId;\r\n            globalChatId = chatId;\r\n\r\n        }\r\n    };\r\n\r\n    const handleChatPressNewTab = async (customerId, chatId) => {\r\n        const encryptedChatId = encryptData(chatId);\r\n        const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\r\n        // navigate(`/devadmin/chat-messages/${encodedChatId}`);\r\n        // console.log(encodedChatId)\r\n        // console.log(decodeURIComponent(encodedChatId))\r\n        // console.log(decryptData(decodeURIComponent(encodedChatId)))\r\n\r\n        // Assuming chatId is already properly encoded and needs no further encoding\r\n        const path = `/top/chat-messages/${encodedChatId}`;\r\n        // Construct the URL for hash-based routing\r\n        const baseUrl = window.location.origin + window.location.pathname;\r\n        const fullPath = `${baseUrl}#${path}`;\r\n        window.open(fullPath, '_blank');\r\n\r\n        // dispatch(setActiveChatId(chatId));\r\n\r\n        globalCustomerId = customerId;\r\n        globalChatId = chatId;\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setActiveChatId(''));\r\n    }, [unreadButtonValue])\r\n\r\n    const renderFooter = () => {\r\n        return (\r\n            <>\r\n                {!noMoreData && (\r\n                    <View style={{ paddingVertical: 20, borderTopWidth: 1, borderColor: \"#DADDE1\", height: 60, }}>\r\n                        {loadMoreLoading && (\r\n                            <Spinner\r\n                                animating\r\n                                size=\"sm\"\r\n                                color={'#7B9CFF'}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </>\r\n\r\n\r\n        );\r\n    };\r\n\r\n    const renderItem = ({ item }) => {\r\n\r\n        const isActive = item.id === activeChatId;\r\n        const messageUnread = !item.read;\r\n        const formattedDate = formatDate(item.lastMessageDate);\r\n\r\n        return (\r\n            <ChatListItem\r\n                onPressNewTab={() => handleChatPressNewTab(item.participants.customer, item.id)}\r\n                chatListData={chatListData}\r\n                item={item}\r\n                onPress={() => handleChatPress(item.participants.customer, item.id)}\r\n                isActive={isActive}\r\n                messageUnread={messageUnread}\r\n                formattedDate={formattedDate}\r\n            />\r\n        );\r\n\r\n    };\r\n\r\n    if (chatListData.length < 1) {\r\n        return (\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }}>\r\n                <Text style={{ fontWeight: 700, alignSelf: 'center', }}>{unreadButtonValue ? 'No unread messages to show' : 'No messages to show'}</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <>\r\n                <FlatList\r\n                    style={{ height: 100, borderBottomLeftRadius: 5, }}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id.toString()}\r\n                    data={chatListData}\r\n                    initialNumToRender={1}\r\n                    maxToRenderPerBatch={10}\r\n                    windowSize={21}\r\n                    onEndReachedThreshold={0.05}\r\n                    removeClippedSubviews={true}\r\n                    ListFooterComponent={renderFooter}\r\n                    onEndReached={handleLoadMore}  // Implement this function\r\n                />\r\n\r\n            </>\r\n\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\nconst SearchChat = ({ lastVisible, setLastVisible, unreadButtonValue, activeButtonValue }) => {\r\n\r\n    const searchInputRef = useRef(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [clearVisible, setClearVisible] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const searchData = async ({ }) => {\r\n        let q;\r\n\r\n        const searchValue = searchInputRef.current?.value;\r\n        if (unreadButtonValue == true) {\r\n\r\n            if (activeButtonValue == 0) {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n            else {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        where('read', '==', false),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            if (activeButtonValue == 0) {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n            else {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        try {\r\n            const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                const chatsData = [];\r\n                snapshot.forEach((doc) => {\r\n                    chatsData.push({\r\n                        id: doc.id,\r\n                        ...doc.data(),\r\n                    });\r\n                });\r\n                dispatch(setChatListData(chatsData));\r\n                globalLastVisible = snapshot.docs[snapshot.docs.length - 1]\r\n\r\n\r\n            });\r\n\r\n            // Return the unsubscribe function to stop listening when necessary\r\n            return () => {\r\n                if (unsubscribe) {\r\n                    unsubscribe();\r\n                }\r\n            };\r\n        } catch (error) {\r\n            // Handle errors here\r\n            console.error('Error fetching data from Firebase:', error);\r\n        }\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n\r\n    //     searchData();\r\n\r\n    // }, [searchText])\r\n\r\n    useEffect(() => {\r\n        setSearchText('');\r\n        dispatch(setChatListSearchText(''));\r\n        globalSearchText = '';\r\n        searchInputRef.current.value = '';\r\n        setClearVisible(false);\r\n\r\n    }, [activeButtonValue, unreadButtonValue])\r\n\r\n    const handleSearchEnter = () => {\r\n        // setSortField('dateAdded');\r\n        // setIsSortActive(false)\r\n        if (searchInputRef.current?.value !== '') {\r\n            dispatch(setChatListSearchText(searchInputRef.current.value.trim()));\r\n            setSearchText(searchInputRef.current.value.trim());\r\n            globalSearchText = searchInputRef.current.value.trim();\r\n        }\r\n        else {\r\n            setSearchText('');\r\n            globalSearchText = '';\r\n            if (searchText == '') {\r\n                dispatch(setChatListSearchText(''));\r\n                searchData();\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleClearText = () => {\r\n        searchInputRef.current.clear();\r\n        setClearVisible(false);\r\n        if (searchText !== '') {\r\n            setSearchText(''); // Clear the text\r\n            dispatch(setChatListSearchText(''));\r\n            dispatch(setActiveChatId(''));\r\n            globalSearchText = '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', width: '100%', alignSelf: 'center', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5, margin: 10 }}>\r\n            <TextInput\r\n                ref={searchInputRef}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                placeholderTextColor='#9B9E9F'\r\n                underlineColorAndroid=\"transparent\"\r\n                style={{ flex: 1, height: 40, padding: 10, outlineStyle: 'none' }}\r\n                onChangeText={() => setClearVisible(true)}\r\n                keyboardType='search'\r\n            />\r\n            {clearVisible ? (\r\n                <Pressable\r\n                    focusable={false}\r\n                    onPress={handleClearText}\r\n                    style={({ pressed, hovered }) => [\r\n                        {\r\n                            borderRadius: 10,\r\n                            marginRight: 10,\r\n                            opacity: pressed ? 0.5 : 1, // Change opacity when pressed\r\n                            // Add hover effect\r\n                            backgroundColor: hovered ? '#ddd' : 'transparent',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <MaterialIcons name=\"close\" size={20} color=\"#000\" />\r\n                </Pressable>\r\n            ) : null}\r\n        </View>);\r\n}\r\n\r\nconst timelineData = [\r\n    { key: '1', title: 'Event 1', description: 'Description 1' },\r\n    { key: '2', title: 'Event 2', description: 'Description 2' },\r\n    // ... more events\r\n];\r\n\r\n// const TimelineItem = ({ title, description }) => (\r\n//     <View style={{ alignItems: 'center', marginRight: 20 }}>\r\n//         <View style={{ width: 10, height: 10, borderRadius: 5, backgroundColor: 'blue', marginBottom: 5 }} />\r\n//         <Text style={{ fontWeight: 'bold' }}>{title}</Text>\r\n//         <Text style={{ textAlign: 'center' }}>{description}</Text>\r\n//     </View>\r\n// );\r\n\r\n// const HorizontalTimeline = () => (\r\n//     <FlatList\r\n//         data={timelineData}\r\n//         renderItem={({ item }) => <TimelineItem title={item.title} description={item.description} />}\r\n//         horizontal\r\n//         showsHorizontalScrollIndicator={false}\r\n//         style={{ flexDirection: 'row', padding: 10 }}\r\n//     />\r\n// );\r\n\r\nconst ModalAddBank = () => {\r\n    const [modalAddBankVisible, setModalAddBankVisible] = useState(false);\r\n    const [isCancelHovered, setCancelHovered] = useState(false);\r\n    const [isAddHovered, setAddHovered] = useState(false);\r\n\r\n\r\n\r\n\r\n    const handleModalAddBankOpen = () => {\r\n        setModalAddBankVisible(true);\r\n    };\r\n\r\n    const handleModalAddBankClose = () => {\r\n        setModalAddBankVisible(false);\r\n    };\r\n\r\n    const bankNameRef = useRef(null);\r\n    const branchNameRef = useRef(null);\r\n    const swiftcodeRef = useRef(null);\r\n    const addressRef = useRef(null);\r\n    const accountHolderRef = useRef(null);\r\n    const accountNumberRef = useRef(null);\r\n\r\n\r\n\r\n    const addBankAccount = async () => {\r\n        const docRef = doc(projectExtensionFirestore, 'DataForInvoice', 'BankAccounts');\r\n\r\n        const bankNameValue = bankNameRef.current?.value;\r\n        const branchNameValue = branchNameRef.current?.value;\r\n        const swiftcodeValue = swiftcodeRef.current?.value;\r\n        const addressValue = addressRef.current?.value;\r\n        const accountHolderValue = accountHolderRef.current?.value;\r\n        const accountNumberValue = accountNumberRef.current?.value;\r\n\r\n        const elementToAdd = {\r\n            bankName: bankNameValue,\r\n            branchName: branchNameValue,\r\n            swiftCode: swiftcodeValue,\r\n            address: addressValue,\r\n            accountHolder: accountHolderValue,\r\n            accountNumberValue: accountNumberValue,\r\n        }\r\n\r\n        try {\r\n            await updateDoc(docRef, {\r\n                [bankNameValue]: elementToAdd,\r\n            });\r\n            console.log(\"Element added to the array field\");\r\n            handleModalAddBankClose();\r\n        } catch (error) {\r\n            console.error(\"Error adding element to the array\", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Pressable onPress={handleModalAddBankOpen} style={{ alignSelf: 'center', marginHorizontal: 5, marginTop: 3, }}>\r\n                <FontAwesome name={'plus-circle'} size={25} color='#16A34A' />\r\n            </Pressable>\r\n\r\n            <Modal isOpen={modalAddBankVisible} onClose={handleModalAddBankClose} useRNModal>\r\n                <Modal.Content>\r\n                    <Modal.Header>Add Bank Account</Modal.Header>\r\n                    <Modal.Body>\r\n                        <View style={{ height: '100%', flex: 1, }}>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Bank Name:</Text>\r\n                                <TextInput\r\n                                    ref={bankNameRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Bank Name'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Branch Name:</Text>\r\n                                <TextInput\r\n                                    ref={branchNameRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Branch Name'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>SWIFTCODE:</Text>\r\n                                <TextInput\r\n                                    ref={swiftcodeRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='SWIFTCODE'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Address:</Text>\r\n                                <TextInput\r\n                                    ref={addressRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Address'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Account Holder:</Text>\r\n                                <TextInput\r\n                                    ref={accountHolderRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Account Holder'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Account Number:</Text>\r\n                                <TextInput\r\n                                    ref={accountNumberRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Account Number'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', }}>\r\n                            <Pressable\r\n                                style={{ width: 100, padding: 5, borderRadius: 3, backgroundColor: isCancelHovered ? '#686868' : '#525252' }}\r\n                                onHoverIn={() => setCancelHovered(true)}\r\n                                onHoverOut={() => setCancelHovered(false)}\r\n                                onPress={handleModalAddBankClose}\r\n                            >\r\n                                <Text style={{ fontWeight: 500, textAlign: 'center', color: 'white', }}>Cancel</Text>\r\n                            </Pressable>\r\n\r\n                            <Pressable\r\n                                onPress={addBankAccount}\r\n                                style={{ width: 100, padding: 5, borderRadius: 3, backgroundColor: isAddHovered ? '#1B8B5A' : '#16A34A' }}\r\n                                onHoverIn={() => setAddHovered(true)}\r\n                                onHoverOut={() => setAddHovered(false)}\r\n                            >\r\n                                <Text style={{ fontWeight: 500, textAlign: 'center', color: 'white', }}>Add</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst BankInformation = () => {\r\n\r\n    let invoiceSelectedDueDate = '';\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [selectedDueDate, setSelectedDueDate] = useState('');\r\n    const [bankAccountsData, setBankAccountsData] = useState({});\r\n    const [selectedBank, setSelectedBank] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.bankAccount.bankName ? invoiceData.bankInformations.bankAccount.bankName : \"SUMITOMO MITSUI BANKING CORPORATION\");\r\n    let selectedBankData = {};\r\n\r\n    const paymentTermsRef = useRef(null);\r\n    const salesAgreementRef = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const subscribeToBankAccounts = () => {\r\n            const docRef = doc(projectExtensionFirestore, 'DataForInvoice', 'BankAccounts');\r\n\r\n            const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    const bankAccounts = {};\r\n\r\n                    // Assuming each entry in your document is a bank account\r\n                    Object.entries(data).forEach(([key, value]) => {\r\n                        if (value.bankName) {\r\n                            bankAccounts[value.bankName] = value;\r\n                        }\r\n                    });\r\n\r\n                    // console.log(bankAccounts);\r\n                    setBankAccountsData(bankAccounts);\r\n                    globalInvoiceVariable.bankInformations.bankAccount = bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"];\r\n                    // Use state or context to store selected bank data if needed\r\n                    // setSelectedBank(bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"]);\r\n                    // console.log(bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"]);\r\n                } else {\r\n                    console.log(\"No such document!\");\r\n                }\r\n            }, (error) => {\r\n                console.error(\"Error fetching document\", error);\r\n            });\r\n\r\n            return unsubscribe; // Return the unsubscribe function to call it later to stop listening\r\n        };\r\n\r\n\r\n        if (currentDate) {\r\n            const date = new Date(currentDate);\r\n\r\n            // Check the day of the week\r\n            const dayOfWeek = date.getDay();\r\n\r\n            if (dayOfWeek === 5) { // Friday\r\n                date.setDate(date.getDate() + 3); // Add 3 days to reach Monday\r\n            } else if (dayOfWeek === 6) { // Saturday\r\n                date.setDate(date.getDate() + 2); // Add 2 days to reach Monday\r\n            } else {\r\n                date.setDate(date.getDate() + 1); // Sunday to Thursday, add 1 day\r\n            }\r\n\r\n            // Format the date back to string\r\n            const adjustedDate = date.toISOString().split('T')[0];\r\n            setSelectedDueDate(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.dueDate ? invoiceData.bankInformations.dueDate : adjustedDate);\r\n            globalInvoiceVariable.bankInformations.dueDate = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.dueDate ? invoiceData.bankInformations.dueDate : adjustedDate;\r\n            globalInvoiceVariable.bankInformations.paymentTerms = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.paymentTerms ? invoiceData.bankInformations.paymentTerms : paymentTermsRef.current?.value;\r\n            // globalInvoiceVariable.bankInformations.salesAgreement = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.salesAgreement ? invoiceData.bankInformations.salesAgreement : salesAgreementRef.current?.value;\r\n            globalInvoiceVariable.bankInformations.issuingDate = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.issuingDate ? invoiceData.bankInformations.issuingDate : currentDate;\r\n\r\n        }\r\n\r\n        const unsubscribe = subscribeToBankAccounts();\r\n    }, [currentDate]);\r\n\r\n\r\n\r\n    const ModalCalendar = ({ selectedDate, setSelectedDate, currentDate }) => {\r\n\r\n        const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n        const handleModalCalendarOpen = () => {\r\n            setModalCalendarVisible(true);\r\n        };\r\n\r\n        const handleModalCalendarClose = () => {\r\n            setModalCalendarVisible(false);\r\n        };\r\n\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n                <Pressable style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onPress={handleModalCalendarOpen}>\r\n                    <TextInput value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n                </Pressable>\r\n\r\n                <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Content>\r\n                        <View style={{ height: '100%', flex: 1 }}>\r\n                            <Calendar\r\n                                onDayPress={useCallback(day => {\r\n                                    setSelectedDate(day.dateString);\r\n                                    invoiceSelectedDueDate = day.dateString;\r\n                                    globalInvoiceVariable.bankInformations.dueDate = day.dateString;\r\n                                    handleModalCalendarClose();\r\n                                }, [])}\r\n                                markedDates={{\r\n                                    [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n                                }}\r\n                                renderArrow={(direction) => (\r\n                                    direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n                                )}\r\n                                enableSwipeMonths={true}\r\n                                initialDate={selectedDate}\r\n                                // minDate={currentDate}\r\n                                showSixWeeks />\r\n\r\n                        </View>\r\n\r\n                    </Modal.Content>\r\n\r\n                </Modal>\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n\r\n    const handleValueChange = (selectedBankName) => {\r\n        const selectedBankObj = bankAccountsData[selectedBankName];\r\n        setSelectedBank(selectedBankName);\r\n        globalInvoiceVariable.bankInformations.bankAccount = selectedBankObj;\r\n        // console.log(selectedBankObj);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <View style={{ marginLeft: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Due Date:</Text>\r\n                <ModalCalendar currentDate={currentDate} selectedDate={selectedDueDate} setSelectedDate={setSelectedDueDate} />\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2, marginVertical: 10, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Bank Account: </Text>\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <Select\r\n                        selectedValue={selectedBank}\r\n                        onValueChange={handleValueChange}\r\n                        bgColor={'#FAFAFA'}\r\n                        accessibilityLabel=\"Choose Country\"\r\n                        placeholder=\"---\"\r\n                        _selectedItem={{\r\n                            bg: \"teal.600\",\r\n                            endIcon: <CheckIcon />,\r\n                        }}\r\n                        height={9}\r\n                        style={{ flex: 1, marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\r\n                    >\r\n                        {Object.keys(bankAccountsData).map((bankName) => (\r\n                            <Select.Item key={bankName} label={bankName} value={bankName} />\r\n                        ))}\r\n                    </Select>\r\n\r\n                    <ModalAddBank />\r\n                </View>\r\n\r\n\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Payment Terms:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.bankInformations.paymentTerms = value;\r\n                }} ref={paymentTermsRef} multiline defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.paymentTerms ? invoiceData.bankInformations.paymentTerms : \"Full payment via Telegraphic Transfer (T/T) required before the due date.\"} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            {/* <View style={{ flex: 4, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Sales Agreement:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.bankInformations.salesAgreement = value;\r\n                }} ref={salesAgreementRef} multiline defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.salesAgreement ? invoiceData.bankInformations.salesAgreement : `Payment Information:\r\nThe customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.\r\nNo warranty service is provided on used vehicles.\r\n\r\nConditions for order cancellation:\r\n(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.\r\n(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.\r\n\r\nIntermediary Banking Information:\r\nBank Name: SUMITOMO MITSUI BANKING CORPORATION (THE NEW YORK AUTHORITY).\r\nSwift code: SMBCUS33\r\nAddress: 277 Park Avenue\r\nCity: New York, NY\r\nPostal Code: 10172\r\nCountry: United States\r\n`}\r\n                    placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ width: '60%', height: 100, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View> */}\r\n        </>\r\n    );\r\n}\r\n\r\nconst PaymentDetails = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const fobPriceInput = useRef(null);\r\n    const freightInput = useRef(null);\r\n    const inspectionInput = useRef(null);\r\n    const insuranceInput = useRef(null);\r\n\r\n    const [totalAmountCalculated, setTotalAmountCalculated] = useState('0');\r\n    const [selectedIncoterms, setSelectedIncoterms] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.incoterms ? invoiceData.paymentDetails.incoterms :\r\n        selectedChatData.insurance ? 'CIF' : 'C&F');\r\n\r\n    const [inspectionIsChecked, setInspectionIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionIsChecked : (invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.paymentDetails.inspectionIsChecked : selectedChatData.inspection));\r\n    const [inspectionName, setInspectionName] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionName ? invoiceData.paymentDetails.inspectionName : selectedChatData.inspectionName);\r\n\r\n    const [warrantyIsChecked, setWarrantyIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyIsCheck ? invoiceData.paymentDetails.warrantyIsCheck : selectedChatData.warranty);\r\n\r\n    const warrantyPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyPrice && invoiceData.paymentDetails.warrantyPrice ? invoiceData.paymentDetails.warrantyPrice : 150;\r\n    const insurancePrice = 50;\r\n\r\n    const additionalNameRef = useRef(null);\r\n    const additionalPriceRef = useRef(null);\r\n\r\n    const safelyParseNumber = (value) => {\r\n        const number = Number(value.replace(/,/g, ''));\r\n        return isNaN(number) ? 0 : number;\r\n    };\r\n\r\n    const calculateTotalAmount = () => {\r\n        const fobPrice = safelyParseNumber(fobPriceInput.current?.value);\r\n        const freight = safelyParseNumber(freightInput.current?.value);\r\n        const inspection = safelyParseNumber(inspectionInput.current?.value);\r\n        const insurance = safelyParseNumber(insuranceInput.current?.value);\r\n\r\n        const additionalPricesTotal = globalAdditionalPriceArray.reduce((sum, value) => sum + safelyParseNumber(value), 0);\r\n\r\n        // const total = Math.round(fobPrice + freight + inspection + (warrantyIsChecked ? warrantyPrice : 0) + insurance + additionalPricesTotal).toLocaleString();\r\n        const total = Math.round(fobPrice + freight + inspection + insurance + additionalPricesTotal).toLocaleString();\r\n        setTotalAmountCalculated(total);\r\n        globalInvoiceVariable.paymentDetails.totalAmount = total;\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        additionalNameRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName.join('\\n') : '';\r\n        additionalPriceRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice.join('\\n') : '';\r\n\r\n        globalInvoiceVariable.paymentDetails.incoterms = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.incoterms ? invoiceData.paymentDetails.incoterms : selectedIncoterms;\r\n        globalInvoiceVariable.paymentDetails.inspectionIsChecked = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionIsChecked : inspectionIsChecked;\r\n        globalInvoiceVariable.paymentDetails.inspectionName = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionName ? invoiceData.paymentDetails.inspectionName : inspectionName;\r\n        globalInvoiceVariable.paymentDetails.inspectionPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionPrice ? invoiceData.paymentDetails.inspectionPrice : inspectionIsChecked ? 300 : 0;\r\n        globalInvoiceVariable.paymentDetails.warrantyIsCheck = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyIsCheck ? invoiceData.paymentDetails.warrantyIsCheck : warrantyIsChecked;\r\n        // globalInvoiceVariable.paymentDetails.warrantyPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyPrice ? invoiceData.paymentDetails.warrantyPrice : warrantyIsChecked ? warrantyPrice : 0;\r\n        globalInvoiceVariable.paymentDetails.fobPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.fobPrice ? invoiceData.paymentDetails.fobPrice : fobPriceInput.current?.value;\r\n        globalInvoiceVariable.paymentDetails.freightPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.freightPrice ? invoiceData.paymentDetails.freightPrice : freightInput.current?.value;\r\n        globalInvoiceVariable.paymentDetails.insurancePrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.insurancePrice ? invoiceData.paymentDetails.insurancePrice : selectedIncoterms == 'CIF' ? insuranceInput.current?.value : 0;\r\n        globalInvoiceVariable.paymentDetails.additionalPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice : [];\r\n        globalInvoiceVariable.paymentDetails.additionalName = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName : [];\r\n        globalAdditionalPriceArray = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice : [];\r\n\r\n        calculateTotalAmount();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        inspectionInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionPrice && invoiceData.paymentDetails.inspectionPrice == true ? invoiceData.paymentDetails.inspectionPrice : inspectionIsChecked ? 300 : 0;\r\n        calculateTotalAmount();\r\n\r\n    }, [inspectionIsChecked]);\r\n\r\n    useEffect(() => {\r\n\r\n        insuranceInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.insurancePrice && invoiceData.paymentDetails.incoterms == 'CIF' ? invoiceData.paymentDetails.insurancePrice : selectedIncoterms == 'CIF' ? 50 : 0;\r\n        freightInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.freightPrice ? invoiceData.paymentDetails.freightPrice : selectedIncoterms == 'FOB' ? 0 : freightCalculation;\r\n\r\n        calculateTotalAmount();\r\n\r\n    }, [selectedIncoterms]);\r\n\r\n    useEffect(() => {\r\n        calculateTotalAmount();\r\n\r\n    }, [warrantyIsChecked]);\r\n\r\n    const freightCalculation = (\r\n        (selectedChatData.m3 ? selectedChatData.m3 :\r\n            (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n                selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice)\r\n    ).toFixed(2);\r\n\r\n    const totalPriceCalculation = (\r\n        (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n            (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n                selectedChatData.carData.fobPrice : 0) *\r\n            (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n                (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                    selectedChatData.currency.jpyToUsd : 0))) +\r\n        parseFloat(freightCalculation)\r\n    ).toFixed(2);\r\n\r\n    const fobPriceDollars = (\r\n        (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n            (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n                selectedChatData.carData.fobPrice : 0) *\r\n            (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n                (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                    selectedChatData.currency.jpyToUsd : 0))\r\n        ).toFixed(2));\r\n\r\n\r\n    const handleAdditionalPriceTextChange = (text) => {\r\n        // Process and filter each line\r\n        const filteredLines = text.split('\\n').map(line => {\r\n            let filteredLine = line.replace(/[^0-9.]/g, '');\r\n            const parts = filteredLine.split('.');\r\n            if (parts.length > 2) {\r\n                filteredLine = parts[0] + '.' + parts[1];\r\n            }\r\n            return filteredLine;\r\n        });\r\n\r\n        // Update the ref and the state\r\n        additionalPriceRef.current.value = filteredLines.join('\\n');\r\n        // setAdditionalPriceArray(filteredLines);\r\n        globalAdditionalPriceArray = filteredLines;\r\n        globalInvoiceVariable.paymentDetails.additionalPrice = filteredLines;\r\n        calculateTotalAmount();\r\n\r\n    };\r\n\r\n    const handleAdditionalNameTextChange = (text) => {\r\n        // Update the ref\r\n        additionalNameRef.current.value = text;\r\n\r\n        // Split the text into lines and update the state\r\n        const lines = text.split('\\n');\r\n        // setAdditionalNameArray(lines);\r\n        globalInvoiceVariable.paymentDetails.additionalName = lines;\r\n    };\r\n\r\n\r\n    const handleFobPriceInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        fobPriceInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.fobPrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleFreightInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        freightInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.freightPrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleInspectionInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        inspectionInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.inspectionPrice = filteredText;\r\n\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleInsuranceInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        insuranceInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.insurancePrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#16A34A', }}>Payment Details</Text>\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Incoterms:</Text>\r\n\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <Select\r\n                        selectedValue={selectedIncoterms}\r\n                        onValueChange={(value) => setSelectedIncoterms(value)}\r\n                        bgColor={'#FAFAFA'}\r\n                        accessibilityLabel=\"Choose Country\"\r\n                        placeholder=\"---\"\r\n                        _selectedItem={{\r\n                            bg: \"teal.600\",\r\n                            endIcon: <CheckIcon />,\r\n                        }}\r\n                        height={9}\r\n                        style={{ flex: 1, marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\r\n                    >\r\n                        <Select.Item key={'C&F'} label={'C&F'} value={'C&F'} />\r\n                        <Select.Item key={'CIF'} label={'CIF'} value={'CIF'} />\r\n                        <Select.Item key={'FOB'} label={'FOB'} value={'FOB'} />\r\n                    </Select>\r\n                    <Text style={{ fontWeight: 700, margin: 3, }}>Rate: </Text>\r\n                    <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>\r\n                        {selectedChatData.currency && selectedChatData.currency.usdToJpy\r\n                            ? Number(selectedChatData.currency.usdToJpy).toFixed(2) : '0.00'}\r\n                    </Text>\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ flexDirection: 'row', marginLeft: 2, marginTop: 10, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Inspection:</Text>\r\n                <Checkbox\r\n                    isChecked={inspectionIsChecked}\r\n                    onChange={value => {\r\n                        setInspectionIsChecked(value)\r\n                        globalInvoiceVariable.paymentDetails.inspectionIsChecked = value;\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                />\r\n            </View>\r\n\r\n            {/* <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Warranty:</Text>\r\n                <Checkbox\r\n                    isChecked={warrantyIsChecked}\r\n                    onChange={value => setWarrantyIsChecked(value)}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                />\r\n                <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>${warrantyPrice}</Text>\r\n            </View> */}\r\n\r\n            <View style={{ marginLeft: 2 }}>\r\n                <Text style={{ fontWeight: 700, margin: 3 }}>FOB Price:</Text>\r\n\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1 }}>$</Text>\r\n                    <TextInput\r\n                        onChangeText={handleFobPriceInputChangeText}\r\n                        ref={fobPriceInput}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.paymentDetails.fobPrice : selectedIncoterms == 'FOB' ? 0 : fobPriceDollars}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='FOB Price'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2 }}>\r\n                <Text style={{ fontWeight: 700, margin: 3 }}>Freight:</Text>\r\n\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1 }}>$</Text>\r\n                    <TextInput\r\n                        onChangeText={handleFreightInputChangeText}\r\n                        ref={freightInput}\r\n                        defaultValue={freightCalculation}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Freight'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2, display: selectedIncoterms == 'CIF' ? 'flex' : 'none' }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Insurance:</Text>\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, }}>$</Text>\r\n                    <TextInput\r\n                        onChangeText={handleInsuranceInputChangeText}\r\n                        ref={insuranceInput}\r\n                        defaultValue={50}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder={`Insurance`}\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2, display: inspectionIsChecked ? 'flex' : 'none' }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Inspection:</Text>\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, }}>$</Text>\r\n                    <TextInput\r\n                        onChangeText={handleInspectionInputChangeText}\r\n                        ref={inspectionInput}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder={`Inspection [${selectedChatData.inspectionName}]`}\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n                    <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>{`[${selectedChatData.inspectionName}]`}</Text>\r\n                </View>\r\n\r\n            </View>\r\n\r\n\r\n            <View style={{ marginLeft: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Additional:</Text>\r\n\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        flexDirection: 'row',\r\n                    }}\r\n                >\r\n                    <TextInput ref={additionalNameRef} onChangeText={handleAdditionalNameTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                        style={{ flex: 1, height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                    <TextInput ref={additionalPriceRef} onChangeText={handleAdditionalPriceTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Price'\r\n                        style={{ flex: 1, height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignItems: 'center', }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Total Amount:</Text>\r\n                <Text style={{ fontWeight: 700, fontSize: 18, margin: 3, color: '#FF0000', }}>{`$${totalAmountCalculated}`}</Text>\r\n            </View>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst SelectPortOfDischarge = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [countriesDischarge, setCountriesDischarge] = useState([]);\r\n    const [portsData, setPortsData] = useState({});\r\n    const [nearestPorts, setNearestPorts] = useState([]);\r\n    const [selectedPortCountry, setSelectedPortCountry] = useState('');\r\n    const [selectedCountry, setSelectedCountry] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.country : selectedChatData.country);\r\n    const [selectedPort, setSelectedPort] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.port : selectedChatData.port);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.port : selectedChatData.port);\r\n\r\n        const fetchPorts = async () => {\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    const sortedPorts = Object.keys(data)\r\n                        .map(portName => ({\r\n                            name: portName.replace(/_/g, '.'), // Replace '_' with '.'\r\n                            ...data[portName]\r\n                        }))\r\n                        .sort((a, b) => a.sortOrder - b.sortOrder);\r\n                    setNearestPorts(sortedPorts);\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n\r\n        const fetchPortsData = async () => {\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    setPortsData(data);\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n\r\n        fetchPorts();\r\n        fetchPortsData();\r\n        // fetchCountries();\r\n\r\n        globalInvoiceVariable.discharge.port = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.discharge.port ? invoiceData.discharge.port : selectedPort;\r\n        globalInvoiceVariable.discharge.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.discharge.country ? invoiceData.discharge.country : selectedPortCountry;\r\n\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        // When selectedCountry changes, update nearestPorts\r\n        const selectedCountryData = countriesDischarge.find(country => country.name === selectedCountry);\r\n        if (selectedCountryData && selectedCountryData.nearestPorts) {\r\n            setNearestPorts(selectedCountryData.nearestPorts);\r\n        } else {\r\n            setNearestPorts([]); // Reset to empty if no ports or country not found\r\n        }\r\n    }, [selectedCountry, countriesDischarge]);\r\n\r\n    useEffect(() => {\r\n        const portData = portsData[selectedPort];\r\n        if (portData && portData.country) {\r\n            setSelectedPortCountry(portData.country);\r\n            // console.log('Nagoya Price ', portData.nagoyaPrice);\r\n            globalInvoiceVariable.discharge.country = portData.country;\r\n        } else {\r\n            setSelectedPortCountry(''); // Reset selected country if port not found or has no country\r\n            console.log('Not found');\r\n        }\r\n    }, [selectedPort, portsData]);\r\n\r\n    return (\r\n        <>\r\n            {/* <Select\r\n                selectedValue={selectedCountry}\r\n                onValueChange={(value) => {\r\n                    setSelectedCountry(value)\r\n                    globalInvoiceVariable.discharge.country = value;\r\n\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"Choose Country\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />,\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}\r\n            >\r\n                {countriesDischarge.map((country) => (\r\n                    <Select.Item key={country.name} label={country.name} value={country.name} />\r\n                ))}\r\n            </Select> */}\r\n            <Select\r\n                selectedValue={selectedPort}\r\n                onValueChange={(value) => {\r\n                    setSelectedPort(value)\r\n                    globalInvoiceVariable.discharge.port = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                accessibilityLabel=\"Choose Port\"\r\n                placeholder=\"Select port\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />,\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}\r\n            >\r\n                {nearestPorts.map((port, index) => (\r\n                    <Select.Item key={index} label={port.name} value={port.name} />\r\n                ))}\r\n            </Select>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst SelectSalesPerson = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [selectedSales, setSelectedSales] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.salesPerson : (selectedChatData.carData && selectedChatData.carData.sales ? selectedChatData.carData.sales : ''));\r\n    const salesData = useSelector((state) => state.salesData);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        globalInvoiceVariable.salesPerson = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.salesPerson ? invoiceData.salesPerson : (selectedChatData.carData && selectedChatData.carData.sales ? selectedChatData.carData.sales : '');\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Select\r\n            selectedValue={selectedSales}\r\n            onValueChange={(value) => {\r\n                setSelectedSales(value);\r\n                globalInvoiceVariable.salesPerson = value;\r\n            }}\r\n            bgColor={'#FAFAFA'}\r\n            accessibilityLabel=\"---\"\r\n            placeholder=\"---\"\r\n            _selectedItem={{\r\n                bg: \"teal.600\",\r\n                endIcon: <CheckIcon />\r\n            }}\r\n            style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}>\r\n            {salesData.map((item) => (\r\n                <Select.Item key={item.id} label={item.name} value={item.name} />\r\n            ))}\r\n        </Select>\r\n    );\r\n}\r\n\r\nconst SelectPortOfDeparture = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const portData = useSelector((state) => state.portData);\r\n    const salesData = useSelector((state) => state.salesData);\r\n    const [selectedPort, setSelectedPort] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : ''));\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : ''));\r\n\r\n        globalInvoiceVariable.departurePort = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.departurePort ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : '');\r\n        globalInvoiceVariable.departureCountry = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.departureCountry ? invoiceData.departureCountry : 'Japan';\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                flexDirection: 'row',\r\n            }}\r\n        >\r\n            <Select\r\n                focusable={false}\r\n                selectedValue='Japan'\r\n                onValueChange={(value) => {\r\n                    globalInvoiceVariable.departureCountry = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1, outlineStyle: 'none', }}>\r\n                <Select.Item key={'Japan'} label={'Japan'} value={'Japan'} />\r\n            </Select>\r\n\r\n            <Select\r\n                focusable={false}\r\n                selectedValue={selectedPort}\r\n                onValueChange={(value) => {\r\n                    setSelectedPort(value);\r\n                    globalInvoiceVariable.departurePort = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1, outlineStyle: 'none' }}>\r\n                {portData.map((item) => (\r\n                    <Select.Item key={item.id} label={item.name} value={item.name} />\r\n                ))}\r\n            </Select>\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\nconst NotifyPartyInput = ({ accountData, setAccountData }) => {\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.sameAsConsignee : true);\r\n\r\n    const notifyPartyName = useRef(null);\r\n    const notifyPartyAddress = useRef(null);\r\n    const notifyPartyCity = useRef(null);\r\n    const notifyPartyCountry = useRef(null);\r\n    const notifyPartyContactNumber = useRef(null);\r\n    const notifyPartyFax = useRef(null);\r\n    const notifyPartyEmail = useRef(null);\r\n\r\n    useEffect(() => {\r\n\r\n        notifyPartyName.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.name ? invoiceData.notifyParty.name : '';\r\n        notifyPartyAddress.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.address ? invoiceData.notifyParty.address : '';\r\n        notifyPartyCity.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.city ? invoiceData.notifyParty.city : '';\r\n        notifyPartyCountry.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.country ? invoiceData.notifyParty.country : '';\r\n        notifyPartyContactNumber.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.contactNumber ? invoiceData.notifyParty.contactNumber : '';\r\n        notifyPartyFax.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.fax ? invoiceData.notifyParty.fax : '';\r\n        notifyPartyEmail.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.email ? invoiceData.notifyParty.email : '';\r\n\r\n        globalInvoiceVariable.notifyParty.name = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.name ? invoiceData.notifyParty.name : notifyPartyName.current?.value;\r\n        globalInvoiceVariable.notifyParty.address = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.address ? invoiceData.notifyParty.address : notifyPartyAddress.current?.value;\r\n        globalInvoiceVariable.notifyParty.city = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.city ? invoiceData.notifyParty.city : notifyPartyCity.current?.value;\r\n        globalInvoiceVariable.notifyParty.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.country ? invoiceData.notifyParty.country : notifyPartyCountry.current?.value;\r\n        globalInvoiceVariable.notifyParty.contactNumber = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.contactNumber ? invoiceData.notifyParty.contactNumber : notifyPartyContactNumber.current?.value;\r\n        globalInvoiceVariable.notifyParty.fax = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.fax ? invoiceData.notifyParty.fax : notifyPartyFax.current?.value;\r\n        globalInvoiceVariable.notifyParty.email = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.email ? invoiceData.notifyParty.email : notifyPartyEmail.current?.value;\r\n        globalInvoiceVariable.notifyParty.sameAsConsignee = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.sameAsConsignee ? invoiceData.notifyParty.sameAsConsignee : isChecked;\r\n\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#FF0000', }}>Notify Party</Text>\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, }}>\r\n                <Checkbox\r\n                    isChecked={isChecked}\r\n                    onChange={value => {\r\n                        setIsChecked(value)\r\n                        globalInvoiceVariable.notifyParty.sameAsConsignee = value;\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                >\r\n                    Same as consignee\r\n                </Checkbox>\r\n            </View>\r\n\r\n            <View style={{ display: isChecked ? 'none' : 'flex', }}>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Name:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.name = value;\r\n                    }}\r\n                        ref={notifyPartyName} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Address:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.address = value;\r\n                    }} ref={notifyPartyAddress} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Address'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>City:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.city = value;\r\n                    }} ref={notifyPartyCity} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='City'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Country:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.country = value;\r\n                    }} ref={notifyPartyCountry} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Country'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Contact Number:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.contactNumber = value;\r\n                    }} ref={notifyPartyContactNumber} disabled={isChecked} multiline placeholderTextColor='#9B9E9F' placeholder='Contact Number'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>FAX:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.fax = value;\r\n                    }} ref={notifyPartyFax} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='FAX'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Email:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.email = value;\r\n                    }} ref={notifyPartyEmail} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n            </View>\r\n\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />{/* Horizontal Line */}\r\n        </>\r\n    )\r\n}\r\n\r\nconst ConsigneeInput = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.sameAsBuyer : true);\r\n    const [accountData, setAccountData] = useState({});\r\n\r\n    const consigneeName = useRef(null);\r\n    const consigneeAddress = useRef(null);\r\n    const consigneeCity = useRef(null);\r\n    const consigneeCountry = useRef(null);\r\n    const consigneeContactNumber = useRef(null);\r\n    const consigneeFax = useRef(null);\r\n    const consigneeEmail = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAccountData = async () => {\r\n            if (!selectedChatData.participants && selectedChatData.participants.customer) return; // Make sure there's a selected email\r\n            const docRef = doc(projectExtensionFirestore, 'accounts', selectedChatData.participants.customer);\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    setAccountData(docSnap.data());\r\n                    // console.log(docSnap.data());\r\n                    consigneeName.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.name ? invoiceData.consignee.name : `${data.textFirst ? data.textFirst : ''} ${data.textLast ? data.textLast : ''}`;\r\n                    consigneeAddress.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.address ? invoiceData.consignee.address : `${data.textStreet ? data.textStreet : ''} ${data.textZip ? data.textZip : ''}`;\r\n                    consigneeCity.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.city ? invoiceData.consignee.city : `${data.city ? data.city : ''}`;\r\n                    consigneeCountry.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.country ? invoiceData.consignee.country : `${data.country ? data.country : ''}`;\r\n                    consigneeContactNumber.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.contactNumber ? invoiceData.consignee.contactNumber : `${data.textPhoneNumber ? data.textPhoneNumber : ''}`;\r\n                    consigneeFax.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.fax ? invoiceData.consignee.fax : `${data.fax ? data.fax : ''}`;\r\n                    consigneeEmail.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.email ? invoiceData.consignee.email : `${data.textEmail ? data.textEmail : ''}`;\r\n\r\n\r\n                    globalInvoiceVariable.consignee.name = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.name ? invoiceData.consignee.name : `${data.textFirst ? data.textFirst : ''} ${data.textLast ? data.textLast : ''}`;\r\n                    globalInvoiceVariable.consignee.address = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.address ? invoiceData.consignee.address : `${data.textStreet ? data.textStreet : ''} ${data.textZip ? data.textZip : ''}`;\r\n                    globalInvoiceVariable.consignee.city = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.city ? invoiceData.consignee.city : `${data.city ? data.city : ''}`;\r\n                    globalInvoiceVariable.consignee.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.country ? invoiceData.consignee.country : `${data.country ? data.country : ''}`;\r\n                    globalInvoiceVariable.consignee.contactNumber = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.contactNumber ? invoiceData.consignee.contactNumber : `${data.textPhoneNumber ? data.textPhoneNumber : ''}`;\r\n                    globalInvoiceVariable.consignee.fax = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.fax ? invoiceData.consignee.fax : `${data.fax ? data.fax : ''}`;\r\n                    globalInvoiceVariable.consignee.email = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.email ? invoiceData.consignee.email : `${data.textEmail ? data.textEmail : ''}`;\r\n                    globalInvoiceVariable.consignee.sameAsBuyer = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.sameAsBuyer ? invoiceData.consignee.sameAsBuyer : isChecked;\r\n\r\n                    // console.log(accountData.length);\r\n                } else {\r\n                    console.log('No such document!');\r\n                    setAccountData(null);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n        fetchAccountData();\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isChecked) {\r\n            consigneeName.current.value = `${accountData.textFirst ? accountData.textFirst : ''} ${accountData.textLast ? accountData.textLast : ''}`;\r\n            consigneeAddress.current.value = `${accountData.textStreet ? accountData.textStreet : ''} ${accountData.textZip ? accountData.textZip : ''}`;\r\n            consigneeCity.current.value = `${accountData.city ? accountData.city : ''}`;\r\n            consigneeCountry.current.value = `${accountData.country ? accountData.country : ''}`;\r\n            consigneeContactNumber.current.value = `${accountData.textPhoneNumber ? accountData.textPhoneNumber : ''}`;\r\n            consigneeFax.current.value = `${accountData.fax ? accountData.fax : ''}`;\r\n            consigneeEmail.current.value = `${accountData.textEmail ? accountData.textEmail : ''}`;\r\n        }\r\n\r\n        // console.log(globalInvoiceVariable);\r\n\r\n\r\n    }, [isChecked])\r\n\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#0A78BE', }}>Consignee</Text>\r\n            </View>\r\n            <View style={{ flexDirection: 'row', margin: 5, }}>\r\n                <Checkbox\r\n                    isChecked={isChecked}\r\n                    onChange={value => {\r\n                        globalInvoiceVariable.consignee.sameAsBuyer = value;\r\n                        setIsChecked(value)\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                >\r\n                    Same as buyer\r\n                </Checkbox>\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Name:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.name = value;\r\n                }} ref={consigneeName} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Address:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.address = value;\r\n                }} ref={consigneeAddress} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Address'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>City:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.city = value;\r\n                }} ref={consigneeCity} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='City'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Country:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.country = value;\r\n                }} ref={consigneeCountry} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Country'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Contact Number:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.contactNumber = value;\r\n                }} ref={consigneeContactNumber} disabled={isChecked} multiline placeholderTextColor='#9B9E9F' placeholder='Contact Number'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>FAX:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.fax = value;\r\n                }} ref={consigneeFax} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='FAX'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Email:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.email = value;\r\n                }} ref={consigneeEmail} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            <NotifyPartyInput accountData={accountData} setAccountData={setAccountData} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst InvoiceFeatures = ({ widthScaleFactor, heightScaleFactor }) => {\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    return (\r\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', width: 495 * widthScaleFactor, }}>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemAnBrSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Anti-Lock Braking System (ABS)</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemDrAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Driver Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemPaAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Passenger Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemSiAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Side Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAiCoFr ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Air Conditioner (Front)</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAiCoRe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Air Conditioner (Rear)</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAMFMRa ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>AM/FM Radio</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAMFMSt ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>AM/FM Stereo</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCDPl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>CD Player</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCDCh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>CD Changer</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCrSpCo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Cruis Speed Control</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortDiSp ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}> Digital Speedometer</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortDVDPl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>DVD Player</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortHDD ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Hard Disk Drive</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortNaSyGPS ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Navigation System (GPS)</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortPoSt ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Steering</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortPrAuSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Premium Audio System</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortReKeSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Remote Keyless System</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortTiStWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Tilt Steering Wheel</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorLeSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Leather Seats</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoDoLo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Door Locks</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoMi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Mirrors</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Seats</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoWi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Windows</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorReWiDe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Rear Window Defroster</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorReWiWi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Rear Window Wiper</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorThRoSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Third Row Seats</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorTiGl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Tinted Glasses</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorAlWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Alloy Wheels</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorPoSlDo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Sliding Door</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorSuRo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Sunroof</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsCuWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Customized Wheels</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsFuLo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Fully Loaded</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsMaHiAv ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Maintenance History Available</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsBrNeTi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Brand New Tires</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsNoAcHi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>No Accident History</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsNoSmPrOw ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Non-Smoking Previous Owner</Text>\r\n            </View>\r\n\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsOnOwHi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>One Owner History</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsPeRaTi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Performance-rated Tires</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsReBo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Repainted Body</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsTuEn ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Turbo Engine</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsUpAuSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Upgraded Audio System</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst createHmacSha256Hash = (data, secretKey) => {\r\n    const hash = HmacSHA256(data, secretKey);\r\n    return enc.Hex.stringify(hash);\r\n};\r\n\r\n\r\nconst ConfirmPaymentModalContent = () => {\r\n    const dispatch = useDispatch();\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n\r\n\r\n    const [historyModalVisible, setHistoryModalVisible] = useState(false);\r\n\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    const totalAmountString = invoiceData.paymentDetails.totalAmount;\r\n    const totalAmountNumber = parseFloat(totalAmountString.replace(/,/g, ''));\r\n\r\n    const inputAmountRef = useRef(null);\r\n\r\n    const handleHistoryModalOpen = () => {\r\n        setHistoryModalVisible(true);\r\n\r\n        // console.log(selectedChatData.payments);\r\n    }\r\n\r\n    const handleHistoryModalClose = () => {\r\n        setHistoryModalVisible(false);\r\n\r\n    }\r\n\r\n    const handleInputAmountChangeText = (text) => {\r\n        // Remove characters that are not digits, dot, or minus, and ensure minus is only at the start\r\n        const filteredText = text\r\n            .replace(/[^0-9.-]/g, '')  // Remove characters that are not digits, dot, or minus\r\n            .replace(/(.)\\-/g, '$1')   // Remove minus if not at the start\r\n            .replace(/^-(?=\\-)/, '')   // Remove extra minus at the start\r\n            .replace(/(\\..*)\\./g, '$1'); // Allow only one dot\r\n\r\n        // Update the input field\r\n        inputAmountRef.current.value = filteredText;\r\n    };\r\n\r\n\r\n\r\n    const handleCompletePaymentPress = () => {\r\n        const filteredText = invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1') - totalValue;\r\n        inputAmountRef.current.value = filteredText;\r\n    }\r\n\r\n\r\n    const fullPaymentMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `Full Payment Received\r\n\r\nDear Customer,\r\n\r\nI hope this message finds you well. \r\n\r\nWe are writing to confirm that we have received your full payment. \r\n\r\nThank you for settling your account promptly.\r\n\r\nShould you have any further questions or require assistance, please feel free to contact us.\r\n                \r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `Full Payment Received\r\n\r\nDear Customer,\r\n\r\nI hope this message finds you well. \r\n\r\nWe are writing to confirm that we have received your full payment. \r\n                \r\nThank you for settling your account promptly.\r\n                \r\nShould you have any further questions or require assistance, please feel free to contact us.\r\n                                \r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n\r\n    const overBalanceMessage = async (amount) => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `Dear Customer,\r\n\r\nGood day! \r\n\r\nWe're writing to inform you about your account with us at Real Motor Japan.\r\n                \r\nYou have an extra overbalance in your account.\r\n\r\nAmount: $${amount}\r\n                \r\nFeel free to contact us if you have any questions. We're here to help.\r\n                \r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `Dear Customer,\r\n\r\nGood day! \r\n                \r\nWe're writing to inform you about your account with us at Real Motor Japan.\r\n                                \r\nYou have an extra overbalance in your account.\r\n                \r\nAmount: $${amount}\r\n                                \r\nFeel free to contact us if you have any questions. We're here to help.\r\n                                \r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const paymentMessage = async (amount, transactionDate) => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `🌟 Payment Confirmation Alert 🌟\r\n\r\nDear Customer! 👋\r\n\r\nWe're thrilled to inform you that your recent payment has been successfully reflected in our bank account.\r\n\r\nYour prompt and efficient transaction is greatly appreciated! 🎉\r\n\r\n🔍 Payment Details:\r\n\r\nAmount: $${amount}\r\nTransaction Date: ${transactionDate}\r\n\r\nYour account and services are now fully up-to-date. If you have any further questions or require assistance, feel free to reach out.\r\n\r\nThank you for your continued trust in us.\r\nLooking forward to serving you more in the future! 😊\r\n\r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `🌟 Payment Confirmation Alert 🌟\r\n\r\nDear Customer! 👋\r\n\r\nWe're thrilled to inform you that your recent payment has been successfully reflected in our bank account.\r\n\r\nYour prompt and efficient transaction is greatly appreciated! 🎉\r\n\r\n🔍 Payment Details:\r\n\r\nAmount: $${amount}\r\nTransaction Date: ${transactionDate}\r\n\r\nYour account and services are now fully up-to-date. If you have any further questions or require assistance, feel free to reach out.\r\n\r\nThank you for your continued trust in us.\r\nLooking forward to serving you more in the future! 😊\r\n\r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const confirmPayment = async () => {\r\n        setIsConfirmLoading(true);\r\n\r\n        const amountNeeded = invoiceData.paymentDetails.totalAmount ? invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1') - totalValue : '';\r\n        const docRef = doc(projectExtensionFirestore, 'chats', selectedChatData.id);\r\n        const docRefCustomer = doc(projectExtensionFirestore, 'accounts', selectedChatData.participants.customer);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n\r\n        const newPayments = [\r\n            { value: inputAmountRef.current.value, date: formattedTime },\r\n        ];\r\n\r\n        const newPaymentsAccount = [\r\n            { value: inputAmountRef.current.value, date: formattedTime, vehicleRef: selectedChatData.carData.referenceNumber, vehicleName: selectedChatData.carData.carName, },\r\n        ];\r\n\r\n        const inputAmount = inputAmountRef.current.value;\r\n        const numericInputAmount = Number(inputAmount);\r\n        const formattedInputAmount = numericInputAmount.toLocaleString();\r\n        const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n        if (inputAmount === '' || inputAmount === '0') {\r\n            setIsConfirmLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (!inputAmount.startsWith('-')) {\r\n                // First, execute paymentMessage\r\n                await paymentMessage(formattedInputAmount, formattedTime);\r\n                await delay(10); //10ms delay\r\n\r\n                if (numericInputAmount >= amountNeeded) {\r\n                    // Once paymentMessage is successful, execute fullPaymentMessage\r\n                    await fullPaymentMessage();\r\n                    await delay(10); //10ms delay\r\n\r\n                    if (numericInputAmount > amountNeeded) {\r\n                        // Calculate overbalance and execute overBalanceMessage\r\n                        const overBalance = numericInputAmount - amountNeeded;\r\n\r\n                        if (overBalance > 0) {\r\n                            await overBalanceMessage(selectedCustomerData.overBalance ? selectedCustomerData.overBalance + overBalance : '');\r\n                            await delay(10); //10ms delay\r\n                            await updateDoc(docRefCustomer, {\r\n                                overBalance: increment(overBalance),\r\n                            });\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    // Update step indicator for successful payment\r\n                    await updateDoc(docRef, {\r\n                        'stepIndicator.value': 4,\r\n                        'stepIndicator.status': 'Payment Confirmed',\r\n                    });\r\n\r\n                } else {\r\n                    // Handle the case where the payment is less than the amount needed\r\n                    console.log('Partial payment received');\r\n                }\r\n\r\n                // Update payments and payments history\r\n\r\n                await updateDoc(docRef, {\r\n                    payments: arrayUnion(...newPayments)\r\n                });\r\n\r\n                await updateDoc(docRefCustomer, {\r\n                    paymentsHistory: arrayUnion(...newPaymentsAccount)\r\n                });\r\n\r\n            } else {\r\n                console.error('Negative value entered');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error processing payment: ', error);\r\n        } finally {\r\n            setIsConfirmLoading(false);\r\n            dispatch(setTransactionModalVisible(false));\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    function formatDate(dateString) {\r\n        // Remove ' at ' from the date string\r\n        const cleanedDateString = dateString.replace(' at ', ' ');\r\n        const date = new Date(cleanedDateString);\r\n\r\n        if (isNaN(date.getTime())) {\r\n            // Date is not valid\r\n            console.error(\"Invalid Date:\", dateString);\r\n            return \"Invalid Date\";\r\n        }\r\n\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        const year = date.getFullYear();\r\n        const month = months[date.getMonth()];\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n\r\n        let hours = date.getHours();\r\n        const minutes = date.getMinutes().toString().padStart(2, '0');\r\n        const ampm = hours >= 12 ? 'pm' : 'am';\r\n\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n\r\n        return `${year} ${month} ${day} at ${hours}:${minutes}${ampm}`;\r\n    }\r\n\r\n    const PaymentHistoryModal = ({ historyModalVisible, handleHistoryModalClose, payments }) => {\r\n        // Create a copy of payments and sort it by date in descending order\r\n        const sortedPayments = [...payments].sort((a, b) => {\r\n            const dateA = a.date;\r\n            const dateB = b.date;\r\n            return dateB - dateA; // Sorts in descending order\r\n        });\r\n\r\n        // console.log(sortedPayments);\r\n\r\n        return (\r\n            <Modal isOpen={historyModalVisible} onClose={handleHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Payment History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500, }}>\r\n                            {\r\n                                sortedPayments.length > 0 ?\r\n                                    sortedPayments.map((payment, index) => (\r\n                                        <View key={index} style={{\r\n                                            marginBottom: 15,\r\n                                            backgroundColor: '#F8F9FF', // Card background color\r\n                                            borderRadius: 10, // Rounded corners for the card\r\n                                            shadowColor: '#000', // Shadow color\r\n                                            shadowOffset: { width: 0, height: 2 },\r\n                                            shadowOpacity: 0.1,\r\n                                            shadowRadius: 2,\r\n                                            elevation: 3, // Elevation for Android\r\n                                            padding: 15, // Padding inside the card\r\n                                            borderBottomWidth: 1,\r\n                                            borderBottomColor: '#eee',\r\n                                        }}>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Date: </Text>\r\n                                                <Text style={{ color: '#333' }}>\r\n                                                    {formatDate(sortedPayments[sortedPayments.length - 1 - index].date)}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Value: </Text>\r\n                                                <Text style={{ color: Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString().startsWith('-') ? '#FF0000' : '#16A34A' }}>\r\n                                                    ${Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString()}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                        </View>\r\n                                    )) :\r\n                                    <Text style={{ fontWeight: 'bold', alignSelf: 'center', }} italic>No history to show</Text>\r\n                            }\r\n                        </ScrollView>\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        );\r\n    };\r\n\r\n    const totalValue = selectedChatData.payments\r\n        ? selectedChatData.payments.reduce((sum, payment) => {\r\n            const value = Number(payment.value);\r\n            return sum + (isNaN(value) ? 0 : value);\r\n        }, 0)\r\n        : 0;\r\n\r\n    const isTotalValueGreater = Number(totalValue) < Number(invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1'));\r\n    const displayedAmount = isTotalValueGreater ? Number(totalValue).toLocaleString() : invoiceData.paymentDetails.totalAmount;\r\n\r\n    return (\r\n\r\n        <View style={{ flex: 1, }}>\r\n\r\n            <View style={{ marginLeft: 5, }}>\r\n\r\n                <Text style={{ fontWefight: 700, fontSize: 14, }}>Total Paid:</Text>\r\n\r\n                <Progress w=\"90%\" shadow={2} value={Number(totalValue)} max={totalAmountNumber} _filledTrack={{\r\n                    bg: \"lime.500\"\r\n                }} />\r\n\r\n                <Text style={{ fontWeight: 700, fontSize: 14, color: '#FF0000', }}>${displayedAmount}\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#8D7777', }}> out of </Text>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#16A34A', }}>{`$${invoiceData.paymentDetails.totalAmount}`}</Text>\r\n                </Text>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ marginLeft: 5, }}>\r\n\r\n                <Pressable\r\n                    onPress={handleHistoryModalOpen}\r\n                    style={{ width: 'fit-content', }}>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#0A78BE', }} underline selectable={false}>Payments History</Text>\r\n                </Pressable>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ marginLeft: 5, marginTop: 5, }}>\r\n\r\n                <Text style={{ fontWeight: 700, fontSize: 14, }}>Input Amount:</Text>\r\n\r\n                <View style={{ flexDirection: 'row', alignItems: 'center', }}>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 18, }}>$</Text>\r\n\r\n                    <TextInput\r\n                        ref={inputAmountRef}\r\n                        placeholderTextColor='#9B9E9F' placeholder='Input Amount'\r\n                        style={{ height: 35, width: 300, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        onChangeText={handleInputAmountChangeText}\r\n                    />\r\n\r\n                </View>\r\n\r\n                <Pressable\r\n                    onPress={handleCompletePaymentPress}\r\n                    style={{ width: 'fit-content', }}>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#16A34A', }} underline selectable={false}>Complete Payment</Text>\r\n                </Pressable>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}>\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        backgroundColor: '#16A34A', // Change color on hover\r\n                        borderRadius: 5,\r\n                        padding: 5,\r\n                    }}\r\n                >\r\n                    {!isConfirmLoading ? (\r\n                        <Pressable\r\n                            onPress={() => confirmPayment()}\r\n                        >\r\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>\r\n                                Confirm\r\n                            </Text>\r\n                        </Pressable>\r\n                    ) : (\r\n                        <Spinner size={'sm'} color={'white'} />)}\r\n\r\n                </View>\r\n            </View>\r\n\r\n            <PaymentHistoryModal\r\n                historyModalVisible={historyModalVisible}\r\n                handleHistoryModalClose={handleHistoryModalClose}\r\n                payments={selectedChatData.payments ? selectedChatData.payments : []} />\r\n\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst IssueProformaInvoiceModalContent = () => {\r\n    const dispatch = useDispatch();\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const [isConfirmHovered, setIsConfirmHovered] = useState(false);\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    const cfsInputRef = useRef(null);\r\n    const placeOfDeliveryInputRef = useRef(null);\r\n    const secretKey = CRYPTO_KEY.toString();\r\n\r\n\r\n\r\n    const invoiceMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: 'Issued Invoice',\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'IssuedInvoice',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: 'Issued Invoice',\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const confirmInvoice = async () => {\r\n        setIsConfirmLoading(true);\r\n        const year = currentDate.split('-')[0]; // Split the date and get the year\r\n        const yearSuffix = year.slice(-2); // Get last 2 digits of the year\r\n        const collectionRef = collection(projectExtensionFirestore, \"IssuedInvoice\");\r\n\r\n        try {\r\n            // Retrieve all documents for the current yearF\r\n            const querySnapshot = await getDocs(collectionRef);\r\n            let maxNumber = 0;\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const docName = doc.id;\r\n                if (docName.startsWith(yearSuffix)) {\r\n                    const number = parseInt(docName.substring(2), 10);\r\n                    if (number > maxNumber) {\r\n                        maxNumber = number;\r\n                    }\r\n                }\r\n            });\r\n\r\n            const nextNumber = maxNumber + 1;\r\n            const docName = `${yearSuffix}${nextNumber}`;\r\n            const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", docName);\r\n            const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\r\n\r\n            const hashedData = createHmacSha256Hash(docName, secretKey);\r\n\r\n            // Create a new document with the globalInvoiceVariable object\r\n            if (selectedChatData.invoiceNumber) {\r\n                const updateDocRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n\r\n                await setDoc(updateDocRef, {\r\n                    ...globalInvoiceVariable,\r\n                    isCancelled: false,\r\n                    customerEmail: selectedCustomerData.textEmail,\r\n                    chatId: selectedChatData.id,\r\n                    carData: selectedChatData.carData,\r\n                }, { merge: true });\r\n\r\n                if (selectedChatData.stepIndicator.value == 1) {\r\n                    await updateDoc(docRefChatId, {\r\n                        'stepIndicator.status': 'Issue Proforma Invoice',\r\n                        'stepIndicator.value': 2,\r\n                        // finalPrice: globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, ''),\r\n                    });\r\n                }\r\n\r\n                invoiceMessage();\r\n                setIsConfirmLoading(false);\r\n                dispatch(setTransactionModalVisible(false));\r\n            }\r\n\r\n            else {\r\n\r\n                await setDoc(docRef, {\r\n                    ...globalInvoiceVariable,\r\n                    isCancelled: false,\r\n                    customerEmail: selectedCustomerData.textEmail,\r\n                    chatId: selectedChatData.id,\r\n                    cryptoNumber: hashedData,\r\n                    carData: selectedChatData.carData,\r\n                });\r\n\r\n                await updateDoc(docRefChatId, {\r\n                    keywords: arrayUnion(docName),\r\n                    invoiceNumber: docName,\r\n                    'stepIndicator.status': 'Issue Proforma Invoice',\r\n                    'stepIndicator.value': 2,\r\n                    // finalPrice: globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, ''),\r\n                });\r\n\r\n                invoiceMessage();\r\n                setIsConfirmLoading(false);\r\n                dispatch(setTransactionModalVisible(false));\r\n\r\n\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error creating document: \", error);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     calculateTotalAmount();\r\n    // }, [additionalPriceArray]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        globalInvoiceVariable.cfs = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.cfs ? invoiceData.cfs : cfsInputRef.current?.value;\r\n        globalInvoiceVariable.placeOfDelivery = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.placeOfDelivery ? invoiceData.placeOfDelivery : placeOfDeliveryInputRef.current?.value;\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <ScrollView style={{ flex: 1, maxHeight: 500, }}>\r\n\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>CFS:</Text>\r\n                <TextInput\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.cfs ? invoiceData.cfs : ''}\r\n                    ref={cfsInputRef} placeholderTextColor='#9B9E9F' placeholder='Input CFS (Optional)'\r\n                    style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onChangeText={(value) => globalInvoiceVariable.cfs = value} />\r\n            </View>\r\n\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Place of Delivery:</Text>\r\n                <TextInput\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.placeOfDelivery ? invoiceData.placeOfDelivery : ''}\r\n                    ref={placeOfDeliveryInputRef} placeholderTextColor='#9B9E9F' placeholder='Place of Delivery (Optional)'\r\n                    style={{ height: 25, width: 200, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onChangeText={(value) => globalInvoiceVariable.placeOfDelivery = value} />\r\n            </View>\r\n\r\n            <View style={{ margin: 5, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3 }}>Port of Departure:</Text>\r\n                <SelectPortOfDeparture />\r\n            </View>\r\n\r\n            <View style={{ margin: 5, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Sales Person:</Text>\r\n                <SelectSalesPerson />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 5, }} />\r\n\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Port of Discharge:</Text>\r\n                {/*Select Discharge*/}\r\n                <SelectPortOfDischarge />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 5, }} />\r\n\r\n            <ConsigneeInput />\r\n\r\n            <PaymentDetails />\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />\r\n\r\n            <BankInformation />\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}>\r\n                <View\r\n\r\n                    // onTouchEnd={() => confirmInvoice()}\r\n                    style={{\r\n                        flex: 1,\r\n                        backgroundColor: isConfirmHovered ? '#145A32' : '#16A34A', // Change color on hover\r\n                        borderRadius: 5,\r\n                        padding: 5,\r\n                    }}\r\n\r\n                // onMouseEnter={() => setIsConfirmHovered(true)}\r\n                // onMouseLeave={() => setIsConfirmHovered(false)}\r\n                >\r\n                    {!isConfirmLoading ? (\r\n                        <Pressable onPress={() => confirmInvoice()}>\r\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>\r\n                                Confirm\r\n                            </Text>\r\n                        </Pressable>\r\n\r\n                    ) : (\r\n                        <Spinner size={'sm'} color={'white'} />)}\r\n\r\n                </View>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\n\r\nconst ProfitCalculator = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const [totalSCCAmount, setTotalSCCAmount] = useState(0);\r\n    const [formattedTotalSCCAmount, setFormattedTotalSCCAmount] = useState(0);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [totalProfitAmountDollars, setTotalProfitAmountDollars] = useState(0);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n    const inputPriceRef = useRef(null);\r\n\r\n\r\n    const [portsData, setPortsData] = useState({});\r\n    const [origFreight, setOrigFreight] = useState(0);\r\n    const [lastFetchedPort, setLastFetchedPort] = useState('');\r\n\r\n\r\n    // Function to fetch ports data from Firestore\r\n    const fetchPortsData = async () => {\r\n        const currentPort = invoiceData.discharge.port;\r\n        const freightOrigPrice = selectedChatData.freightOrigPrice;\r\n\r\n        // Fetch data if the current port is different from the last fetched port\r\n        // and if freightOrigPrice is valid (exists, not an empty string, and not 0)\r\n        if (currentPort !== lastFetchedPort && !freightOrigPrice) {\r\n\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    if (data[currentPort]?.kobePrice !== undefined) {\r\n\r\n                        if (invoiceData.departurePort == \"Nagoya\") {\r\n\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].nagoyaPrice,\r\n                            });\r\n                            // console.log(\"Nagoya Price \", data[currentPort].nagoyaPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Yokohama\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].yokohamaPrice,\r\n                            });\r\n                            // console.log(\"Yokohama Price \", data[currentPort].yokohamaPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Kyushu\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].kyushuPrice,\r\n                            });\r\n                            // console.log(\"Kyushu Price \", data[currentPort].kyushuPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Kobe\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].kobePrice,\r\n                            });\r\n                            // console.log(\"Kobe Price \", data[currentPort].kobePrice);\r\n\r\n                        }\r\n\r\n                        setLastFetchedPort(currentPort); // Update last fetched port\r\n                    } else {\r\n                        console.log('Port data not found for the given port');\r\n                    }\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        } else {\r\n            console.log('No need to fetch new data');\r\n        }\r\n    };\r\n\r\n\r\n    // useEffect for fetching ports data\r\n    // useEffect(() => {\r\n    //     // Fetch ports data\r\n    //     const fetchPortsData = async () => {\r\n    //         const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n    //         try {\r\n    //             const docSnap = await getDoc(docRef);\r\n\r\n    //             if (docSnap.exists()) {\r\n    //                 const data = docSnap.data();\r\n    //                 setPortsData(data[invoiceData.discharge.port].kobePrice);\r\n    //                 console.log(data[invoiceData.discharge.port].kobePrice);\r\n    //             } else {\r\n    //                 console.log('No such document!');\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching document:', error);\r\n    //         }\r\n    //     };\r\n\r\n    //     fetchPortsData();\r\n\r\n    // }, [invoiceData]);\r\n\r\n\r\n    const handleModalOpen = () => {\r\n        setModalVisible(true);\r\n        inputPriceRef.current.value = defaultInputPrice;\r\n        calculateTotalAmount();\r\n\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n\r\n    };\r\n\r\n\r\n    const fee = {\r\n        auction: 10000,\r\n        transport: 10000,\r\n        shippingAgent: 15000,\r\n    };\r\n\r\n    const purchasedPrice = Number(selectedChatData.carData && selectedChatData.carData.purchasedPrice ? selectedChatData.carData.purchasedPrice : 0);\r\n    const formattedPurchasedPrice = Number(purchasedPrice).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const auctionFee = Number(fee.auction);\r\n    const formattedAuctionFee = Number(auctionFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const transportFee = Number(fee.transport);\r\n    const formattedTransportFee = Number(transportFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const shippingAgentFee = Number(fee.shippingAgent);\r\n    const formattedShippingAgentFee = Number(shippingAgentFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const cubicMeter = Number(selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ? selectedChatData.carData.dimensionCubicMeters : 0).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n\r\n    const costPerCubicMeter = Number(selectedChatData && selectedChatData.freightOrigPrice ? selectedChatData.freightOrigPrice : 0);\r\n    const formattedCostPerCubicMeter = Number(costPerCubicMeter).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const totalCubicMeterCostDollars = Number(costPerCubicMeter * cubicMeter);\r\n    const formattedTotalCubicMeterCostDollars = Number(costPerCubicMeter * cubicMeter).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const totalCubicMeterCostYen = Number(totalCubicMeterCostDollars * selectedChatData.currency.usdToJpy);\r\n    const formattedTotalCubicMeterCostYen = Number(totalCubicMeterCostYen).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const realTotalPriceYen = (purchasedPrice + auctionFee + transportFee + shippingAgentFee + totalSCCAmount + totalCubicMeterCostYen)\r\n    const formattedRealTotalPriceYen = Number(realTotalPriceYen).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const realTotalPriceDollars = realTotalPriceYen * selectedChatData.currency.jpyToUsd;\r\n    const formattedRealTotalPriceDollars = realTotalPriceDollars.toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n\r\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\r\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice));\r\n\r\n\r\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0))) + freightCalculation;\r\n\r\n    const defaultInputPrice = Math.round(\r\n        invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount\r\n            ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, ''))\r\n            : totalPriceCalculation\r\n    );\r\n\r\n\r\n\r\n\r\n    const safelyParseNumber = (value) => {\r\n        const number = Number(value.replace(/,/g, ''));\r\n        return isNaN(number) ? 0 : number;\r\n    };\r\n\r\n    const calculateTotalAmount = () => {\r\n\r\n        const inputPrice = safelyParseNumber(inputPriceRef.current?.value);\r\n\r\n        const totalAmountDollars = Math.round(inputPrice - realTotalPriceDollars);\r\n        setTotalProfitAmountDollars(totalAmountDollars);\r\n        // const total = Math.round(fobPrice + freight + inspection + insurance + additionalPricesTotal).toLocaleString();\r\n        // setTotalAmountCalculated(total);\r\n        // globalInvoiceVariable.paymentDetails.totalAmount = total;\r\n    };\r\n\r\n    const handleInputPriceChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9]/g, '');\r\n        inputPriceRef.current.value = filteredText;\r\n\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        if (selectedChatData.carData && selectedChatData.carData.supplyChainsCostsData) {\r\n\r\n            const amounts = selectedChatData.carData.supplyChainsCostsData.map((item) => {\r\n                const expenseName = Object.keys(item)[0];\r\n                const expenseData = item[expenseName];\r\n                return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n            });\r\n\r\n            // Use reduce to add up all the amounts\r\n            const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n            const formattedTotalAmount = totalAmount.toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n            setTotalSCCAmount(totalAmount);\r\n            setFormattedTotalSCCAmount(formattedTotalAmount);\r\n\r\n\r\n            // console.log(defaultInputPrice);\r\n            // console.log(realTotalPriceDollars);\r\n            // console.log(formattedRealTotalPriceDollars);\r\n            // console.log(realTotalPriceYen);\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const freightOrigPrice = selectedChatData.freightOrigPrice;\r\n\r\n        if (modalVisible && !freightOrigPrice) {\r\n            fetchPortsData();\r\n        }\r\n\r\n\r\n    }, [modalVisible]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (totalSCCAmount !== 0 || totalSCCAmount !== '') {\r\n            const totalAmountDollars = Math.round(defaultInputPrice - realTotalPriceDollars);\r\n            setTotalProfitAmountDollars(totalAmountDollars);\r\n        }\r\n\r\n\r\n    }, [totalSCCAmount]);\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable\r\n                onPress={handleModalOpen}\r\n                focusable={false}\r\n                variant='ghost'\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#4c555c' : '#6e7a83',\r\n                }}>\r\n                <Ionicons size={15} color={'white'} name='calculator' />\r\n                <Text style={{ textAlign: 'center', color: 'white', fontWeight: 'bold', }} >Profit Calculator</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={modalVisible}\r\n                onClose={() => {\r\n                    handleModalClose()\r\n                }}\r\n                initialFocusRef={inputPriceRef}\r\n                size={'lg'}\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header>Profit Calculator</Modal.Header>\r\n                    <Modal.Body style={{ flexDirection: 'row', backgroundColor: '#fafafa', }}>\r\n\r\n                        <View style={{ flex: 1, borderRightWidth: 1, borderRightColor: '#DADDE1', maxHeight: 500, }}>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, }}>Profit (Yen):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(totalProfitAmountDollars * selectedChatData.currency.usdToJpy) < 0 ? '#FF0000' : '#8D7777',\r\n                                }}>\r\n                                    {`${Number(totalProfitAmountDollars * selectedChatData.currency.usdToJpy).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, }}>Profit (US Dollars):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(totalProfitAmountDollars) < 0 ? '#FF0000' : '#16A34A',\r\n                                }}>\r\n                                    {`${Number(totalProfitAmountDollars).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, }}>Profit (Percentage):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(((totalProfitAmountDollars * selectedChatData.currency.usdToJpy) / purchasedPrice) * 100) <= 10.5 ? '#FF0000' : '#336699',\r\n                                }}>\r\n                                    {`${Number(((totalProfitAmountDollars * selectedChatData.currency.usdToJpy) / purchasedPrice) * 100).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}%`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: '#6E7A83', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, color: 'white', }}>Price to calculate:</Text>\r\n                                <TextInput\r\n                                    onChangeText={handleInputPriceChangeText}\r\n                                    defaultValue={defaultInputPrice}\r\n                                    ref={inputPriceRef}\r\n                                    placeholderTextColor='#9B9E9F' placeholder='Input Price'\r\n                                    style={{\r\n                                        backgroundColor: 'white',\r\n                                        height: 25,\r\n                                        margin: 2,\r\n                                        padding: 1,\r\n                                        borderRadius: 4,\r\n                                        borderWidth: 1,\r\n                                        borderColor: 'white',\r\n                                        outlineStyle: 'none',\r\n                                        fontSize: 18,\r\n                                        fontWeight: '700',\r\n                                    }}\r\n                                />\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n\r\n                        <View style={{ flex: 1, marginLeft: 3 }}>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Purchased Price:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedPurchasedPrice}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Auction Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedAuctionFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Transport Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedTransportFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Shipping Agent Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedShippingAgentFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Supply Chains Costs:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedTotalSCCAmount}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Cubic Meter:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${cubicMeter}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Cost per Cubic Meter:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedCostPerCubicMeter} x ${cubicMeter}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 14, color: '#16A34A', }}>\r\n                                    {`${formattedTotalCubicMeterCostDollars}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 14, color: '#8D7777', }}>\r\n                                    {`${formattedTotalCubicMeterCostYen}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, }}>Total:</Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 18, color: '#8D7777', }}>\r\n                                    {`${formattedRealTotalPriceYen}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 18, color: '#16A34A', }}>\r\n                                    {`${formattedRealTotalPriceDollars}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst GenerateCustomInvoice = () => {\r\n    let invoiceNameExtension = '';\r\n    let divideInvoice = 1;\r\n    let additionalPriceLocal;\r\n    let additionalNameLocal;\r\n    // npm install html2canvas jspdf\r\n    // import jsPDF from 'jspdf';\r\n    // import html2canvas from 'html2canvas';\r\n    const dispatch = useDispatch();\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const customInvoiceVisible = useSelector((state) => state.customInvoiceVisible);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [isPreviewHovered, setIsPreviewHovered] = useState(false);\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const invoiceRef = useRef(null);\r\n    const qrCodeRef = useRef(null);\r\n    const [capturedImageUri, setCapturedImageUri] = useState('');\r\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.sameAsConsignee : false);\r\n\r\n    const [invoiceNumber, setInvoiceNumber] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.id : '');\r\n    const [invoiceViewKey, setInvoiceViewKey] = useState(0);\r\n\r\n    const issuingDateRef = useRef(null);\r\n    const [issuingDate, setIssuingDate] = useState('');\r\n\r\n    const dueDateRef = useRef(null);\r\n    const [dueDate, setDueDate] = useState('');\r\n\r\n\r\n    const shippedFromRef = useRef(null);\r\n    const [shippedFrom, setShippedFrom] = useState('');\r\n\r\n    const shippedToRef = useRef(null);\r\n    const [shippedTo, setShippedTo] = useState('');\r\n\r\n    const placeOfDeliveryRef = useRef(null);\r\n    const [placeOfDelivery, setPlaceOfDelivery] = useState('');\r\n\r\n    const cfsRef = useRef(null);\r\n    const [cfs, setCfs] = useState('');\r\n\r\n    const consigneeNameRef = useRef(null);\r\n    const [consigneeName, setConsigneeName] = useState('');\r\n\r\n    const consigneeAddressRef = useRef(null);\r\n    const [consigneeAddress, setConsigneeAddress] = useState('');\r\n\r\n    const consigneeEmailRef = useRef(null);\r\n    const [consigneeEmail, setConsigneeEmail] = useState('');\r\n\r\n    const consigneeContactRef = useRef(null);\r\n    const [consigneeContact, setConsigneeContact] = useState('');\r\n\r\n    const consigneeFaxRef = useRef(null);\r\n    const [consigneeFax, setConsigneeFax] = useState('');\r\n\r\n    const notifyPartyNameRef = useRef(null);\r\n    const [notifyPartyName, setNotifyPartyName] = useState('');\r\n\r\n    const notifyPartyAddressRef = useRef(null);\r\n    const [notifyPartyAddress, setNotifyPartyAddress] = useState('');\r\n\r\n    const notifyPartyEmailRef = useRef(null);\r\n    const [notifyPartyEmail, setNotifyPartyEmail] = useState('');\r\n\r\n    const notifyPartyContactRef = useRef(null);\r\n    const [notifyPartyContact, setNotifyPartyContact] = useState('');\r\n\r\n    const notifyPartyFaxRef = useRef(null);\r\n    const [notifyPartyFax, setNotifyPartyFax] = useState('');\r\n\r\n    const carNameRef = useRef(null);\r\n    const [carName, setCarName] = useState('');\r\n\r\n    const specificationsRef = useRef(null);\r\n    const [specifications, setSpecifications] = useState('');\r\n\r\n    const itemNoteRef = useRef(null);\r\n    const [itemNote, setItemNote] = useState('');\r\n\r\n    const fobTextRef = useRef(null);\r\n    const [fobText, setFobText] = useState('');\r\n\r\n    const fobPriceRef = useRef(null);\r\n    const [fobPrice, setFobPrice] = useState('');\r\n\r\n    const freightTextRef = useRef(null);\r\n    const [freightText, setFreightText] = useState('');\r\n\r\n    const freightPriceRef = useRef(null);\r\n    const [freightPrice, setFreightPrice] = useState('');\r\n\r\n    const inspectionTextRef = useRef(null);\r\n    const [inspectionText, setInspectionText] = useState('');\r\n\r\n    const inspectionPriceRef = useRef(null);\r\n    const [inspectionPrice, setInspectionPrice] = useState('');\r\n\r\n    const totalPriceRef = useRef(null);\r\n    const [totalPrice, setTotalPrice] = useState('');\r\n\r\n\r\n    const additionalNameRef = useRef(null);\r\n    const [additionalName, setAdditionalName] = useState([]);\r\n\r\n    const additionalPriceRef = useRef(null);\r\n    const [additionalPrice, setAdditionalPrice] = useState([]);\r\n\r\n    const dividedByRef = useRef(null);\r\n    const [dividedBy, setDividedBy] = useState('');\r\n\r\n\r\n\r\n\r\n    const handleModalClose = () => {\r\n        dispatch(setCustomInvoiceVisible(false))\r\n        dispatch(setPreviewInvoiceVisible(true))\r\n        setCapturedImageUri('');\r\n    }\r\n\r\n    function countTrueValuesInCarData(invoiceData) {\r\n        let count = 0;\r\n\r\n        // Check if carData exists in invoiceData\r\n        if (invoiceData.carData) {\r\n            // List of fields to check within carData\r\n            const fields = ['interior', 'exterior', 'safetySystem', 'comfort', 'sellingPoints'];\r\n\r\n            fields.forEach(field => {\r\n                if (invoiceData.carData[field]) {\r\n                    // Count true values in each field of carData\r\n                    count += Object.values(invoiceData.carData[field]).filter(value => value === true).length;\r\n                }\r\n            });\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n\r\n    // useEffect(() => {\r\n    //     let generatedImageUri = '';\r\n    //     const captureImageAsync = async () => {\r\n    //         try {\r\n    //             if (invoiceRef.current && modalVisible == true) {\r\n    //                 // Adjust the scale to control the captured image resolution\r\n    //                 const scale = 0.85; // Experiment with different scale values\r\n    //                 const width = 2480 * scale;\r\n    //                 const height = 3508 * scale;\r\n\r\n    //                 const imageUri = await captureRef(invoiceRef, {\r\n    //                     format: 'jpg',\r\n    //                     quality: 1, // Adjust quality if needed\r\n    //                     result: 'base64',\r\n    //                     width: width,\r\n    //                     height: height,\r\n    //                 });\r\n\r\n    //                 generatedImageUri = `data:image/jpeg;base64,${imageUri}`\r\n    //                 setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\r\n\r\n    //                 // console.log(`data:image/jpeg;base64,${imageUri}`);\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.error(\"Error capturing view:\", error);\r\n    //         }\r\n    //     };\r\n\r\n    //     captureImageAsync();\r\n\r\n    // }, [invoiceRef.current, invoiceData, modalVisible]);\r\n\r\n    useEffect(() => {\r\n        setCapturedImageUri(capturedImageUri);\r\n    }, [capturedImageUri])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const captureImage = async () => {\r\n\r\n\r\n\r\n\r\n        try {\r\n            // Adjust the scale to control the captured image resolution\r\n            const scale = 0.9; // Experiment with different scale values\r\n            const width = 2480 * scale;\r\n            const height = 3508 * scale;\r\n\r\n            const imageUri = await captureRef(invoiceRef, {\r\n                format: 'jpg',\r\n                quality: 1, // Adjust quality if needed\r\n                result: 'base64',\r\n                width: width,\r\n                height: height,\r\n            });\r\n\r\n            // generatedImageUri = `data:image/jpeg;base64,${imageUri}`\r\n            setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\r\n            await createPDF(`data:image/jpeg;base64,${imageUri}`);\r\n            return `data:image/jpeg;base64,${imageUri}`;\r\n        } catch (error) {\r\n            console.error(\"Error capturing view:\", error);\r\n        }\r\n    };\r\n\r\n    const createPDF = async () => {\r\n\r\n\r\n\r\n        const element = invoiceRef.current;\r\n        if (element) {\r\n            // Reduce the scale slightly for smaller file size\r\n            const scale = 1; // Fine-tune this value for balance\r\n\r\n            const canvas = await html2canvas(element, {\r\n                scale: scale,\r\n            });\r\n\r\n            // Experiment with JPEG quality for a balance between quality and file size\r\n            const imageData = canvas.toDataURL('image/jpeg', 0.9);\r\n\r\n            // A4 size dimensions in mm\r\n            const pdfWidth = 210;\r\n            const pdfHeight = 297;\r\n\r\n            const pdf = new jsPDF({\r\n                orientation: 'portrait',\r\n                unit: 'mm',\r\n                format: 'a4'\r\n            });\r\n\r\n            // Adjust PDF compression settings\r\n            const options = {\r\n                imageCompression: 'JPEG',\r\n                imageQuality: 1, // Fine-tune this value as well\r\n            };\r\n\r\n            const imgProps = pdf.getImageProperties(imageData);\r\n            const pdfWidthFit = pdfWidth;\r\n            const pdfHeightFit = (imgProps.height * pdfWidthFit) / imgProps.width;\r\n\r\n            pdf.addImage(imageData, 'JPEG', 0, 0, pdfWidthFit, pdfHeightFit, undefined, 'FAST', 0, options);\r\n\r\n            // Filename logic\r\n            selectedChatData.stepIndicator.value < 3 ?\r\n                pdf.save(`Proforma Invoice (${invoiceData.carData.carName} [${invoiceData.carData.referenceNumber}]) (A4 Paper Size).pdf`) :\r\n                pdf.save(`Invoice No. ${invoiceData.id}${invoiceNameExtension} (A4 Paper Size).pdf`);\r\n        } else {\r\n            console.error(\"No element to capture\");\r\n        }\r\n    };\r\n\r\n    const handleCaptureAndCreatePDF = async () => {\r\n\r\n        handleAdditionalNameTextChange(additionalNameRef.current.value)\r\n        handleAdditionalPriceTextChange(additionalPriceRef.current.value)\r\n\r\n        setIssuingDate(issuingDateRef.current.value);\r\n        setDueDate(dueDateRef.current.value);\r\n        setShippedFrom(shippedFromRef.current.value);\r\n        setShippedTo(shippedToRef.current.value);\r\n        setPlaceOfDelivery(placeOfDeliveryRef.current.value);\r\n        setCfs(cfsRef.current.value);\r\n        setConsigneeName(consigneeNameRef.current.value);\r\n        setConsigneeAddress(consigneeAddressRef.current.value);\r\n        setConsigneeEmail(consigneeEmailRef.current.value);\r\n        setConsigneeContact(consigneeContactRef.current.value);\r\n        setConsigneeFax(consigneeFaxRef.current.value);\r\n        setNotifyPartyName(notifyPartyNameRef.current.value);\r\n        setNotifyPartyAddress(notifyPartyAddressRef.current.value);\r\n        setNotifyPartyEmail(notifyPartyEmailRef.current.value);\r\n        setNotifyPartyContact(notifyPartyContactRef.current.value);\r\n        setNotifyPartyFax(notifyPartyFaxRef.current.value);\r\n        setCarName(carNameRef.current.value);\r\n        setSpecifications(specificationsRef.current.value);\r\n        setItemNote(itemNoteRef.current.value);\r\n        setFobText(fobTextRef.current.value);\r\n        setFobPrice(fobPriceRef.current.value);\r\n        setFreightText(freightTextRef.current.value);\r\n        setFreightPrice(freightPriceRef.current.value);\r\n        setInspectionText(inspectionTextRef.current.value);\r\n        setInspectionPrice(inspectionPriceRef.current.value);\r\n        setTotalPrice(totalPriceRef.current.value);\r\n        setAdditionalName(additionalNameLocal);\r\n        setAdditionalPrice(additionalPriceLocal);\r\n        setDividedBy(dividedByRef.current.value);\r\n\r\n\r\n        if (Number(divideInvoice) > 1) {\r\n            for (let i = 0; i < Number(divideInvoice); i++) {\r\n                // Update the invoice number for each iteration based on 'i'\r\n                setInvoiceNumber(`${invoiceData.id}-${i + 1}`);\r\n                invoiceNameExtension = `-${i + 1}`;\r\n                // Await the capturing of the image\r\n                await captureImage();  // Assuming this is defined elsewhere and works asynchronously\r\n            }\r\n        } else if (Number(divideInvoice) === 1) {\r\n            // If dividedBy is exactly 1, you've already set the invoice number above\r\n            setInvoiceNumber(`${invoiceData.id}`);\r\n            invoiceNameExtension = '';\r\n            await captureImage();  // Just capture the image once\r\n        }\r\n\r\n        // if (capturedImageUri) {\r\n        // await createPDF(capturedImageUri);\r\n        // }\r\n\r\n    };\r\n\r\n\r\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\r\n        const dueDateString = invoiceData.bankInformations.dueDate;\r\n        const issuingDateObject = new Date(issuingDateString);\r\n        const dueDateObject = new Date(dueDateString);\r\n\r\n\r\n        const options = {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        };\r\n\r\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\r\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\r\n\r\n    }\r\n\r\n    const originalWidth = 794;\r\n    const originalHeight = 1123;\r\n\r\n\r\n    const originalSmallWidth = 794;\r\n    const originalSmallHeight = 1123;\r\n\r\n    const newWidth = 2480;\r\n    const newHeight = 3508;\r\n\r\n    const smallWidth = 377;\r\n    const smallHeight = 541;\r\n\r\n    const smallWidthScaleFactor = smallWidth / originalSmallWidth;\r\n    const smallHeightScaleFactor = smallHeight / originalSmallHeight;\r\n\r\n    const widthScaleFactor = newWidth / originalWidth;\r\n    const heightScaleFactor = newHeight / originalHeight;\r\n\r\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\r\n        const dueDateString = invoiceData.bankInformations.dueDate;\r\n        const issuingDateObject = new Date(issuingDateString);\r\n        const dueDateObject = new Date(dueDateString);\r\n\r\n\r\n        const options = {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        };\r\n\r\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\r\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\r\n\r\n    }\r\n\r\n    // additionalNameRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName.join('\\n') : '';\r\n    // additionalPriceRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice.join('\\n') : '';\r\n\r\n    const handleAdditionalPriceTextChange = (text) => {\r\n        // Process and filter each line\r\n        const filteredLines = text.split('\\n').map(line => {\r\n            let filteredLine = line.replace(/[^0-9.]/g, '');\r\n            const parts = filteredLine.split('.');\r\n            if (parts.length > 2) {\r\n                filteredLine = parts[0] + '.' + parts[1];\r\n            }\r\n            return filteredLine;\r\n        });\r\n\r\n        // Update the ref and the state\r\n        additionalPriceRef.current.value = filteredLines.join('\\n');\r\n        // setAdditionalPriceArray(filteredLines);\r\n        // globalAdditionalPriceArray = filteredLines;\r\n        additionalPriceLocal = filteredLines;\r\n\r\n    };\r\n\r\n    const handleAdditionalNameTextChange = (text) => {\r\n        // Update the ref\r\n        additionalNameRef.current.value = text;\r\n\r\n        // Split the text into lines and update the state\r\n        const lines = text.split('\\n');\r\n        // setAdditionalNameArray(lines);\r\n        additionalNameLocal = lines;\r\n    };\r\n\r\n    const handleFreightTextChange = (value) => {\r\n        // Remove any non-numeric characters and leading zeros\r\n        const numericValue = value.replace(/[^0-9]/g, '');\r\n        // Update your variable only if the result is not an empty string and not 0\r\n        freightPriceRef.current.value = numericValue;\r\n\r\n    }\r\n\r\n    const handleInspectionTextChange = (value) => {\r\n        // Remove any non-numeric characters and leading zeros\r\n        const numericValue = value.replace(/[^0-9]/g, '');\r\n        // Update your variable only if the result is not an empty string and not 0\r\n        inspectionPriceRef.current.value = numericValue;\r\n\r\n    }\r\n\r\n\r\n    const handleFobTextChange = (value) => {\r\n        // Remove any non-numeric characters and leading zeros\r\n        const numericValue = value.replace(/[^0-9]/g, '');\r\n        // Update your variable only if the result is not an empty string and not 0\r\n        fobPriceRef.current.value = numericValue;\r\n\r\n    }\r\n\r\n    const handleDividedByTextChange = (value) => {\r\n        // Remove any non-numeric characters and leading zeros\r\n        const numericValue = value.replace(/[^0-9]/g, '').replace(/^0+/g, '');\r\n        // Update your variable only if the result is not an empty string and not 0\r\n        dividedByRef.current.value = numericValue;\r\n        divideInvoice = numericValue;\r\n\r\n    }\r\n\r\n\r\n    const FormContent = () => {\r\n\r\n\r\n        return (\r\n\r\n            <View\r\n                style={{\r\n                    width: screenWidth < mobileViewBreakpoint ? '98%' : 500\r\n                }}\r\n            >\r\n                <View\r\n                    style={{\r\n                        flex: 1\r\n                    }}\r\n                >\r\n\r\n                    <Text style={{ fontSize: 16, fontWeight: 'bold', padding: 10, alignSelf: 'center', }}>Generate Custom Invoice</Text>\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text key={invoiceViewKey} style={{ margin: 2, fontWeight: 'bold', }}>Issuing Date:</Text>\r\n\r\n                    <TextInput\r\n                        ref={issuingDateRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? formattedIssuingDate : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Issuing Date'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, fontWeight: 'bold', }}>Due Date:</Text>\r\n\r\n                    <TextInput\r\n                        ref={dueDateRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? formattedDueDate : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Due Date'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Shipped from:</Text>\r\n\r\n                    <TextInput\r\n                        ref={shippedFromRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${invoiceData.departurePort}, ${invoiceData.departureCountry}` : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Shipped from'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Shipped to:</Text>\r\n\r\n                    <TextInput\r\n                        ref={shippedToRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${invoiceData.discharge.port}, ${invoiceData.discharge.country}` : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Shipped to'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Place of Delivery:</Text>\r\n\r\n                    <TextInput\r\n                        ref={placeOfDeliveryRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length && invoiceData.placeOfDelivery > 0 ? invoiceData.placeOfDelivery : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Place of Delivery'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>CFS:</Text>\r\n\r\n                    <TextInput\r\n                        ref={cfsRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length && invoiceData.cfs > 0 ? invoiceData.cfs : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='CFS'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text style={{ fontSize: 16, fontWeight: 'bold', alignSelf: 'center', color: '#0A78BE', }}>Consignee</Text>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Name:</Text>\r\n\r\n                    <TextInput\r\n                        ref={consigneeNameRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.name : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Name'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Address:</Text>\r\n\r\n                    <TextInput\r\n                        ref={consigneeAddressRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.address : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Address'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Email:</Text>\r\n\r\n                    <TextInput\r\n                        ref={consigneeEmailRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.email : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Email'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Contact Number:</Text>\r\n\r\n                    <TextInput\r\n                        ref={consigneeContactRef}\r\n                        multiline\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.contactNumber : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Contact Number'\r\n                        style={{ height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Fax:</Text>\r\n\r\n                    <TextInput\r\n                        ref={consigneeFaxRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.fax : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Fax'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text style={{ fontSize: 16, fontWeight: 'bold', alignSelf: 'center', color: '#FF0000', }}>Notify Party</Text>\r\n\r\n                    <Checkbox\r\n                        isChecked={isChecked}\r\n                        onChange={value => {\r\n                            setIsChecked(value)\r\n                            globalInvoiceVariable.consignee.sameAsBuyer = value;\r\n                        }}\r\n                        style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                        size=\"sm\"\r\n                        _text={{ fontWeight: 700 }}\r\n                    >\r\n                        Same as consignee\r\n                    </Checkbox>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Name:</Text>\r\n\r\n                    <TextInput\r\n                        ref={notifyPartyNameRef}\r\n                        disabled={isChecked}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.name : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Name'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Address:</Text>\r\n\r\n                    <TextInput\r\n                        ref={notifyPartyAddressRef}\r\n                        disabled={isChecked}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.address : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Address'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Email:</Text>\r\n\r\n                    <TextInput\r\n                        ref={notifyPartyEmailRef}\r\n                        disabled={isChecked}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.email : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Email'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Contact Number:</Text>\r\n\r\n                    <TextInput\r\n                        ref={notifyPartyContactRef}\r\n                        disabled={isChecked}\r\n                        multiline\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.contactNumber : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Contact Number'\r\n                        style={{ height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Fax:</Text>\r\n\r\n                    <TextInput\r\n                        ref={notifyPartyFaxRef}\r\n                        disabled={isChecked}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.fax : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Fax'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Car name:</Text>\r\n\r\n                    <TextInput\r\n                        ref={carNameRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.carData.carName : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Date'\r\n                        style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Specifications:</Text>\r\n\r\n                    <TextInput\r\n                        ref={specificationsRef}\r\n                        multiline\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${invoiceData.carData.chassisNumber}\\n${invoiceData.carData.exteriorColor}\\n${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n${invoiceData.carData.fuel}\\n${invoiceData.carData.transmission}` : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Specifications'\r\n                        style={{ height: 120, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Item note:</Text>\r\n\r\n                    <TextInput\r\n                        ref={itemNoteRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}` : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Item note'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>FOB:</Text>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                        }}\r\n                    >\r\n\r\n                        <TextInput\r\n                            ref={fobTextRef}\r\n                            defaultValue={'FOB'}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Fob'\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none' }}\r\n                            onChangeText={(text) => {\r\n                                const filteredText = text.replace(/[^0-9]/g, ''); // Remove non-numeric characters\r\n\r\n                                fobTextRef.current.value = filteredText;\r\n\r\n                            }}\r\n                        />\r\n\r\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>$</Text>\r\n\r\n                        <TextInput\r\n                            ref={fobPriceRef}\r\n                            onChangeText={handleFobTextChange}\r\n                            defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? Math.round(Number(invoiceData.paymentDetails.fobPrice)) : ''}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='FOB Price'\r\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n\r\n                    </View>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Freight:</Text>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                        }}\r\n                    >\r\n                        <TextInput\r\n                            ref={freightTextRef}\r\n                            defaultValue={'Freight'}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Freight'\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n\r\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>$</Text>\r\n\r\n                        <TextInput\r\n                            ref={freightPriceRef}\r\n                            onChangeText={handleFreightTextChange}\r\n                            defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? Math.round(Number(invoiceData.paymentDetails.freightPrice)) : ''}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Freight Price'\r\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n\r\n                    </View>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Inspection:</Text>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                        }}\r\n                    >\r\n                        <TextInput\r\n                            ref={inspectionTextRef}\r\n                            onChangeText={handleInspectionTextChange}\r\n                            defaultValue={`Inspection ${invoiceData && Object.keys(invoiceData).length > 0 ? `[${invoiceData.paymentDetails.inspectionName}]` : ''}`}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Inspection'\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n\r\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>$</Text>\r\n\r\n                        <TextInput\r\n                            ref={inspectionPriceRef}\r\n                            defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.paymentDetails.inspectionPrice : ''}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Inspection Price'\r\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n                    </View>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Additional:</Text>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                        }}\r\n                    >\r\n                        <TextInput ref={additionalNameRef} onChangeText={handleAdditionalNameTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                            defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName.join('\\n') : ''}\r\n                            style={{ flex: 1, height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                        <TextInput ref={additionalPriceRef} onChangeText={handleAdditionalPriceTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Price'\r\n                            defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice.join('\\n') : ''}\r\n                            style={{ flex: 1, height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                    </View>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Total price:</Text>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                        }}\r\n                    >\r\n\r\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>$</Text>\r\n\r\n                        <TextInput\r\n                            ref={totalPriceRef}\r\n                            defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${(invoiceData.paymentDetails.totalAmount).replace(/,/g, '')}` : ''}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Total price'\r\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n                    </View>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Divided by:</Text>\r\n\r\n                    <TextInput\r\n                        ref={dividedByRef}\r\n                        defaultValue={'1'}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Total price'\r\n                        onChangeText={handleDividedByTextChange}\r\n                        keyboardType='numeric' // This prop prompts the user with a numeric keypad\r\n                        style={{\r\n                            flex: 1,\r\n                            height: 25,\r\n                            margin: 2,\r\n                            padding: 1,\r\n                            borderRadius: 2,\r\n                            borderWidth: 1,\r\n                            borderColor: '#D9D9D9',\r\n                            outlineStyle: 'none',\r\n                        }}\r\n                    />\r\n\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <Modal\r\n                isOpen={customInvoiceVisible}\r\n                onClose={() => {\r\n                    handleModalClose();\r\n                }}\r\n                size={'lg'}\r\n                useRNModal\r\n            >\r\n\r\n                <Modal.Content>\r\n\r\n                    {customInvoiceVisible &&\r\n                        <ScrollView\r\n                            style={{ maxHeight: 600, maxWidth: screenWidth < mobileViewBreakpoint ? '100%' : 520, }}\r\n                        >\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                right: 0,\r\n                                left: 0,\r\n                                backgroundColor: 'white',\r\n                                zIndex: 999,\r\n                                flex: 1,\r\n                                alignItems: 'center', // Center horizontally\r\n                            }}>\r\n                                <FormContent />\r\n                                <View style={{ flexDirection: 'row', margin: 5, width: '100%', justifyContent: 'center', }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onPress={() => {\r\n                                            handleCaptureAndCreatePDF()\r\n                                        }}\r\n                                        style={{ justifyContent: 'center', flexDirection: 'row', padding: 5, borderRadius: 5, marginHorizontal: 10, backgroundColor: '#16A34A', width: '100%' }}>\r\n                                        <MaterialCommunityIcons size={20} name='download' color='white' />\r\n                                        <Text style={{ color: 'white', }}>Download as PDF</Text>\r\n                                    </Pressable>\r\n                                </View>\r\n                            </View>\r\n\r\n                            {/* Main content with invoice details */}\r\n                            {\r\n\r\n                                <View\r\n                                    ref={invoiceRef}\r\n                                    key={invoiceViewKey}\r\n                                    style={{\r\n                                        width: newWidth,\r\n                                        height: newHeight,\r\n                                        backgroundColor: 'white',\r\n                                        zIndex: 1\r\n                                    }}>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        <NativeImage\r\n                                            source={require('../../assets/RMJ logo for invoice.png')}\r\n                                            style={{\r\n                                                width: 95 * widthScaleFactor,\r\n                                                height: 85 * heightScaleFactor,\r\n                                                resizeMode: 'stretch',\r\n                                            }}\r\n                                        />\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * heightScaleFactor }}>\r\n                                        {/* Title */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`PROFORMA INVOICE`}</Text> :\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`INVOICE`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        {/* QR CODE */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <View\r\n                                                ref={qrCodeRef}\r\n                                            >\r\n                                                <QRCode\r\n                                                    value={invoiceData.cryptoNumber}\r\n                                                    size={80 * widthScaleFactor}\r\n                                                    color=\"black\"\r\n                                                    backgroundColor=\"white\"\r\n                                                />\r\n                                            </View>\r\n\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 34 * heightScaleFactor }}>\r\n                                        {/* Invoice Number */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Invoice No. RMJ-${invoiceNumber}`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 34 * heightScaleFactor, }}>\r\n                                            {/* Issuing Date */}\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${issuingDate}`}</Text>\r\n                                            </View>\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#F00A0A', }}>{`Valid Until: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${dueDate}`}</Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 49 * heightScaleFactor, flexDirection: 'row' }}>\r\n                                            {/* Issuing Date */}\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                            <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${issuingDate}`}</Text>\r\n                                        </View>\r\n                                    }\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 40 * widthScaleFactor,\r\n                                        top: 134 * heightScaleFactor,\r\n                                        width: 280 * widthScaleFactor,\r\n                                    }}>\r\n                                        {/* Shipper */}\r\n                                        <Text style={{\r\n                                            fontWeight: 750,\r\n                                            fontSize: 16 * widthScaleFactor,\r\n                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                            width: 'fit-content', // Make the underline cover the text width\r\n                                            marginBottom: 5, // Add some space between text and underline\r\n                                        }}>\r\n                                            {`Shipper`}\r\n                                        </Text>\r\n                                        <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: +81565850606`}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped From:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{shippedFrom}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped To:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{shippedTo}</Text>\r\n                                        {placeOfDelivery !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Place of Delivery:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{placeOfDelivery}</Text>\r\n                                            </>\r\n                                            : null}\r\n                                        {cfs !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`CFS:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{cfs}</Text>\r\n                                            </>\r\n                                            : null}\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', width: 715 * widthScaleFactor, }}>\r\n\r\n                                            <View style={{\r\n                                                flex: 1, width: 280 * widthScaleFactor,\r\n                                            }}>\r\n                                                {/* Buyer Information */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#0A78BE',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#0A78BE',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n\r\n                                                }}>\r\n                                                    {`Buyer Information`}\r\n                                                </Text>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{consigneeName}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${consigneeAddress}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${consigneeEmail}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${consigneeContact}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${consigneeFax == '' ? 'N/A' : consigneeFax}`}</Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, paddingLeft: 20 * widthScaleFactor, width: 280 * widthScaleFactor, }}>\r\n                                                {/* Notify Party */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#FF0000',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#FF0000',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n                                                }}>\r\n                                                    {`Notify Party`}\r\n                                                </Text>\r\n                                                {isChecked == true ? (\r\n                                                    <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\r\n                                                    (<>\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${notifyPartyName}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${notifyPartyAddress}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${notifyPartyEmail}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${notifyPartyContact}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${notifyPartyFax == '' ? 'N/A' : notifyPartyFax}`}</Text>\r\n                                                    </>)}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n\r\n                                    </View>\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#FF5C00', height: 194 * heightScaleFactor, }}>\r\n                                            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                <Entypo size={50 * widthScaleFactor} name='warning' color={'#FF0000'} />\r\n                                                <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#FF0000', marginLeft: 20 * widthScaleFactor, }}>{`Bank Information will be provided after placing an order.`}</Text>\r\n                                            </View>\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#1ABA3D', }}>\r\n\r\n                                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * widthScaleFactor, marginBottom: 5 * heightScaleFactor, }}>\r\n                                                <View style={{ flex: 1, marginRight: 50 * widthScaleFactor, }}>\r\n\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Bank Account`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Bank Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Branch Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`SWIFTCODE: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Address: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Name of Account Holder: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Account Number: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View style={{ flex: 1 }}>\r\n\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Payment Terms`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Terms: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <View style={{ paddingTop: 30 * heightScaleFactor, }}>\r\n\r\n                                                        <Text style={{\r\n                                                            fontWeight: 750,\r\n                                                            fontSize: 14 * widthScaleFactor,\r\n                                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                            width: 'fit-content', // Make the underline cover the text width\r\n                                                            marginBottom: 2, // Add some space between text and underline\r\n                                                            color: '#F00A0A',\r\n                                                            borderBottomColor: '#F00A0A',\r\n                                                        }}>\r\n                                                            {`Payment Due`}\r\n                                                        </Text>\r\n\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#F00A0A', lineHeight: 14 * widthScaleFactor }}>{`Due Date: `}\r\n                                                            <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, color: 'black', lineHeight: 14 * widthScaleFactor }}>{`${dueDate}`}</Text>\r\n                                                        </Text>\r\n\r\n                                                    </View>\r\n\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                        </View>}\r\n\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 38 * widthScaleFactor,\r\n                                        top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * heightScaleFactor : 537 * heightScaleFactor,\r\n                                        width: 718 * widthScaleFactor,\r\n                                        borderWidth: 1 * widthScaleFactor,\r\n                                        borderColor: '#C2E2F4',\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Description`}\r\n                                                </Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Notes`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Quantity`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Amount`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                        {(fobText !== '' && fobPrice > 0) &&\r\n                                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 5,\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {`${fobText}`}\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 2,\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {fobPrice > 0 ? `$${Math.round(Number(fobPrice)).toLocaleString('en-US')}` : ''}\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                            </View>\r\n                                        }\r\n\r\n                                        {(freightText !== '' && freightPrice > 0) &&\r\n                                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 5,\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {`${freightText}`}\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 2,\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {freightPrice > 0 ? `$${Math.round(Number(freightPrice)).toLocaleString('en-US')}` : ''}\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                            </View>\r\n                                        }\r\n\r\n\r\n                                        {(inspectionText !== '' && inspectionPrice > 0) &&\r\n                                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 5,\r\n                                                    flexDirection: 'row',\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {inspectionText}\r\n                                                    </Text>\r\n\r\n\r\n                                                </View>\r\n\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 2,\r\n                                                }}>\r\n\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {inspectionPrice > 0 ? `$${Number(inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                    </Text>\r\n\r\n\r\n                                                </View>\r\n\r\n\r\n                                            </View>\r\n                                        }\r\n                                        {(additionalName && additionalName.length > 0) &&\r\n                                            (additionalPrice && additionalPrice.length > 0) &&\r\n                                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 5,\r\n                                                    flexDirection: 'row',\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {additionalName && additionalName.length > 0 ? `${additionalName.join(' + ')}` : ' '}\r\n                                                    </Text>\r\n\r\n\r\n                                                </View>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 2,\r\n                                                }}>\r\n\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {additionalPrice && additionalPrice.length > 0\r\n                                                            ? additionalPrice.map(price =>\r\n                                                                !isNaN(parseFloat(price)) ? // Check if the price is a number\r\n                                                                    `$${parseFloat(price).toLocaleString('en-US', {\r\n                                                                        style: 'currency',\r\n                                                                        currency: 'USD',\r\n                                                                        minimumFractionDigits: 0,\r\n                                                                        maximumFractionDigits: 0\r\n                                                                    }).slice(1)}` : ''\r\n                                                            ).join(' + ')\r\n                                                            : ' '}\r\n\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                            </View>\r\n                                        }\r\n\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                paddingVertical: 2 * heightScaleFactor,\r\n\r\n                                            }}>\r\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                        {\"Used Vehicle\\n\"}\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${carName}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${specifications}\\n`}\r\n                                                        </Text>\r\n                                                    </Text>\r\n\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n\r\n                                                <Text style={{\r\n                                                    fontWeight: 400,\r\n                                                    fontSize: 12 * widthScaleFactor,\r\n                                                    lineHeight: 14 * widthScaleFactor,\r\n                                                    marginBottom: 3 * heightScaleFactor,\r\n                                                    alignSelf: 'center',\r\n                                                }}>\r\n                                                    {`${itemNote}`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 1,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n                                                {carName !== '' ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                        {'1'}\r\n                                                    </Text>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                justifyContent: 'center',\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\r\n                                                    <>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            color: '#008AC6',\r\n                                                            marginRight: 10 * widthScaleFactor,\r\n                                                            top: 51 * heightScaleFactor,\r\n                                                            left: 50 * widthScaleFactor,\r\n                                                            position: 'absolute',\r\n                                                        }}>\r\n                                                            {\"Total\"}\r\n                                                            <Text style={{\r\n                                                                fontWeight: 700,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                alignSelf: 'center',\r\n                                                                color: '#00720B',\r\n                                                                marginLeft: 5 * widthScaleFactor,\r\n                                                            }}>\r\n                                                                {`$${(Number(totalPrice) / Number(dividedBy)).toLocaleString('en-US')}`}\r\n                                                            </Text>\r\n                                                        </Text>\r\n\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 825 * heightScaleFactor, width: 350 * widthScaleFactor, }}>\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Payment Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'No warranty service is provided on used vehicles.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Conditions for order cancellation:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Intermediary Banking Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Swift code: SMBCUS33'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Address: 277 Park Avenue'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'City: New York, NY'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Postal Code: 10172'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Country: United States'}\r\n                                        </Text>\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ? null :\r\n                                        <View style={{ position: 'absolute', right: 39 * widthScaleFactor, top: 835 * heightScaleFactor, width: 300 * widthScaleFactor, }}>\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 80 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n                                                <NativeImage\r\n                                                    source={require('../../assets/RMJ Invoice Signature with Hanko.png')}\r\n                                                    style={{\r\n                                                        width: 276 * widthScaleFactor,\r\n                                                        height: 81 * heightScaleFactor,\r\n                                                        resizeMode: 'contain',\r\n                                                        alignSelf: 'center',\r\n                                                        marginBottom: 0, // Minimize margin to keep the line close\r\n                                                    }}\r\n                                                />\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Real Motor Japan'}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 5 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Your Signature'}\r\n                                                </Text>\r\n                                            </View>\r\n                                        </View>}\r\n\r\n\r\n                                </View>\r\n                            }\r\n\r\n\r\n                        </ScrollView>\r\n\r\n                    }\r\n                </Modal.Content>\r\n\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\nconst PreviewInvoice = () => {\r\n\r\n    // npm install html2canvas jspdf\r\n    // import jsPDF from 'jspdf';\r\n    // import html2canvas from 'html2canvas';\r\n    const dispatch = useDispatch();\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const previewInvoiceVisible = useSelector((state) => state.previewInvoiceVisible);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [isPreviewHovered, setIsPreviewHovered] = useState(false);\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const invoiceRef = useRef(null);\r\n    const qrCodeRef = useRef(null);\r\n    const [invoiceImageUri, setInvoiceImageUri] = useState('');\r\n    const hoverPreviewIn = () => setIsPreviewHovered(true);\r\n    const hoverPreviewOut = () => setIsPreviewHovered(false);\r\n    const [firstCaptureUri, setFirstCaptureUri] = useState('');\r\n    const [capturedImageUri, setCapturedImageUri] = useState('');\r\n    const [vehicleImageUri, setVehicleImageUri] = useState(globalImageUrl);\r\n    const [featuresTrueCount, setFeaturesTrueCount] = useState(0);\r\n    const [rerenderState, setRerenderState] = useState(0);\r\n    const [imagePreviewKey, setImagePreviewKey] = useState(0);\r\n    const handlePreviewInvoiceModalOpen = () => {\r\n        dispatch(setPreviewInvoiceVisible(true));\r\n    };\r\n\r\n    const handlePreviewInvoiceModalClose = () => {\r\n        dispatch(setPreviewInvoiceVisible(false));\r\n        setCapturedImageUri('');\r\n    }\r\n\r\n    function countTrueValuesInCarData(invoiceData) {\r\n        let count = 0;\r\n\r\n        // Check if carData exists in invoiceData\r\n        if (invoiceData.carData) {\r\n            // List of fields to check within carData\r\n            const fields = ['interior', 'exterior', 'safetySystem', 'comfort', 'sellingPoints'];\r\n\r\n            fields.forEach(field => {\r\n                if (invoiceData.carData[field]) {\r\n                    // Count true values in each field of carData\r\n                    count += Object.values(invoiceData.carData[field]).filter(value => value === true).length;\r\n                }\r\n            });\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (previewInvoiceVisible) {\r\n            setRerenderState(rerenderState + 1);\r\n        }\r\n    }, [previewInvoiceVisible])\r\n\r\n\r\n    useEffect(() => {\r\n        let generatedImageUri = '';\r\n        const captureImageAsync = async () => {\r\n            try {\r\n                if (invoiceRef.current) {\r\n                    // Adjust the scale to control the captured image resolution\r\n                    const scale = 0.85; // Experiment with different scale values\r\n                    const width = 2480 * scale;\r\n                    const height = 3508 * scale;\r\n\r\n\r\n                    const imageUri = await captureRef(invoiceRef, {\r\n                        format: 'jpg',\r\n                        quality: 1, // Adjust quality if needed\r\n                        result: 'base64',\r\n                        width: width,\r\n                        height: height,\r\n                    });\r\n\r\n                    const trueCount = countTrueValuesInCarData(invoiceData);\r\n                    setFeaturesTrueCount(trueCount);\r\n                    generatedImageUri = `data:image/jpeg;base64,${imageUri}`\r\n                    setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\r\n\r\n                    // console.log(`data:image/jpeg;base64,${imageUri}`);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error capturing view:\", error);\r\n            }\r\n        };\r\n\r\n\r\n        captureImageAsync();\r\n\r\n\r\n    }, [invoiceRef.current, invoiceData]);\r\n\r\n    useEffect(() => {\r\n        setCapturedImageUri(capturedImageUri);\r\n    }, [capturedImageUri])\r\n\r\n    const captureImage = async () => {\r\n        try {\r\n            // Adjust the scale to control the captured image resolution\r\n            const scale = 0.9; // Experiment with different scale values\r\n            const width = 2480 * scale;\r\n            const height = 3508 * scale;\r\n\r\n            const imageUri = await captureRef(invoiceRef, {\r\n                format: 'jpg',\r\n                quality: 1, // Adjust quality if needed\r\n                result: 'base64',\r\n                width: width,\r\n                height: height,\r\n            });\r\n            return `data:image/jpeg;base64,${imageUri}`;\r\n        } catch (error) {\r\n            console.error(\"Error capturing view:\", error);\r\n        }\r\n    };\r\n\r\n    const createPDF = async () => {\r\n        const element = invoiceRef.current;\r\n        if (element) {\r\n            // Reduce the scale slightly for smaller file size\r\n            const scale = 1; // Fine-tune this value for balance\r\n\r\n            const canvas = await html2canvas(element, {\r\n                scale: scale,\r\n            });\r\n\r\n            // Experiment with JPEG quality for a balance between quality and file size\r\n            const imageData = canvas.toDataURL('image/jpeg', 0.9);\r\n\r\n            // A4 size dimensions in mm\r\n            const pdfWidth = 210;\r\n            const pdfHeight = 297;\r\n\r\n            const pdf = new jsPDF({\r\n                orientation: 'portrait',\r\n                unit: 'mm',\r\n                format: 'a4'\r\n            });\r\n\r\n            // Adjust PDF compression settings\r\n            const options = {\r\n                imageCompression: 'JPEG',\r\n                imageQuality: 1, // Fine-tune this value as well\r\n            };\r\n\r\n            const imgProps = pdf.getImageProperties(imageData);\r\n            const pdfWidthFit = pdfWidth;\r\n            const pdfHeightFit = (imgProps.height * pdfWidthFit) / imgProps.width;\r\n\r\n            pdf.addImage(imageData, 'JPEG', 0, 0, pdfWidthFit, pdfHeightFit, undefined, 'FAST', 0, options);\r\n\r\n            // Filename logic\r\n            selectedChatData.stepIndicator.value < 3 ?\r\n                pdf.save(`Proforma Invoice (${invoiceData.carData.carName} [${invoiceData.carData.referenceNumber}]) (A4 Paper Size).pdf`) :\r\n                pdf.save(`Invoice No. ${invoiceData.id} (A4 Paper Size).pdf`);\r\n        } else {\r\n            console.error(\"No element to capture\");\r\n        }\r\n    };\r\n\r\n\r\n    const handleCaptureAndCreatePDF = async () => {\r\n        const capturedImageUri = await captureImage();\r\n        if (capturedImageUri) {\r\n            await createPDF(capturedImageUri);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\r\n        const dueDateString = invoiceData.bankInformations.dueDate;\r\n        const issuingDateObject = new Date(issuingDateString);\r\n        const dueDateObject = new Date(dueDateString);\r\n\r\n\r\n        const options = {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        };\r\n\r\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\r\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\r\n\r\n    }\r\n\r\n    const originalWidth = 794;\r\n    const originalHeight = 1123;\r\n\r\n\r\n    const originalSmallWidth = 794;\r\n    const originalSmallHeight = 1123;\r\n\r\n    const newWidth = 2480;\r\n    const newHeight = 3508;\r\n\r\n    const smallWidth = 377;\r\n    const smallHeight = 541;\r\n\r\n    const smallWidthScaleFactor = smallWidth / originalSmallWidth;\r\n    const smallHeightScaleFactor = smallHeight / originalSmallHeight;\r\n\r\n    const widthScaleFactor = newWidth / originalWidth;\r\n    const heightScaleFactor = newHeight / originalHeight;\r\n\r\n    const openImage = () => {\r\n        if (Platform.OS === 'web') {\r\n            const imageWindow = window.open();\r\n            imageWindow.document.write(`\r\n                <style>\r\n                    body {\r\n                        margin: 0;\r\n                        display: flex;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                        height: 100vh;\r\n                        overflow: hidden;\r\n                    }\r\n                    img {\r\n                        width: 595px;\r\n                        height: 842px;\r\n                        object-fit: contain;\r\n                        transition: transform 0.25s ease;\r\n                        cursor: zoom-in; /* Set cursor to magnifying glass */\r\n                    }\r\n                    .zoomed {\r\n                        transform: scale(3);\r\n                        transform-origin: center;\r\n                        cursor: zoom-out; /* Change cursor to indicate zooming out */\r\n                    }\r\n                </style>\r\n                <img id=\"zoomableImage\" src=\"${capturedImageUri}\" alt=\"Base64 Image\" draggable=\"false\" />\r\n                <script>\r\n                    const image = document.getElementById('zoomableImage');\r\n    \r\n                    image.addEventListener('mousedown', function(e) {\r\n                        const rect = this.getBoundingClientRect();\r\n                        const x = e.clientX - rect.left;\r\n                        const y = e.clientY - rect.top;\r\n    \r\n                        // Set the transform origin to the mouse position\r\n                        this.style.transformOrigin = \\`\\${x}px \\${y}px\\`;\r\n                        this.classList.add('zoomed');\r\n                    });\r\n    \r\n                    document.addEventListener('mouseup', function() {\r\n                        image.classList.remove('zoomed');\r\n                    });\r\n                </script>\r\n            `);\r\n        } else {\r\n            console.log('This feature is only available in a web environment');\r\n        }\r\n    };\r\n\r\n\r\n    const s2ab = (s) => {\r\n        const buf = new ArrayBuffer(s.length);\r\n        const view = new Uint8Array(buf);\r\n        for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\r\n        return buf;\r\n    };\r\n\r\n    const modifyAndDownloadExcel = (file, dataToInsert) => {\r\n        // Read the file using SheetJS\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            const workbook = XLSX.read(e.target.result, { type: 'binary' });\r\n\r\n            // Assuming the data is for the first sheet\r\n            const sheetName = workbook.SheetNames[0];\r\n            const sheet = workbook.Sheets[sheetName];\r\n\r\n            // Insert your data into the sheet\r\n            // Example: Inserting data starting from the second row, in columns A, B, and C\r\n            dataToInsert.forEach((row, index) => {\r\n                const rowIndex = index + 2; // Adjust based on where you want to start inserting data\r\n                ['A', 'B', 'C'].forEach((col, colIndex) => {\r\n                    const cellRef = `${col}${rowIndex}`;\r\n                    XLSX.utils.sheet_add_aoa(sheet, [[row[colIndex]]], { origin: cellRef });\r\n                });\r\n            });\r\n\r\n            // Write the modified workbook to a binary string\r\n            const wbOut = XLSX.write(workbook, { bookType: 'xlsx', type: 'binary' });\r\n\r\n            // Convert the binary string to a Blob and trigger a download\r\n            const blob = new Blob([s2ab(wbOut)], { type: 'application/octet-stream' });\r\n            saveAs(blob, `Invoice No.${selectedChatData.invoiceNumber} Excel.xlsx`);\r\n        };\r\n        reader.readAsBinaryString(file);\r\n    };\r\n\r\n\r\n    const PreviewInvoiceForMobile = () => {\r\n\r\n        return (\r\n            <View\r\n                style={{\r\n                    width: smallWidth,\r\n                    height: smallHeight,\r\n                    backgroundColor: 'white',\r\n                    zIndex: 1\r\n                }}>\r\n\r\n                <View\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        zIndex: 999,\r\n                    }}\r\n                />\r\n\r\n                <View style={{ position: 'absolute', left: 38 * smallWidthScaleFactor, top: 38 * smallHeightScaleFactor }}>\r\n                    <NativeImage\r\n                        source={require('../../assets/RMJ logo for invoice.png')}\r\n                        style={{\r\n                            width: 95 * smallWidthScaleFactor,\r\n                            height: 85 * smallHeightScaleFactor,\r\n                            resizeMode: 'stretch',\r\n                        }}\r\n                    />\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * smallHeightScaleFactor }}>\r\n                    {/* Title */}\r\n                    {selectedChatData.stepIndicator.value < 3 ?\r\n                        <Text style={{ fontWeight: 700, fontSize: 25 * smallWidthScaleFactor }}>{`PROFORMA INVOICE`}</Text> :\r\n                        <Text style={{ fontWeight: 700, fontSize: 25 * smallWidthScaleFactor }}>{`INVOICE`}</Text>\r\n                    }\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 38 * smallHeightScaleFactor }}>\r\n                    {/* QR CODE */}\r\n                    {selectedChatData.stepIndicator.value < 3 ?\r\n                        null :\r\n                        <QRCode\r\n                            value={invoiceData.cryptoNumber}\r\n                            size={80 * smallWidthScaleFactor}\r\n                            color=\"black\"\r\n                            backgroundColor=\"white\"\r\n                        />\r\n                    }\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', right: 121 * smallWidthScaleFactor, top: 34 * smallHeightScaleFactor }}>\r\n                    {/* Invoice Number */}\r\n                    {selectedChatData.stepIndicator.value < 3 ?\r\n                        null :\r\n                        <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Invoice No. RMJ-${invoiceData.id}`}</Text>\r\n                    }\r\n                </View>\r\n\r\n                {selectedChatData.stepIndicator.value < 3 ?\r\n                    <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 34 * smallHeightScaleFactor, }}>\r\n                        {/* Issuing Date */}\r\n                        <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                            <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                        </View>\r\n                        <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                            <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, color: '#F00A0A', }}>{`Valid Until: `}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                        </View>\r\n\r\n                    </View>\r\n                    :\r\n                    <View style={{ position: 'absolute', right: 121 * smallWidthScaleFactor, top: 49 * smallHeightScaleFactor, flexDirection: 'row' }}>\r\n                        {/* Issuing Date */}\r\n                        <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                        <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                    </View>\r\n                }\r\n\r\n                <View style={{\r\n                    position: 'absolute',\r\n                    left: 40 * smallWidthScaleFactor,\r\n                    top: 134 * smallHeightScaleFactor,\r\n                    width: 280 * smallWidthScaleFactor,\r\n                }}>\r\n                    {/* Shipper */}\r\n                    <Text style={{\r\n                        fontWeight: 750,\r\n                        fontSize: 16 * smallWidthScaleFactor,\r\n                        borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                        width: 'fit-content', // Make the underline cover the text width\r\n                        marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                    }}>\r\n                        {`Shipper`}\r\n                    </Text>\r\n                    <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: +81565850606`}</Text>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Shipped From:`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.departurePort}, ${invoiceData.departureCountry}`}</Text>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Shipped To:`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.discharge.port}, ${invoiceData.discharge.country}`}</Text>\r\n                    {invoiceData.placeOfDelivery && invoiceData.placeOfDelivery !== '' ?\r\n                        <>\r\n                            <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Place of Delivery:`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 12 * smallHeightScaleFactor }}>{`${invoiceData.placeOfDelivery}`}</Text>\r\n                        </>\r\n                        : null}\r\n                    {invoiceData.cfs && invoiceData.cfs !== '' ?\r\n                        <>\r\n                            <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`CFS:`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.cfs}`}</Text>\r\n                        </>\r\n                        : null}\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', width: 715 * smallWidthScaleFactor, }}>\r\n\r\n                        <View style={{\r\n                            flex: 1, width: 280 * smallWidthScaleFactor,\r\n                        }}>\r\n                            {/* Buyer Information */}\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 18 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                borderBottomColor: '#0A78BE',\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                color: '#0A78BE',\r\n                                marginTop: 45 * smallHeightScaleFactor,\r\n\r\n                            }}>\r\n                                {`Buyer Information`}\r\n                            </Text>\r\n                            <Text style={{ fontWeight: 750, fontSize: 16 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.name}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.address}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.email}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.contactNumber}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: ${invoiceData.consignee.fax == '' ? 'N/A' : invoiceData.consignee.fax}`}</Text>\r\n\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, paddingLeft: 20 * smallWidthScaleFactor, width: 280 * smallWidthScaleFactor, }}>\r\n                            {/* Notify Party */}\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 18 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                borderBottomColor: '#FF0000',\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                color: '#FF0000',\r\n                                marginTop: 45 * smallHeightScaleFactor,\r\n                            }}>\r\n                                {`Notify Party`}\r\n                            </Text>\r\n                            {invoiceData.notifyParty.sameAsConsignee == true ? (\r\n                                <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\r\n                                (<>\r\n                                    <Text style={{ fontWeight: 750, fontSize: 16 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.name}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.address}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.email}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.contactNumber}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: ${invoiceData.notifyParty.fax == '' ? 'N/A' : invoiceData.notifyParty.fax}`}</Text>\r\n                                </>)}\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n\r\n                </View>\r\n                {selectedChatData.stepIndicator.value < 3 ?\r\n\r\n                    <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 130 * smallHeightScaleFactor, borderWidth: 3 * smallWidthScaleFactor, width: 430 * smallWidthScaleFactor, borderColor: '#FF5C00', height: 194 * smallHeightScaleFactor, }}>\r\n                        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', flexDirection: 'row', }}>\r\n                            <Entypo size={50 * smallWidthScaleFactor} name='warning' color={'#FF0000'} style={{ marginLeft: 15 * smallWidthScaleFactor, }} />\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, color: '#FF0000', marginLeft: 20 * smallWidthScaleFactor, }}>{`Bank Information will be provided after placing an order.`}</Text>\r\n                        </View>\r\n                    </View>\r\n                    :\r\n                    <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 130 * smallHeightScaleFactor, borderWidth: 3 * smallWidthScaleFactor, width: 430 * smallWidthScaleFactor, borderColor: '#1ABA3D', }}>\r\n\r\n                        <View style={{ flex: 1, alignItems: 'center', }}>\r\n                            <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * smallWidthScaleFactor, marginBottom: 5 * smallHeightScaleFactor, }}>\r\n                            <View style={{ flex: 1, marginRight: 50 * smallWidthScaleFactor, }}>\r\n                                <Text style={{\r\n                                    fontWeight: 750,\r\n                                    fontSize: 14 * smallWidthScaleFactor,\r\n                                    borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                    width: 'fit-content', // Make the underline cover the text width\r\n                                    marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                }}>\r\n                                    {`Bank Account`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Bank Name: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Branch Name: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`SWIFTCODE: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Address: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Name of Account Holder: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Account Number: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ flex: 1 }}>\r\n\r\n                                <Text style={{\r\n                                    fontWeight: 750,\r\n                                    fontSize: 14 * smallWidthScaleFactor,\r\n                                    borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                                    width: 'fit-content', // Make the underline cover the text width\r\n                                    marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                }}>\r\n                                    {`Payment Terms`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Terms: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\r\n                                </Text>\r\n\r\n                                <View style={{ paddingTop: 30 * smallHeightScaleFactor, }}>\r\n\r\n                                    <Text style={{\r\n                                        fontWeight: 750,\r\n                                        fontSize: 14 * smallWidthScaleFactor,\r\n                                        borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                                        width: 'fit-content', // Make the underline cover the text width\r\n                                        marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                        color: '#F00A0A',\r\n                                        borderBottomColor: '#F00A0A',\r\n                                    }}>\r\n                                        {`Payment Due`}\r\n                                    </Text>\r\n\r\n                                    <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, color: '#F00A0A', lineHeight: 14 * smallWidthScaleFactor }}>{`Due Date: `}\r\n                                        <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, color: 'black', lineHeight: 14 * smallWidthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                    </Text>\r\n\r\n                                </View>\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                    </View>}\r\n\r\n\r\n\r\n                <View style={{\r\n                    position: 'absolute',\r\n                    left: 38 * smallWidthScaleFactor,\r\n                    top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * smallHeightScaleFactor : 537 * smallHeightScaleFactor,\r\n                    width: 718 * smallWidthScaleFactor,\r\n                    borderWidth: 1 * smallWidthScaleFactor,\r\n                    borderColor: '#C2E2F4',\r\n                    alignSelf: 'center',\r\n                }}>\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Description`}\r\n                            </Text>\r\n\r\n                        </View>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Notes`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Quantity`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Amount`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {`FOB`}\r\n                            </Text>\r\n                        </View>\r\n\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {`$${Math.round(Number(invoiceData.paymentDetails.fobPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {`Freight`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {`$${Math.round(Number(invoiceData.paymentDetails.freightPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                            </Text>}\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <>\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            marginLeft: 2 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                    </Text>\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            marginLeft: 2 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? ` + Insurance` : ' '}\r\n                                    </Text>\r\n                                </>\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        marginLeft: 2 * smallWidthScaleFactor,\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.incoterms == \"CIF\" ? `Insurance` : ' '}\r\n                                </Text>\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                    }}>\r\n                                    {' '}\r\n                                </Text>\r\n                            }\r\n\r\n\r\n                        </View>\r\n\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                            </Text>}\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.incoterms === \"CIF\" ? ` + $${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                    </Text>\r\n                                </Text>\r\n\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.incoterms == \"CIF\" ? `$${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                </Text>\r\n                            }\r\n\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 ? `${invoiceData.paymentDetails.additionalName.join(' + ')}` : ' '}\r\n                            </Text>}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\r\n                                    ? invoiceData.paymentDetails.additionalPrice.map(price =>\r\n                                        `$${parseFloat(price).toLocaleString('en-US', {\r\n                                            style: 'currency',\r\n                                            currency: 'USD',\r\n                                            minimumFractionDigits: 0,\r\n                                            maximumFractionDigits: 0\r\n                                        }).slice(1)}`\r\n                                    ).join(' + ')\r\n                                    : ' '}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            flexDirection: 'row',\r\n                            paddingVertical: 2 * smallHeightScaleFactor,\r\n\r\n                        }}>\r\n                            {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                    {\"Used Vehicle\\n\"}\r\n                                    <Text style={{\r\n                                        fontWeight: 700,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.carName}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.chassisNumber}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.exteriorColor}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.fuel}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.transmission}\\n`}\r\n                                    </Text>\r\n                                </Text>\r\n\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            {invoiceData.paymentDetails && invoiceData.paymentDetails.incoterms && invoiceData.discharge.port && invoiceData.discharge ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    {`${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}`}\r\n                                </Text>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 1,\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    {'1'}\r\n                                </Text>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            justifyContent: 'center',\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\r\n                                <>\r\n                                    <Text style={{\r\n                                        fontWeight: 700,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        color: '#008AC6',\r\n                                        marginRight: 10 * smallWidthScaleFactor,\r\n                                        top: 51 * smallHeightScaleFactor,\r\n                                        left: 50 * smallWidthScaleFactor,\r\n                                        position: 'absolute',\r\n                                    }}>\r\n                                        {\"Total\"}\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            alignSelf: 'center',\r\n                                            color: '#00720B',\r\n                                            marginLeft: 5 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                            {`$${invoiceData.paymentDetails.totalAmount}`}\r\n                                        </Text>\r\n                                    </Text>\r\n\r\n                                </>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', left: 38 * smallWidthScaleFactor, top: 825 * smallHeightScaleFactor, width: 350 * smallWidthScaleFactor, }}>\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Payment Information:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'No warranty service is provided on used vehicles.'}\r\n                    </Text>\r\n\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Conditions for order cancellation:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\r\n                    </Text>\r\n\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Intermediary Banking Information:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Swift code: SMBCUS33'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Address: 277 Park Avenue'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'City: New York, NY'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Postal Code: 10172'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Country: United States'}\r\n                    </Text>\r\n                </View>\r\n\r\n                {selectedChatData.stepIndicator.value < 3 ? null :\r\n                    <View style={{ position: 'absolute', right: 39 * smallWidthScaleFactor, top: 835 * smallHeightScaleFactor, width: 300 * smallWidthScaleFactor, }}>\r\n                        <View style={{\r\n                            width: 300 * smallWidthScaleFactor,\r\n                            alignItems: 'center',\r\n                            paddingBottom: 80 * smallHeightScaleFactor, // Adjust this value to control space between image and line\r\n                        }}>\r\n                            <NativeImage\r\n                                source={require('../../assets/RMJ Invoice Signature with Hanko.png')}\r\n                                style={{\r\n                                    width: 276 * smallWidthScaleFactor,\r\n                                    height: 81 * smallHeightScaleFactor,\r\n                                    resizeMode: 'contain',\r\n                                    alignSelf: 'center',\r\n                                    marginBottom: 0, // Minimize margin to keep the line close\r\n                                }}\r\n                            />\r\n                            <View style={{\r\n                                borderBottomWidth: 1 * smallHeightScaleFactor,\r\n                                borderColor: 'black', // Change the color as needed\r\n                                width: '100%', // Line width as per your requirement\r\n                            }} />\r\n                            <Text italic style={{\r\n                                fontWeight: 700,\r\n                                fontSize: 16 * smallWidthScaleFactor,\r\n                            }}>\r\n                                {'Real Motor Japan'}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            width: 300 * smallWidthScaleFactor,\r\n                            alignItems: 'center',\r\n                            paddingBottom: 5 * smallHeightScaleFactor, // Adjust this value to control space between image and line\r\n                        }}>\r\n\r\n                            <View style={{\r\n                                borderBottomWidth: 1 * smallHeightScaleFactor,\r\n                                borderColor: 'black', // Change the color as needed\r\n                                width: '100%', // Line width as per your requirement\r\n                            }} />\r\n                            <Text italic style={{\r\n                                fontWeight: 700,\r\n                                fontSize: 16 * smallWidthScaleFactor,\r\n                            }}>\r\n                                {'Your Signature'}\r\n                            </Text>\r\n                        </View>\r\n                    </View>}\r\n\r\n\r\n            </View>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    const handleSaveAsExcel = async () => {\r\n\r\n        const formData = {\r\n            qrCodeData: invoiceData.cryptoNumber || '',\r\n\r\n            invoiceNumber: invoiceData.id || '',\r\n            issuingDate: invoiceData.bankInformations.issuingDate || '',\r\n            shippedFrom: `${invoiceData.departurePort || ''}, ${invoiceData.departureCountry || ''}`,\r\n            shippedTo: `${invoiceData.discharge.port || ''}, ${invoiceData.discharge.country || ''}`,\r\n            placeOfDelivery: invoiceData.placeOfDelivery ? invoiceData.placeOfDelivery : '',\r\n            cfs: invoiceData.cfs ? invoiceData.cfs : '',\r\n\r\n            buyerName: invoiceData.consignee.name || '',\r\n            buyerAddress: invoiceData.consignee.address || '',\r\n            buyerEmail: invoiceData.consignee.email || '',\r\n            buyerContact: invoiceData.consignee.contactNumber || '',\r\n            buyerFax: `FAX: ${invoiceData.consignee.fax || 'N/A'}`,\r\n\r\n            notifyName: invoiceData.sameAsConsignee ? `Same as consignee / buyer` : (invoiceData.notifyParty.name || ''),\r\n            notifyAddress: invoiceData.notifyParty.address || '',\r\n            notifyEmail: invoiceData.notifyParty.email || '',\r\n            notifyContact: invoiceData.notifyParty.contactNumber || '',\r\n            notifyFax: invoiceData.sameAsConsignee ? `FAX: ${invoiceData.notifyParty.fax || 'N/A'}` : '',\r\n\r\n            bankName: invoiceData.bankInformations.bankAccount.bankName || '',\r\n            branchName: invoiceData.bankInformations.bankAccount.branchName || '',\r\n            swiftcode: invoiceData.bankInformations.bankAccount.swiftCode || '',\r\n            bankAddress: invoiceData.bankInformations.bankAccount.address || '',\r\n            nameOfAccountHolder: invoiceData.bankInformations.bankAccount.accountHolder || '',\r\n            accountNumber: invoiceData.bankInformations.bankAccount.accountNumberValue || '',\r\n            dueDate: invoiceData.bankInformations.dueDate || '',\r\n\r\n            fobText: 'FOB',\r\n            freightText: 'Freight',\r\n            inspectionText: `Inspection [${invoiceData.paymentDetails.inspectionName || ''}]`,\r\n            fobAmount: Math.round(Number(invoiceData.paymentDetails.fobPrice)),\r\n            freightAmount: Math.round(Number(invoiceData.paymentDetails.freightPrice)),\r\n            inspectionAmount: Math.round(Number(invoiceData.paymentDetails.inspectionPrice)),\r\n\r\n\r\n            usedVehicle: `Used Vehicle`,\r\n            carName: invoiceData.carData.carName || '',\r\n            chassisNumber: invoiceData.carData.chassisNumber || '',\r\n            color: invoiceData.carData.exteriorColor || '',\r\n            displacement: `${Number(invoiceData.carData.engineDisplacement || 0).toLocaleString('en-US')} cc`,\r\n            mileage: `${Number(invoiceData.carData.mileage || 0).toLocaleString('en-US')} km`,\r\n            fuel: invoiceData.carData.fuel || '',\r\n            transmission: invoiceData.carData.transmission || '',\r\n            notes: `${invoiceData.paymentDetails.incoterms || ''} ${invoiceData.discharge.port || ''}`,\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:4000/generate-excel', formData, {\r\n                responseType: 'blob', // Important for handling the binary Excel file\r\n            });\r\n\r\n            // Create a Blob from the PDF Stream\r\n            const file = new Blob([response.data], {\r\n                type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n            });\r\n\r\n            // Build a URL from the file\r\n            const fileURL = URL.createObjectURL(file);\r\n\r\n            // Open the URL on new Window\r\n            window.open(fileURL);\r\n        } catch (error) {\r\n            console.error('Error generating Excel:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <> {invoiceData && Object.keys(invoiceData).length > 0 &&\r\n\r\n            <>{!selectedChatData.isCancelled && <Pressable\r\n                onPress={handlePreviewInvoiceModalOpen}\r\n                focusable={false}\r\n                variant='ghost'\r\n                onHoverIn={hoverPreviewIn}\r\n                onHoverOut={hoverPreviewOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isPreviewHovered ? '#0772ad' : '#0A8DD5',\r\n                }}>\r\n\r\n                {selectedChatData.invoiceNumber && selectedChatData.stepIndicator.value > 2 ?\r\n                    <Text style={{ fontWeight: 700, color: 'white', }}>\r\n                        {`Preview Invoice No. ${selectedChatData.invoiceNumber}`}\r\n                    </Text>\r\n                    :\r\n                    <Text style={{ fontWeight: 700, color: 'white', }}>\r\n                        {`Preview Invoice`}\r\n                    </Text>}\r\n            </Pressable>}\r\n\r\n                <Modal\r\n                    isOpen={previewInvoiceVisible}\r\n                    onClose={() => {\r\n                        handlePreviewInvoiceModalClose();\r\n                    }}\r\n                    size={'full'}\r\n                    useRNModal\r\n                >\r\n                    <View style={{ flexDirection: 'row', margin: 2, }}>\r\n                        <Pressable onPress={() => {\r\n                            capturedImageUri ? handleCaptureAndCreatePDF() : null;\r\n                        }}\r\n                            style={{ justifyContent: 'center', flexDirection: 'row', padding: 5, borderRadius: 5, marginRight: 5, backgroundColor: '#16A34A', }}>\r\n                            <MaterialCommunityIcons size={20} name='download' color='white' />\r\n                            <Text style={{ color: 'white', }}>Download as PDF</Text>\r\n                        </Pressable>\r\n\r\n                        {selectedChatData.isCancelled && selectedChatData.stepIndicator.value < 3 ?\r\n                            null :\r\n                            <Pressable\r\n                                onPress={() => {\r\n                                    dispatch(setCustomInvoiceVisible(true))\r\n                                    dispatch(setPreviewInvoiceVisible(false))\r\n                                }}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                style={{\r\n                                    justifyContent: 'center',\r\n                                    flexDirection: 'row',\r\n                                    padding: 5,\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: '#0A8DD5',\r\n                                }}>\r\n                                <MaterialCommunityIcons size={20} name='file-document-edit' color='white' />\r\n                                <Text style={{ fontWeight: 400, color: 'white', }}>\r\n                                    {`Generate Custom Invoice`}\r\n                                </Text>\r\n                            </Pressable>\r\n\r\n                        }\r\n\r\n                        <Pressable\r\n                            onPress={() => {\r\n                                capturedImageUri ? openImage() : null;\r\n                            }}\r\n                            style={{ position: 'absolute', top: -2, right: selectedChatData.stepIndicator.value < 3 ? -375 : -285, flexDirection: 'row', padding: 5, borderRadius: 5, backgroundColor: '#0A8DD5', }}>\r\n                            <Entypo size={20} name='images' color='white' />\r\n                            <Text style={{ color: 'white', }}>View Image</Text>\r\n                        </Pressable>\r\n\r\n                    </View>\r\n                    <Modal.CloseButton />\r\n                    {previewInvoiceVisible &&\r\n                        <ScrollView\r\n                            style={{ maxHeight: screenWidth < 960 ? 520 : 720, maxWidth: screenWidth < 960 ? '90%' : 900 }}\r\n                        >\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                right: 0,\r\n                                left: 0,\r\n                                backgroundColor: 'white',\r\n                                zIndex: 999,\r\n                                flex: 1,\r\n                                alignItems: 'center', // Center horizontally\r\n                            }}>\r\n                                {capturedImageUri ? (\r\n                                    (screenWidth < mobileViewBreakpoint ? <PreviewInvoiceForMobile /> :\r\n                                        <RNImage\r\n                                            key={imagePreviewKey}\r\n                                            source={{ uri: capturedImageUri.toString() }}\r\n                                            style={{\r\n                                                marginTop: 5,\r\n                                                width: screenWidth < mobileViewBreakpoint ? 377 : 595,\r\n                                                height: screenWidth < mobileViewBreakpoint ? 541 : 842,\r\n                                                resizeMode: 'stretch',\r\n                                                borderWidth: 1,\r\n                                                borderColor: '#DADDE1',\r\n                                            }}\r\n                                        />\r\n                                    )\r\n                                ) : (\r\n                                    <Spinner size={'lg'} color={'#0A9FDC'} style={{ alignSelf: 'center', paddingTop: 80 * heightScaleFactor, }} />\r\n                                )}\r\n                            </View>\r\n\r\n                            {/* Main content with invoice details */}\r\n                            {\r\n\r\n                                <View ref={invoiceRef}\r\n                                    style={{\r\n                                        width: newWidth,\r\n                                        height: newHeight,\r\n                                        backgroundColor: 'white',\r\n                                        zIndex: 1\r\n                                    }}>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        <NativeImage\r\n                                            source={require('../../assets/RMJ logo for invoice.png')}\r\n                                            style={{\r\n                                                width: 95 * widthScaleFactor,\r\n                                                height: 85 * heightScaleFactor,\r\n                                                resizeMode: 'stretch',\r\n                                            }}\r\n                                        />\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * heightScaleFactor }}>\r\n                                        {/* Title */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`PROFORMA INVOICE`}</Text> :\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`INVOICE`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        {/* QR CODE */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <View\r\n                                                ref={qrCodeRef}\r\n                                            >\r\n                                                <QRCode\r\n                                                    value={invoiceData.cryptoNumber}\r\n                                                    size={80 * widthScaleFactor}\r\n                                                    color=\"black\"\r\n                                                    backgroundColor=\"white\"\r\n                                                />\r\n                                            </View>\r\n\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 34 * heightScaleFactor }}>\r\n                                        {/* Invoice Number */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Invoice No. RMJ-${invoiceData.id}`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 34 * heightScaleFactor, }}>\r\n                                            {/* Issuing Date */}\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                                            </View>\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#F00A0A', }}>{`Valid Until: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 49 * heightScaleFactor, flexDirection: 'row' }}>\r\n                                            {/* Issuing Date */}\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                            <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                                        </View>\r\n                                    }\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 40 * widthScaleFactor,\r\n                                        top: 134 * heightScaleFactor,\r\n                                        width: 280 * widthScaleFactor,\r\n                                    }}>\r\n                                        {/* Shipper */}\r\n                                        <Text style={{\r\n                                            fontWeight: 750,\r\n                                            fontSize: 16 * widthScaleFactor,\r\n                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                            width: 'fit-content', // Make the underline cover the text width\r\n                                            marginBottom: 5, // Add some space between text and underline\r\n                                        }}>\r\n                                            {`Shipper`}\r\n                                        </Text>\r\n                                        <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: +81565850606`}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped From:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.departurePort}, ${invoiceData.departureCountry}`}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped To:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.discharge.port}, ${invoiceData.discharge.country}`}</Text>\r\n                                        {invoiceData.placeOfDelivery && invoiceData.placeOfDelivery !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Place of Delivery:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.placeOfDelivery}`}</Text>\r\n                                            </>\r\n                                            : null}\r\n                                        {invoiceData.cfs && invoiceData.cfs !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`CFS:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.cfs}`}</Text>\r\n                                            </>\r\n                                            : null}\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', width: 715 * widthScaleFactor, }}>\r\n\r\n                                            <View style={{\r\n                                                flex: 1, width: 280 * widthScaleFactor,\r\n                                            }}>\r\n                                                {/* Buyer Information */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#0A78BE',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#0A78BE',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n\r\n                                                }}>\r\n                                                    {`Buyer Information`}\r\n                                                </Text>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.name}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.address}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.email}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.contactNumber}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${invoiceData.consignee.fax == '' ? 'N/A' : invoiceData.consignee.fax}`}</Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, paddingLeft: 20 * widthScaleFactor, width: 280 * widthScaleFactor, }}>\r\n                                                {/* Notify Party */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#FF0000',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#FF0000',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n                                                }}>\r\n                                                    {`Notify Party`}\r\n                                                </Text>\r\n                                                {invoiceData.notifyParty.sameAsConsignee == true ? (\r\n                                                    <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\r\n                                                    (<>\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.name}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.address}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.email}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.contactNumber}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${invoiceData.notifyParty.fax == '' ? 'N/A' : invoiceData.notifyParty.fax}`}</Text>\r\n                                                    </>)}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n\r\n                                    </View>\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#FF5C00', height: 194 * heightScaleFactor, }}>\r\n                                            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                <Entypo size={50 * widthScaleFactor} name='warning' color={'#FF0000'} />\r\n                                                <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#FF0000', marginLeft: 20 * widthScaleFactor, }}>{`Bank Information will be provided after placing an order.`}</Text>\r\n                                            </View>\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#1ABA3D', }}>\r\n\r\n                                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * widthScaleFactor, marginBottom: 5 * heightScaleFactor, }}>\r\n                                                <View style={{ flex: 1, marginRight: 50 * widthScaleFactor, }}>\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Bank Account`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Bank Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Branch Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`SWIFTCODE: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Address: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Name of Account Holder: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Account Number: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View style={{ flex: 1 }}>\r\n\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Payment Terms`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Terms: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <View style={{ paddingTop: 30 * heightScaleFactor, }}>\r\n\r\n                                                        <Text style={{\r\n                                                            fontWeight: 750,\r\n                                                            fontSize: 14 * widthScaleFactor,\r\n                                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                            width: 'fit-content', // Make the underline cover the text width\r\n                                                            marginBottom: 2, // Add some space between text and underline\r\n                                                            color: '#F00A0A',\r\n                                                            borderBottomColor: '#F00A0A',\r\n                                                        }}>\r\n                                                            {`Payment Due`}\r\n                                                        </Text>\r\n\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#F00A0A', lineHeight: 14 * widthScaleFactor }}>{`Due Date: `}\r\n                                                            <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, color: 'black', lineHeight: 14 * widthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                                        </Text>\r\n\r\n                                                    </View>\r\n\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                        </View>}\r\n\r\n\r\n\r\n                                    {/* <View style={{ position: 'absolute', left: 260 * widthScaleFactor, top: 335 * heightScaleFactor }}>\r\n\r\n                                        <View style={{ flexDirection: 'row' }}>\r\n                                            {vehicleImageUri ? (\r\n                                                <NativeImage\r\n                                                    source={{ uri: vehicleImageUri }}\r\n                                                    style={{\r\n                                                        width: 99 * widthScaleFactor,\r\n                                                        height: 70 * heightScaleFactor,\r\n                                                        resizeMode: 'stretch',\r\n                                                    }}\r\n                                                />\r\n                                            ) : (\r\n                                                <View\r\n                                                    style={{\r\n                                                        width: 99 * widthScaleFactor,\r\n                                                        height: 70 * heightScaleFactor,\r\n                                                        backgroundColor: '#e0e0e0',\r\n                                                        marginRight: 12,\r\n                                                    }}\r\n                                                />\r\n                                            )}\r\n                                            <View style={{ flex: 1, top: -2 * heightScaleFactor, marginLeft: 5 * widthScaleFactor, height: 59 * heightScaleFactor }}>\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 14 * widthScaleFactor, lineHeight: 16 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.carName}`}\r\n                                                </Text>\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Reference No.: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${invoiceData.carData.referenceNumber}`}\r\n                                                    </Text>\r\n                                                </Text>\r\n\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Year/Month: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${invoiceData.carData.regYear}/${invoiceData.carData.regMonth}`}\r\n                                                    </Text>\r\n                                                </Text>\r\n\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Mileage: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km`}\r\n                                                    </Text>\r\n                                                </Text>\r\n\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Chassis No.: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${invoiceData.carData.chassisNumber}`}\r\n                                                    </Text>\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 260 * widthScaleFactor, top: 410 * heightScaleFactor, flexDirection: 'row', width: 495 * widthScaleFactor, }}>\r\n                                        <View style={{ flex: 1 }}>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Model Code: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.modelCode}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Fuel: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.fuel}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Transmission: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.transmission}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Steering: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.steering}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Displacement: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc`}\r\n                                                </Text>\r\n                                            </Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1 }}>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Doors: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.doors ? invoiceData.carData.doors : 'N/A'}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Drive Type: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.driveType ? invoiceData.carData.driveType : 'N/A'}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Exterior Color: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.exteriorColor}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Number of Seats: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.numberOfSeats ? invoiceData.carData.numberOfSeats : 'N/A'}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Body Type: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.bodyType}`}\r\n                                                </Text>\r\n                                            </Text>\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 260 * widthScaleFactor, top: 484 * heightScaleFactor, width: 495 * widthScaleFactor, }}>\r\n                                        <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginBottom: 3 * heightScaleFactor, }}>\r\n                                            {`Features: `}\r\n                                        </Text>\r\n\r\n                                        <InvoiceFeatures widthScaleFactor={widthScaleFactor} heightScaleFactor={heightScaleFactor} />\r\n\r\n                                    </View> */}\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 38 * widthScaleFactor,\r\n                                        top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * heightScaleFactor : 537 * heightScaleFactor,\r\n                                        width: 718 * widthScaleFactor,\r\n                                        borderWidth: 1 * widthScaleFactor,\r\n                                        borderColor: '#C2E2F4',\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Description`}\r\n                                                </Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Notes`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Quantity`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Amount`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {`FOB`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {`$${Math.round(Number(invoiceData.paymentDetails.fobPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {`Freight`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {`$${Math.round(Number(invoiceData.paymentDetails.freightPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                                </Text>}\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <>\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                marginLeft: 2 * widthScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                                        </Text>\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                marginLeft: 2 * widthScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.incoterms == \"CIF\" ? ` + Insurance` : ' '}\r\n                                                        </Text>\r\n                                                    </>\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? `Insurance` : ' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                        }}>\r\n                                                        {' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n\r\n                                            </View>\r\n\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                </Text>}\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.incoterms === \"CIF\" ? ` + $${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                        </Text>\r\n                                                    </Text>\r\n\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? `$${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n                                            </View>\r\n\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 ? `${invoiceData.paymentDetails.additionalName.join(' + ')}` : ' '}\r\n                                                </Text>}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\r\n                                                        ? invoiceData.paymentDetails.additionalPrice.map(price =>\r\n                                                            `$${parseFloat(price).toLocaleString('en-US', {\r\n                                                                style: 'currency',\r\n                                                                currency: 'USD',\r\n                                                                minimumFractionDigits: 0,\r\n                                                                maximumFractionDigits: 0\r\n                                                            }).slice(1)}`\r\n                                                        ).join(' + ')\r\n                                                        : ' '}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                paddingVertical: 2 * heightScaleFactor,\r\n\r\n                                            }}>\r\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                        {\"Used Vehicle\\n\"}\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.carName}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.chassisNumber}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.exteriorColor}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.fuel}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.transmission}\\n`}\r\n                                                        </Text>\r\n                                                    </Text>\r\n\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.incoterms && invoiceData.discharge.port && invoiceData.discharge ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                        {`${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}`}\r\n                                                    </Text>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 1,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                        {'1'}\r\n                                                    </Text>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                justifyContent: 'center',\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\r\n                                                    <>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            color: '#008AC6',\r\n                                                            marginRight: 10 * widthScaleFactor,\r\n                                                            top: 51 * heightScaleFactor,\r\n                                                            left: 50 * widthScaleFactor,\r\n                                                            position: 'absolute',\r\n                                                        }}>\r\n                                                            {\"Total\"}\r\n                                                            <Text style={{\r\n                                                                fontWeight: 700,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                alignSelf: 'center',\r\n                                                                color: '#00720B',\r\n                                                                marginLeft: 5 * widthScaleFactor,\r\n                                                            }}>\r\n                                                                {`$${invoiceData.paymentDetails.totalAmount}`}\r\n                                                            </Text>\r\n                                                        </Text>\r\n\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 825 * heightScaleFactor, width: 350 * widthScaleFactor, }}>\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Payment Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'No warranty service is provided on used vehicles.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Conditions for order cancellation:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Intermediary Banking Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Swift code: SMBCUS33'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Address: 277 Park Avenue'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'City: New York, NY'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Postal Code: 10172'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Country: United States'}\r\n                                        </Text>\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ? null :\r\n                                        <View style={{ position: 'absolute', right: 39 * widthScaleFactor, top: 835 * heightScaleFactor, width: 300 * widthScaleFactor, }}>\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 80 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n                                                <NativeImage\r\n                                                    source={require('../../assets/RMJ Invoice Signature with Hanko.png')}\r\n                                                    style={{\r\n                                                        width: 276 * widthScaleFactor,\r\n                                                        height: 81 * heightScaleFactor,\r\n                                                        resizeMode: 'contain',\r\n                                                        alignSelf: 'center',\r\n                                                        marginBottom: 0, // Minimize margin to keep the line close\r\n                                                    }}\r\n                                                />\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Real Motor Japan'}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 5 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Your Signature'}\r\n                                                </Text>\r\n                                            </View>\r\n                                        </View>}\r\n\r\n\r\n                                </View>\r\n                            }\r\n\r\n\r\n                        </ScrollView>\r\n\r\n                    }\r\n\r\n                </Modal>\r\n            </>\r\n        }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst ReopenTransaction = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData)\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData)\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isYesHovered, setIsYesHovered] = useState(false);\r\n    const [isNoHovered, setIsNoHovered] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n\r\n    const yesHoverIn = () => setIsYesHovered(true);\r\n    const yesHoverOut = () => setIsYesHovered(false);\r\n\r\n    const noHoverIn = () => setIsNoHovered(true);\r\n    const noHoverOut = () => setIsNoHovered(false);\r\n\r\n    const handleModalOpen = () => {\r\n        setIsModalVisible(true);\r\n\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setIsModalVisible(false);\r\n\r\n    }\r\n\r\n\r\n    const reopenTransactionMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `The transaction has been reopened by the seller.`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `The transaction has been reopened by the seller.`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const handleReopenTransaction = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeEmail = moment(datetime).format('MMMM D, YYYY');\r\n\r\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n        const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\r\n        const docRefVehicle = doc(projectExtensionFirestore, \"VehicleProducts\", selectedChatData.carData.stockID);\r\n\r\n        setIsYesLoading(true);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                'isCancelled': false, // Update the specific field\r\n                'orderPlaced': true\r\n            });\r\n            try {\r\n                await updateDoc(docRefChatId, {\r\n                    'isCancelled': false // Update the specific field\r\n                });\r\n\r\n                try {\r\n                    await updateDoc(docRefVehicle, {\r\n                        'stockStatus': 'Reserved', // Update the specific field\r\n                        'reservedTo': selectedCustomerData.textEmail,\r\n                    });\r\n                } catch (error) {\r\n                    console.error(\"Error updating document: \", error);\r\n                }\r\n                await reopenTransactionMessage();\r\n\r\n                setIsYesLoading(false);\r\n                console.log(\"Document successfully updated\");\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n            console.log(\"Document successfully updated\");\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#0772ad' : '#0A8DD5',\r\n                    padding: 10,\r\n                }}>\r\n\r\n                <MaterialCommunityIcons name='restart' size={15} color={'white'} />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Reopen Transaction`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={isModalVisible}\r\n                onClose={() => {\r\n                    handleModalClose()\r\n                }}\r\n\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.Header>Reopen Transaction</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to reopen the transaction?\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onPress={handleModalClose}\r\n                                onHoverIn={noHoverIn}\r\n                                onHoverOut={noHoverOut}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isNoHovered ? '#3F3F46' : '#52525B',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text color={'white'} style={{ fontWeight: 700, }}>No</Text>\r\n                            </Pressable>\r\n\r\n                            <View style={{ flex: 1 }} />\r\n\r\n                            <Pressable\r\n                                onPress={handleReopenTransaction}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onHoverIn={yesHoverIn}\r\n                                onHoverOut={yesHoverOut}\r\n                                disabled={isYesLoading}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isYesHovered ? '#0772ad' : '#0A8DD5',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {!isYesLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Yes</Text> : <Spinner size={'sm'} color={'white'} />}\r\n                            </Pressable>\r\n                        </View>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst CancelTransaction = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData)\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData)\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isYesHovered, setIsYesHovered] = useState(false);\r\n    const [isNoHovered, setIsNoHovered] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n\r\n    const yesHoverIn = () => setIsYesHovered(true);\r\n    const yesHoverOut = () => setIsYesHovered(false);\r\n\r\n    const noHoverIn = () => setIsNoHovered(true);\r\n    const noHoverOut = () => setIsNoHovered(false);\r\n\r\n    const handleModalOpen = () => {\r\n        setIsModalVisible(true);\r\n\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setIsModalVisible(false);\r\n\r\n    }\r\n\r\n\r\n    const sendEmail = async (to, subject, htmlContent) => {\r\n        try {\r\n            const response = await fetch('https://rmjsmtp.duckdns.org/emailServer/send-email', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    to,\r\n                    subject,\r\n                    htmlContent,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Email sent successfully');\r\n            } else {\r\n                console.error('Failed to send email');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error sending email:', error);\r\n        }\r\n    };\r\n\r\n    const htmlContent = `<html><head>\r\n    <title>Transaction Cancellation Notice</title>\r\n    <style>\r\n        body {\r\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n            background-color: #f4f4f4;\r\n            color: #333;\r\n            padding: 10px;\r\n            margin: 0;\r\n        }\r\n        .container {\r\n            background-color: #fff;\r\n            border-radius: 8px;\r\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n            margin: 20px auto;\r\n            max-width: 600px;\r\n            padding: 20px;\r\n        }\r\n        .highlight-red {\r\n            color: #FF0000; /* Red */\r\n            font-weight: bold;\r\n        }\r\n        .highlight-bold {\r\n            font-weight: bold;\r\n        }\r\n        p {\r\n            font-size: 16px;\r\n            line-height: 1.6;\r\n            margin: 10px 0 20px;\r\n        }\r\n        .signature {\r\n            font-weight: bold;\r\n            margin-top: 40px;\r\n            text-align: left;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <p><strong>Dear Valued Customer,</strong></p>\r\n\r\n        <p>I hope this message finds you well.</p>\r\n        \r\n        <p>I wanted to inform you that unfortunately, due to the non-receipt of payment for <span class=\"highlight-bold\">Invoice No. <span class=\"highlight-red\">${selectedChatData.invoiceNumber}</span></span> by the due date, </p>\r\n\r\n        <p>We had to proceed with the <span class=\"highlight-red\">cancellation of the transaction.</span></p>\r\n\r\n        <p>We understand that unforeseen circumstances can arise, and we're here to discuss any concerns or possible ways to support you moving forward.</p>\r\n\r\n        <p>Please reach out if you have any questions or require assistance.</p>\r\n\r\n        <p>Thank you for your understanding.</p>\r\n        \r\n        <p class=\"signature\">Best regards,<br>Real Motor Japan</p>\r\n    </div>\r\n\r\n</body></html>`;\r\n\r\n    const cancelTransactionMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `The transaction has been cancelled.`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `The transaction has been cancelled.`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const handleCancelTransaction = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeEmail = moment(datetime).format('MMMM D, YYYY');\r\n\r\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n        const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\r\n        const docRefVehicle = doc(projectExtensionFirestore, \"VehicleProducts\", selectedChatData.carData.stockID);\r\n\r\n        setIsYesLoading(true);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                'isCancelled': true, // Update the specific field\r\n                'orderPlaced': false\r\n            });\r\n            try {\r\n                await updateDoc(docRefChatId, {\r\n                    'isCancelled': true // Update the specific field\r\n                });\r\n\r\n                try {\r\n                    await updateDoc(docRefVehicle, {\r\n                        'stockStatus': 'On-Sale', // Update the specific field\r\n                        'reservedTo': ''\r\n                    });\r\n                } catch (error) {\r\n                    console.error(\"Error updating document: \", error);\r\n                }\r\n                await cancelTransactionMessage();\r\n\r\n                await sendEmail(selectedCustomerData.textEmail, `Transaction Cancelled | Real Motor Japan | Invoice No. ${selectedChatData.invoiceNumber}  (${formattedTimeEmail})`, htmlContent);\r\n\r\n                setIsYesLoading(false);\r\n                console.log(\"Document successfully updated\");\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n            console.log(\"Document successfully updated\");\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#AAAAAA' : '#CCCCCC',\r\n                }}\r\n            >\r\n                <MaterialIcons name='cancel' size={15} color={'#52525B'} />\r\n                <Text color={'#52525B'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Cancel Transaction`}</Text>\r\n            </Pressable>\r\n\r\n\r\n            <Modal\r\n                isOpen={isModalVisible}\r\n                onClose={() => {\r\n                    handleModalClose()\r\n                }}\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.Header>Cancel Transaction</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to cancel the transation?\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onPress={handleModalClose}\r\n                                onHoverIn={noHoverIn}\r\n                                onHoverOut={noHoverOut}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isNoHovered ? '#3F3F46' : '#52525B',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text color={'white'} style={{ fontWeight: 700, }}>No</Text>\r\n                            </Pressable>\r\n\r\n                            <View style={{ flex: 1 }} />\r\n\r\n                            <Pressable\r\n                                onPress={handleCancelTransaction}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onHoverIn={yesHoverIn}\r\n                                onHoverOut={yesHoverOut}\r\n                                disabled={isYesLoading}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isYesHovered ? '#800101' : '#FF0000',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {!isYesLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Yes</Text> : <Spinner size={'sm'} color={'white'} />}\r\n                            </Pressable>\r\n                        </View>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst ExtendDueDateButton = () => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [isConfirmHovered, setIsConfirmHovered] = useState(false);\r\n    const [isCancelHovered, setIsCancelHovered] = useState(false);\r\n    const [selectedDueDate, setSelectedDueDate] = useState('');\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    let invoiceSelectedDueDate = '';\r\n\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n\r\n    const confirmHoverIn = () => setIsConfirmHovered(true);\r\n    const confirmHoverOut = () => setIsConfirmHovered(false);\r\n\r\n    const cancelHoverIn = () => setIsCancelHovered(true);\r\n    const cancelHoverOut = () => setIsCancelHovered(false);\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleModalOpen = () => {\r\n        setModalVisible(true);\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n    }\r\n\r\n    const handleConfirm = async () => {\r\n\r\n        try {\r\n            await confirmExtendDueDate();\r\n            handleModalClose();\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const extendDueDateMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `The due date has been changed to ${selectedDueDate\r\n                    ? new Date(selectedDueDate).toLocaleDateString(undefined, {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric',\r\n                    })\r\n                    : 'Invalid Date'\r\n                    }`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `The due date has been changed to ${selectedDueDate\r\n                    ? new Date(selectedDueDate).toLocaleDateString(undefined, {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric',\r\n                    })\r\n                    : 'Invalid Date'\r\n                    }`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const confirmExtendDueDate = async () => {\r\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n        setIsConfirmLoading(true);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                'bankInformations.dueDate': selectedDueDate // Update the specific field\r\n            });\r\n            await extendDueDateMessage();\r\n            setIsConfirmLoading(false);\r\n            console.log(\"Document successfully updated\");\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n    };\r\n\r\n    const ModalCalendar = ({ selectedDate, setSelectedDate, currentDate }) => {\r\n\r\n        const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n        const handleModalCalendarOpen = () => {\r\n            setModalCalendarVisible(true);\r\n        };\r\n\r\n        const handleModalCalendarClose = () => {\r\n            setModalCalendarVisible(false);\r\n        };\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n                <Pressable style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onPress={handleModalCalendarOpen}>\r\n                    <Text style={{ flex: 1, }} >{selectedDate}</Text>\r\n                </Pressable>\r\n\r\n                <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Content>\r\n                        <View style={{ height: '100%', flex: 1 }}>\r\n                            <Calendar\r\n                                onDayPress={useCallback(day => {\r\n                                    setSelectedDate(day.dateString);\r\n                                    invoiceSelectedDueDate = day.dateString;\r\n                                    globalInvoiceVariable.bankInformations.dueDate = day.dateString;\r\n                                    handleModalCalendarClose();\r\n                                }, [])}\r\n                                markedDates={{\r\n                                    [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n                                }}\r\n                                renderArrow={(direction) => (\r\n                                    direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n                                )}\r\n                                enableSwipeMonths={true}\r\n                                initialDate={selectedDate}\r\n                                // minDate={currentDate}\r\n                                showSixWeeks />\r\n\r\n                        </View>\r\n\r\n                    </Modal.Content>\r\n\r\n                </Modal>\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (currentDate) {\r\n            const date = new Date(currentDate);\r\n\r\n            // Check the day of the week\r\n            const dayOfWeek = date.getDay();\r\n\r\n            if (dayOfWeek === 5) { // Friday\r\n                date.setDate(date.getDate() + 3); // Add 3 days to reach Monday\r\n            } else if (dayOfWeek === 6) { // Saturday\r\n                date.setDate(date.getDate() + 2); // Add 2 days to reach Monday\r\n            } else {\r\n                date.setDate(date.getDate() + 1); // Sunday to Thursday, add 1 day\r\n            }\r\n\r\n            // Format the date back to string\r\n            const adjustedDate = date.toISOString().split('T')[0];\r\n            setSelectedDueDate(adjustedDate);\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#a8720a' : '#D38F0D',\r\n                }}\r\n            >\r\n                <FontAwesome name='calendar-plus-o' size={15} color={'white'} />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Extend Due Date`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={modalVisible}\r\n                onClose={handleModalClose}\r\n                useRNModal\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.Header >Extend Due Date</Modal.Header>\r\n                    <View style={{ margin: 2, }}>\r\n                        <Text style={{ fontWeight: 700, marginLeft: 3, }}>Due Date:</Text>\r\n                        <ModalCalendar currentDate={currentDate} selectedDate={selectedDueDate} setSelectedDate={setSelectedDueDate} />\r\n                    </View>\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onPress={handleModalClose}\r\n                                onHoverIn={cancelHoverIn}\r\n                                onHoverOut={cancelHoverOut}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isCancelHovered ? '#3F3F46' : '#52525B',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text color={'white'} style={{ fontWeight: 700, }}>Cancel</Text>\r\n                            </Pressable>\r\n\r\n                            <View style={{ flex: 1 }} />\r\n\r\n                            <Pressable\r\n                                onPress={handleConfirm}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onHoverIn={confirmHoverIn}\r\n                                onHoverOut={confirmHoverOut}\r\n                                disabled={isConfirmLoading}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isConfirmHovered ? '#0f7534' : '#16A34A',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {!isConfirmLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Confirm</Text> : <Spinner size={'sm'} color={'white'} />}\r\n                            </Pressable>\r\n                        </View>\r\n\r\n\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nconst TransactionModal = () => {\r\n    const transactionModalVisible = useSelector((state) => state.transactionModalVisible);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleTransactionModalClose = () => {\r\n        dispatch(setTransactionModalVisible(false));\r\n    }\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={transactionModalVisible}\r\n            onClose={() => {\r\n                handleTransactionModalClose()\r\n            }}\r\n            size={'lg'}\r\n            useRNModal\r\n        >\r\n            {transactionModalVisible &&\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n\r\n                    <Modal.Header style={{ borderBottomWidth: 2, borderColor: '#0A9FDC', }} >{transactionModalTitle}</Modal.Header>\r\n\r\n                    {transactionModalContentValue == 1 || transactionModalContentValue == 2 &&\r\n                        <IssueProformaInvoiceModalContent />\r\n                    }\r\n\r\n                    {transactionModalContentValue == 3 &&\r\n                        <ConfirmPaymentModalContent />\r\n                    }\r\n                </Modal.Content>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst TransactionButton = ({ title, buttonValue, transactionValue, colorHoverIn, colorHoverOut }) => {\r\n\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleTransactionModalOpen = () => {\r\n        dispatch(setTransactionModalVisible(true));\r\n        transactionModalTitle = title;\r\n        transactionModalContentValue = transactionValue;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleTransactionModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? colorHoverIn : colorHoverOut,\r\n                }}\r\n            >\r\n                <FastImage\r\n                    source={{\r\n                        uri: require(`../../assets/chat_step/chat_step_${buttonValue}_on.png`),\r\n                        priority: FastImage.priority.normal\r\n                    }}\r\n                    style={{\r\n                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                        width: 15,\r\n                        height: 15,\r\n                        alignSelf: 'center',\r\n                    }}\r\n                    resizeMode={FastImage.resizeMode.stretch}\r\n                />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{title}</Text>\r\n            </Pressable>\r\n\r\n        </>\r\n\r\n    );\r\n};\r\n\r\n\r\nconst TransactionList = ({ displayedTransactions, handleChatPress, selectedCustomerData }) => {\r\n    // Assuming an environment that supports onMouseEnter and onMouseLeave\r\n    return (\r\n        Array.isArray(selectedCustomerData.transactions) && selectedCustomerData.transactions.length > 0 ? (\r\n            displayedTransactions.map((transaction, index) => {\r\n                const [isHovered, setIsHovered] = useState(false); // This won't work as expected due to scope\r\n\r\n                return (\r\n                    <Pressable\r\n                        key={index}\r\n                        onPress={() => handleChatPress(`chat_${transaction.stockId}_${selectedCustomerData.textEmail}`)}\r\n                        onMouseEnter={() => setIsHovered(true)} // These events are not native to React Native\r\n                        onMouseLeave={() => setIsHovered(false)}\r\n                        style={{\r\n                            marginBottom: 15,\r\n                            backgroundColor: isHovered ? '#F2F2F2' : '#FFFFFF', // Change color on hover\r\n                            borderRadius: 10,\r\n                            shadowColor: '#000',\r\n                            shadowOffset: { width: 0, height: 2 },\r\n                            shadowOpacity: 0.1,\r\n                            shadowRadius: 2,\r\n                            elevation: 3,\r\n                            padding: 5,\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: '#eee',\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <View>\r\n                            <FastImage\r\n                                source={{ uri: transaction.imageUrl, priority: FastImage.priority.normal }}\r\n                                style={{\r\n                                    width: 60,\r\n                                    height: 60,\r\n                                    borderRadius: 30,\r\n                                    alignSelf: 'center',\r\n                                    margin: 10,\r\n                                }}\r\n                                resizeMode={FastImage.resizeMode.stretch}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                <Text style={{ color: '#0A78BE' }} selectable={false}>\r\n                                    {transaction.carName}\r\n                                </Text>\r\n                            </Text>\r\n                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                <Text style={{ color: '#333' }} selectable={false}>{transaction.referenceNumber}</Text>\r\n                            </Text>\r\n                        </View>\r\n                    </Pressable>\r\n                );\r\n            })\r\n        ) : (\r\n            <Text style={{ fontWeight: 'bold', alignSelf: 'center' }} italic>No history to show</Text>\r\n        )\r\n    );\r\n};\r\n\r\nconst TransactionHistoryModal = () => {\r\n\r\n    const [transactionHistoryVisible, setTransactionHistoryVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const navigate = useNavigate();\r\n    const [displayedTransactions, setDisplayedTransactions] = useState(selectedCustomerData.transactions ? selectedCustomerData.transactions.slice(0, 5) : null);\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const hoverStyle = isHovered ? {\r\n        backgroundColor: '#E8EAF6', // Lighter background color on hover\r\n        // Any other style changes on hover\r\n    } : {};\r\n\r\n    const loadMorePayments = () => {\r\n        if (loadingMore) return; // Prevent multiple loads\r\n\r\n        setLoadingMore(true);\r\n        const nextItems = selectedCustomerData.transactions.slice(\r\n            displayedTransactions.length,\r\n            displayedTransactions.length + 5\r\n        );\r\n\r\n        setTimeout(() => { // Simulate network request\r\n            setDisplayedTransactions([...displayedTransactions, ...nextItems]);\r\n            setLoadingMore(false);\r\n        }, 500); // Adjust the timeout as needed\r\n    };\r\n\r\n    const handleTransactionHistoryModalOpen = () => {\r\n        setDisplayedTransactions(selectedCustomerData.transactions ? selectedCustomerData.transactions.slice(0, 5) : null);\r\n        setTransactionHistoryVisible(true);\r\n\r\n    };\r\n\r\n    const handleTransactionHistoryModalClose = () => {\r\n        setTransactionHistoryVisible(false);\r\n    };\r\n\r\n    const isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\r\n        return layoutMeasurement.height + contentOffset.y >= contentSize.height - 20;\r\n    };\r\n\r\n    const handleChatPress = (chatId) => {\r\n        const encryptedChatId = encryptData(chatId);\r\n        const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\r\n        // navigate(`/top/chat-messages/${encodedChatId}`);\r\n        const path = `/top/chat-messages/${encodedChatId}`;\r\n        // Construct the URL for hash-based routing\r\n        const baseUrl = window.location.origin + window.location.pathname;\r\n        const fullPath = `${baseUrl}#${path}`;\r\n        window.open(fullPath, '_blank');\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n\r\n            <Pressable onPress={handleTransactionHistoryModalOpen}>\r\n                <Text style={{ fontSize: screenWidth < mobileViewBreakpoint ? 10 : 14, color: '#0A78BE', textAlign: 'center', }} underline>\r\n                    {`View Transactions`}\r\n                </Text>\r\n            </Pressable>\r\n\r\n            <Modal isOpen={transactionHistoryVisible} onClose={handleTransactionHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ backgroundColor: 'white', textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Transactions History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView\r\n                            style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500 }}\r\n                            onScroll={({ nativeEvent }) => {\r\n                                if (isCloseToBottom(nativeEvent)) {\r\n                                    loadMorePayments();\r\n                                }\r\n                            }}\r\n                            scrollEventThrottle={400} // Adjust as needed\r\n                        >\r\n\r\n                            <TransactionList\r\n                                displayedTransactions={displayedTransactions}\r\n                                handleChatPress={handleChatPress}\r\n                                selectedCustomerData={selectedCustomerData}\r\n                            />\r\n\r\n                            <View style={{ height: 20, }}>\r\n                                {loadingMore && <Spinner size='sm' color=\"#7B9CFF\" />}\r\n                            </View>\r\n\r\n                        </ScrollView>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nconst PaymentHistoryModal = () => {\r\n\r\n    const [paymentHistoryVisible, setPaymentHistoryVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const sortedPayments = selectedCustomerData.paymentsHistory\r\n        ? [...selectedCustomerData.paymentsHistory].sort((a, b) => {\r\n            const dateA = new Date(a.date);\r\n            const dateB = new Date(b.date);\r\n            return dateB - dateA; // Sorts in descending order\r\n        })\r\n        : [];\r\n\r\n    const [displayedPayments, setDisplayedPayments] = useState(sortedPayments.slice(0, 5));\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n\r\n    const loadMorePayments = () => {\r\n        if (loadingMore) return; // Prevent multiple loads\r\n\r\n        setLoadingMore(true);\r\n        const nextItems = sortedPayments.slice(\r\n            displayedPayments.length,\r\n            displayedPayments.length + 5\r\n        );\r\n\r\n        setTimeout(() => { // Simulate network request\r\n            setDisplayedPayments([...displayedPayments, ...nextItems]);\r\n            setLoadingMore(false);\r\n        }, 500); // Adjust the timeout as needed\r\n    };\r\n\r\n    const handlePaymentHistoryModalOpen = () => {\r\n        setDisplayedPayments(sortedPayments.slice(0, 5));\r\n        setPaymentHistoryVisible(true);\r\n\r\n    };\r\n\r\n    const handlePaymentHistoryModalClose = () => {\r\n        setPaymentHistoryVisible(false);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function formatDate(dateString) {\r\n        // Remove ' at ' from the date string\r\n        const cleanedDateString = dateString.replace(' at ', ' ');\r\n        const date = new Date(cleanedDateString);\r\n\r\n        if (isNaN(date.getTime())) {\r\n            // Date is not valid\r\n            console.error(\"Invalid Date:\", dateString);\r\n            return \"Invalid Date\";\r\n        }\r\n\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        const year = date.getFullYear();\r\n        const month = months[date.getMonth()];\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n\r\n        let hours = date.getHours();\r\n        const minutes = date.getMinutes().toString().padStart(2, '0');\r\n        const ampm = hours >= 12 ? 'pm' : 'am';\r\n\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n\r\n        return `${year} ${month} ${day} at ${hours}:${minutes}${ampm}`;\r\n    }\r\n\r\n    const isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\r\n        return layoutMeasurement.height + contentOffset.y >= contentSize.height - 20;\r\n    };\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable onPress={handlePaymentHistoryModalOpen}>\r\n                <Text style={{ fontSize: screenWidth < mobileViewBreakpoint ? 10 : 14, color: '#0A78BE', textAlign: 'center', }} underline>\r\n                    {`View Payments History`}\r\n                </Text>\r\n            </Pressable>\r\n\r\n            <Modal isOpen={paymentHistoryVisible} onClose={handlePaymentHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ backgroundColor: 'white', textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Payment History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView\r\n                            style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500 }}\r\n                            onScroll={({ nativeEvent }) => {\r\n                                if (isCloseToBottom(nativeEvent)) {\r\n                                    loadMorePayments();\r\n                                }\r\n                            }}\r\n                            scrollEventThrottle={400} // Adjust as needed\r\n                        >\r\n                            {\r\n                                Array.isArray(sortedPayments) && sortedPayments.length > 0 ?\r\n                                    displayedPayments.map((payment, index) => (\r\n                                        <View key={index} style={{\r\n                                            marginBottom: 15,\r\n                                            backgroundColor: '#F8F9FF', // Card background color\r\n                                            borderRadius: 10, // Rounded corners for the card\r\n                                            shadowColor: '#000', // Shadow color\r\n                                            shadowOffset: { width: 0, height: 2 },\r\n                                            shadowOpacity: 0.1,\r\n                                            shadowRadius: 2,\r\n                                            elevation: 3, // Elevation for Android\r\n                                            padding: 15, // Padding inside the card\r\n                                            borderBottomWidth: 1,\r\n                                            borderBottomColor: '#eee',\r\n                                        }}>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Date: </Text>\r\n                                                <Text style={{ color: '#333' }}>\r\n                                                    {formatDate(sortedPayments[sortedPayments.length - 1 - index].date)}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Value: </Text>\r\n                                                <Text style={{ color: Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString().startsWith('-') ? '#FF0000' : '#16A34A' }}>\r\n                                                    ${Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString()}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Vehicle Name: </Text>\r\n                                                <Text style={{ color: '#333' }}>{sortedPayments[sortedPayments.length - 1 - index].vehicleName}</Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Reference Number: </Text>\r\n                                                <Text style={{ color: '#333' }}>{sortedPayments[sortedPayments.length - 1 - index].vehicleRef}</Text>\r\n                                            </Text>\r\n\r\n                                        </View>\r\n\r\n                                    )) :\r\n                                    <Text style={{ fontWeight: 'bold', alignSelf: 'center', }} italic>No history to show</Text>\r\n                            }\r\n                            <View style={{ height: 20, }}>\r\n                                {loadingMore && <Spinner size='sm' color=\"#7B9CFF\" />}\r\n                            </View>\r\n\r\n                        </ScrollView>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst CustomerProfileModal = () => {\r\n    const [customerModalVisible, setCustomerModalVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n    const handleModalOpen = () => {\r\n        setCustomerModalVisible(true);\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setCustomerModalVisible(false);\r\n    }\r\n\r\n    const totalPaymentValue = selectedCustomerData.paymentsHistory\r\n        ? selectedCustomerData.paymentsHistory.reduce((sum, payment) => {\r\n            const value = Number(payment.value);\r\n            return sum + (isNaN(value) ? 0 : value);\r\n        }, 0)\r\n        : 0;\r\n\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                onPress={handleModalOpen}\r\n                style={{ width: 'fit-content', }}\r\n            >\r\n                <Text style={{ fontWeight: 700, }} underline>{`${globalCustomerFirstName} ${globalCustomerLastName}`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={customerModalVisible}\r\n                onClose={handleModalClose}\r\n                size={'lg'}\r\n\r\n            >\r\n                <Modal.Content background={'white'}>\r\n\r\n                    <Modal.Body>\r\n\r\n                        <View\r\n                            style={{\r\n                                flex: 1,\r\n                                alignItems: 'center',\r\n                            }}>\r\n\r\n                            <View style={{\r\n                                borderRadius: 10,\r\n                                backgroundColor: '#F8F9FF',\r\n                                width: screenWidth < mobileViewBreakpoint ? '100%' : '90%',\r\n                                alignItems: 'center',\r\n                                paddingBottom: 15,\r\n\r\n                            }}>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 24 : 26, color: '#0A78BE', }} selectable>\r\n                                    {`${globalCustomerFirstName} ${globalCustomerLastName}`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontSize: screenWidth < mobileViewBreakpoint ? 12 : 14, color: '#6F6F6F', width: '45%', textAlign: 'center', }} selectable>\r\n                                    {`${selectedCustomerData.textZip}, ${selectedCustomerData.textStreet}, ${selectedCustomerData.city}, ${selectedCustomerData.country}`}\r\n                                </Text>\r\n\r\n                                <View\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'row',\r\n                                        paddingTop: 20,\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center',\r\n                                    }}\r\n                                >\r\n\r\n                                    <Text style={{ fontSize: screenWidth < mobileViewBreakpoint ? 12 : 14, color: '#6F6F6F', textAlign: 'center', paddingTop: 2, }} selectable>\r\n                                        {`${selectedCustomerData.textPhoneNumber}`}\r\n                                    </Text>\r\n\r\n                                    {/* Separator */}\r\n\r\n                                    <View style={{\r\n                                        height: '100%', // Full height of the parent View\r\n                                        width: 2, // Width of the line\r\n                                        backgroundColor: '#DCDCDC', // Line color\r\n                                        marginHorizontal: 10, // Space on the sides of the line\r\n                                    }} />\r\n\r\n                                    <Hyperlink\r\n                                        linkDefault={true}\r\n                                        linkStyle={{ color: '#8A64F6', fontSize: screenWidth < mobileViewBreakpoint ? 12 : 14 }}\r\n\r\n                                    >\r\n                                        <Text style={{ textAlign: 'center' }} selectable>\r\n                                            {selectedCustomerData.textEmail}\r\n                                        </Text>\r\n                                    </Hyperlink>\r\n\r\n                                </View>\r\n\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                        <View\r\n                            style={{\r\n                                width: screenWidth < mobileViewBreakpoint ? '100%' : '90%',\r\n                                justifyContent: 'center',\r\n                                marginTop: 50,\r\n                                flexDirection: 'row',\r\n                                alignSelf: 'center',\r\n                            }}>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 20 : 24, color: '#009922', textAlign: 'center', }} selectable>\r\n                                    {`$${(totalPaymentValue).toLocaleString('en-US')}`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 12 : 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Total Payment`}\r\n                                </Text>\r\n\r\n                                <PaymentHistoryModal />\r\n\r\n\r\n                            </View>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 20 : 24, color: '#990000', textAlign: 'center', }} selectable>\r\n                                    {`$${selectedCustomerData.overBalance ? Number(selectedCustomerData.overBalance).toLocaleString('en-US') : 0}`}\r\n                                </Text>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 12 : 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Overbalance`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontSize: 14, color: 'transparent', textAlign: 'center', }} underline selectable={false}>\r\n                                    {`-----`}\r\n                                </Text>\r\n\r\n\r\n                            </View>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 20 : 24, color: '#0029A3', textAlign: 'center', }} selectable>\r\n                                    {`${selectedCustomerData.transactions ? (selectedCustomerData.transactions).length : 0}`}\r\n                                </Text>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 12 : 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Transactions`}\r\n                                </Text>\r\n\r\n                                <TransactionHistoryModal />\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                    </Modal.Body>\r\n\r\n\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst ChatMessageHeader = () => {\r\n\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const selectedVehicleData = useSelector((state) => state.selectedVehicleData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const carImageUrl = useSelector((state) => state.carImageUrl);\r\n    const dispatch = useDispatch();\r\n    const [reRenderKey, setReRenderKey] = useState(0);\r\n    const totalPriceCondition = selectedChatData.fobPrice && selectedChatData.jpyToUsd && selectedChatData.m3 && selectedChatData.freightPrice;\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\r\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice));\r\n\r\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0))) + freightCalculation;\r\n\r\n    const fobPriceDollars = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0)));\r\n\r\n    const carName = selectedChatData.carData && selectedChatData.carData.carName ? selectedChatData.carData.carName : (selectedChatData.vehicle && selectedChatData.vehicle.carName ? selectedChatData.vehicle.carName : '');\r\n\r\n    const freightPriceYen = freightCalculation / selectedChatData.currency.jpyToUsd;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setReRenderKey(reRenderKey + 1)\r\n        dispatch(setChatMessageBoxLoading(false));\r\n\r\n    }, [activeChatId]);\r\n\r\n\r\n\r\n    return (\r\n\r\n        <View style={{\r\n            flex: 1,\r\n            alignSelf: 'flex-start',\r\n            flexDirection: 'row',\r\n        }}>\r\n\r\n\r\n            {carImageUrl ? (\r\n                <FastImage\r\n                    source={{ uri: carImageUrl, priority: FastImage.priority.normal }}\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        alignSelf: 'center',\r\n                        margin: 10,\r\n                    }}\r\n                    resizeMode={FastImage.resizeMode.stretch}\r\n                />\r\n            ) : (\r\n                <View\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        alignSelf: 'center',\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginRight: 10,\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            <View style={{ alignSelf: 'center', paddingRight: 10, }}>\r\n                <Text style={{ fontWeight: 700, color: '#0A78BE', }}>{carName}</Text>\r\n\r\n                <CustomerProfileModal />\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 1, color: '#8D7777', }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.referenceNumber ? selectedChatData.carData.referenceNumber : 'Chassis N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                {/* <Text style={{ fontWeight: 700, color: \"#16A34A\", }}>{`$${selectedChatData.offerPrice ? selectedChatData.offerPrice : 0}`}</Text> */}\r\n                <TimelineStatus data={statusData} />\r\n\r\n            </View>\r\n\r\n            {/* <HorizontalTimeline /> */}\r\n\r\n            <View style={{ alignSelf: 'center', justifyContent: 'center', paddingLeft: 10, }}>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.chassisNumber ? selectedChatData.carData.chassisNumber : 'Chassis N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.modelCode ? selectedChatData.carData.modelCode : 'Model Code N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.mileage\r\n                            ? Number(selectedChatData.carData.mileage).toLocaleString('en-US')\r\n                            : 'Mileage N/A'} km\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.fuel ? selectedChatData.carData.fuel : 'Fuel N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.transmission ? selectedChatData.carData.transmission : 'Transmission N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ alignSelf: 'center', justifyContent: 'center', paddingLeft: 15, }}>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontSize: 18, }} bold>Total Price: </Text>\r\n                    <Text selectable style={{ fontSize: 18, color: \"#16A34A\", textAlign: 'right', }} bold>\r\n                        {`$${Number(totalPriceCalculation).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2, }}>\r\n                        ({`¥${Number(\r\n                            totalPriceCalculation /\r\n                            ((selectedChatData && selectedChatData.jpyToUsd) ? Number(selectedChatData.jpyToUsd) :\r\n                                (selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd) ? selectedChatData.currency.jpyToUsd :\r\n                                    0)\r\n                        ).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, }}>FOB Price: </Text>\r\n                    <Text selectable style={{ fontWeight: 700, color: \"#8D7777\", textAlign: 'right', }}>\r\n                        {`${Number(fobPriceDollars).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 2, marginLeft: 2, }}>\r\n                        ({`${(selectedChatData.fobPrice ? selectedChatData.fobPrice : Number(selectedChatData.carData && selectedChatData.carData.fobPrice ? selectedChatData.carData.fobPrice : 0)).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, }}>Freight Price: </Text>\r\n                    <Text selectable style={{ fontWeight: 700, color: \"#8D7777\", textAlign: 'right', }}>\r\n                        {`${Number(freightCalculation).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 2, marginLeft: 2, }}>\r\n                        ({`${(selectedChatData.freightPrice ? freightPriceYen : Number(selectedChatData.carData && selectedChatData.carData.freightPrice ? freightPriceYen : 0)).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, textAlign: 'right', }}>\r\n                        {`${selectedChatData.country && selectedChatData.port ? `${selectedChatData.country} / ${selectedChatData.port}` : 'N/A'}`}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, color: \"#16A34A\", }}>{selectedChatData.insurance ? 'CIF' : 'C&F'}\r\n                        {selectedChatData.inspection ? ` + Inpection[${selectedChatData.inspectionName}]` : ''}</Text>\r\n                </View>\r\n            </View>\r\n\r\n            {(chatMessagesData.length > 0 && selectedVehicleData.stockStatus == 'Reserved' &&\r\n                selectedVehicleData.reservedTo !== selectedCustomerData.textEmail) ?\r\n                null :\r\n                (<View style={{ paddingLeft: 10, paddingRight: 10, paddingTop: 2, }}>\r\n                    {(selectedChatData.stepIndicator.value == 1 || selectedChatData.stepIndicator.value == 2) &&\r\n                        <>\r\n                            <ProfitCalculator />\r\n\r\n                            <TransactionButton\r\n                                key={'Issue Proforma Invoice'}\r\n                                title={selectedChatData.stepIndicator.value == 1 ? 'Issue Proforma Invoice' : selectedChatData.stepIndicator.value == 2 ? 'Update Invoice' : ''}\r\n                                colorHoverIn={'#0f7534'}\r\n                                colorHoverOut={'#16A34A'}\r\n                                transactionValue={2}\r\n                                buttonValue={2}\r\n                                iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />\r\n\r\n                            <PreviewInvoice />\r\n\r\n                            <View style={{ flexDirection: 'row' }}>\r\n                                <Text style={{ fontWeight: 700, fontSize: 18 }}>Final Price: </Text>\r\n                                <Text selectable style={{ fontWeight: 700, fontSize: 18, color: \"#FF0000\", textAlign: 'right' }}>\r\n                                    {`$${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2 }}>\r\n                                    ({`¥${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount && selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd ? (Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) / Number(selectedChatData.currency.jpyToUsd)) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                                </Text>\r\n                            </View>\r\n                        </>\r\n                    }\r\n\r\n                    {(selectedChatData.stepIndicator.value == 3) &&\r\n\r\n\r\n                        (\r\n                            <View style={{ flexDirection: 'row', paddingRight: 10, paddingTop: 2, }}>\r\n                                {\r\n                                    selectedChatData.isCancelled == true && (\r\n                                        <View style={{ flexDirection: 'row', paddingRight: 10, }}>\r\n                                            <View style={{ paddingLeft: 10, }}>\r\n                                                <ReopenTransaction />\r\n                                            </View>\r\n                                        </View>\r\n                                    )\r\n                                }\r\n                                <View style={{ paddingLeft: 10, }}>\r\n                                    {!selectedChatData.isCancelled && <ProfitCalculator />}\r\n\r\n                                    {!selectedChatData.isCancelled && <TransactionButton\r\n                                        key={'Input Payment'}\r\n                                        title={'Input Payment'}\r\n                                        colorHoverOut={'#FF0000'}\r\n                                        colorHoverIn={'#800101'}\r\n                                        transactionValue={3}\r\n                                        buttonValue={4}\r\n                                        iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />}\r\n\r\n                                    <PreviewInvoice />\r\n\r\n                                    {!selectedChatData.isCancelled && <View style={{ flexDirection: 'row' }}>\r\n                                        <Text style={{ fontWeight: 700, fontSize: 18 }}>Final Price: </Text>\r\n                                        <Text selectable style={{ fontWeight: 700, fontSize: 18, color: \"#FF0000\", textAlign: 'right' }}>\r\n                                            {`$${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                        </Text>\r\n                                        <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2 }}>\r\n                                            ({`¥${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount && selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd ? (Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) / Number(selectedChatData.currency.jpyToUsd)) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                                        </Text>\r\n                                    </View>}\r\n                                </View>\r\n\r\n                                <View style={{ paddingLeft: 10, }}>\r\n\r\n                                    {!selectedChatData.isCancelled && <TransactionButton\r\n                                        key={'Issue Proforma Invoice'}\r\n                                        title={selectedChatData.stepIndicator.value == 1 ? 'Issue Proforma Invoice' : 'Update Invoice'}\r\n                                        colorHoverIn={'#0f7534'}\r\n                                        colorHoverOut={'#16A34A'}\r\n                                        transactionValue={2}\r\n                                        buttonValue={2}\r\n                                        iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />}\r\n\r\n                                    {!selectedChatData.isCancelled && <ExtendDueDateButton />}\r\n\r\n                                    {!selectedChatData.isCancelled && <CancelTransaction />}\r\n\r\n                                    {!selectedChatData.isCancelled && <View style={{ flexDirection: 'row', }}>\r\n                                        {invoiceData && invoiceData.bankInformations && invoiceData.bankInformations.dueDate &&\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14, }}>Due Date: </Text>\r\n                                                <Text selectable style={{ fontWeight: 700, fontSize: 14, textAlign: 'right', color: '#FF0000', }}>\r\n                                                    {\r\n                                                        invoiceData.bankInformations.dueDate\r\n                                                            ? new Date(invoiceData.bankInformations.dueDate).toLocaleDateString(undefined, {\r\n                                                                year: 'numeric',\r\n                                                                month: 'long',\r\n                                                                day: 'numeric',\r\n                                                            })\r\n                                                            : 'Invalid Date'\r\n                                                    }\r\n                                                </Text>\r\n                                            </>}\r\n                                    </View>}\r\n\r\n                                </View>\r\n                            </View>)\r\n                    }\r\n                </View>)\r\n\r\n            }\r\n\r\n            <GenerateCustomInvoice />\r\n\r\n            <TransactionModal />\r\n        </View>\r\n\r\n    );\r\n};\r\n\r\n\r\nconst ReadByListModal = ({ userEmail, handleReadByListModalClose }) => {\r\n\r\n    const readByListModalVisible = useSelector((state) => state.readByListModalVisible)\r\n    const selectedChatData = useSelector((state) => state.selectedChatData)\r\n    // const [email, setEmail] = useState(projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '');\r\n\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={readByListModalVisible}\r\n            onClose={() => handleReadByListModalClose()}\r\n            useRNModal\r\n            size={'xs'}\r\n        >\r\n            <Modal.Content borderRadius={0} style={{ padding: 15, backgroundColor: '#f8f8f8', shadowColor: '#000', shadowOffset: { width: 0, height: 2 }, shadowOpacity: 0.25, shadowRadius: 3.84, elevation: 5 }}>\r\n                <Modal.CloseButton />\r\n\r\n                <Modal.Header style={{ fontSize: 22, fontWeight: '600', textAlign: 'center', color: '#333', }}>Read List</Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    {\r\n                        selectedChatData.readBy.length > 0 ? (\r\n                            <ScrollView style={{ maxHeight: 250, borderRadius: 10 }}>\r\n                                {/* Sort and map over the readBy list */}\r\n                                {\r\n                                    [...selectedChatData.readBy]\r\n                                        .sort((a, b) => a === email ? -1 : b === email ? 1 : 0)\r\n                                        .map(item => (\r\n                                            <View key={item} style={{ flex: 1, flexDirection: 'row', alignItems: 'center', marginVertical: 8, borderBottomWidth: 0.5, borderColor: '#ddd', paddingBottom: 8 }}>\r\n                                                {item === 'RMJ-Bot' ?\r\n                                                    <FontAwesome5 name=\"robot\" size={24} color=\"#4A90E2\" style={{ marginRight: 12 }} /> :\r\n                                                    <FontAwesome name=\"user-circle\" size={24} color=\"#4A90E2\" style={{ marginRight: 12 }} />}\r\n                                                <View style={{ flex: 1 }}> {/* Ensure text has its own block and can wrap */}\r\n                                                    <Text style={{ color: '#555', flexWrap: 'wrap' }}>{email === item ? 'You' : item}</Text>\r\n                                                </View>\r\n                                            </View>\r\n                                        ))\r\n                                }\r\n                            </ScrollView>\r\n                        ) : (\r\n                            <Text style={{ textAlign: 'center', color: 'grey', fontSize: 16 }}>No one has read this message yet.</Text>\r\n                        )\r\n                    }\r\n                </Modal.Body>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n}\r\n\r\nconst ImagePreviewModal = ({ isVisible, onClose, imageUrl }) => {\r\n    return (\r\n        <Modal isOpen={isVisible} onClose={onClose} size=\"full\" useRNModal>\r\n            <Modal.Content\r\n                style={{\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                    width: '80%',\r\n                    height: '80%',\r\n                    alignSelf: 'center',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                <Modal.CloseButton />\r\n                <FastImage\r\n                    source={{ uri: imageUrl, priority: FastImage.priority.normal }}\r\n                    style={{ width: '100%', height: '100%', borderRadius: 10 }}\r\n                    resizeMode={FastImage.resizeMode.contain}\r\n                />\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n\r\nconst HoverablePressable = ({ url, printComponent }) => {\r\n    const [isHoveredDownload, setIsHoveredDownload] = useState(false);\r\n    const [isHoveredPrint, setIsHoveredPrint] = useState(false);\r\n    const baseStyle = {\r\n        marginRight: 10,\r\n        borderRadius: 16,\r\n        borderWidth: 1,\r\n        borderColor: 'white',\r\n        width: 26,\r\n        height: 26,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    };\r\n\r\n    const hoverStyle = {\r\n        backgroundColor: '#ddd', // Example hover style\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip label=\"Download\" openDelay={200} bgColor={'white'} _text={{ color: '#1C2B33', }}>\r\n                <Pressable\r\n                    style={{\r\n                        marginRight: 8,\r\n                        borderRadius: 16,\r\n                        width: 32,\r\n                        height: 32,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        backgroundColor: isHoveredDownload ? '#424649' : 'transparent',\r\n                    }}\r\n                    onPress={async () => {\r\n                        await Linking.openURL(url);\r\n                    }}\r\n                    onMouseEnter={() => setIsHoveredDownload(true)}\r\n                    onMouseLeave={() => setIsHoveredDownload(false)}\r\n                >\r\n                    <MaterialCommunityIcons name=\"download\" size={20} color={'#F1F1F1'} />\r\n                </Pressable>\r\n            </Tooltip>\r\n\r\n            {/* <Tooltip label=\"Print\" openDelay={200} bgColor={'white'} _text={{ color: '#1C2B33', }}>\r\n                <Pressable\r\n                    style={{\r\n                        marginRight: 8,\r\n                        borderRadius: 16,\r\n                        width: 32,\r\n                        height: 32,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        backgroundColor: isHoveredPrint ? '#424649' : 'transparent',\r\n                    }}\r\n                    onMouseEnter={() => setIsHoveredPrint(true)}\r\n                    onMouseLeave={() => setIsHoveredPrint(false)}\r\n                    onPress={printComponent}\r\n                >\r\n                    <MaterialCommunityIcons name=\"printer\" size={20} color={'#F1F1F1'} />\r\n                </Pressable>\r\n            </Tooltip> */}\r\n        </>\r\n    );\r\n};\r\n\r\nconst DocumentPreviewModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const selectedFileUrl = useSelector((state) => state.selectedFileUrl);\r\n    const pdfViewerModalVisible = useSelector((state) => state.pdfViewerModalVisible);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const [iframeKey, setIframeKey] = useState(0);\r\n\r\n\r\n    const url = 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/ChatFiles%2Fchat_2023090239_marcvan14%40gmail.com%2FC-HUB_01312024153002.887%2FDAILY%20REPORT%202024-01-29.pdf?alt=media&token=88b7be9b-17ef-48d3-b5b3-6f7f0d317b7c'\r\n    const urlDocx = 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/ChatFiles%2Fchat_2023090239_marcvan14%40gmail.com%2FC-HUB_01312024170117.701%2FDAILY%20REPORT%202024-01-29.docx?alt=media&token=9bf45632-e192-45bf-8b40-9fd5cdb9368e';\r\n    const [isLoading, setLoading] = useState(true); // Loading state\r\n\r\n    // console.log(`https://docs.google.com/viewer?url=${encodeURIComponent(urlDocx)}&embedded=true`);\r\n\r\n\r\n    const handleIframeLoad = () => {\r\n        setLoading(false); // Set loading to false when iframe content is loaded\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n\r\n        dispatch(setPdfViewerModalVisible(false))\r\n        dispatch(setSelectedFileUrl(''))\r\n        setLoading(true);\r\n        globalSelectedFileType = '';\r\n        globalSelectedPDFUrl = '';\r\n    }\r\n\r\n    const printIframe = () => {\r\n        // const iframe = document.getElementById('documentIframe');\r\n        // iframe.contentWindow.print();\r\n        const printWindow = window.open(`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`, '_blank');\r\n        printWindow.focus();\r\n        printWindow.print();\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const timeout = setTimeout(() => {\r\n\r\n            if (isLoading) {\r\n                console.log(\"Iframe is taking too long to load. Attempting to reload.\");\r\n                console.log(\"Current URL:\", selectedFileUrl);\r\n                console.log(\"Current Global URL:\", globalSelectedPDFUrl);\r\n\r\n                setIsLoading(false);\r\n                setIframeKey(prevKey => prevKey + 1);\r\n                dispatch(setSelectedFileUrl(globalSelectedPDFUrl));\r\n\r\n            }\r\n\r\n        }, 5000); // Timeout set to 5 seconds\r\n\r\n        return () => clearTimeout(timeout);\r\n\r\n    }, [isLoading,]);\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={pdfViewerModalVisible}\r\n            onClose={() => {\r\n                handleModalClose();\r\n            }\r\n            } size=\"xl\">\r\n            <Modal.Content>\r\n                {globalSelectedFileType !== 'pdf' ?\r\n\r\n                    (<>\r\n                        {isLoading && (\r\n                            <View style={{\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                left: 0,\r\n                                right: 0,\r\n                                position: 'absolute',\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                height: '700px'  // Same height as the iframe for consistent layout\r\n                            }}>\r\n                                <Spinner\r\n                                    animating\r\n                                    size=\"lg\"\r\n                                    color={'#7B9CFF'}\r\n                                />\r\n                            </View>\r\n                        )}\r\n                        {selectedFileUrl !== '' &&\r\n                            <>\r\n                                {!isLoading &&\r\n                                    <View style={{ flexDirection: 'row', width: '100%', height: 57, borderRadius: 0, backgroundColor: '#323639', justifyContent: 'flex-end', alignItems: 'center', }}>\r\n                                        <HoverablePressable url={globalSelectedPDFUrl} printComponent={printIframe} />\r\n                                    </View>\r\n                                }\r\n\r\n                                <iframe\r\n                                    key={iframeKey}\r\n                                    src={`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`}\r\n                                    id='documentIframe'\r\n                                    style={{ width: '100%', height: '700px' }}\r\n                                    title=\"Document Viewer\"\r\n                                    onLoad={() => {\r\n                                        handleIframeLoad();\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </>\r\n                    )\r\n\r\n                    : (\r\n                        <>\r\n                            {isLoading && (\r\n                                <View style={{\r\n                                    top: 0,\r\n                                    bottom: 0,\r\n                                    left: 0,\r\n                                    right: 0,\r\n                                    position: 'absolute',\r\n                                    justifyContent: 'center',\r\n                                    alignItems: 'center',\r\n                                    height: '700px'  // Same height as the iframe for consistent layout\r\n                                }}>\r\n                                    <Spinner\r\n                                        animating\r\n                                        size=\"lg\"\r\n                                        color={'#7B9CFF'}\r\n                                    />\r\n                                </View>\r\n                            )}\r\n                            {selectedFileUrl !== '' &&\r\n                                (\r\n                                    screenWidth < mobileViewBreakpoint ?\r\n                                        (<>\r\n                                            {!isLoading &&\r\n                                                <View style={{ flexDirection: 'row', width: '100%', height: 57, borderRadius: 0, backgroundColor: '#323639', justifyContent: 'flex-end', alignItems: 'center', }}>\r\n\r\n                                                    <HoverablePressable url={globalSelectedPDFUrl} printComponent={printIframe} />\r\n                                                </View>\r\n                                            }\r\n\r\n                                            <iframe\r\n                                                key={iframeKey}\r\n                                                src={`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`}\r\n                                                id='mobilePdfIframe'\r\n                                                style={{ width: '100%', height: '700px' }}\r\n                                                title=\"PDF Viewer\"\r\n                                                onLoad={handleIframeLoad}\r\n                                            />\r\n                                        </>) :\r\n                                        (<iframe\r\n                                            src={selectedFileUrl}\r\n                                            style={{ width: '100%', height: '700px' }}\r\n                                            title=\"PDF Viewer\"\r\n                                            onLoad={handleIframeLoad} // Event when iframe has loaded\r\n                                        />)\r\n                                )\r\n                            }\r\n                        </>\r\n                    )\r\n\r\n\r\n                }\r\n\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n\r\n};\r\n\r\nconst ChatMessageBox = ({ activeButtonValue, userEmail }) => {\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const loadMoreMessagesLoading = useSelector((state) => state.loadMoreMessagesLoading);\r\n    const noMoreMessagesData = useSelector((state) => state.noMoreMessagesData);\r\n    const [isEyeHovered, setIsEyeHovered] = useState(false);\r\n    const flatListRef = useRef();\r\n    const [hoveredImageIndex, setHoveredImageIndex] = useState(null);\r\n\r\n    const [selectedImageIndex, setSelectedImageIndex] = useState(null);\r\n    const [isPreviewVisible, setIsPreviewVisible] = useState(false);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const screenHeight = Dimensions.get('window').height;\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        // Store the current path\r\n        const handlePopState = () => {\r\n            if (screenWidth < mobileViewBreakpoint && activeChatId !== '') {\r\n                dispatch(setMessageTextInputValue(''));\r\n                dispatch(setChatMessagesData([]));\r\n                dispatch(setActiveChatId(''));\r\n                navigate('/top/chat-messages');\r\n            }\r\n        };\r\n\r\n        // Add event listener when component mounts or when dependencies change\r\n        window.addEventListener('popstate', handlePopState);\r\n\r\n        // Cleanup function to remove event listener when component unmounts or dependencies change\r\n        return () => {\r\n            window.removeEventListener('popstate', handlePopState);\r\n        };\r\n\r\n    }, []);\r\n\r\n    const openPreview = (index) => {\r\n        setSelectedImageIndex(index);\r\n        setIsPreviewVisible(true);\r\n    };\r\n\r\n    const closePreview = () => {\r\n        setIsPreviewVisible(false);\r\n        setSelectedImageIndex(null);\r\n    };\r\n\r\n    const handleImageMessageMouseEnter = (index) => {\r\n        setHoveredImageIndex(index);\r\n    };\r\n\r\n    const handleImageMessageMouseLeave = () => {\r\n        setHoveredImageIndex(null);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [read, setRead] = useState(selectedChatData.read);\r\n\r\n    const handleReadByListModalOpen = () => {\r\n        dispatch(setReadByListModalVisible(true));\r\n    };\r\n\r\n    const handleReadByListModalClose = () => {\r\n        dispatch(setReadByListModalVisible(false));\r\n    };\r\n\r\n    const animatedValue = useRef(new Animated.Value(0)).current;\r\n\r\n    useEffect(() => {\r\n        Animated.loop(\r\n            Animated.sequence([\r\n                Animated.timing(animatedValue, {\r\n                    toValue: 1,\r\n                    duration: 2000,\r\n                    useNativeDriver: true\r\n                }),\r\n                Animated.timing(animatedValue, {\r\n                    toValue: 0,\r\n                    duration: 2000,\r\n                    useNativeDriver: true\r\n                })\r\n            ])\r\n        ).start();\r\n    }, [selectedChatData, chatMessagesData, animatedValue]);\r\n\r\n    const borderColor = animatedValue.interpolate({\r\n        inputRange: [0, 0.25, 0.5, 0.75, 1],\r\n        outputRange: [\r\n            'rgb(255, 100, 100)', // Red\r\n            'rgb(100, 255, 100)', // Green\r\n            'rgb(100, 100, 255)', // Blue\r\n            'rgb(255, 255, 100)', // Yellow\r\n            'rgb(255, 100, 255)'  // Magenta\r\n        ]\r\n    });\r\n\r\n    const renderFooter = () => {\r\n        return (\r\n            <>\r\n                {!noMoreMessagesData && (\r\n                    <View style={{ paddingVertical: 20, height: 60, }}>\r\n                        {loadMoreMessagesLoading && (\r\n                            <Spinner\r\n                                animating\r\n                                size=\"sm\"\r\n                                color={'#7B9CFF'}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </>\r\n\r\n        );\r\n    };\r\n\r\n    const handleLoadMoreMessages = async () => {\r\n        dispatch(setLoadMoreMessagesLoading(true));\r\n        dispatch(setNoMoreMessagesData(false));\r\n\r\n        let nextQuery;\r\n        if (!globalMessagesLastVisible) {\r\n            // No more data to load or globalLastVisible is undefined\r\n            dispatch(setLoadMoreMessagesLoading(false));\r\n            dispatch(setNoMoreMessagesData(true));\r\n        }\r\n\r\n        else {\r\n            dispatch(setLoadMoreMessagesLoading(true));\r\n            dispatch(setNoMoreMessagesData(false));\r\n\r\n            nextQuery = query(\r\n                collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(globalMessagesLastVisible),\r\n                limit(10)\r\n            );\r\n            try {\r\n                const unsubscribe = onSnapshot(nextQuery, (snapshot) => {\r\n                    if (snapshot.empty) {\r\n                        // Handle the case when there's no more data\r\n                        console.log(\"No more data to load\");\r\n                        setTimeout(() => {\r\n                            dispatch(setLoadMoreMessagesLoading(false));\r\n                            dispatch(setNoMoreMessagesData(true));\r\n                            globalMessagesLastVisible = null;\r\n                        }, 0);  // Delay setting loading and no more data flags\r\n                        return;\r\n                    }\r\n\r\n                    const chatsData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        chatsData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n\r\n                    // Append new data to the existing list\r\n\r\n                    setTimeout(() => {\r\n                        dispatch(setChatMessagesData([...chatMessagesData, ...chatsData]));\r\n                        dispatch(setLoadMoreMessagesLoading(false));\r\n                        globalMessagesLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n                    }, 0);\r\n\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data from Firebase:', error);\r\n                setTimeout(() => dispatch(setLoadMoreMessagesLoading(false)), 0);  // Ensure loading is set to false even if there's an error\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const updateChatToRead = async () => {\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", activeChatId);\r\n        if (email !== '') {\r\n            try {\r\n\r\n                await updateDoc(docRef, {\r\n                    read: true,\r\n                    readBy: arrayUnion(email),\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (activeChatId == selectedChatData.id) {\r\n            if (selectedChatData.stepIndicator.value !== activeButtonValue && activeButtonValue !== 0) {\r\n                dispatch(setChatMessagesData([]));\r\n                dispatch(setMessageTextInputValue(''));\r\n                dispatch(setActiveChatId(''));\r\n            }\r\n            else {\r\n                updateChatToRead();\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }, [selectedChatData]);\r\n\r\n    const handlePreviewInvoiceModalOpen = () => {\r\n        dispatch(setPreviewInvoiceVisible(true));\r\n    };\r\n\r\n    const formatDate = (timestamp) => {\r\n        // Parse the original timestamp\r\n        // Expected format: \"2024/01/15 at 12:17:50\"\r\n        const parts = timestamp.match(/(\\d{4})\\/(\\d{2})\\/(\\d{2}) at (\\d{2}):(\\d{2}):(\\d{2})/);\r\n        if (!parts) return timestamp; // Return original if parsing fails\r\n\r\n        // Create a new Date object\r\n        const date = new Date(parts[1], parts[2] - 1, parts[3], parts[4], parts[5], parts[6]);\r\n\r\n        // Format month names\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n        // Convert to 12-hour format and determine AM or PM\r\n        const hours = date.getHours();\r\n        const isPM = hours >= 12;\r\n        const formattedHours = hours % 12 || 12; // Convert 0 to 12 for 12 AM\r\n        const amPm = isPM ? 'PM' : 'AM';\r\n\r\n        // Construct the new format with year at the beginning\r\n        return `${date.getFullYear().toString().substr(-2)} ${months[date.getMonth()]} ${date.getDate()}, ${formattedHours}:${date.getMinutes().toString().padStart(2, '0')} ${amPm}`;\r\n    };\r\n\r\n    const extractUsernameFromEmail = (email) => {\r\n        const [username] = email.split('@');\r\n        return username;\r\n    };\r\n\r\n\r\n    const breakUrl = (url, maxUrlLength = 30) => {\r\n        let brokenUrl = '';\r\n        while (url.length > 0) {\r\n            brokenUrl += url.substring(0, maxUrlLength);\r\n            if (url.length > maxUrlLength) {\r\n                brokenUrl += '\\u200B'; // Zero-width space\r\n            }\r\n            url = url.substring(maxUrlLength);\r\n        }\r\n        return brokenUrl;\r\n    };\r\n\r\n    const isUrl = (text) => {\r\n        // Simple URL check\r\n        const urlPattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n        return !!urlPattern.test(text);\r\n    };\r\n\r\n    const handleLinkPress = (url) => {\r\n        Linking.canOpenURL(url).then(supported => {\r\n            if (supported) {\r\n                Linking.openURL(url);\r\n            } else {\r\n                console.log(\"Don't know how to open URI: \" + url);\r\n            }\r\n        });\r\n    };\r\n\r\n    const cleanUrl = (url) => {\r\n        // Removing Zero Width Space and other potential invisible characters\r\n        return url.replace(/[\\u200B-\\u200D\\uFEFF]/g, '');\r\n    };\r\n\r\n\r\n    const renderItemText = (isGlobalCustomerSender, text) => {\r\n        const urlPattern = new RegExp('(https?:\\\\/\\\\/[^\\\\s]+)', 'g');\r\n        let segments = text.split(urlPattern);\r\n\r\n        const insertBreaks = (str, n) => {\r\n            // Inserts a zero-width space every 'n' characters in 'str'\r\n            let result = '';\r\n            while (str.length > 0) {\r\n                result += str.substring(0, n) + '\\u200B';\r\n                str = str.substring(n);\r\n            }\r\n            return result;\r\n        };\r\n\r\n        return segments.map((segment, index) => {\r\n            const segmentWithBreaks = segment.length > 30 && !segment.includes(' ') ? insertBreaks(segment, 30) : segment;\r\n\r\n            if (isUrlForText(segment)) {\r\n                // Apply breaks for long URLs\r\n                return (\r\n                    <Pressable key={index} onPress={() => handleLinkPress(segment)}>\r\n                        <Text\r\n                            selectable\r\n                            style={{\r\n                                fontWeight: '400',\r\n                                color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                fontSize: 16,\r\n                                flexShrink: 1,\r\n                                textDecorationLine: 'underline',\r\n                                flexWrap: 'wrap',\r\n                            }}\r\n                        >\r\n                            {segmentWithBreaks}\r\n                        </Text>\r\n                    </Pressable>\r\n                );\r\n            } else {\r\n                return (\r\n                    <Text\r\n                        selectable\r\n                        key={index}\r\n                        style={{\r\n                            fontWeight: '400',\r\n                            color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                            fontSize: screenWidth < mobileViewBreakpoint ? 14 : 16,\r\n                            flexShrink: 1,\r\n                            flexWrap: 'wrap',\r\n                        }}\r\n                    >\r\n                        {segmentWithBreaks}\r\n                    </Text>\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n    const getFileIcon = (fileName) => {\r\n        const iconSize = 24;\r\n        const lowerFileName = fileName.toLowerCase();\r\n\r\n        if (lowerFileName.endsWith('.pdf')) {\r\n            return <MaterialIcons name={'picture-as-pdf'} size={iconSize} color=\"#fca19a\" />;\r\n        }\r\n        // Add more conditions for other file types as needed\r\n        // Example for .docx files\r\n        if (lowerFileName.endsWith('.docx') || lowerFileName.endsWith('.doc')) {\r\n            return <MaterialCommunityIcons name={'microsoft-word'} size={iconSize} color=\"#7B9CFF\" />;\r\n        }\r\n        if (lowerFileName.endsWith('.xlsx') || lowerFileName.endsWith('.xls') || lowerFileName.endsWith('.csv')) {\r\n            return <MaterialCommunityIcons name={'microsoft-excel'} size={iconSize} color=\"#6db375\" />;\r\n        }\r\n\r\n        if (lowerFileName.endsWith('.rar') || lowerFileName.endsWith('.zip')) {\r\n            return <FastImage\r\n                source={{ uri: require('../../assets/rar_icon.png'), priority: FastImage.priority.high }}\r\n                style={{\r\n                    width: iconSize,\r\n                    height: iconSize,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.cover}\r\n            />;\r\n        }\r\n        // Default icon if no specific type is matched\r\n        return <MaterialIcons name=\"insert-drive-file\" size={iconSize} color=\"#b3afaf\" />;\r\n    };\r\n\r\n    const isUrlForText = (text) => {\r\n        const urlPattern = new RegExp('^(http://www\\\\.|https://www\\\\.|http://|https://)[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(/.*)?$');\r\n        return urlPattern.test(text);\r\n    }\r\n\r\n    const renderItem = ({ item, index }) => {\r\n        const isGlobalCustomerSender = item.sender === globalCustomerId;\r\n        const isLastMessage = index === 0; // Since the list is inverted, the first item is actually the last message\r\n        const isHovered = hoveredImageIndex === index;\r\n        const textFontSize = screenWidth < mobileViewBreakpoint ? 14 : 16;\r\n\r\n        return (\r\n            <View style={{\r\n                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                width: '100%',\r\n                height: '100%',\r\n                alignSelf: isGlobalCustomerSender ? 'flex-start' : 'flex-end',\r\n                marginVertical: 4,\r\n                maxWidth: screenWidth < mobileViewBreakpoint ? '80%' : '60%', // Max width for long messages\r\n                // borderWidth: 1,\r\n                // borderColor: 'red',\r\n            }}>\r\n                {item.messageType == 'IssuedInvoice' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <Animated.View style={{\r\n                                padding: 7,\r\n                                flex: 1,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                borderWidth: 3,\r\n                                borderColor: borderColor,\r\n                            }}>\r\n                                <Pressable onPress={handlePreviewInvoiceModalOpen}>\r\n                                    <Text underline selectable style={{\r\n                                        fontWeight: 400,\r\n                                        color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                        fontSize: textFontSize,\r\n                                    }}>\r\n                                        {item.text.trim()}\r\n                                    </Text>\r\n                                </Pressable>\r\n                            </Animated.View>\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                left: -60,\r\n                                top: '50%',\r\n                                bottom: '50%',\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                            }}>\r\n                                {/* Display read status text outside of the message bubble */}\r\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n\r\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Pressable\r\n                                            focusable={false}\r\n                                            onHoverIn={() => setIsEyeHovered(true)}\r\n                                            onHoverOut={() => setIsEyeHovered(false)}\r\n                                            onPress={handleReadByListModalOpen}\r\n                                        >\r\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                        </Pressable>\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: '#888c96',\r\n                            fontSize: screenWidth < mobileViewBreakpoint ? 9 : 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n                    </View>\r\n                }\r\n\r\n\r\n                {item.messageType == 'InputPayment' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <Animated.View style={{\r\n                                padding: 7,\r\n                                flex: 1,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                borderWidth: 3,\r\n                                borderColor: borderColor,\r\n                            }}>\r\n                                <Text selectable style={{\r\n                                    fontWeight: 400,\r\n                                    color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                    fontSize: textFontSize,\r\n                                }}>\r\n                                    {item.text.trim()}\r\n                                </Text>\r\n                            </Animated.View>\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                left: -60,\r\n                                top: '50%',\r\n                                bottom: '50%',\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                            }}>\r\n                                {/* Display read status text outside of the message bubble */}\r\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n\r\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Pressable\r\n                                            focusable={false}\r\n                                            onHoverIn={() => setIsEyeHovered(true)}\r\n                                            onHoverOut={() => setIsEyeHovered(false)}\r\n                                            onPress={handleReadByListModalOpen}\r\n                                        >\r\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                        </Pressable>\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp, sender email, IP, and country */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n                    </View>\r\n                }\r\n\r\n\r\n                {!item.messageType && item.file && item.file.type == 'attachment' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        {item.text && item.text !== '' &&\r\n                            <View style={{\r\n                                marginBottom: 5,\r\n                                padding: 10,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                flexShrink: 1,\r\n                            }}>\r\n                                {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                            </View>\r\n                        }\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    marginBottom: 5,\r\n                                    padding: 10,\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    <Pressable\r\n                                        onPress={() => {\r\n                                            if (item.file.name.endsWith('.pdf')) {\r\n                                                globalSelectedFileType = 'pdf'\r\n                                                dispatch(setPdfViewerModalVisible(true));\r\n                                                dispatch(setSelectedFileUrl(item.file.url));\r\n                                                globalSelectedPDFUrl = item.file.url;\r\n\r\n                                            }\r\n                                            else {\r\n                                                globalSelectedFileType = 'not-pdf'\r\n                                                dispatch(setPdfViewerModalVisible(true));\r\n                                                dispatch(setSelectedFileUrl(item.file.url));\r\n                                                globalSelectedPDFUrl = item.file.url;\r\n\r\n\r\n\r\n                                            }\r\n                                            // dispatch(setSelectedFileUrl(item.file.url));\r\n                                            // // globalSelectedPDFUrl = item.file.url\r\n                                            // dispatch(setPdfViewerModalVisible(true));\r\n\r\n                                        }}\r\n                                        style={{ flexDirection: 'row', }}\r\n                                    >\r\n                                        <View style={{ marginRight: 5, }}>\r\n                                            {getFileIcon(item.file.name)}\r\n                                        </View>\r\n\r\n                                        <Text underline selectable style={{\r\n                                            fontWeight: 400,\r\n                                            color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                            fontSize: textFontSize,\r\n                                        }}>\r\n                                            {item.file.name.trim()}\r\n                                        </Text>\r\n                                    </Pressable>\r\n                                </View>\r\n                            </View>\r\n\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                left: -60,\r\n                                top: '50%',\r\n                                bottom: '50%',\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                            }}>\r\n                                {/* Display read status text outside of the message bubble */}\r\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n\r\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Pressable\r\n                                            focusable={false}\r\n                                            onHoverIn={() => setIsEyeHovered(true)}\r\n                                            onHoverOut={() => setIsEyeHovered(false)}\r\n                                            onPress={handleReadByListModalOpen}\r\n                                        >\r\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                        </Pressable>\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: '#888c96',\r\n                            fontSize: screenWidth < mobileViewBreakpoint ? 9 : 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n\r\n                    </View>}\r\n\r\n\r\n                {!item.messageType && item.file && item.file.type == 'image' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        {item.text && item.text !== '' &&\r\n                            <View style={{\r\n                                marginBottom: 5,\r\n                                padding: 10,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                flexShrink: 1,\r\n                            }}>\r\n                                {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                            </View>\r\n                        }\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    padding: 0,\r\n                                    borderRadius: 10,\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    <Pressable\r\n                                        onMouseEnter={() => handleImageMessageMouseEnter(index)}\r\n                                        onMouseLeave={handleImageMessageMouseLeave}\r\n                                        onPress={() => openPreview(index)}\r\n                                        style={{\r\n                                            position: 'relative', // Ensure relative positioning for the overlay\r\n                                            width: 250,\r\n                                            height: 250,\r\n                                            alignSelf: 'center',\r\n                                        }}\r\n                                    >\r\n                                        <FastImage\r\n                                            source={{ uri: item.file.url, priority: FastImage.priority.normal }}\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                height: '100%',\r\n                                                borderRadius: 10,\r\n                                                borderWidth: 1,\r\n                                                borderColor: '#DADDE1',\r\n                                            }}\r\n                                            resizeMode={FastImage.resizeMode.contain}\r\n                                        />\r\n                                        {isHovered && (\r\n                                            <View style={{\r\n                                                ...StyleSheet.absoluteFillObject, // Make overlay cover the entire image\r\n                                                backgroundColor: 'rgba(0, 0, 0, 0.1)', // Semi-transparent black\r\n                                                borderRadius: 10, // Match the border radius of the image\r\n                                            }} />\r\n                                        )}\r\n                                    </Pressable>\r\n                                </View>\r\n                            </View>\r\n\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                left: -60,\r\n                                top: '50%',\r\n                                bottom: '50%',\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                            }}>\r\n                                {/* Display read status text outside of the message bubble */}\r\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n\r\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Pressable\r\n                                            focusable={false}\r\n                                            onHoverIn={() => setIsEyeHovered(true)}\r\n                                            onHoverOut={() => setIsEyeHovered(false)}\r\n                                            onPress={handleReadByListModalOpen}\r\n                                        >\r\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                        </Pressable>\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: '#888c96',\r\n                            fontSize: screenWidth < mobileViewBreakpoint ? 9 : 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n\r\n                    </View>}\r\n\r\n                {!item.messageType && !item.file &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    padding: 10,\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                                </View>\r\n                            </View>\r\n\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                left: -60,\r\n                                top: '50%',\r\n                                bottom: '50%',\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                            }}>\r\n                                {/* Display read status text outside of the message bubble */}\r\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n\r\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Pressable\r\n                                            focusable={false}\r\n                                            onHoverIn={() => setIsEyeHovered(true)}\r\n                                            onHoverOut={() => setIsEyeHovered(false)}\r\n                                            onPress={handleReadByListModalOpen}\r\n                                        >\r\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                        </Pressable>\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: '#888c96',\r\n                            fontSize: screenWidth < mobileViewBreakpoint ? 9 : 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n                    </View>}\r\n\r\n            </View>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        chatMessagesData.length > 0 ? (\r\n            <>\r\n                <FlatList\r\n                    style={{ height: 100 }}\r\n                    ref={flatListRef}\r\n                    data={chatMessagesData}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id}\r\n                    initialNumToRender={10} // Adjust based on your average message size and performance\r\n                    maxToRenderPerBatch={10}\r\n                    windowSize={100}\r\n                    onEndReachedThreshold={0.05}\r\n                    ListFooterComponent={renderFooter}\r\n                    onEndReached={handleLoadMoreMessages}\r\n                    inverted\r\n                />\r\n                {selectedImageIndex !== null && (\r\n                    <ImagePreviewModal\r\n                        isVisible={isPreviewVisible}\r\n                        onClose={closePreview}\r\n                        imageUrl={chatMessagesData[selectedImageIndex].file.url}\r\n                    />\r\n                )}\r\n                <ReadByListModal userEmail={userEmail} handleReadByListModalClose={handleReadByListModalClose} />\r\n            </>\r\n        ) : null\r\n    );\r\n};\r\n\r\n\r\nconst ReservedStatusViewForHeader = () => {\r\n\r\n    return (\r\n        <View style={{\r\n            zIndex: 999,\r\n            flex: 1,\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: '#FFFFCC',\r\n            padding: 10,\r\n            borderRadius: 5,\r\n            opacity: 0.7, // Set border color\r\n        }}>\r\n            <Text style={{ color: '#FF0000', fontSize: 16, fontWeight: 'bold', textAlign: 'center', }} selectable={false}>The vehicle is reserved to a customer</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst CancelledViewForHeader = () => {\r\n\r\n    return (\r\n        <View style={{\r\n            zIndex: 999,\r\n            flex: 1,\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: 'red',\r\n            padding: 10,\r\n            borderRadius: 5,\r\n            opacity: 0.7, // Set border color\r\n        }}>\r\n            <Text style={{ color: 'white', fontSize: 16, fontWeight: 'bold', textAlign: 'center', }} selectable={false}>Cancelled Transaction</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default function ChatMessages() {\r\n    const navigate = useNavigate();\r\n    const selectedChatData = useSelector(state => state.selectedChatData);\r\n    const selectedVehicleData = useSelector(state => state.selectedVehicleData);\r\n    const selectedCustomerData = useSelector(state => state.selectedCustomerData);\r\n    const [email, setEmail] = useState('');\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const chatMessageBoxLoading = useSelector((state) => state.chatMessageBoxLoading);\r\n    const chatListSearchText = useSelector((state) => state.chatListSearchText);\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const loginName = useSelector((state) => state.loginName);\r\n\r\n    const [name, setName] = useState(loginName);\r\n\r\n    // const screenWidth = Dimensions.get('window').width;\r\n\r\n    const [activeButton, setActiveButton] = useState('All messages');\r\n    const [activeButtonValue, setActiveButtonValue] = useState(0);\r\n\r\n    const [activeFilterButton, setActiveFilterButton] = useState('');\r\n    const [unreadButtonValue, setUnreadButtonValue] = useState(false);\r\n    const [readButtonValue, setReadButtonValue] = useState(false);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [unreadCount, setUnreadCount] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // globalImageUrl = '';\r\n        // navigate(`/devadmin/chat-messages/#`);\r\n        console.log(encryptDataAPI('rmj-marc'));\r\n\r\n        const updateWidth = () => {\r\n            const newWidth = Dimensions.get('window').width;\r\n            setScreenWidth(newWidth); // Update the screenWidth state\r\n        };\r\n\r\n        // Add event listener for window resize\r\n        Dimensions.addEventListener('change', updateWidth);\r\n\r\n        // Clean up the event listener when the component unmounts or re-renders\r\n\r\n        const fetchIpAndCountry = async () => {\r\n            try {\r\n                // dispatch(setChatMessageBoxLoading(true));\r\n                // Fetch IP Address\r\n                const ipResponse = await axios.get('https://api.ipify.org?format=json');\r\n                const fetchedIp = ipResponse.data.ip;\r\n                ip = fetchedIp;\r\n\r\n                // Fetch IP Country\r\n                if (fetchedIp) {\r\n                    const countryResponse = await axios.get(`https://ipapi.co/${fetchedIp}/json/`);\r\n                    const fetchedIpCountry = countryResponse.data.country_name;\r\n                    ipCountry = fetchedIpCountry;\r\n                    // dispatch(setChatMessageBoxLoading(false));\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching IP data:', error);\r\n            }\r\n        };\r\n        const collectionRef = collection(projectExtensionFirestore, 'chats'); // Replace with your collection name\r\n        const unrepliedQuery = query(\r\n            collectionRef,\r\n            where('read', '==', false),\r\n            limit(10) // Limit the query to 10 documents\r\n        );\r\n\r\n        const unsubscribe = onSnapshot(unrepliedQuery, (querySnapshot) => {\r\n            setUnreadCount(querySnapshot.size); // Update state with the new count\r\n            fetchIpAndCountry();\r\n\r\n        }, (error) => {\r\n            console.error(\"Error fetching documents: \", error);\r\n        });\r\n\r\n\r\n\r\n        // Clean up function to unsubscribe from the listener when the component unmounts\r\n        return () => {\r\n            Dimensions.removeEventListener('change', updateWidth);\r\n            unsubscribe();\r\n        };\r\n\r\n    }, []);\r\n\r\n    const handlePress = (buttonTitle, buttonTitleValue) => {\r\n        if (activeButton == buttonTitle) {\r\n        }\r\n        else {\r\n            setActiveButton(buttonTitle);\r\n            setActiveButtonValue(buttonTitleValue);\r\n            setActiveFilterButton('');\r\n            setUnreadButtonValue(false);\r\n\r\n            dispatch(setActiveChatId(''));\r\n\r\n            dispatch(setLoadMoreLoading(false));\r\n            dispatch(setNoMoreData(false));\r\n        }\r\n    };\r\n\r\n\r\n    const handleUnreadPress = (buttonTitle) => {\r\n\r\n        setActiveFilterButton(prevState => prevState === buttonTitle ? '' : buttonTitle);\r\n        setUnreadButtonValue(prevState => !prevState);\r\n        setReadButtonValue(false);\r\n    };\r\n\r\n    const handleReadPress = (buttonTitle) => {\r\n\r\n        setActiveFilterButton(prevState => prevState === buttonTitle ? '' : buttonTitle);\r\n        setReadButtonValue(prevState => !prevState);\r\n        setUnreadButtonValue(false);\r\n\r\n    };\r\n\r\n\r\n    //Main fetch\r\n    useEffect(() => {\r\n        let queryRef;\r\n        dispatch(setMessageTextInputValue(''));\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setChatMessageBoxLoading(false));\r\n        dispatch(setActiveChatId(''));\r\n\r\n        // Helper function to build the query\r\n        const buildQuery = () => {\r\n            const searchValue = chatListSearchText.toUpperCase();\r\n\r\n            if (unreadButtonValue) {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('read', '==', false), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n            else if (readButtonValue) {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('read', '==', true), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n            else {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n        };\r\n\r\n        // Build and execute the query\r\n        queryRef = buildQuery();\r\n\r\n        const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n            const chatsData = [];\r\n            snapshot.forEach((doc) => {\r\n                chatsData.push({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                });\r\n            });\r\n\r\n            dispatch(setChatListData(chatsData));\r\n            globalLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n            dispatch(setNoMoreData(false));\r\n            dispatch(setLoadMoreLoading(false));\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }, (error) => {\r\n            console.error('Error fetching data from Firebase:', error);\r\n        });\r\n\r\n        // Cleanup function\r\n        return () => {\r\n            if (unsubscribe) {\r\n                unsubscribe();\r\n            }\r\n        };\r\n    }, [unreadButtonValue, readButtonValue, activeButtonValue, chatListSearchText]);\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                navigate(\"/login\")\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(projectControlAuth)\r\n                    .then(() => {\r\n                        navigate(\"/login\")\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(projectControlAuth)\r\n                .then(() => {\r\n                    navigate(\"/login\")\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = projectControlAuth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const listenForNameChange = (documentId) => {\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            onSnapshot(accountDocRef, (docSnapshot) => {\r\n                if (docSnapshot.exists()) {\r\n                    const data = docSnapshot.data();\r\n                    const fieldType = data.type;\r\n                    const fieldName = data.name;\r\n                    dispatch(setLoginName(fieldName));\r\n\r\n                } else {\r\n                    // Handle the case where the document does not exist\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSignOut = () => {\r\n        // Check if currentUser exists before signing out\r\n        if (projectControlAuth.currentUser) {\r\n            signOut(projectControlAuth).then(() => {\r\n                navigate(\"/login\")\r\n                setEmail('');\r\n                setName('');\r\n            }).catch(() => {\r\n                // Handle any sign out errors here\r\n            });\r\n        } else {\r\n            // Handle the case where there is no user currently signed in\r\n            console.log('No user signed in to sign out');\r\n            // Optionally navigate to the login screen or show a message\r\n            navigate(\"/login\")\r\n        }\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   const handleScreenResize = () => {\r\n    //     const screenWidth = Dimensions.get('window').width;\r\n    //     setIsMobileView(screenWidth < 1200);\r\n    //   };\r\n\r\n    //   // Initial check on component mount\r\n    //   handleScreenResize();\r\n\r\n    //   // Listen for screen dimension changes\r\n    //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n    //   // Cleanup event listener on component unmount\r\n    //   return () => {\r\n    //     Dimensions.removeEventListener('change', handleScreenResize);\r\n    //   };\r\n    // }, []);\r\n\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#0642F4'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#0642F4'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n\r\n\r\n\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n\r\n    const slideAnim = useRef(new Animated.Value(screenWidth)).current;\r\n    const isVisible = chatMessagesData.length > 0;\r\n\r\n    useEffect(() => {\r\n        if (isVisible) {\r\n            // Delayed slide in from right to left with smooth easing\r\n            Animated.timing(slideAnim, {\r\n                toValue: 0, // Final position on the screen\r\n                duration: 300, // Slightly longer duration for smoother effect\r\n                useNativeDriver: true, // Use native driver for better performance\r\n                easing: Easing.bezier(0.25, 0.1, 0.25, 1), // Smooth and natural easing curve\r\n                delay: 100, // Start with a slight delay for a smoother transition\r\n            }).start();\r\n        } else {\r\n            // Delayed slide out to the right with smooth easing when not visible\r\n            Animated.timing(slideAnim, {\r\n                toValue: screenWidth,\r\n                duration: 300, // Slightly longer duration for smoother effect\r\n                useNativeDriver: true,\r\n                easing: Easing.bezier(0.25, 0.1, 0.25, 1), // Smooth and natural easing curve\r\n                delay: 100, // Start with a slight delay for a smoother transition\r\n            }).start();\r\n        }\r\n    }, [isVisible, screenWidth, slideAnim]);\r\n\r\n    const handlePressBack = () => {\r\n        dispatch(setMessageTextInputValue(''));\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setActiveChatId(''));\r\n        navigate(`/top/chat-messages`);\r\n    }\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <NativeBaseProvider>\r\n                <View style={{ backgroundColor: \"white\", height: '100%', width: '100%', flexDirection: 'column', maxHeight: '100vh', overflow: 'hidden', }} >\r\n                    {/* Header */}\r\n                    <Box\r\n                        px=\"3\"\r\n                        bgColor='#0642f4'\r\n                        height={54}\r\n                        position=\"sticky\"\r\n                        top={0}\r\n                        zIndex={999}\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                        borderBottomWidth={0}\r\n                        borderBottomColor={'cyan.500'}\r\n                    >\r\n\r\n                        <SideDrawer\r\n                            selectedScreen={selectedScreen} />\r\n\r\n                        <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n\r\n                            <FastImage\r\n                                source={{\r\n                                    uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                    priority: FastImage.priority.high,\r\n                                }}\r\n                                resizeMode={FastImage.resizeMode.stretch}\r\n                                style={styles.image} />\r\n                        </Box>\r\n\r\n                        <View style={{ alignItems: 'center', flex: 1 }}>\r\n                            <QRCodeScanner />\r\n                        </View>\r\n\r\n                        <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n\r\n                    </Box>\r\n\r\n                    {/* Content */}\r\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        {/* Sidebar */}\r\n                        {/* <SideDrawer\r\n                            selectedScreen={selectedScreen} /> */}\r\n\r\n                        {/* Main Content */}\r\n                        {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n                        {/* Main Content Content */}\r\n\r\n                        {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n                        <View style={{ flex: 1, backgroundColor: \"white\", height: '100%' }}>\r\n                            <View style={{ flex: 1, height: '100%' }}>\r\n\r\n                                <View style={{\r\n                                    display: screenWidth < mobileViewBreakpoint && activeChatId !== '' ? 'none' : 'flex',\r\n                                    borderBottomWidth: 1,\r\n                                    borderColor: '#f5f5f5',\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    height: 60,\r\n                                }}>\r\n                                    {/* Chat Header */}\r\n                                    <View style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'row',\r\n                                    }}>\r\n                                        <View style={{\r\n                                            flex: 1,\r\n                                            flexDirection: 'row',\r\n                                        }}>\r\n                                            <ScrollView scrollEnabled horizontal>\r\n\r\n                                                <HeaderButton\r\n                                                    key={'All messages'}\r\n                                                    title={'All messages'}\r\n                                                    onPress={() => handlePress('All messages', 0)}\r\n                                                    isActive={activeButton === 'All messages'}\r\n                                                    headerCount={\r\n                                                        unreadCount > 0 ?\r\n                                                            (<View style={{\r\n                                                                backgroundColor: '#FF0000',\r\n                                                                borderRadius: 100, // Half of width and height\r\n                                                                width: 20,\r\n                                                                height: 20, // Same as width for a perfect circle\r\n                                                                marginLeft: 10,\r\n                                                                justifyContent: 'center', // Center children vertically\r\n                                                                alignItems: 'center', // Center children horizontally\r\n                                                            }}>\r\n                                                                <Text style={{\r\n                                                                    color: 'white',\r\n                                                                    fontWeight: 700,\r\n                                                                    fontSize: 14,\r\n                                                                }}>{unreadCount > 9 ? `9+` : unreadCount}</Text>\r\n                                                            </View>) : (<></>)}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Negotiation'}\r\n                                                    title={'Negotiation'}\r\n                                                    onPress={() => handlePress('Negotiation', 1)}\r\n                                                    isActive={activeButton === 'Negotiation'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Issued Proforma Invoice'}\r\n                                                    title={'Issued Proforma Invoice'}\r\n                                                    onPress={() => handlePress('Issued Proforma Invoice', 2)}\r\n                                                    isActive={activeButton === 'Issued Proforma Invoice'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Order Item'}\r\n                                                    title={'Order Item'}\r\n                                                    onPress={() => handlePress('Order Item', 3)}\r\n                                                    isActive={activeButton === 'Order Item'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Payment Confirmed'}\r\n                                                    title={'Payment Confirmed'}\r\n                                                    onPress={() => handlePress('Payment Confirmed', 4)}\r\n                                                    isActive={activeButton === 'Payment Confirmed'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Shipping Schedule'}\r\n                                                    title={'Shipping Schedule'}\r\n                                                    onPress={() => handlePress('Shipping Schedule', 5)}\r\n                                                    isActive={activeButton === 'Shipping Schedule'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Documents'}\r\n                                                    title={'Documents'}\r\n                                                    onPress={() => handlePress('Documents', 6)}\r\n                                                    isActive={activeButton === 'Documents'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Vehicle Received'}\r\n                                                    title={'Vehicle Received'}\r\n                                                    onPress={() => handlePress('Vehicle Received', 7)}\r\n                                                    isActive={activeButton === 'Vehicle Received'}\r\n                                                />\r\n                                            </ScrollView>\r\n                                        </View>\r\n\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', height: '100%', }}>\r\n                                    {/* Chat Body */}\r\n\r\n                                    <View style={{ flex: screenWidth > mobileViewBreakpoint ? '' : 1, display: screenWidth < mobileViewBreakpoint && activeChatId !== '' ? 'none' : 'flex', }}>\r\n\r\n                                        <View style={{ flex: 1, maxWidth: screenWidth > mobileViewBreakpoint ? 380 : '100%', minWidth: screenWidth > mobileViewBreakpoint ? 380 : '100%', borderRightWidth: 0, borderColor: '#DADDE1', maxHeight: 100, minHeight: 100, backgroundColor: 'white', }}>\r\n                                            {/* Chat Search */}\r\n                                            <View style={{ flex: 1, paddingHorizontal: 10 }}>\r\n                                                <SearchChat lastVisible={lastVisible} setLastVisible={setLastVisible} unreadButtonValue={unreadButtonValue} activeButtonValue={activeButtonValue} />\r\n                                                {/* <Pressable\r\n                                                variant=\"ghost\"\r\n                                                style={{\r\n                                                    padding: 3,\r\n                                                    width: 100,\r\n                                                    flexDirection: 'row', // Align items in a row\r\n                                                    alignItems: 'center', // Center items vertically\r\n                                                    borderRadius: 5,\r\n                                                }}\r\n                                                backgroundColor='#ECEDF0'\r\n                                                _hover={{ backgroundColor: '#d7d7d9' }}\r\n                                            >\r\n                                                <MaterialIcons name=\"mark-email-unread\" color=\"#1C2B33\" size={20} />\r\n                                                <Text style={{ color: '#1C2B33', marginLeft: 5 }}>Unreplied</Text>\r\n                                            </Pressable> */}\r\n                                                <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                                    <FilterButton\r\n                                                        key={'Unread'}\r\n                                                        title={'Unread '}\r\n                                                        onPress={() => handleUnreadPress('Unread')}\r\n                                                        isActive={activeFilterButton === 'Unread'}\r\n                                                        iconActive={<MaterialIcons name=\"mark-email-unread\" color=\"#0A78BE\" size={16} />}\r\n                                                        iconNotActive={<MaterialIcons name=\"mark-email-unread\" color=\"#1C2B33\" size={16} />}\r\n                                                    />\r\n\r\n                                                    <FilterButton\r\n                                                        key={'Read'}\r\n                                                        title={'Read '}\r\n                                                        onPress={() => handleReadPress('Read')}\r\n                                                        isActive={activeFilterButton === 'Read'}\r\n                                                        iconActive={<MaterialIcons name=\"mark-email-read\" color=\"#0A78BE\" size={16} />}\r\n                                                        iconNotActive={<MaterialIcons name=\"mark-email-read\" color=\"#1C2B33\" size={16} />}\r\n                                                    />\r\n\r\n                                                </View>\r\n\r\n                                            </View>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, maxWidth: screenWidth > mobileViewBreakpoint ? 380 : '100%', minWidth: screenWidth > mobileViewBreakpoint ? 380 : '100%', borderRightWidth: 0, borderColor: '#DADDE1', backgroundColor: 'white', }}>\r\n                                            {/* Chat List */}\r\n                                            <ChatList unreadButtonValue={unreadButtonValue} activeButtonValue={activeButtonValue} />\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    {screenWidth > mobileViewBreakpoint && (chatMessageBoxLoading ? (\r\n                                        <View style={{ flex: 1, backgroundColor: 'white', justifyContent: 'center', alignItems: 'center', height: '100%', }}>\r\n                                            <Spinner\r\n                                                animating\r\n                                                size=\"lg\"\r\n                                                color={'#7B9CFF'}\r\n                                            />\r\n                                        </View>) : (\r\n                                        <View style={{ flex: 1, }}>\r\n\r\n                                            <View style={{ flex: 1, minHeight: 90, maxHeight: screenWidth < 1281 ? 130 : 125, borderBottomWidth: 0, borderColor: '#DADDE1', backgroundColor: 'white', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                {/* Chat Message Header */}\r\n\r\n                                                <ScrollView scrollEnabled horizontal>\r\n                                                    {chatMessagesData.length < 1 ? null : (<ChatMessageHeader />)}\r\n                                                </ScrollView>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, borderColor: '#DADDE1', backgroundColor: chatMessagesData.length < 1 ? 'white' : '#e5ebfe', paddingBottom: 10, }}>\r\n\r\n                                                <View style={{ flex: 1, }}>\r\n\r\n                                                    {(selectedChatData && chatMessagesData.length > 0 && selectedCustomerData && selectedVehicleData) &&\r\n                                                        (selectedChatData && chatMessagesData.length > 0 && selectedVehicleData.stockStatus == 'Reserved' &&\r\n                                                            (selectedVehicleData.reservedTo !== selectedCustomerData.textEmail))\r\n                                                        ? <ReservedStatusViewForHeader /> :\r\n                                                        (selectedChatData.isCancelled && chatMessagesData.length > 0 && <CancelledViewForHeader />)\r\n                                                    }\r\n\r\n                                                    {/* Chat Message Box */}\r\n                                                    <ChatMessageBox activeButtonValue={activeButtonValue} userEmail={email} />\r\n                                                    <DocumentPreviewModal />\r\n                                                </View>\r\n\r\n                                                <View style={{ maxHeight: 180, justifyContent: 'flex-end', alignItems: 'center' }}>\r\n                                                    {/* Chat Input Text */}\r\n                                                    {chatMessagesData.length < 1 ? null : (<ChatInputText />)}\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                    ))}\r\n\r\n                                    {screenWidth < mobileViewBreakpoint && activeChatId !== '' && (chatMessageBoxLoading ? (\r\n\r\n                                        <View style={{ flex: 1, backgroundColor: 'white', justifyContent: 'center', alignItems: 'center', }}>\r\n                                            <Spinner\r\n                                                animating\r\n                                                size=\"lg\"\r\n                                                color={'#7B9CFF'}\r\n                                            />\r\n                                        </View>) : (\r\n\r\n                                        <Animated.View\r\n                                            style={{\r\n                                                backgroundColor: '#E5EBFE',\r\n                                                height: '100%',\r\n                                                flex: 1,\r\n                                                transform: [{ translateX: slideAnim }]\r\n                                            }}\r\n\r\n                                        >\r\n\r\n                                            <View style={{ flex: 1 }}>\r\n                                                <View style={{ flex: 1, minHeight: 90, maxHeight: screenWidth < 1281 ? 130 : 125, borderBottomWidth: 0, borderColor: '#DADDE1', backgroundColor: 'white', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                    {/* Chat Message Header */}\r\n                                                    {(screenWidth < mobileViewBreakpoint && chatMessagesData.length > 0) &&\r\n                                                        <Pressable onPress={handlePressBack} style={{ justifyContent: 'center', alignItems: 'center', }}>\r\n                                                            <Ionicons name=\"chevron-back\" size={40} color='black' />\r\n                                                        </Pressable>\r\n                                                    }\r\n\r\n                                                    <ScrollView scrollEnabled horizontal>\r\n                                                        {chatMessagesData.length < 1 ? null : (<ChatMessageHeader />)}\r\n                                                    </ScrollView>\r\n                                                </View>\r\n\r\n                                                <View style={{ flex: 1, borderColor: '#DADDE1', backgroundColor: chatMessagesData.length < 1 ? 'white' : '#e5ebfe', paddingBottom: 10, }}>\r\n                                                    <View style={{ flex: 1, }}>\r\n                                                        {(chatMessagesData.length > 0 && selectedVehicleData.stockStatus == 'Reserved' &&\r\n                                                            selectedVehicleData.reservedTo !== selectedCustomerData.textEmail)\r\n                                                            ? <ReservedStatusViewForHeader /> :\r\n                                                            (selectedChatData.isCancelled && chatMessagesData.length > 0 && <CancelledViewForHeader />)\r\n                                                        }\r\n                                                        {/* Chat Message Box */}\r\n                                                        <ChatMessageBox activeButtonValue={activeButtonValue} userEmail={email} />\r\n                                                        <DocumentPreviewModal />\r\n\r\n                                                    </View>\r\n                                                </View>\r\n                                            </View>\r\n\r\n                                            {/* Absolute Positioned Chat Input Text at the Bottom */}\r\n                                            <View style={{ alignItems: 'center', paddingBottom: 10 }}>\r\n                                                {chatMessagesData.length < 1 ? null : (<ChatInputText />)}\r\n                                            </View>\r\n\r\n                                        </Animated.View>\r\n                                    ))}\r\n                                </View>\r\n                            </View>\r\n                            {/* <SuccessModal /> */}\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <LoadingModal />\r\n            </NativeBaseProvider>\r\n\r\n\r\n        </>\r\n\r\n    );\r\n}","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Flex,\r\n    HStack,\r\n    Icon,\r\n    Image as NativeImage,\r\n    Input,\r\n    Modal,\r\n    NativeBaseProvider,\r\n    Popover,\r\n    Pressable,\r\n    Spinner,\r\n    Stack,\r\n    Text,\r\n    VStack,\r\n    useBreakpointValue,\r\n    TextArea,\r\n    InputRightAddon,\r\n    InputGroup,\r\n    InputLeftAddon,\r\n    Select,\r\n    CheckIcon,\r\n    PresenceTransition,\r\n    CloseIcon,\r\n    ScrollView as ScrollViewNative,\r\n    Divider,\r\n    useDisclosure,\r\n    useDisclose,\r\n    FormControl,\r\n    Checkbox,\r\n    useToast,\r\n} from 'native-base';\r\nimport { DataTable } from 'react-native-paper';\r\n\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n    Dimensions,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    StyleSheet,\r\n    View,\r\n    PanResponder,\r\n    Animated,\r\n    InputAccessoryView,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    TextInput,\r\n    Image as RNImage\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo,\r\n    FontAwesome5,\r\n    EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { debounce } from 'lodash';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, deleteField } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n    setVehicleListData,\r\n    setSupplyChainsCostsData,\r\n    setSelectedPaidTo,\r\n    setSelectedExpenseName,\r\n    setSupplyChainsCostsModalVisible,\r\n    setVehicleListSupplyChainsCostsData,\r\n    setDeleteImageVisible,\r\n    setSelectedImages,\r\n    setAddAnotherImages,\r\n    setIsAddPhotoVisible,\r\n    setUploadImagesModalVisible,\r\n    setUploadImagesButtonLoading,\r\n    setViewImagesModalVisible,\r\n    setViewImagesData,\r\n    setLoadingModalVisible,\r\n    setAddVehicleListData,\r\n    setEditVehicleModalVisible,\r\n    setFobPriceHistoryModalVisible,\r\n    setSelectedButton,\r\n    setAddCountryModalVisible,\r\n    setAddPortModalVisible,\r\n    setDeletePortModalVisible,\r\n    setAddPortsForCountriesModalVisible,\r\n    setCountryPortsData,\r\n    setDeleteCountryModalVisible,\r\n    setLoginName\r\n} from './redux/store';\r\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep, merge } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'FREIGHT'\r\n\r\nlet nameVariable = {\r\n    text: ''\r\n}\r\n\r\nlet defaultSelectedButton = 'countries';\r\n\r\nlet selectedPort = '';\r\nlet selectedCountry = '';\r\nlet selectedPortForCountry = '';\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = projectControlAuth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\nconst SearchablePortDropdown = ({ modalAddOpen }) => {\r\n    // const [selectedItem, setSelectedItem] = useState(null);\r\n    const [query, setQuery] = useState('');\r\n    const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n    const [data, setData] = useState([]); // Initialize data state with an empty array\r\n    const searchRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Your data fetching logic here\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map((key) => ({\r\n                        ports: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n            } else {\r\n                console.log('No such document!');\r\n            }\r\n        }, (error) => {\r\n            console.error('Error fetching countries: ', error);\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const filteredData = data.filter((item) =>\r\n        item.ports.toLowerCase().includes(query.toLowerCase().trim()) ||\r\n        item.country.toLowerCase().includes(query.toLowerCase().trim())\r\n    );\r\n\r\n    const renderItem = ({ item }) => (\r\n        <TouchableOpacity\r\n            style={{\r\n                padding: 10,\r\n                borderBottomWidth: 1,\r\n                borderBottomColor: '#ccc',\r\n                width: '100%',\r\n                backgroundColor: '#85929F',\r\n            }}\r\n            onPress={() => {\r\n                // setSelectedItem(item);\r\n                selectedPortForCountry = item;\r\n                setQuery('');\r\n                setIsDropdownVisible(false);\r\n\r\n            }}\r\n        >\r\n            <Text style={{ color: 'white', }}>{item.ports}</Text>\r\n        </TouchableOpacity>\r\n    );\r\n\r\n    useEffect(() => {\r\n\r\n        searchRef.current.focus();\r\n\r\n    }, [isDropdownVisible])\r\n\r\n    useEffect(() => {\r\n\r\n        searchRef.current.focus();\r\n        setIsDropdownVisible(false);\r\n        selectedPortForCountry = '';\r\n\r\n    }, [modalAddOpen])\r\n\r\n    return (\r\n        <View style={{ flex: 1, width: '100%' }}>\r\n            <Button\r\n                title=\"Show Dropdown\"\r\n                onPress={() => {\r\n                    setIsDropdownVisible(!isDropdownVisible)\r\n\r\n                }}\r\n                bgColor={'#102A43'}\r\n                style={{ borderWidth: 1 }}\r\n                flex={1}\r\n            >\r\n                <View style={{\r\n                    flex: 1,\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between', // This will position the children at opposite ends\r\n                }}>\r\n                    <Text style={{ color: 'white', flex: 1, alignSelf: 'flex-start' }}>{selectedPortForCountry ? selectedPortForCountry.ports : 'Select Port'}</Text>\r\n                    <MaterialIcons style={{ alignSelf: 'flex-end' }} name={isDropdownVisible ? 'keyboard-arrow-up' : 'keyboard-arrow-down'} color='white' size={22} />\r\n                </View>\r\n            </Button>\r\n            <View style={{ display: isDropdownVisible ? 'flex' : 'none' }}>\r\n                <TextInput\r\n                    ref={searchRef}\r\n                    style={{\r\n                        outlineStyle: 'none',\r\n                        padding: 10,\r\n                        borderWidth: 1,\r\n                        borderColor: '#102A43',\r\n                        flex: 1,\r\n                    }}\r\n                    placeholder=\"Search...\"\r\n                    value={query}\r\n                    onChangeText={(text) => setQuery(text)}\r\n                />\r\n                <FlatList\r\n                    style={{ height: 150, width: '100%', borderWidth: 1, borderColor: '#102A43', borderRadius: 5, }}\r\n                    data={filteredData}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={(item) => item.ports.toString()}\r\n                />\r\n            </View>\r\n\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }} selectable={false}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n//     const dispatch = useDispatch();\r\n//     const toast = useToast();\r\n//     const [inspectionData, setInspectionData] = useState(['Required', 'Not-Required', 'Optional']);\r\n//     const [key, setKey] = useState(nanoid());\r\n\r\n//     const [selectedStockStatusValue, setSelectedStockStatusValue] = useState(selectedValue);\r\n//     const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n//     const handleSaveStockStatus = async () => {\r\n\r\n//         dispatch(setLoadingModalVisible(true));\r\n\r\n//        const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n//         const { datetime } = response.data;\r\n//         const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n//         const year = moment(datetime).format('YYYY');\r\n//         const month = moment(datetime).format('MM');\r\n//         const monthWithDay = moment(datetime).format('MM/DD');\r\n//         const date = moment(datetime).format('YYYY/MM/DD');\r\n//         const day = moment(datetime).format('DD');\r\n//         const time = moment(datetime).format('HH:mm');\r\n\r\n//         const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n//         if (item.stockStatus == selectedStockStatusValue || selectedStockStatusValue == '' || selectedStockStatusValue == '__NativeBasePlaceHolder__') {\r\n//             dispatch(setLoadingModalVisible(false));\r\n//         }\r\n\r\n//         else {\r\n\r\n//             const stockStatusHistoryData = {\r\n//                 date: formattedTime,\r\n//                 stockStatus: selectedStockStatusValue,\r\n//                 changedBy: nameVariable.text,\r\n//             };\r\n//             const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n//             try {\r\n//                 await updateDoc(vehicleProductRef, {\r\n//                     stockStatus: selectedStockStatusValue,\r\n//                     stockStatusHistory: arrayUnion(stockStatusHistoryData)\r\n//                 });\r\n//                 const logData = {\r\n//                     message: `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to \"${selectedStockStatusValue}\" with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n//                     timestamp: formattedTime,\r\n//                     colorScheme: true,\r\n//                     keywords: [\r\n//                         formattedTime.toLowerCase(),\r\n//                         globalCurrentStockID.toLowerCase(),\r\n//                         `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to ${selectedStockStatusValue} with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n//                         'Stock Status'.toLowerCase(),\r\n//                         'Stock Status Updated'.toLowerCase(),\r\n//                         'Stock'.toLowerCase(),\r\n//                         'Status Updated'.toLowerCase(),\r\n//                         'Updated'.toLowerCase(),\r\n//                         globalSelectedCarName.toLowerCase(),\r\n//                         globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n//                         nameVariable.text.toLowerCase(),\r\n//                         year.toLowerCase(),\r\n//                         month.toLowerCase(),\r\n//                         monthWithDay.toLowerCase(),\r\n//                         date.toLowerCase(),\r\n//                         day.toLowerCase(),\r\n//                         time.toLowerCase(),\r\n//                         timeWithMinutesSeconds.toLowerCase(),\r\n//                     ],\r\n//                 };\r\n//                 addLogToCollection(logData);\r\n//                 dispatch(setLoadingModalVisible(false));\r\n\r\n//                 // console.log('FOB Price updated successfully');\r\n//                 toast.show({\r\n//                     render: () => {\r\n//                         return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n//                             <Text style={{ color: 'white' }}>Stock Status updated successfully!</Text>\r\n//                         </View>;\r\n//                     }\r\n//                 })\r\n//             } catch (error) {\r\n//                 console.error(error);\r\n//                 toast.show({\r\n//                     render: () => {\r\n//                         return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n//                             <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n//                         </View>;\r\n//                     }\r\n//                 })\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <View style={{ flex: 1, flexDirection: 'row' }}>\r\n//             <View style={{ width: screenWidth >= 1360 ? '70%' : '88%', backgroundColor: 'white', }}>\r\n//                 <Select\r\n//                     selectedValue={selectedStockStatusValue}\r\n//                     onValueChange={(value) => {\r\n//                         setSelectedStockStatusValue(value);\r\n//                     }}\r\n//                     flex={3}\r\n//                     accessibilityLabel=\"---\"\r\n//                     placeholder=\"---\"\r\n//                     _selectedItem={{\r\n//                         bg: \"teal.600\",\r\n//                         endIcon: <CheckIcon size=\"5\" />\r\n//                     }}\r\n//                 >\r\n//                     {stockStatusData.map((item) => (\r\n//                         <Select.Item key={item} label={item} value={item} />\r\n//                     ))}\r\n//                 </Select>\r\n//             </View>\r\n\r\n//             <TouchableHighlight\r\n//                 underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n//                 onPress={handleSaveStockStatus}\r\n//                 style={{\r\n//                     backgroundColor: '#16A34A',\r\n//                     borderRadius: 5,\r\n//                     padding: 3,\r\n//                     margin: 2,\r\n//                     alignSelf: 'center',\r\n//                 }}>\r\n//                 <MaterialIcons name='update' color='white' size={22} />\r\n//             </TouchableHighlight>\r\n//         </View>\r\n\r\n\r\n\r\n\r\n//     );\r\n// };\r\n\r\nconst addLogToCollection = async (data) => {\r\n    try {\r\n        const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n        // Add a new document to the \"logs\" collection\r\n        await addDoc(logsCollectionRef, data);\r\n\r\n        console.log('Document added successfully!');\r\n    } catch (error) {\r\n        console.error('Error adding document:', error);\r\n    }\r\n};\r\n\r\n\r\nconst SortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, collectionName, handleFirstModalClose, handleFirstModalOpen }) => {\r\n    const [modalSortOpen, setModalSortOpen] = useState(false);\r\n    const [modalAddOpen, setModalAddOpen] = useState(false);\r\n    const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n    const [modalSave, setModalSave] = useState(false);\r\n    const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n    const [modalData, setModalData] = useState(data);\r\n    const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n    const handleDeleteItemPress = useCallback(\r\n        (item) => {\r\n            setModalData((prevData) => {\r\n                const updatedData = prevData.filter((value) => value !== item);\r\n                return updatedData;\r\n            });\r\n        },\r\n        []\r\n    );\r\n\r\n    // useEffect(() => {\r\n\r\n    //   fetchData();\r\n\r\n    // }, [modalSortOpen]);\r\n\r\n\r\n\r\n    const fetchData = useCallback(async () => {\r\n        const modalDocRef = doc(collection(databaseInit, collectionName), docName);\r\n        const modalDocSnap = await getDoc(modalDocRef);\r\n        if (modalDocSnap.exists()) {\r\n            // setModalData(modalDocSnap.data()?.dataName || []);\r\n            setModalData(modalDocSnap.data()?.[dataName] || []);\r\n        }\r\n    }, [databaseInit, modalData]);\r\n\r\n    // useEffect(() => {\r\n    //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n    //     setModalData(snapshot.data()?.[dataName] || []);\r\n    //   });\r\n\r\n    //   return () => unsubscribe();\r\n    // }, [dataName, databaseInit, docName]);\r\n\r\n    const handleSave = useCallback(async () => {\r\n        setModalSaveLoading(true);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        try {\r\n            await updateDoc(doc(collection(databaseInit, collectionName), docName), { [dataName]: modalData });\r\n            setModalSaveLoading(false);\r\n            setModalSortOpen(true);\r\n            setModalSave(false);\r\n\r\n\r\n            const logData = {\r\n                message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n                    `${title} updated`.toLowerCase(),\r\n                    `\"${title}\" updated`.toLowerCase(),\r\n                    'updated'.toLowerCase(),\r\n                    title.toLowerCase(),\r\n                    nameVariable.text.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n            };\r\n\r\n            addLogToCollection(logData);\r\n\r\n        } catch (error) {\r\n            setModalSaveLoading(false);\r\n            handleModalSaveClose();\r\n            console.error(error);\r\n        }\r\n\r\n\r\n    }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n    const handleSortModalOpen = useCallback(() => {\r\n        setModalIsLoading(true);\r\n        fetchData();\r\n        setModalSortOpen(true);\r\n        // handleFirstModalClose();\r\n    }, [modalSortOpen, modalIsLoading]);\r\n\r\n    const handleSortModalClose = useCallback(async () => {\r\n        setModalSortOpen(false);\r\n        setModalIsLoading(false);\r\n        // handleFirstModalOpen();\r\n    }, [modalSortOpen, modalIsLoading]);\r\n\r\n    // const handleAddTextChange = () => {\r\n    //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n    //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n    // };\r\n\r\n\r\n    const handleModalAddOpen = useCallback(() => {\r\n        setModalAddOpen(true);\r\n        handleSortModalClose();\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, [])\r\n\r\n    const handleModalAddClose = useCallback(() => {\r\n        setModalAddOpen(false);\r\n        handleSortModalOpen();\r\n        textAreaAdd.current?.clear();\r\n    }, [modalAddOpen])\r\n\r\n    const handleModalAddSuccessClose = useCallback(() => {\r\n        setModalAddSuccess(false);\r\n        // setIsLoading(false);\r\n        handleSortModalOpen();\r\n    }, [modalAddSuccess])\r\n\r\n    const handleModalAddSuccessOpen = useCallback(() => {\r\n        setModalAddSuccess(true);\r\n        handleSortModalClose();\r\n        setModalAddOpen(false);\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n    const handleModalSaveOpen = useCallback(() => {\r\n        setModalSave(true);\r\n        setModalSortOpen(false);\r\n        setModalIsLoading(true);\r\n    }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n    const handleModalSaveClose = useCallback(() => {\r\n        setModalSave(false);\r\n        setModalSortOpen(true);\r\n    }, [modalSave, modalSortOpen]);\r\n\r\n    const handleAddSubmit = async () => {\r\n\r\n        const data = textAreaAdd.current?.value;\r\n        const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        if (data !== '') {\r\n\r\n            setModalSaveLoading(true);\r\n\r\n            try {\r\n                const modalCollectionRef = collection(databaseInit, collectionName);\r\n                const modalDocRef = doc(modalCollectionRef, docName);\r\n                await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n                const logData = {\r\n                    message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n                        `${title} added`.toLowerCase(),\r\n                        `\"${title}\" added`.toLowerCase(),\r\n                        'added'.toLowerCase(),\r\n                        title.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                        timeWithMinutesSeconds.toLowerCase(),\r\n                    ],\r\n                };\r\n                addLogToCollection(logData);\r\n                setModalSaveLoading(false);\r\n\r\n                handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n                console.log('Data added to Firestore');\r\n            } catch (error) {\r\n                console.error('Error adding data to Firestore:', error);\r\n                setModalSaveLoading(false);\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Box justifyContent=\"center\" alignItems={'flex-start'} marginRight={1}>\r\n\r\n                {!modalIsLoading ? (\r\n                    <TouchableOpacity onPress={handleSortModalOpen} >\r\n                        <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n                    </TouchableOpacity>\r\n                ) : (\r\n                    <Spinner color=\"white\" size={20} />\r\n                )}\r\n\r\n\r\n            </Box>\r\n\r\n            <Modal\r\n                isOpen={modalSortOpen}\r\n                onClose={handleSortModalClose}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>{headerText}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                        <Box w={'full'} flexDir={'column'}>\r\n                            <Box alignItems={'flex-end'}>\r\n                                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n                            </Box>\r\n\r\n                            <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                                <DraggableFlatList\r\n                                    style={{ alignContent: 'center', flex: 1, }}\r\n                                    data={modalData}\r\n                                    keyExtractor={(item) => item}\r\n                                    renderItem={({ item, drag }) => (\r\n\r\n                                        <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                                            <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n\r\n                                            <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                                            <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                                        </Box>\r\n\r\n                                    )}\r\n                                    onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n                            </Box>\r\n\r\n                        </Box>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalSave}\r\n                onClose={handleModalSaveClose}>\r\n                <Modal.Content >\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Save Order?</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n                        <Text>Are you sure you want to save changes?</Text>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} >\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n                            <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalAddOpen}\r\n                onClose={handleModalAddClose}\r\n                initialFocusRef={textAreaAdd}>\r\n                <Modal.Content >\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Add {title}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n                        <TextArea\r\n                            textAlign={'center'}\r\n                            w={'full'}\r\n                            ref={textAreaAdd}\r\n                            multiline\r\n                            onChangeText={handleAddTextChange}\r\n                            totalLines={4}\r\n                            placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} >\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n            {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n            <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n                <Modal.Content bgColor={'green.100'}>\r\n                    <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n                        <Text textAlign={'center'} color={'#102A43'} bold>\r\n                            😊😎 Success! 😎😊\r\n                        </Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body\r\n                        justifyContent={'center'}\r\n                        alignItems={'center'}\r\n                        bgColor={'green.200'}\r\n                        borderLeftWidth={4}\r\n                        borderLeftColor={'green.600'}\r\n                        margin={5}\r\n                    >\r\n                        <Box flex={1}>\r\n                            <Text color={'green.600'} bold>\r\n                                Added successfully!\r\n                            </Text>\r\n                            <Text color={'green.600'}>\r\n                                Added successfully!\r\n                            </Text>\r\n                        </Box>\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                                Ok\r\n                            </Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\n\r\nconst FreightNavigation = () => {\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const dispatch = useDispatch();\r\n    const [selectedButtonState, setSelectedButtonState] = useState(defaultSelectedButton);\r\n\r\n\r\n    const handlePress = (button) => {\r\n        if (button !== selectedButtonState) {\r\n            dispatch(setLoadingModalVisible(true));\r\n        }\r\n        dispatch(setSelectedButton(button));\r\n        setSelectedButtonState(button);\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center', width: screenWidth >= 960 ? '50%' : '90%' }}>\r\n\r\n            <TouchableOpacity\r\n                onPress={() => handlePress('countries')}\r\n                style={{\r\n                    borderRadius: 5,\r\n                    flex: 1,\r\n                    padding: 10,\r\n                    margin: 10,\r\n                    borderWidth: 1,\r\n                    borderColor: 'white',\r\n                    backgroundColor: selectedButtonState === 'countries' ? '#0642F4' : 'transparent',\r\n                    flexDirection: 'row',\r\n                }}\r\n            >\r\n                <MaterialIcons\r\n                    name=\"flag\" // The icon name from MaterialIcons\r\n                    size={20} // Set the size of the icon\r\n                    color={selectedButtonState === 'countries' ? 'white' : 'black'} // Set the color based on active state\r\n                />\r\n                <Text style={{ color: selectedButtonState === 'countries' ? 'white' : 'black', fontWeight: 'bold', marginLeft: 5, }}>Countries</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n                onPress={() => handlePress('ports')}\r\n                style={{\r\n                    borderRadius: 5,\r\n                    flex: 1,\r\n                    padding: 10,\r\n                    margin: 10,\r\n                    borderWidth: 1,\r\n                    borderColor: 'white',\r\n                    backgroundColor: selectedButtonState === 'ports' ? '#0642F4' : 'transparent',\r\n                    flexDirection: 'row',\r\n                }}\r\n            >\r\n                <MaterialIcons\r\n                    name=\"directions-boat\" // The icon name from MaterialIcons\r\n                    size={20} // Set the size of the icon\r\n                    color={selectedButtonState === 'ports' ? 'white' : 'black'} // Set the color based on active state\r\n                />\r\n                <Text style={{ color: selectedButtonState === 'ports' ? 'white' : 'black', fontWeight: 'bold', marginLeft: 5, }}>Ports</Text>\r\n            </TouchableOpacity>\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectMethod = ({ defaultValue, portCode, page, searchQuery }) => {\r\n    const [selectedMethod, setSelectedMethod] = useState('');\r\n    const methodData = useSelector((state) => state.methodData);\r\n\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updatePortMethod = async (portCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        if (newValue !== '' && newValue !== '__NativeBasePlaceHolder__') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = portCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const methodField = `${formattedCountryCode}.method`;\r\n\r\n            try {\r\n                if (currentValue == selectedMethod) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [methodField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Method Updated: \"${nameVariable.text}\" updated \"${portCode}\" method to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Method Updated: \"${nameVariable.text}\" updated \"${portCode}\" inspection to \"${newValue}\"`.toLowerCase(),\r\n                            'Method'.toLowerCase(),\r\n                            'Method Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            portCode.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Method updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Method updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating method:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedPortCode = portCode.replace(/\\./g, '_');\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const portData = documentSnapshot.data()[formattedPortCode];\r\n                // Make sure to check if portData exists before trying to access its properties\r\n                if (portData && portData.method) {\r\n                    const method = portData.method;\r\n                    setSelectedMethod(method);\r\n                    currentValue = method;\r\n                }\r\n                else {\r\n                    setSelectedMethod('__NativeBasePlaceHolder__');\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: '100%', }}>\r\n\r\n\r\n            <Select\r\n                selectedValue={selectedMethod}\r\n                onValueChange={(value) => {\r\n                    setSelectedMethod(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {methodData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updatePortMethod(portCode, selectedMethod)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectInspectionIsRequired = ({ width, defaultValue, countryCode, page, searchQuery }) => {\r\n    const [selectedInspectionIsRequired, setSelectedInspectionIsRequired] = useState('');\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updateCountryInspection = async (countryCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const inspectionIsRequiredField = `${formattedCountryCode}.inspectionIsRequired`;\r\n\r\n            try {\r\n                if (currentValue == selectedInspectionIsRequired) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [inspectionIsRequiredField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Inspection Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Inspection Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection to \"${newValue}\"`.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Inspection Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Inspection updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Inspection updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.inspectionIsRequired) {\r\n                    const inspectionIsRequired = countryData.inspectionIsRequired;\r\n                    setSelectedInspectionIsRequired(inspectionIsRequired);\r\n                    currentValue = inspectionIsRequired;\r\n\r\n\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: width, }}>\r\n\r\n\r\n            <Select\r\n                selectedValue={selectedInspectionIsRequired}\r\n                onValueChange={(value) => {\r\n                    setSelectedInspectionIsRequired(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {inspectionIsRequiredData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updateCountryInspection(countryCode, selectedInspectionIsRequired)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectInspectionName = ({ width, defaultValue, countryCode, page, searchQuery }) => {\r\n    const [selectedInspectionName, setSelectedInspectionName] = useState('');\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updateCountryInspectionName = async (countryCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const inspectionNameField = `${formattedCountryCode}.inspectionName`;\r\n\r\n            try {\r\n                if (currentValue == selectedInspectionName) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [inspectionNameField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Inspection Name Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection name to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Inspection Name Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection name to \"${newValue}\"`.toLowerCase(),\r\n                            'Inspection Name'.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Inspection Name Updated'.toLowerCase(),\r\n                            'Name'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Inspection Name updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Inspection Name updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.inspectionName) {\r\n                    const inspectionName = countryData.inspectionName;\r\n                    setSelectedInspectionName(inspectionName);\r\n                    currentValue = inspectionName;\r\n\r\n                }\r\n                else {\r\n                    setSelectedInspectionName('__NativeBasePlaceHolder__');\r\n                    currentValue = '__NativeBasePlaceHolder__';\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: width, }}>\r\n            <Select\r\n                selectedValue={selectedInspectionName}\r\n                onValueChange={(value) => {\r\n                    setSelectedInspectionName(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {inspectionNameData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updateCountryInspectionName(countryCode, selectedInspectionName)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\nconst countriesList = [\r\n    \"Zambia\",\r\n    \"D.R.Congo\",\r\n    \"Mozambique\",\r\n    \"Zimbabwe\",\r\n    \"Uganda\",\r\n    \"Tanzania\",\r\n    \"Malawi\",\r\n    \"Burundi\",\r\n    \"Lesotho\",\r\n    \"South Sudan\",\r\n    \"Botswana\",\r\n    \"Kenya\",\r\n    \"Republic of South Africa\",\r\n    \"Djibouti\",\r\n    \"Ethiopia\",\r\n    \"Angola\",\r\n    \"Benin\",\r\n    \"Cameroon\",\r\n    \"Gabon\",\r\n    \"Ghana\",\r\n    \"Guinea\",\r\n    \"Madagascar\",\r\n    \"Mali\",\r\n    \"Namibia\",\r\n    \"Nigeria\",\r\n    \"Rwanda\",\r\n    \"Sierra Leone\",\r\n    \"Sudan\",\r\n    \"Algeria\",\r\n    \"Canary Islands\",\r\n    \"Cape Verde\",\r\n    \"Central African Republic\",\r\n    \"Chad\",\r\n    \"Equatorial Guinea\",\r\n    \"Eritrea\",\r\n    \"Gambia\",\r\n    \"Liberia\",\r\n    \"Mahe\",\r\n    \"Maldives\",\r\n    \"Mauritania\",\r\n    \"Mayotte\",\r\n    \"Morocco\",\r\n    \"Niger\",\r\n    \"Republic of Guinea-Bissau\",\r\n    \"Republic of the Congo\",\r\n    \"Reunion\",\r\n    \"Saint Helena\",\r\n    \"Sao Tome and Principe\",\r\n    \"Seychelles\",\r\n    \"Swaziland\",\r\n    \"Tunisia\",\r\n    \"Afghanistan\",\r\n    \"Albania\",\r\n    \"American Samoa\",\r\n    \"Anguilla\",\r\n    \"Antigua and Barbuda\",\r\n    \"Argentina\",\r\n    \"Armenia\",\r\n    \"Aruba\",\r\n    \"Australia\",\r\n    \"Austria\",\r\n    \"Azerbaijan\",\r\n    \"Bahamas\",\r\n    \"Bahrain\",\r\n    \"Bangladesh\",\r\n    \"Barbados\",\r\n    \"Belgium\",\r\n    \"Belize\",\r\n    \"Bermuda\",\r\n    \"Bhutan\",\r\n    \"Bolivia\",\r\n    \"Bonaire/Netherlands Antilles\",\r\n    \"Brazil\",\r\n    \"British Virgin Islands\",\r\n    \"Brunei Darussalam\",\r\n    \"Bulgaria\",\r\n    \"Burkina Faso\",\r\n    \"Cambodia\",\r\n    \"Canada\",\r\n    \"Cayman Islands\",\r\n    \"Chile\",\r\n    \"Colombia\",\r\n    \"Commonwealth of Dominica\",\r\n    \"Comoros\",\r\n    \"Cook Islands\",\r\n    \"Costa Rica\",\r\n    \"Cote D'Ivoire\",\r\n    \"Croatia\",\r\n    \"Cuba\",\r\n    \"Curacao/Netherlands Antilles\",\r\n    \"Cyprus\",\r\n    \"Czech Republic\",\r\n    \"Denmark\",\r\n    \"Dominican Republic\",\r\n    \"East Timor\",\r\n    \"Ecuador\",\r\n    \"Egypt\",\r\n    \"Estonia\",\r\n    \"Fiji\",\r\n    \"Finland\",\r\n    \"France\",\r\n    \"French Guiana\",\r\n    \"French Polynesia\",\r\n    \"Georgia\",\r\n    \"Germany\",\r\n    \"Greece\",\r\n    \"Grenada\",\r\n    \"Guadeloupe\",\r\n    \"Guatemala\",\r\n    \"Guyana\",\r\n    \"Haiti\",\r\n    \"Honduras\",\r\n    \"Hong Kong\",\r\n    \"Hungary\",\r\n    \"Iceland\",\r\n    \"India\",\r\n    \"Indonesia\",\r\n    \"Iran\",\r\n    \"Iraq\",\r\n    \"Ireland\",\r\n    \"Israel\",\r\n    \"Italy\",\r\n    \"Jamaica\",\r\n    \"Japan\",\r\n    \"Jordan\",\r\n    \"Kazakhstan\",\r\n    \"Kiribati\",\r\n    \"Korea\",\r\n    \"Kuwait\",\r\n    \"Kyrgyzstan\",\r\n    \"LAO PDR\",\r\n    \"Latvia\",\r\n    \"Lebanon\",\r\n    \"Libya\",\r\n    \"Lithuania\",\r\n    \"Luxembourg\",\r\n    \"Macau\",\r\n    \"Malaysia\",\r\n    \"Malta\",\r\n    \"Marshall Islands\",\r\n    \"Martinique\",\r\n    \"Mauritius\",\r\n    \"Mexico\",\r\n    \"Micronesia\",\r\n    \"Moldova\",\r\n    \"Mongolia\",\r\n    \"Montenegro\",\r\n    \"Montserrat\",\r\n    \"Myanmar\",\r\n    \"Nauru\",\r\n    \"Nepal\",\r\n    \"Netherlands\",\r\n    \"Netherlands Antilles\",\r\n    \"New Caledonia\",\r\n    \"New Zealand\",\r\n    \"Niue\",\r\n    \"Norway\",\r\n    \"Oman\",\r\n    \"Pakistan\",\r\n    \"Palau\",\r\n    \"Panama\",\r\n    \"Papua New Guinea\",\r\n    \"Paraguay\",\r\n    \"People's Republic of China\",\r\n    \"Peru\",\r\n    \"Philippines\",\r\n    \"Poland\",\r\n    \"Portugal\",\r\n    \"Puerto Rico\",\r\n    \"Qatar\",\r\n    \"Republic of Belarus\",\r\n    \"Republic of El Salvador\",\r\n    \"Republic of Macedonia\",\r\n    \"Republic of Nicaragua\",\r\n    \"Romania\",\r\n    \"Russian Federation\",\r\n    \"Saba Island\",\r\n    \"Saint Eustatius\",\r\n    \"Saint Kitts And Nevis\",\r\n    \"Samoa\",\r\n    \"Saudi Arabia\",\r\n    \"Senegal\",\r\n    \"Serbia\",\r\n    \"Singapore\",\r\n    \"Slovak Republic\",\r\n    \"Slovenia\",\r\n    \"Solomon Islands\",\r\n    \"Somalia\",\r\n    \"Spain\",\r\n    \"Sri Lanka\",\r\n    \"St. Barthelemy\",\r\n    \"St. Croix\",\r\n    \"St. Lucia\",\r\n    \"St. Maarten\",\r\n    \"St. Thomas\",\r\n    \"St. Vincent\",\r\n    \"Suriname\",\r\n    \"Sweden\",\r\n    \"Switzerland\",\r\n    \"Syria\",\r\n    \"Taiwan\",\r\n    \"Tajikistan\",\r\n    \"Thailand\",\r\n    \"Togo\",\r\n    \"Tonga\",\r\n    \"Tortola\",\r\n    \"Trinidad and Tobago\",\r\n    \"Turkey\",\r\n    \"Turkmenistan\",\r\n    \"Turks and Caicos Islands\",\r\n    \"Tuvalu\",\r\n    \"UAE\",\r\n    \"Ukraine\",\r\n    \"United Kingdom\",\r\n    \"Uruguay\",\r\n    \"US Virgin Islands\",\r\n    \"USA\",\r\n    \"Uzbekistan\",\r\n    \"Vanuatu\",\r\n    \"Venezuela\",\r\n    \"Vietnam\",\r\n    \"Wallis et Futuna\",\r\n    \"Yemen\",\r\n    \"Somaliland\",\r\n\r\n];\r\n\r\n\r\nconst addPort = async (portName, country, sortOrder) => {\r\n    const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n    // New country data\r\n    const newCountryData = {\r\n        [portName]: {\r\n            country: country,\r\n            sortOrder: sortOrder,\r\n            method: '',\r\n        }\r\n    };\r\n\r\n    // Set document with merge option\r\n    try {\r\n        await setDoc(docRef, newCountryData, { merge: true });\r\n        console.log(\"Country added/updated successfully!\");\r\n\r\n    } catch (error) {\r\n        console.error(\"Error adding/updating country: \", error);\r\n    }\r\n};\r\n\r\n\r\nconst addCountry = async (countryName, inspectionIsRequired, inspectionName, sortOrder) => {\r\n    const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n    // New country data\r\n    const newCountryData = {\r\n        [countryName]: {\r\n            inspectionIsRequired: inspectionIsRequired,\r\n            inspectionName: inspectionName,\r\n            sortOrder: sortOrder\r\n        }\r\n    };\r\n\r\n    // Set document with merge option\r\n    try {\r\n        await setDoc(docRef, newCountryData, { merge: true });\r\n        console.log(\"Country added/updated successfully!\");\r\n\r\n    } catch (error) {\r\n        console.error(\"Error adding/updating country: \", error);\r\n    }\r\n};\r\n\r\nconst AddCountryModal = ({ handleAddCountryModalClose }) => {\r\n\r\n    const addCountryModalVisible = useSelector((state) => state.addCountryModalVisible);\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const inputCountryText = useRef(null);\r\n    const textAreaAddInspectionIsRequired = useRef(null);\r\n    const textAreaAddInspectionName = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    const [addButtonLoading, setAddButtonLoading] = useState(false);\r\n\r\n    const handleAddInspectionIsRequiredTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionIsRequired.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionIsRequired.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddInspectionNameTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionName.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionName.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddButton = async () => {\r\n        setAddButtonLoading(true);\r\n        const countryCode = inputCountryText.current?.value;\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        if (inputCountryText.current?.value !== '') {\r\n            try {\r\n                await addCountry(formattedCountryCode, 'Not-Required', '', 999);\r\n                const logData = {\r\n                    message: `Country Added: \"${nameVariable.text}\" added country \"${countryCode}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Country Added: \"${nameVariable.text}\" added country \"${countryCode}\" for Freight.`.toLowerCase(),\r\n                        'Country'.toLowerCase(),\r\n                        'Country Added'.toLowerCase(),\r\n                        'Added'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        countryCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Country added successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                dispatch(setAddCountryModalVisible(false));\r\n                setAddButtonLoading(false);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n\r\n        else {\r\n            setAddButtonLoading(false);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleFirstModalClose = () => {\r\n        dispatch(setAddCountryModalVisible(false));\r\n\r\n    };\r\n    const handleFirstModalOpen = () => {\r\n        dispatch(setAddCountryModalVisible(true));\r\n    }\r\n\r\n    const filterInput = (inputRef) => {\r\n        const currentValue = inputRef.current.value;\r\n        const filteredValue = currentValue.replace(/[^a-zA-Z0-9. ]/g, '');\r\n        if (currentValue !== filteredValue) {\r\n            inputRef.current.setNativeProps({ text: filteredValue });\r\n        }\r\n    };\r\n    return (\r\n        <Modal\r\n            isOpen={addCountryModalVisible}\r\n            onClose={() => {\r\n                handleAddCountryModalClose();\r\n                inputCountryText.current.value = '';\r\n            }}\r\n            size={'md'}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header style={{ backgroundColor: '#7B9CFF', }}><Text color={'white'} fontSize={20} bold>Add Country</Text></Modal.Header>\r\n                <Modal.Body >\r\n                    <View style={{ marginVertical: 5, }}>\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Country</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputCountryText}\r\n                            onChangeText={() => filterInput(inputCountryText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Country' />\r\n\r\n                    </View>\r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"solid\" space=\"2\">\r\n                        <Button colorScheme={'gray'} onPress={() => {\r\n                            handleAddCountryModalClose();\r\n                            inputCountryText.current.value = '';\r\n                        }}>Cancel</Button>\r\n                        {addButtonLoading ?\r\n                            (<Spinner size=\"lg\" color={'#16A34A'} />) :\r\n                            (<Button colorScheme={'success'} onPress={handleAddButton}>Add</Button>)\r\n                        }\r\n\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst NavigatePage = () => {\r\n    const selectedButton = useSelector((state) => state.selectedButton);\r\n\r\n    if (selectedButton === 'countries') {\r\n        return <CountriesTable />;\r\n    }\r\n    if (selectedButton === 'ports') {\r\n        return <PortsTable />;\r\n    }\r\n};\r\n\r\n\r\nconst AddPortsForCountriesModal = ({ handleAddPortsForCountriesModalClose, handleAddPortsForCountriesModalOpen }) => {\r\n\r\n    const addPortsForCountriesModalVisible = useSelector((state) => state.addPortsForCountriesModalVisible);\r\n    const countryPortsData = useSelector((state) => state.countryPortsData);\r\n    const [data, setData] = useState([]);\r\n    const [modalSortOpen, setModalSortOpen] = useState(false);\r\n    const [modalAddOpen, setModalAddOpen] = useState(false);\r\n    const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n    const [modalSave, setModalSave] = useState(false);\r\n    const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n    const [modalIsLoading, setModalIsLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = selectedCountry.replace(/\\./g, '_');\r\n\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.nearestPorts) {\r\n                    const nearestPorts = countryData.nearestPorts;\r\n                    setData(nearestPorts);\r\n\r\n                }\r\n                else {\r\n                    setData([]);\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [addPortsForCountriesModalVisible]);\r\n\r\n    const handleDeleteItemPress = useCallback(\r\n        (item) => {\r\n            setData((prevData) => {\r\n                const updatedData = prevData.filter((value) => value !== item);\r\n                return updatedData;\r\n            });\r\n        },\r\n        []\r\n    );\r\n\r\n    const handleModalAddOpen = useCallback(() => {\r\n        setModalAddOpen(true);\r\n        handleAddPortsForCountriesModalClose();\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, []);\r\n\r\n    const handleModalAddClose = useCallback(() => {\r\n        setModalAddOpen(false);\r\n        dispatch(setAddPortsForCountriesModalVisible(true));\r\n    }, []);\r\n\r\n    const addPortForCountryField = async (newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        setModalSaveLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n\r\n        if (selectedPortForCountry.ports !== '') {\r\n            const formattedCountryCode = selectedCountry.replace(/\\./g, '_');\r\n            const nearestPortsField = `${formattedCountryCode}.nearestPorts`;\r\n\r\n            try {\r\n                // Fetch the current nearestPorts array from Firestore\r\n                const docSnap = await getDoc(documentRef);\r\n                if (docSnap.exists()) {\r\n                    const nearestPorts = docSnap.data()[formattedCountryCode]?.nearestPorts || [];\r\n\r\n                    // Check if selectedPortForCountry is already in the nearestPorts array\r\n                    if (!nearestPorts.includes(selectedPortForCountry.ports)) {\r\n                        // Update the document with the new value\r\n                        await updateDoc(documentRef, {\r\n                            [nearestPortsField]: [...nearestPorts, selectedPortForCountry.ports]\r\n                        });\r\n\r\n                        const logData = {\r\n                            message: `Nearest Ports Added: \"${nameVariable.text}\" added \"${selectedPortForCountry.ports}\" port to \"${selectedCountry}\"`,\r\n                            timestamp: formattedTime,\r\n                            colorScheme: true,\r\n                            keywords: [\r\n                                formattedTime.toLowerCase(),\r\n                                `Nearest Ports Added: \"${nameVariable.text}\" added \"${selectedPortForCountry.ports}\" port to \"${selectedCountry}\"`.toLowerCase(),\r\n                                'Nearest Ports'.toLowerCase(),\r\n                                'Nearest'.toLowerCase(),\r\n                                'Nearest Ports Added'.toLowerCase(),\r\n                                'Ports'.toLowerCase(),\r\n                                'Added'.toLowerCase(),\r\n                                selectedPortForCountry.ports.toLowerCase(),\r\n                                selectedCountry.toLowerCase(),\r\n                                nameVariable.text.toLowerCase(),\r\n                                year.toLowerCase(),\r\n                                month.toLowerCase(),\r\n                                monthWithDay.toLowerCase(),\r\n                                date.toLowerCase(),\r\n                                day.toLowerCase(),\r\n                                time.toLowerCase(),\r\n                            ],\r\n                        };\r\n                        addLogToCollection(logData);\r\n                        handleAddPortsForCountriesModalClose();\r\n                        toast.show({\r\n                            render: () => {\r\n                                return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                    <Text style={{ color: 'white' }}>Nearest Ports added successfully</Text>\r\n                                </View>;\r\n                            }\r\n                        })\r\n                        console.log('Nearest Ports added successfully');\r\n                        setModalSaveLoading(false);\r\n                        handleModalAddClose();\r\n                        // ...\r\n                    } else {\r\n                        // Handle the case where the port already exists\r\n                        console.log('Port already exists in the nearest ports list');\r\n                        setModalSaveLoading(false);\r\n\r\n                        // You can show a message to the user here if needed\r\n                    }\r\n                } else {\r\n                    console.log('No such document!');\r\n                    setModalSaveLoading(false);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n                setModalSaveLoading(false);\r\n                // Error handling...\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.log(newValue);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const updateCountryPortsField = async (newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        setModalSaveLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = selectedCountry.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const nearestPortsField = `${formattedCountryCode}.nearestPorts`;\r\n\r\n            try {\r\n\r\n\r\n                await updateDoc(documentRef, {\r\n                    [nearestPortsField]: newValue\r\n                });\r\n\r\n                dispatch(setLoadingModalVisible(false));\r\n                const logData = {\r\n                    message: `Nearest Ports Updated: \"${nameVariable.text}\" updated \"${selectedCountry}\" nearest ports`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Nearest Ports Updated: \"${nameVariable.text}\" updated \"${selectedCountry}\" nearest ports`.toLowerCase(),\r\n                        'Nearest Ports'.toLowerCase(),\r\n                        'Nearest'.toLowerCase(),\r\n                        'Nearest Ports Updated'.toLowerCase(),\r\n                        'Ports'.toLowerCase(),\r\n                        'Updated'.toLowerCase(),\r\n                        selectedCountry.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                addLogToCollection(logData);\r\n                handleAddPortsForCountriesModalClose();\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Nearest Ports updated successfully</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                console.log('Nearest Ports updated successfully');\r\n                setModalSaveLoading(false);\r\n\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n                setModalSaveLoading(false);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.log(newValue);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <><Modal\r\n            isOpen={addPortsForCountriesModalVisible}\r\n            onClose={handleAddPortsForCountriesModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header borderBottomWidth={0}>\r\n                    <Text color={'#102A43'} bold>Manage ports for {selectedCountry}</Text>\r\n                </Modal.Header>\r\n                <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                    <View style={{ width: '100%' }}>\r\n                        <View style={{ alignItems: 'flex-end', }}>\r\n                            <TouchableOpacity onPress={handleModalAddOpen}><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></TouchableOpacity>\r\n                        </View>\r\n                        <View style={{ flex: 1, borderWidth: 1, borderColor: '#102A43', borderRadius: 5, }}>\r\n                            <DraggableFlatList\r\n                                style={{ alignContent: 'center', flex: 1, }}\r\n                                data={data}\r\n                                keyExtractor={(item) => item}\r\n                                renderItem={({ item, drag }) => (\r\n\r\n                                    <View style={{\r\n                                        flex: 1,\r\n                                        backgroundColor: 'rgba(16,42,67, 0.5)',\r\n                                        borderBottomWidth: 1,\r\n                                        borderBottomColor: '#A8A29E',\r\n                                        flexDirection: 'row',\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center',\r\n                                    }}>\r\n                                        <TouchableOpacity onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></TouchableOpacity>\r\n                                        <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                                        <TouchableOpacity onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></TouchableOpacity>\r\n                                    </View>\r\n\r\n                                )}\r\n                                onDragEnd={useCallback(({ data }) => setData(data), [])} />\r\n\r\n\r\n                        </View>\r\n\r\n                    </View>\r\n                </Modal.Body>\r\n                <Modal.Footer borderTopWidth={0}>\r\n                    <HStack space={5} flex={1}>\r\n                        <Button onPress={handleAddPortsForCountriesModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                        {modalSaveLoading ?\r\n                            (<Button flex={1} size={'sm'} borderRadius={5} colorScheme={'success'} disabled>\r\n                                <Spinner size={18} color={'white'} flex={1} borderRadius={5} />\r\n                            </Button>) :\r\n                            (<Button onPress={() => updateCountryPortsField(data)} flex={1} size={'sm'} borderRadius={5} colorScheme={'success'}>Save</Button>)\r\n                        }\r\n\r\n                    </HStack>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n            <Modal\r\n                isOpen={modalAddOpen}\r\n                onClose={handleModalAddClose}\r\n            // initialFocusRef={textAreaAdd}\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Add Ports for {selectedCountry}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                        <SearchablePortDropdown modalAddOpen={modalAddOpen} />\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={() => addPortForCountryField()} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5} colorScheme={'success'}>Add</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal></>\r\n    );\r\n\r\n}\r\n\r\nconst DeleteCountryModal = ({ handleDeleteCountryModalClose }) => {\r\n    const deleteCountryModalVisible = useSelector((state) => state.deleteCountryModalVisible);\r\n    const [buttonLoading, setButtonLoading] = useState(false);\r\n\r\n    const handleDeleteCountry = async () => {\r\n        setButtonLoading(true);\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        const formattedFieldCode = selectedCountry.replace(/\\./g, '_');\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        updateDoc(documentRef, {\r\n            [formattedFieldCode]: deleteField()\r\n        })\r\n            .then(() => {\r\n                console.log('Field deleted successfully');\r\n                handleDeleteCountryModalClose();\r\n                setButtonLoading(false);\r\n                const logData = {\r\n                    message: `Country Deleted: \"${nameVariable.text}\" deleted country \"${selectedCountry}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: false,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Country Deleted: \"${nameVariable.text}\" deleted country \"${selectedCountry}\" for Freight.`.toLowerCase(),\r\n                        'Country'.toLowerCase(),\r\n                        'Country Deleted'.toLowerCase(),\r\n                        'Deleted'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        selectedCountry.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting field: ', error);\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal isOpen={deleteCountryModalVisible} onClose={handleDeleteCountryModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header>Delete Country?</Modal.Header>\r\n                <Modal.Body>\r\n                    Are you sure you want to delete the selected country?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        <TouchableOpacity\r\n                            style={{ flex: 1, backgroundColor: '#525252', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            onPress={handleDeleteCountryModalClose}\r\n                        >\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }}>No</Text>\r\n                        </TouchableOpacity>\r\n                        {buttonLoading ?\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            ><Spinner size={18} color={'white'} />\r\n                            </TouchableOpacity>) :\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                                onPress={handleDeleteCountry}\r\n                            >\r\n                                <Text style={{ color: 'white', alignSelf: 'center', }}>Yes</Text>\r\n                            </TouchableOpacity>)\r\n                        }\r\n\r\n\r\n                    </View>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst CountriesTable = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const optionsPerPage = [10, 20, 50];\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const [data, setData] = useState([]); // This will hold all the countries data   \r\n    const [page, setPage] = useState(0);\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const inputSearchRef = useRef(null);\r\n    const inputSortOrder = useRef([]);\r\n    const toast = useToast();\r\n    const textAreaAddInspectionIsRequired = useRef(null);\r\n    const textAreaAddInspectionName = useRef(null);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter((item) =>\r\n            item.country.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.inspectionName.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.inspectionIsRequired.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.sortOrder.toString().includes(searchQuery)\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce(() => {\r\n        setSearchQuery(inputSearchRef.current?.value);\r\n    }, 50);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    // useEffect(() => {\r\n    //     const addCountriesToFirestore = async () => {\r\n    //         // Create a new list with dots replaced by underscores\r\n    //         const sanitizedCountriesList = countriesList.map(country =>\r\n    //             country.replace(/\\./g, '_')\r\n    //         );\r\n\r\n    //         for (const [index, country] of sanitizedCountriesList.entries()) {\r\n    //             // The index of an array is zero-based, to make it one-based add 1\r\n    //             // (If you really need a one-based index, otherwise just use index)\r\n    //             const sortOrder = index;\r\n    //             try {\r\n    //                 await addCountry(country, 'Not-Required', '', sortOrder);\r\n    //             } catch (error) {\r\n    //                 console.error(`Error adding country: ${country}`, error);\r\n    //                 // Optionally handle the error by stopping the loop, or continue to the next iteration\r\n    //                 // break; // Stop the loop if an error occurs\r\n    //                 // continue; // Skip to the next iteration\r\n    //             }\r\n    //             // Optionally add a delay here if necessary\r\n    //             // await new Promise(resolve => setTimeout(resolve, 1000)); // 1 second delay\r\n    //         }\r\n    //     };\r\n\r\n    //     addCountriesToFirestore();\r\n    // }, []);\r\n    const handleAddInspectionNameTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionName.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionName.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddInspectionIsRequiredTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionIsRequired.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionIsRequired.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map(key => ({\r\n                        country: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n                setFilteredData(formattedData);\r\n                dispatch(setLoadingModalVisible(false));\r\n            } else {\r\n                console.log(\"No such document!\");\r\n\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching countries: \", error);\r\n\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n\r\n    const handleAddCountryModalOpen = () => {\r\n\r\n        dispatch(setAddCountryModalVisible(true));\r\n\r\n    }\r\n\r\n    const handleAddCountryModalClose = () => {\r\n\r\n        dispatch(setAddCountryModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n    const handleAddPortsForCountriesModalOpen = (nearestPorts, country) => {\r\n\r\n        dispatch(setAddPortsForCountriesModalVisible(true));\r\n        dispatch(setCountryPortsData(nearestPorts));\r\n        // setSelectedCountry(selectedCountry);\r\n        selectedCountry = country;\r\n    }\r\n\r\n\r\n    const handleAddPortsForCountriesModalClose = () => {\r\n\r\n        dispatch(setAddPortsForCountriesModalVisible(false));\r\n    }\r\n\r\n    useEffect(() => {\r\n        paginatedData.forEach(item => {\r\n            inputSortOrder.current[item.country].value = item.sortOrder ? item.sortOrder : 0;\r\n        });\r\n        // setInputMemoValues(initialValues);\r\n\r\n    }, [paginatedData, screenWidth]); // Run this effect when 'items' changes\r\n    // Now, to update a specific field\r\n\r\n    const updateCountrySortOrder = async (countryCode, newValue, inputRef) => {\r\n        // Specify the document reference\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const sortOrderField = `${formattedCountryCode}.sortOrder`;\r\n\r\n            try {\r\n                // Perform the update\r\n                await updateDoc(documentRef, {\r\n                    [sortOrderField]: newValue\r\n                });\r\n\r\n\r\n\r\n                const logData = {\r\n                    message: `Sort Order Updated: \"${nameVariable.text}\" updated \"${countryCode}\" sort order to \"${newValue}\".`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Sort Order Updated: \"${nameVariable.text}\" updated \"${countryCode}\" sort order to \"${newValue}\"`.toLowerCase(),\r\n                        'Sort'.toLowerCase(),\r\n                        'Sort Order'.toLowerCase(),\r\n                        'Sort Order Updated'.toLowerCase(),\r\n                        'Order Updated'.toLowerCase(),\r\n                        'Order'.toLowerCase(),\r\n                        'Updated'.toLowerCase(),\r\n                        countryCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Sort order updated successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                addLogToCollection(logData);\r\n                dispatch(setLoadingModalVisible(false));\r\n                console.log('Sort order updated successfully');\r\n            } catch (error) {\r\n                console.error('Error updating sort order:', error);\r\n\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n    // Call the function to update the field\r\n\r\n\r\n\r\n\r\n    const handleSortOrderTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 3);\r\n\r\n        inputSortOrder.current[item.country].value = numericValue;\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleDeleteCountryModalOpen = (selectedValue) => {\r\n\r\n        dispatch(setDeleteCountryModalVisible(true));\r\n        selectedCountry = selectedValue;\r\n\r\n    }\r\n\r\n    const handleDeleteCountryModalClose = () => {\r\n\r\n        dispatch(setDeleteCountryModalVisible(false));\r\n\r\n    }\r\n\r\n    const handleUpdateInsurance = async (newValue, currentValue, countryCode) => {\r\n\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const insuranceField = `${formattedCountryCode}.insurance`;\r\n\r\n            try {\r\n                if (currentValue == newValue) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [insuranceField]: newValue,\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Insurance Updated: \"${nameVariable.text}\" updated \"${countryCode}\" insurance to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Insurance Updated: \"${nameVariable.text}\" updated \"${countryCode}\" insurance to \"${newValue}\"`.toLowerCase(),\r\n                            'Insurance'.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Insurance Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            newValue.toString().toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Insurance updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Insurance updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {screenWidth >= 1280 ? (\r\n                <View style={{ flex: 1, }}>\r\n                    {/* Search Bar */}\r\n                    <View style={{ padding: 10 }}>\r\n                        <TextInput\r\n                            ref={inputSearchRef}\r\n                            onSubmitEditing={handleSearch}\r\n                            style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                            placeholder='Search'\r\n                            returnKeyType='search'\r\n                            autoCapitalize='none'\r\n                        />\r\n                    </View>\r\n\r\n                    {/* Add Country Button */}\r\n                    <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                        <TouchableOpacity\r\n                            onPress={handleAddCountryModalOpen}\r\n                            style={{\r\n                                borderRadius: 5,\r\n                                padding: 10,\r\n                                borderWidth: 1,\r\n                                borderColor: 'white',\r\n                                backgroundColor: '#16A34A',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                            <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Country</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    {/* Table Headers */}\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: '#E4E4E7',\r\n                            backgroundColor: '#0642F4',\r\n                            padding: 10,\r\n                            borderRadius: 5,\r\n                            marginTop: 10,\r\n                        }}\r\n                    >\r\n                        <View style={{ flex: 1, padding: 2, }}>\r\n                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, }}>\r\n                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, flexDirection: 'row', }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='InspectionIsRequiredDoc'\r\n                                handleAddTextChange={handleAddInspectionIsRequiredTextChange}\r\n                                textAreaAdd={textAreaAddInspectionIsRequired}\r\n                                title='Inspection'\r\n                                dataName={'inspectionIsRequiredData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Inspection\"\r\n                                data={inspectionIsRequiredData}\r\n                            />\r\n                            <Text flex={1} style={{ color: 'white', }} bold>Inspection</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, flexDirection: 'row', }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='InspectionNameDoc'\r\n                                handleAddTextChange={handleAddInspectionNameTextChange}\r\n                                textAreaAdd={textAreaAddInspectionName}\r\n                                title='Inspection Name'\r\n                                dataName={'inspectionNameData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Inspection\"\r\n                                data={inspectionNameData}\r\n                            />\r\n                            <Text style={{ color: 'white', }} bold>Inspection Name</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }} bold>Insurance</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }} bold>Nearest Port</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                        {paginatedData.map((item, index) => (\r\n                            <View\r\n                                key={index}\r\n                                style={{\r\n                                    flex: 1,\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'space-between',\r\n                                    alignItems: 'center',\r\n                                    borderBottomWidth: 1,\r\n                                    borderBottomColor: '#E4E4E7',\r\n                                    backgroundColor: '#BFDBFE',\r\n                                    paddingVertical: 10,\r\n                                }}>\r\n                                <Text style={{ flex: 1, marginHorizontal: 5 }} selectable>{item.country}</Text>\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 5, }}>\r\n                                    {/* <Text style={{ borderTopLeftRadius: 5, borderBottomLeftRadius: 5, alignSelf: 'center', backgroundColor: 'white', padding: 8 }}>{item.sortOrder}→</Text> */}\r\n                                    <TextInput\r\n                                        ref={(ref) => (inputSortOrder.current[item.country] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '20%', backgroundColor: 'white', borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                        onSubmitEditing={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                        onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n\r\n                                </View>\r\n                                {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <SelectInspectionIsRequired width={'70%'} defaultValue={item.inspectionIsRequired} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n\r\n                                </View>\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <SelectInspectionName width={'70%'} defaultValue={item.inspectionName} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, marginHorizontal: 5, justifyContent: 'center', alignItems: 'center', }}>\r\n                                    <BouncyCheckbox\r\n                                        size={25}\r\n                                        fillColor=\"#0642F4\"\r\n                                        unfillColor=\"#FFFFFF\"\r\n                                        innerIconStyle={{ borderWidth: 2 }}\r\n                                        textStyle={{ fontFamily: \"JosefinSans-Regular\" }}\r\n                                        isChecked={item.insurance ? item.insurance : false}\r\n                                        onPress={(isChecked) => handleUpdateInsurance(isChecked, item.insurance ? item.insurance : false, item.country)}\r\n                                    />\r\n                                </View>\r\n                                <View style={{ flexDirection: 'row', flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <TouchableOpacity\r\n                                        onPress={() => handleAddPortsForCountriesModalOpen(item.nearestPorts ? item.nearestPorts : [], item.country)}\r\n                                        style={{ flex: 1, backgroundColor: '#0891B2', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}\r\n                                    >\r\n                                        <MaterialIcons\r\n                                            name=\"directions-boat\" // The icon name from MaterialIcons\r\n                                            size={20} // Set the size of the icon\r\n                                            color={'white'} // Set the color based on active state\r\n                                        />\r\n                                        <Text style={{ alignSelf: 'center', color: 'white', marginLeft: 3, }}>View Ports</Text>\r\n                                    </TouchableOpacity>\r\n                                    {/* <TouchableOpacity style={{ flex: 1 }}>\r\n                                <Text>Add Ports</Text>\r\n                            </TouchableOpacity> */}\r\n                                </View>\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => handleDeleteCountryModalOpen(item.country)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#DC2626',\r\n                                                borderRadius: 5,\r\n                                                padding: 10,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <AntDesign name='delete' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n                                {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                            </View>\r\n                        ))}\r\n                        <DataTable.Pagination\r\n                            page={page}\r\n                            numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                            onPageChange={(page) => setPage(page)}\r\n                            label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                            optionsPerPage={optionsPerPage}\r\n                            itemsPerPage={itemsPerPage}\r\n                            setItemsPerPage={setItemsPerPage}\r\n                            showFastPagination\r\n                            optionsLabel={'Rows per page'}\r\n                        />\r\n                    </DataTable>\r\n                    <AddCountryModal handleAddCountryModalClose={handleAddCountryModalClose} />\r\n                    <AddPortsForCountriesModal handleAddPortsForCountriesModalClose={handleAddPortsForCountriesModalClose} handleAddPortsForCountriesModalOpen={handleAddPortsForCountriesModalOpen} />\r\n                    <DeleteCountryModal handleDeleteCountryModalClose={handleDeleteCountryModalClose} />\r\n                </View>\r\n            ) :\r\n\r\n                (\r\n                    //Countries Table Mobile View\r\n                    <View style={{ flex: 1, }}>\r\n                        {/* Search Bar */}\r\n                        <View style={{ padding: 10 }}>\r\n                            <TextInput\r\n                                ref={inputSearchRef}\r\n                                onSubmitEditing={handleSearch}\r\n                                style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                                placeholder='Search'\r\n                                returnKeyType='search'\r\n                                autoCapitalize='none'\r\n                            />\r\n                        </View>\r\n\r\n                        <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                            <TouchableOpacity\r\n                                onPress={handleAddCountryModalOpen}\r\n                                style={{\r\n                                    borderRadius: 5,\r\n                                    padding: 10,\r\n                                    borderWidth: 1,\r\n                                    borderColor: 'white',\r\n                                    backgroundColor: '#16A34A',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                                <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Country</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n\r\n                        {/* Table Headers */}\r\n\r\n\r\n                        <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                            {paginatedData.map((item, index) => (\r\n                                <View\r\n                                    key={index}\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'column',\r\n                                        borderWidth: 1,\r\n                                        borderColor: '#E4E4E7',\r\n                                        backgroundColor: '#BFDBFE',\r\n                                        margin: 10,\r\n                                    }}>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <Text selectable style={{ marginLeft: 3 }}>{item.country}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            {/* <Text style={{ borderTopLeftRadius: 5, borderBottomLeftRadius: 5, alignSelf: 'center', backgroundColor: 'white', padding: 8 }}>{item.sortOrder}→</Text> */}\r\n                                            <TextInput\r\n                                                ref={(ref) => (inputSortOrder.current[item.country] = ref)}\r\n                                                style={{ outlineStyle: 'none', padding: 5, width: '100%', backgroundColor: 'white', borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                onSubmitEditing={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                                onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                            />\r\n                                            <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                <TouchableHighlight\r\n                                                    onPress={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                                    underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                    style={{\r\n                                                        backgroundColor: '#16A34A',\r\n                                                        borderRadius: 5,\r\n                                                        padding: 5,\r\n                                                        margin: 2,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    <MaterialIcons name='update' color='white' size={22} />\r\n                                                </TouchableHighlight>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Inspection</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <SelectInspectionIsRequired width={'100%'} defaultValue={item.inspectionIsRequired} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Inspection Name</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <SelectInspectionName width={'100%'} defaultValue={item.inspectionName} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Insurance</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <BouncyCheckbox\r\n                                                size={25}\r\n                                                fillColor=\"#0642F4\"\r\n                                                unfillColor=\"#FFFFFF\"\r\n                                                innerIconStyle={{ borderWidth: 2 }}\r\n                                                textStyle={{ fontFamily: \"JosefinSans-Regular\" }}\r\n                                                isChecked={item.insurance ? item.insurance : false}\r\n                                                onPress={(isChecked) => handleUpdateInsurance(isChecked, item.insurance ? item.insurance : false, item.country)}\r\n                                            />\r\n                                        </View>\r\n                                    </View>\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Nearest Port</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flexDirection: 'row', flex: 1, marginHorizontal: 5 }}>\r\n                                                <TouchableOpacity\r\n                                                    onPress={() => handleAddPortsForCountriesModalOpen(item.nearestPorts ? item.nearestPorts : [], item.country)}\r\n                                                    style={{ flex: 1, backgroundColor: '#0891B2', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}\r\n                                                >\r\n                                                    <MaterialIcons\r\n                                                        name=\"directions-boat\" // The icon name from MaterialIcons\r\n                                                        size={20} // Set the size of the icon\r\n                                                        color={'white'} // Set the color based on active state\r\n                                                    />\r\n                                                    <Text style={{ alignSelf: 'center', color: 'white', marginLeft: 3, }}>View Ports</Text>\r\n                                                </TouchableOpacity>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n\r\n                                                <View style={{ flex: 1, borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => handleDeleteCountryModalOpen(item.country)}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 6, }}>\r\n                                                        <AntDesign name='delete' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                </View>\r\n                            ))}\r\n                            <DataTable.Pagination\r\n                                page={page}\r\n                                numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                onPageChange={(page) => setPage(page)}\r\n                                label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                optionsPerPage={optionsPerPage}\r\n                                itemsPerPage={itemsPerPage}\r\n                                setItemsPerPage={setItemsPerPage}\r\n                                showFastPagination\r\n                                optionsLabel={'Rows per page'}\r\n                            />\r\n                        </DataTable>\r\n                        <AddCountryModal handleAddCountryModalClose={handleAddCountryModalClose} />\r\n                        <AddPortsForCountriesModal handleAddPortsForCountriesModalClose={handleAddPortsForCountriesModalClose} handleAddPortsForCountriesModalOpen={handleAddPortsForCountriesModalOpen} />\r\n                        <DeleteCountryModal handleDeleteCountryModalClose={handleDeleteCountryModalClose} />\r\n                    </View>\r\n                )}\r\n\r\n\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst portsList = {\r\n    \"Dar es Salaam\": { country: \"Tanzania\" },\r\n    \"Durban\": { country: \"Republic of South Africa\" },\r\n    \"Maputo\": { country: \"Mozambique\" },\r\n    \"Abidjan\": { country: \"Cote D'Ivoire\" },\r\n    \"Mombasa\": { country: \"Kenya\" },\r\n    \"Lusaka\": { country: \"Zambia\" },\r\n    \"Matadi\": { country: \"D.R. Congo\" },\r\n    \"Zanzibar\": { country: \"Tanzania\" },\r\n    \"St. John's\": { country: \"Antigua and Barbuda\" },\r\n    \"Aarhus\": { country: \"Denmark\" },\r\n    \"Abadan\": { country: \"Iran\" },\r\n    \"Abu Dhabi\": { country: \"United Arab Emirates\" },\r\n    \"Acapulco\": { country: \"Mexico\" },\r\n    \"Adelaide\": { country: \"Australia\" },\r\n    \"Aden\": { country: \"Yemen\" },\r\n    \"Al Khobar\": { country: \"Saudi Arabia\" },\r\n    \"Al Ladhiqiyah\": { country: \"Syria\" },\r\n    \"Al Mukalla\": { country: \"Yemen\" },\r\n    \"Al Qusayr\": { country: \"Egypt\" },\r\n    \"Al Ruwais\": { country: \"Qatar\" },\r\n    \"Alexandria\": { country: \"Egypt\" },\r\n    \"Algiers\": { country: \"Algeria\" },\r\n    \"Antwerp\": { country: \"Belgium\" },\r\n    \"Apia\": { country: \"Samoa\" },\r\n    \"Aqaba\": { country: \"Jordan\" },\r\n    \"Arwad\": { country: \"Syria\" },\r\n    \"As Salif\": { country: \"Yemen\" },\r\n    \"Ash Shihr\": { country: \"Yemen\" },\r\n    \"Ashdod\": { country: \"Israel\" },\r\n    \"Ashgabat\": { country: \"Turkmenistan\" },\r\n    \"Ashkelon\": { country: \"Israel\" },\r\n    \"Assab\": { country: \"Eritrea\" },\r\n    \"Assumption Island\": { country: \"Seychelles\" },\r\n    \"Asunción\": { country: \"Paraguay\" },\r\n    \"Auckland\": { country: \"New Zealand\" },\r\n    \"Avarua\": { country: \"Cook Islands\" },\r\n    \"Balboa\": { country: \"Panama\" },\r\n    \"Balhaf\": { country: \"Yemen\" },\r\n    \"Banana\": { country: \"D.R.Congo\" },\r\n    \"Bandar Abbas\": { country: \"Iran\" },\r\n    \"Bandar Seri Begawan\": { country: \"Brunei Darussalam\" },\r\n    \"Bangkok\": { country: \"Thailand\" },\r\n    \"Baniyas\": { country: \"Syria\" },\r\n    \"Banjul\": { country: \"Gambia\" },\r\n    \"Bar\": { country: \"Montenegro\" },\r\n    \"Barcelona\": { country: \"Spain\" },\r\n    \"Barranquilla\": { country: \"Colombia\" },\r\n    \"Basra\": { country: \"Iraq\" },\r\n    \"Basse-Terre\": { country: \"Guadeloupe\" },\r\n    \"Batroun\": { country: \"Lebanon\" },\r\n    \"Batumi\": { country: \"Georgia\" },\r\n    \"Beira\": { country: \"Mozambique\" },\r\n    \"Beirut\": { country: \"Lebanon\" },\r\n    \"Belize City\": { country: \"Belize\" },\r\n    \"Benghazi\": { country: \"Libya\" },\r\n    \"Berbera\": { country: \"Somalia\" },\r\n    \"Berbera\": { country: \"Somaliland\" },\r\n    \"Bissau\": { country: \"Guinea-Bissau\" },\r\n    \"Bissau\": { country: \"Republic of Guinea-Bissau\" },\r\n    \"Blantyre\": { country: \"Malawi\" },\r\n    \"Bo\": { country: \"Sierra Leone\" },\r\n    \"Boma\": { country: \"D.R.Congo\" },\r\n    \"Bosaso\": { country: \"Somalia\" },\r\n    \"Brava\": { country: \"Somalia\" },\r\n    \"Brazzaville\": { country: \"Republic of the Congo\" },\r\n    \"Bridgetown\": { country: \"Barbados\" },\r\n    \"Brisbane\": { country: \"Australia\" },\r\n    \"Buchanan\": { country: \"Liberia\" },\r\n    \"Bucharest\": { country: \"Romania\" },\r\n    \"Buenos Aires\": { country: \"Argentina\" },\r\n    \"Busan\": { country: \"South Korea\" },\r\n    \"Byblos\": { country: \"Lebanon\" },\r\n    \"Cabinda\": { country: \"Angola\" },\r\n    \"Calabar\": { country: \"Nigeria\" },\r\n    \"Calais\": { country: \"France\" },\r\n    \"Callao\": { country: \"Peru\" },\r\n    \"Cap-Haitien\": { country: \"Haiti\" },\r\n    \"Cape Town\": { country: \"South Africa\" },\r\n    \"Caracas\": { country: \"Venezuela\" },\r\n    \"Cartagena\": { country: \"Colombia\" },\r\n    \"Casablanca\": { country: \"Morocco\" },\r\n    \"Cayenne\": { country: \"French Guiana\" },\r\n    \"Cebu\": { country: \"Philippines\" },\r\n    \"Chabahar\": { country: \"Iran\" },\r\n    \"Charlotte Amalie\": { country: \"US Virgin Islands\" },\r\n    \"Chekka\": { country: \"Lebanon\" },\r\n    \"Chisinau\": { country: \"Moldova\" },\r\n    \"Chittagong\": { country: \"Bangladesh\" },\r\n    \"Christchurch\": { country: \"New Zealand\" },\r\n    \"Colombo\": { country: \"Sri Lanka\" },\r\n    \"Colonia\": { country: \"Micronesia\" },\r\n    \"Comoros\": { country: \"Comoros\" },\r\n    \"Conakry\": { country: \"Guinea\" },\r\n    \"Constanta\": { country: \"Romania\" },\r\n    \"Constanța\": { country: \"Romania\" },\r\n    \"Copenhagen\": { country: \"Denmark\" },\r\n    \"Cork\": { country: \"Ireland\" },\r\n    \"Cotonou\": { country: \"Benin\" },\r\n    \"Cristóbal\": { country: \"Panama\" },\r\n    \"Dakar\": { country: \"Senegal\" },\r\n    \"Dammam\": { country: \"Saudi Arabia\" },\r\n    \"Darwin\": { country: \"Australia\" },\r\n    \"Diego Suarez (Antsiranana)\": { country: \"Madagascar\" },\r\n    \"Dili\": { country: \"East Timor\" },\r\n    \"Djibouti\": { country: \"Djibouti\" },\r\n    \"Doha\": { country: \"Qatar\" },\r\n    \"Doraleh\": { country: \"Djibouti\" },\r\n    \"Douala\": { country: \"Cameroon\" },\r\n    \"Dubai\": { country: \"UAE\" },\r\n    \"Dublin\": { country: \"Ireland\" },\r\n    \"Duqm\": { country: \"Oman\" },\r\n    \"Durrës\": { country: \"Albania\" },\r\n    \"Dzaoudzi\": { country: \"Mayotte\" },\r\n    \"Ehoala\": { country: \"Madagascar\" },\r\n    \"Eil\": { country: \"Somalia\" },\r\n    \"Eilat\": { country: \"Israel\" },\r\n    \"El Arish\": { country: \"Egypt\" },\r\n    \"El Ma'an\": { country: \"Somalia\" },\r\n    \"El Tor\": { country: \"Egypt\" },\r\n    \"Famagusta\": { country: \"Cyprus\" },\r\n    \"Freeport\": { country: \"Bahamas\" },\r\n    \"Freetown\": { country: \"Sierra Leone\" },\r\n    \"Fremantle\": { country: \"Australia\" },\r\n    \"Funafuti\": { country: \"Tuvalu\" },\r\n    \"Garoua\": { country: \"Cameroon\" },\r\n    \"Gdansk\": { country: \"Poland\" },\r\n    \"Gdańsk\": { country: \"Poland\" },\r\n    \"Gdynia\": { country: \"Poland\" },\r\n    \"Genoa\": { country: \"Italy\" },\r\n    \"George Town\": { country: \"Cayman Islands\" },\r\n    \"Georgetown\": { country: \"Guyana\" },\r\n    \"Gizo\": { country: \"Solomon Islands\" },\r\n    \"Gothenburg\": { country: \"Sweden\" },\r\n    \"Grand Turk\": { country: \"Turks and Caicos Islands\" },\r\n    \"Greenville\": { country: \"Liberia\" },\r\n    \"Guangzhou\": { country: \"Peoples Republic of China\" },\r\n    \"Guayaquil\": { country: \"Ecuador\" },\r\n    \"Gwadar\": { country: \"Pakistan\" },\r\n    \"Gydnia\": { country: \"Poland\" },\r\n    \"Hadera\": { country: \"Israel\" },\r\n    \"Haifa\": { country: \"Israel\" },\r\n    \"Hamburg\": { country: \"Germany\" },\r\n    \"Hamilton\": { country: \"Bermuda\" },\r\n    \"Hargeisa\": { country: \"Somaliland\" },\r\n    \"Harper\": { country: \"Liberia\" },\r\n    \"Havana\": { country: \"Cuba\" },\r\n    \"Helsinki\": { country: \"Finland\" },\r\n    \"Ho Chi Minh City\": { country: \"Vietnam\" },\r\n    \"Hobyo\": { country: \"Somalia\" },\r\n    \"Hodeida\": { country: \"Yemen\" },\r\n    \"Hodeidah\": { country: \"Yemen\" },\r\n    \"Hong Kong\": { country: \"Hong Kong\" },\r\n    \"Honiara\": { country: \"Solomon Islands\" },\r\n    \"Incheon\": { country: \"South Korea\" },\r\n    \"Inchon\": { country: \"South Korea\" },\r\n    \"Istanbul\": { country: \"Turkey\" },\r\n    \"Jaffna\": { country: \"Sri Lanka\" },\r\n    \"Jakarta\": { country: \"Indonesia\" },\r\n    \"Jamestown\": { country: \"Saint Helena\" },\r\n    \"Jeddah Islamic Port\": { country: \"Saudi Arabia\" },\r\n    \"Jeddah\": { country: \"Saudi Arabia\" },\r\n    \"Jizan\": { country: \"Saudi Arabia\" },\r\n    \"Jounieh\": { country: \"Lebanon\" },\r\n    \"Jubail\": { country: \"Saudi Arabia\" },\r\n    \"Jurong\": { country: \"Singapore\" },\r\n    \"Kandla\": { country: \"India\" },\r\n    \"Kaohsiung\": { country: \"Taiwan\" },\r\n    \"Karachi\": { country: \"Pakistan\" },\r\n    \"Kathmandu\": { country: \"Nepal\" },\r\n    \"Khartoum\": { country: \"Sudan\" },\r\n    \"Khasab\": { country: \"Oman\" },\r\n    \"King Abdul Aziz Port\": { country: \"Saudi Arabia\" },\r\n    \"King Fahd Industrial Port\": { country: \"Saudi Arabia\" },\r\n    \"Kingston\": { country: \"Jamaica\" },\r\n    \"Kinshasa\": { country: \"D.R.Congo\" },\r\n    \"Kismayo\": { country: \"Somalia\" },\r\n    \"Klaipeda\": { country: \"Lithuania\" },\r\n    \"Kobe\": { country: \"Japan\" },\r\n    \"Kolkata\": { country: \"India\" },\r\n    \"Koror\": { country: \"Palau\" },\r\n    \"Kralendijk\": { country: \"Bonaire/Netherlands Antilles\" },\r\n    \"Kribi\": { country: \"Cameroon\" },\r\n    \"Kuching Port\": { country: \"Malaysia\" },\r\n    \"Kuwait City\": { country: \"Kuwait\" },\r\n    \"Kyrenia\": { country: \"Cyprus\" },\r\n    \"La Ceiba\": { country: \"Honduras\" },\r\n    \"La Digue\": { country: \"Seychelles\" },\r\n    \"La Guaira\": { country: \"Venezuela\" },\r\n    \"La Libertad\": { country: \"El Salvador\" },\r\n    \"Lae\": { country: \"Papua New Guinea\" },\r\n    \"Lagos\": { country: \"Nigeria\" },\r\n    \"Larnaca\": { country: \"Cyprus\" },\r\n    \"Las Palmas\": { country: \"Canary Islands\" },\r\n    \"Latakia\": { country: \"Syria\" },\r\n    \"Le Havre\": { country: \"France\" },\r\n    \"Le Port\": { country: \"Reunion\" },\r\n    \"Libreville\": { country: \"Gabon\" },\r\n    \"Limassol\": { country: \"Cyprus\" },\r\n    \"Limbe\": { country: \"Cameroon\" },\r\n    \"Limón\": { country: \"Costa Rica\" },\r\n    \"Lisbon\": { country: \"Portugal\" },\r\n    \"Lobito\": { country: \"Angola\" },\r\n    \"Lomé\": { country: \"Togo\" },\r\n    \"London\": { country: \"United Kingdom\" },\r\n    \"Luanda\": { country: \"Angola\" },\r\n    \"Luganville\": { country: \"Vanuatu\" },\r\n    \"Lüderitz\": { country: \"Namibia\" },\r\n    \"Mahé\": { country: \"Seychelles\" },\r\n    \"Majunga (Mahajanga)\": { country: \"Madagascar\" },\r\n    \"Majuro\": { country: \"Marshall Islands\" },\r\n    \"Malabo\": { country: \"Equatorial Guinea\" },\r\n    \"Male\": { country: \"Maldives\" },\r\n    \"Malé\": { country: \"Maldives\" },\r\n    \"Manama\": { country: \"Bahrain\" },\r\n    \"Manila\": { country: \"Philippines\" },\r\n    \"Manta\": { country: \"Ecuador\" },\r\n    \"Manzanillo\": { country: \"Mexico\" },\r\n    \"Marsa Matruh\": { country: \"Egypt\" },\r\n    \"MARSAXLOKK\": { country: \"Malta\" },\r\n    \"Marsaxlokk\": { country: \"Malta\" },\r\n    \"Marseille\": { country: \"France\" },\r\n    \"Massawa\": { country: \"Eritrea\" },\r\n    \"Mata-Utu\": { country: \"Wallis and Futuna\" },\r\n    \"Matadi\": { country: \"D.R.Congo\" },\r\n    \"Matarani\": { country: \"Peru\" },\r\n    \"Mayumba\": { country: \"Gabon\" },\r\n    \"Melbourne\": { country: \"Australia\" },\r\n    \"Merca\": { country: \"Somalia\" },\r\n    \"Mindelo\": { country: \"Cape Verde\" },\r\n    \"Miri Port\": { country: \"Malaysia\" },\r\n    \"Mocha\": { country: \"Yemen\" },\r\n    \"Mogadishu\": { country: \"Somalia\" },\r\n    \"Monaco\": { country: \"Monaco\" },\r\n    \"Monrovia\": { country: \"Liberia\" },\r\n    \"Montego Bay\": { country: \"Jamaica\" },\r\n    \"Montevideo\": { country: \"Uruguay\" },\r\n    \"Moroni\": { country: \"Comoros\" },\r\n    \"Muara\": { country: \"Brunei Darussalam\" },\r\n    \"Mukalla\": { country: \"Yemen\" },\r\n    \"Mumbai\": { country: \"India\" },\r\n    \"Muscat\": { country: \"Oman\" },\r\n    \"Nacala\": { country: \"Mozambique\" },\r\n    \"Naha\": { country: \"Japan\" },\r\n    \"Namibe\": { country: \"Angola\" },\r\n    \"Naples\": { country: \"Italy\" },\r\n    \"Nassau\": { country: \"Bahamas\" },\r\n    \"Neiafu\": { country: \"Tonga\" },\r\n    \"New Westminster\": { country: \"Canada\" },\r\n    \"New York\": { country: \"USA\" },\r\n    \"Newcastle\": { country: \"Australia\" },\r\n    \"Nieuw Nickerie\": { country: \"Suriname\" },\r\n    \"Nishtun\": { country: \"Yemen\" },\r\n    \"Nouadhibou\": { country: \"Mauritania\" },\r\n    \"Nouakchott\": { country: \"Mauritania\" },\r\n    \"Noumea\": { country: \"New Caledonia\" },\r\n    \"Novorossiysk\": { country: \"Russian Federation\" },\r\n    \"Nuku'alofa\": { country: \"Tonga\" },\r\n    \"Obock\": { country: \"Djibouti\" },\r\n    \"Odessa\": { country: \"Ukraine\" },\r\n    \"Omboue\": { country: \"Gabon\" },\r\n    \"Onne\": { country: \"Nigeria\" },\r\n    \"Oran\": { country: \"Algeria\" },\r\n    \"Oranjestad\": { country: \"Aruba\" },\r\n    \"Osaka\": { country: \"Japan\" },\r\n    \"Padang\": { country: \"Indonesia\" },\r\n    \"Palermo\": { country: \"Italy\" },\r\n    \"Papeete\": { country: \"French Polynesia\" },\r\n    \"Paramaribo\": { country: \"Suriname\" },\r\n    \"Pattaya\": { country: \"Thailand\" },\r\n    \"Pemba\": { country: \"Mozambique\" },\r\n    \"Penang Port\": { country: \"Malaysia\" },\r\n    \"Philipsburg\": { country: \"Netherlands Antilles\" },\r\n    \"Piraeus\": { country: \"Greece\" },\r\n    \"Plymouth\": { country: \"Montserrat\" },\r\n    \"Pohnpei\": { country: \"Micronesia\" },\r\n    \"Pointe Noire\": { country: \"Republic of the Congo\" },\r\n    \"Pointe-Noire\": { country: \"Republic of the Congo\" },\r\n    \"Pointe-à-Pitre\": { country: \"Guadeloupe\" },\r\n    \"Ponce\": { country: \"Puerto Rico\" },\r\n    \"Port Castries\": { country: \"St. Lucia\" },\r\n    \"Port Elizabeth\": { country: \"South Africa\" },\r\n    \"Port Gentil\": { country: \"Gabon\" },\r\n    \"Port Harcourt\": { country: \"Nigeria\" },\r\n    \"Port Kelang\": { country: \"Malaysia\" },\r\n    \"Port Kembla\": { country: \"Australia\" },\r\n    \"Port Louis\": { country: \"Mauritius\" },\r\n    \"Port Moresby\": { country: \"Papua New Guinea\" },\r\n    \"Port of Spain\": { country: \"Trinidad and Tobago\" },\r\n    \"Port Rashid\": { country: \"United Arab Emirates\" },\r\n    \"Port Réunion\": { country: \"Reunion\" },\r\n    \"Port Sudan\": { country: \"Sudan\" },\r\n    \"Port Sultan Qaboos\": { country: \"Oman\" },\r\n    \"Port Victoria\": { country: \"Seychelles\" },\r\n    \"Port Vila\": { country: \"Vanuatu\" },\r\n    \"Port Villa\": { country: \"Vanuatu\" },\r\n    \"Port-au-Prince\": { country: \"Haiti\" },\r\n    \"Port-Louis\": { country: \"Mauritius\" },\r\n    \"Port-Vila\": { country: \"Vanuatu\" },\r\n    \"Porto Grande (Mindelo)\": { country: \"Cape Verde\" },\r\n    \"Porto-Novo\": { country: \"Benin\" },\r\n    \"Porto\": { country: \"Portugal\" },\r\n    \"Poti\": { country: \"Georgia\" },\r\n    \"Praslin\": { country: \"Seychelles\" },\r\n    \"Principe\": { country: \"Sao Tome and Principe\" },\r\n    \"Providenciales\": { country: \"Turks And Caicos Islands\" },\r\n    \"Puerto Barrios\": { country: \"Guatemala\" },\r\n    \"Puerto Cabello\": { country: \"Venezuela\" },\r\n    \"Puerto Limon\": { country: \"Republic of Costa Rica\" },\r\n    \"Puerto Madryn\": { country: \"Argentina\" },\r\n    \"Puerto Plata\": { country: \"Dominican Republic\" },\r\n    \"Puerto Sucre\": { country: \"Venezuela\" },\r\n    \"Punta del Este\": { country: \"Uruguay\" },\r\n    \"Puntarenas\": { country: \"Costa Rica\" },\r\n    \"Quelimane\": { country: \"Mozambique\" },\r\n    \"Quetzal\": { country: \"Guatemala\" },\r\n    \"Rabaul\": { country: \"Papua New Guinea\" },\r\n    \"Rabigh\": { country: \"Saudi Arabia\" },\r\n    \"Ras Al Ghar\": { country: \"Saudi Arabia\" },\r\n    \"Ras al Khafji\": { country: \"Saudi Arabia\" },\r\n    \"Ras al-Arah\": { country: \"Yemen\" },\r\n    \"Ras Gharib\": { country: \"Egypt\" },\r\n    \"Ras Isa Marine Terminal\": { country: \"Yemen\" },\r\n    \"Ras Isa\": { country: \"Yemen\" },\r\n    \"Ras Shukheir\": { country: \"Egypt\" },\r\n    \"Ras Tanura\": { country: \"Saudi Arabia\" },\r\n    \"Reykjavik\": { country: \"Iceland\" },\r\n    \"Riga\": { country: \"Latvia\" },\r\n    \"Rijeka\": { country: \"Croatia\" },\r\n    \"Rio de Janeiro\": { country: \"Brazil\" },\r\n    \"Road Town\": { country: \"British Virgin Islands\" },\r\n    \"Robertsport\": { country: \"Liberia\" },\r\n    \"Roseau\": { country: \"Commonwealth Of Dominica\" },\r\n    \"Rotterdam\": { country: \"Netherlands\" },\r\n    \"Saida\": { country: \"Lebanon\" },\r\n    \"Saint George's\": { country: \"Grenada\" },\r\n    \"Saint John's\": { country: \"Antigua and Barbuda\" },\r\n    \"Saint John\": { country: \"Barbados\" },\r\n    \"Saint Louis\": { country: \"Senegal\" },\r\n    \"Saint Petersburg\": { country: \"Russian Federation\" },\r\n    \"Saint Pierre\": { country: \"Saint Pierre and Miquelon\" },\r\n    \"Saint-Denis\": { country: \"Reunion\" },\r\n    \"Saipan\": { country: \"Northern Mariana Islands\" },\r\n    \"Salalah\": { country: \"Oman\" },\r\n    \"Saleef\": { country: \"Yemen\" },\r\n    \"San Antonio\": { country: \"Chile\" },\r\n    \"San Jose\": { country: \"Antigua\" },\r\n    \"San Juan\": { country: \"Puerto Rico\" },\r\n    \"San Pedro\": { country: \"Cote D'Ivoire\" },\r\n    \"Sana'a\": { country: \"Yemen\" },\r\n    \"Santo Domingo\": { country: \"Dominican Republic\" },\r\n    \"Santo\": { country: \"Vanuatu\" },\r\n    \"Santos\": { country: \"Brazil\" },\r\n    \"Sao Tome\": { country: \"Sao Tome and Principe\" },\r\n    \"Scarborough\": { country: \"Trinidad and Tobago\" },\r\n    \"Sevastopol\": { country: \"Ukraine\" },\r\n    \"Sfax\": { country: \"Tunisia\" },\r\n    \"Shanghai\": { country: \"Peoples Republic of China\" },\r\n    \"Sharjah\": { country: \"United Arab Emirates\" },\r\n    \"Shenzhen\": { country: \"Peoples Republic of China\" },\r\n    \"Sibu Port\": { country: \"Malaysia\" },\r\n    \"Sidon\": { country: \"Lebanon\" },\r\n    \"Sihanoukville\": { country: \"Cambodia\" },\r\n    \"Singapore\": { country: \"Singapore\" },\r\n    \"Sinop\": { country: \"Turkey\" },\r\n    \"Sittwe\": { country: \"Myanmar\" },\r\n    \"Sochi\": { country: \"Russian Federation\" },\r\n    \"Socotra\": { country: \"Yemen\" },\r\n    \"Sohar\": { country: \"Oman\" },\r\n    \"Sokodé\": { country: \"Togo\" },\r\n    \"Southampton\": { country: \"United Kingdom\" },\r\n    \"Soyo\": { country: \"Angola\" },\r\n    \"Split\": { country: \"Croatia\" },\r\n    \"St. Croix\": { country: \"US Virgin Islands\" },\r\n    \"St. George\": { country: \"Grenada\" },\r\n    \"Stockholm\": { country: \"Sweden\" },\r\n    \"Suakin\": { country: \"Sudan\" },\r\n    \"Sur\": { country: \"Lebanon\" },\r\n    \"Surabaya\": { country: \"Indonesia\" },\r\n    \"Suva\": { country: \"Fiji\" },\r\n    \"Sydney\": { country: \"Australia\" },\r\n    \"Szczecin\": { country: \"Poland\" },\r\n    \"São Tomé\": { country: \"Sao Tome and Principe\" },\r\n    \"Tadjoura\": { country: \"Djibouti\" },\r\n    \"Tainan\": { country: \"Taiwan\" },\r\n    \"Tallinn\": { country: \"Estonia\" },\r\n    \"Tamatave (Toamasina)\": { country: \"Madagascar\" },\r\n    \"Tanajib\": { country: \"Saudi Arabia\" },\r\n    \"Tanjung Pelepas\": { country: \"Malaysia\" },\r\n    \"Tarawa\": { country: \"Kiribati\" },\r\n    \"Tartus\": { country: \"Syria\" },\r\n    \"Tauranga\": { country: \"New Zealand\" },\r\n    \"Tekirdag\": { country: \"Turkey\" },\r\n    \"Tema\": { country: \"Ghana\" },\r\n    \"Tianjin\": { country: \"Peoples Republic of China\" },\r\n    \"Tin Can Island\": { country: \"Nigeria\" },\r\n    \"Toamasina\": { country: \"Madagascar\" },\r\n    \"Toliara\": { country: \"Madagascar\" },\r\n    \"Tonga\": { country: \"Tonga\" },\r\n    \"Toripoli\": { country: \"Libya\" },\r\n    \"Trabzon\": { country: \"Turkey\" },\r\n    \"Trieste\": { country: \"Italy\" },\r\n    \"Trincomalee\": { country: \"Sri Lanka\" },\r\n    \"Tripoli\": { country: \"Lebanon\" },\r\n    \"Tunis\": { country: \"Tunisia\" },\r\n    \"Turkmenbashi\": { country: \"Turkmenistan\" },\r\n    \"Tyre\": { country: \"Lebanon\" },\r\n    \"Tórshavn\": { country: \"Faroe Islands\" },\r\n    \"ULAANBAATAR\": { country: \"Mongolia\" },\r\n    \"Ulcinj\": { country: \"Montenegro\" },\r\n    \"Umm Qasr\": { country: \"Iraq\" },\r\n    \"Ushuaia\": { country: \"Argentina\" },\r\n    \"Valletta\": { country: \"Malta\" },\r\n    \"Valparaíso\": { country: \"Chile\" },\r\n    \"Vancouver\": { country: \"Canada\" },\r\n    \"Varna\": { country: \"Bulgaria\" },\r\n    \"Veracruz\": { country: \"Mexico\" },\r\n    \"Victoria\": { country: \"Mahe (Seychelles)\" },\r\n    \"Visakhapatnam\": { country: \"India\" },\r\n    \"Vladivostok\": { country: \"Russian Federation\" },\r\n    \"Walvis Bay\": { country: \"Namibia\" },\r\n    \"Warri\": { country: \"Nigeria\" },\r\n    \"Wellington\": { country: \"New Zealand\" },\r\n    \"Willemstad\": { country: \"Curacao\" },\r\n    \"Yanbu\": { country: \"Saudi Arabia\" },\r\n    \"Yangon\": { country: \"Myanmar\" },\r\n    \"Yap\": { country: \"Micronesia\" },\r\n    \"Yaren\": { country: \"Nauru\" },\r\n    \"Yokohama\": { country: \"Japan\" },\r\n    \"Zeebrugge\": { country: \"Belgium\" },\r\n    \"Ziguinchor\": { country: \"Senegal\" },\r\n    \"Zonguldak\": { country: \"Turkey\" },\r\n}\r\n\r\n\r\nconst AddPortModal = ({ handleAddPortModalClose }) => {\r\n\r\n    const addPortModalVisible = useSelector((state) => state.addPortModalVisible);\r\n    const inputPortText = useRef(null);\r\n    const inputCountryText = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    const [addButtonLoading, setAddButtonLoading] = useState(false);\r\n\r\n    const handleAddButton = async () => {\r\n        setAddButtonLoading(true);\r\n        if (inputPortText.current?.value !== '' && inputCountryText.current?.value !== '') {\r\n            const countryCode = inputCountryText.current?.value;\r\n            const portCode = inputPortText.current?.value;\r\n            const formattedPortCode = portCode.replace(/\\./g, '_');\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            try {\r\n                await addPort(formattedPortCode, inputCountryText.current?.value, 9999);\r\n                const logData = {\r\n                    message: `Port Added: \"${nameVariable.text}\" added port \"${portCode}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Port Added: \"${nameVariable.text}\" added port \"${portCode}\" for Freight.`.toLowerCase(),\r\n                        'Port'.toLowerCase(),\r\n                        'Port Added'.toLowerCase(),\r\n                        'Added'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        portCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Port added successfully!</Text>\r\n                        </View>;\r\n                    }\r\n\r\n                })\r\n                dispatch(setAddPortModalVisible(false));\r\n                setAddButtonLoading(false);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        else {\r\n            setAddButtonLoading(false);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const filterInput = (inputRef) => {\r\n        const currentValue = inputRef.current.value;\r\n        const filteredValue = currentValue.replace(/[^a-zA-Z0-9. ]/g, '');\r\n        if (currentValue !== filteredValue) {\r\n            inputRef.current.setNativeProps({ text: filteredValue });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={addPortModalVisible}\r\n            onClose={() => {\r\n                handleAddPortModalClose();\r\n                inputPortText.current.value = '';\r\n            }}\r\n            size={'md'}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header style={{ backgroundColor: '#7B9CFF', }}><Text color={'white'} fontSize={20} bold>Add Port</Text></Modal.Header>\r\n                <Modal.Body >\r\n                    <View style={{ marginVertical: 5, }}>\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Port</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputPortText}\r\n                            onChangeText={() => filterInput(inputPortText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Port' />\r\n\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, marginTop: 10, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Country</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputCountryText}\r\n                            onChangeText={() => filterInput(inputCountryText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Country' />\r\n\r\n                    </View>\r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"solid\" space=\"2\">\r\n                        <Button colorScheme={'gray'} onPress={() => {\r\n                            handleAddPortModalClose();\r\n                            inputPortText.current.value = '';\r\n                        }}>Cancel</Button>\r\n                        {addButtonLoading ?\r\n                            (<Spinner size=\"lg\" color={'#16A34A'} />) :\r\n                            (<Button colorScheme={'success'} onPress={handleAddButton}>Add</Button>)\r\n                        }\r\n\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst DeletePortModal = ({ handleDeletePortModalClose }) => {\r\n    const deletePortModalVisible = useSelector((state) => state.deletePortModalVisible);\r\n    const [buttonLoading, setButtonLoading] = useState(false);\r\n\r\n    const handleDeletePort = async () => {\r\n        setButtonLoading(true);\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        const formattedFieldCode = selectedPort.replace(/\\./g, '_');\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        updateDoc(documentRef, {\r\n            [formattedFieldCode]: deleteField()\r\n        })\r\n            .then(() => {\r\n                console.log('Field deleted successfully');\r\n                handleDeletePortModalClose();\r\n                setButtonLoading(false);\r\n                const logData = {\r\n                    message: `Port Deleted: \"${nameVariable.text}\" deleted port \"${selectedPort}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: false,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Port Deleted: \"${nameVariable.text}\" deleted port \"${selectedPort}\" for Freight.`.toLowerCase(),\r\n                        'Port'.toLowerCase(),\r\n                        'Port Deleted'.toLowerCase(),\r\n                        'Deleted'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        selectedPort.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting field: ', error);\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal isOpen={deletePortModalVisible} onClose={handleDeletePortModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header>Delete Port?</Modal.Header>\r\n                <Modal.Body>\r\n                    Are you sure you want to delete the selected port?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        <TouchableOpacity\r\n                            style={{ flex: 1, backgroundColor: '#525252', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            onPress={handleDeletePortModalClose}\r\n                        >\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }}>No</Text>\r\n                        </TouchableOpacity>\r\n                        {buttonLoading ?\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            ><Spinner size={18} color={'white'} />\r\n                            </TouchableOpacity>) :\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                                onPress={handleDeletePort}\r\n                            >\r\n                                <Text style={{ color: 'white', alignSelf: 'center', }}>Yes</Text>\r\n                            </TouchableOpacity>)\r\n                        }\r\n\r\n\r\n                    </View>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst PortsTable = () => {\r\n    const dispatch = useDispatch();\r\n    const methodData = useSelector((state) => state.methodData);\r\n    const toast = useToast();\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const optionsPerPage = [10, 20, 50];\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const inputSearchRef = useRef(null);\r\n    const textAreaAddMethod = useRef(null);\r\n\r\n    const inputSortOrder = useRef([]);\r\n    const inputProfitPrice = useRef([]);\r\n    const inputNagoyaPrice = useRef([]);\r\n    const inputYokohamaPrice = useRef([]);\r\n    const inputKyushuPrice = useRef([]);\r\n    const inputKobePrice = useRef([]);\r\n    const inputMemo = useRef([]);\r\n\r\n    const [inputMemoValues, setInputMemoValues] = useState({});\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const handleSortOrderTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 3);\r\n\r\n        inputSortOrder.current[item.ports].value = numericValue;\r\n\r\n    };\r\n\r\n    const handleProfitPriceTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 4);\r\n\r\n        inputProfitPrice.current[item.ports].value = numericValue;\r\n\r\n    };\r\n\r\n\r\n    const updatePortsField = async (portCode, newValue, inputRef, title, fieldName) => {\r\n        // Specify the document reference\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = portCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const field = `${formattedCountryCode}.${fieldName}`;\r\n\r\n            try {\r\n                // Perform the update\r\n                await updateDoc(documentRef, {\r\n                    [field]: newValue\r\n                });\r\n\r\n                const logData = {\r\n                    message: `${title} Updated: \"${nameVariable.text}\" updated \"${portCode}\" ${title} to \"${newValue}\".`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `${title} Updated: \"${nameVariable.text}\" updated \"${portCode}\" ${title} to \"${newValue}\"`.toLowerCase(),\r\n                        `Sort`.toLowerCase(),\r\n                        `${title}`.toLowerCase(),\r\n                        `${title} Updated`.toLowerCase(),\r\n                        `Updated`.toLowerCase(),\r\n                        portCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>{title} updated successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                addLogToCollection(logData);\r\n                dispatch(setLoadingModalVisible(false));\r\n                console.log(`${title} updated successfully`);\r\n            } catch (error) {\r\n                console.error(`Error updating ${title}:`, error);\r\n\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter((item) =>\r\n            item.country.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.ports.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.sortOrder.toString().includes(searchQuery)\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce(() => {\r\n        setSearchQuery(inputSearchRef.current?.value);\r\n    }, 50);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    // useEffect(() => {\r\n    //     const portsDataWithSortOrder = Object.entries(portsList).reduce((acc, [portName, portDetails], index) => {\r\n    //         // Replace dots in portName with underscores\r\n    //         const sanitizedPortName = portName.replace(/\\./g, '_');\r\n    //         acc[sanitizedPortName] = { ...portDetails, sortOrder: index };\r\n    //         return acc;\r\n    //     }, {});\r\n\r\n    //     setDoc(doc(projectExtensionFirestore, \"CustomerCountryPort\", \"PortsDoc\"), portsDataWithSortOrder)\r\n    //         .then(() => {\r\n    //             console.log(\"Document successfully written!\");\r\n    //             dispatch(setLoadingModalVisible(false));\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(\"Error writing document: \", error);\r\n    //         });\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map(key => ({\r\n                        ports: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n                // setFilteredData(formattedData);\r\n                dispatch(setLoadingModalVisible(false));\r\n            } else {\r\n                console.log(\"No such document!\");\r\n                dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching countries: \", error);\r\n\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n\r\n    const handleAddMethodTextChange = () => {\r\n        const textAreaValue = textAreaAddMethod.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddMethod.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        paginatedData.forEach(item => {\r\n            inputMemo.current[item.ports].value = item.memo ? item.memo : '';\r\n            inputSortOrder.current[item.ports].value = item.sortOrder ? item.sortOrder : 0;\r\n            inputProfitPrice.current[item.ports].value = item.profitPrice ? item.profitPrice : 0;\r\n            inputNagoyaPrice.current[item.ports].value = item.nagoyaPrice ? item.nagoyaPrice : 0;\r\n            inputYokohamaPrice.current[item.ports].value = item.yokohamaPrice ? item.yokohamaPrice : 0;\r\n            inputKyushuPrice.current[item.ports].value = item.kyushuPrice ? item.kyushuPrice : 0;\r\n            inputKobePrice.current[item.ports].value = item.kobePrice ? item.kobePrice : 0;\r\n\r\n\r\n\r\n        });\r\n        // setInputMemoValues(initialValues);\r\n\r\n    }, [paginatedData]); // Run this effect when 'items' changes\r\n\r\n    const handleAddPortModalOpen = () => {\r\n\r\n        dispatch(setAddPortModalVisible(true));\r\n\r\n    }\r\n\r\n    const handleAddPortModalClose = () => {\r\n\r\n        dispatch(setAddPortModalVisible(false));\r\n\r\n    }\r\n\r\n    const handleDeletePortModalOpen = (selectedValue) => {\r\n\r\n        dispatch(setDeletePortModalVisible(true));\r\n        selectedPort = selectedValue;\r\n\r\n    }\r\n\r\n    const handleDeletePortModalClose = () => {\r\n\r\n        dispatch(setDeletePortModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {screenWidth >= 1280 ? (\r\n                <View style={{ flex: 1, }}>\r\n                    {/* Search Bar */}\r\n                    <View style={{ padding: 10 }}>\r\n                        <TextInput\r\n                            ref={inputSearchRef}\r\n                            onSubmitEditing={handleSearch}\r\n                            style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                            placeholder='Search'\r\n                            returnKeyType='search'\r\n                            autoCapitalize='none'\r\n                        />\r\n                    </View>\r\n\r\n                    {/* Add Port Button */}\r\n                    <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                        <TouchableOpacity\r\n                            onPress={handleAddPortModalOpen}\r\n                            style={{\r\n                                borderRadius: 5,\r\n                                padding: 10,\r\n                                borderWidth: 1,\r\n                                borderColor: 'white',\r\n                                backgroundColor: '#16A34A',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                            <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Port</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: '#E4E4E7',\r\n                            backgroundColor: '#0642F4',\r\n                            padding: 10,\r\n                            borderRadius: 5,\r\n                            marginTop: 10,\r\n                        }}\r\n                    >\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Port Name</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Price (USD)</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Nagoya</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Yokohama</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Kyushu</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Kobe</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, padding: 2, flexDirection: 'row' }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='MethodDoc'\r\n                                handleAddTextChange={handleAddMethodTextChange}\r\n                                textAreaAdd={textAreaAddMethod}\r\n                                title='Method'\r\n                                dataName={'methodData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Method\"\r\n                                data={methodData}\r\n                            />\r\n                            <Text style={{ color: 'white', }} bold>Method</Text>\r\n                        </View>\r\n                        <View style={{ flex: 2, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Memo</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n                    <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                        {paginatedData.map((item, index) => (\r\n                            <View\r\n                                key={index}\r\n                                style={{\r\n                                    flex: 1,\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'space-between',\r\n                                    alignItems: 'center',\r\n                                    borderBottomWidth: 1,\r\n                                    borderBottomColor: '#E4E4E7',\r\n                                    backgroundColor: '#BFDBFE',\r\n                                    paddingVertical: 10,\r\n                                }}>\r\n                                <Text style={{ flex: 1, marginHorizontal: 3 }} selectable>{item.ports}</Text>\r\n                                <Text style={{ flex: 1, marginHorizontal: 3, alignSelf: 'center' }} selectable>{item.country}</Text>\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.sortOrder ? item.sortOrder : 0}→</Text> */}\r\n                                    <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, borderLeftColor: '#E4E4E7', }}>\r\n                                        <TextInput\r\n                                            onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                            onSubmitEditing={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                            ref={(ref) => (inputSortOrder.current[item.ports] = ref)}\r\n                                            style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5 }}\r\n                                        />\r\n                                        <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                            <TouchableHighlight\r\n                                                onPress={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                style={{\r\n                                                    backgroundColor: '#16A34A',\r\n                                                    borderRadius: 5,\r\n                                                    padding: 5,\r\n                                                    margin: 2,\r\n                                                    alignSelf: 'center',\r\n                                                }}>\r\n                                                <MaterialIcons name='update' color='white' size={22} />\r\n                                            </TouchableHighlight>\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.profitPrice ? item.profitPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onChangeText={(text) => handleProfitPriceTextChange(text, item)}\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                        ref={(ref) => (inputProfitPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.nagoyaPrice ? item.nagoyaPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                        ref={(ref) => (inputNagoyaPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.yokohamaPrice ? item.yokohamaPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                        ref={(ref) => (inputYokohamaPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kyushuPrice ? item.kyushuPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                        ref={(ref) => (inputKyushuPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kobePrice ? item.kobePrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                        ref={(ref) => (inputKobePrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: screenWidth < 1800 ? 2 : 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    <SelectMethod defaultValue={item.method} portCode={item.ports} page={page} searchQuery={searchQuery} />\r\n                                </View>\r\n\r\n                                <View style={{ flex: 2, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n                                    <TextInput\r\n                                        multiline\r\n                                        // value={inputMemoValues[item.ports] || ''}\r\n                                        // onChangeText={(text) => handleMemoTextChange(text, item.ports)}\r\n                                        ref={(ref) => (inputMemo.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', flex: 2, height: 60, paddingLeft: 5, backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, }}\r\n                                    />\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputMemo.current[item.ports].value, inputMemo, 'Memo', 'memo')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => handleDeletePortModalOpen(item.ports)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#DC2626',\r\n                                                borderRadius: 5,\r\n                                                padding: 10,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <AntDesign name='delete' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n                                {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                            </View>\r\n                        ))}\r\n                        <DataTable.Pagination\r\n                            page={page}\r\n                            numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                            onPageChange={(page) => setPage(page)}\r\n                            label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                            optionsPerPage={optionsPerPage}\r\n                            itemsPerPage={itemsPerPage}\r\n                            setItemsPerPage={setItemsPerPage}\r\n                            showFastPagination\r\n                            optionsLabel={'Rows per page'}\r\n                        />\r\n                    </DataTable>\r\n                    <AddPortModal handleAddPortModalClose={handleAddPortModalClose} />\r\n                    <DeletePortModal handleDeletePortModalClose={handleDeletePortModalClose} />\r\n                </View>) :\r\n                (\r\n                    //Ports Table Mobile View\r\n                    <View style={{ flex: 1, }}>\r\n                        {/* Search Bar */}\r\n                        <View style={{ padding: 10 }}>\r\n                            <TextInput\r\n                                ref={inputSearchRef}\r\n                                onSubmitEditing={handleSearch}\r\n                                style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                                placeholder='Search'\r\n                                returnKeyType='search'\r\n                                autoCapitalize='none'\r\n                            />\r\n                        </View>\r\n\r\n                        {/* Add Port Button */}\r\n                        <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                            <TouchableOpacity\r\n                                onPress={handleAddPortModalOpen}\r\n                                style={{\r\n                                    borderRadius: 5,\r\n                                    padding: 10,\r\n                                    borderWidth: 1,\r\n                                    borderColor: 'white',\r\n                                    backgroundColor: '#16A34A',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                                <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Port</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n                        <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                            {paginatedData.map((item, index) => (\r\n                                <View\r\n                                    key={index}\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'column',\r\n                                        borderWidth: 1,\r\n                                        borderColor: '#E4E4E7',\r\n                                        backgroundColor: '#BFDBFE',\r\n                                        margin: 10,\r\n                                    }}>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Port Name</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <Text style={{ flex: 1, marginHorizontal: 3 }} selectable>{item.ports}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n                                            <Text style={{ flex: 1, marginHorizontal: 3, }} selectable>{item.country}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.sortOrder ? item.sortOrder : 0}→</Text> */}\r\n                                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, borderLeftColor: '#E4E4E7', }}>\r\n                                                    <TextInput\r\n                                                        onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                                        onSubmitEditing={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                        ref={(ref) => (inputSortOrder.current[item.ports] = ref)}\r\n                                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5 }}\r\n                                                    />\r\n                                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                        <TouchableHighlight\r\n                                                            onPress={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                            style={{\r\n                                                                backgroundColor: '#16A34A',\r\n                                                                borderRadius: 5,\r\n                                                                padding: 5,\r\n                                                                margin: 2,\r\n                                                                alignSelf: 'center',\r\n                                                            }}>\r\n                                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                                        </TouchableHighlight>\r\n                                                    </View>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Price (USD)</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.profitPrice ? item.profitPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onChangeText={(text) => handleProfitPriceTextChange(text, item)}\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                                    ref={(ref) => (inputProfitPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Nagoya</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.nagoyaPrice ? item.nagoyaPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                                    ref={(ref) => (inputNagoyaPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Yokohama</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.yokohamaPrice ? item.yokohamaPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                                    ref={(ref) => (inputYokohamaPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Kyushu</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kyushuPrice ? item.kyushuPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                                    ref={(ref) => (inputKyushuPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Kobe</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kobePrice ? item.kobePrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                                    ref={(ref) => (inputKobePrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Method</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                <SelectMethod defaultValue={item.method} portCode={item.ports} page={page} searchQuery={searchQuery} />\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Memo</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 2, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n                                                <TextInput\r\n                                                    multiline\r\n                                                    // value={inputMemoValues[item.ports] || ''}\r\n                                                    // onChangeText={(text) => handleMemoTextChange(text, item.ports)}\r\n                                                    ref={(ref) => (inputMemo.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', flex: 2, height: 60, paddingLeft: 5, backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, }}\r\n                                                />\r\n                                                <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputMemo.current[item.ports].value, inputMemo, 'Memo', 'memo')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            alignSelf: 'center',\r\n                                                            height: '100%',\r\n                                                            justifyContent: 'center',\r\n                                                            alignItems: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n                                                <View style={{ width: '100%', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => handleDeletePortModalOpen(item.ports)}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 6, }}>\r\n                                                        <AntDesign name='delete' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                    {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                    {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                                </View>\r\n                            ))}\r\n                            <DataTable.Pagination\r\n                                page={page}\r\n                                numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                onPageChange={(page) => setPage(page)}\r\n                                label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                optionsPerPage={optionsPerPage}\r\n                                itemsPerPage={itemsPerPage}\r\n                                setItemsPerPage={setItemsPerPage}\r\n                                showFastPagination\r\n                                optionsLabel={'Rows per page'}\r\n                            />\r\n                        </DataTable>\r\n                        <AddPortModal handleAddPortModalClose={handleAddPortModalClose} />\r\n                        <DeletePortModal handleDeletePortModalClose={handleDeletePortModalClose} />\r\n                    </View>\r\n                )}\r\n        </>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default function Freight() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const logo = require('../../assets/C-Hub.png');\r\n    const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n    const [isMobileView, setIsMobileView] = useState(false);\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    // const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n\r\n\r\n    const loginName = useSelector((state) => state.loginName);\r\n    nameVariable.text = loginName;\r\n    const [name, setName] = useState(loginName);\r\n    const [time, setTime] = useState('');\r\n\r\n    const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n    const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const updateWidth = () => {\r\n            const newWidth = Dimensions.get('window').width;\r\n            setScreenWidth(newWidth); // Update the screenWidth state\r\n        };\r\n\r\n        // Add event listener for window resize\r\n        Dimensions.addEventListener('change', updateWidth);\r\n\r\n        // Clean up the event listener when the component unmounts or re-renders\r\n        return () => {\r\n            Dimensions.removeEventListener('change', updateWidth);\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setSelectedButton(defaultSelectedButton));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                // navigation.navigate(\"Login\")\r\n                navigate(\"/Login\");\r\n            }\r\n        })\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(projectControlAuth)\r\n                    .then(() => {\r\n                        // navigation.navigate('Login');\r\n                        navigate(\"/Login\");\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(projectControlAuth)\r\n                .then(() => {\r\n                    // navigation.navigate('Login');\r\n                    navigate(\"/Login\");\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = projectControlAuth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const listenForNameChange = (documentId) => {\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(projectControlAuth).then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n\r\n            setEmail('');\r\n            setName('');\r\n        }).catch(() => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#0642F4'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#0642F4'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <NativeBaseProvider>\r\n            <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#0642f4'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={0}\r\n                    borderBottomColor={'cyan.500'}\r\n                >\r\n\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen} />\r\n\r\n                    <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image} />\r\n                    </Box>\r\n                    {/* \r\n                    {screenWidth <= 960 && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen} />} */}\r\n\r\n\r\n                    <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image} />\r\n                    </Box>\r\n\r\n\r\n                    <View style={{ alignItems: 'center', flex: 1 }}>\r\n                        <QRCodeScanner />\r\n                    </View>\r\n\r\n                    <NamePopover name={name} handleSignOut={handleSignOut} />\r\n\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\r\n\r\n\r\n                    {/* Main Content */}\r\n                    {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n                    {/* Main Content Content */}\r\n\r\n\r\n                    {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n                    <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\r\n                        <ScrollView style={{ flex: 1, }} keyboardShouldPersistTaps='always'>\r\n                            <View style={{ flex: 1, }}>\r\n\r\n                                <FreightNavigation />\r\n                                <NavigatePage />\r\n                                {/* {selectedButton == 'countries' ? <CountriesTable /> : <></>}\r\n                                {selectedButton == 'ports' ? <PortsTable /> : <></>} */}\r\n                            </View>\r\n                        </ScrollView>\r\n                        {/* <SuccessModal /> */}\r\n\r\n                    </View>\r\n\r\n\r\n                    {/* </Box> */}\r\n\r\n                    {/* </Box> */}\r\n                </View>\r\n\r\n            </View>\r\n            <LoadingModal />\r\n\r\n        </NativeBaseProvider>\r\n    );\r\n}","import { useState } from \"react\";\r\nimport { View, Dimensions, StyleSheet, Image } from \"react-native\";\r\nimport { Box, Flex, Popover, Button, Text } from \"native-base\";\r\nimport FastImage from \"react-native-fast-image-web-support\";\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo,\r\n  FontAwesome5,\r\n  EvilIcons\r\n} from 'react-native-vector-icons';\r\n\r\nimport MobileViewDrawer from \"../SideDrawer/MobileViewDrawer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst NamePopover = ({ name, handleSignOut }) => {\r\n  const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n  const showPopover = () => {\r\n    setShowNamePopover(!showNamePopover);\r\n  };\r\n\r\n  return (\r\n    <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n      <Flex direction=\"row-reverse\">\r\n        <Popover\r\n          isOpen={showNamePopover}\r\n          trigger={(triggerProps) => (\r\n            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n              <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n            </Text>\r\n          )}\r\n          onClose={() => setShowNamePopover(!showNamePopover)}\r\n          placement='bottom right'\r\n          trapFocus={false}\r\n        >\r\n          <Popover.Content backgroundColor={'#7B9CFF'}>\r\n            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n              <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                Logout\r\n              </Button>\r\n            </Popover.Body>\r\n          </Popover.Content>\r\n        </Popover>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst StickyHeader = ({ selectedScreen, handleSignOut }) => {\r\n  const loginName = useSelector((state) => state.loginName);\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  // const logo = require('https://i.imgur.com/V98nKSK.png');\r\n  // const logo2 = require('https://i.imgur.com/NGCIoSV.png');\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  return (\r\n\r\n    <Box\r\n      px=\"3\"\r\n      bgColor='#7b9cff'\r\n      height={54}\r\n      position=\"sticky\"\r\n      top={0}\r\n      zIndex={999}\r\n      flexDirection=\"row\"\r\n      alignItems=\"center\"\r\n      borderBottomWidth={2}\r\n      borderBottomColor={'cyan.500'} >\r\n\r\n      <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n        <Image\r\n          source={{ uri: 'https://i.imgur.com/V98nKSK.png' }}\r\n          style={styles.image}\r\n          resizeMode=\"stretch\"\r\n        />\r\n      </Box>\r\n\r\n      {screenWidth <= 960 && <MobileViewDrawer\r\n        selectedScreen={selectedScreen}\r\n      />}\r\n\r\n\r\n      <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n      <Image\r\n          source={{ uri: 'https://i.imgur.com/NGCIoSV.png' }}\r\n          style={styles.image}\r\n          resizeMode=\"stretch\"\r\n        />\r\n      </Box>\r\n\r\n      <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n    </Box>\r\n\r\n  );\r\n}\r\n\r\nexport default StickyHeader;","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Keyboard } from 'react-native';\r\nimport {\r\n    Input,\r\n    Icon,\r\n    Stack,\r\n    Pressable,\r\n    Center,\r\n    PresenceTransition,\r\n    NativeBaseProvider,\r\n    Button,\r\n    Box,\r\n    HStack,\r\n    Image,\r\n    Container,\r\n    Header,\r\n    Left,\r\n    Body,\r\n    Title,\r\n    Content,\r\n    Text,\r\n    Heading,\r\n    Flex,\r\n    VStack,\r\n    ScrollView,\r\n    SectionList,\r\n    useBreakpointValue,\r\n    Spinner,\r\n    Modal,\r\n    Divider,\r\n    IconButton,\r\n    Popover\r\n} from \"native-base\";\r\nimport { DataTable } from 'react-native-paper';\r\nimport {\r\n    FontAwesome,\r\n    Entypo,\r\n    MaterialIcons,\r\n    Ionicons,\r\n    Fontisto,\r\n    EvilIcons,\r\n    AntDesign,\r\n    MaterialCommunityIcons,\r\n    Feather,\r\n    FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, limit } from '../../firebasecontrol'\r\nimport { arrayUnion, where, startAfter, endBefore, limitToLast, collectionGroup } from 'firebase/firestore';\r\nimport { projectExtensionFirestore, projectControlFirestore } from '../../crossFirebase';\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './../style.css';\r\nimport { debounce, set, throttle } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { bg } from 'date-fns/locale';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { LineChart, BarChart } from 'react-native-chart-kit';\r\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from 'victory';\r\nimport {\r\n    OPEN_EXCHANGE_API_KEY\r\n} from '@env';\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\nimport {\r\n    setLogsData,\r\n    setLoadingModalVisible,\r\n} from './redux/store';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\nlet selectedScreen = 'LOGS'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const addKeywordsToLogs = async () =>{\r\n//     const logsRef = collection(projectControlFirestore, \"logs\");\r\n\r\n//     try {\r\n//       const querySnapshot = await getDocs(logsRef);\r\n\r\n//       querySnapshot.forEach((doc) => {\r\n//         const data = doc.data();\r\n//         const keywords = [\r\n//           data.timestamp,\r\n//           data.message,\r\n//         ];\r\n\r\n//         updateDoc(doc.ref, {\r\n//           keywords: arrayUnion(...keywords)\r\n//         });\r\n//       });\r\n\r\n//       console.log(\"Keywords added successfully to logs collection.\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding keywords to logs collection:\", error);\r\n//     }\r\n//   }\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }} selectable={false}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nconst LogsTable = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [firstVisible, setFirstVisible] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const searchInputRef = useRef(null);\r\n    const logsData = useSelector((state) => state.logsData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(projectControlFirestore, 'logs'),\r\n            orderBy('timestamp', 'desc'),\r\n            limit(pageSize)\r\n        );\r\n        const unsubscribe = onSnapshot(q, (documents) => {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n            dispatch(setLogsData(logsDatabaseData));\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            setFirstVisible(documents.docs[0]);\r\n        });\r\n        return () => unsubscribe();\r\n\r\n    }, []);\r\n\r\n    const fetchNextData = async () => {\r\n\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collectionGroup(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n        }\r\n\r\n        else {\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const fetchPreviousData = async () => {\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev')\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev');\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchFirstPage = (documents) => {\r\n\r\n\r\n        const logsDatabaseData = [];\r\n\r\n        documents.forEach((document) => {\r\n            logsDatabaseData.push({\r\n                id: document.id,\r\n                ...document.data(),\r\n            });\r\n        });\r\n\r\n        dispatch(setLogsData(logsDatabaseData));\r\n\r\n        if (documents?.docs[0]) {\r\n            setFirstVisible(documents.docs[0]);\r\n        }\r\n        if (documents?.docs[documents.docs.length - 1]) {\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n        if (!documents.empty) {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n\r\n\r\n\r\n            if (documents?.docs[0]) {\r\n                setFirstVisible(documents.docs[0]);\r\n            }\r\n            if (documents?.docs[documents.docs.length - 1]) {\r\n                setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            }\r\n\r\n            if (pageClicked == 'next') {\r\n                setCurrentPage(currentPage + 1);\r\n            }\r\n            if (pageClicked == 'prev') {\r\n                setCurrentPage(currentPage - 1);\r\n            }\r\n\r\n            dispatch(setLogsData(logsDatabaseData));\r\n        }\r\n\r\n        else {\r\n\r\n            if (searchText == '') {\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n            else {\r\n\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleNextPage = async () => {\r\n        // setPageClicked('next');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage + 1);\r\n        await fetchNextData();\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handlePreviousPage = async () => {\r\n        // setPageClicked('previous');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage - 1);\r\n        await fetchPreviousData();\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        searchData();\r\n\r\n    }, [searchText]);\r\n\r\n    const searchData = async () => {\r\n\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        if (searchText === '') {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n    };\r\n\r\n    const handleSearchEnter = () => {\r\n\r\n        if (searchInputRef.current?.value !== '') {\r\n            setSearchText(searchInputRef.current.value.trim());\r\n        }\r\n        else {\r\n            setSearchText('');\r\n\r\n            if (searchText == '') {\r\n                searchData();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={{ flex: 1, }}>\r\n            <View>\r\n                <TextInput ref={searchInputRef} style={{ width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\r\n                    onSubmitEditing={handleSearchEnter}\r\n                    placeholder='Search'\r\n                    returnKeyType='search'\r\n                    keyboardType='default'\r\n                    autoCapitalize='none'\r\n                />\r\n            </View>\r\n            <View\r\n                style={{\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between',\r\n                    borderBottomWidth: 1,\r\n                    borderBottomColor: '#E4E4E7',\r\n                    backgroundColor: '#0642F4',\r\n                    padding: 2,\r\n                    borderRadius: 5,\r\n                }}>\r\n                <View style={{ flex: 1, padding: 2 }}>\r\n                    <Text style={{ color: 'white', }} bold>Timestamp</Text>\r\n                </View>\r\n                <View style={{ flex: 1, padding: 2 }}>\r\n                    <Text style={{ color: 'white', }} bold>Action</Text>\r\n                </View>\r\n            </View>\r\n            {logsData.map((item) => (\r\n                <View\r\n                    key={item.id}\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#E4E4E7',\r\n                        backgroundColor: item.colorScheme ? '#BBF7D0' : '#EAC7D6',\r\n                        paddingVertical: 10,\r\n                        flexGrow: 1,\r\n                    }}>\r\n                    <View style={{ flex: 1, }}>\r\n                        <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.timestamp}</Text>\r\n                    </View>\r\n                    <View style={{ flex: 1 }}>\r\n                        <Text selectable style={{ width: '90%', }}>{item.message} </Text>\r\n                    </View>\r\n                </View>\r\n            ))}\r\n\r\n            <View style={{ flexDirection: 'row', width: screenWidth < 960 ? '90%' : '30%', alignSelf: 'center', }}>\r\n\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <TouchableOpacity\r\n                        style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                        onPress={handlePreviousPage}>\r\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                            <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n                <View style={{ flex: 1, backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n                </View>\r\n\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                    <TouchableOpacity\r\n                        onPress={handleNextPage}>\r\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                            <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n            <TouchableOpacity\r\n              onPress={addKeywordsToVehicleProducts}>\r\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                <MaterialIcons name='save' size={40} color={'white'} />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View> */}\r\n\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n\r\n};\r\n\r\nconst addLogToCollection = async (data) => {\r\n    try {\r\n        const firestore = getFirestore();\r\n        const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n        // Add a new document to the \"logs\" collection\r\n        await addDoc(logsCollectionRef, data);\r\n\r\n        // console.log('Document added successfully!');\r\n    } catch (error) {\r\n        console.error('Error adding document:', error);\r\n    }\r\n};\r\n\r\nconst CurrencyConverterComponent = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n    const [successModalVisible, setSuccessModalVisible] = useState(false);\r\n    const [todayCurrency, setTodayCurrency] = useState([]);\r\n    const [timestampCurrency, setTimestampCurrency] = useState([]);\r\n    const [exchangeRate, setExchangeRate] = useState('');\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [time, setTime] = useState('');\r\n    const [lastUpdate, setLastUpdate] = useState(null);\r\n    const loginName = useSelector((state) => state.loginName);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onSnapshot(\r\n            doc(projectExtensionFirestore, 'currency', 'currency'),\r\n            (snapshot) => {\r\n                const data = snapshot.data();\r\n                setTodayCurrency(data?.todayCurrency);\r\n                setTimestampCurrency(data?.timestampCurrency);\r\n            }\r\n        );\r\n\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const CurrencyConverter = async () => {\r\n\r\n        setIsLoading(true);\r\n        setIsYesLoading(true);\r\n        try {\r\n            const response = await axios.get(\r\n                `https://openexchangerates.org/api/latest.json?app_id=${OPEN_EXCHANGE_API_KEY}`\r\n            );\r\n\r\n            // Replace 'YOUR_APP_ID' with your actual API key obtained from Open Exchange Rates\r\n\r\n\r\n            const rates = response.data.rates;\r\n            const usdToJpy = 1 / rates.JPY; // Invert the rate to convert USD to JPY\r\n            const JpyToUsd = rates.JPY / 1;\r\n\r\n\r\n\r\n            const yenToDollar = Number(usdToJpy.toFixed(4)); // Move the toFixed here\r\n            const dollarToYen = Number(JpyToUsd.toFixed(4));\r\n\r\n            const usdToEur = 1 / rates.EUR;\r\n            const eurToUsd = rates.EUR;\r\n\r\n            const usdToGbp = 1 / rates.GBP;\r\n            const gbpToUsd = rates.GBP;\r\n\r\n            const usdToAud = 1 / rates.AUD;\r\n            const audToUsd = rates.AUD;\r\n\r\n\r\n            const usdToCad = 1 / rates.CAD;\r\n            const cadToUsd = rates.CAD;\r\n\r\n            // Calculate Yen to Euro and Euro to Yen\r\n            const yenToEuro = yenToDollar * eurToUsd; // Convert Yen to USD first, then to Euro\r\n            const euroToYen = dollarToYen * usdToEur; // Convert Euro to USD first, then to Yen\r\n\r\n            const yenToGbp = yenToDollar * gbpToUsd; // Convert Yen to USD first, then to Pound Sterling\r\n            const gbpToYen = dollarToYen * usdToGbp; // Convert Pound Sterling to USD first, then to Yen\r\n\r\n            const yenToAud = yenToDollar * audToUsd; // Convert Yen to USD first, then to Australian Dollars\r\n            const audToYen = dollarToYen * usdToAud; // Convert Australian Dollars to USD first, then to Yen\r\n\r\n            const yenToCad = yenToDollar * cadToUsd; // Convert Yen to USD first, then to Canadian Dollars\r\n            const cadToYen = dollarToYen * usdToCad; // Convert Canadian Dollars to USD first, then to Yen\r\n\r\n            // Format the new rates\r\n\r\n\r\n\r\n            setExchangeRate(yenToDollar);\r\n\r\n            const timestamp = response.data.timestamp;\r\n            const lastUpdateDate = new Date(timestamp * 1000);\r\n            setLastUpdate(lastUpdateDate);\r\n\r\n            const formattedLastUpdate = lastUpdateDate.toLocaleString('en-US', {\r\n                month: 'long',\r\n                day: 'numeric',\r\n                year: 'numeric',\r\n                hour: 'numeric',\r\n                minute: 'numeric',\r\n                second: 'numeric',\r\n                timeZoneName: 'short',\r\n            });\r\n\r\n            const newTodayCurrency = `1 JPY = ${yenToDollar} USD / 1 USD = ${dollarToYen} JPY\\n1 JPY = ${yenToEuro.toFixed(4)} EUR / 1 EUR = ${euroToYen.toFixed(4)} JPY\\n1 JPY = ${yenToAud.toFixed(4)} AUD / 1 AUD = ${audToYen.toFixed(4)} JPY\\n1 JPY = ${yenToGbp.toFixed(4)} GBP / 1 GBP = ${gbpToYen.toFixed(4)} JPY\\n1 JPY = ${yenToCad.toFixed(4)} CAD / 1 CAD = ${cadToYen.toFixed(4)} JPY\\n`;\r\n            const currencyRef = doc(projectExtensionFirestore, 'currency', 'currency');\r\n\r\n            try {\r\n                await setDoc(currencyRef, {\r\n                    jpyToUsd: Number(usdToJpy),\r\n                    usdToJpy: Number(JpyToUsd),\r\n                    jpyToEur: yenToEuro,\r\n                    eurToJpy: euroToYen,\r\n                    jpyToGbp: yenToGbp,\r\n                    gbpToJpy: gbpToYen,\r\n                    jpyToAud: yenToAud,\r\n                    audToJpy: audToYen,\r\n                    usdToEur: eurToUsd,\r\n                    eurToUsd: usdToEur,\r\n                    usdToGbp: gbpToUsd,\r\n                    gbpToUsd: usdToGbp,\r\n                    usdToAud: audToUsd,\r\n                    audToUsd: usdToAud,\r\n                    cadToUsd: usdToCad,\r\n                    usdToCad: cadToUsd,\r\n                    jpyToCad: cadToYen,\r\n                    cadToJpy: yenToCad,\r\n                    todayCurrency: newTodayCurrency,\r\n                    timestampCurrency: 'Updated Last: ' + formattedLastUpdate,\r\n                }, { merge: true });\r\n                // console.log('Currency data updated successfully!');\r\n                setSuccessModalVisible(true);\r\n                setModalVisible(false);\r\n                setIsLoading(false);\r\n                setIsYesLoading(false);\r\n                try {\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime(formattedTime);\r\n\r\n                    const logDataCurrency = {\r\n                        message: `Currency Update: \"${loginName}\" updated the currency exchange.\\n¥JPY → $USD = ${Number(usdToJpy).toFixed(4)} / $USD → ¥JPY = ${Number(JpyToUsd).toFixed(4)}\\n¥JPY → €EUR = ${yenToEuro.toFixed(4)} / €EUR → ¥JPY = ${euroToYen.toFixed(4)}\\n¥JPY → A$AUD = ${yenToAud.toFixed(4)} / A$AUD → ¥JPY = ${audToYen.toFixed(4)}\\n¥JPY → £GBP = ${yenToGbp.toFixed(4)} / £GBP → ¥JPY = ${gbpToYen.toFixed(4)}\\n¥JPY → C$CAD = ${yenToCad.toFixed(4)} / C$CAD → ¥JPY = ${cadToYen.toFixed(4)}`,\r\n                        timestamp: formattedTime, // Use the formatted time here\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            loginName.toLowerCase(),\r\n                            '$'.toLowerCase(),\r\n                            '¥'.toLowerCase(),\r\n                            `Currency Update: \"${loginName}\" updated the currency exchange.`.toLowerCase(),\r\n                            'Update'.toLowerCase(),\r\n                            'Currency'.toLowerCase(),\r\n                            formattedTime.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n\r\n                    };\r\n\r\n                    addLogToCollection(logDataCurrency);\r\n                }\r\n                catch (error) {\r\n                    console.error('Error fetching time:', error);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Error updating currency data:', error);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching exchange rate:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleCloseCurrencyModal = () => {\r\n        setModalVisible(false);\r\n        setIsLoading(false);\r\n    };\r\n    const handleOpenCurrencyModal = () => {\r\n        setModalVisible(true);\r\n        setIsLoading(true);\r\n    };\r\n\r\n    const handleCloseSuccessModal = () => {\r\n        setSuccessModalVisible(false);\r\n        setIsLoading(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                flex={1}\r\n                borderWidth={1}\r\n                borderColor=\"gray.200\"\r\n                borderRadius={4}\r\n                overflow=\"hidden\"\r\n                margin={1}\r\n                alignItems={'center'}\r\n                bg=\"#F5F5F5\">\r\n                <Image\r\n                    source={require('../../assets/currency_background.jpg')}\r\n                    alt=\"Background Image\"\r\n                    resizeMode=\"stretch\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    position={'absolute'}\r\n\r\n                />\r\n\r\n                <Center height=\"100%\">\r\n\r\n                    <Box alignItems=\"center\" backgroundColor={\"rgba(0, 0, 0, 0.7)\"} borderRadius={5} paddingBottom={1}>\r\n\r\n                        <Text bold color=\"#39ff14\" margin={1} textAlign={'center'} fontSize={screenWidth > 960 ? '' : 12} >{todayCurrency}</Text>\r\n                        <Text textAlign=\"center\" color=\"#39ff14\" margin={1} fontSize={screenWidth > 960 ? '' : 12}>{timestampCurrency}</Text>\r\n                        <Button alignSelf={'center'} w={'95%'} _hover={{ bgColor: \"green.800\" }} bgColor={'transparent'} variant={'outline'} borderColor={\"#39ff14\"} _text={{ color: \"#39ff14\", }} onPress={handleOpenCurrencyModal}>{isLoading ? <Spinner color=\"#39ff14\" size={21} /> : 'Update'}</Button>\r\n\r\n                    </Box>\r\n\r\n                </Center>\r\n\r\n            </Box>\r\n\r\n            <Modal isOpen={modalVisible} onClose={handleCloseCurrencyModal}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>Update currency</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to update to the latest currency?\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <Button onPress={handleCloseCurrencyModal} flex={1} margin={1} colorScheme={'danger'}>No</Button>\r\n                        <Button onPress={CurrencyConverter} colorScheme={'success'} flex={1} margin={1}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal><Modal isOpen={successModalVisible} onClose={handleCloseSuccessModal}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header bgColor={'green.200'} borderBottomWidth={0}>Update success!</Modal.Header>\r\n                    <Modal.Body bgColor={'green.200'}>\r\n                        <Text bold margin={1}>{todayCurrency}</Text>\r\n                        <Text margin={1}>{timestampCurrency}</Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer bgColor={'green.200'} borderTopWidth={0}>\r\n                        <Button onPress={handleCloseSuccessModal} flex={1} margin={1}>Ok</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nconst MyBarChart = () => {\r\n    const dataValues = [\r\n        { day: 1, value: 30 },\r\n        { day: 2, value: 45 },\r\n        // ... add data for each day of the month\r\n        { day: 31, value: 60 }\r\n    ];\r\n\r\n    return (\r\n        <ScrollView style={{ flex: 1, margin: 5, borderRadius: 5, }}>\r\n            <VictoryChart\r\n                theme={VictoryTheme.material}\r\n                domainPadding={10}\r\n                style={{\r\n                    parent: {\r\n                        backgroundColor: \"#FFF\", // White background\r\n                    }\r\n                }}\r\n            >\r\n                <VictoryAxis\r\n                    style={{\r\n                        axis: { stroke: \"#757575\" }, // Style for the axis itself\r\n                        ticks: { stroke: \"grey\", size: 5 }, // Style for axis ticks\r\n                        tickLabels: { fontSize: 10, padding: 5, fill: \"grey\" } // Style for the labels\r\n                    }}\r\n                />\r\n                <VictoryAxis\r\n                    dependentAxis\r\n                    style={{\r\n                        axis: { stroke: \"#757575\" },\r\n                        ticks: { stroke: \"grey\", size: 5 },\r\n                        tickLabels: { fontSize: 10, padding: 5, fill: \"grey\" }\r\n                    }}\r\n                />\r\n                <VictoryBar\r\n                    data={dataValues}\r\n                    x=\"day\"\r\n                    y=\"value\"\r\n                    style={{\r\n                        data: {\r\n                            fill: ({ datum }) => datum.value > 50 ? \"#4178BE\" : \"#5AA9E6\", // Blue shades for bars\r\n                            width: 8 // Width of each bar\r\n                        }\r\n                    }}\r\n                    barRatio={0.8} // Adjusts the width of the bars\r\n                />\r\n            </VictoryChart>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\n\r\nexport default function Logs() {\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const loginName = useSelector((state) => state.loginName);\r\n\r\n    // const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n\r\n    const [isSelectedLogs, setIsSelectedLogs] = useState(true);\r\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\r\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    const [remainingTime, setRemainingTime] = useState(0);\r\n    const [todayCurrency, setTodayCurrency] = useState('')\r\n    const [timestampCurrency, setTimestampCurrency] = useState('');\r\n    const [exchangeRate, setExchangeRate] = useState(null);\r\n    const [lastUpdate, setLastUpdate] = useState(null);\r\n\r\n    const [time, setTime] = useState('');\r\n    const optionsPerPage = [13, 26, 52];\r\n    const [page, setPage] = useState(0);\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    const searchInput = useRef(null);\r\n    const searchInputValue = searchInput.current?.value;\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'logs'), orderBy('timestamp', 'desc'));\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                    setData(documents);\r\n                });\r\n\r\n                return () => unsubscribe();\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // const delayedSearch = (text) => {\r\n    //     clearTimeout(timeoutId);\r\n    //     timeoutId = setTimeout(() => {\r\n    //         handleSearch(text);\r\n    //     }, 300); // Set the delay to 300 milliseconds\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n    // const handleChange = text => {\r\n    //     setEmail(text)\r\n    //     setErrorShow(false)\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const SuccessModal = () => {\r\n        return <Center>\r\n            <Modal isOpen={showModal} onClose={() => setShowModal(false)} size=\"lg\"  >\r\n                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n                    <Modal.Body >\r\n                        <Text color=\"white\" textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowModal(false)}>\r\n                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </Center>;\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                // navigation.navigate(\"Login\")\r\n                navigate(\"/Login\");\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(auth)\r\n                    .then(() => {\r\n                        // navigation.navigate('Login');\r\n                        navigate(\"/Login\");\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(auth)\r\n                .then(() => {\r\n                    // navigation.navigate('Login');\r\n                    navigate(\"/Login\");\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = auth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n    const listenForNameChange = (documentId) => {\r\n        const userRef = doc(db, 'accounts', documentId);\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(auth).then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n            setEmail('');\r\n            setName('');\r\n        }).catch(() => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n    // Function to hide the Popover\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#0642F4'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#0642F4'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n    return (\r\n        <NativeBaseProvider>\r\n            <SuccessModal />\r\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#0642f4'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={0}\r\n                    borderBottomColor={'cyan.500'} >\r\n\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen} />\r\n\r\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    {/* \r\n                    {showDrawerIcon && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen} />} */}\r\n\r\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]} >\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n\r\n\r\n                    <View style={{ alignItems: 'center', flex: 1 }}>\r\n                        <QRCodeScanner />\r\n                    </View>\r\n\r\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <Box flex={[1]} flexDirection=\"row\" >\r\n\r\n\r\n                    {/* Main Content */}\r\n                    <Box flex={1} flexGrow={1} minHeight={0} flexDirection={screenWidth <= 960 ? 'column' : 'row'}>\r\n                        {/* Main Content Content */}\r\n\r\n\r\n\r\n                        <Box flex={1}>\r\n                            <CurrencyConverterComponent />\r\n                            <MyBarChart />\r\n                        </Box>\r\n\r\n\r\n\r\n                        <Box flex={1} height={'100%'}>\r\n                            <ScrollView flex={1}>\r\n                                <LogsTable />\r\n                            </ScrollView>\r\n\r\n\r\n                        </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <LoadingModal />\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","// QRCodeScanner.js\r\nimport {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Flex,\r\n    HStack,\r\n    Icon,\r\n    Image as NativeImage,\r\n    Input,\r\n    Modal,\r\n    NativeBaseProvider,\r\n    Popover,\r\n    Spinner,\r\n    Stack,\r\n    Text,\r\n    VStack,\r\n    TextArea,\r\n    InputRightAddon,\r\n    InputGroup,\r\n    InputLeftAddon,\r\n    Select,\r\n    CheckIcon,\r\n    PresenceTransition,\r\n    CloseIcon,\r\n    ScrollView as ScrollViewNative,\r\n    Divider,\r\n    useDisclosure,\r\n    useDisclose,\r\n    FormControl,\r\n    Checkbox,\r\n    useToast,\r\n    Tooltip,\r\n    Progress,\r\n    Alert\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n    Dimensions,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    StyleSheet,\r\n    View,\r\n    PanResponder,\r\n    Animated,\r\n    Easing,\r\n    InputAccessoryView,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    TextInput,\r\n    Image as RNImage,\r\n    Pressable,\r\n    Linking,\r\n    Modal as RNModal,\r\n    Platform,\r\n    SafeAreaView,\r\n} from 'react-native';\r\nimport Webcam from 'react-webcam';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo,\r\n    FontAwesome5,\r\n    EvilIcons\r\n} from 'react-native-vector-icons';\r\n\r\nimport QRCode from 'react-native-qrcode-svg';\r\n\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup, increment } from 'firebase/firestore';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from '../../../crossFirebase';\r\nimport jsQR from 'jsqr';\r\n\r\n\r\nlet formattedIssuingDate = ''; // Initialize the variable outside the conditional rendering block\r\nlet formattedDueDate = '';\r\n\r\nconst mobileViewBreakpoint = 1367;\r\n\r\nconst QRCodeScanner = () => {\r\n    const webcamRef = React.useRef(null);\r\n    const [qrCode, setQrCode] = useState('');\r\n    const [isScanning, setIsScanning] = useState(false);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [invoiceData, setInvoiceData] = useState(null);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    // QR code scanning logic\r\n    useEffect(() => {\r\n        const intervalId = isScanning ? setInterval(() => {\r\n            const video = webcamRef.current;\r\n            if (video) {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.video.videoWidth;\r\n                canvas.height = video.video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video.video, 0, 0, canvas.width, canvas.height);\r\n                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n                const code = jsQR(imageData.data, imageData.width, imageData.height);\r\n                if (code) {\r\n                    clearInterval(intervalId);\r\n                    setIsScanning(false);\r\n                    setQrCode(code.data);\r\n                    console.log(code.data);\r\n\r\n                }\r\n            }\r\n        }, 100) : null;\r\n\r\n        return () => {\r\n            if (intervalId) {\r\n                clearInterval(intervalId);\r\n            }\r\n        };\r\n    }, [isScanning]);\r\n\r\n    const fetchInvoiceData = async (cryptoNumber) => {\r\n        const q = query(collection(projectExtensionFirestore, 'IssuedInvoice'), where('cryptoNumber', '==', cryptoNumber));\r\n        const querySnapshot = await getDocs(q);\r\n        querySnapshot.forEach((doc) => {\r\n            setInvoiceData({ ...doc.data(), id: doc.id });\r\n        });\r\n        setModalVisible(true); // Show the modal after fetching the data\r\n    };\r\n\r\n    // Listen for QR code detection\r\n    useEffect(() => {\r\n        if (qrCode) {\r\n            fetchInvoiceData(qrCode);\r\n        }\r\n    }, [qrCode]);\r\n\r\n    const toggleScanning = () => {\r\n        setIsScanning(!isScanning);\r\n\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n        setQrCode('');\r\n    };\r\n\r\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\r\n        const dueDateString = invoiceData.bankInformations.dueDate;\r\n        const issuingDateObject = new Date(issuingDateString);\r\n        const dueDateObject = new Date(dueDateString);\r\n\r\n\r\n        const options = {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        };\r\n\r\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\r\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\r\n\r\n    }\r\n\r\n    const originalWidth = 794;\r\n    const originalHeight = 1123;\r\n\r\n\r\n    const originalSmallWidth = 794;\r\n    const originalSmallHeight = 1123;\r\n\r\n    const newWidth = 2480;\r\n    const newHeight = 3508;\r\n\r\n    const smallWidth = screenWidth < mobileViewBreakpoint ? 377 : 574;\r\n    const smallHeight = screenWidth < mobileViewBreakpoint ? 541 : 903;\r\n\r\n    const smallWidthScaleFactor = smallWidth / originalSmallWidth;\r\n    const smallHeightScaleFactor = smallHeight / originalSmallHeight;\r\n\r\n    const widthScaleFactor = newWidth / originalWidth;\r\n    const heightScaleFactor = newHeight / originalHeight;\r\n\r\n    const PreviewInvoice = () => {\r\n\r\n        return (\r\n            <View\r\n                style={{\r\n                    width: smallWidth,\r\n                    height: smallHeight,\r\n                    backgroundColor: 'white',\r\n                    zIndex: 1\r\n                }}>\r\n\r\n                <View\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        zIndex: 999,\r\n                    }}\r\n                />\r\n\r\n\r\n                <View style={{ position: 'absolute', left: 38 * smallWidthScaleFactor, top: 38 * smallHeightScaleFactor }}>\r\n                    <NativeImage\r\n                        source={require('../../../assets/RMJ logo for invoice.png')}\r\n                        style={{\r\n                            width: 95 * smallWidthScaleFactor,\r\n                            height: 85 * smallHeightScaleFactor,\r\n                            resizeMode: 'stretch',\r\n                        }}\r\n                    />\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * smallHeightScaleFactor }}>\r\n                    {/* Title */}\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 25 * smallWidthScaleFactor }}>{`INVOICE`}</Text>\r\n\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 38 * smallHeightScaleFactor }}>\r\n                    {/* QR CODE */}\r\n\r\n                    <QRCode\r\n                        value={invoiceData.cryptoNumber}\r\n                        size={80 * smallWidthScaleFactor}\r\n                        color=\"black\"\r\n                        backgroundColor=\"white\"\r\n                    />\r\n\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', right: 121 * smallWidthScaleFactor, top: 34 * smallHeightScaleFactor }}>\r\n                    {/* Invoice Number */}\r\n                    <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Invoice No. RMJ-${invoiceData.id}`}</Text>\r\n\r\n                </View>\r\n                <View style={{ position: 'absolute', right: 121 * smallWidthScaleFactor, top: 49 * smallHeightScaleFactor, flexDirection: 'row' }}>\r\n                    {/* Issuing Date */}\r\n                    <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                </View>\r\n\r\n\r\n                <View style={{\r\n                    position: 'absolute',\r\n                    left: 40 * smallWidthScaleFactor,\r\n                    top: 134 * smallHeightScaleFactor,\r\n                    width: 280 * smallWidthScaleFactor,\r\n                }}>\r\n                    {/* Shipper */}\r\n                    <Text style={{\r\n                        fontWeight: 750,\r\n                        fontSize: 16 * smallWidthScaleFactor,\r\n                        borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                        width: 'fit-content', // Make the underline cover the text width\r\n                        marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                    }}>\r\n                        {`Shipper`}\r\n                    </Text>\r\n                    <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: +81565850606`}</Text>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Shipped From:`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.departurePort}, ${invoiceData.departureCountry}`}</Text>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Shipped To:`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.discharge.port}, ${invoiceData.discharge.country}`}</Text>\r\n                    {invoiceData.placeOfDelivery && invoiceData.placeOfDelivery !== '' ?\r\n                        <>\r\n                            <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Place of Delivery:`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 12 * smallHeightScaleFactor }}>{`${invoiceData.placeOfDelivery}`}</Text>\r\n                        </>\r\n                        : null}\r\n                    {invoiceData.cfs && invoiceData.cfs !== '' ?\r\n                        <>\r\n                            <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`CFS:`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.cfs}`}</Text>\r\n                        </>\r\n                        : null}\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', width: 715 * smallWidthScaleFactor, }}>\r\n\r\n                        <View style={{\r\n                            flex: 1, width: 280 * smallWidthScaleFactor,\r\n                        }}>\r\n                            {/* Buyer Information */}\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 18 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                borderBottomColor: '#0A78BE',\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                color: '#0A78BE',\r\n                                marginTop: 45 * smallHeightScaleFactor,\r\n\r\n                            }}>\r\n                                {`Buyer Information`}\r\n                            </Text>\r\n                            <Text style={{ fontWeight: 750, fontSize: 16 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.name}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.address}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.email}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.contactNumber}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: ${invoiceData.consignee.fax == '' ? 'N/A' : invoiceData.consignee.fax}`}</Text>\r\n\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, paddingLeft: 20 * smallWidthScaleFactor, width: 280 * smallWidthScaleFactor, }}>\r\n                            {/* Notify Party */}\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 18 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                borderBottomColor: '#FF0000',\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                color: '#FF0000',\r\n                                marginTop: 45 * smallHeightScaleFactor,\r\n                            }}>\r\n                                {`Notify Party`}\r\n                            </Text>\r\n                            {invoiceData.notifyParty.sameAsConsignee == true ? (\r\n                                <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\r\n                                (<>\r\n                                    <Text style={{ fontWeight: 750, fontSize: 16 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.name}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.address}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.email}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.contactNumber}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: ${invoiceData.notifyParty.fax == '' ? 'N/A' : invoiceData.notifyParty.fax}`}</Text>\r\n                                </>)}\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n\r\n                </View>\r\n\r\n\r\n                <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 130 * smallHeightScaleFactor, borderWidth: 3 * smallWidthScaleFactor, width: 430 * smallWidthScaleFactor, borderColor: '#1ABA3D', }}>\r\n\r\n                    <View style={{ flex: 1, alignItems: 'center', }}>\r\n                        <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * smallWidthScaleFactor, marginBottom: 5 * smallHeightScaleFactor, }}>\r\n                        <View style={{ flex: 1, marginRight: 50 * smallWidthScaleFactor, }}>\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 14 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                            }}>\r\n                                {`Bank Account`}\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Bank Name: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Branch Name: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`SWIFTCODE: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Address: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Name of Account Holder: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Account Number: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1 }}>\r\n\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 14 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                            }}>\r\n                                {`Payment Terms`}\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Terms: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\r\n                            </Text>\r\n\r\n                            <View style={{ paddingTop: 30 * smallHeightScaleFactor, }}>\r\n\r\n                                <Text style={{\r\n                                    fontWeight: 750,\r\n                                    fontSize: 14 * smallWidthScaleFactor,\r\n                                    borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                                    width: 'fit-content', // Make the underline cover the text width\r\n                                    marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                    color: '#F00A0A',\r\n                                    borderBottomColor: '#F00A0A',\r\n                                }}>\r\n                                    {`Payment Due`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, color: '#F00A0A', lineHeight: 14 * smallWidthScaleFactor }}>{`Due Date: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, color: 'black', lineHeight: 14 * smallWidthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                </Text>\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                </View>\r\n\r\n\r\n\r\n                <View style={{\r\n                    position: 'absolute',\r\n                    left: 38 * smallWidthScaleFactor,\r\n                    top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * smallHeightScaleFactor : 537 * smallHeightScaleFactor,\r\n                    width: 718 * smallWidthScaleFactor,\r\n                    borderWidth: 1 * smallWidthScaleFactor,\r\n                    borderColor: '#C2E2F4',\r\n                    alignSelf: 'center',\r\n                }}>\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Description`}\r\n                            </Text>\r\n\r\n                        </View>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Notes`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Quantity`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Amount`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {`FOB`}\r\n                            </Text>\r\n                        </View>\r\n\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {`$${Math.round(Number(invoiceData.paymentDetails.fobPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {`Freight`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {`$${Math.round(Number(invoiceData.paymentDetails.freightPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                            </Text>}\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <>\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            marginLeft: 2 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                    </Text>\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            marginLeft: 2 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? ` + Insurance` : ' '}\r\n                                    </Text>\r\n                                </>\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        marginLeft: 2 * smallWidthScaleFactor,\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.incoterms == \"CIF\" ? `Insurance` : ' '}\r\n                                </Text>\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                    }}>\r\n                                    {' '}\r\n                                </Text>\r\n                            }\r\n\r\n\r\n                        </View>\r\n\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                            </Text>}\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.incoterms === \"CIF\" ? ` + $${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                    </Text>\r\n                                </Text>\r\n\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.incoterms == \"CIF\" ? `$${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                </Text>\r\n                            }\r\n\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 ? `${invoiceData.paymentDetails.additionalName.join(' + ')}` : ' '}\r\n                            </Text>}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\r\n                                    ? invoiceData.paymentDetails.additionalPrice.map(price =>\r\n                                        `$${parseFloat(price).toLocaleString('en-US', {\r\n                                            style: 'currency',\r\n                                            currency: 'USD',\r\n                                            minimumFractionDigits: 0,\r\n                                            maximumFractionDigits: 0\r\n                                        }).slice(1)}`\r\n                                    ).join(' + ')\r\n                                    : ' '}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            flexDirection: 'row',\r\n                            paddingVertical: 2 * smallHeightScaleFactor,\r\n\r\n                        }}>\r\n                            {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                    {\"Used Vehicle\\n\"}\r\n                                    <Text style={{\r\n                                        fontWeight: 700,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.carName}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.chassisNumber}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.exteriorColor}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.fuel}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.transmission}\\n`}\r\n                                    </Text>\r\n                                </Text>\r\n\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            {invoiceData.paymentDetails && invoiceData.paymentDetails.incoterms && invoiceData.discharge.port && invoiceData.discharge ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    {`${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}`}\r\n                                </Text>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 1,\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    {'1'}\r\n                                </Text>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            justifyContent: 'center',\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\r\n                                <>\r\n                                    <Text style={{\r\n                                        fontWeight: 700,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        color: '#008AC6',\r\n                                        marginRight: 10 * smallWidthScaleFactor,\r\n                                        top: 51 * smallHeightScaleFactor,\r\n                                        left: 50 * smallWidthScaleFactor,\r\n                                        position: 'absolute',\r\n                                    }}>\r\n                                        {\"Total\"}\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            alignSelf: 'center',\r\n                                            color: '#00720B',\r\n                                            marginLeft: 5 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                            {`$${invoiceData.paymentDetails.totalAmount}`}\r\n                                        </Text>\r\n                                    </Text>\r\n\r\n                                </>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', left: 38 * smallWidthScaleFactor, top: 825 * smallHeightScaleFactor, width: 350 * smallWidthScaleFactor, }}>\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Payment Information:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'No warranty service is provided on used vehicles.'}\r\n                    </Text>\r\n\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Conditions for order cancellation:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\r\n                    </Text>\r\n\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Intermediary Banking Information:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Swift code: SMBCUS33'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Address: 277 Park Avenue'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'City: New York, NY'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Postal Code: 10172'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Country: United States'}\r\n                    </Text>\r\n                </View>\r\n\r\n\r\n                <View style={{ position: 'absolute', right: 39 * smallWidthScaleFactor, top: 835 * smallHeightScaleFactor, width: 300 * smallWidthScaleFactor, }}>\r\n                    <View style={{\r\n                        width: 300 * smallWidthScaleFactor,\r\n                        alignItems: 'center',\r\n                        paddingBottom: 80 * smallHeightScaleFactor, // Adjust this value to control space between image and line\r\n                    }}>\r\n                        <NativeImage\r\n                            source={require('../../../assets/RMJ Invoice Signature with Hanko.png')}\r\n                            style={{\r\n                                width: 276 * smallWidthScaleFactor,\r\n                                height: 81 * smallHeightScaleFactor,\r\n                                resizeMode: 'contain',\r\n                                alignSelf: 'center',\r\n                                marginBottom: 0, // Minimize margin to keep the line close\r\n                            }}\r\n                        />\r\n                        <View style={{\r\n                            borderBottomWidth: 1 * smallHeightScaleFactor,\r\n                            borderColor: 'black', // Change the color as needed\r\n                            width: '100%', // Line width as per your requirement\r\n                        }} />\r\n                        <Text italic style={{\r\n                            fontWeight: 700,\r\n                            fontSize: 16 * smallWidthScaleFactor,\r\n                        }}>\r\n                            {'Real Motor Japan'}\r\n                        </Text>\r\n                    </View>\r\n\r\n                    <View style={{\r\n                        width: 300 * smallWidthScaleFactor,\r\n                        alignItems: 'center',\r\n                        paddingBottom: 5 * smallHeightScaleFactor, // Adjust this value to control space between image and line\r\n                    }}>\r\n\r\n                        <View style={{\r\n                            borderBottomWidth: 1 * smallHeightScaleFactor,\r\n                            borderColor: 'black', // Change the color as needed\r\n                            width: '100%', // Line width as per your requirement\r\n                        }} />\r\n                        <Text italic style={{\r\n                            fontWeight: 700,\r\n                            fontSize: 16 * smallWidthScaleFactor,\r\n                        }}>\r\n                            {'Your Signature'}\r\n                        </Text>\r\n                    </View>\r\n                </View>\r\n\r\n\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                paddingRight: 20,\r\n\r\n            }}\r\n        >\r\n            {/* Modal for displaying invoice data */}\r\n            <Modal\r\n                isOpen={modalVisible}\r\n                onClose={handleModalClose}\r\n                size=\"lg\"\r\n                useRNModal\r\n            >\r\n\r\n                {invoiceData ? (\r\n                    <PreviewInvoice />\r\n                ) : (\r\n                    <Text>No data available</Text>\r\n                )}\r\n\r\n            </Modal>\r\n\r\n\r\n            <Modal isOpen={isScanning} onClose={() => setIsScanning(false)} size=\"lg\">\r\n                <View\r\n                    style={{ backgroundColor: 'black', }}\r\n                >\r\n                    <Webcam ref={webcamRef}\r\n                        style={{\r\n                            width: screenWidth < mobileViewBreakpoint ? 300 : 500,\r\n                            height: screenWidth < mobileViewBreakpoint ? 300 : 500,\r\n                        }} videoConstraints={{ facingMode: \"environment\" }} />\r\n                </View>\r\n\r\n\r\n            </Modal>\r\n\r\n            {/* {isScanning && (\r\n                <View style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    right: 0,\r\n                    left: 0,\r\n                    width: 300, // Adjust according to your needs\r\n                    height: 300, // Adjust according to your needs\r\n                    borderRadius: 20,\r\n                    overflow: 'hidden',\r\n                }}>\r\n                    <Webcam ref={webcamRef} style={styles.cameraView} videoConstraints={{ facingMode: \"environment\" }} />\r\n                </View>\r\n            )} */}\r\n\r\n            <Pressable\r\n                focusable={false}\r\n                onPress={toggleScanning}\r\n                style={{\r\n                    padding: 10,\r\n                    borderRadius: 5,\r\n                }}>\r\n                <MaterialCommunityIcons name='data-matrix-scan' size={30} color='white' />\r\n            </Pressable>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    cameraContainer: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: [{ translateX: -150 }, { translateY: -150 }], // Adjust based on your webcam view size\r\n        width: 300, // Adjust according to your needs\r\n        height: 300, // Adjust according to your needs\r\n        borderRadius: 20,\r\n        overflow: 'hidden',\r\n    },\r\n    cameraView: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n});\r\n\r\nexport default QRCodeScanner;\r\n\r\n","\r\nimport {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  HStack,\r\n  Modal,\r\n  Text,\r\n  VStack,\r\n  ScrollView,\r\n\r\n} from 'native-base';\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo\r\n} from 'react-native-vector-icons';\r\nimport { View, TouchableOpacity, Easing, Image, Dimensions, Animated } from 'react-native';\r\nimport { TouchableHighlight } from 'react-native-gesture-handler';\r\nimport { useNavigation } from '@react-navigation/core';\r\n\r\n\r\n\r\nconst MobileViewDrawer = ({ selectedScreen }) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const logo2 = require('../../../assets/C-Hub Logo Only.png');\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const handleOpen = () => {\r\n\r\n    setIsOpen(true);\r\n\r\n  }\r\n  const handleClose = () => {\r\n\r\n    setIsOpen(false);\r\n\r\n  }\r\n\r\n  const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"LOGS\");\r\n  }, []);\r\n\r\n  const handleToggleAddAccount = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  }, []);\r\n\r\n  const handleToggleAccountList = useCallback(() => {\r\n\r\n    navigation.navigate(\"ACCOUNT LIST\");\r\n  }, []);\r\n\r\n  const handleToggleAddVehicle = useCallback(() => {\r\n\r\n    navigation.navigate(\"ADD NEW VEHICLE\");\r\n  }, []);\r\n\r\n\r\n  const handleVehicleList = useCallback(() => {\r\n    navigation.navigate(\"VEHICLE LIST\");\r\n  }, []);\r\n\r\n\r\n  const handleFreight = useCallback(() => {\r\n    navigation.navigate(\"FREIGHT\");\r\n  }, []);\r\n\r\n  const handleChatMessages = useCallback(() => {\r\n    navigation.navigate(\"CHAT MESSAGES\");\r\n  }, []);\r\n\r\n\r\n  const slideAnimation = useRef(new Animated.Value(0)).current;\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      Animated.timing(slideAnimation, {\r\n        toValue: 1,\r\n        duration: 500,\r\n        easing: Easing.inOut(Easing.ease),\r\n        useNativeDriver: true,\r\n      }).start();\r\n    } else {\r\n      Animated.timing(slideAnimation, {\r\n        toValue: 0,\r\n        duration: 500,\r\n        easing: Easing.inOut(Easing.ease),\r\n        useNativeDriver: true,\r\n      }).start();\r\n    }\r\n  }, [isOpen, slideAnimation]);\r\n\r\n  return (\r\n\r\n    <>\r\n      <TouchableHighlight onPress={() => handleOpen()} onPressOut={() => handleOpen()} underlayColor=\"#5a7bc9\" style={{ borderRadius: 5, flex: 1 }}>\r\n        <FontAwesome name=\"navicon\" size={30} color=\"white\" style={{ margin: 2 }} />\r\n      </TouchableHighlight>\r\n\r\n\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onClose={handleClose}\r\n        useRNModal\r\n        style={{\r\n          alignItems: 'flex-start',\r\n          justifyContent: 'flex-start',\r\n          height: '100%',\r\n\r\n        }}\r\n      >\r\n        <Modal.Content\r\n          maxWidth={255}\r\n          borderRadius={0}\r\n          maxHeight=\"100%\"\r\n          height=\"full\"\r\n          bgColor={'transparent'}\r\n        >\r\n          <Animated.View\r\n            style={{\r\n              flex: 1,\r\n              transform: [\r\n                {\r\n                  translateX: slideAnimation.interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [-255, 0],\r\n                  }),\r\n                },\r\n              ],\r\n            }}\r\n          >\r\n            <View style={{ backgroundColor: '#7b9cff', flex: 1, borderRightWidth: 2, borderColor: 'cyan' }}>\r\n              <View style={{ flex: 1, }}>\r\n\r\n                <View style={{ flexDirection: 'row', margin: 3, justifyContent: 'space-between' }}>\r\n                  <View style={{ width: '80%', alignItems: 'center', justifyContent: 'center' }}>\r\n                    <Image\r\n                      source={{\r\n                        uri: logo2,\r\n                      }}\r\n                      resizeMode=\"stretch\"\r\n                      style={{ width: 170, height: 30 }}\r\n                    />\r\n                  </View>\r\n                  <TouchableOpacity\r\n                    style={{ flexDirection: 'row', alignItems: 'flex-end', marginVertical: 1.5, marginHorizontal: 1.5 }}\r\n                  >\r\n                    <MaterialIcons\r\n                      name=\"arrow-back\"\r\n                      size={30}\r\n                      color=\"white\"\r\n                      onPress={handleClose}\r\n                    />\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* Sidebar Content */}\r\n                <View style={{ paddingHorizontal: 1, backgroundColor: '#7b9cff', flex: 1 }}>\r\n                  <ScrollView>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderTopWidth: 1,\r\n                        borderColor: 'white',\r\n                        backgroundColor: selectedScreen == 'LOGS' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleLogs}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <MaterialCommunityIcons name=\"history\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          LOGS\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n\r\n                    {/* ACCOUNT MANAGEMENT */}\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAddAccount}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n\r\n                        <MaterialIcons name=\"person-add\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          ADD C-HUB ACCOUNT\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAccountList}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <MaterialCommunityIcons name=\"account-details\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          ACCOUNT LIST\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n                    {/* VEHICLE INFORMATION INPUT */}\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAddVehicle}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 4, }}>\r\n                          <FontAwesome name=\"automobile\" size={15} color=\"white\" />\r\n                          <FontAwesome\r\n                            name=\"plus\"\r\n                            size={10}\r\n                            color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          UPDATE / ADD NEW VEHICLE\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleVehicleList}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <FontAwesome\r\n                            name=\"automobile\"\r\n                            size={15}\r\n                            color=\"white\" />\r\n\r\n                          <MaterialCommunityIcons name=\"format-list-bulleted\" size={10} color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          VEHICLE LIST\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'FREIGHT' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleFreight}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <MaterialIcons\r\n                            name=\"public\"\r\n                            size={20}\r\n                            color=\"white\" />\r\n\r\n                          <MaterialIcons name=\"sync\" size={12} color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          FREIGHT\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleChatMessages}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <Entypo\r\n                            name=\"chat\"\r\n                            size={20}\r\n                            color=\"white\" />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          CHAT MESSAGES\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    {/* Footer Content */}\r\n                    {/* <TouchableOpacity\r\n              style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\r\n              onPress={handleSignOut}\r\n            >\r\n              <Text style={{ color: 'white', textAlign: 'center' }}>\r\n                Logout\r\n              </Text>\r\n            </TouchableOpacity> */}\r\n                  </ScrollView>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </Animated.View>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default MobileViewDrawer;","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    HStack,\r\n    Modal,\r\n    Text,\r\n    VStack,\r\n    ScrollView,\r\n\r\n} from 'native-base';\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo\r\n} from 'react-native-vector-icons';\r\nimport { View, TouchableOpacity, Easing, Image, Dimensions, Animated, Pressable } from 'react-native';\r\nimport { TouchableHighlight } from 'react-native-gesture-handler';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { HashRouter as Router, Route, Routes, Navigate, useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\nconst SideDrawer = ({ selectedScreen }) => {\r\n\r\n    const loginAccountType = useSelector((state) => state.loginAccountType);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const logo2 = require('../../../assets/C-Hub Logo Only.png');\r\n    const [onHover, setOnHover] = useState(false);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    // const navigation = useNavigation();\r\n\r\n\r\n    const navigate = useNavigate();\r\n    const handleOpen = () => {\r\n\r\n        setIsOpen(true);\r\n\r\n    }\r\n    const handleClose = () => {\r\n\r\n        setIsOpen(false);\r\n\r\n    }\r\n\r\n    const handleToggleLogs = useCallback(() => {\r\n        navigate(\"/top/logs\");\r\n    }, []);\r\n\r\n    const handleToggleAddAccount = useCallback(() => {\r\n        navigate(\"/top/add-c-hub-account\");\r\n    }, []);\r\n\r\n    const handleToggleAccountList = useCallback(() => {\r\n\r\n        navigate(\"/top/account-list\");\r\n    }, []);\r\n\r\n    const handleToggleAddVehicle = useCallback(() => {\r\n\r\n        navigate(\"/top/add-new-vehicle\");\r\n    }, []);\r\n\r\n\r\n    const handleVehicleList = useCallback(() => {\r\n        navigate(\"/top/vehicle-list\");\r\n    }, []);\r\n\r\n\r\n    const handleFreight = useCallback(() => {\r\n        navigate(\"/top/freight\");\r\n    }, []);\r\n\r\n    const handleChatMessages = useCallback(() => {\r\n        navigate(\"/top/chat-messages\");\r\n    }, []);\r\n\r\n\r\n    const slideAnimation = useRef(new Animated.Value(0)).current;\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            Animated.timing(slideAnimation, {\r\n                toValue: 1,\r\n                duration: 500,\r\n                easing: Easing.inOut(Easing.ease),\r\n                useNativeDriver: true,\r\n            }).start();\r\n        } else {\r\n            Animated.timing(slideAnimation, {\r\n                toValue: 0,\r\n                duration: 500,\r\n                easing: Easing.inOut(Easing.ease),\r\n                useNativeDriver: true,\r\n            }).start();\r\n        }\r\n    }, [isOpen, slideAnimation]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable\r\n                onHoverIn={() => {\r\n                    handleOpen()\r\n                    setOnHover(true);\r\n                }}\r\n                onHoverOut={() =>\r\n                    setTimeout(() => setOnHover(false), [100])\r\n                }\r\n                onPress={() => handleOpen()} onPressOut={() => handleOpen()} underlayColor=\"#5a7bc9\" style={{\r\n                    backgroundColor: onHover ? '#5a7bc9' : 'transparent',\r\n                    borderRadius: 5,\r\n                }}>\r\n                <FontAwesome name=\"navicon\" size={30} color=\"white\" style={{ margin: 2 }} />\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={handleClose}\r\n                useRNModal\r\n                style={{\r\n                    alignItems: 'flex-start',\r\n                    justifyContent: 'flex-start',\r\n                    height: '100%',\r\n                }}\r\n            >\r\n                <Modal.Content\r\n                    maxWidth={255}\r\n                    borderRadius={0}\r\n                    maxHeight=\"100%\"\r\n                    height=\"full\"\r\n                    bgColor={'transparent'}\r\n                >\r\n                    <Animated.View\r\n                        style={{\r\n                            flex: 1,\r\n                            transform: [\r\n                                {\r\n                                    translateX: slideAnimation.interpolate({\r\n                                        inputRange: [0, 1],\r\n                                        outputRange: [-255, 0],\r\n                                    }),\r\n                                },\r\n                            ],\r\n                        }}\r\n                    >\r\n\r\n                        <View style={{ backgroundColor: '#0642f4', flex: 1, borderRightWidth: 0, borderColor: 'cyan' }}>\r\n                            <View style={{ flex: 1, }}>\r\n\r\n                                <View style={{ flexDirection: 'row', margin: 3, justifyContent: 'space-between' }}>\r\n                                    <View style={{ width: '80%', alignItems: 'center', justifyContent: 'center' }}>\r\n                                        <Image\r\n                                            source={{\r\n                                                uri: logo2,\r\n                                            }}\r\n                                            resizeMode=\"stretch\"\r\n                                            style={{ width: 170, height: 30 }}\r\n                                        />\r\n                                    </View>\r\n                                    <TouchableOpacity\r\n                                        style={{ flexDirection: 'row', alignItems: 'flex-end', marginVertical: 1.5, marginHorizontal: 1.5 }}\r\n                                    >\r\n                                        <MaterialIcons\r\n                                            name=\"arrow-back\"\r\n                                            size={30}\r\n                                            color=\"white\"\r\n                                            onPress={handleClose}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n\r\n                                {/* Sidebar Content */}\r\n                                <View style={{ paddingHorizontal: 1, backgroundColor: '#0642f4', height: '100%' }}>\r\n                                    <ScrollView style={{ width: 245 }}>\r\n                                        <View style={{ height: 20 }}>\r\n                                            {/* Sidebar Content Items */}\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales') &&\r\n                                                <Button\r\n                                                    _text={{ color: selectedScreen == 'LOGS' ? '#0642F4' : \"white\", }}\r\n                                                    borderRadius={0}\r\n                                                    borderTopWidth={1}\r\n                                                    borderBottomWidth={1}\r\n                                                    borderColor={'white'}\r\n                                                    _hover={{ bgColor: selectedScreen == 'LOGS' ? '#FFFFFF' : '#032da8', }}\r\n                                                    marginTop={0}\r\n                                                    w={'full'}\r\n                                                    onPress={() => selectedScreen == 'LOGS' ? null : handleToggleLogs()}\r\n                                                    colorScheme={undefined}\r\n                                                    bgColor={selectedScreen == 'LOGS' ? '#FFFFFF' : '#0642F4'}\r\n                                                    leftIcon={<MaterialCommunityIcons name=\"history\" size={20} color={selectedScreen == 'LOGS' ? '#0642F4' : \"white\"} />}\r\n                                                    justifyContent=\"flex-start\"\r\n                                                    alignItems=\"center\"\r\n                                                >\r\n                                                    LOGS\r\n                                                </Button>\r\n                                            }\r\n\r\n                                            {/* ACCOUNT MANAGEMENT */}\r\n                                            {loginAccountType == 'admin' && <Button\r\n                                                _text={{ color: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0} w={'full'}\r\n                                                onPress={() => selectedScreen == 'ADD C-HUB ACCOUNT' ? null : handleToggleAddAccount()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'ADD C-HUB ACCOUNT' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={<MaterialIcons name=\"person-add\" size={20} color={selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : \"white\"} />}\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >ADD C-HUB ACCOUNT</Button>}\r\n\r\n                                            {loginAccountType == 'admin' && <Button\r\n                                                _text={{ color: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'ACCOUNT LIST' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => selectedScreen == 'ACCOUNT LIST' ? null : handleToggleAccountList()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'ACCOUNT LIST' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={\r\n                                                    <MaterialCommunityIcons name=\"account-details\" size={20}\r\n                                                        color={selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : \"white\"}\r\n                                                    />\r\n\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >ACCOUNT LIST</Button>}\r\n                                            {/* VEHICLE INFORMATION INPUT */}\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') &&\r\n                                                <Button\r\n                                                    _text={{ color: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\", }}\r\n                                                    borderRadius={0}\r\n                                                    borderTopWidth={1}\r\n                                                    borderBottomWidth={1}\r\n                                                    borderColor={'white'}\r\n                                                    _hover={{ bgColor: selectedScreen == 'ADD NEW VEHICLE' ? '#FFFFFF' : '#032da8', }}\r\n                                                    marginTop={0} w={'full'}\r\n                                                    onPress={() => selectedScreen == 'ADD NEW VEHICLE' ? null : handleToggleAddVehicle()}\r\n                                                    colorScheme={undefined}\r\n                                                    bgColor={selectedScreen == 'ADD NEW VEHICLE' ? '#FFFFFF' : '#0642F4'}\r\n                                                    leftIcon={\r\n                                                        <>\r\n                                                            <View>\r\n                                                                <FontAwesome name=\"automobile\" size={15}\r\n                                                                    color={selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\"}\r\n                                                                />\r\n                                                                <FontAwesome\r\n                                                                    name=\"plus\"\r\n                                                                    size={10}\r\n                                                                    color={selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\"}\r\n                                                                    style={{\r\n                                                                        position: 'absolute', // Position it absolutely...\r\n                                                                        top: -3, // ...at the top...\r\n                                                                        left: -5 // ...and left.\r\n                                                                    }}\r\n                                                                />\r\n                                                            </View>\r\n\r\n\r\n                                                        </>\r\n                                                    }\r\n                                                    justifyContent=\"flex-start\"\r\n                                                    alignItems=\"center\"\r\n                                                >UPDATE / ADD NEW VEHICLE</Button>\r\n                                            }\r\n\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') &&\r\n                                                <Button\r\n                                                    _text={{ color: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\", }}\r\n                                                    borderRadius={0}\r\n                                                    borderTopWidth={1}\r\n                                                    borderBottomWidth={1}\r\n                                                    borderColor={'white'}\r\n                                                    _hover={{ bgColor: selectedScreen == 'VEHICLE LIST' ? '#FFFFFF' : '#032da8', }}\r\n                                                    marginTop={0}\r\n                                                    onPress={() => selectedScreen == 'VEHICLE LIST' ? null : handleVehicleList()}\r\n                                                    colorScheme={undefined}\r\n                                                    bgColor={selectedScreen == 'VEHICLE LIST' ? '#FFFFFF' : '#0642F4'}\r\n                                                    leftIcon={\r\n                                                        <>\r\n                                                            <View>\r\n                                                                <FontAwesome\r\n                                                                    name=\"automobile\"\r\n                                                                    size={15}\r\n                                                                    color={selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\"}\r\n                                                                />\r\n\r\n                                                                <MaterialCommunityIcons name=\"format-list-bulleted\" size={10}\r\n                                                                    color={selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\"}\r\n                                                                    style={{\r\n                                                                        position: 'absolute', // Position it absolutely...\r\n                                                                        top: -3, // ...at the top...\r\n                                                                        left: -5 // ...and left.\r\n                                                                    }}\r\n                                                                />\r\n\r\n                                                            </View>\r\n\r\n\r\n                                                        </>\r\n                                                    }\r\n                                                    justifyContent=\"flex-start\"\r\n                                                    alignItems=\"center\"\r\n                                                // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                                >VEHICLE LIST</Button>}\r\n\r\n                                            {loginAccountType == 'admin' && <Button\r\n                                                _text={{ color: selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'FREIGHT' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => selectedScreen == 'FREIGHT' ? null : handleFreight()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'FREIGHT' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <MaterialIcons\r\n                                                                name=\"public\"\r\n                                                                size={20}\r\n                                                                color={selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\"}\r\n                                                            />\r\n\r\n                                                            <MaterialIcons name=\"sync\" size={12}\r\n                                                                color={selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\"}\r\n                                                                style={{\r\n                                                                    position: 'absolute', // Position it absolutely...\r\n                                                                    top: -3, // ...at the top...\r\n                                                                    left: -5 // ...and left.\r\n                                                                }}\r\n                                                            />\r\n\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                            >FREIGHT</Button>\r\n                                            }\r\n\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') && <Button\r\n                                                _text={{ color: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'CHAT MESSAGES' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => { selectedScreen == 'CHAT MESSAGES' ? null : handleChatMessages() }}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'CHAT MESSAGES' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <Entypo\r\n                                                                name=\"chat\"\r\n                                                                size={20}\r\n                                                                color={selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : \"white\"}\r\n\r\n                                                            />\r\n\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                            >CHAT MESSAGES</Button>}\r\n                                        </View>\r\n                                        {/* Footer Content */}\r\n                                        {/* <TouchableOpacity\r\n            style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\r\n            onPress={handleSignOut}\r\n          >\r\n            <Text style={{ color: 'white', textAlign: 'center' }}>\r\n              Logout\r\n            </Text>\r\n          </TouchableOpacity> */}\r\n                                    </ScrollView>\r\n                                    <View style={{ borderTopWidth: 0, backgroundColor: '#7b9cff', position: 'absolute', bottom: 0, left: 0, right: 0, borderTopColor: 'gray', paddingTop: 3 }}>\r\n                                        {/* Footer Content */}\r\n                                        {/* <Center marginBottom={1.5}>\r\n            <Button w={100} colorScheme=\"error\" onPress={handleSignOut}>\r\n              <MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" /> Logout\r\n            </Button>\r\n          </Center> */}\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n\r\n                    </Animated.View>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default SideDrawer;","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  Image as NativeImage,\r\n  Input,\r\n  Modal,\r\n  NativeBaseProvider,\r\n  Popover,\r\n  Pressable,\r\n  Spinner,\r\n  Stack,\r\n  Text,\r\n  VStack,\r\n  useBreakpointValue,\r\n  TextArea,\r\n  InputRightAddon,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  Select,\r\n  CheckIcon,\r\n  PresenceTransition,\r\n  CloseIcon,\r\n  ScrollView as ScrollViewNative,\r\n  Divider,\r\n  useDisclosure,\r\n  useDisclose,\r\n  FormControl,\r\n  Checkbox,\r\n  useToast\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n  Dimensions,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  StyleSheet,\r\n  View,\r\n  PanResponder,\r\n  Animated,\r\n  InputAccessoryView,\r\n  FlatList,\r\n  ScrollView,\r\n  TouchableHighlight,\r\n  TextInput,\r\n  Image as RNImage\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo,\r\n  FontAwesome5,\r\n  EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n  setVehicleListData,\r\n  setSupplyChainsCostsData,\r\n  setSelectedPaidTo,\r\n  setSelectedExpenseName,\r\n  setSupplyChainsCostsModalVisible,\r\n  setVehicleListSupplyChainsCostsData,\r\n  setDeleteImageVisible,\r\n  setSelectedImages,\r\n  setAddAnotherImages,\r\n  setIsAddPhotoVisible,\r\n  setUploadImagesModalVisible,\r\n  setUploadImagesButtonLoading,\r\n  setViewImagesModalVisible,\r\n  setViewImagesData,\r\n  setLoadingModalVisible,\r\n  setAddVehicleListData,\r\n  setEditVehicleModalVisible,\r\n  setFobPriceHistoryModalVisible,\r\n  setFobHistoryData,\r\n  setLoginName\r\n} from './redux/store';\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'VEHICLE LIST'\r\n\r\nlet globalSupplyChainCostsData = [];\r\nlet globalCurrentSupplyChainCostsData = [];\r\nlet globalFobPriceHistoryData = [];\r\nlet globalCurrentStockID = '';\r\nlet globalSelectedPaidTo = '';\r\nlet globalSPCSelectedDate = '';\r\nlet globalSelectedExpenseName = '';\r\nlet globalSupplyChainCostsAmount = 0;\r\nlet globalSelectedImages = [];\r\nlet globalSelectedVehicle = '';\r\nlet globalSelectedVehicleReferenceNumber = '';\r\nlet globalSelectedCarName = '';\r\nconst nameVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = projectControlAuth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    // console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nconst storage = getStorage(projectExtensionFirebase);\r\n\r\nconst SelectStockStatus = ({ selectedValue, id, item }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n  const [selectedStockStatusValue, setSelectedStockStatusValue] = useState(selectedValue);\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', id), (doc) => {\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        // Handle the data from the document\r\n        setSelectedStockStatusValue(data.stockStatus);\r\n        // console.log(`Read ${doc.size} documents from VehicleProducts`);\r\n\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleSaveStockStatus = async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n    if (item.stockStatus == selectedStockStatusValue || selectedStockStatusValue == '' || selectedStockStatusValue == '__NativeBasePlaceHolder__') {\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n    else {\r\n\r\n      const stockStatusHistoryData = {\r\n        date: formattedTime,\r\n        stockStatus: selectedStockStatusValue,\r\n        changedBy: nameVariable.text,\r\n      };\r\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n      try {\r\n        await updateDoc(vehicleProductRef, {\r\n          stockStatus: selectedStockStatusValue,\r\n          stockStatusHistory: arrayUnion(stockStatusHistoryData)\r\n        });\r\n        const logData = {\r\n          message: `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to \"${selectedStockStatusValue}\" with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            globalCurrentStockID.toLowerCase(),\r\n            `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to ${selectedStockStatusValue} with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n            'Stock Status'.toLowerCase(),\r\n            'Stock Status Updated'.toLowerCase(),\r\n            'Stock'.toLowerCase(),\r\n            'Status Updated'.toLowerCase(),\r\n            'Updated'.toLowerCase(),\r\n            globalSelectedCarName.toLowerCase(),\r\n            globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n        // console.log('FOB Price updated successfully');\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Stock Status updated successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n      <View style={{ width: screenWidth >= 1360 ? '70%' : '88%', backgroundColor: 'white', }}>\r\n        <Select\r\n          selectedValue={selectedStockStatusValue}\r\n          onValueChange={(value) => {\r\n            setSelectedStockStatusValue(value);\r\n          }}\r\n          flex={3}\r\n          accessibilityLabel=\"---\"\r\n          placeholder=\"---\"\r\n          _selectedItem={{\r\n            bg: \"teal.600\",\r\n            endIcon: <CheckIcon size=\"5\" />\r\n          }}\r\n        >\r\n          {stockStatusData.map((item) => (\r\n            <Select.Item key={item} label={item} value={item} />\r\n          ))}\r\n        </Select>\r\n      </View>\r\n\r\n      <TouchableHighlight\r\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n        onPress={handleSaveStockStatus}\r\n        style={{\r\n          backgroundColor: '#16A34A',\r\n          borderRadius: 5,\r\n          padding: 3,\r\n          margin: 2,\r\n          alignSelf: 'center',\r\n        }}>\r\n        <MaterialIcons name='update' color='white' size={22} />\r\n      </TouchableHighlight>\r\n    </View>\r\n\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nconst addLogToCollection = async (data) => {\r\n  try {\r\n    const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n    // Add a new document to the \"logs\" collection\r\n    await addDoc(logsCollectionRef, data);\r\n\r\n    // console.log('Document added successfully!');\r\n  } catch (error) {\r\n    console.error('Error adding document:', error);\r\n  }\r\n};\r\n\r\nconst LoadingModal = () => {\r\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        flex: 1,\r\n        display: loadingModalVisible ? 'flex' : 'none',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      {/* Content within the modal */}\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Spinner size=\"lg\" color=\"white\" />\r\n        <Text style={{ color: 'white' }} selectable={false}>Loading, please wait!</Text>\r\n      </View>\r\n    </View>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\r\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n\r\n  const handleModalDeleteOpen = () => {\r\n    setModalDeleteImagesVisible(true);\r\n  };\r\n\r\n  const handleModalDeleteClose = () => {\r\n    setModalDeleteImagesVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          right: 0,\r\n          backgroundColor: '#FF4136',\r\n          borderRadius: 3,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          display: isAddPhotoVisible ? 'none' : 'flex',\r\n        }}\r\n      >\r\n        <TouchableHighlight onPress={handleModalDeleteOpen} style={{ flex: 1 }}>\r\n          <Ionicons name=\"trash-sharp\" size={20} color=\"white\" />\r\n        </TouchableHighlight>\r\n      </View>\r\n\r\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\r\n        <Modal.Content bgColor={'error.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear Images\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'error.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.400'}\r\n            margin={5}\r\n          >\r\n            <View style={{ flex: 1 }}>\r\n              <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>Alert!</Text>\r\n              <Text style={{ color: '#FF4136' }}>\r\n                Are you sure you want to clear{' '}\r\n                <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>\r\n                  {selectedImages.length}\r\n                </Text>{' '}\r\n                selected image(s)?\r\n              </Text>\r\n            </View>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\r\n            <View style={{ flexDirection: 'row', flex: 1 }}>\r\n              <TouchableOpacity\r\n                onPress={handleModalDeleteClose}\r\n                style={{\r\n                  flex: 1,\r\n                  backgroundColor: '#57534E', // Replace with your desired color\r\n                  borderRadius: 5,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  margin: 5,\r\n                  padding: 5,\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 14, color: 'white' }}>No</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={handleClearImages}\r\n                style={{\r\n                  flex: 1,\r\n                  backgroundColor: '#DC2626', // Replace with your desired color\r\n                  borderRadius: 5,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  margin: 5,\r\n                  padding: 5,\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 14, color: 'white' }}>Clear Images</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\r\n  const dispatch = useDispatch();\r\n  const { width } = Dimensions.get('window');\r\n\r\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  const [boolean, setBoolean] = useState(true);\r\n  const selectedImages = useSelector((state) => state.selectedImages);\r\n  // const [selectedImages, setSelectedImages] = useState([]);\r\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\r\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\r\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\r\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\r\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n  const [scrollEnabled, setscrollEnabled] = useState(true);\r\n  const [isEnterEdit, setisEnterEdit] = useState(false);\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setIsCursorLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    dropdown: {\r\n      margin: 16,\r\n      height: 50,\r\n      borderBottomColor: 'gray',\r\n      borderBottomWidth: 0.5,\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n      fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n      height: 40,\r\n      fontSize: 16,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 20,\r\n\r\n    },\r\n    txt: {\r\n      fontSize: 18,\r\n      lineHeight: 24,\r\n      padding: 5\r\n    },\r\n    sort: {\r\n    },\r\n    item_children: {\r\n      width: 90,\r\n      height: 90,\r\n      backgroundColor: 'black',\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    item_delete_icon: {\r\n      width: 14,\r\n      height: 14,\r\n      position: \"absolute\",\r\n      right: 1,\r\n      top: 1\r\n    },\r\n    item_icon: {\r\n      width: 90,\r\n      height: 90,\r\n      resizeMode: \"contain\",\r\n      position: \"absolute\"\r\n    }\r\n  });\r\n\r\n  const handleImageAddToSelection = async () => {\r\n    dispatch(setDeleteImageVisible(true));\r\n    if (selectedImages.length === 40) {\r\n      return; // Limit reached, do not add a new image\r\n    }\r\n\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        // console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        // console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        // console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Filter out images larger than 10MB\r\n      const newImages = [...selectedImages];\r\n      const promises = response.assets.map(async (asset) => {\r\n        const file = await fetch(asset.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          const exists = newImages.some((image) => image.uri === asset.uri);\r\n          if (!exists) {\r\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\r\n          }\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      });\r\n\r\n      await Promise.all(promises);\r\n\r\n      const limitedImages = newImages.slice(0, 40);\r\n      dispatch(setSelectedImages(limitedImages));\r\n      globalSelectedImages = limitedImages;\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      // limitedImages.forEach((image) => {\r\n      //   console.log(`File size: ${image.fileSize}`);\r\n      // });\r\n\r\n    } catch (error) {\r\n      // console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n  const reloadData = useCallback(() => {\r\n    if (selectedImages.length > 0) {\r\n      // ... Logic to reload data using selectedImages and width\r\n\r\n      // Assuming your logic has updated selectedImages, you can directly use it here\r\n      const updatedSelectedImages = [...selectedImages];\r\n\r\n      // Dispatch the updatedSelectedImages array to the state\r\n      dispatch(setSelectedImages(updatedSelectedImages));\r\n    }\r\n\r\n  }, [widthState]);\r\n\r\n  useEffect(() => {\r\n    const handleWidthChange = ({ window }) => {\r\n      setWidthState(window.width);\r\n    };\r\n\r\n    Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n    return () => {\r\n      Dimensions.removeEventListener('change', handleWidthChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, [reloadData]);\r\n\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    setModalDeleteImagesVisible(false);\r\n    // dispatch(setSelectedImages([]));\r\n    // globalSelectedImages = [];\r\n    // dispatch(setIsAddPhotoVisible(true));\r\n    // dispatch(setAddAnotherImages(false));\r\n    // dispatch(setDeleteImageVisible(true));\r\n    handleClearImagesExtra();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const renderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleImageSelection = async () => {\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40,\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        // console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        // console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        // console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Remove duplicates from the selected images\r\n      const uniqueImages = response.assets.filter(\r\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\r\n      );\r\n\r\n      // Filter out images larger than 10MB\r\n      const filteredImages = [];\r\n      const imageOrder = [];\r\n      for (let index = 0; index < uniqueImages.length; index++) {\r\n        const image = uniqueImages[index];\r\n        const file = await fetch(image.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          filteredImages.push(image);\r\n          imageOrder.push(index);\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      }\r\n\r\n\r\n      // Sort the filtered images based on their original order\r\n      const sortedImages = filteredImages.sort((a, b) => {\r\n        const indexA = imageOrder[filteredImages.indexOf(a)];\r\n        const indexB = imageOrder[filteredImages.indexOf(b)];\r\n        return indexA - indexB;\r\n      });\r\n\r\n\r\n\r\n      // Limit the number of selected images to 40\r\n      const limitedImages = sortedImages.slice(0, 40);\r\n\r\n      globalSelectedImages = limitedImages;\r\n      if (limitedImages.length > 0) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(true));\r\n      }\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      dispatch(setSelectedImages(globalSelectedImages));\r\n\r\n    } catch (error) {\r\n      // console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleDeleteImagePress = useCallback((uri) => {\r\n\r\n    globalSelectedImages = globalSelectedImages.filter((item) => {\r\n      // Replace 'uriToDelete' with the URI you want to delete\r\n      return item.uri !== uri;\r\n    });\r\n\r\n    if (globalSelectedImages.length < 40) {\r\n      dispatch(setAddAnotherImages(true));\r\n    }\r\n\r\n    if (globalSelectedImages.length == 0) {\r\n      dispatch(setAddAnotherImages(false));\r\n      dispatch(setIsAddPhotoVisible(true));\r\n    }\r\n    dispatch(setSelectedImages(globalSelectedImages));\r\n    // dispatch(setSelectedImages((prevImages) => {\r\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\r\n\r\n    //   if (updatedImages.length < 40) {\r\n    //     dispatch(setAddAnotherImages(true));\r\n    //   }\r\n    //   if (updatedImages.length == 0) {\r\n    //    dispatch(setAddAnotherImages(false));\r\n    //     dispatch(setIsAddPhotoVisible(true));\r\n    //   }\r\n    //   return updatedImages;\r\n    // }));\r\n\r\n    // console.log(globalSelectedImages.map((item) => item.uri));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\r\n\r\n\r\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\r\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\r\n\r\n            <ClearImagesModal\r\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\r\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\r\n              handleClearImages={handleClearImages}\r\n              selectedImages={selectedImages}\r\n              isAddPhotoVisible={isAddPhotoVisible} />\r\n\r\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\r\n\r\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"#12293F\" />\r\n\r\n\r\n              <ScrollView\r\n                scrollEnabled={scrollEnabled}\r\n                flex={1}\r\n              >\r\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    delayLongPress={100}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onDragStart={useCallback(() => {\r\n                      if (!isEnterEdit) {\r\n                        setisEnterEdit(true);\r\n                        setscrollEnabled(false);\r\n                      } else {\r\n                        setscrollEnabled(false);\r\n                      }\r\n                    }, [])}\r\n                    onDragEnd={useCallback(() => {\r\n                      setscrollEnabled(true);\r\n                    }, [])}\r\n                    onDataChange={useCallback((data) => {\r\n\r\n                      if (data.length !== data) {\r\n                        dispatch(setSelectedImages(data));\r\n                        globalSelectedImages = data;\r\n                      }\r\n\r\n                    }, [])}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => renderItem(item, index), [])} />\r\n\r\n                  <Center>\r\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"#12293F\" />\r\n                  </Center>\r\n\r\n                </Box>\r\n\r\n\r\n\r\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    sortable={false}\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\r\n\r\n                </Box>\r\n              </ScrollView>\r\n\r\n\r\n\r\n\r\n            </Box>\r\n\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={0}\r\n              left={0}\r\n              borderRadius={3}\r\n              bgColor={'rgba(0, 0, 0, 0.5)'}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              display={isAddPhotoVisible ? 'none' : 'block'}>\r\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\r\n            </Box>\r\n          </Box>\r\n\r\n        </ScrollView>\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      {/* </Box> */}\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} useRNModal>\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Please select image(s) smaller than 10MB!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploadModal = ({ handleUploadImagesModalClose, screenWidth, dragSortableViewRef, handleClearImagesExtra, handleUploadImages }) => {\r\n\r\n  const uploadImagesModalVisible = useSelector((state) => state.uploadImagesModalVisible)\r\n  const uploadImagesButtonLoading = useSelector((state) => state.uploadImagesButtonLoading)\r\n  return (\r\n    <Modal isOpen={uploadImagesModalVisible} onClose={handleUploadImagesModalClose} size={'full'} useRNModal>\r\n      <Modal.Content bgColor={'white'} w={'90%'} h={'100%'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Upload Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n\r\n\r\n        <View style={{ flex: 1, height: '100%', width: '100%', alignItems: 'center', justifyContent: 'center' }}>\r\n\r\n          <View style={{ borderWidth: 1, borderColor: '#12293F', width: '95%', height: '95%' }}>\r\n\r\n            <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\r\n\r\n          </View>\r\n\r\n        </View>\r\n\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <TouchableOpacity\r\n            onPress={handleUploadImagesModalClose}\r\n            style={{\r\n              backgroundColor: '#525252',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Close</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ flex: 4 }} />\r\n\r\n          <TouchableOpacity\r\n            disabled={uploadImagesButtonLoading}\r\n            onPress={handleUploadImages}\r\n            style={{\r\n              backgroundColor: '#16A34A',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            {!uploadImagesButtonLoading ? (\r\n              <Text style={{ color: 'white' }}>Upload</Text>) : (\r\n              <Spinner color=\"white\" />\r\n            )}\r\n          </TouchableOpacity>\r\n\r\n\r\n        </View>\r\n\r\n\r\n\r\n      </Modal.Content>\r\n\r\n    </Modal>\r\n\r\n  );\r\n}\r\n\r\nconst UploadImagesModal = ({ fetchImageCounts }) => {\r\n\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const dragSortableViewRef = useRef();\r\n\r\n  const handleClearImagesExtra = () => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n    dispatch(setDeleteImageVisible(true));\r\n  };\r\n\r\n\r\n  const handleUploadImagesModalClose = () => {\r\n\r\n    dispatch(setUploadImagesModalVisible(false));\r\n    // globalCurrentStockID = '';\r\n    handleClearImagesExtra();\r\n    globalSelectedVehicle = '';\r\n  }\r\n\r\n  const uploadImages = useCallback(async () => {\r\n\r\n    const storageRef = ref(storage, `${globalCurrentStockID}`);\r\n    const ImageFormat = { jpg: 'jpg' };\r\n    const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n    const docRef = doc(collectionRef, globalCurrentStockID);\r\n\r\n\r\n\r\n    try {\r\n      // Get the names of the images to keep\r\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n      // Delete existing files in the folder that do not match the names of the images to keep\r\n      const listResult = await listAll(storageRef);\r\n      await Promise.all(\r\n        listResult.items\r\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n          .map((itemRef) => deleteObject(itemRef))\r\n      );\r\n\r\n      await Promise.all(\r\n        globalSelectedImages.map(async (asset, index) => {\r\n          const { uri } = asset;\r\n          const imagename = index.toString();\r\n\r\n          const response = await fetch(uri);\r\n          const blob = await response.blob();\r\n\r\n          // Create an offscreen canvas\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          // Create a new image object\r\n          const img = new Image();\r\n          img.src = URL.createObjectURL(blob);\r\n\r\n          // Draw the image on the canvas\r\n          img.onload = async () => {\r\n            // Create a canvas element\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            // Calculate the desired width and height for the resized image\r\n            const maxWidth = 800; // Set your desired maximum width\r\n            const maxHeight = 600; // Set your desired maximum height\r\n            let newWidth = img.width;\r\n            let newHeight = img.height;\r\n\r\n            // Check if the image needs resizing\r\n            if (img.width > maxWidth) {\r\n              newWidth = maxWidth;\r\n              newHeight = (img.height * maxWidth) / img.width;\r\n            }\r\n\r\n            if (newHeight > maxHeight) {\r\n              newWidth = (newWidth * maxHeight) / newHeight;\r\n              newHeight = maxHeight;\r\n            }\r\n\r\n            // Set the canvas dimensions to the new width and height\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n\r\n            // Draw the resized image onto the canvas\r\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n\r\n            // Calculate the font size as a percentage of the image width\r\n            const fontSizePercentage = 3;\r\n            const imageRes = img.height * img.width;\r\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\r\n\r\n            ctx.font = `bold ${fontSize}px Arial`;\r\n            ctx.fillStyle = '#fff';\r\n            ctx.shadowColor = 'transparent';\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.lineWidth = 2;\r\n\r\n            // Calculate the position for the watermark text\r\n            const watermarkText = `Real Motor Japan ${globalSelectedVehicleReferenceNumber}`;\r\n            const textWidth = ctx.measureText(watermarkText).width;\r\n            const textHeight = fontSize; // Font size determines the text height\r\n\r\n            // Set padding around the text (adjust as needed)\r\n            const paddingX = 10;\r\n            const paddingY = 5;\r\n\r\n            // Calculate the position for the text shadow\r\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\r\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\r\n\r\n            // Increase the shadow thickness by adjusting the shadow blur radius\r\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\r\n\r\n            // Draw the text shadow (black)\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(watermarkText, xShadow, yShadow);\r\n\r\n            // Reset the shadow blur radius for the actual text\r\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\r\n\r\n            // Calculate the position for the actual text\r\n            const x = (canvas.width - textWidth) / 2;\r\n            const y = canvas.height - 20;\r\n\r\n            // Draw the actual text (white)\r\n            ctx.fillStyle = '#fff';\r\n            ctx.fillText(watermarkText, x, y);\r\n\r\n            // Convert the canvas to a blob\r\n            const watermarkedImageBlob = await new Promise(resolve => {\r\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\r\n            });\r\n\r\n            // Upload the resized image to Firebase Storage\r\n            const imageRef = ref(storage, `${globalCurrentStockID}/${imagename}`);\r\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\r\n          };\r\n        })\r\n      );\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n      const year = moment(datetime).format('YYYY');\r\n      const month = moment(datetime).format('MM');\r\n      const monthWithDay = moment(datetime).format('MM/DD');\r\n      const date = moment(datetime).format('YYYY/MM/DD');\r\n      const day = moment(datetime).format('DD');\r\n      const time = moment(datetime).format('HH:mm');\r\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n      const imageCount = {\r\n        imageCount: globalSelectedImages.length,\r\n      };\r\n\r\n      await updateDoc(docRef, imageCount);\r\n\r\n      const logData = {\r\n        message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber}\" using Vehicle List`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber} using Vehicle List\"`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle Updated'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n\r\n      // console.log(`Images uploaded to folder ${globalCurrentStockID}`);\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleUploadImages = async () => {\r\n\r\n    dispatch(setUploadImagesButtonLoading(true));\r\n\r\n    if (globalSelectedImages.length > 0) {\r\n      toast.closeAll();\r\n      try {\r\n        await uploadImages();\r\n        dispatch(setUploadImagesButtonLoading(false));\r\n        fetchImageCounts();\r\n        handleUploadImagesModalClose();\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Uploaded Images successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        dispatch(setUploadImagesButtonLoading(false));\r\n        handleUploadImagesModalClose();\r\n\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Uploaded Error: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    else {\r\n      dispatch(setUploadImagesButtonLoading(false));\r\n    }\r\n\r\n\r\n\r\n  };\r\n\r\n  return (\r\n\r\n    <>\r\n      <ImageUploadModal\r\n        handleUploadImagesModalClose={handleUploadImagesModalClose}\r\n        screenWidth={screenWidth}\r\n        dragSortableViewRef={dragSortableViewRef}\r\n        handleClearImagesExtra={handleClearImagesExtra}\r\n        handleUploadImages={handleUploadImages} />\r\n    </>\r\n  );\r\n\r\n};\r\n\r\n\r\nconst SupplyChainsCosts = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsOpen = useCallback((data) => {\r\n    dispatch(setSupplyChainsCostsModalVisible(true));\r\n    dispatch(setVehicleListSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\r\n    globalSupplyChainCostsData = data.supplyChainsCostsData;\r\n    globalCurrentSupplyChainCostsData = data.supplyChainsCostsData;\r\n    globalCurrentStockID = data.stockID;\r\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\r\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\r\n    globalSelectedCarName = data.carName;\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <><TouchableOpacity\r\n      onPress={() => handleModalSupplyChainsCostsOpen(data)}\r\n      style={{\r\n        backgroundColor: '#12293F',\r\n        borderRadius: 5,\r\n        padding: 2,\r\n        // flex: 1,\r\n        width: '90%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}\r\n    >\r\n      {/* <Text style={{ textAlign: 'center', }}>Expense</Text> */}\r\n      <MaterialIcons name=\"payments\" size={22} color=\"white\" />\r\n    </TouchableOpacity>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n}\r\n\r\nconst AllSccModals = ({ supplyChainsCostsModalVisible, supplyChainsCostsData, expenseNameData, paidToData, currentDate, vehicleListSupplyChainsCostsData }) => {\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const toast = useToast();\r\n\r\n  const [sccData, setSccData] = useState([]);\r\n\r\n  // const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible);\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const [clearModalVisible, setClearModalVisible] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\r\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\r\n  const [paidToIsError, setPaidToIsError] = useState(false);\r\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\r\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\r\n  const selectExpenseNameRef = useRef(null);\r\n  const selectPaidToRef = useRef(null);\r\n  const expenseViewRef = useRef(null);\r\n\r\n  const textAreaAddExpenseName = useRef(null);\r\n  const textAreaAddPaidTo = useRef(null);\r\n  const inputExpenseAmount = useRef(null);\r\n  const handleInputExpenseAmountChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputExpenseAmount.current.value = formattedValue;\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsClose = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(false));\r\n    inputExpenseAmount.current?.clear();\r\n    globalSelectedExpenseName = '';\r\n    setSelectResetKey(nanoid());\r\n    globalSelectedPaidTo = '';\r\n    setSelectedDate(currentDate);\r\n    globalSPCSelectedDate = currentDate;\r\n    dispatch(setSelectedExpenseName(''));\r\n    dispatch(setSelectedPaidTo(''));\r\n    setInputAmountIsError(false);\r\n    setExpenseNameIsError(false);\r\n    setPaidToIsError(false);\r\n    globalSelectedVehicle = '';\r\n  };\r\n\r\n\r\n  const handleClearModalOpen = () => {\r\n    setClearModalVisible(true);\r\n  };\r\n\r\n  const handleClearModalClose = () => {\r\n    setClearModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const amounts = vehicleListSupplyChainsCostsData.map((item) => {\r\n      const expenseName = Object.keys(item)[0];\r\n      const expenseData = item[expenseName];\r\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n    });\r\n\r\n    // Use reduce to add up all the amounts\r\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n    const formattedTotalAmount = totalAmount.toLocaleString();\r\n    setTotalAmount(formattedTotalAmount);\r\n    globalSupplyChainCostsAmount = formattedTotalAmount;\r\n\r\n  }, [vehicleListSupplyChainsCostsData]);\r\n\r\n  const handleSave = useCallback(() => {\r\n\r\n\r\n\r\n    if (inputExpenseAmount.current?.value == ''\r\n      || inputExpenseAmount.current?.value == 0\r\n      || globalSelectedExpenseName == ''\r\n      || globalSelectedPaidTo == ''\r\n    ) {\r\n\r\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\r\n        setInputAmountIsError(true);\r\n      }\r\n\r\n      if (globalSelectedExpenseName == '') {\r\n        setExpenseNameIsError(true);\r\n      }\r\n\r\n      if (globalSelectedPaidTo == '') {\r\n        setPaidToIsError(true);\r\n      }\r\n    }\r\n\r\n    else {\r\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\r\n\r\n      if (existingIndex !== -1) {\r\n        // If an entry with the same expense name exists, update it\r\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\r\n        updatedData[existingIndex][globalSelectedExpenseName] = {\r\n          expenseName: globalSelectedExpenseName,\r\n          amount: inputExpenseAmount.current?.value,\r\n          date: globalSPCSelectedDate,\r\n          paidName: globalSelectedPaidTo,\r\n        };\r\n        globalSupplyChainCostsData = updatedData;\r\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n\r\n      } else {\r\n        setInputAmountIsError(false);\r\n        setExpenseNameIsError(false);\r\n        setPaidToIsError(false);\r\n        // If no entry with the same expense name exists, add a new entry\r\n        const newData = {\r\n          [globalSelectedExpenseName]: {\r\n            expenseName: globalSelectedExpenseName,\r\n            amount: inputExpenseAmount.current?.value,\r\n            date: globalSPCSelectedDate,\r\n            paidName: globalSelectedPaidTo,\r\n          },\r\n        };\r\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\r\n        // console.log(globalSupplyChainCostsData);\r\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\r\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\r\n        setSelectResetKey(nanoid());\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const handleEditPress = useCallback((item) => {\r\n    // console.log(item.amount);\r\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\r\n    dispatch(setSelectedExpenseName(item.expenseName));\r\n    globalSelectedExpenseName = item.expenseName;\r\n    dispatch(setSelectedPaidTo(item.paidName));\r\n    globalSelectedPaidTo = item.paidName;\r\n    globalSPCSelectedDate = item.date;\r\n    setSelectedDate(item.date);\r\n    expenseViewRef.current.scrollIntoView({ behavior: 'smooth' });\r\n\r\n  }, [])\r\n\r\n\r\n  const handleDeleteItem = (expenseName) => {\r\n    // Find the index of the item to be deleted\r\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\r\n\r\n    if (itemIndex !== -1) {\r\n      // Create a copy of the data array and remove the item at the found index\r\n      const newData = [...globalSupplyChainCostsData];\r\n      newData.splice(itemIndex, 1);\r\n\r\n      // Update the state with the new array\r\n      dispatch(setVehicleListSupplyChainsCostsData(newData));\r\n      globalSupplyChainCostsData = newData;\r\n    }\r\n  };\r\n\r\n  const handleFirstModalClose = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(false));\r\n\r\n  };\r\n  const handleFirstModalOpen = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(true));\r\n\r\n  }\r\n\r\n  const handleAddExpenseNameTextChange = () => {\r\n    const textAreaValue = textAreaAddExpenseName.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPaidToTextChange = () => {\r\n    const textAreaValue = textAreaAddPaidTo.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleSaveSupplyChainsCosts = async () => {\r\n\r\n    toast.closeAll();\r\n    if (globalCurrentSupplyChainCostsData == globalSupplyChainCostsData) {\r\n      // console.log('Same price, will not update')\r\n      dispatch(setSupplyChainsCostsModalVisible(false));\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), globalCurrentStockID);\r\n\r\n      try {\r\n        await updateDoc(vehicleProductRef, { supplyChainsCostsData: globalSupplyChainCostsData });\r\n        dispatch(setSupplyChainsCostsModalVisible(false));\r\n        // console.log('Supply Chains Costs updated successfully');\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n\r\n        dispatch(setSupplyChainsCostsModalVisible(false));\r\n        dispatch(setVehicleListSupplyChainsCostsData([]));\r\n        globalSupplyChainCostsData = [];\r\n        globalCurrentSupplyChainCostsData = [];\r\n        globalCurrentStockID = '';\r\n\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n  return (\r\n\r\n    <><Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 960 ? '90%' : '50%'} h={'auto'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 1380 ? 'column' : 'row'} alignItems={screenWidth <= 1380 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\r\n          <Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 1380 ? 'center' : ''}> {globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <View style={{ height: '100%' }}>\r\n            <View paddingBottom={5}>\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} ref={expenseViewRef}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\r\n                  <SupplyChainsCostsSortAndAddModal\r\n                    docName='ExpenseName'\r\n                    handleAddTextChange={handleAddExpenseNameTextChange}\r\n                    textAreaAdd={textAreaAddExpenseName}\r\n                    title='Expense Name'\r\n                    dataName={'expenseName'}\r\n                    databaseInit={projectExtensionFirestore}\r\n                    headerText=\"Rearrange/Add Expense Name\"\r\n                    data={expenseNameData}\r\n                    handleFirstModalClose={handleFirstModalClose}\r\n                    handleFirstModalOpen={handleFirstModalOpen} />\r\n                </View>\r\n                <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\r\n              </View>\r\n\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: screenWidth <= 960 ? 8 : 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={2}>Amount</Text>\r\n                </View>\r\n                <Input\r\n                  borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\r\n                  flex={3}\r\n                  ref={inputExpenseAmount}\r\n                  onChangeText={handleInputExpenseAmountChange}\r\n                  placeholder=\"Amount\"\r\n                  bgColor={'white'}\r\n                  placeholderTextColor={'muted.400'}\r\n                  InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\r\n              </View>\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\r\n                </View>\r\n                <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\r\n              </View>\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\r\n                  <SupplyChainsCostsSortAndAddModal\r\n                    docName='PaidTo'\r\n                    handleAddTextChange={handleAddPaidToTextChange}\r\n                    textAreaAdd={textAreaAddExpenseName}\r\n                    title='Paid To'\r\n                    dataName={'paidTo'}\r\n                    databaseInit={projectExtensionFirestore}\r\n                    headerText=\"Rearrange/Add Paid To\"\r\n                    data={paidToData}\r\n                    handleFirstModalClose={handleFirstModalClose}\r\n                    handleFirstModalOpen={handleFirstModalOpen} />\r\n                </View>\r\n                <SelectPaidTo paidToIsError={paidToIsError} />\r\n              </View>\r\n\r\n              <TouchableHighlight\r\n                onPress={handleSave}\r\n                underlayColor=\"lightgreen\"\r\n                style={{\r\n                  backgroundColor: '#16A34A',\r\n                  borderRadius: 5,\r\n                  margin: 1,\r\n                  flex: 1,\r\n                  width: screenWidth <= 960 ? '80%' : '40%',\r\n                  alignSelf: 'center',\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 10,\r\n                }}>\r\n                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                  <MaterialIcons name=\"add\" color=\"white\" size={20} />\r\n                  <Text style={{ color: 'white', marginLeft: 5 }}>ADD/EDIT</Text>\r\n                </View>\r\n              </TouchableHighlight>\r\n            </View>\r\n            {screenWidth >= 1360 ? (\r\n\r\n              <View>\r\n                <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#0642F4', }}\r\n                  flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\r\n                </View>\r\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n                  return (\r\n                    <View style={{ flexDirection: 'row', backgroundColor: '#D4D4D4', borderBottomColor: '#E4E4E7', borderBottomWidth: 1, justifyContent: 'center', alignItems: 'center', }} key={index}\r\n                      flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\r\n                      justifyContent={'center'} alignItems={'center'}>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      <View style={{ flex: 1, flexDirection: 'row', marginLeft: 1 }}\r\n                        flex={1} marginLeft={1} flexDir={'row'}>\r\n                        <TouchableHighlight\r\n                          onPress={() => handleEditPress(expenseData)}\r\n                          underlayColor={'#005691'}\r\n                          style={{\r\n                            flex: 1,\r\n                            margin: 1,\r\n                            borderRadius: 3,\r\n                          }}>\r\n                          <View\r\n                            style={{\r\n                              flex: 1,\r\n                              backgroundColor: '#06B6D4',\r\n                              borderRadius: 3,\r\n                              justifyContent: 'center',\r\n                              alignItems: 'center',\r\n                            }}>\r\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\r\n                          </View>\r\n                        </TouchableHighlight>\r\n                        <TouchableHighlight\r\n                          onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                          underlayColor={'#005691'}\r\n                          style={{\r\n                            flex: 1,\r\n                            margin: 1,\r\n                            borderRadius: 3,\r\n                          }}>\r\n                          <View\r\n                            style={{\r\n                              flex: 1,\r\n                              backgroundColor: '#EF4444',\r\n                              borderRadius: 3,\r\n                              justifyContent: 'center',\r\n                              alignItems: 'center',\r\n                            }}>\r\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                          </View>\r\n                        </TouchableHighlight>\r\n                        {/* <TouchableHighlight\r\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                        style={() => ({\r\n                          flex: 1,\r\n                          margin: 1,\r\n                          borderRadius: 3,\r\n                          backgroundColor: '#CD5C5C',\r\n                        })}>\r\n                        <View\r\n                          style={{\r\n                            flex: 1,\r\n                            borderRadius: 3,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            backgroundColor: '#CD5C5C',\r\n                          }}>\r\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                        </View>\r\n                      </TouchableHighlight> */}\r\n                      </View>\r\n                    </View>\r\n                  )\r\n                })}\r\n\r\n              </View>\r\n\r\n            ) : (\r\n\r\n              <View>\r\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n                  return (\r\n\r\n                    <View style={{ flexDirection: 'column', justifyContent: 'center', flex: 1, margin: 3, marginBottom: 10, }} key={index}>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Expense Name</Text>\r\n                        </View>\r\n\r\n                        <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Amount</Text>\r\n                        </View>\r\n\r\n                        <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Date</Text>\r\n                        </View>\r\n                        <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Paid To</Text>\r\n                        </View>\r\n                        <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Modify</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, flexDirection: 'row', }}\r\n                          flex={1} marginLeft={1} flexDir={'row'}>\r\n\r\n                          <TouchableHighlight\r\n                            onPress={() => handleEditPress(expenseData)}\r\n                            underlayColor={'#005691'}\r\n                            style={{\r\n                              flex: 1,\r\n                              margin: 1,\r\n                              borderRadius: 3,\r\n                            }}>\r\n                            <View\r\n                              style={{\r\n                                flex: 1,\r\n                                backgroundColor: '#06B6D4',\r\n                                borderRadius: 3,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                              }}>\r\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\r\n                            </View>\r\n                          </TouchableHighlight>\r\n                          <TouchableHighlight\r\n                            onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                            underlayColor={'#005691'}\r\n                            style={{\r\n                              flex: 1,\r\n                              margin: 1,\r\n                              borderRadius: 3,\r\n                            }}>\r\n                            <View\r\n                              style={{\r\n                                flex: 1,\r\n                                backgroundColor: '#EF4444',\r\n                                borderRadius: 3,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                              }}>\r\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                            </View>\r\n                          </TouchableHighlight>\r\n                          {/* <TouchableHighlight\r\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                        style={() => ({\r\n                          flex: 1,\r\n                          margin: 1,\r\n                          borderRadius: 3,\r\n                          backgroundColor: '#CD5C5C',\r\n                        })}>\r\n                        <View\r\n                          style={{\r\n                            flex: 1,\r\n                            borderRadius: 3,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            backgroundColor: '#CD5C5C',\r\n                          }}>\r\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                        </View>\r\n                      </TouchableHighlight> */}\r\n                        </View>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n\r\n                  )\r\n                })}\r\n\r\n              </View>\r\n\r\n\r\n            )}\r\n\r\n          </View>\r\n\r\n\r\n        </Modal.Body>\r\n        <View\r\n          style={{\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            width: '100%',\r\n          }}>\r\n          <TouchableOpacity\r\n            onPress={handleModalSupplyChainsCostsClose}\r\n            style={{\r\n              backgroundColor: '#525252',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Close</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ flex: 4 }} />\r\n          <TouchableOpacity\r\n            onPress={handleSaveSupplyChainsCosts}\r\n            style={{\r\n              backgroundColor: '#16A34A',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Save</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Modal.Content>\r\n    </Modal>\r\n      {/* <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n        <Modal.Content bgColor={'amber.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'amber.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'amber.600'}\r\n            margin={5}>\r\n            <View flex={1}>\r\n              <Text color={'amber.600'} bold>Warning!</Text>\r\n              <Text color={'amber.600'}>Are you sure you want to clear?</Text>\r\n            </View>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleClearModalClose}\r\n                colorScheme={'warmGray'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button\r\n                onPress={() => {\r\n                }}\r\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                Clear\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal> */}\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nconst SelectPaidTo = ({ paidToIsError, }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedPaidTo}\r\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedPaidTo = value\r\n      dispatch(setSelectedPaidTo(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Paid To\"\r\n    placeholder=\"Choose Paid To\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {paidToData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n    ;\r\n};\r\n\r\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  nameVariable.text = loginName;\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n    handleFirstModalClose();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n    handleFirstModalOpen();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        // console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'flex-end', marginRight: 1 }}>\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity onPress={handleSortModalOpen}>\r\n            <MaterialCommunityIcons name=\"playlist-edit\" size={25} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n      </View>\r\n\r\n      <Modal isOpen={modalSortOpen} onClose={handleSortModalClose} useRNModal>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <View style={{\r\n              width: '100%',\r\n              flexDirection: 'column',\r\n            }}>\r\n              <View style={{ alignItems: 'flex-end' }}>\r\n                <TouchableHighlight onPress={handleModalAddOpen}>\r\n                  <FontAwesome name=\"plus-circle\" size={25} color=\"#102A43\" />\r\n                </TouchableHighlight>\r\n              </View>\r\n\r\n              <View style={{\r\n                flex: 1,\r\n                borderWidth: 1,\r\n                borderColor: '#102A43',\r\n                borderRadius: 5,\r\n              }}>\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n                    <View\r\n                      style={{\r\n                        flex: 1,\r\n                        backgroundColor: 'rgba(16,42,67, 0.5)',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#D3D3D3', // You can use a specific color code here\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                      }}\r\n                    >\r\n                      <TouchableOpacity onPress={() => handleDeleteItemPress(item)}>\r\n                        <AntDesign name=\"minuscircle\" size={16} color=\"#102A43\" />\r\n                      </TouchableOpacity>\r\n                      <Text style={{ flex: 1, textAlign: 'center', color: 'white' }}>{item}</Text>\r\n                      <TouchableOpacity onPressIn={drag}>\r\n                        <Entypo name=\"menu\" size={16} color=\"#102A43\" />\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </View>\r\n            </View>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <View style={{ flexDirection: 'row', flex: 1 }}>\r\n              <TouchableOpacity\r\n                onPress={handleSortModalClose}\r\n                style={{\r\n                  flex: 1,\r\n                  borderRadius: 5,\r\n                  backgroundColor: '#525252',\r\n                  margin: 5,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 8,\r\n                }}\r\n              >\r\n                <Text style={{ color: 'white' }}>Close</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={handleModalSaveOpen}\r\n                style={{\r\n                  flex: 1,\r\n                  borderRadius: 5,\r\n                  backgroundColor: '#0891B2',\r\n                  margin: 5,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 8,\r\n                }}\r\n              >\r\n                <Text style={{ color: 'white' }}>Save</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} useRNModal>\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nconst SCC_Modals = () => {\r\n\r\n  const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible)\r\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const currentDate = useSelector((state) => state.currentDate);\r\n  const vehicleListSupplyChainsCostsData = useSelector((state) => state.vehicleListSupplyChainsCostsData);\r\n\r\n  return (\r\n    <AllSccModals\r\n      supplyChainsCostsModalVisible={supplyChainsCostsModalVisible}\r\n      supplyChainsCostsData={supplyChainsCostsData}\r\n      expenseNameData={expenseNameData}\r\n      paidToData={paidToData}\r\n      currentDate={currentDate}\r\n      vehicleListSupplyChainsCostsData={vehicleListSupplyChainsCostsData}\r\n    />\r\n  );\r\n}\r\n\r\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\r\n\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const handleModalCalendarOpen = () => {\r\n    setModalCalendarVisible(true);\r\n  };\r\n\r\n  const handleModalCalendarClose = () => {\r\n    setModalCalendarVisible(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <TouchableOpacity onPress={handleModalCalendarOpen} style={{ flex: 3 }}>\r\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n      </TouchableOpacity>\r\n\r\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n        <Modal.CloseButton />\r\n        <Modal.Content>\r\n          <Box height={'full'} flex={1}>\r\n\r\n            <Calendar\r\n              onDayPress={useCallback(day => {\r\n                setSelectedDate(day.dateString);\r\n                // console.log(day.dateString);\r\n                globalSPCSelectedDate = day.dateString;\r\n                handleModalCalendarClose();\r\n              }, [])}\r\n              markedDates={{\r\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n              }}\r\n              renderArrow={(direction) => (\r\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n              )}\r\n              enableSwipeMonths={true}\r\n              initialDate={selectedDate}\r\n              showSixWeeks />\r\n\r\n          </Box>\r\n\r\n        </Modal.Content>\r\n\r\n      </Modal></>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedExpenseName}\r\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedExpenseName = value\r\n      dispatch(setSelectedExpenseName(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Expense Name\"\r\n    placeholder=\"Choose Expense Name\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {expenseNameData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n\r\n\r\n};\r\n\r\nconst VehicleEditModal = ({ handleEditModalClose }) => {\r\n\r\n  const editVehicleModalVisible = useSelector((state) => state.editVehicleModalVisible);\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  return (\r\n    <Modal isOpen={editVehicleModalVisible} onClose={handleEditModalClose} size={'full'}>\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'100%'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Edit Vehicle </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n\r\n\r\n        <Modal.Body >\r\n          Sit nulla est ex deserunt exercitation anim occaecat.\r\n        </Modal.Body>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n\r\n  );\r\n};\r\n\r\nconst EditVehicleModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEditModalClose = () => {\r\n    dispatch(setEditVehicleModalVisible(false));\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = '';\r\n    globalSelectedVehicleReferenceNumber = '';\r\n    globalSelectedCarName = '';\r\n\r\n  }\r\n\r\n  return (\r\n    <VehicleEditModal handleEditModalClose={handleEditModalClose} />\r\n\r\n\r\n  );\r\n\r\n};\r\n\r\nconst EditVehicle = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleModalOpen = () => {\r\n\r\n    dispatch(setEditVehicleModalVisible(true));\r\n    globalCurrentStockID = data.stockID;\r\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\r\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\r\n    globalSelectedCarName = data.carName;\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        onPress={handleModalOpen}\r\n        style={{\r\n          backgroundColor: '#7B9CFF',\r\n          marginHorizontal: 5,\r\n          borderRadius: 5,\r\n          padding: 2,\r\n          flex: 1,\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        {/* <Text style={{ textAlign: 'center',  color: 'white', }}>Edit</Text> */}\r\n        <MaterialIcons name={\"edit\"} color='white' size={22} />\r\n      </TouchableOpacity>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst ViewImagesModal = ({ handleViewImagesModalClose }) => {\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const viewImagesModalVisible = useSelector((state) => state.viewImagesModalVisible);\r\n  const viewImagesData = useSelector((state) => state.viewImagesData);\r\n\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    const styles = StyleSheet.create({\r\n      dropdown: {\r\n        margin: 16,\r\n        height: 50,\r\n        borderBottomColor: 'gray',\r\n        borderBottomWidth: 0.5,\r\n      },\r\n      icon: {\r\n        marginRight: 5,\r\n      },\r\n      placeholderStyle: {\r\n        fontSize: 16,\r\n      },\r\n      selectedTextStyle: {\r\n        fontSize: 16,\r\n      },\r\n      iconStyle: {\r\n        width: 20,\r\n        height: 20,\r\n      },\r\n      inputSearchStyle: {\r\n        height: 40,\r\n        fontSize: 16,\r\n      },\r\n      container: {\r\n        flex: 1,\r\n        paddingTop: 20,\r\n\r\n      },\r\n      txt: {\r\n        fontSize: 18,\r\n        lineHeight: 24,\r\n        padding: 5\r\n      },\r\n      sort: {\r\n      },\r\n      item_children: {\r\n        width: 90,\r\n        height: 90,\r\n        backgroundColor: 'black',\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      },\r\n      item_delete_icon: {\r\n        width: 14,\r\n        height: 14,\r\n        position: \"absolute\",\r\n        right: 1,\r\n        top: 1\r\n      },\r\n      item_icon: {\r\n        width: 90,\r\n        height: 90,\r\n        resizeMode: \"contain\",\r\n        position: \"absolute\"\r\n      }\r\n    });\r\n\r\n    return (\r\n\r\n      <Box key={item.id} style={styles.item}>\r\n        <Box style={styles.item_children}>\r\n\r\n          <FastImage\r\n            style={styles.item_icon}\r\n            source={{\r\n              uri: item.uri,\r\n              priority: FastImage.priority.normal,\r\n            }}\r\n            resizeMode={FastImage.resizeMode.contain}\r\n\r\n          />\r\n\r\n        </Box>\r\n      </Box>\r\n    );\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <>\r\n      <Modal isOpen={viewImagesModalVisible} onClose={handleViewImagesModalClose} size={'full'} useRNModal>\r\n        <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '60%'} h={'100%'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n            <Text color={'white'} fontSize={20} bold>View Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n          </Modal.Header>\r\n\r\n\r\n          <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', margin: '5%', marginLeft: '10%' }}>\r\n\r\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n              <ScrollView style={{ height: '90%' }}>\r\n                <DragSortableView\r\n                  sortable={false}\r\n                  // ref={dragSortableViewRef}\r\n                  dataSource={viewImagesData}\r\n                  parentWidth={width * 0.33}\r\n                  childrenWidth={100}\r\n                  childrenHeight={100}\r\n                  marginChildrenTop={3}\r\n                  marginChildrenBottom={0}\r\n                  marginChildrenLeft={0}\r\n                  marginChildrenRight={0}\r\n                  onClickItem={(item, index) => {\r\n                    handleImagePress(index.uri);\r\n                  }}\r\n                  keyExtractor={(item) => item.uri}\r\n                  renderItem={useCallback((item, index) => getImagesRenderItem(item, index), [])}\r\n                />\r\n              </ScrollView>\r\n            </View>\r\n\r\n\r\n          </View>\r\n\r\n\r\n        </Modal.Content>\r\n\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\n\r\nconst FobPriceHistoryModal = ({ handleFobPriceHistoryClose }) => {\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const fobPriceHistoryModalVisible = useSelector((state) => state.fobPriceHistoryModalVisible);\r\n  const fobHistoryData = useSelector((state) => state.fobHistoryData);\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={fobPriceHistoryModalVisible}\r\n      onClose={handleFobPriceHistoryClose}\r\n      size={'full'}\r\n      useRNModal\r\n    >\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'auto'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} alignItems={screenWidth <= 960 ? 'center' : 'flex-start'}>\r\n          <Text color={'white'} fontSize={20} bold>FOB Price History </Text>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ScrollView style={{ width: '100%' }}>\r\n            {screenWidth >= 960 ? (\r\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\r\n                {/* Table Header */}\r\n                <View style={{\r\n                  borderRadius: 3,\r\n                  backgroundColor: '#0642F4',\r\n                  flexDirection: 'row',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#0642F4',\r\n                }}>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\r\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n\r\n                </View>\r\n\r\n                {/* Table Rows */}\r\n                {[...fobHistoryData]\r\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\r\n                  .map((data, index) => (\r\n                    <View\r\n                      key={index}\r\n                      style={{\r\n                        backgroundColor: '#BBF7D0',\r\n                        flexDirection: 'row',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#CCCCCC',\r\n                      }}\r\n                    >\r\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\r\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\r\n                      <Text style={{ width: '20%', fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\r\n                    </View>\r\n                  ))\r\n                }\r\n              </View>\r\n            ) : (\r\n              // Mobile View FOB Price History\r\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\r\n                {/* Table Header */}\r\n                {/* <View style={{\r\n                  borderRadius: 3,\r\n                  backgroundColor: '#0642F4',\r\n                  flexDirection: 'row',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#0642F4',\r\n                }}>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price</Text>\r\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n\r\n                </View> */}\r\n\r\n                {/* Table Rows */}\r\n                {[...fobHistoryData]\r\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\r\n                  .map((data, index) => (\r\n                    <View\r\n                      key={index}\r\n                      style={{\r\n                        backgroundColor: '#BBF7D0',\r\n                        flexDirection: 'column',\r\n                        borderWidth: 1,\r\n                        borderColor: '#E4E4E7',\r\n                        margin: 3,\r\n                      }}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                        </View>\r\n\r\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\r\n                        </View><Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n                        </View>\r\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\r\n                      </View>\r\n                    </View>\r\n                  ))\r\n                }\r\n              </View>\r\n            )}\r\n\r\n          </ScrollView>\r\n\r\n\r\n\r\n\r\n        </Modal.Body>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nconst FobPriceHistory = () => {\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleFobPriceHistoryClose = () => {\r\n\r\n    dispatch(setFobPriceHistoryModalVisible(false));\r\n    globalFobPriceHistoryData = [];\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = '';\r\n    globalSelectedVehicleReferenceNumber = '';\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <FobPriceHistoryModal handleFobPriceHistoryClose={handleFobPriceHistoryClose} />\r\n\r\n  );\r\n}\r\n\r\n\r\nconst ImageCountComponent = ({ item, handleViewImagesModalOpen, handleUploadImagesModalOpen }) => {\r\n  // State for the image count\r\n  const [imageCount, setImageCount] = useState(item.imageCount || 0);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        setImageCount(data.imageCount || 0); // Update the image count with the new value from Firestore\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, [item.stockID]); // useEffect will re-run if item.stockID changes\r\n\r\n  // Function placeholders\r\n  // const handleViewImagesModalOpen = (item) => {\r\n  //   console.log('View images', item);\r\n  // };\r\n\r\n  // const handleUploadImagesModalOpen = (item) => {\r\n  //   console.log('Upload images', item);\r\n  // };\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n      {imageCount > 0 ? (\r\n        <TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n          <Text style={{ textDecorationLine: 'underline' }}>\r\n            {imageCount} image/s\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ) : (\r\n        <Text>{imageCount} image/s</Text>\r\n      )}\r\n\r\n      <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n        {imageCount > 0 ? null : (\r\n          <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n        )}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst FobPriceInput = ({ item, index, }) => {\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const [fobPrice, setFobPrice] = useState(item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : '');\r\n  const inputFobJpy = useRef([]);\r\n\r\n  useEffect(() => {\r\n    // Assume you have a collection named 'stocks' and the document ID is `item.stockID`\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\r\n      // console.log(`Read ${doc.size} documents from VehicleProducts`);\r\n\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        // Update the fobPrice state with the new value from Firestore\r\n        setFobPrice(data.fobPrice ? parseFloat(data.fobPrice).toLocaleString() : '');\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // ... rest of your component\r\n  const formatValueWithCommas = (value) => {\r\n    const numericValue = value.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    return formattedValue;\r\n  };\r\n\r\n  const handleTextChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    const currentNumericValue = fobPrice.replace(/[^0-9]/g, '');\r\n\r\n    // Update state only if the numeric value has changed\r\n    if (numericValue !== currentNumericValue) {\r\n      setFobPrice(numericValue);\r\n    }\r\n  };\r\n\r\n  // This function will format the displayed text\r\n  const handleInputFobJpyChange = (text, stockID) => {\r\n    const formattedValue = formatValueWithCommas(text);\r\n\r\n    // Apply the formatted value to the input without resetting the state\r\n    if (inputFobJpy.current[stockID]) {\r\n      inputFobJpy.current[stockID].setNativeProps({ text: formattedValue });\r\n    }\r\n  };\r\n\r\n  const handleSaveFob = async (item, index,) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    toast.closeAll();\r\n    // if (item.fobPrice == fobValue || fobValue == '') {\r\n    //   dispatch(setLoadingModalVisible(false));\r\n\r\n    //   console.log('same');\r\n    //   console.log(item.fobPrice);\r\n\r\n    // }\r\n    // else {\r\n\r\n    const fobHistoryData = {\r\n      date: formattedTime,\r\n      fobPrice: fobValue,\r\n      changedBy: nameVariable.text,\r\n    };\r\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n    try {\r\n      await updateDoc(vehicleProductRef, {\r\n        fobPrice: fobValue,\r\n        fobHistory: arrayUnion(fobHistoryData)\r\n      });\r\n      const logData = {\r\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle FOB Price Updated'.toLowerCase(),\r\n          'Vehicle FOB Price'.toLowerCase(),\r\n          'Vehicle FOB'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'FOB Price Updated'.toLowerCase(),\r\n          'FOB Price'.toLowerCase(),\r\n          'FOB'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n      // console.log('FOB Price updated successfully');\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    // }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextInput\r\n        ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n        value={formatValueWithCommas(fobPrice)} // Display the formatted value\r\n        style={{ outlineStyle: 'none', flex: 1, padding: 5, borderRadius: 5, width: '90%' }}\r\n        key={item.id}\r\n        onChangeText={(text) => {\r\n          handleTextChange(text); // This sets the numeric value state\r\n          handleInputFobJpyChange(text, item.stockID); // This formats the display\r\n        }}\r\n        onSubmitEditing={() => handleSaveFob(item, index)} />\r\n      <TouchableHighlight\r\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n        onPress={() => handleSaveFob(item, index)}\r\n        style={{\r\n          backgroundColor: '#16A34A',\r\n          borderRadius: 5,\r\n          padding: 5,\r\n          margin: 2,\r\n          alignSelf: 'center',\r\n        }}>\r\n        {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n        <MaterialIcons name='update' color='white' size={22} />\r\n      </TouchableHighlight>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst VehicleListTable = () => {\r\n  const toast = useToast();\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const dispatch = useDispatch();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [data, setData] = useState([]);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const vehicleListData = useSelector((state) => state.vehicleListData);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const searchInputRef = useRef(null);\r\n\r\n\r\n  const [stockIDs, setStockIDs] = useState([]);\r\n  const [imageCounts, setImageCounts] = useState([]);\r\n\r\n  const inputExpenseAmount = useRef(null);\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const inputFobJpy = useRef([]);\r\n  const [pageClicked, setPageClicked] = useState('');\r\n  const [lastVisible, setLastVisible] = useState(null);\r\n  const [firstVisible, setFirstVisible] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [fobPrices, setFobPrices] = useState({});\r\n  // Memoize the filtered data using useMemo\r\n  const [sortField, setSortField] = useState('dateAdded'); // null when sorting is off\r\n  const [isSortActive, setIsSortActive] = useState(false);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  nameVariable.text = loginName;\r\n\r\n  const handleSortChange = (field) => {\r\n    setCurrentPage(1);\r\n    // If the field is the same as the current sortField, toggle sorting\r\n    setSearchText('');\r\n    searchInputRef.current.clear();\r\n    if (field === sortField) {\r\n      setIsSortActive(!isSortActive); // Toggle sorting for the same field\r\n      if (!isSortActive) {\r\n        // If it was off, we turn it on and keep the same field\r\n        setSortField(field);\r\n      } else {\r\n        // If it was on, we turn it off and reset to default 'dateAdded'\r\n        setSortField('dateAdded');\r\n      }\r\n    } else {\r\n      // If the field is different, turn sorting on and change the field\r\n      setSortField(field);\r\n      setIsSortActive(true); // Always turn on sorting when a new field is clicked\r\n    }\r\n    // You might want to dispatch setLoadingModalVisible(true) when you start a new query\r\n    dispatch(setLoadingModalVisible(true));\r\n  };\r\n\r\n\r\n  const fetchWithSort = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n    let q;\r\n\r\n    if (searchText === '') {\r\n      q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        limit(pageSize)\r\n      );\r\n    } else {\r\n      q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        limit(pageSize)\r\n      );\r\n    }\r\n\r\n    try {\r\n      const documents = await getDocs(q);\r\n      const vehicleProductData = [];\r\n      documents.forEach((document) => {\r\n        vehicleProductData.push({\r\n          id: document.id,\r\n          ...document.data(),\r\n        });\r\n      });\r\n      dispatch(setVehicleListData(vehicleProductData));\r\n      setLastVisible(documents.docs[documents.docs.length - 1]);\r\n      setFirstVisible(documents.docs[0]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching vehicle products:\", error);\r\n    } finally {\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchWithSort();\r\n  }, [sortField])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // Determine the field and direction to sort by\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n    // Define the query\r\n    const q = query(\r\n      collection(projectExtensionFirestore, 'VehicleProducts'),\r\n      orderBy(fieldToSortBy, sortDirection),\r\n      limit(pageSize)\r\n    );\r\n\r\n    // Fetch the data once\r\n    getDocs(q)\r\n      .then((documents) => {\r\n        const vehicleProductData = [];\r\n        documents.forEach((document) => {\r\n          vehicleProductData.push({\r\n            id: document.id,\r\n            ...document.data(),\r\n          });\r\n        });\r\n        dispatch(setVehicleListData(vehicleProductData));\r\n        setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        setFirstVisible(documents.docs[0]);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching vehicle products: \", error);\r\n        // Handle the error appropriately\r\n      });\r\n\r\n    // Since this effect does not subscribe to real-time updates, there's no need to return a cleanup function\r\n  }, [projectExtensionFirestore, pageSize, sortField, isSortActive]); // Add dependencies as necessary\r\n\r\n\r\n\r\n  const fetchNextData = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n\r\n    if (searchText === '') {\r\n\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        startAfter(lastVisible),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'next');\r\n\r\n\r\n\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n    }\r\n\r\n    else {\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        startAfter(lastVisible),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'next');\r\n\r\n\r\n\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const fetchPreviousData = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n    if (searchText === '') {\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        endBefore(firstVisible),\r\n        limitToLast(pageSize)\r\n      );\r\n\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'prev')\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n\r\n    else {\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        endBefore(firstVisible),\r\n        limitToLast(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'prev');\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  const fetchFirstPage = (documents) => {\r\n\r\n\r\n    const vehicleProductData = [];\r\n\r\n    documents.forEach((document) => {\r\n      vehicleProductData.push({\r\n        id: document.id,\r\n        ...document.data(),\r\n      });\r\n    });\r\n\r\n    dispatch(setVehicleListData(vehicleProductData));\r\n\r\n    if (documents?.docs[0]) {\r\n      setFirstVisible(documents.docs[0]);\r\n    }\r\n    if (documents?.docs[documents.docs.length - 1]) {\r\n      setLastVisible(documents.docs[documents.docs.length - 1]);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n    if (!documents.empty) {\r\n      const vehicleProductData = [];\r\n      documents.forEach((document) => {\r\n        vehicleProductData.push({\r\n          id: document.id,\r\n          ...document.data(),\r\n        });\r\n      });\r\n\r\n\r\n\r\n      if (documents?.docs[0]) {\r\n        setFirstVisible(documents.docs[0]);\r\n      }\r\n      if (documents?.docs[documents.docs.length - 1]) {\r\n        setLastVisible(documents.docs[documents.docs.length - 1]);\r\n      }\r\n\r\n      if (pageClicked == 'next') {\r\n        setCurrentPage(currentPage + 1);\r\n      }\r\n      if (pageClicked == 'prev') {\r\n        setCurrentPage(currentPage - 1);\r\n      }\r\n      if (vehicleProductData.length < 1) {\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n      }\r\n\r\n      dispatch(setVehicleListData(vehicleProductData));\r\n    }\r\n\r\n    else {\r\n      const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n      const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n      if (searchText == '') {\r\n        setCurrentPage(1);\r\n\r\n        const q = query(\r\n          collection(projectExtensionFirestore, 'VehicleProducts'),\r\n          orderBy(fieldToSortBy, sortDirection),\r\n          limit(pageSize)\r\n        );\r\n        const firstPageDocuments = await getDocs(q);\r\n        fetchFirstPage(firstPageDocuments);\r\n\r\n      }\r\n      else {\r\n\r\n        setCurrentPage(1);\r\n\r\n        const q = query(\r\n          collection(projectExtensionFirestore, 'VehicleProducts'),\r\n          where('keywords', 'array-contains', searchText.toUpperCase()),\r\n          orderBy(fieldToSortBy, sortDirection),\r\n          limit(pageSize)\r\n        );\r\n        const firstPageDocuments = await getDocs(q);\r\n        fetchFirstPage(firstPageDocuments);\r\n\r\n      }\r\n\r\n\r\n    }\r\n  };\r\n\r\n  const handleNextPage = async () => {\r\n    // setPageClicked('next');\r\n    dispatch(setLoadingModalVisible(true));\r\n    // setCurrentPage(currentPage + 1);\r\n    await fetchNextData();\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  const handlePreviousPage = async () => {\r\n    // setPageClicked('previous');\r\n    dispatch(setLoadingModalVisible(true));\r\n    // setCurrentPage(currentPage - 1);\r\n    await fetchPreviousData();\r\n\r\n\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    searchData();\r\n\r\n  }, [searchText])\r\n\r\n  const searchData = async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    if (searchText === '') {\r\n      setCurrentPage(1);\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const firstPageDocuments = await getDocs(q);\r\n      fetchFirstPage(firstPageDocuments);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n    }\r\n\r\n    else {\r\n      setCurrentPage(1);\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const firstPageDocuments = await getDocs(q);\r\n      fetchFirstPage(firstPageDocuments);\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const filteredData = useMemo(() => {\r\n    const sanitizedSearchQuery = searchQuery.trim().toLowerCase();\r\n\r\n    // Filter the data based on the sanitized searchQuery (removing whitespace from the beginning and end)\r\n    const filteredResults = vehicleListData.filter((item) => {\r\n      const carName = item.carName ? item.carName.trim().toLowerCase() : '';\r\n      const referenceNumber = item.referenceNumber ? item.referenceNumber.trim().toLowerCase() : '';\r\n      const chassisNumber = item.chassisNumber ? item.chassisNumber.trim().toLowerCase() : '';\r\n      const stockStatus = item.stockStatus ? item.stockStatus.trim().toLowerCase() : '';\r\n      const fobPrice = item.fobPrice ? item.fobPrice.toString().trim().toLowerCase() : '';\r\n\r\n      return (\r\n        carName.includes(sanitizedSearchQuery) ||\r\n        referenceNumber.includes(sanitizedSearchQuery) ||\r\n        chassisNumber.includes(sanitizedSearchQuery) ||\r\n        stockStatus.includes(sanitizedSearchQuery) ||\r\n        fobPrice.includes(sanitizedSearchQuery)\r\n      );\r\n    });\r\n\r\n    return filteredResults;\r\n  }, [searchQuery, vehicleListData]);\r\n\r\n\r\n\r\n  const formatValueWithCommas = (value) => {\r\n    const numericValue = value.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    return formattedValue;\r\n  };\r\n\r\n  // Function to handle input changes for each item\r\n  const handleInputFobJpyChange = (text, index) => {\r\n    const formattedValue = formatValueWithCommas(text);\r\n\r\n    if (inputFobJpy.current[index]) {\r\n      inputFobJpy.current[index].value = formattedValue;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const fetchImageCounts = async () => {\r\n\r\n    // Extract and store the stockIDs in the state\r\n    const ids = filteredData.map(item => item.stockID);\r\n    setStockIDs(ids);\r\n\r\n    // Fetch image counts\r\n    const counts = await Promise.all(\r\n      ids.map(async stockID => {\r\n        const count = await getImageCountInFolder(stockID);\r\n        return { stockID, count };\r\n      })\r\n    );\r\n\r\n    // Create an object where stockID is the index value\r\n    const imageCountsObject = counts.reduce((acc, { stockID, count }) => {\r\n      acc[stockID] = count;\r\n      return acc;\r\n    }, {});\r\n\r\n    setImageCounts(imageCountsObject);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImageCounts();\r\n  }, []);\r\n\r\n  const getImageCountInFolder = async (folderPath) => {\r\n    try {\r\n      const folderRef = ref(storage, folderPath);\r\n      const listResult = await listAll(folderRef);\r\n\r\n      return listResult.items.length;\r\n    } catch (error) {\r\n      console.error('Error getting image count:', error);\r\n      return -1; // Handle the error accordingly\r\n    }\r\n  };\r\n\r\n\r\n  const handleTextChange = (text) => {\r\n    setSearchQuery(text);\r\n  };\r\n\r\n  const handleFobPriceHistoryOpen = async (item) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n    dispatch(setFobPriceHistoryModalVisible(true));\r\n    if (item.stockID) {\r\n      const docRef = doc(projectExtensionFirestore, 'VehicleProducts', item.stockID);\r\n      try {\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n          // Assuming you have an action to set the FOB history like setFobHistory\r\n          dispatch(setFobHistoryData(docSnap.data().fobHistory || []));\r\n          dispatch(setLoadingModalVisible(false));\r\n\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching document: \", error);\r\n      }\r\n    }\r\n    // globalFobPriceHistoryData = item.fobHistory ? item.fobHistory : [];\r\n    globalCurrentStockID = item.stockID ? item.stockID : '';\r\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n\r\n  }\r\n\r\n  const handleSaveFob = async (item, index,) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    toast.closeAll();\r\n    // if (item.fobPrice == fobValue || fobValue == '') {\r\n    //   dispatch(setLoadingModalVisible(false));\r\n\r\n    // }\r\n    // else {\r\n\r\n    const fobHistoryData = {\r\n      date: formattedTime,\r\n      fobPrice: fobValue,\r\n      changedBy: nameVariable.text,\r\n    };\r\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n    try {\r\n      await updateDoc(vehicleProductRef, {\r\n        fobPrice: fobValue,\r\n        fobHistory: arrayUnion(fobHistoryData)\r\n      });\r\n      const logData = {\r\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle FOB Price Updated'.toLowerCase(),\r\n          'Vehicle FOB Price'.toLowerCase(),\r\n          'Vehicle FOB'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'FOB Price Updated'.toLowerCase(),\r\n          'FOB Price'.toLowerCase(),\r\n          'FOB'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n      // console.log('FOB Price updated successfully');\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    // }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n\r\n  const handleUploadImagesModalOpen = (item) => {\r\n    dispatch(setUploadImagesModalVisible(true));\r\n    globalCurrentStockID = item.stockID;\r\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n    globalSelectedCarName = item.carName;\r\n\r\n  }\r\n\r\n  const handleViewImagesModalOpen = async (item) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n    try {\r\n      await getImages(item.stockID);\r\n      globalCurrentStockID = item.stockID;\r\n      globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n      globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n      dispatch(setLoadingModalVisible(false));\r\n      dispatch(setViewImagesModalVisible(true));\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n  }\r\n\r\n  const handleViewImagesModalClose = () => {\r\n    dispatch(setViewImagesModalVisible(false));\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = ``;\r\n    globalSelectedVehicleReferenceNumber = '';\r\n    globalSelectedCarName = '';\r\n    dispatch(setViewImagesData([]));\r\n  };\r\n\r\n  const getImages = useCallback(async (folderName) => {\r\n    try {\r\n\r\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\r\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n\r\n      const urls = await Promise.all(\r\n        imageRefs.items.map(async (itemRef) => {\r\n          const uri = await getDownloadURL(itemRef);\r\n          return { uri, fileName: itemRef.name };\r\n        })\r\n      );\r\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\r\n      urls.sort((a, b) => {\r\n        const fileNameA = parseInt(a.fileName);\r\n        const fileNameB = parseInt(b.fileName);\r\n        return fileNameA - fileNameB;\r\n      });\r\n\r\n      if (urls.length > 0) {\r\n        dispatch(setViewImagesData(urls));\r\n\r\n      }\r\n\r\n      else {\r\n        dispatch(setViewImagesData([]));\r\n      }\r\n\r\n      // console.log(urls);\r\n\r\n    } catch (error) {\r\n      // Handle any errors that may occur during the Firebase operations\r\n      console.error('Error getting image URLs:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const addStockStatusToVehicleProducts = async () => {\r\n    const vehicleProductsRef = collection(projectExtensionFirestore, \"VehicleProducts\");\r\n\r\n    try {\r\n      const querySnapshot = await getDocs(vehicleProductsRef);\r\n      querySnapshot.forEach(async (doc) => {\r\n        const data = doc.data();\r\n\r\n        // Check if the imageCount field does not exist\r\n        if (data.stockStatus === undefined) {\r\n          try {\r\n            // If the imageCount field doesn't exist, initialize it to 0\r\n            await updateDoc(doc.ref, {\r\n              stockStatus: ''\r\n            });\r\n            console.log(`stockStatus initialized to 0 for document ID: ${doc.id}`);\r\n          } catch (error) {\r\n            console.error('Error initializing stockStatus field:', error);\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error reading VehicleProducts collection:\", error);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const handleSearchEnter = () => {\r\n    // setSortField('dateAdded');\r\n    // setIsSortActive(false)\r\n    if (searchInputRef.current?.value !== '') {\r\n      setSearchText(searchInputRef.current.value.trim());\r\n      setSortField('dateAdded');\r\n      setIsSortActive(false);\r\n    }\r\n    else {\r\n      setSearchText('');\r\n      setSortField('dateAdded');\r\n      setIsSortActive(false)\r\n      if (searchText == '') {\r\n\r\n        searchData();\r\n\r\n      }\r\n\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {screenWidth >= 1360 ?\r\n        (\r\n          <View style={{ flex: 1, }}>\r\n            <View>\r\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                returnKeyType='search'\r\n                autoCapitalize='none'\r\n\r\n              />\r\n            </View>\r\n            <View\r\n              style={{\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-between',\r\n                borderBottomWidth: 1,\r\n                borderBottomColor: '#E4E4E7',\r\n                backgroundColor: '#0642F4',\r\n                padding: 2,\r\n                borderRadius: 5,\r\n              }}>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Ref #</Text>\r\n              </View>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Car Name</Text>\r\n              </View>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Chassis #</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('imageCount')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'imageCount' ? '#FBBC04' : 'white', }} bold underline>Images</Text>\r\n                </TouchableOpacity></View>\r\n\r\n\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('stockStatus')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'stockStatus' ? '#FBBC04' : 'white', }} bold underline>Stock Status</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('fobPrice')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'fobPrice' ? '#FBBC04' : 'white', }} bold underline>FOB Price</Text>\r\n                </TouchableOpacity></View>\r\n\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', alignSelf: 'center', }} bold>Operate</Text>\r\n              </View>\r\n            </View>\r\n            {vehicleListData.map((item, index) => (\r\n              <View\r\n                key={item.id}\r\n                style={{\r\n                  flex: 1,\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'space-between',\r\n                  alignItems: 'center',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#E4E4E7',\r\n                  backgroundColor: '#BFDBFE',\r\n                  paddingVertical: 10,\r\n                }}>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.referenceNumber}</Text>\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', }}>{item.carName} </Text>\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', }}>{item.chassisNumber}</Text>\r\n                </View>\r\n                <ImageCountComponent item={item} handleViewImagesModalOpen={handleViewImagesModalOpen} handleUploadImagesModalOpen={handleUploadImagesModalOpen} />\r\n                {/* <View style={{ flex: 1, flexDirection: 'row' }}>\r\n\r\n                  {item.imageCount > 0 ?\r\n                    (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n                      <Text underline>\r\n                        {item.imageCount ? item.imageCount : 0} image/s\r\n                      </Text>\r\n                    </TouchableOpacity>) :\r\n                    (<Text>\r\n                      {item.imageCount ? item.imageCount : 0} image/s\r\n                    </Text>)\r\n                  }\r\n\r\n\r\n                  <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n                    {item.imageCount > 0 ? null : (\r\n                      <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n                    )}\r\n                  </TouchableOpacity>\r\n                </View> */}\r\n                <View style={{ flex: 1, }}>\r\n                  <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\r\n                  {/* <Text style={{ width: '90%', }}>{item.stockStatus}</Text> */}\r\n                </View>\r\n\r\n                <View style={{ width: '90%', flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, }}>\r\n                  <TouchableOpacity\r\n                    onPress={() => handleFobPriceHistoryOpen(item)}\r\n                    style={{\r\n                      margin: 5,\r\n                      alignSelf: 'center',\r\n                    }}>\r\n                    {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n                    <FontAwesome name='clock-o' color='black' size={22} />\r\n                  </TouchableOpacity>\r\n                  <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\r\n                  {/* <TextInput\r\n                    ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n                    defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\r\n                    style={{ flex: 1, padding: 5, borderRadius: 5, width: '90%', }}\r\n                    key={item.id}\r\n                    onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\r\n                    onSubmitEditing={() => handleSaveFob(item, index)} /> */}\r\n\r\n                </View>\r\n                <View style={{ flexDirection: 'row', flex: 1, alignItems: 'center', justifyContent: 'center', }}>\r\n                  <SupplyChainsCosts data={item} />\r\n                  {/* <EditVehicle data={item} /> */}\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={{\r\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\r\n              alignSelf: 'center',\r\n            }}>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <TouchableOpacity\r\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                  onPress={handlePreviousPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n\r\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={handleNextPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n\r\n\r\n\r\n\r\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\r\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\r\n\r\n            {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n              <TouchableOpacity\r\n                onPress={addStockStatusToVehicleProducts}>\r\n                <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                  <FontAwesome name='save' size={40} color={'white'} />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View> */}\r\n\r\n          </View>\r\n        ) :\r\n\r\n\r\n\r\n        (\r\n          <View style={{ flex: 1, }}>\r\n            <View >\r\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '98%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', alignSelf: 'center', marginTop: 5, }}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                returnKeyType='search'\r\n                autoCapitalize='none'\r\n              />\r\n            </View>\r\n\r\n            {vehicleListData.map((item, index) => (\r\n              <View\r\n                key={item.id}\r\n                style={{\r\n                  flex: 1,\r\n                  flexDirection: 'column',\r\n                  borderWidth: 1,\r\n                  borderColor: '#E4E4E7',\r\n                  backgroundColor: '#BFDBFE',\r\n                  margin: 10,\r\n                }}>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Ref #</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.referenceNumber}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Car Name</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.carName} </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Chassis #</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.chassisNumber}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Images</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    {item.imageCount > 0 ?\r\n                      (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n                        <Text underline style={{ marginLeft: 3 }}>\r\n                          {item.imageCount ? item.imageCount : 0} image/s\r\n                        </Text>\r\n                      </TouchableOpacity>) :\r\n                      (<Text style={{ marginLeft: 3 }}>\r\n                        {item.imageCount ? item.imageCount : 0} image/s\r\n                      </Text>)\r\n                    }\r\n\r\n\r\n                    <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n                      {item.imageCount > 0 ? null : (\r\n                        <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n                      )}\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>Stock Status</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, paddingVertical: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\r\n                  </View>\r\n                </View>\r\n\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>FOB Price ¥</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <TouchableOpacity\r\n                      onPress={() => handleFobPriceHistoryOpen(item)}\r\n                      style={{\r\n                        margin: 5,\r\n                        alignSelf: 'center',\r\n                      }}>\r\n                      {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n                      <FontAwesome name='clock-o' color='black' size={22} />\r\n                    </TouchableOpacity>\r\n                    <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\r\n\r\n                    {/* <TextInput\r\n                      ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n                      defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\r\n                      style={{ width: '90%', borderRadius: 5, }}\r\n                      key={item.id}\r\n                      onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\r\n                      onSubmitEditing={() => handleSaveFob(item, index)} /> */}\r\n                    {/* <TouchableHighlight\r\n                      underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                      onPress={() => handleSaveFob(item, index)}\r\n                      style={{\r\n                        backgroundColor: '#16A34A',\r\n                        margin: 2,\r\n                        marginLeft: 2,\r\n                        alignSelf: 'center',\r\n                        borderRadius: 5,\r\n                      }}>\r\n                      <MaterialIcons name='update' color='white' size={22} />\r\n                    </TouchableHighlight> */}\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                  </View>\r\n                  <View style={{ flexDirection: 'row', flex: 1, margin: 5, }}>\r\n                    <SupplyChainsCosts data={item} />\r\n                    {/* <EditVehicle data={item} /> */}\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={{\r\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\r\n              alignSelf: 'center',\r\n            }}>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <TouchableOpacity\r\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                  onPress={handlePreviousPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n\r\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={handleNextPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n            <TouchableOpacity\r\n              onPress={addKeywordsToVehicleProducts}>\r\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                <MaterialIcons name='save' size={40} color={'white'} />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View> */}\r\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={addImageCountToVehicleProducts}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <FontAwesome name='dollar' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View> */}\r\n            </View>\r\n\r\n\r\n\r\n\r\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\r\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\r\n\r\n          </View>\r\n\r\n        )}\r\n\r\n\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function VehicleList() {\r\n  const [email, setEmail] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n  const [isMobileView, setIsMobileView] = useState(false);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  // const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const [typeOfAccount, setTypeOfAccount] = useState('');\r\n\r\n\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [name, setName] = useState(loginName);\r\n  const [time, setTime] = useState('');\r\n\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\r\n\r\n  useEffect(() => {\r\n    const updateWidth = () => {\r\n      const newWidth = Dimensions.get('window').width;\r\n      setScreenWidth(newWidth); // Update the screenWidth state\r\n    };\r\n\r\n    // Add event listener for window resize\r\n    Dimensions.addEventListener('change', updateWidth);\r\n\r\n    // Clean up the event listener when the component unmounts or re-renders\r\n    return () => {\r\n      Dimensions.removeEventListener('change', updateWidth);\r\n    };\r\n  }, []);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const handleWidthChange = ({ window }) => {\r\n  //     setWidthState(window.width);\r\n  //   };\r\n\r\n  //   Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleWidthChange);\r\n  //   };\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   reloadData();\r\n  // }, [reloadData]);\r\n\r\n\r\n  // useEffect(() => {\r\n  // }, [typeOfAccount]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n      if (!user) {\r\n        // navigation.navigate(\"Login\")\r\n        navigate(\"/Login\");\r\n\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(projectControlAuth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(projectControlAuth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate(\"/Login\");\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = projectControlAuth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      // This will now always be a function\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n      listenForNameChange(documentId);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const listenForNameChange = (documentId) => {\r\n\r\n\r\n    // To stop listening for updates, you can call unsubscribe()\r\n    // unsubscribe();\r\n  };\r\n\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(projectControlAuth).then(() => {\r\n      // navigation.navigate('Login');\r\n      navigate(\"/Login\");\r\n\r\n      setEmail('');\r\n      setName('');\r\n    }).catch(() => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   const handleScreenResize = () => {\r\n  //     const screenWidth = Dimensions.get('window').width;\r\n  //     setIsMobileView(screenWidth < 1200);\r\n  //   };\r\n\r\n  //   // Initial check on component mount\r\n  //   handleScreenResize();\r\n\r\n  //   // Listen for screen dimension changes\r\n  //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n  //   // Cleanup event listener on component unmount\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleScreenResize);\r\n  //   };\r\n  // }, []);\r\n\r\n\r\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#0642F4'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#0642F4'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  const SuccessModal = ({ isOpen, onClose, bodyText, headerText }) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Modal isOpen={isOpen} onClose={onClose} useRNModal>\r\n          <Modal.Content bgColor={'green.100'}>\r\n            <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n              <Text textAlign={'center'} color={'#102A43'} bold>\r\n                😊😎 Success! 😎😊\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'green.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'green.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'green.600'} bold>\r\n                  {headerText}\r\n                  {/* Vehicle Added! */}\r\n                </Text>\r\n                <Text color={'green.600'}>\r\n                  {bodyText}\r\n                  {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n                  Ok\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <NativeBaseProvider>\r\n      <>\r\n\r\n        <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n          {/* Header */}\r\n          <Box\r\n            px=\"3\"\r\n            bgColor='#0642f4'\r\n            height={54}\r\n            position=\"sticky\"\r\n            top={0}\r\n            zIndex={999}\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            borderBottomWidth={0}\r\n            borderBottomColor={'cyan.500'}\r\n          >\r\n\r\n\r\n            <SideDrawer\r\n              selectedScreen={selectedScreen} />\r\n\r\n            <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n\r\n              <FastImage\r\n                source={{\r\n                  uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                  priority: FastImage.priority.high,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.stretch}\r\n                style={styles.image} />\r\n            </Box>\r\n\r\n            {screenWidth <= 960 && <MobileViewDrawer\r\n              selectedScreen={selectedScreen} />}\r\n\r\n            <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n              <FastImage\r\n                source={{\r\n                  uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                  priority: FastImage.priority.high,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.stretch}\r\n                style={styles.image} />\r\n            </Box>\r\n\r\n\r\n            <View style={{ alignItems: 'center', flex: 1 }}>\r\n              <QRCodeScanner />\r\n            </View>\r\n\r\n            <NamePopover name={name} handleSignOut={handleSignOut} />\r\n\r\n\r\n          </Box>\r\n\r\n          {/* Content */}\r\n          <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\r\n\r\n\r\n            {/* Main Content */}\r\n            {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n            {/* Main Content Content */}\r\n\r\n\r\n            {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n            <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\r\n              <ScrollView style={{ flex: 1, }} keyboardShouldPersistTaps='always'>\r\n                <View style={{ flex: 1, }}>\r\n                  <VehicleListTable />\r\n\r\n\r\n                </View>\r\n              </ScrollView>\r\n              <SCC_Modals />\r\n              <EditVehicleModal />\r\n              <FobPriceHistory />\r\n              {/* <SuccessModal /> */}\r\n\r\n            </View>\r\n\r\n\r\n            {/* </Box> */}\r\n\r\n            {/* </Box> */}\r\n          </View>\r\n\r\n        </View>\r\n        <LoadingModal />\r\n\r\n      </>\r\n\r\n\r\n\r\n\r\n\r\n    </NativeBaseProvider>\r\n\r\n\r\n\r\n\r\n  );\r\n\r\n};","import { useState, useEffect } from 'react';\r\nimport { collection, query, orderBy, startAfter, limit, onSnapshot } from 'firebase/firestore';\r\nimport { useSelector } from 'react-redux';\r\nimport { setVehicleListData } from '../redux/store';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const UsePagination = (projectExtensionFirestore) => {\r\n    const dispatch = useDispatch();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    // const [data, setData] = useState([]);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const handleNextPage = () => {\r\n        setCurrentPage(currentPage + 1);\r\n    };\r\n\r\n    const handlePreviousPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                let q;\r\n                if (lastVisible) {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n                        orderBy('dateAdded', 'desc'),\r\n                        startAfter(lastVisible),\r\n                        limit(pageSize)\r\n                    );\r\n                } else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n                        orderBy('dateAdded', 'desc'),\r\n                        limit(pageSize)\r\n                    );\r\n                }\r\n\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const vehicleProductData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        vehicleProductData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n                    if (!snapshot.empty) {\r\n                        setLastVisible(snapshot.docs[snapshot.docs.length - 1]);\r\n                    }\r\n\r\n                    // setData(vehicleProductData);\r\n                    dispatch(setVehicleListData(vehicleProductData));\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data: ', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [projectExtensionFirestore, currentPage, pageSize]);\r\n\r\n    return { handleNextPage, handlePreviousPage };\r\n};","import { configureStore, createSlice, } from '@reduxjs/toolkit'\r\nimport { useEffect, useMemo } from 'react';\r\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where, orderBy, limit } from 'firebase/firestore';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../../crossFirebase\";\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSelector } from 'react-redux';\r\n\r\nlet makeDataVariable = [];\r\nlet email = '';\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\n\r\nconst messageTextInputValueSlice = createSlice({\r\n  name: 'messageTextInputValue',\r\n  initialState: '',\r\n  reducers: {\r\n    setMessageTextInputValue: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst carImageUrlSlice = createSlice({\r\n  name: 'carImageUrl',\r\n  initialState: '',\r\n  reducers: {\r\n    setCarImageUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedFileUrlSlice = createSlice({\r\n  name: 'selectedFileUrl',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedFileUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst pdfViewerModalVisibleSlice = createSlice({\r\n  name: 'pdfViewerModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setPdfViewerModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst selectedVehicleDataSlice = createSlice({\r\n  name: 'selectedVehicleData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedVehicleData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst selectedCustomerDataSlice = createSlice({\r\n  name: 'selectedCustomerData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedCustomerData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst previewInvoiceVisibleSlice = createSlice({\r\n  name: 'previewInvoiceVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setPreviewInvoiceVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst customInvoiceVisibleSlice = createSlice({\r\n  name: 'customInvoiceVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setCustomInvoiceVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst transactionModalVisibleSlice = createSlice({\r\n  name: 'transactionModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setTransactionModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst invoiceDataSlice = createSlice({\r\n  name: 'invoiceData',\r\n  initialState: {},\r\n  reducers: {\r\n    setInvoiceData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst deleteMessageTemplateVisibleSlice = createSlice({\r\n  name: 'deleteMessageTemplateVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeleteMessageTemplateVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loadMoreMessagesLoadingSlice = createSlice({\r\n  name: 'loadMoreMessagesLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadMoreMessagesLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst noMoreMessagesDataSlice = createSlice({\r\n  name: 'noMoreMessagesData',\r\n  initialState: false,\r\n  reducers: {\r\n    setNoMoreMessagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst readByListModalVisibleSlice = createSlice({\r\n  name: 'readByListModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setReadByListModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedChatDataSlice = createSlice({\r\n  name: 'selectedChatData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedChatData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst chatMessageBoxLoadingSlice = createSlice({\r\n  name: 'chatMessageBoxLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setChatMessageBoxLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatMessagesDataSlice = createSlice({\r\n  name: 'chatMessagesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setChatMessagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst chatListSearchTextSlice = createSlice({\r\n  name: 'chatListSearchText',\r\n  initialState: '',\r\n  reducers: {\r\n    setChatListSearchText: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst activeChatIdSlice = createSlice({\r\n  name: 'activeChatId',\r\n  initialState: '',\r\n  reducers: {\r\n    setActiveChatId: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loadMoreLoadingSlice = createSlice({\r\n  name: 'loadMoreLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadMoreLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst noMoreDataSlice = createSlice({\r\n  name: 'noMoreData',\r\n  initialState: false,\r\n  reducers: {\r\n    setNoMoreData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListLastVisibleSlice = createSlice({\r\n  name: 'chatListLastVisible',\r\n  initialState: null,\r\n  reducers: {\r\n    setChatListLastVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListDataSlice = createSlice({\r\n  name: 'chatListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setChatListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListImageUrlSlice = createSlice({\r\n  name: 'chatListImageUrl',\r\n  initialState: null,\r\n  reducers: {\r\n    setChatListImageUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\n\r\n\r\n\r\n// =============================== Freight ========================================\r\n\r\n\r\nconst countryPortsDataSlice = createSlice({\r\n  name: 'countryPortsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setCountryPortsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst addPortsForCountriesModalVisibleSlice = createSlice({\r\n  name: 'addPortsForCountriesModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddPortsForCountriesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst methodDataSlice = createSlice({\r\n  name: 'methodData',\r\n  initialState: [],\r\n  reducers: {\r\n    setMethodData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst inspectionIsRequiredDataSlice = createSlice({\r\n  name: 'inspectionIsRequiredData',\r\n  initialState: [],\r\n  reducers: {\r\n    setInspectionIsRequiredData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst inspectionNameDataSlice = createSlice({\r\n  name: 'inspectionNameData',\r\n  initialState: [],\r\n  reducers: {\r\n    setInspectionNameData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst deletePortModalVisibleSlice = createSlice({\r\n  name: 'deletePortModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeletePortModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst deleteCountryModalVisibleSlice = createSlice({\r\n  name: 'deleteCountryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeleteCountryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst addPortModalVisibleSlice = createSlice({\r\n  name: 'addPortModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddPortModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst addCountryModalVisibleSlice = createSlice({\r\n  name: 'addCountryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddCountryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst selectedButtonSlice = createSlice({\r\n  name: 'selectedButton',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedButton: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst freightCountriesDataSlice = createSlice({\r\n  name: 'freightCountriesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFreightCountriesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst freightPortsDataSlice = createSlice({\r\n  name: 'freightPortsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFreightPortsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\nconst fobHistoryDataSlice = createSlice({\r\n  name: 'fobHistoryData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFobHistoryData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst inputFobSlice = createSlice({\r\n  name: 'inputFob',\r\n  initialState: '',\r\n  reducers: {\r\n    setInputFob: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst fobPriceHistoryModalVisibleSlice = createSlice({\r\n  name: 'fobPriceHistoryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setFobPriceHistoryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst editVehicleModalVisibleSlice = createSlice({\r\n  name: 'editVehicleModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setEditVehicleModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst vehicleListDataSlice = createSlice({\r\n  name: 'vehicleListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setVehicleListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst addVehicleListDataSlice = createSlice({\r\n  name: 'addVehicleListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setAddVehicleListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst supplyChainsCostsModalVisibleSlice = createSlice({\r\n  name: 'supplyChainsCostsModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setSupplyChainsCostsModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst uploadImagesModalVisibleSlice = createSlice({\r\n  name: 'uploadImagesModalVisibleVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setUploadImagesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst vehicleListSupplyChainsCostsDataSlice = createSlice({\r\n  name: 'vehicleListSupplyChainsCostsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setVehicleListSupplyChainsCostsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst uploadImagesButtonLoadingSlice = createSlice({\r\n  name: 'uploadImagesButtonLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setUploadImagesButtonLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst viewImagesModalVisibleSlice = createSlice({\r\n  name: 'viewImagesModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setViewImagesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst viewImagesDataSlice = createSlice({\r\n  name: 'viewImagesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setViewImagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst lastVisibleSlice = createSlice({\r\n  name: 'lastVisible',\r\n  initialState: '',\r\n  reducers: {\r\n    setLastVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Account List ========================================\r\nconst accountListDataSlice = createSlice({\r\n  name: 'accountListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setAccountListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\n// =============================== Account List ========================================\r\n\r\n// =============================== Logs ======================================== \r\n\r\n\r\nconst logsDataSlice = createSlice({\r\n  name: 'logsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setLogsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// =============================== Logs ======================================== \r\n\r\n\r\nconst stockStatusDataSlice = createSlice({\r\n  name: 'stockStatusData',\r\n  initialState: [\r\n    'On-Sale',\r\n    'Reserved',\r\n    'Sold',\r\n    'Hidden',],\r\n  reducers: {\r\n    setStockStatusData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isSuccessModalOpenSlice = createSlice({\r\n  name: 'isSuccessModalOpen',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsSuccessModalOpen: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isUpdateSuccessModalOpenSlice = createSlice({\r\n  name: 'isUpdateSuccessModalOpen',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsUpdateSuccessModalOpen: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loadingModalVisibleSlice = createSlice({\r\n  name: 'loadingModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadingModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedExpenseNameSlice = createSlice({\r\n  name: 'selectedExpenseName',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedExpenseName: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedPaidToSlice = createSlice({\r\n  name: 'selectedPaidTo',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedPaidTo: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst supplyChainsCostsDataSlice = createSlice({\r\n  name: 'supplyChainsCostsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSupplyChainsCostsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst currentDateSlice = createSlice({\r\n  name: 'currentDate',\r\n  initialState: '',\r\n  reducers: {\r\n    setCurrentDate: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loginEmailSlice = createSlice({\r\n  name: 'loginEmail',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoginEmail: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loginAccountTypeSlice = createSlice({\r\n  name: 'loginAccountType',\r\n  initialState: '',\r\n  reducers: {\r\n    setLoginAccountType: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loginNameSlice = createSlice({\r\n  name: 'loginName',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoginName: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst modalDeleteImagesVisibleSlice = createSlice({\r\n  name: 'modalDeleteImages',\r\n  initialState: false,\r\n  reducers: {\r\n    setModalDeleteImagesVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst addAnotherImagesSlice = createSlice({\r\n  name: 'addAnotherImagesVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddAnotherImages: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isAddPhotoVisibleSlice = createSlice({\r\n  name: 'isAddPhotoVisible',\r\n  initialState: true,\r\n  reducers: {\r\n    setIsAddPhotoVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst jpyToUsdSlice = createSlice({\r\n  name: 'jpyToUsd',\r\n  initialState: '',\r\n  reducers: {\r\n    setJpyToUsd: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst usdToJpySlice = createSlice({\r\n  name: 'usdToJpy',\r\n  initialState: '',\r\n  reducers: {\r\n    setUsdToJpy: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst modelDataSlice = createSlice({\r\n  name: 'modelData',\r\n  initialState: [],\r\n  reducers: {\r\n    setModelData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst makeDataSlice = createSlice({\r\n  name: 'makeData',\r\n  initialState: makeDataVariable,\r\n  reducers: {\r\n    setMakeData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst expenseNameDataSlice = createSlice({\r\n  name: 'expenseName',\r\n  initialState: [],\r\n  reducers: {\r\n    setExpenseNameData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst paidToDataSlice = createSlice({\r\n  name: 'paidTo',\r\n  initialState: [],\r\n  reducers: {\r\n    setPaidToData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedMakeSlice = createSlice({\r\n  name: 'selectedMake',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedMake: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isLoadingSlice = createSlice({\r\n  name: 'isLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedImagesSlice = createSlice({\r\n  name: 'selectedImages',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedImages: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst portDataSlice = createSlice({\r\n  name: 'portData',\r\n  initialState: [],\r\n  reducers: {\r\n    setPortData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst transmissionDataSlice = createSlice({\r\n  name: 'transmissionData',\r\n  initialState: [],\r\n  reducers: {\r\n    setTransmissionData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst fuelDataSlice = createSlice({\r\n  name: 'fuelData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFuelData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst buyerDataSlice = createSlice({\r\n  name: 'buyerData',\r\n  initialState: [],\r\n  reducers: {\r\n    setBuyerData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst salesDataSlice = createSlice({\r\n  name: 'salesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSalesData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst driveTypeDataSlice = createSlice({\r\n  name: 'driveTypeData',\r\n  initialState: [],\r\n  reducers: {\r\n    setDriveTypeData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst bodyTypeDataSlice = createSlice({\r\n  name: 'bodyTypeData',\r\n  initialState: [],\r\n  reducers: {\r\n    setBodyTypeData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst exteriorColorDataSlice = createSlice({\r\n  name: 'exteriorColorData',\r\n  initialState: [],\r\n  reducers: {\r\n    setExteriorColorData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst currentYearSlice = createSlice({\r\n  name: 'currentYear',\r\n  initialState: '',\r\n  reducers: {\r\n    setCurrentYear: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n\r\nconst deleteImageVisibleSlice = createSlice({\r\n  name: 'deleteImageVisible',\r\n  initialState: true,\r\n  reducers: {\r\n    setDeleteImageVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n});\r\n\r\n// =============================== Chat Messages ========================================\r\nexport const { setMessageTextInputValue } = messageTextInputValueSlice.actions\r\nexport const { setCustomInvoiceVisible } = customInvoiceVisibleSlice.actions\r\nexport const { setSelectedVehicleData } = selectedVehicleDataSlice.actions\r\nexport const { setCarImageUrl } = carImageUrlSlice.actions\r\nexport const { setSelectedFileUrl } = selectedFileUrlSlice.actions\r\nexport const { setPdfViewerModalVisible } = pdfViewerModalVisibleSlice.actions\r\nexport const { setSelectedCustomerData } = selectedCustomerDataSlice.actions\r\nexport const { setPreviewInvoiceVisible } = previewInvoiceVisibleSlice.actions\r\nexport const { setInvoiceData } = invoiceDataSlice.actions\r\nexport const { setTransactionModalVisible } = transactionModalVisibleSlice.actions\r\nexport const { setDeleteMessageTemplateVisible } = deleteMessageTemplateVisibleSlice.actions\r\nexport const { setLoadMoreMessagesLoading } = loadMoreMessagesLoadingSlice.actions\r\nexport const { setNoMoreMessagesData } = noMoreMessagesDataSlice.actions\r\nexport const { setReadByListModalVisible } = readByListModalVisibleSlice.actions\r\nexport const { setSelectedChatData } = selectedChatDataSlice.actions\r\nexport const { setChatMessageBoxLoading } = chatMessageBoxLoadingSlice.actions\r\nexport const { setChatMessagesData } = chatMessagesDataSlice.actions\r\nexport const { setActiveChatId } = activeChatIdSlice.actions\r\nexport const { setChatListSearchText } = chatListSearchTextSlice.actions\r\nexport const { setLoadMoreLoading } = loadMoreLoadingSlice.actions\r\nexport const { setNoMoreData } = noMoreDataSlice.actions\r\nexport const { setChatListLastVisible } = chatListLastVisibleSlice.actions\r\nexport const { setChatListData } = chatListDataSlice.actions\r\nexport const { setChatListImageUrl } = chatListImageUrlSlice.actions\r\n// =============================== Chat Messages ========================================\r\n\r\n// =============================== Freight ========================================\r\nexport const { setDeletePortModalVisible } = deletePortModalVisibleSlice.actions\r\nexport const { setDeleteCountryModalVisible } = deleteCountryModalVisibleSlice.actions\r\nexport const { setCountryPortsData } = countryPortsDataSlice.actions\r\nexport const { setAddPortsForCountriesModalVisible } = addPortsForCountriesModalVisibleSlice.actions\r\nexport const { setInspectionIsRequiredData } = inspectionIsRequiredDataSlice.actions\r\nexport const { setMethodData } = methodDataSlice.actions\r\nexport const { setInspectionNameData } = inspectionNameDataSlice.actions\r\nexport const { setSelectedButton } = selectedButtonSlice.actions\r\nexport const { setAddCountryModalVisible } = addCountryModalVisibleSlice.actions\r\nexport const { setAddPortModalVisible } = addPortModalVisibleSlice.actions\r\nexport const { setFreightPortsData } = freightPortsDataSlice.actions\r\nexport const { setFreightCountriesData } = freightCountriesDataSlice.actions\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Vehicle List ========================================\r\nexport const { setInputFob } = inputFobSlice.actions\r\nexport const { setFobHistoryData } = fobHistoryDataSlice.actions\r\nexport const { setFobPriceHistoryModalVisible } = fobPriceHistoryModalVisibleSlice.actions\r\nexport const { setEditVehicleModalVisible } = editVehicleModalVisibleSlice.actions\r\nexport const { setVehicleListData } = vehicleListDataSlice.actions\r\nexport const { setAddVehicleListData } = addVehicleListDataSlice.actions\r\nexport const { setSupplyChainsCostsModalVisible } = supplyChainsCostsModalVisibleSlice.actions\r\nexport const { setVehicleListSupplyChainsCostsData } = vehicleListSupplyChainsCostsDataSlice.actions\r\nexport const { setUploadImagesModalVisible } = uploadImagesModalVisibleSlice.actions\r\nexport const { setUploadImagesButtonLoading } = uploadImagesButtonLoadingSlice.actions\r\nexport const { setViewImagesModalVisible } = viewImagesModalVisibleSlice.actions\r\nexport const { setViewImagesData } = viewImagesDataSlice.actions\r\nexport const { setLastVisible } = lastVisibleSlice.actions\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Account List ========================================\r\nexport const { setAccountListData } = accountListDataSlice.actions\r\n\r\n// =============================== Account List ========================================\r\n\r\n// =============================== Logs ======================================== \r\nexport const { setLogsData } = logsDataSlice.actions\r\n// =============================== Logs ======================================== \r\n\r\nexport const { setStockStatusData } = stockStatusDataSlice.actions\r\nexport const { setIsSuccessModalOpen } = isSuccessModalOpenSlice.actions\r\nexport const { setIsUpdateSuccessModalOpen } = isUpdateSuccessModalOpenSlice.actions\r\nexport const { setLoadingModalVisible } = loadingModalVisibleSlice.actions\r\nexport const { setSelectedPaidTo } = selectedPaidToSlice.actions\r\nexport const { setSelectedExpenseName } = selectedExpenseNameSlice.actions\r\nexport const { setSupplyChainsCostsData } = supplyChainsCostsDataSlice.actions\r\nexport const { setCurrentDate } = currentDateSlice.actions\r\nexport const { setPaidToData } = paidToDataSlice.actions\r\nexport const { setDeleteImageVisible } = deleteImageVisibleSlice.actions\r\nexport const { setExpenseNameData } = expenseNameDataSlice.actions\r\nexport const { setLoginEmail } = loginEmailSlice.actions\r\nexport const { setLoginName } = loginNameSlice.actions\r\nexport const { setLoginAccountType } = loginAccountTypeSlice.actions\r\nexport const { setIsAddPhotoVisible } = isAddPhotoVisibleSlice.actions\r\nexport const { setAddAnotherImages } = addAnotherImagesSlice.actions\r\nexport const { setModalDeleteImagesVisible } = modalDeleteImagesVisibleSlice.actions\r\nexport const { setMakeData } = makeDataSlice.actions\r\nexport const { setSelectedMake } = selectedMakeSlice.actions\r\nexport const { setIsLoading } = isLoadingSlice.actions\r\nexport const { setSelectedImages } = selectedImagesSlice.actions\r\nexport const { setPortData } = portDataSlice.actions\r\nexport const { setTransmissionData } = transmissionDataSlice.actions;\r\nexport const { setFuelData } = fuelDataSlice.actions;\r\nexport const { setBuyerData } = buyerDataSlice.actions;\r\nexport const { setSalesData } = salesDataSlice.actions;\r\nexport const { setDriveTypeData } = driveTypeDataSlice.actions;\r\nexport const { setBodyTypeData } = bodyTypeDataSlice.actions;\r\nexport const { setExteriorColorData } = exteriorColorDataSlice.actions;\r\nexport const { setJpyToUsd } = jpyToUsdSlice.actions;\r\nexport const { setUsdToJpy } = usdToJpySlice.actions;\r\nexport const { setCurrentYear } = currentYearSlice.actions;\r\nexport const { setModelData } = modelDataSlice.actions\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n\r\n    // =============================== Chat Messages ======================================== \r\n    customInvoiceVisible: customInvoiceVisibleSlice.reducer,\r\n    messageTextInputValue: messageTextInputValueSlice.reducer,\r\n    selectedVehicleData: selectedVehicleDataSlice.reducer,\r\n    carImageUrl: carImageUrlSlice.reducer,\r\n    selectedFileUrl: selectedFileUrlSlice.reducer,\r\n    pdfViewerModalVisible: pdfViewerModalVisibleSlice.reducer,\r\n    selectedCustomerData: selectedCustomerDataSlice.reducer,\r\n    previewInvoiceVisible: previewInvoiceVisibleSlice.reducer,\r\n    invoiceData: invoiceDataSlice.reducer,\r\n    transactionModalVisible: transactionModalVisibleSlice.reducer,\r\n    deleteMessageTemplateVisible: deleteMessageTemplateVisibleSlice.reducer,\r\n    loadMoreMessagesLoading: loadMoreMessagesLoadingSlice.reducer,\r\n    noMoreMessagesData: noMoreMessagesDataSlice.reducer,\r\n    readByListModalVisible: readByListModalVisibleSlice.reducer,\r\n    selectedChatData: selectedChatDataSlice.reducer,\r\n    chatMessageBoxLoading: chatMessageBoxLoadingSlice.reducer,\r\n    chatMessagesData: chatMessagesDataSlice.reducer,\r\n    chatListSearchText: chatListSearchTextSlice.reducer,\r\n    activeChatId: activeChatIdSlice.reducer,\r\n    loadMoreLoading: loadMoreLoadingSlice.reducer,\r\n    noMoreData: noMoreDataSlice.reducer,\r\n    chatListLastVisible: chatListLastVisibleSlice.reducer,\r\n    chatListData: chatListDataSlice.reducer,\r\n    chatListImageUrl: chatListImageUrlSlice.reducer,\r\n    // =============================== Chat Messages ======================================== \r\n\r\n    // =============================== Freight ======================================== \r\n    deletePortModalVisible: deletePortModalVisibleSlice.reducer,\r\n    deleteCountryModalVisible: deleteCountryModalVisibleSlice.reducer,\r\n    countryPortsData: countryPortsDataSlice.reducer,\r\n    addPortsForCountriesModalVisible: addPortsForCountriesModalVisibleSlice.reducer,\r\n    inspectionIsRequiredData: inspectionIsRequiredDataSlice.reducer,\r\n    methodData: methodDataSlice.reducer,\r\n    freightPortsData: freightPortsDataSlice.reducer,\r\n    inspectionNameData: inspectionNameDataSlice.reducer,\r\n    addCountryModalVisible: addCountryModalVisibleSlice.reducer,\r\n    addPortModalVisible: addPortModalVisibleSlice.reducer,\r\n    freightCountriesData: freightCountriesDataSlice.reducer,\r\n    selectedButton: selectedButtonSlice.reducer,\r\n    // =============================== Freight ========================================\r\n\r\n    // =============================== Vehicle List ========================================\r\n    inputFob: inputFobSlice.reducer,\r\n    fobHistoryData: fobHistoryDataSlice.reducer,\r\n    fobPriceHistoryModalVisible: fobPriceHistoryModalVisibleSlice.reducer,\r\n    editVehicleModalVisible: editVehicleModalVisibleSlice.reducer,\r\n    vehicleListData: vehicleListDataSlice.reducer,\r\n    addVehicleListData: addVehicleListDataSlice.reducer,\r\n    supplyChainsCostsModalVisible: supplyChainsCostsModalVisibleSlice.reducer,\r\n    uploadImagesModalVisible: uploadImagesModalVisibleSlice.reducer,\r\n    uploadImagesButtonLoading: uploadImagesButtonLoadingSlice.reducer,\r\n    viewImagesModalVisible: viewImagesModalVisibleSlice.reducer,\r\n    viewImagesData: viewImagesDataSlice.reducer,\r\n    lastVisible: lastVisibleSlice.reducer,\r\n    // =============================== Vehicle List ========================================\r\n\r\n\r\n    // =============================== Account List ========================================\r\n    accountListData: accountListDataSlice.reducer,\r\n    // =============================== Account List ========================================\r\n\r\n\r\n    // =============================== Logs ======================================== \r\n    logsData: logsDataSlice.reducer,\r\n    // =============================== Logs ======================================== \r\n    stockStatusData: stockStatusDataSlice.reducer,\r\n    isUpdateSuccessModalOpen: isUpdateSuccessModalOpenSlice.reducer,\r\n    loadingModalVisible: loadingModalVisibleSlice.reducer,\r\n    selectedPaidTo: selectedPaidToSlice.reducer,\r\n    selectedExpenseName: selectedExpenseNameSlice.reducer,\r\n    supplyChainsCostsData: supplyChainsCostsDataSlice.reducer,\r\n    vehicleListSupplyChainsCostsData: vehicleListSupplyChainsCostsDataSlice.reducer,\r\n    currentDate: currentDateSlice.reducer,\r\n    paidToData: paidToDataSlice.reducer,\r\n    expenseNameData: expenseNameDataSlice.reducer,\r\n    modelData: modelDataSlice.reducer,\r\n    makeData: makeDataSlice.reducer,\r\n    selectedMake: selectedMakeSlice.reducer,\r\n    isLoading: isLoadingSlice.reducer,\r\n    selectedImages: selectedImagesSlice.reducer,\r\n    portData: portDataSlice.reducer,\r\n    transmissionData: transmissionDataSlice.reducer,\r\n    fuelData: fuelDataSlice.reducer,\r\n    buyerData: buyerDataSlice.reducer,\r\n    salesData: salesDataSlice.reducer,\r\n    driveTypeData: driveTypeDataSlice.reducer,\r\n    bodyTypeData: bodyTypeDataSlice.reducer,\r\n    exteriorColorData: exteriorColorDataSlice.reducer,\r\n    jpyToUsd: jpyToUsdSlice.reducer,\r\n    usdToJpy: usdToJpySlice.reducer,\r\n    currentYear: currentYearSlice.reducer,\r\n    isAddPhotoVisible: isAddPhotoVisibleSlice.reducer,\r\n    addAnotherImages: addAnotherImagesSlice.reducer,\r\n    modalDeleteImagesVisible: modalDeleteImagesVisibleSlice.reducer,\r\n    loginName: loginNameSlice.reducer,\r\n    loginAccountType: loginAccountTypeSlice.reducer,\r\n    loginEmail: loginEmailSlice.reducer,\r\n    deleteImageVisible: deleteImageVisibleSlice.reducer,\r\n  },\r\n\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: ['chatMessagesData/setChatMessagesData'],\r\n        ignoredPaths: ['chatMessagesData.somePathToTimestamp'],\r\n      },\r\n    }),\r\n});\r\n\r\n\r\nexport const fetchCurrency = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(projectControlFirestore, 'currency', 'currency');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const jpyToUsd = snapshot.data()?.jpyToUsd || [];\r\n        const usdToJpy = snapshot.data()?.usdToJpy || [];\r\n        dispatch(setJpyToUsd(jpyToUsd));\r\n        dispatch(setUsdToJpy(usdToJpy));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchExpenseNameData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'ExpenseName'), 'ExpenseName');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const expenseNameData = snapshot.data()?.expenseName || [];\r\n        dispatch(setExpenseNameData(expenseNameData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const fetchPaidToData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'PaidTo'), 'PaidTo');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const paidToData = snapshot.data()?.paidTo || [];\r\n        dispatch(setPaidToData(paidToData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const fetchMakeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Make'), 'Make');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const makeData = snapshot.data()?.make || [];\r\n        dispatch(setMakeData(makeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPortData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Port'), 'Port');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const portData = snapshot.data()?.port || [];\r\n        dispatch(setPortData(portData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// Dispatch the fetchMakeData action when your app starts or as needed\r\n\r\nexport const fetchTransmissionData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Transmission'), 'Transmission');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const transmissionData = snapshot.data()?.transmission || [];\r\n        dispatch(setTransmissionData(transmissionData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const fetchFuelData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Fuel'), 'Fuel');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const fuelData = snapshot.data()?.fuel || [];\r\n        dispatch(setFuelData(fuelData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBuyerData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Buyer'), 'Buyer');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const buyerData = snapshot.data()?.buyer || [];\r\n        dispatch(setBuyerData(buyerData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchSalesData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Sales'), 'Sales');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const salesData = snapshot.data()?.sales || [];\r\n        dispatch(setSalesData(salesData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchDriveTypeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'DriveType'), 'DriveType');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const driveTypeData = snapshot.data()?.driveType || [];\r\n        dispatch(setDriveTypeData(driveTypeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBodyTypeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'BodyType'), 'BodyType');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const bodyTypeData = snapshot.data()?.bodyType || [];\r\n        dispatch(setBodyTypeData(bodyTypeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchExteriorColorData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'ExteriorColor'), 'ExteriorColor');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const exteriorColorData = snapshot.data()?.exteriorColor || [];\r\n        dispatch(setExteriorColorData(exteriorColorData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchYear = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY');\r\n      dispatch(setCurrentYear(formattedTime));\r\n    } catch (error) {\r\n      console.error('Error fetching time:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchCurrentDate = () => {\r\n\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY-MM-DD');\r\n      dispatch(setCurrentDate(formattedTime));\r\n    } catch (error) {\r\n      console.error('Error fetching time:', error);\r\n    }\r\n  };\r\n};\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n\r\nexport const fetchVehicleListData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const queryRef = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n        const vehicleProductData = [];\r\n        snapshot.forEach((doc) => {\r\n          vehicleProductData.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(setVehicleListData(vehicleProductData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Logs ========================================\r\n// export const fetchLogsData = () => {\r\n//   return async (dispatch) => {\r\n//     try {\r\n\r\n//       const queryRef = query(\r\n//         collection(projectControlFirestore, 'logs'),\r\n//         orderBy('timestamp', 'desc'),\r\n//         limit(10)\r\n//       );\r\n\r\n//       const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n//         const logsDatabaseData = [];\r\n//         snapshot.forEach((doc) => {\r\n//           logsDatabaseData.push({\r\n//             id: doc.id,\r\n//             ...doc.data(),\r\n//           });\r\n//         });\r\n//         dispatch(setLogsData(logsDatabaseData));\r\n//       });\r\n\r\n//       // Return the unsubscribe function to stop listening when necessary\r\n//       return unsubscribe;\r\n//     } catch (error) {\r\n//       // Handle errors here\r\n//       console.error('Error fetching data from Firebase:', error);\r\n//     }\r\n//   };\r\n// };\r\n\r\n// =============================== Logs ========================================\r\n\r\n// =============================== Freight ========================================\r\n\r\nexport const fetchMethodData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'MethodDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const methodData = snapshot.data()?.methodData || [];\r\n        dispatch(setMethodData(methodData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchInspectionIsRequiredData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionIsRequiredDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const inspectionIsRequiredData = snapshot.data()?.inspectionIsRequiredData || [];\r\n        dispatch(setInspectionIsRequiredData(inspectionIsRequiredData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchInspectionNameData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionNameDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const inspectionNameData = snapshot.data()?.inspectionNameData || [];\r\n        dispatch(setInspectionNameData(inspectionNameData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\nexport const fetchChatListData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const queryRef = query(\r\n        collection(projectExtensionFirestore, 'chats'),\r\n        orderBy('lastMessageDate', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n        const chatsData = [];\r\n        snapshot.forEach((doc) => {\r\n          chatsData.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(setChatListData(chatsData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// =============================== Chat Messages ========================================\r\n// To stop listening for updates, you can call unsubscribe()\r\n// unsubscribe();\r\n\r\nstore.dispatch(fetchCurrentDate());\r\nstore.dispatch(fetchPaidToData());\r\nstore.dispatch(fetchExpenseNameData());\r\nstore.dispatch(fetchMakeData());\r\nstore.dispatch(fetchPortData());\r\nstore.dispatch(fetchTransmissionData());\r\nstore.dispatch(fetchFuelData());\r\nstore.dispatch(fetchBuyerData());\r\nstore.dispatch(fetchSalesData());\r\nstore.dispatch(fetchDriveTypeData());\r\nstore.dispatch(fetchBodyTypeData());\r\nstore.dispatch(fetchExteriorColorData());\r\nstore.dispatch(fetchCurrency());\r\nstore.dispatch(fetchYear());\r\n\r\n\r\n\r\n// store.dispatch(fetchVehicleListData());\r\n\r\nstore.dispatch(fetchMethodData());\r\nstore.dispatch(fetchInspectionIsRequiredData());\r\nstore.dispatch(fetchInspectionNameData());\r\n\r\n// store.dispatch(fetchChatListData());\r\n\r\n\r\nexport default store","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport {\r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID\r\n} from '@env';\r\n\r\nimport {\r\n  REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID\r\n} from '@env';\r\n\r\n// Configuration for Firebase project 1\r\nconst firebaseConfigControl = {\r\n  apiKey: REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain: REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL: REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId: REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket: REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId: REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId: REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// Configuration for Firebase project 2\r\nconst firebaseConfigExtension = {\r\n  // Replace with your project 2 configuration\r\n  apiKey: REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\r\n  authDomain: REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\r\n  projectId: REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\r\n  storageBucket: REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\r\n  appId: REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\r\n  measurementId: REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID,\r\n\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Initialize Firebase for project 1\r\nexport const projectControlFirebase = initializeApp(firebaseConfigControl);\r\nexport const projectControlAuth = getAuth(projectControlFirebase);\r\nexport const projectControlFirestore = getFirestore(projectControlFirebase);\r\n\r\n// Initialize Firebase for project 2\r\nexport const projectExtensionFirebase = initializeApp(firebaseConfigExtension, 'projectExtension');\r\nexport const projectExtensionAuth = getAuth(projectExtensionFirebase);\r\nexport const projectExtensionFirestore = getFirestore(projectExtensionFirebase);\r\n","\r\n\r\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc, getDocs, orderBy, deleteDoc, startAfter, limit } from 'firebase/firestore';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { \r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nconst firebaseControlConfig = {\r\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n  };\r\n\r\n// Initialize Firebase\r\n\r\nconst app = initializeApp(firebaseControlConfig);\r\nconst analytics = getAnalytics(app);\r\nconst auth = getAuth(app);\r\nrequire('firebase/auth');\r\n// export const auth = app.auth()\r\nconst db = getFirestore (app);\r\n// export default app\r\nexport {app, db, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, getAuth, signInWithEmailAndPassword, updateDoc, getDocs, orderBy, deleteDoc, limit, startAfter };","\r\n\r\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc } from 'firebase/firestore';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { \r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nconst firebaseControlCreateUserConfig = {\r\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n  };\r\n\r\n// Initialize Firebase\r\n\r\n\r\nrequire('firebase/auth');\r\n// export const auth = app.auth()\r\nconst firebaseAppForCreateUser = initializeApp(firebaseControlCreateUserConfig, 'Secondary' );\r\nconst authForCreateUser = getAuth(firebaseAppForCreateUser);\r\n// export default app\r\nexport {authForCreateUser};","// extracted by mini-css-extract-plugin\nexport default {};","var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 44707,\n\t\"./bs.js\": 44707,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 2553,\n\t\"./es-mx.js\": 2553,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"162\":\"da88e0a0\",\"245\":\"704124dc\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/samplecontrolhub/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [389], () => (__webpack_require__(19386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","_Dimensions$get","Dimensions","get","width","height","LoginPage","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","_useState5","_useState6","password","setPassword","_React$useState","React","_React$useState2","show","setShow","_React$useState3","_React$useState4","errorShow","setErrorShow","_React$useState5","_React$useState6","_React$useState7","_React$useState8","errorTitle","setErrorTitle","_React$useState9","_React$useState10","errorMessage","setErrorMessage","logo","require","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","isDisabled","setIsDisabled","navigate","useNavigate","useEffect","auth","onAuthStateChanged","user","ErrorLoginShow","_jsx","Box","w","alignItems","children","PresenceTransition","visible","initial","opacity","scale","animate","transition","duration","Alert","maxW","status","_jsxs","VStack","space","flexShrink","HStack","justifyContent","Icon","Text","fontSize","fontWeight","_dark","color","pl","_text","updateFieldData","_ref","_asyncToGenerator","documentId","fieldName","newValue","userRef","doc","db","updateDoc","_defineProperty","error","console","_x","_x2","_x3","apply","arguments","handleSignIn","setTimeout","signInWithEmailAndPassword","trim","then","re","catch","errorCode","message","log","length","NativeBaseProvider","bgColor","h","Center","flex","px","Image","source","uri","resizeMode","alt","style","Stack","Input","base","md","sm","value","onSubmitEditing","onChangeText","text","InputLeftElement","as","MaterialIcons","name","size","ml","placeholder","placeholderTextColor","type","InputRightElement","Pressable","onPress","mr","Button","_hover","_pressed","_focus","borderWidth","borderColor","disabled","Spinner","StyleSheet","create","container","paddingHorizontal","input","borderRadius","marginBottom","loginButton","backgroundColor","paddingVertical","loginButtonText","textAlign","Loading","loadingContainer","props","LazyComponent","lazy","importFunc","Suspense","fallback","_objectSpread","data","csvData","setCsvData","handleFileChange","event","file","target","files","reader","FileReader","onload","codes","Uint8Array","result","unicodeString","Encoding","Papa","header","dynamicTyping","complete","_complete","results","forEach","_ref2","row","response","fetch","method","headers","body","JSON","stringify","documentData","ok","readAsArrayBuffer","handlePressUpdate","_ref5","_ref6","_x4","View","accept","onChange","index","createNativeStackNavigator","firestore","getFirestore","getEmailOfCurrentUser","currentUser","Top","navigation","setDrawerVisible","setType","dispatch","useSelector","state","loginAccountType","createDrawerNavigator","useDispatch","handleDocumentChange","snapshot","exists","active","signOut","unsubscribe","_auth$currentUser","userId","onSnapshot","subscribeToFieldChange","currentUserEmail","getFieldValueByEmail","accountDocRef","docSnapshot","fieldType","setLoginAccountType","setLoginName","Math","floor","random","document","createElement","textContent","head","append","Routes","Route","path","element","Navigate","to","replace","ParseCSV","ChatMessages","LazyScreen","Checkpoint","loginEmail","loginName","delay","App","initializing","setInitializing","setUser","Provider","store","Router","selectedScreen","AccountList","_searchInput$current","setEmailError","logo2","_useState11","_useState12","_useState13","_useState14","setName","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","isSelectedLogs","_useState21","_useState22","isSelectedAddAccount","_useState23","_useState24","isSelectedAccountList","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","setAccountTypeSpAd","_useState31","_useState32","setAccountTypeDevAd","_useState33","_useState34","setAccountTypeAd","_useState35","_useState36","setAccountType3","_useState37","_useState38","setAccountType4","_useState39","_useState40","inputName","setInputName","_useState41","_useState42","_useState43","_useState44","inputEmail","setInputEmail","_useState45","_useState46","inputPassword","setInputPassword","_useState47","_useState48","setInputConfirmPassword","_useState49","_useState50","typeOfAccount","setTypeOfAccount","_useState51","_useState52","setTypeOfAccountDisplay","showSuccessModal","setShowSuccessModal","showDisableModal","setShowDisableModal","showEnableModal","setShowEnableModal","_React$useState11","_React$useState12","showDeleteModal","setShowDeleteModal","_React$useState13","_React$useState14","_useState53","useRef","_useState54","selectedItem","setSelectedItem","_useState55","_useState56","modalVisible","setModalVisible","_useState57","_useState58","_useState59","_useState60","setTime","_useState61","_useState62","selectedType","setSelectedType","_useState63","_useState64","selectedTypeDisplay","setSelectedTypeDisplay","_useState65","_useState66","selectedItemType","setSelectedItemType","_useState67","_useState68","isEmailDuplicate","setIsEmailDuplicate","_useState69","_useState70","authEmail","setAuthEmail","_useState71","_useState72","authPassword","setAuthPassword","_useState73","_useState74","isYesLoading","setIsYesLoading","_useState75","_useState76","isSaveLoading","setIsSaveLoading","inputEmailRef","inputNameRef","inputPassRef","_useState77","_useState78","page","setPage","optionsPerPage","_useState79","_useState80","itemsPerPage","setItemsPerPage","_useState81","_useState82","setData","_useState83","_useState84","searchQuery","setSearchQuery","_useState85","_useState86","filteredData","setFilteredData","_useState87","_useState88","_useState89","_useState90","ref0","ref1","ref2","ref3","searchInput","searchInputValue","current","_useState91","_useState92","pageSize","_useState93","_useState94","lastVisible","setLastVisible","_useState95","_useState96","firstVisible","setFirstVisible","_useState97","_useState98","searchText","_useState99","_useState100","currentPage","setCurrentPage","q","query","collection","orderBy","limit","documents","logsDatabaseData","push","setAccountListData","docs","fetchNextData","collectionGroup","projectControlFirestore","startAfter","getDocs","updateState","setLoadingModalVisible","where","toLowerCase","fetchPreviousData","endBefore","limitToLast","fetchFirstPage","accountListDatabaseData","_ref3","pageClicked","empty","firstPageDocuments","_ref4","searchData","handleToggleAccountTypeAd","useCallback","handleToggleAccountTypeDevAd","handleToggleAccountType3","handleToggleAccountType4","handleToggleAccountTypeSpAd","fetchData","_ref7","updatedData","listenForNameChange","_auth$currentUser2","getEmailFromDocument","_ref8","collectionPath","documentRef","documentSnapshot","getDoc","pass","_ref9","accountDocSnapshot","_x5","validateEmail","test","handleEdit","find","item","typeDisplay","setNativeProps","handleInputEmailChange","debounce","handleInputNameChange","handleInputPassChange","handleCloseModal","handleCloseDisableModal","handleCloseDeleteModal","handleCloseEnableModal","addLogToCollection","_ref10","logsCollectionRef","addDoc","_x6","handleEnable","_ref11","itemDocRef","datetime","axios","formattedTime","moment","format","year","month","monthWithDay","date","day","time","timeWithMinutesSeconds","applySearchFilter","logData","keywords","timestamp","colorScheme","_x7","deleteDocument","_ref12","customId","deleteDoc","_x8","_x9","handleDelete","_ref13","deleteUser","_x10","handleDisable","_ref14","_searchInput$current2","_x11","filter","includes","handleSave","_ref15","isPasswordLengthLabel","updatedFields","lastUpdatedDate","_searchInput$current3","updatePassword","userDocRef","dateOfCreation","setDoc","oldDocumentRef","newDocumentRef","createUserWithEmailAndPassword","updatedItem","fetchSignInMethodsForEmail","_x12","_ref16","filtered","useMemo","paginatedData","startIndex","endIndex","slice","handleSearch","min","styles","image","flexDirection","position","top","zIndex","borderBottomWidth","borderBottomColor","SideDrawer","marginTop","paddingLeft","FastImage","priority","high","stretch","marginLeft","QRCodeScanner","_ref17","handleSignOut","_useState101","_useState102","showNamePopover","setShowNamePopover","showPopover","Flex","direction","Popover","isOpen","trigger","triggerProps","marginRight","MaterialCommunityIcons","Ionicons","onClose","placement","trapFocus","Content","Body","leftIcon","flexGrow","minHeight","ref","ScrollView","contentContainerStyle","DataTable","margin","overflow","display","padding","paddingBottom","handleOpenDisableModal","handleOpenEnableModal","handleOpenDeleteModal","Pagination","numberOfPages","ceil","onPageChange","label","showFastPagination","optionsLabel","Modal","CloseButton","Header","defaultValue","bold","FontAwesome","Footer","borderTopWidth","maxWidth","variant","AddAccount","show2","setShow2","typeOfAccountDisplay","showModal","setShowModal","inputConfirmPassword","passwordMatch","setPasswordMatch","passwordMatchLabel","setPasswordMatchLabel","passwordLengthLabel","setPasswordLengthLabel","isNameEmpty","setIsNameEmpty","setIsIntervalActive","closeModal","handleAddAccount","_inputEmail$current","authForCreateUser","userCredential","_inputName$current","_inputName$current2","_inputEmail$current2","_inputName$current3","_inputPassword$curren","customID","docRef","handleClear","handlePasswordStatus","_inputPassword$curren3","_inputConfirmPassword2","inputPasswordValue","inputConfirmPasswordValue","inputPasswordValueLength","_inputEmail$current3","emailValue","handleEmailSubmit","_inputName$current4","AntDesign","_inputPassword$curren2","_inputConfirmPassword","wrap","flexDir","globalSupplyChainCostsData","globalSelectedExpenseName","globalSupplyChainCostsAmount","globalSelectedPaidTo","globalModelDataVariable","globalRegYearDataVariable","globalSelectedImages","globalVehicleFolderName","globalReferenceNumber","globalSPCSelectedDate","globalFobPrice","UpdateSuccessModal","bodyText","headerText","isUpdateSuccessModalOpen","borderLeftWidth","borderLeftColor","UploadSuccessModal","isSuccessModalOpen","LoadingModal","loadingModalVisible","bottom","left","right","selectable","SelectExpenseName","expenseNameIsError","selectExpenseNameRef","selectResetKey","expenseNameData","selectedExpenseName","nanoid","Select","selectedValue","onValueChange","setSelectedExpenseName","accessibilityLabel","_selectedItem","bg","endIcon","CheckIcon","Item","SelectPaidTo","paidToIsError","paidToData","selectedPaidTo","setSelectedPaidTo","ModalCalendar","selectedDate","setSelectedDate","modalCalendarVisible","setModalCalendarVisible","handleModalCalendarOpen","handleModalCalendarClose","_Fragment","onFocus","useRNModal","Calendar","onDayPress","dateString","markedDates","selected","disableTouchEvent","selectedDotColor","renderArrow","enableSwipeMonths","initialDate","showSixWeeks","SupplyChainsCosts","handleAddExpenseNameTextChange","textAreaAddExpenseName","inputExpenseAmount","handleInputExpenseAmountChange","handleAddPaidToTextChange","inputCarNotes","supplyChainsCostsData","currentDate","supplyChainsCostsModalVisible","setSupplyChainsCostsModalVisible","clearModalVisible","setClearModalVisible","inputAmountIsError","setInputAmountIsError","setExpenseNameIsError","setPaidToIsError","totalAmount","setTotalAmount","setSelectResetKey","handleModalSupplyChainsCostsClose","_inputExpenseAmount$c","clear","handleClearModalClose","formattedTotalAmount","expenseData","parseFloat","amount","reduce","accumulator","currentValue","toLocaleString","_inputExpenseAmount$c2","_inputExpenseAmount$c3","_inputExpenseAmount$c4","_inputExpenseAmount$c5","existingIndex","findIndex","_inputExpenseAmount$c6","cloneDeep","expenseName","paidName","setSupplyChainsCostsData","_inputExpenseAmount$c7","newData","concat","_toConsumableArray","handleEditPress","handleFirstModalClose","handleFirstModalOpen","alignSelf","SupplyChainsCostsSortAndAddModal","docName","handleAddTextChange","textAreaAdd","title","dataName","databaseInit","projectExtensionFirestore","isHovered","isFocused","isPressed","itemIndex","splice","handleDeleteItem","projectControlAuth","storage","getStorage","projectExtensionFirebase","ClearImagesModal","modalDeleteImagesVisible","setModalDeleteImagesVisible","handleClearImages","selectedImages","isAddPhotoVisible","handleModalDeleteClose","cursor","ImageUploader","dragSortableViewRef","handleClearImagesExtra","deleteImageVisible","boolean","addAnotherImages","scrollEnabled","setscrollEnabled","isEnterEdit","setisEnterEdit","widthState","setWidthState","setIsCursorLoading","modalImageUri","setModalImageUri","imageModalVisible","setImageModalVisible","isFileSizeLimitModal","setIsFileSizeLimitModal","handleImagePress","dropdown","icon","placeholderStyle","selectedTextStyle","iconStyle","inputSearchStyle","paddingTop","txt","lineHeight","sort","item_children","item_delete_icon","item_icon","handleImageAddToSelection","setDeleteImageVisible","options","mediaType","maxHeight","selectionLimit","storageOptions","skipBackup","launchImageLibrary","didCancel","assets","newImages","promises","asset","res","blob","some","Promise","all","limitedImages","setSelectedImages","setAddAnotherImages","reloadData","updatedSelectedImages","handleWidthChange","window","addEventListener","removeEventListener","renderItem","normal","contain","handleDeleteImagePress","Entypo","getImagesRenderItem","handleImageSelection","uniqueImages","self","a","filteredImages","imageOrder","b","indexOf","setIsAddPhotoVisible","DragSortableView","dataSource","delayLongPress","parentWidth","childrenWidth","childrenHeight","marginChildrenTop","marginChildrenBottom","marginChildrenLeft","marginChildrenRight","onDragStart","onDragEnd","onDataChange","onClickItem","keyExtractor","sortable","italic","alignContent","NativeImage","SuccessFailModal","isSuccessOpen","isFailedOpen","handleFailModalClose","inputStockIDNumber","handleSuccessModalClose","okSuccessButtonRef","okFailButtonRef","initialFocusRef","finalFocusRef","StockIDAndMakeAndModel","selectStockStatus","handleSetBordersWhite","inputFobUsd","handleClearIfError","monthNumbers","steeringData","selectPort","selectSales","selectBuyer","inputRefNum","inputChassis","inputModelCode","inputEngineCode","inputEngineDis","selectSteering","inputMileage","selectTransmission","selectExteriorColor","inputNumOfSeats","inputDoors","inputPurchasedPrice","selectFuel","inputDimensionLength","inputDimensionWidth","inputDimensionHeight","inputDimensionCubicMeters","selectDriveType","inputWeight","selectBodyType","inputCarName","inputCarDesc","inputFobJpy","selectRegYear","selectRegMonth","setRefNumFromSelects","stockIDNumError","selectMakeForModelRef","textAreaAddModel","selectMakeForAddModelRef","handleAddMakeTextChange","textAreaAddMake","makeError","modelError","selectMakeBoxRef","selectMakeRef","selectModelRef","selectModelBoxRef","setCarNameFromSelects","setCarNameFromSelectsModel","inputCarMemo","purchasedPriceError","handleInputPurchasedPriceChange","makeData","stockStatusData","portData","transmissionData","fuelData","buyerData","salesData","driveTypeData","bodyTypeData","exteriorColorData","jpyToUsd","modelData","setModelData","isSearchLoading","setIsSearchLoading","setIsSuccessOpen","setIsFailedOpen","getImages","_ref18","folderName","imageRefs","listAll","urls","items","_ref19","itemRef","getDownloadURL","fileName","parseInt","handleSearchPress","_inputStockIDNumber$c","_inputStockIDNumber$c2","querySnapshot","_ref21","_fetchDataAndSelectIndex","collectionRef","make","selectIndex","modelVariable","reset","modelsDataFromFirebase","model","fetchDataAndSelectIndex","stockStatus","regYear","regMonth","portID","salesID","buyerID","referenceNumber","chassisNumber","modelCode","engineCode","engineDisplacement","steering","mileage","transmission","exteriorColor","numberOfSeats","doors","purchasedPrice","toString","fuel","dimensionLength","dimensionWidth","dimensionHeight","dimensionCubicMeters","driveType","weight","bodyType","carName","carDescription","fobPrice","numericValue","startsWith","truncatedValue","formattedValue","multipliedValue","isNaN","formattedMultipliedValue","toFixed","handleInputFobJpyChange","undefined","notes","memo","featuresState","SafetySystemAnBrSy","SafetySystemDrAi","SafetySystemPaAi","SafetySystemSiAi","ComfortAiCoFr","ComfortAiCoRe","ComfortAMFMRa","ComfortAMFMSt","ComfortCDPl","ComfortCDCh","ComfortCrSpCo","ComfortDiSp","ComfortDVDPl","ComfortHDD","ComfortNaSyGPS","ComfortPoSt","ComfortPrAuSy","ComfortReKeSy","ComfortTiStWh","InteriorLeSe","InteriorPoDoLo","InteriorPoMi","InteriorPoSe","InteriorPoWi","InteriorReWiDe","InteriorReWiWi","InteriorThRoSe","InteriorTiGl","ExteriorAlWh","ExteriorPoSlDo","ExteriorSuRo","SellingPointsCuWh","SellingPointsFuLo","SellingPointsMaHiAv","SellingPointsBrNeTi","SellingPointsNoAcHi","SellingPointsNoSmPrOw","SellingPointsOnOwHi","SellingPointsPeRaTi","SellingPointsReBo","SellingPointsTuEn","SellingPointsUpAuSy","resetKey","stockStatusVariable","makeVariable","regYearVariable","regMonthVariable","portVariable","port","salesVariable","sales","buyerVariable","buyer","referenceNumberVariable","stockID","steeringVariable","transmissionVariable","exteriorColorVariable","fuelVariable","driveTypeVariable","bodyTypeVariable","handleModelChange","handleMakeChange","_ref22","handleInputStockIDNumberChange","handleModelOnFocus","isLoadingText","keyboardType","SortAndAddModal","SelectDropdown","buttonStyle","buttonTextStyle","dropdownStyle","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","rowStyle","rowTextStyle","onSelect","defaultButtonText","buttonTextAfterSelection","renderDropdownIcon","isOpened","rowTextForSelection","searchPlaceHolder","searchInputStyle","disableAutoScroll","search","ModelSortAndAddModal","_ref23","modalSortOpen","setModalSortOpen","modalAddOpen","setModalAddOpen","modalAddSuccess","setModalAddSuccess","modalSave","setModalSave","modalSaveLoading","setModalSaveLoading","modalData","setModalData","modalIsLoading","setModalIsLoading","handleDeleteItemPress","prevData","_ref24","_modalDocSnap$data","modalDocRef","modalDocSnap","nameVariable","handleModalSaveClose","handleSortModalOpen","handleSortModalClose","handleModalAddOpen","handleModalAddClose","_textAreaAdd$current","handleModalAddSuccessClose","handleModalAddSuccessOpen","handleModalSaveOpen","handleAddSubmit","_ref28","_textAreaAdd$current2","dataArray","split","modalCollectionRef","arrayUnion","merge","TouchableOpacity","focusable","DraggableFlatList","_ref29","drag","onPressIn","_ref30","TextArea","multiline","totalLines","_ref31","_ref32","_modalDocSnap$data2","_textAreaAdd$current3","_ref36","_textAreaAdd$current4","_ref37","_ref38","PSBSortAndAddModal","_ref39","textAreaAddCode","handleAddCodeTextChange","_ref40","_modalDocSnap$data3","_ref44","_textAreaAdd$current5","_textAreaAddCode$curr","dataCode","dataCodeArray","dataToUpdate","updateObject","_ref45","_ref46","_ref47","modalAddModel","setModalAddModel","_useState103","_useState104","modalSaveModel","setModalSaveModel","_useState105","_useState106","modalModel","setModalModel","_useState107","_useState108","modalAddModelSuccess","setModalAddModelSuccess","_useState109","_useState110","keySelectMakeForModel","setKeySelectMakeForModel","_useState111","_useState112","keySelectMakeForAddModel","setKeySelectMakeForAddModel","_useState113","_useState114","modelSortData","setModelSortData","_useState115","_useState116","isAddModelDisabled","setIsAddModelDisabled","_useState117","_useState118","modalSaveModelLoading","setModalSaveModelLoading","_useState119","_useState120","_useState121","_useState122","_useState123","_useState124","_useState125","_useState126","_useState127","_useState128","fetchModelSortData","_ref48","_selectMakeForModelRe","_selectMakeForModelRe2","_modelSortDocSnap$dat","modelSortDocRef","modelSortDocSnap","handleDeleteModelPress","prevModelData","_ref49","handleSaveModel","_selectMakeForModelRe3","_selectMakeForModelRe4","_selectMakeForModelRe5","_selectMakeForModelRe6","_selectMakeForModelRe7","handleModalSaveModelClose","handleMakeForModelChange","_selectMakeForAddMode","makeForAddModelVariable","handleMakeForAddModelChange","handleModalModelOpen","handleModalModelClose","prevKey","handleModalAddModelOpen","handleModalAddModelClose","handleModalAddModelSuccessOpen","handleModalAddModelSuccessClose","handleModalSaveModelOpen","_selectMakeForModelRe8","handleAddModelSubmit","_ref51","_textAreaAddModel$cur4","_selectMakeForAddMode2","_selectMakeForAddMode3","_selectMakeForAddMode4","makeCollectionRef","makeDocRef","_ref52","_ref53","_textAreaAddModel$cur","_textAreaAddModel$cur2","_textAreaAddModel$cur3","newText","toUpperCase","CheckBoxButton","_ref54","variable","_useState129","_useState130","checked","setChecked","noOfLines","AddVehicle","screenWidth","_useState131","_useState132","_useState133","_useState134","_useState135","_useState136","_useState137","_useState138","_useState139","_useState140","inputRegYear","inputRegMonth","inputFuel","inputDriveType","textAreaAddTransmission","textAreaAddExteriorColor","textAreaAddFuel","textAreaAddPort","textAreaAddPortCode","textAreaAddSales","textAreaAddBuyer","textAreaAddSalesCode","textAreaAddBuyerCode","textAreaAddDriveType","textAreaAddBodyType","textAreaAddPaidTo","currentYear","years","Array","from","_","_useState141","_useState142","isNoFeaturesSelected","setIsNoFeaturesSelected","_useState143","_useState144","carNameError","setCarNameError","_useState145","_useState146","setMakeError","_useState147","_useState148","setModelError","_useState149","_useState150","regYearError","setRegYearError","_useState151","_useState152","regMonthError","setRegMonthError","_useState153","_useState154","refNumError","setRefNumError","_useState155","_useState156","setStockIDNumError","_useState157","_useState158","chassisError","setChassisError","_useState159","_useState160","modelCodeError","setModelCodeError","_useState161","_useState162","engineDisError","setEngineDisError","_useState163","_useState164","steeringError","setSteeringError","_useState165","_useState166","mileageError","setMileageError","_useState167","_useState168","transmissionError","setTransmissionError","_useState169","_useState170","exteriorColoError","setExteriorColoError","_useState171","_useState172","numOfSeatsError","setNumOfSeatsError","_useState173","_useState174","doorsError","setDoorsError","_useState175","_useState176","setPurchasedPriceError","_useState177","_useState178","fuelError","setFuelError","_useState179","_useState180","portError","setPortError","_useState181","_useState182","buyerError","setBuyerError","_useState183","_useState184","salesError","setSalesError","_useState185","_useState186","dimensionLengthError","setDimensionLengthError","_useState187","_useState188","dimensionWidthError","setDimensionWidthError","_useState189","_useState190","dimensionHeightError","setDimensionHeightError","_useState191","_useState192","driveTypeError","setDriveTypeError","_useState193","_useState194","weightError","setWeightError","_useState195","_useState196","bodyTypeError","setBodyTypeError","_useState197","_useState198","stockStatusError","setStockStatusError","inputVehicleBoxRef","selectRegYearBoxRef","selectRegMonthBoxRef","selectSteeringBoxRef","selectTransmissionBoxRef","selectExteriorColorBoxRef","selectFuelBoxRef","selectPortBoxRef","selectBuyerBoxRef","selectSalesBoxRef","selectDriveTypeBoxRef","selectBodyTypeBoxRef","selectStockStatusBoxRef","property","_ref55","_inputCarName$current","_inputCarDesc$current","_inputFobJpy$current","_inputFobUsd$current","_inputRegYear$current","_inputRegMonth$curren","_inputRefNum$current","_inputChassis$current","_inputModelCode$curre","_inputEngineCode$curr","_inputEngineDis$curre","_inputMileage$current","_inputNumOfSeats$curr","_inputDoors$current","_inputPurchasedPrice$","_inputFuel$current","_inputDimensionLength","_inputDimensionWidth$","_inputDimensionHeight","_inputDriveType$curre","_inputWeight$current","handleClearToggleButton","clearSelect","uploadImages","storageRef","imageNamesToKeep","listResult","deleteObject","_ref57","imagename","img","getContext","src","URL","createObjectURL","canvas","ctx","newWidth","newHeight","drawImage","font","fillStyle","imageSmoothingEnabled","lineWidth","watermarkText","textWidth","measureText","xShadow","yShadow","shadowBlur","fillText","x","y","watermarkedImageBlob","toBlob","imageRef","uploadBytes","contentType","handleUpload","_inputStockIDNumber$c3","_inputRefNum$current2","_inputChassis$current2","_inputModelCode$curre2","_inputEngineDis$curre2","_inputEngineDis$curre3","_inputMileage$current2","_inputMileage$current3","_inputNumOfSeats$curr2","_inputDoors$current2","_inputNumOfSeats$curr3","_inputDoors$current3","_inputPurchasedPrice$2","_inputPurchasedPrice$3","_inputDimensionLength2","_inputDimensionWidth$2","_inputDimensionHeight2","_inputDimensionCubicM","_inputDimensionLength3","_inputDimensionWidth$3","_inputDimensionHeight3","_inputDimensionCubicM2","_inputWeight$current2","_inputWeight$current3","_inputCarName$current2","selectIsEmpty","inputIsEmpty","allValuesAreFalse","values","every","_inputCarName$current3","_inputWeight$current4","_inputWeight$current5","_inputDimensionHeight4","_inputDimensionHeight5","_inputDimensionWidth$4","_inputDimensionWidth$5","_inputDimensionLength4","_inputDimensionLength5","_inputDoors$current4","_inputDoors$current5","_inputPurchasedPrice$4","_inputPurchasedPrice$5","_inputNumOfSeats$curr4","_inputMileage$current4","_inputMileage$current5","_inputEngineDis$curre4","_inputEngineDis$curre5","_inputModelCode$curre3","_inputChassis$current3","_inputRefNum$current3","_inputStockIDNumber$c4","scrollIntoView","behavior","_inputStockIDNumber$c5","_inputRefNum$current4","_inputStockIDNumber$c6","_inputRefNum$current5","_inputCarName$current4","_inputStockIDNumber$c7","_inputChassis$current4","_inputFobJpy$current2","_inputStockIDNumber$c8","_inputRefNum$current6","_inputChassis$current5","_inputModelCode$curre4","_inputEngineCode$curr2","_inputNumOfSeats$curr5","_inputDoors$current6","_inputCarName$current5","_inputCarDesc$current2","_inputCarNotes$curren","_inputCarMemo$current","stockCollectionRef","docQuery","docSnap","fobHistoryValue","keywordsData","fobHistoryData","changedBy","inputFobValue","imageCount","fobHistory","photos","comfort","safetySystem","interior","exterior","sellingPoints","_inputCarName$current6","_inputRefNum$current7","_inputCarName$current7","_inputRefNum$current8","setIsUpdateSuccessModalOpen","dataDoc","updates","updatedDate","dateAdded","dataWithDateAdded","_inputCarName$current8","_inputRefNum$current9","_inputCarName$current9","_inputRefNum$current10","setIsSuccessModalOpen","_ref62","_x13","_inputStockIDNumber$c9","_inputCarName$current10","_inputCarDesc$current3","_inputFobJpy$current3","_inputFobUsd$current2","_inputRegYear$current2","_inputRegMonth$curren2","_inputRefNum$current11","_inputChassis$current6","_inputModelCode$curre5","_inputEngineCode$curr3","_inputEngineDis$curre6","_inputMileage$current6","_inputNumOfSeats$curr6","_inputDoors$current7","_inputPurchasedPrice$6","_inputFuel$current2","_inputDimensionLength6","_inputDimensionWidth$6","_inputDimensionHeight6","_inputDriveType$curre2","_inputWeight$current6","_inputCarNotes$curren2","_inputCarMemo$current2","_inputFobJpy$current4","calculateCubicMeters","_inputDimensionLength7","_inputDimensionLength8","_inputDimensionWidth$7","_inputDimensionWidth$8","_inputDimensionHeight7","_inputDimensionHeight8","resultFormatted","_inputStockIDNumber$c10","_useState199","_useState200","handleUpdateSuccessModalClose","_ref66","_useState211","_useState212","_textAreaAddMake$curr","_textAreaAddMake$curr2","_textAreaAddMake$curr3","Number","outlineStyle","_textAreaAddPort$curr","textAreaValue","line","charAt","join","_textAreaAddPortCode$","_textAreaAddPortCode$2","_textAreaAddPortCode$3","_textAreaAddSales$cur","_textAreaAddSalesCode","_textAreaAddSalesCode2","_textAreaAddSalesCode3","_textAreaAddBuyer$cur","_inputRefNum$current12","_inputRefNum$current13","_inputRefNum$current14","_inputChassis$current7","_inputChassis$current8","_inputChassis$current9","_inputModelCode$curre6","_inputModelCode$curre7","_inputModelCode$curre8","_inputEngineCode$curr4","_inputEngineCode$curr5","_inputEngineCode$curr6","InputGroup","InputRightAddon","_textAreaAddTransmiss","_textAreaAddExteriorC","_textAreaAddFuel$curr","dotIndex","editable","_textAreaAddDriveType","_textAreaAddBodyType$","borderTopColor","_textAreaAddExpenseNa","_textAreaAddPaidTo$cu","_useState203","_useState204","featuresModalVisible","setFeaturesModalVisible","_useState205","_useState206","featuresClearModalVisible","_useState207","_useState208","setKey","handleModalSelectFeaturesClose","pressDuration","InputLeftAddon","_ref63","_useState201","_useState202","modalClearVisible","setModalClearVisible","handleModalClearOpen","handleModalClearClose","_ref64","_useState209","_useState210","modalUploadVisible","setModalUploadVisible","handleModalUploadClose","globalLastVisible","globalMessagesLastVisible","globalSearchText","globalCustomerId","globalImageUrl","globalCustomerFirstName","globalCustomerLastName","globalAdditionalPriceArray","globalMessageTemplateSelectedTitle","formattedIssuingDate","formattedDueDate","transactionModalTitle","transactionModalContentValue","ip","ipCountry","globalInvoiceVariable","carData","cfs","placeOfDelivery","departureCountry","departurePort","salesPerson","discharge","country","consignee","sameAsBuyer","address","contactNumber","fax","notifyParty","sameAsConsignee","paymentDetails","incoterms","inspectionIsChecked","inspectionName","warrantyIsCheck","warrantyAmount","freightPrice","insurancePrice","inspectionPrice","additionalName","additionalPrice","bankInformations","dueDate","issuingDate","bankAccount","paymentTerms","salesAgreement","mobileViewBreakpoint","globalSelectedPDFUrl","globalSelectedFileType","encryptDataAPI","secretKey","AES","encrypt","encryptData","decryptData","ciphertext","decrypt","enc","Utf8","TimelineStatus","selectedChatData","stepIndicator","Tooltip","tintColor","statusData","HeaderButton","isActive","headerCount","activeStyle","setIsHovered","onHoverIn","onHoverOut","marginVertical","FilterButton","iconActive","iconNotActive","SkeletonChatListLayout","subIndex","DeleteMessageTemplateYesNo","handleDeleteMessageTemplateClose","deleteMessageTemplateVisible","selectedTitle","isDeleteLoading","setIsDeleteLoading","handleClose","deleteMessageTemplate","titleToDelete","updatedTemplates","messageTemplate","template","Group","MessageTemplateItem","setOriginalTitle","titleInputRef","addVisible","valueInputRef","setAddVisible","textInputRef","setPopoverOpen","isTemplateItemHovered","setIsTemplateItemHovered","isTemplateMenuHovered","setIsTemplateMenuHovered","isTemplateEditHovered","setIsTemplateEditHovered","isTemplateDeleteHovered","setIsTemplateDeleteHovered","templateMenuOpen","setTemplateMenuOpen","setIsAddVisible","setMessageTextInputValue","numberOfLines","ellipsizeMode","focus","onEditPress","setDeleteMessageTemplateVisible","MessageTemplate","isTemplateHovered","setIsTemplateHovered","isAddHovered","setIsAddHovered","popoverOpen","setSearchText","isCancelHovered","setIsCancelHovered","isSaveHovered","setIsSaveHovered","originalTitle","saveLoading","setSaveLoading","templateData","setTemplateData","searchInputRef","saveMessageTemplate","_titleInputRef$curren","_valueInputRef$curren","messageTemplates","newTitle","handleCancelPressed","arrayFieldData","titleA","titleB","pressed","Arrow","TextInput","underlineColorAndroid","marginHorizontal","animating","textDecorationLine","FlatList","borderBottomLeftRadius","FileDisplay","onRemove","cover","MessageTextInput","handleSendMessage","inputHeight","setInputHeight","messageTextInputValue","updatedHeight","max","scrollHeight","onContentSizeChange","_event$nativeEvent$co","nativeEvent","contentSize","onKeyPress","key","shiftKey","preventDefault","ChatInputText","activeChatId","isSendHovered","setIsSendHovered","selectedFile","setSelectedFile","selectedFilePreview","setSelectedFilePreview","selectedImage","setSelectedImage","imageUri","setImageUri","fileUri","setFileUri","setFileName","isSendImageHovered","setIsSendImageHovered","isSendAttachmentHovered","setIsSendAttachmentHovered","sendIsLoading","setSendIsLoading","removeImage","removeFile","selectFile","maxFileSize","Platform","OS","reject","onchange","alert","onerror","readAsDataURL","click","fileSize","selectedImageUri","selectImage","dataUrl","addFileMessage","_textInputRef$current","formattedTimeForFile","inputValue","fileUrl","fileRef","uploadResult","sender","url","lastMessageSender","lastMessage","lastMessageDate","customerRead","read","readBy","addImageMessage","_textInputRef$current2","imageUrl","resizedImage","File","lastModified","Date","now","addMessage","_ref20","CancelledView","ChatListItem","onPressNewTab","messageUnread","formattedDate","chatListData","setImageUrl","textFirst","setTextFirst","textLast","setTextLast","isUnreadHovered","setIsUnreadHovered","isOpenNewTabHovered","setIsOpenNewTabHovered","setCustomerData","vehicle","updateChatToUnread","setActiveChatId","setChatMessagesData","setSelectedChatData","carId","docId","participants","customer","loadingCondition","chatStepIconOn","chatStepIconOff","borderRightColor","borderRightWidth","setCarImageUrl","isCancelled","paddingRight","invoiceNumber","openDelay","ChatList","unreadButtonValue","activeButtonValue","selectedCustomerData","chatListLastVisible","loadMoreLoading","noMoreData","chatId","useParams","updateChatToRead","decodedChatId","decodeURIComponent","parts","stockIdPart","emailPart","_selectedChatData$par","docRefVehicle","unsubscribeVehicle","setSelectedVehicleData","setSelectedCustomerData","setChatMessageBoxLoading","messagesRef","messagesQuery","unsubscribeDoc","dataWithId","invoiceDocRef","unsubscribeInvoice","invoiceDocSnapshot","invoiceDataWithId","setInvoiceData","unsubscribeMessages","messages","fetchChatMessages","decryptedChatId","handleChatPress","_ref25","customerId","encryptedChatId","encodedChatId","encodeURIComponent","handleChatPressNewTab","_ref26","fullPath","location","origin","pathname","open","_ref27","formattedTimestamp","givenDate","currentFormattedDate","getFullYear","getMonth","getDate","getTime","startOfWeek","setDate","getDay","setHours","toLocaleDateString","weekday","formatDate","initialNumToRender","maxToRenderPerBatch","windowSize","onEndReachedThreshold","removeClippedSubviews","ListFooterComponent","onEndReached","nextQuery","setLoadMoreLoading","setNoMoreData","chatsData","setChatListData","SearchChat","clearVisible","setClearVisible","_searchInputRef$curre","_objectDestructuringEmpty","searchValue","setChatListSearchText","_searchInputRef$curre2","hovered","ModalAddBank","modalAddBankVisible","setModalAddBankVisible","setCancelHovered","setAddHovered","handleModalAddBankClose","bankNameRef","branchNameRef","swiftcodeRef","addressRef","accountHolderRef","accountNumberRef","addBankAccount","_bankNameRef$current","_branchNameRef$curren","_swiftcodeRef$current","_addressRef$current","_accountHolderRef$cur","_accountNumberRef$cur","bankNameValue","elementToAdd","bankName","branchName","swiftCode","accountHolder","accountNumberValue","BankInformation","invoiceData","selectedDueDate","setSelectedDueDate","bankAccountsData","setBankAccountsData","selectedBank","setSelectedBank","paymentTermsRef","_paymentTermsRef$curr","dayOfWeek","adjustedDate","toISOString","bankAccounts","entries","_ref33","_ref34","subscribeToBankAccounts","_ref35","selectedBankName","selectedBankObj","PaymentDetails","fobPriceInput","freightInput","inspectionInput","insuranceInput","totalAmountCalculated","setTotalAmountCalculated","insurance","selectedIncoterms","setSelectedIncoterms","inspection","setInspectionIsChecked","warranty","warrantyIsChecked","additionalNameRef","warrantyPrice","additionalPriceRef","safelyParseNumber","number","calculateTotalAmount","_fobPriceInput$curren","_freightInput$current","_inspectionInput$curr","_insuranceInput$curre","freight","additionalPricesTotal","sum","total","round","_fobPriceInput$curren2","_freightInput$current2","_insuranceInput$curre2","freightCalculation","m3","fobPriceDollars","currency","usdToJpy","Checkbox","isChecked","filteredText","lines","filteredLines","filteredLine","SelectPortOfDischarge","countriesDischarge","portsData","setPortsData","nearestPorts","setNearestPorts","selectedPortCountry","setSelectedPortCountry","selectedCountry","selectedPort","setSelectedPort","fetchPorts","sortedPorts","portName","sortOrder","fetchPortsData","selectedCountryData","SelectSalesPerson","selectedSales","setSelectedSales","SelectPortOfDeparture","NotifyPartyInput","accountData","setAccountData","setIsChecked","notifyPartyName","notifyPartyAddress","notifyPartyCity","notifyPartyCountry","notifyPartyContactNumber","notifyPartyFax","notifyPartyEmail","_notifyPartyName$curr","_notifyPartyAddress$c","_notifyPartyCity$curr","_notifyPartyCountry$c","_notifyPartyContactNu","_notifyPartyFax$curre","_notifyPartyEmail$cur","city","ConsigneeInput","consigneeName","consigneeAddress","consigneeCity","consigneeCountry","consigneeContactNumber","consigneeFax","consigneeEmail","fetchAccountData","textStreet","textZip","textPhoneNumber","textEmail","ConfirmPaymentModalContent","historyModalVisible","setHistoryModalVisible","isConfirmLoading","setIsConfirmLoading","totalAmountString","totalAmountNumber","inputAmountRef","fullPaymentMessage","_ref42","messageType","overBalanceMessage","_ref43","paymentMessage","transactionDate","confirmPayment","amountNeeded","totalValue","docRefCustomer","newPayments","newPaymentsAccount","vehicleRef","vehicleName","inputAmount","numericInputAmount","formattedInputAmount","ms","overBalance","increment","payments","paymentsHistory","setTransactionModalVisible","cleanedDateString","padStart","hours","getHours","ampm","getMinutes","payment","displayedAmount","fontWefight","Progress","shadow","_filledTrack","underline","handleHistoryModalClose","sortedPayments","dateA","IssueProformaInvoiceModalContent","isConfirmHovered","cfsInputRef","placeOfDeliveryInputRef","invoiceMessage","confirmInvoice","yearSuffix","maxNumber","substring","docRefChatId","hashedData","hash","HmacSHA256","Hex","createHmacSha256Hash","updateDocRef","customerEmail","cryptoNumber","_cfsInputRef$current","_placeOfDeliveryInput","ProfitCalculator","totalSCCAmount","setTotalSCCAmount","formattedTotalSCCAmount","setFormattedTotalSCCAmount","totalProfitAmountDollars","setTotalProfitAmountDollars","inputPriceRef","lastFetchedPort","setLastFetchedPort","currentPort","freightOrigPrice","_data$currentPort","kobePrice","nagoyaPrice","yokohamaPrice","kyushuPrice","fee","formattedPurchasedPrice","minimumFractionDigits","maximumFractionDigits","auctionFee","formattedAuctionFee","transportFee","formattedTransportFee","shippingAgentFee","formattedShippingAgentFee","cubicMeter","costPerCubicMeter","formattedCostPerCubicMeter","totalCubicMeterCostDollars","formattedTotalCubicMeterCostDollars","totalCubicMeterCostYen","formattedTotalCubicMeterCostYen","realTotalPriceYen","formattedRealTotalPriceYen","realTotalPriceDollars","formattedRealTotalPriceDollars","totalPriceCalculation","defaultInputPrice","_inputPriceRef$curren","inputPrice","totalAmountDollars","GenerateCustomInvoice","additionalPriceLocal","additionalNameLocal","invoiceNameExtension","divideInvoice","customInvoiceVisible","invoiceRef","qrCodeRef","capturedImageUri","setCapturedImageUri","setInvoiceNumber","invoiceViewKey","issuingDateRef","setIssuingDate","dueDateRef","setDueDate","shippedFromRef","shippedFrom","setShippedFrom","shippedToRef","shippedTo","setShippedTo","placeOfDeliveryRef","setPlaceOfDelivery","cfsRef","setCfs","consigneeNameRef","setConsigneeName","consigneeAddressRef","setConsigneeAddress","consigneeEmailRef","setConsigneeEmail","consigneeContactRef","consigneeContact","setConsigneeContact","consigneeFaxRef","setConsigneeFax","notifyPartyNameRef","setNotifyPartyName","notifyPartyAddressRef","setNotifyPartyAddress","notifyPartyEmailRef","setNotifyPartyEmail","notifyPartyContactRef","notifyPartyContact","setNotifyPartyContact","notifyPartyFaxRef","setNotifyPartyFax","carNameRef","setCarName","specificationsRef","specifications","setSpecifications","itemNoteRef","itemNote","setItemNote","fobTextRef","fobText","setFobText","fobPriceRef","_useState213","_useState214","setFobPrice","freightTextRef","_useState215","_useState216","freightText","setFreightText","freightPriceRef","_useState217","_useState218","setFreightPrice","inspectionTextRef","_useState219","_useState220","inspectionText","setInspectionText","inspectionPriceRef","_useState221","_useState222","setInspectionPrice","totalPriceRef","_useState223","_useState224","totalPrice","setTotalPrice","_useState225","_useState226","setAdditionalName","_useState227","_useState228","setAdditionalPrice","dividedByRef","_useState229","_useState230","dividedBy","setDividedBy","captureImage","_ref50","captureRef","quality","createPDF","imageData","html2canvas","toDataURL","pdf","jsPDF","orientation","unit","imgProps","getImageProperties","pdfHeightFit","addImage","imageCompression","imageQuality","save","handleCaptureAndCreatePDF","handleAdditionalNameTextChange","handleAdditionalPriceTextChange","i","issuingDateString","dueDateString","issuingDateObject","dueDateObject","handleFreightTextChange","handleInspectionTextChange","handleFobTextChange","handleDividedByTextChange","setCustomInvoiceVisible","setPreviewInvoiceVisible","QRCode","useGrouping","price","PreviewInvoice","previewInvoiceVisible","_useState231","_useState232","isPreviewHovered","setIsPreviewHovered","_useState233","_useState234","_useState235","_useState236","_useState237","_useState238","_useState239","_useState240","_useState241","_useState242","setFeaturesTrueCount","_useState243","_useState244","rerenderState","setRerenderState","_useState245","_useState246","imagePreviewKey","captureImageAsync","trueCount","count","field","countTrueValuesInCarData","_ref56","formData","qrCodeData","buyerName","buyerAddress","buyerEmail","buyerContact","buyerFax","notifyName","notifyAddress","notifyEmail","notifyContact","notifyFax","swiftcode","bankAddress","nameOfAccountHolder","accountNumber","fobAmount","freightAmount","inspectionAmount","usedVehicle","displacement","post","responseType","Blob","fileURL","write","RNImage","ReopenTransaction","_useState247","_useState248","_useState249","_useState250","isModalVisible","setIsModalVisible","_useState251","_useState252","isYesHovered","setIsYesHovered","_useState253","_useState254","isNoHovered","setIsNoHovered","_useState255","_useState256","handleModalClose","reopenTransactionMessage","_ref58","handleReopenTransaction","_ref59","CancelTransaction","_useState257","_useState258","_useState259","_useState260","_useState261","_useState262","_useState263","_useState264","_useState265","_useState266","sendEmail","_ref60","subject","htmlContent","cancelTransactionMessage","_ref61","handleCancelTransaction","formattedTimeEmail","ExtendDueDateButton","_useState267","_useState268","_useState269","_useState270","setIsConfirmHovered","_useState271","_useState272","_useState273","_useState274","_useState275","_useState276","_useState277","_useState278","handleConfirm","confirmExtendDueDate","extendDueDateMessage","_ref65","_useState279","_useState280","TransactionModal","transactionModalVisible","TransactionButton","_ref68","buttonValue","transactionValue","colorHoverIn","colorHoverOut","_useState281","_useState282","TransactionList","_ref69","displayedTransactions","isArray","transactions","transaction","_useState283","_useState284","stockId","onMouseEnter","onMouseLeave","TransactionHistoryModal","_useState285","_useState286","transactionHistoryVisible","setTransactionHistoryVisible","_useState287","_useState288","setDisplayedTransactions","_useState289","_useState290","loadingMore","setLoadingMore","_useState291","_useState292","onScroll","_ref71","_ref70","layoutMeasurement","contentOffset","isCloseToBottom","nextItems","loadMorePayments","scrollEventThrottle","PaymentHistoryModal","_useState293","_useState294","paymentHistoryVisible","setPaymentHistoryVisible","_useState295","_useState296","displayedPayments","setDisplayedPayments","_useState297","_useState298","_ref73","_ref72","CustomerProfileModal","_useState299","_useState300","customerModalVisible","setCustomerModalVisible","totalPaymentValue","background","Hyperlink","linkDefault","linkStyle","ChatMessageHeader","chatMessagesData","selectedVehicleData","carImageUrl","_useState301","_useState302","reRenderKey","setReRenderKey","freightPriceYen","reservedTo","FontAwesome5","ReadByListModal","_ref74","userEmail","handleReadByListModalClose","readByListModalVisible","flexWrap","ImagePreviewModal","_ref75","isVisible","HoverablePressable","_ref76","_useState303","printComponent","_useState304","isHoveredDownload","setIsHoveredDownload","_useState305","_useState306","Linking","openURL","DocumentPreviewModal","selectedFileUrl","pdfViewerModalVisible","_useState307","_useState308","iframeKey","setIframeKey","_useState309","_useState310","setLoading","handleIframeLoad","printIframe","printWindow","print","timeout","setSelectedFileUrl","clearTimeout","setPdfViewerModalVisible","onLoad","ChatMessageBox","_ref78","loadMoreMessagesLoading","noMoreMessagesData","_useState311","_useState312","isEyeHovered","setIsEyeHovered","flatListRef","_useState313","_useState314","hoveredImageIndex","setHoveredImageIndex","_useState315","_useState316","selectedImageIndex","setSelectedImageIndex","_useState317","_useState318","isPreviewVisible","setIsPreviewVisible","useLocation","handlePopState","handleImageMessageMouseLeave","_useState319","_useState320","handleReadByListModalOpen","setReadByListModalVisible","animatedValue","Animated","Value","loop","sequence","timing","toValue","useNativeDriver","start","interpolate","inputRange","outputRange","handleLoadMoreMessages","_ref79","setLoadMoreMessagesLoading","setNoMoreMessagesData","_ref80","handlePreviewInvoiceModalOpen","match","formattedHours","amPm","substr","extractUsernameFromEmail","_email$split","renderItemText","isGlobalCustomerSender","urlPattern","RegExp","segments","segment","segmentWithBreaks","str","n","insertBreaks","isUrlForText","canOpenURL","supported","getFileIcon","iconSize","lowerFileName","endsWith","_ref81","isLastMessage","textFontSize","handleImageMessageMouseEnter","openPreview","absoluteFillObject","inverted","ReservedStatusViewForHeader","CancelledViewForHeader","_useState321","_useState322","chatMessageBoxLoading","chatListSearchText","_useState323","_useState324","_useState325","_useState326","activeButton","setActiveButton","_useState327","_useState328","setActiveButtonValue","_useState329","_useState330","activeFilterButton","setActiveFilterButton","_useState331","_useState332","setUnreadButtonValue","_useState333","_useState334","readButtonValue","setReadButtonValue","_useState335","_useState336","_useState337","_useState338","unreadCount","setUnreadCount","_useState339","_useState340","setScreenWidth","updateWidth","fetchIpAndCountry","_ref82","fetchedIp","fetchedIpCountry","country_name","unrepliedQuery","handlePress","buttonTitle","buttonTitleValue","queryRef","buildQuery","_projectControlAuth$c","_ref83","slideAnim","easing","Easing","bezier","_ref84","_useState341","_useState342","horizontal","minWidth","prevState","transform","translateX","defaultSelectedButton","selectedPortForCountry","SearchablePortDropdown","setQuery","isDropdownVisible","setIsDropdownVisible","searchRef","formattedData","ports","collectionName","FreightNavigation","selectedButtonState","setSelectedButtonState","button","setSelectedButton","SelectMethod","portCode","selectedMethod","setSelectedMethod","methodData","toast","useToast","updatePortMethod","methodField","render","formattedPortCode","TouchableHighlight","underlayColor","SelectInspectionIsRequired","countryCode","selectedInspectionIsRequired","setSelectedInspectionIsRequired","inspectionIsRequiredData","updateCountryInspection","inspectionIsRequiredField","formattedCountryCode","countryData","inspectionIsRequired","SelectInspectionName","selectedInspectionName","setSelectedInspectionName","inspectionNameData","updateCountryInspectionName","inspectionNameField","addPort","newCountryData","addCountry","countryName","_x14","AddCountryModal","handleAddCountryModalClose","addCountryModalVisible","inputCountryText","addButtonLoading","setAddButtonLoading","handleAddButton","_inputCountryText$cur","_inputCountryText$cur2","setAddCountryModalVisible","inputRef","filteredValue","filterInput","borderBottomRightRadius","NavigatePage","selectedButton","CountriesTable","PortsTable","AddPortsForCountriesModal","handleAddPortsForCountriesModalClose","addPortsForCountriesModalVisible","handleAddPortsForCountriesModalOpen","countryPortsData","setAddPortsForCountriesModalVisible","addPortForCountryField","nearestPortsField","_docSnap$data$formatt","_x15","updateCountryPortsField","_x16","DeleteCountryModal","handleDeleteCountryModalClose","deleteCountryModalVisible","buttonLoading","setButtonLoading","handleDeleteCountry","formattedFieldCode","deleteField","inputSearchRef","inputSortOrder","textAreaAddInspectionIsRequired","textAreaAddInspectionName","_inputSearchRef$curre","handleAddCountryModalOpen","setCountryPortsData","updateCountrySortOrder","sortOrderField","_x17","_x18","_x19","handleSortOrderTextChange","handleDeleteCountryModalOpen","setDeleteCountryModalVisible","handleUpdateInsurance","insuranceField","_x20","_x21","_x22","returnKeyType","autoCapitalize","_textAreaAddInspectio4","_textAreaAddInspectio3","borderTopLeftRadius","borderTopRightRadius","BouncyCheckbox","fillColor","unfillColor","innerIconStyle","textStyle","fontFamily","AddPortModal","handleAddPortModalClose","addPortModalVisible","inputPortText","_inputPortText$curren","_inputCountryText$cur3","_inputCountryText$cur4","_inputPortText$curren2","_inputCountryText$cur5","setAddPortModalVisible","DeletePortModal","handleDeletePortModalClose","deletePortModalVisible","handleDeletePort","textAreaAddMethod","inputProfitPrice","inputNagoyaPrice","inputYokohamaPrice","inputKyushuPrice","inputKobePrice","inputMemo","handleProfitPriceTextChange","updatePortsField","_x23","_x24","_x25","_x26","_x27","_inputSearchRef$curre2","profitPrice","handleAddPortModalOpen","handleDeletePortModalOpen","setDeletePortModalVisible","_textAreaAddMethod$cu","Freight","_x28","keyboardShouldPersistTaps","NamePopover","MobileViewDrawer","LogsTable","logsData","setLogsData","handleNextPage","handlePreviousPage","CurrencyConverterComponent","successModalVisible","setSuccessModalVisible","todayCurrency","setTodayCurrency","timestampCurrency","setTimestampCurrency","setExchangeRate","setLastUpdate","CurrencyConverter","rates","JPY","JpyToUsd","yenToDollar","dollarToYen","usdToEur","EUR","eurToUsd","usdToGbp","GBP","gbpToUsd","usdToAud","AUD","audToUsd","usdToCad","CAD","cadToUsd","yenToEuro","euroToYen","yenToGbp","gbpToYen","yenToAud","audToYen","yenToCad","cadToYen","lastUpdateDate","formattedLastUpdate","hour","minute","second","timeZoneName","newTodayCurrency","currencyRef","jpyToEur","eurToJpy","jpyToGbp","gbpToJpy","jpyToAud","audToJpy","jpyToCad","cadToJpy","logDataCurrency","handleCloseCurrencyModal","handleCloseSuccessModal","MyBarChart","VictoryChart","theme","VictoryTheme","material","domainPadding","parent","VictoryAxis","axis","stroke","ticks","tickLabels","fill","dependentAxis","VictoryBar","datum","barRatio","Logs","cameraContainer","translateY","cameraView","webcamRef","qrCode","setQrCode","isScanning","setIsScanning","intervalId","setInterval","video","videoWidth","videoHeight","getImageData","jsQR","clearInterval","fetchInvoiceData","smallWidth","smallHeight","smallWidthScaleFactor","smallHeightScaleFactor","Webcam","videoConstraints","facingMode","setIsOpen","useNavigation","handleOpen","handleToggleLogs","handleToggleAddAccount","handleToggleAccountList","handleToggleAddVehicle","handleVehicleList","handleFreight","handleChatMessages","slideAnimation","inOut","ease","onPressOut","onHover","setOnHover","globalCurrentSupplyChainCostsData","globalCurrentStockID","globalSelectedVehicle","globalSelectedVehicleReferenceNumber","globalSelectedCarName","SelectStockStatus","selectedStockStatusValue","setSelectedStockStatusValue","handleSaveStockStatus","stockStatusHistoryData","vehicleProductRef","stockStatusHistory","ImageUploadModal","handleUploadImagesModalClose","handleUploadImages","uploadImagesModalVisible","uploadImagesButtonLoading","UploadImagesModal","fetchImageCounts","setUploadImagesModalVisible","setUploadImagesButtonLoading","closeAll","handleModalSupplyChainsCostsOpen","setVehicleListSupplyChainsCostsData","AllSccModals","vehicleListSupplyChainsCostsData","expenseViewRef","handleSaveSupplyChainsCosts","SCC_Modals","VehicleEditModal","handleEditModalClose","editVehicleModalVisible","EditVehicleModal","setEditVehicleModalVisible","ViewImagesModal","handleViewImagesModalClose","viewImagesModalVisible","viewImagesData","FobPriceHistoryModal","handleFobPriceHistoryClose","fobPriceHistoryModalVisible","FobPriceHistory","setFobPriceHistoryModalVisible","ImageCountComponent","handleViewImagesModalOpen","handleUploadImagesModalOpen","setImageCount","FobPriceInput","formatValueWithCommas","handleSaveFob","fobValue","handleTextChange","VehicleListTable","vehicleListData","setStockIDs","setImageCounts","sortField","setSortField","isSortActive","setIsSortActive","handleSortChange","fetchWithSort","fieldToSortBy","sortDirection","vehicleProductData","setVehicleListData","_ref41","sanitizedSearchQuery","ids","counts","getImageCountInFolder","imageCountsObject","acc","folderPath","folderRef","handleFobPriceHistoryOpen","setFobHistoryData","setViewImagesModalVisible","setViewImagesData","handleSearchEnter","vehicleProductsRef","VehicleList","UsePagination","messageTextInputValueSlice","createSlice","initialState","reducers","action","payload","carImageUrlSlice","selectedFileUrlSlice","pdfViewerModalVisibleSlice","selectedVehicleDataSlice","selectedCustomerDataSlice","previewInvoiceVisibleSlice","customInvoiceVisibleSlice","transactionModalVisibleSlice","invoiceDataSlice","deleteMessageTemplateVisibleSlice","loadMoreMessagesLoadingSlice","noMoreMessagesDataSlice","readByListModalVisibleSlice","selectedChatDataSlice","chatMessageBoxLoadingSlice","chatMessagesDataSlice","chatListSearchTextSlice","activeChatIdSlice","loadMoreLoadingSlice","noMoreDataSlice","chatListLastVisibleSlice","setChatListLastVisible","chatListDataSlice","chatListImageUrlSlice","setChatListImageUrl","countryPortsDataSlice","addPortsForCountriesModalVisibleSlice","methodDataSlice","setMethodData","inspectionIsRequiredDataSlice","setInspectionIsRequiredData","inspectionNameDataSlice","setInspectionNameData","deletePortModalVisibleSlice","deleteCountryModalVisibleSlice","addPortModalVisibleSlice","addCountryModalVisibleSlice","selectedButtonSlice","freightCountriesDataSlice","setFreightCountriesData","freightPortsDataSlice","setFreightPortsData","fobHistoryDataSlice","inputFobSlice","setInputFob","fobPriceHistoryModalVisibleSlice","editVehicleModalVisibleSlice","vehicleListDataSlice","addVehicleListDataSlice","setAddVehicleListData","supplyChainsCostsModalVisibleSlice","uploadImagesModalVisibleSlice","vehicleListSupplyChainsCostsDataSlice","uploadImagesButtonLoadingSlice","viewImagesModalVisibleSlice","viewImagesDataSlice","lastVisibleSlice","accountListDataSlice","logsDataSlice","stockStatusDataSlice","setStockStatusData","isSuccessModalOpenSlice","isUpdateSuccessModalOpenSlice","loadingModalVisibleSlice","selectedExpenseNameSlice","selectedPaidToSlice","supplyChainsCostsDataSlice","currentDateSlice","setCurrentDate","loginEmailSlice","setLoginEmail","loginAccountTypeSlice","loginNameSlice","modalDeleteImagesVisibleSlice","addAnotherImagesSlice","isAddPhotoVisibleSlice","jpyToUsdSlice","setJpyToUsd","usdToJpySlice","setUsdToJpy","modelDataSlice","makeDataSlice","setMakeData","expenseNameDataSlice","setExpenseNameData","paidToDataSlice","setPaidToData","selectedMakeSlice","setSelectedMake","isLoadingSlice","selectedImagesSlice","portDataSlice","setPortData","transmissionDataSlice","setTransmissionData","fuelDataSlice","setFuelData","buyerDataSlice","setBuyerData","salesDataSlice","setSalesData","driveTypeDataSlice","setDriveTypeData","bodyTypeDataSlice","setBodyTypeData","exteriorColorDataSlice","setExteriorColorData","currentYearSlice","setCurrentYear","deleteImageVisibleSlice","actions","configureStore","reducer","chatListImageUrl","freightPortsData","freightCountriesData","inputFob","addVehicleListData","accountListData","selectedMake","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","fetchCurrency","_snapshot$data","_snapshot$data2","fetchExpenseNameData","_snapshot$data3","fetchPaidToData","_snapshot$data4","paidTo","fetchMakeData","_snapshot$data5","fetchPortData","_snapshot$data6","fetchTransmissionData","_snapshot$data7","fetchFuelData","_snapshot$data8","fetchBuyerData","_snapshot$data9","fetchSalesData","_snapshot$data10","fetchDriveTypeData","_snapshot$data11","fetchBodyTypeData","_snapshot$data12","fetchExteriorColorData","_snapshot$data13","fetchYear","fetchCurrentDate","fetchVehicleListData","fetchMethodData","_snapshot$data14","fetchInspectionIsRequiredData","_snapshot$data15","fetchInspectionNameData","_snapshot$data16","fetchChatListData","projectControlFirebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","projectExtensionAuth","app","getAnalytics","firebaseAppForCreateUser","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","notFulfilled","Infinity","fulfilled","j","r","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","setAttribute","onScriptComplete","prev","doneFns","parentNode","removeChild","bind","appendChild","Symbol","toStringTag","nmd","paths","p","installedChunks","installedChunkData","promise","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}