{"version":3,"file":"static/js/main.4cfd384d.js","mappings":"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","sources":["assets/chat_step|sync|/^/chat_step_.*_off/.png$","assets/chat_step|sync|/^/chat_step_.*_on/.png$","components/LoginPage.js","components/DevAdminComponents/Lazy Screen/LazyScreen.js","components/DevAdminComponents/ParseCSV.js","components/Top.js","components/Checkpoint.js","components/ResetPassword.js","components/ResetPasswordSuccess.js","App.js","components/DevAdminComponents/AccountList.js","components/DevAdminComponents/AddAccount.js","components/DevAdminComponents/AddVehicle.js","components/DevAdminComponents/ChatMessages.js","components/DevAdminComponents/Freight.js","components/DevAdminComponents/Header/StickyHeader.js","components/DevAdminComponents/Logs.js","components/DevAdminComponents/QrCodeScanner/QrCodeScanner.js","components/DevAdminComponents/SideDrawer/MobileViewDrawer.js","components/DevAdminComponents/SideDrawer/SideDrawer.js","components/DevAdminComponents/VehicleList.js","components/DevAdminComponents/VehicleListComponent/UsePagination.js","components/DevAdminComponents/redux/store.js","crossFirebase.js","firebasecontrol.js","firebasecontrolCreateUser.js","webpack://web/./components/style.css?30b9","node_modules/moment/locale|sync|/^/.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/ensure chunk","webpack/runtime/get javascript chunk filename","webpack/runtime/get mini-css chunk filename","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/load script","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["var map = {\n\t\"./chat_step_1_off.png\": 29413,\n\t\"./chat_step_2_off.png\": 35290,\n\t\"./chat_step_3_off.png\": 38715,\n\t\"./chat_step_4_off.png\": 65256,\n\t\"./chat_step_5_off.png\": 58038,\n\t\"./chat_step_6_off.png\": 49232,\n\t\"./chat_step_7_off.png\": 88618\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 66516;","var map = {\n\t\"./chat_step_1_on.png\": 40027,\n\t\"./chat_step_2_on.png\": 22558,\n\t\"./chat_step_3_on.png\": 80851,\n\t\"./chat_step_4_on.png\": 14740,\n\t\"./chat_step_5_on.png\": 80904,\n\t\"./chat_step_6_on.png\": 81151,\n\t\"./chat_step_7_on.png\": 30443\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 82049;","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition,\r\n  Item,\r\n  Label\r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth, updateDoc } from '../firebasecontrol';\r\nimport { signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  // const navigation = useNavigation();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        // navigation.replace(\"Checkpoint\")\r\n        navigate('/Checkpoint');\r\n\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n      <PresenceTransition visible={errorShow} initial={{\r\n        opacity: 0,\r\n        scale: 0,\r\n      }} animate={{\r\n        opacity: 1,\r\n        scale: 1,\r\n        transition: {\r\n          duration: 200\r\n        }\r\n      }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n        <Alert maxW=\"400\" status=\"error\">\r\n          <VStack space={1} flexShrink={1} w=\"100%\">\r\n            <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                <Alert.Icon />\r\n                <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                  {errorTitle}\r\n                </Text>\r\n              </HStack>\r\n            </HStack>\r\n            <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n              {errorMessage}\r\n            </Box>\r\n          </VStack>\r\n        </Alert>\r\n        {/* </Collapse> */}\r\n      </PresenceTransition>\r\n\r\n    </Box>;\r\n\r\n  };\r\n\r\n  const updateFieldData = async (documentId, fieldName, newValue) => {\r\n    const userRef = doc(db, 'accounts', documentId);\r\n\r\n    try {\r\n      await updateDoc(userRef, {\r\n        [fieldName]: newValue\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating field data:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleSignIn = () => {\r\n    setIsLoading(true);\r\n    setIsDisabled(true);\r\n    setTimeout(() => {\r\n      // Reset loading and disabled state\r\n      setIsLoading(false);\r\n      setIsDisabled(false);\r\n    }, 2000); // Replace with your actual async operation\r\n    setErrorShow(false);\r\n    signInWithEmailAndPassword(auth, email.trim(), password)\r\n      .then((re) => {\r\n        const documentId = email;\r\n        const fieldName = 'pass';\r\n        const newValue = password;\r\n\r\n        updateFieldData(documentId, fieldName, newValue);\r\n        // navigation.navigate('Checkpoint');\r\n        navigate('/Checkpoint');\r\n\r\n\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log(errorCode, errorMessage);\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n        setErrorShow(true);\r\n        if (errorCode === 'auth/user-not-found') {\r\n          console.log('Please use a valid email or check for misspellings.☹️');\r\n          setErrorTitle('Email do not exist!');\r\n          setErrorMessage('Please use an existing email or check for misspellings.☹️');\r\n          <ErrorLoginShow />\r\n        } else if (errorCode === 'auth/wrong-password') {\r\n          console.log('Password is incorrect, please try again. ☹️');\r\n          setErrorTitle('Incorrect password');\r\n          setErrorMessage('Password is incorrect, please try again. ☹️');\r\n          <ErrorLoginShow />\r\n        } else if (errorCode === 'auth/missing-password') {\r\n          console.log('Please enter a password. ☹️');\r\n          setErrorTitle('Password is empty!');\r\n          setErrorMessage('Please enter a password. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n        else if (errorCode === 'auth/invalid-email') {\r\n          console.log('Email is invalid. ☹️');\r\n          setErrorTitle('Invalid email!');\r\n          setErrorMessage('Please enter a valid email. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n        else if (errorCode === 'auth/user-disabled') {\r\n          console.log('User is disabled. ☹️');\r\n          setErrorTitle('Account is disabled!');\r\n          setErrorMessage('Please contact the administrator. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n      })\r\n  };\r\n\r\n  const handleChange = text => setEmail(text);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (email.length > 1) {\r\n      setErrorShow(false)\r\n    }\r\n  }, [email])\r\n\r\n  const handleEmailOnChangeText = (text) => {\r\n    setEmail(text)\r\n    setErrorShow(false)\r\n  };\r\n\r\n  const handlePasswordOnChangeText = text => setPassword(text);\r\n\r\n  useEffect(() => {\r\n    if (password.length > 1) {\r\n      setErrorShow(false)\r\n    }\r\n  }, [password])\r\n\r\n\r\n  // const handleReset = () => {\r\n  //   navigation.navigate('ResetPassword');\r\n  // };\r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n        <ErrorLoginShow />\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n              <Input w={{\r\n                base: \"90%\",\r\n                md: \"90%\",\r\n                sm: \"90%\",\r\n              }} value={email} onSubmitEditing={handleSignIn} onChangeText={handleChange} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\r\n              <Input w={{\r\n                base: \"90%\",\r\n                md: \"90%\",\r\n                sm: \"90%\",\r\n              }} value={password} onSubmitEditing={handleSignIn} onChangeText={handlePasswordOnChangeText} fontSize='16' type={show ? \"text\" : \"password\"} InputRightElement={<Pressable onPress={() => setShow(!show)}>\r\n                <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n              </Pressable>} placeholder=\"Password\" placeholderTextColor='white' color='white' />\r\n              <HStack space={1} justifyContent=\"center\">\r\n                {/* <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                  base: 130,\r\n                  md: 130,\r\n                  sm: 130,\r\n                }} onPress={handleReset}><Text style={{ color: 'white', }}>Reset Password</Text></Button> */}\r\n                <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                  base: 130,\r\n                  md: 130,\r\n                  sm: 130,\r\n                }} onPress={handleSignIn} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Login</Text>}</Button>\r\n\r\n              </HStack>\r\n\r\n            </Stack>\r\n\r\n          </Center>\r\n\r\n\r\n        </Center>\r\n\r\n\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { lazy, Suspense } from 'react';\r\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\r\nimport { Box, Center, Stack, HStack, Spinner, Image } from 'native-base';\r\nconst logo = require('../../../assets/RMJ C-Hub 制御ハブ.png');\r\n// Create a loading component to display while the screen is loading\r\nconst Loading = () => (\r\n\r\n\r\n  <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n\r\n    <Center flex={1}>\r\n      <Center px=\"3\">\r\n        <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n          <Image source={{\r\n            uri: logo\r\n          }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n        </Box>\r\n        {/* <LoginForm /> */}\r\n\r\n        <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n          <HStack space={1} justifyContent=\"center\">\r\n            <Spinner color='white' size='lg' />\r\n          </HStack>\r\n        </Stack>\r\n\r\n      </Center>\r\n\r\n\r\n    </Center>\r\n\r\n\r\n  </Box>\r\n);\r\n\r\nconst LazyScreen = (props) => {\r\n  // Dynamically import the component using React.lazy\r\n  const LazyComponent = lazy(props.importFunc);\r\n\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <LazyComponent {...props} />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default LazyScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, View, Text, FlatList } from 'react-native';\r\nimport Papa from 'papaparse';\r\nimport Encoding from 'encoding-japanese';\r\n\r\n\r\n\r\n\r\nconst data = [\r\n    {\r\n        \"仕入No.\": 2024030011,\r\n        \"排気量\": 1400,\r\n    },\r\n    // {\r\n    //     \"仕入No.\": 2024030011,\r\n    //     \"状況\": \"在庫\",\r\n    //     \"車名\": \"ベルタ\",\r\n    //     \"グレード\": \"1.3G 1.3G\",\r\n    //     \"色\": \"Silver\",\r\n    //     \"型式\": \"DBA-SCP92\",\r\n    //     \"年式\": \"H18/09\",\r\n    //     \"ボディ形状\": \"ｾﾀﾞﾝ\",\r\n    //     \"排気量\": 1300,\r\n    //     \"ミッション\": null,\r\n    //     \"エンジン区分\": \"ガソリン\",\r\n    //     \"車台番号\": \"SCP92-1022093\",\r\n    //     \"装備\": \"Anti-Lock Brakes・Driver Airbag・Passenger Airbag・A/C:front・Power Steering・Power Windows・Rear Window Defroster・AM/FM Radio・AM/FM Stereo・CD Player・Premium Sound・Alloy Wheels・Power Door Locks・Power Mirrors・No accidents・Non-smoker\",\r\n    //     \"車輌用途\": null,\r\n    //     \"車検\": null,\r\n    //     \"走行距離\": 57817,\r\n    //     \"長さ\": 4300,\r\n    //     \"幅\": 1690,\r\n    //     \"高さ \": 1460,\r\n    //     \"仕入日\": \"04/03/2024\",\r\n    //     \"仕入区分\": \"ＡＡ\",\r\n    //     \"仕入先\": \"TAA兵庫\",\r\n    //     \"仕入担当\": \"北村祐亮\",\r\n    //     \"仕入店舗\": \"書類未入庫\",\r\n    //     \"仕入価格(税込)\": 235400,\r\n    //     \"仕入価格(税抜)\": 214000,\r\n    //     \"経費計\": 15950,\r\n    //     \"加修費計\": 0,\r\n    //     \"輸出検査料\": 0,\r\n    //     \"課税仕入額\": 228500,\r\n    //     \"消費税額\": 22850, \r\n    //     \"仕入合計金額\": 251350,\r\n    //     \"自動車税\": 0,\r\n    //     \"リサイクル料\": 10280,\r\n    //     \"展示場所\": \"輸出(神戸）\",\r\n    //     \"販売担当\": \"y.kitamura\",\r\n    // },\r\n    // {\r\n    //     \"仕入No.\": 2024030019,\r\n    //     \"状況\": \"在庫\",\r\n    //     \"車名\": \"カローラアクシオ\",\r\n    //     \"グレード\": \"G 1.5 G\",\r\n    //     \"色\": \"Gold\",\r\n    //     \"型式\": \"DBA-NZE141\",\r\n    //     \"年式\": \"H23/07\",\r\n    //     \"ボディ形状\": \"ｾﾀﾞﾝ\",\r\n    //     \"排気量\": 1500,\r\n    //     \"ミッション\": null,\r\n    //     \"エンジン区分\": \"ガソリン\",\r\n    //     \"車台番号\": \"NZE141-3003061\",\r\n    //     \"装備\": \"Anti-Lock Brakes・Driver Airbag・Passenger Airbag・A/C:front・Navigation System・Power Steering・Remote Keyless Entry・Power Windows・Rear Window Defroster・AM/FM Radio・AM/FM Stereo・CD Player・Premium Sound・Power Door Locks・Power Mirrors・No accidents・One owner・Non-smoker\", \"車輌用途\": null, \"車検\": null, \"走行距離\": 9851, \"長さ\": 4410, \"幅\": 1695, \"高さ \": 1460,\r\n    //     \"仕入日\": \"04/03/2024\",\r\n    //     \"仕入区分\": \"ＡＡ\",\r\n    //     \"仕入先\": \"JU東京\",\r\n    //     \"仕入担当\": \"森川\",\r\n    //     \"仕入店舗\": \"書類未入庫\",\r\n    //     \"仕入価格(税込)\": 396000,\r\n    //     \"仕入価格(税抜)\": 360000,\r\n    //     \"経費計\": 19635,\r\n    //     \"加修費計\": 0,\r\n    //     \"輸出検査料\": 0,\r\n    //     \"課税仕入額\": 377850,\r\n    //     \"消費税額\": 37785,\r\n    //     \"仕入合計金額\": 415635,\r\n    //     \"自動車税\": 0,\r\n    //     \"リサイクル料\": 10620,\r\n    //     \"展示場所\": \"輸出（横浜）\",\r\n    //     \"販売担当\": \"y.kitamura\"\r\n    // }\r\n]\r\n\r\n\r\n\r\n\r\nconst ParseCSV = () => {\r\n    const [csvData, setCsvData] = useState([]);\r\n    const [data, setData] = useState([]);\r\n\r\n    const handleFileChange = async (event) => {\r\n        const file = event.target.files[0];\r\n        if (!file) {\r\n            return;\r\n        }\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            const codes = new Uint8Array(e.target.result);\r\n            // Convert from SHIFT_JIS to UNICODE\r\n            const unicodeString = Encoding.codeToString(Encoding.convert(codes, 'UNICODE', 'SJIS'));\r\n            // Parse CSV using PapaParse\r\n            Papa.parse(unicodeString, {\r\n                header: true,\r\n                dynamicTyping: true,\r\n                complete: async function (results) {\r\n                    console.log('Parsed results:', results);\r\n                    setCsvData(results.data);\r\n\r\n                    // Iterate over each row and add to the server\r\n                    results.data.forEach(async (row) => {\r\n                        try {\r\n                            const documentId = row['仕入No.']; // Get the value of 仕入No. field\r\n                            const response = await fetch('http://192.168.24.126:7000/addVehicleData', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    'username': 'rmj-marc',\r\n                                    'accessKey': 'U2FsdGVkX1+ZE9ufgN17Tr4SbuH1B3ehEDMHs4hn6pY=',\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    documentId: documentId,\r\n                                    documentData: row,\r\n                                }) // Include documentId in the request body\r\n                            });\r\n                            if (response.ok) {\r\n                                console.log('Data added successfully:', row);\r\n                            } else {\r\n                                console.error('Failed to add data:', response.status);\r\n                            }\r\n                        } catch (error) {\r\n                            console.error('Error adding data:', error);\r\n                        }\r\n                    });\r\n\r\n                }\r\n            });\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n    };\r\n\r\n    const convertToFirestoreDocument = (row) => {\r\n        // Define the mapping of CSV keys to Firestore keys\r\n        const mapping = {\r\n            '仕入No.': 'documentId',\r\n            '状況': 'status',\r\n            '車名': 'carName',\r\n            'グレード': 'grade',\r\n            '色': 'color',\r\n            '型式': 'model',\r\n            '年式': 'year',\r\n            'ボディ形状': 'bodyShape',\r\n            '排気量': 'displacement',\r\n            'ミッション': 'transmission',\r\n            'エンジン区分': 'engineType',\r\n            '車台番号': 'chassisNumber',\r\n            '装備': 'equipment',\r\n            '車輌用途': 'vehiclePurpose',\r\n            '車検': 'inspection',\r\n            '走行距離': 'mileage',\r\n            '長さ': 'length',\r\n            '幅': 'width',\r\n            '高さ ': 'height',\r\n            '仕入日': 'purchaseDate',\r\n            '仕入区分': 'purchaseCategory',\r\n            '仕入先': 'purchaseSource',\r\n            '仕入担当': 'purchaseContact',\r\n            '仕入店舗': 'purchaseStore',\r\n            '仕入価格(税込)': 'purchasePriceInclusiveTax',\r\n            '仕入価格(税抜)': 'purchasePriceExclusiveTax',\r\n            '経費計': 'expenseTotal',\r\n            '加修費計': 'repairCostTotal',\r\n            '輸出検査料': 'exportInspectionFee',\r\n            '課税仕入額': 'taxablePurchaseAmount',\r\n            '消費税額': 'consumptionTaxAmount',\r\n            '仕入合計金額': 'totalPurchaseAmount',\r\n            '自動車税': 'automobileTax',\r\n            'リサイクル料': 'recycleFee',\r\n            '展示場所': 'exhibitionPlace',\r\n            '販売担当': 'salesContact'\r\n        };\r\n        // Create the Firestore document object\r\n        const firestoreDocument = {};\r\n        for (const [csvKey, firestoreKey] of Object.entries(mapping)) {\r\n            if (row[csvKey]) {\r\n                // Special handling for numeric values\r\n                if (csvKey === '仕入No.') {\r\n                    firestoreDocument[firestoreKey] = parseInt(row[csvKey]);\r\n                } else if (csvKey === '車検') {\r\n                    // Handle 'null' values for Firestore\r\n                    firestoreDocument[firestoreKey] = row[csvKey] === 'null' ? null : row[csvKey];\r\n                } else {\r\n                    firestoreDocument[firestoreKey] = row[csvKey];\r\n                }\r\n            }\r\n        }\r\n\r\n        return firestoreDocument;\r\n    };\r\n\r\n    const handlePressUpdate = async () => {\r\n\r\n        data.forEach(async (row) => {\r\n            try {\r\n                const documentId = row['仕入No.']; // Get the value of 仕入No. field\r\n                const response = await fetch('http://192.168.24.126:7000/updateVehicleData', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'username': 'rmj-marc',\r\n                        'accessKey': 'U2FsdGVkX1+ZE9ufgN17Tr4SbuH1B3ehEDMHs4hn6pY=',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        documentId: documentId,\r\n                        documentData: row,\r\n                    }) // Include documentId in the request body\r\n                });\r\n                if (response.ok) {\r\n                    console.log('Data updated successfully:', row);\r\n                } else {\r\n                    console.error('Failed to update data:', response.status);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error updating data:', error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    // useEffect(async () => {\r\n    //     try {\r\n    //         await fetch('http://localhost:7000');\r\n    //         // await fetch('http://rmj-api.duckdns.org:7000');\r\n    //         // const jsonData = await response.json();\r\n    //         // setData(jsonData);\r\n    //     } catch (error) {\r\n    //         console.error('Error fetching data: ', error);\r\n    //     }\r\n    // }, []);\r\n\r\n\r\n    const sendData = async () => {\r\n        // const response = await fetch('http://rmj-api.duckdns.org:7000', {\r\n        const response = await fetch('http://localhost:7000/', {\r\n            method: 'POST',\r\n            headers: {\r\n                // 'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                // \"tokenkey\": \"0iXRkSCDfNwO\",\r\n                action_cd: \"update\",\r\n                stock_id: \"179924\",\r\n                status: \"Sold\",\r\n                reference_no: \"Y2023080140A-21\",\r\n                m_as_maker_id: \"59\",\r\n                m_as_model_id: \"1343\",\r\n                grade_name: \"116i 右ﾊﾝﾄﾞﾙ\",\r\n                model_code: \"GH-UF16\",\r\n                frame_number: \"WBAUF12060PZ31920\",\r\n                model_number: \"15016\",\r\n                devision_number: \"0001\",\r\n                registration_year: \"2006\",\r\n                registration_month: \"08\",\r\n                manufacture_year: \"\",\r\n                manufacture_month: \"\",\r\n                m_as_bodytype_id: \"5\",\r\n                m_bodystyle_sub_id: \"\",\r\n                length: \"4240\",\r\n                width: \"1750\",\r\n                height: \"1430\",\r\n                displacement: \"1600\",\r\n                mileage_odometer_cd: \"0\",\r\n                mileage: \"73255\",\r\n                m_as_fueltype_id: \"1\",\r\n                m_as_transmission_id: \"1\",\r\n                m_as_steering_id: \"2\",\r\n                m_as_drivetype_id: \"2\",\r\n                number_of_passengers: \"5\",\r\n                door_cnt: \"5\",\r\n                exterior_color_cd: \"22\",\r\n                interior_color_cd: \"\",\r\n                option_cds: \"[1,2,3,4,6,9,10,11,18,19,20,21,22,23,25,26,30,31,32,41]\",\r\n                condition_cd: \"0\",\r\n                accident_flg: \"0\",\r\n                sales_person_charge_id: \"42\",\r\n                storage_yard_cd: \"4\",\r\n                site_sales_pr_text: \"\",\r\n                fob_ask_flg: \"0\",\r\n                fob_regular_price: \"120000\",\r\n                fob_price: \"120000\",\r\n                display_site_cds: \"[RMJ,RMZ]\",\r\n                tcv_flg: \"1\",\r\n                m_tcv_maker_id: \"23\",\r\n                m_tcv_model_id: \"5355\",\r\n                memo: \"取・ﾅﾋﾞ取・ﾘﾓｺﾝ・ＳＤ　仕⼊れ︓￥60000\",\r\n                stock_no: \"2023080140\",\r\n                stock_price: \"60000\",\r\n                car_condition_file: \"179924-vehicle_state.jpg\"\r\n            })\r\n        });\r\n\r\n        if (response.ok) {\r\n            let responseData;\r\n            responseData = await response.json();\r\n            console.log('Success:', responseData);\r\n\r\n        } else {\r\n            console.log('HTTP-Error:', response.status);\r\n            try {\r\n                const errorResponse = await response.text();\r\n                console.log('Error response:', errorResponse);\r\n            } catch (error) {\r\n                console.log('Error reading error response:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const YOUR_SERVER_ENDPOINT = 'http://rmj-api.duckdns.org:7000';\r\n\r\n    const callApiR02 = async (json_data, msg, exec_time) => {\r\n        try {\r\n            const data_post = JSON.parse(json_data); // Assuming json_data is a valid JSON string\r\n\r\n            const response = await fetch(YOUR_SERVER_ENDPOINT, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                data: json_data, // sending raw JSON string\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            const data = await response.json(); // Assuming the server responds with JSON\r\n\r\n            // Check if 'ret_text' is undefined before calling replace()\r\n            let ret_text = data.ret_text ? data.ret_text.replace(/\\n/g, '\\n') : 'No return text provided';\r\n            let ret = data.ret === true ? 'Success\\n' : 'Error\\n';\r\n\r\n            return ret + ret_text;\r\n\r\n        } catch (error) {\r\n            console.error('API call failed:', error);\r\n            return 'Error: ' + error.message; // In a real app, you might want to update state with this message\r\n        }\r\n    };\r\n\r\n    const jsonData = JSON.stringify({\r\n        // \"tokenkey\": \"0iXRkSCDfNwO\",\r\n        action_cd: \"update\",\r\n        stock_id: \"179924\",\r\n        status: \"Sold\",\r\n        reference_no: \"Y2023080140A-21\",\r\n        m_as_maker_id: \"59\",\r\n        m_as_model_id: \"1343\",\r\n        grade_name: \"116i 右ﾊﾝﾄﾞﾙ\",\r\n        model_code: \"GH-UF16\",\r\n        frame_number: \"WBAUF12060PZ31920\",\r\n        model_number: \"15016\",\r\n        devision_number: \"0001\",\r\n        registration_year: \"2006\",\r\n        registration_month: \"08\",\r\n        manufacture_year: \"\",\r\n        manufacture_month: \"\",\r\n        m_as_bodytype_id: \"5\",\r\n        m_bodystyle_sub_id: \"\",\r\n        length: \"4240\",\r\n        width: \"1750\",\r\n        height: \"1430\",\r\n        displacement: \"1600\",\r\n        mileage_odometer_cd: \"0\",\r\n        mileage: \"73255\",\r\n        m_as_fueltype_id: \"1\",\r\n        m_as_transmission_id: \"1\",\r\n        m_as_steering_id: \"2\",\r\n        m_as_drivetype_id: \"2\",\r\n        number_of_passengers: \"5\",\r\n        door_cnt: \"5\",\r\n        exterior_color_cd: \"22\",\r\n        interior_color_cd: \"\",\r\n        option_cds: \"[1,2,3,4,6,9,10,11,18,19,20,21,22,23,25,26,30,31,32,41]\",\r\n        condition_cd: \"0\",\r\n        accident_flg: \"0\",\r\n        sales_person_charge_id: \"42\",\r\n        storage_yard_cd: \"4\",\r\n        site_sales_pr_text: \"\",\r\n        fob_ask_flg: \"0\",\r\n        fob_regular_price: \"120000\",\r\n        fob_price: \"120000\",\r\n        display_site_cds: \"[RMJ,RMZ]\",\r\n        tcv_flg: \"1\",\r\n        m_tcv_maker_id: \"23\",\r\n        m_tcv_model_id: \"5355\",\r\n        memo: \"取・ﾅﾋﾞ取・ﾘﾓｺﾝ・ＳＤ　仕⼊れ︓￥60000\",\r\n        stock_no: \"2023080140\",\r\n        stock_price: \"60000\",\r\n        car_condition_file: \"179924-vehicle_state.jpg\"\r\n    })\r\n\r\n    const handleCallApi = async () => {\r\n        const result = await callApiR02(jsonData, '...', '...');\r\n    }\r\n    return (\r\n\r\n\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <input\r\n                type=\"file\"\r\n                accept=\".csv\"\r\n                onChange={handleFileChange}\r\n                style={{ marginBottom: 20 }}\r\n            />\r\n\r\n            <View>\r\n                {csvData.map((row, index) => (\r\n                    <Text key={index}>\r\n                        {JSON.stringify(row)}\r\n                    </Text>\r\n                ))}\r\n            </View>\r\n\r\n            <Button\r\n                style={{ width: 100 }}\r\n                // onPress={handlePressUpdate}\r\n                onPress={sendData}\r\n            // onPress={handleCallApi}\r\n            >\r\n                <Text>Press to update</Text>\r\n            </Button>\r\n\r\n            <View>\r\n                <FlatList\r\n                    data={data}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({ item }) => (\r\n                        <View>\r\n                            <Text>{item.columnName}</Text> {/* Replace columnName with actual data column name */}\r\n                        </View>\r\n                    )}\r\n                />\r\n            </View>\r\n        </View>\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default ParseCSV;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  PresenceTransition,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Title,\r\n  Content,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  VStack,\r\n  ScrollView,\r\n  SectionList,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Modal,\r\n  Divider\r\n} from \"native-base\";\r\nimport {\r\n  FontAwesome,\r\n  Entypo,\r\n  MaterialIcons,\r\n  Ionicons,\r\n  Fontisto,\r\n  EvilIcons,\r\n  AntDesign,\r\n  MaterialCommunityIcons,\r\n  Feather,\r\n  FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './style.css';\r\nimport { debounce } from 'lodash';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\n\r\nimport LazyScreen from './DevAdminComponents/Lazy Screen/LazyScreen';\r\n\r\nimport { HashRouter as Router, Route, Routes, useNavigate, Navigate } from 'react-router-dom';\r\n\r\nimport AddAccount from './DevAdminComponents/AddAccount';\r\nimport Logs from './DevAdminComponents/Logs';\r\nimport AccountList from './DevAdminComponents/AccountList';\r\nimport AddVehicle from './DevAdminComponents/AddVehicle';\r\nimport VehicleList from './DevAdminComponents/VehicleList';\r\nimport Freight from './DevAdminComponents/Freight';\r\nimport ChatMessages from './DevAdminComponents/ChatMessages';\r\nimport ParseCSV from './DevAdminComponents/ParseCSV';\r\nimport { setLoginAccountType, setLoginName } from './DevAdminComponents/redux/store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst StackNavigator = createNativeStackNavigator();\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nexport default function Top({ navigation }) {\r\n  const [drawerVisible, setDrawerVisible] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const loginAccountType = useSelector((state) => state.loginAccountType);\r\n  const Drawer = createDrawerNavigator();\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const ChatMessagesComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\r\n  );\r\n\r\n  const LogsComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\r\n  );\r\n\r\n  const FreightComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\r\n  );\r\n\r\n  const VehicleListComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\r\n  );\r\n\r\n  const AccountListComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\r\n  );\r\n\r\n  const AddVehicleComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\r\n  );\r\n\r\n  const AddAccountComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = navigation.addListener('state', () => {\r\n  //     // Close the drawer on navigation change\r\n  //     setDrawerVisible(false);\r\n  //   });\r\n\r\n  //   return unsubscribe;\r\n  // }, [navigation]);\r\n\r\n  useEffect(() => {\r\n    // Initially hide the drawer\r\n    setDrawerVisible(false);\r\n  }, []);\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate('/Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate('/Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const getRandomDelay = () => {\r\n    const minDelay = 100; // Minimum delay in milliseconds\r\n    const maxDelay = 200; // Maximum delay in milliseconds\r\n    return Math.floor(Math.random() * (maxDelay - minDelay + 1) + minDelay);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n\r\n      onSnapshot(accountDocRef, (docSnapshot) => {\r\n        if (docSnapshot.exists()) {\r\n          const data = docSnapshot.data();\r\n          const fieldType = data.type;\r\n          const fieldName = data.name;\r\n\r\n          if (data.active === true) {\r\n            setType(fieldType);\r\n            dispatch(setLoginAccountType(fieldType));\r\n            // console.log('Account Type: ', fieldType);\r\n            dispatch(setLoginName(fieldName));\r\n            const delay = getRandomDelay();\r\n            // setTimeout(() => {\r\n            // navigation.replace(fieldType);\r\n            // navigate(`/top`)\r\n            // }, delay);\r\n          }\r\n          else {\r\n            signOut(auth)\r\n              .then(() => {\r\n                // navigation.navigate('Login');\r\n                navigate('/Login');\r\n              })\r\n              .catch((error) => {\r\n                console.error('Error signing out:', error);\r\n              });\r\n          }\r\n        } else {\r\n          // Handle the case where the document does not exist\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n\r\n  };\r\n\r\n  const ProtectedRoute = ({ loginAccountType, allowedAccountTypes, redirectTo, children }) => {\r\n    return allowedAccountTypes.includes(loginAccountType) ? children : <Navigate to={redirectTo} replace />;\r\n  };\r\n\r\n\r\n  const style = document.createElement('style');\r\n  style.textContent = `\r\n  body, html {\r\n    overscroll-behavior-x: none;\r\n    overscroll-behavior-y: none;\r\n  }\r\n`;\r\n\r\n  document.head.append(style);\r\n\r\n  return (\r\n\r\n\r\n    // <Drawer.Navigator\r\n    //   // useLegacyImplementation\r\n    //   screenOptions={{\r\n    //     headerShown: false,\r\n    //     drawerStyle: { backgroundColor: '#7B9CFF' },\r\n    //     drawerContentOptions: {\r\n    //       activeTintColor: '#7B9CFF',\r\n    //       inactiveTintColor: '#7B9CFF',\r\n    //       activeLabelStyle: { color: '#7B9CFF' },\r\n    //       inactiveLabelStyle: { color: '#7B9CFF' },\r\n    //     },\r\n    //   }}\r\n    // >\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"CHAT MESSAGES\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    // <Drawer.Screen\r\n    //   name=\"LOGS\"\r\n    //   component={() => (\r\n    //     <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\r\n    //   )}\r\n    //   options={{ unmountOnBlur: true }}\r\n    // />\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"FREIGHT\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"VEHICLE LIST\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"ACCOUNT LIST\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"ADD NEW VEHICLE\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"ADD C-HUB ACCOUNT\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    // </Drawer.Navigator>\r\n\r\n    // <StackNavigator.Navigator screenOptions={{ headerShown: false }}>\r\n\r\n    //   <StackNavigator.Screen name=\"CHAT MESSAGES\" component={ChatMessagesComponent} />\r\n    //   <StackNavigator.Screen name=\"FREIGHT\" component={FreightComponent} />\r\n    //   <StackNavigator.Screen name=\"ADD NEW VEHICLE\" component={AddVehicleComponent} />\r\n    //   <StackNavigator.Screen name=\"LOGS\" component={LogsComponent} />\r\n    //   <StackNavigator.Screen name=\"VEHICLE LIST\" component={VehicleListComponent} />\r\n    //   <StackNavigator.Screen name=\"ACCOUNT LIST\" component={AccountListComponent} />\r\n    //   <StackNavigator.Screen name=\"ADD C-HUB ACCOUNT\" component={AddAccountComponent} />\r\n\r\n    // </StackNavigator.Navigator>\r\n    <NativeBaseProvider>\r\n      <Routes>\r\n        <Route path=\"*\" element={<Navigate to=\"chat-messages\" replace />} />\r\n        <Route path=\"parse-csv\" element={<ParseCSV />} />\r\n        <Route path=\"chat-messages\" element={<ChatMessages />} />\r\n        <Route path=\"chat-messages/:chatId\" element={<ChatMessages />} />\r\n        <Route path=\"freight\" element={<FreightComponent />} />\r\n        <Route path=\"add-new-vehicle\" element={<AddVehicleComponent />} />\r\n        <Route path=\"logs\" element={<LogsComponent />} />\r\n        <Route path=\"vehicle-list\" element={<VehicleListComponent />} />\r\n        <Route path=\"account-list\" element={<AccountListComponent />} />\r\n        <Route path=\"add-c-hub-account\" element={<AddAccountComponent />} />\r\n        {/* Add additional nested routes as needed */}\r\n      </Routes>\r\n    </NativeBaseProvider>\r\n    // <Drawer.Navigator useLegacyImplementation screenOptions={{\r\n    //   headerShown: false,\r\n    //   drawerStyle: { backgroundColor: '#D0DCFF' },\r\n    //   drawerContentOptions: {\r\n    //     activeTintColor: 'white',\r\n    //     inactiveTintColor: 'white',\r\n    //     activeLabelStyle: { color: 'white' },\r\n    //     inactiveLabelStyle: { color: 'white' }\r\n    //   }\r\n    // }} >  \r\n    //        <Drawer.Screen name=\"ADD NEW VEHICLE\" component={AddVehicle} />\r\n    //   <Drawer.Screen name=\"VEHICLE LIST\" component={VehicleList} />\r\n\r\n    //   <Drawer.Screen name=\"ACCOUNT LIST\" component={AccountList} />\r\n    //   <Drawer.Screen name=\"LOGS\" component={Logs} />\r\n    //   <Drawer.Screen name=\"ADD C-HUB ACCOUNT\" component={AddAccount} />\r\n\r\n\r\n    // </Drawer.Navigator>\r\n\r\n\r\n    //  <NativeBaseProvider>\r\n    //       <StackNavigator.Navigator options={{ headerShown: false }}>\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AccountList\" component={AccountList} />\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"Logs\" component={Logs} />\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AddAccount\" component={AddAccount} />\r\n\r\n    //       </StackNavigator.Navigator>\r\n\r\n    //     </NativeBaseProvider>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition\r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot } from '../firebasecontrol'\r\nimport { signOut, onAuthStateChanged, reload, getAuth } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  setLoginAccountType,\r\n  // setModelData,\r\n  setLoginEmail,\r\n  setLoginName\r\n} from './DevAdminComponents/redux/store'\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Checkpoint() {\r\n  const dispatch = useDispatch();\r\n  const loginEmail = useSelector((state) => state.loginEmail);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const loginAccountType = useSelector((state) => state.loginAccountType);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [emailCredential, setEmailCredential] = React.useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n\r\n  // const navigation = useNavigation()\r\n  const navigate = useNavigate();\r\n\r\n\r\n  // const handleDocumentChange = (snapshot) => {\r\n  //   if (!snapshot.exists()) {\r\n  //     signOut(auth)\r\n  //       .then(() => {\r\n  //         navigation.navigate('Login');\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.error('Error signing out:', error);\r\n  //       });\r\n  //   }\r\n  // };\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate('/Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate('/Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const getRandomDelay = () => {\r\n    const minDelay = 100; // Minimum delay in milliseconds\r\n    const maxDelay = 200; // Maximum delay in milliseconds\r\n    return Math.floor(Math.random() * (maxDelay - minDelay + 1) + minDelay);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n\r\n      // if (loginAccountType !== '') {\r\n      const delay = getRandomDelay();\r\n      setTimeout(() => {\r\n        // navigation.replace(fieldType);\r\n        navigate(`/top`)\r\n      }, delay);\r\n      // navigate(`/top`)\r\n      // }\r\n      // else {\r\n      //   onSnapshot(accountDocRef, (docSnapshot) => {\r\n      //     if (docSnapshot.exists()) {\r\n      //       const data = docSnapshot.data();\r\n      //       const fieldType = data.type;\r\n      //       const fieldName = data.name;\r\n\r\n      //       if (data.active === true) {\r\n      //         setType(fieldType);\r\n      //         dispatch(setLoginAccountType(fieldType));\r\n      //         dispatch(setLoginName(fieldName));\r\n      //         const delay = getRandomDelay();\r\n      //         // setTimeout(() => {\r\n      //         // navigation.replace(fieldType);\r\n      //         navigate(`/top`)\r\n      //         // }, delay);\r\n      //       }\r\n      //       else {\r\n      //         signOut(auth)\r\n      //           .then(() => {\r\n      //             // navigation.navigate('Login');\r\n      //             navigate('/Login');\r\n      //           })\r\n      //           .catch((error) => {\r\n      //             console.error('Error signing out:', error);\r\n      //           });\r\n      //       }\r\n      //     } else {\r\n      //       // Handle the case where the document does not exist\r\n      //     }\r\n      //   });\r\n      // }\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n\r\n  };\r\n\r\n  // const getFieldValueByEmail = (email, navigation) => {\r\n\r\n\r\n  //   try {\r\n  //     const accountDocRef = doc(firestore, 'accounts', email);\r\n  //     const unsubscribe = onSnapshot(accountDocRef, (accountDocSnapshot) => {\r\n  //       if (accountDocSnapshot.exists()) {\r\n  //         const data = accountDocSnapshot.data();\r\n  //         const fieldType = data.type;\r\n  //         const fieldName = data.name;\r\n\r\n  //         if (data.active === true) {\r\n  //           dispatch(setLoginName(fieldName));\r\n  //           const delay = getRandomDelay();\r\n  //           setTimeout(() => {\r\n  //             navigation.replace(fieldType);\r\n  //           }, delay);\r\n  //         } else {\r\n  //           signOut(auth)\r\n  //             .then(() => {\r\n  //               navigation.navigate('Login');\r\n  //             })\r\n  //             .catch((error) => {\r\n  //               console.error('Error signing out:', error);\r\n  //             });\r\n  //         }\r\n  //       } else {\r\n  //         console.log('Document does not exist');\r\n  //       }\r\n  //     });\r\n\r\n  //     // Return the unsubscribe function to stop listening when necessary\r\n  //     return unsubscribe;\r\n  //   } catch (error) {\r\n  //     console.error('Error fetching field value:', error);\r\n  //   }\r\n  // };\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n              <HStack space={1} justifyContent=\"center\">\r\n                <Spinner color='white' size='lg' />\r\n              </HStack>\r\n            </Stack>\r\n\r\n          </Center>\r\n\r\n\r\n        </Center>\r\n\r\n\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { \r\n  Input,\r\n  Icon, \r\n  Stack, \r\n  Pressable, \r\n  Center, \r\n  NativeBaseProvider, \r\n  Button, \r\n  Box, \r\n  HStack, \r\n  Image, \r\n  VStack, \r\n  Alert, \r\n  IconButton, \r\n  CloseIcon, \r\n  Spinner, \r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition \r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\r\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail, confirmPasswordReset  } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ResetPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n      \r\n    })\r\n\r\n    return unsubscribe\r\n  }, []) \r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n            <PresenceTransition visible={errorShow} initial={{\r\n            opacity: 0,\r\n            scale: 0,\r\n          }} animate={{\r\n            opacity: 1,\r\n            scale: 1,\r\n            transition: {\r\n              duration: 200\r\n            }\r\n          }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n          <Alert maxW=\"400\" status=\"error\">\r\n            <VStack space={1} flexShrink={1} w=\"100%\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                  <Alert.Icon />\r\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                    {errorTitle}\r\n                  </Text>\r\n                </HStack>\r\n              </HStack>\r\n              <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n                {errorMessage}\r\n              </Box>\r\n            </VStack>\r\n          </Alert>\r\n        {/* </Collapse> */}\r\n        </PresenceTransition>\r\n \r\n      </Box>;\r\n  \r\n};\r\n\r\n\r\n\r\n  const handleReturnLogin = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n   const handleEmailOnChangeText = (text) => {\r\n    setEmail(text) \r\n    setErrorShow(false)\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setIsLoading(true);\r\n    setIsDisabled(true);\r\n    setErrorShow(false);\r\n    sendPasswordResetEmail(auth, email)\r\n    .then((re)=> {\r\n      console.log(re);\r\n      navigation.navigate('ResetPasswordSuccess');\r\n    \r\n    })\r\n    .catch((error) =>{\r\n      setIsLoading(false);\r\n      setIsDisabled(false);\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log(error);\r\n      setErrorShow(true);\r\n      if (errorCode === 'auth/missing-email') {\r\n        console.log('Please enter an email.☹️');\r\n        setErrorTitle('Email is empty!');\r\n        setErrorMessage('Please enter an email.☹️');\r\n        <ErrorLoginShow/>\r\n      }\r\n      else if (errorCode === 'auth/invalid-email') {\r\n        console.log('Email is invalid. ☹️');\r\n        setErrorTitle('Invalid email!');\r\n        setErrorMessage('Please enter a valid email. ☹️');\r\n         <ErrorLoginShow/>\r\n      } \r\n      else if (errorCode === 'auth/user-not-found') {\r\n        console.log('Please use an existing email. ☹️');\r\n        setErrorTitle('User not found!');\r\n        setErrorMessage('Please use an existing email. ☹️');\r\n         <ErrorLoginShow/>\r\n      }       else if (errorCode === 'auth/too-many-requests') {\r\n        console.log('Too many requests detected, please try again later. ☹️');\r\n        setErrorTitle('Too many requests!');\r\n        setErrorMessage('Too many requests detected, please try again later. ☹️');\r\n         <ErrorLoginShow/>\r\n      } \r\n    })\r\n  };\r\n  \r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n      <ErrorLoginShow/>\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n    <Input w={{\r\n      base: \"90%\",\r\n      md: \"90%\",\r\n      sm: \"90%\", \r\n    }} value={email} onSubmitEditing={handleReset} onChangeText={handleEmailOnChangeText} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\r\n\r\n    <HStack space={1} justifyContent=\"center\">\r\n      <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReset} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16}  />:<Text style={{color: 'white',}}>Reset Password</Text>}</Button>\r\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\r\n\r\n    </HStack>\r\n\r\n  </Stack>\r\n\r\n          </Center>  \r\n\r\n          \r\n        </Center>\r\n\r\n   \r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { \r\n  Input,\r\n  Icon, \r\n  Stack, \r\n  Pressable, \r\n  Center, \r\n  NativeBaseProvider, \r\n  Button, \r\n  Box, \r\n  HStack, \r\n  Image, \r\n  VStack, \r\n  Alert, \r\n  IconButton, \r\n  CloseIcon, \r\n  Spinner, \r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition \r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\r\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail  } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ResetPasswordSuccess() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(true);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n      \r\n    })\r\n\r\n    return unsubscribe\r\n  }, []) \r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n            <PresenceTransition visible={errorShow} initial={{\r\n            opacity: 0,\r\n            scale: 0,\r\n          }} animate={{\r\n            opacity: 1,\r\n            scale: 1,\r\n            transition: {\r\n              duration: 200\r\n            }\r\n          }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n          <Alert maxW=\"400\" status=\"Success\">\r\n            <VStack space={1} flexShrink={1} w=\"100%\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                  <Alert.Icon />\r\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                    Success!\r\n                  </Text>\r\n                </HStack>\r\n              </HStack>\r\n              <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n                Password reset link has been sent to your email! 😊\r\n              </Box>\r\n            </VStack>\r\n          </Alert>\r\n        {/* </Collapse> */}\r\n        </PresenceTransition>\r\n \r\n      </Box>;\r\n  \r\n};\r\n\r\n\r\n  \r\n  const handleReturnLogin = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n      <ErrorLoginShow/>\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n   \r\n\r\n    <HStack space={1} justifyContent=\"center\">\r\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\r\n\r\n    </HStack>\r\n\r\n  </Stack>\r\n\r\n          </Center>  \r\n\r\n          \r\n        </Center>\r\n\r\n   \r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect, StrictMode } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition\r\n} from \"native-base\";\r\nimport { getAuth, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, } from './firebasecontrol'\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport LoginPage from './components/LoginPage';\r\nimport Top from './components/Top';\r\nimport Admin from './components/Top';\r\nimport Checkpoint from './components/Checkpoint';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport ResetPasswordSuccess from './components/ResetPasswordSuccess';\r\nimport './style.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './components/DevAdminComponents/redux/store';\r\nimport { HashRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\n\r\n\r\nconst StackNavigator = createNativeStackNavigator();\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\nexport default function App() {\r\n  const [initializing, setInitializing] = useState(true);\r\n  const [user, setUser] = useState(null);\r\n\r\n  function onAuthStateChanged(user) {\r\n    setUser(user);\r\n    if (initializing) setInitializing(false);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const subscriber = auth.onAuthStateChanged(onAuthStateChanged)\r\n\r\n    return subscriber;\r\n  }, [])\r\n\r\n\r\n  if (initializing) {\r\n    return null; // or a loading screen if needed\r\n  }\r\n\r\n\r\n  const config = {\r\n    screens: {\r\n      Login: 'login',\r\n      Checkpoint: 'checkpoint',\r\n      devadmin: {\r\n        path: 'devadmin',\r\n        screens: {\r\n          'CHAT MESSAGES': 'ChatMessages/:chatId',\r\n          'FREIGHT': 'Freight',\r\n          'ADD NEW VEHICLE': 'AddNewVehicle',\r\n          'LOGS': 'Logs',\r\n          'VEHICLE LIST': 'VehicleList',\r\n          'ACCOUNT LIST': 'AccountList',\r\n          'ADD C-HUB ACCOUNT': 'AddCHubAccount',\r\n        },\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const linking = {\r\n    prefixes: ['https://lontokkayo.github.io/samplecontrolhub/'],\r\n    config,\r\n  };\r\n\r\n  const style = document.createElement('style');\r\n  style.textContent = `\r\n  body, html {\r\n    overscroll-behavior-x: none;\r\n    overscroll-behavior-y: none;\r\n  }\r\n`;\r\n\r\n  document.head.append(style);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\r\n          <Route path=\"/Login\" element={<LoginPage />} />\r\n          <Route path=\"/Login/*\" element={<LoginPage />} />\r\n          <Route path=\"/Checkpoint\" element={<Checkpoint />} />\r\n          {/* Corrected path for Admin if needed */}\r\n          <Route path=\"/top/*\" element={<Top />} />\r\n          {/* Define other routes */}\r\n        </Routes>\r\n      </Router>\r\n    </Provider>\r\n    // <Router>\r\n    //   <Provider store={store}>\r\n    //     <NativeBaseProvider>\r\n    //       {/* <LoginPage/> */}\r\n    //       <NavigationContainer linking={linking}>\r\n    //         <StackNavigator.Navigator options={{ headerShown: false }}>\r\n    //           <StackNavigator.Screen options={{ headerShown: false, }} name=\"Login\" component={LoginPage} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false, }} name=\"Checkpoint\" component={Checkpoint} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false, unmountOnBlur: true }} name=\"devadmin\" component={DevAdmin} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPassword\" component={ResetPassword} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPasswordSuccess\" component={ResetPasswordSuccess} />\r\n    //           {/* {user ? (<StackNavigator.Screen options={{ headerShown: false }} name=\"Checkpoint\" component={Checkpoint} /> ) : user ?\r\n    //       (<StackNavigator.Screen options={{ headerShown: false }} name=\"superadmin\" component={SuperAdmin} />) : user ?\r\n    //       (<StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />) :  (\r\n    //       <StackNavigator.Screen  options={{ headerShown: false }} name=\"Login\" component={LoginPage} />\r\n    //     )} */}\r\n    //         </StackNavigator.Navigator>\r\n    //       </NavigationContainer>\r\n    //     </NativeBaseProvider>\r\n    //   </Provider>\r\n    // </Router>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Alert } from 'react-native';\r\nimport {\r\n    Input,\r\n    Icon,\r\n    Stack,\r\n    Pressable,\r\n    Center,\r\n    PresenceTransition,\r\n    NativeBaseProvider,\r\n    Button,\r\n    Box,\r\n    HStack,\r\n    Image,\r\n    Container,\r\n    Header,\r\n    Left,\r\n    Body,\r\n    Title,\r\n    Content,\r\n    Text,\r\n    Heading,\r\n    Flex,\r\n    VStack,\r\n    ScrollView,\r\n    SectionList,\r\n    useBreakpointValue,\r\n    Spinner,\r\n    Modal,\r\n    Divider,\r\n    Popover\r\n} from \"native-base\";\r\nimport { DataTable } from 'react-native-paper';\r\nimport {\r\n    FontAwesome,\r\n    Entypo,\r\n    MaterialIcons,\r\n    Ionicons,\r\n    Fontisto,\r\n    EvilIcons,\r\n    AntDesign,\r\n    MaterialCommunityIcons,\r\n    Feather,\r\n    FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail, deleteUser, signInWithEmailAndPassword, updateEmail, updatePassword } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, deleteDoc, limit } from '../../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport './../style.css';\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { color } from 'react-native-reanimated';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport {\r\n    createDrawerNavigator,\r\n    DrawerContentScrollView,\r\n    DrawerItemList,\r\n    DrawerItem,\r\n} from '@react-navigation/drawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setAccountListData, setLoadingModalVisible, setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { collectionGroup, endBefore, limitToLast, startAfter, where } from 'firebase/firestore';\r\nimport { projectControlFirestore } from '../../crossFirebase';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\nlet selectedScreen = 'ACCOUNT LIST'\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AccountList() {\r\n    const dispatch = useDispatch();\r\n    const loginName = useSelector((state) => state.loginName);\r\n    const [email, setEmail] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [showModal, setShowModal] = useState('');\r\n    const [type, setType] = useState('');\r\n    const logo = require('../../assets/C-Hub.png');\r\n    const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const [isMobileView, setIsMobileView] = useState(false);\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [show, setShow] = React.useState(false);\r\n    const [show2, setShow2] = React.useState(false);\r\n    const [isDisabled, setIsDisabled] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    // const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n\r\n    const [isSelectedLogs, setIsSelectedLogs] = useState(false);\r\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\r\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(true);\r\n    const [isSelected3, setIsSelected3] = useState(false);\r\n    const [isSelected4, setIsSelected4] = useState(false);\r\n\r\n    const [accountTypeSpAd, setAccountTypeSpAd] = useState(false);\r\n    const [accountTypeDevAd, setAccountTypeDevAd] = useState(false);\r\n    const [accountTypeAd, setAccountTypeAd] = useState(false);\r\n    const [accountType3, setAccountType3] = useState(false);\r\n    const [accountType4, setAccountType4] = useState(false);\r\n\r\n    const [inputName, setInputName] = useState('');\r\n    const [isInputNameBlank, setIsInputNameBlank] = useState(false);\r\n    const [inputEmail, setInputEmail] = useState('');\r\n    const [inputPassword, setInputPassword] = useState('');\r\n    const [inputConfirmPassword, setInputConfirmPassword] = useState('');\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n    const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\r\n    const [showSuccessModal, setShowSuccessModal] = React.useState(false);\r\n    const [showDisableModal, setShowDisableModal] = React.useState(false);\r\n    const [showEnableModal, setShowEnableModal] = React.useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = React.useState(false);\r\n    const [showSaveSuccessModal, setShowSaveSuccessModal] = React.useState(false);\r\n    const inputRefs = useRef([]);\r\n\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [isIntervalActive, setIsIntervalActive] = useState(true);\r\n    const [time, setTime] = useState('');\r\n    const [selectedType, setSelectedType] = useState('');\r\n    const [selectedTypeDisplay, setSelectedTypeDisplay] = useState('');\r\n    const [selectedItemType, setSelectedItemType] = useState('');\r\n    const [isEmailDuplicate, setIsEmailDuplicate] = useState('');\r\n    const [authEmail, setAuthEmail] = useState('');\r\n    const [authPassword, setAuthPassword] = useState('');\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n    const [isSaveLoading, setIsSaveLoading] = useState(false);\r\n    const inputEmailRef = useRef(null);\r\n    const inputNameRef = useRef(null);\r\n    const inputPassRef = useRef(null);\r\n\r\n    const [page, setPage] = useState(0);\r\n    const optionsPerPage = [13, 25, 50];\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const [documentListener, setDocumentListener] = useState(false);\r\n\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const ref0 = useRef(null);\r\n    const ref1 = useRef(null);\r\n    const ref2 = useRef(null);\r\n    const ref3 = useRef(null);\r\n    const searchInputRef = useRef(null);\r\n\r\n    const searchInput = useRef(null);\r\n    const searchInputValue = searchInput.current?.value;\r\n\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [firstVisible, setFirstVisible] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(db, 'accounts'),\r\n            orderBy('timestamp', 'desc'),\r\n            limit(pageSize)\r\n        );\r\n        const unsubscribe = onSnapshot(q, (documents) => {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n            dispatch(setAccountListData(logsDatabaseData));\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            setFirstVisible(documents.docs[0]);\r\n        });\r\n        return () => unsubscribe();\r\n\r\n    }, []);\r\n\r\n    const fetchNextData = async () => {\r\n\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collectionGroup(projectControlFirestore, 'accounts'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n        }\r\n\r\n        else {\r\n            const q = query(\r\n                collection(projectControlFirestore, 'accounts'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const fetchPreviousData = async () => {\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev')\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev');\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchFirstPage = (documents) => {\r\n\r\n\r\n        const accountListDatabaseData = [];\r\n\r\n        documents.forEach((document) => {\r\n            accountListDatabaseData.push({\r\n                id: document.id,\r\n                ...document.data(),\r\n            });\r\n        });\r\n\r\n        dispatch(setAccountListData(accountListDatabaseData));\r\n\r\n        if (documents?.docs[0]) {\r\n            setFirstVisible(documents.docs[0]);\r\n        }\r\n        if (documents?.docs[documents.docs.length - 1]) {\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n        if (!documents.empty) {\r\n            const accountListDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                accountListDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n\r\n\r\n\r\n            if (documents?.docs[0]) {\r\n                setFirstVisible(documents.docs[0]);\r\n            }\r\n            if (documents?.docs[documents.docs.length - 1]) {\r\n                setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            }\r\n\r\n            if (pageClicked == 'next') {\r\n                setCurrentPage(currentPage + 1);\r\n            }\r\n            if (pageClicked == 'prev') {\r\n                setCurrentPage(currentPage - 1);\r\n            }\r\n\r\n            dispatch(setAccountListData(accountListDatabaseData));\r\n        }\r\n\r\n        else {\r\n\r\n            if (searchText == '') {\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n            else {\r\n\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'accounts'),\r\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleNextPage = async () => {\r\n        // setPageClicked('next');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage + 1);\r\n        await fetchNextData();\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handlePreviousPage = async () => {\r\n        // setPageClicked('previous');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage - 1);\r\n        await fetchPreviousData();\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        searchData();\r\n\r\n    }, [searchText]);\r\n\r\n    const searchData = async () => {\r\n\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        if (searchText === '') {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'accounts'),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n    };\r\n\r\n    const handleSearchEnter = () => {\r\n\r\n        if (searchInputRef.current?.value !== '') {\r\n            setSearchText(searchInputRef.current.value.trim());\r\n        }\r\n        else {\r\n            setSearchText('');\r\n\r\n            if (searchText == '') {\r\n                searchData();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleToggleAccountTypeAd = useCallback(() => {\r\n        const text = 'admin';\r\n\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Admin');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountTypeDevAd = useCallback(() => {\r\n        const text = 'devadmin';\r\n\r\n        setSelectedTypeDisplay('Developer Admin');\r\n\r\n        setSelectedType(text);\r\n        setSelectedItemType(text);\r\n\r\n    }, []);\r\n\r\n    const handleToggleAccountType3 = useCallback(() => {\r\n        const text = 'staff';\r\n\r\n        setSelectedType(text);\r\n\r\n        setSelectedTypeDisplay('Staff');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountType4 = useCallback(() => {\r\n        const text = 'booking';\r\n\r\n\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Booking');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountTypeSpAd = useCallback(() => {\r\n        const text = 'superadmin';\r\n\r\n        setSelectedItemType(text);\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Super Admin');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // console.log(selectedType);\r\n        // console.log(selectedTypeDisplay);\r\n\r\n    }, [selectedType, selectedTypeDisplay])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')); // Replace 'your-collection' with the actual collection name and 'timestamp' with the timestamp field in your documents\r\n                const querySnapshot = await getDocs(q);\r\n                const docs = querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                setData(docs);\r\n                setFilteredData(docs);\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        const unsubscribe = onSnapshot(query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')), (snapshot) => {\r\n            const updatedData = snapshot.docs.map((doc) => doc.data());\r\n            setData(updatedData);\r\n            setFilteredData(updatedData);\r\n        });\r\n\r\n        fetchData();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n    }, [typeOfAccount]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n\r\n            if (!user) {\r\n                // navigation.navigate(\"Login\")\r\n                navigate(\"/Login\")\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const firebaseFirestore = getFirestore();\r\n\r\n\r\n\r\n\r\n    // const handleUpdate = async () => {\r\n    //     setIsDisabled(true);\r\n    //     setIsLoading(true);\r\n\r\n    //     if (\r\n    //         validateEmail() === false ||\r\n    //         inputName === ''\r\n    //     ) {\r\n    //         setTimeout(() => {\r\n    //             // Reset loading and disabled state\r\n    //             setIsLoading(false);\r\n    //             setIsDisabled(false);\r\n    //         }, 500);\r\n    //     } else {\r\n    //         try {\r\n    //             const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\r\n    //             if (signInMethods.length > 0) {\r\n    //                 // Email already exists\r\n    //                 setIsEmailDuplicate(true);\r\n    //                 setEmailError(false);\r\n    //                 validateEmail(false);\r\n    //                 setIsLoading(false);\r\n    //                 setIsDisabled(false);\r\n    //                 return;\r\n    //             }\r\n\r\n    //             await createUserWithEmailAndPassword(authForCreateUser, inputEmail, inputPassword)\r\n    //                 .then((userCredential) => {\r\n\r\n    //                     const user = userCredential.user;\r\n    //                     try {\r\n    //                         const customID = inputEmail; // Replace 'your-custom-id' with your desired custom ID\r\n    //                         const docRef = doc(db, 'accounts', selectedItem.email); // Replace 'myCollection' with the name of your desired collection\r\n    //                         updateDoc(docRef, {\r\n    //                             // Specify the data you want to add to the document\r\n    //                             email: inputEmail,\r\n    //                             name: inputName,\r\n    //                             pass: inputPassword,\r\n    //                             type: typeOfAccount,\r\n    //                             // ...\r\n    //                         });\r\n\r\n    //                         addLogToCollection(logData);\r\n    //                         // console.log(logData);\r\n    //                         setIsLoading(false);\r\n    //                         setIsDisabled(false);\r\n    //                         handleClear();\r\n    //                         setShowModal(true);\r\n\r\n    //                         // console.log('Document added with custom ID: ', customID);\r\n    //                     } catch (error) {\r\n    //                         console.error('Error adding document: ', error);\r\n    //                     }\r\n\r\n\r\n    //                     // Reset loading and disabled state\r\n\r\n\r\n\r\n    //                 })\r\n    //                 .catch((error) => {\r\n    //                     // console.log('An error occurred during sign-up. Please try again later.');\r\n    //                     console.log(error);\r\n    //                     setIsLoading(false);\r\n    //                     setIsDisabled(false);\r\n    //                 });\r\n    //         } catch (error) {\r\n    //             const errorCode = error.code;\r\n    //             const errorMessage = error.message;\r\n    //             console.log('An error occurred while checking the email existence. Please try again later.');\r\n    //             // console.log(errorCode, errorMessage);\r\n    //             setIsLoading(false);\r\n    //             setIsDisabled(false);\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n    const handleClear = useCallback(() => {\r\n        const text = '';\r\n\r\n        ref0.current.value = \"\";\r\n        ref1.current.value = \"\";\r\n        ref2.current.value = \"\";\r\n        ref3.current.value = \"\";\r\n        setAccountTypeAd(false);\r\n        setAccountTypeSpAd(false);\r\n        setAccountTypeDevAd(false);\r\n        setAccountType3(false);\r\n        setAccountType4(false);\r\n        setEmailError(false);\r\n        setIsEmailDuplicate(false);\r\n\r\n\r\n        setInputConfirmPassword('');\r\n        setInputEmail('');\r\n        setInputName('');\r\n        setInputPassword('');\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    // const handleToggleLogs = useCallback(() => {\r\n    //     // setIsSelectedLogs(true);\r\n\r\n    //     // setIsSelectedAddAccount(false);\r\n    //     // setIsSelectedAccountList(false);\r\n    //     // setIsSelected3(false);\r\n    //     // setIsSelected4(false);\r\n\r\n    //     navigation.navigate(\"LOGS\");\r\n    // }, []);\r\n    // const handleToggleAddAccount = useCallback(() => {\r\n    //     // setIsSelectedAddAccount(true);\r\n\r\n    //     // setIsSelectedLogs(false);\r\n    //     // setIsSelectedAccountList(false);\r\n    //     // setIsSelected3(false);\r\n    //     // setIsSelected4(false);\r\n\r\n    //     navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n    // }, []);\r\n\r\n    // const handleToggleAccountList = useCallback(() => {\r\n    //     // setIsSelectedAccountList(true);\r\n\r\n    //     // setIsSelectedAddAccount(false);\r\n    //     // setIsSelected3(false);\r\n    //     // setIsSelected4(false);\r\n    //     // setIsSelectedLogs(false);\r\n    //     navigation.navigate(\"ACCOUNT LIST\");\r\n    // }, []);\r\n\r\n    // const handleToggleAddVehicle = useCallback(() => {\r\n    //     // setIsSelected3(true);\r\n\r\n    //     // setIsSelectedAddAccount(false);\r\n    //     // setIsSelectedAccountList(false);\r\n    //     // setIsSelected4(false);\r\n    //     // setIsSelectedLogs(false);\r\n    //     navigation.navigate(\"ADD NEW VEHICLE\");\r\n    // }, []);\r\n\r\n    // const handleVehicleList = useCallback(() => {\r\n    //     navigation.navigate(\"VEHICLE LIST\");\r\n    // }, []);\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n\r\n\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(auth)\r\n                    .then(() => {\r\n                        // navigation.navigate('Login');\r\n                        navigate(\"/Login\")\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(auth)\r\n                .then(() => {\r\n                    // navigation.navigate('Login');\r\n                    navigate(\"/Login\")\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n\r\n\r\n    };\r\n    const subscribeToFieldChange = () => {\r\n        const userId = auth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const listenForNameChange = (documentId) => {\r\n        const userRef = doc(db, 'accounts', documentId);\r\n\r\n        const unsubscribe = onSnapshot(userRef, (doc) => {\r\n            if (doc.exists()) {\r\n                const name = doc.data().name;\r\n                const type = doc.data().type;\r\n                setName(name);\r\n                setType(type);\r\n                // Perform any necessary actions with the name value\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        });\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n    useEffect(() => {\r\n        getEmailFromDocument('accounts', auth.currentUser?.email);\r\n        // console.log(authEmail, authPassword)\r\n    }, [authEmail, authPassword]);\r\n\r\n    const getEmailFromDocument = async (collectionPath, documentId) => {\r\n        const firestore = getFirestore();\r\n        const documentRef = doc(firestore, collectionPath, documentId);\r\n\r\n        try {\r\n            const documentSnapshot = await getDoc(documentRef);\r\n            if (documentSnapshot.exists()) {\r\n                const email = documentSnapshot.data().email;\r\n                const pass = documentSnapshot.data().pass;\r\n\r\n                setAuthEmail(email);\r\n                setAuthPassword(pass);\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error retrieving email:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const validateEmail = () => {\r\n        // Regular expression for email validation\r\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n        const isValid = emailRegex.test(inputEmail);\r\n\r\n        return isValid;\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(auth).then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\")\r\n\r\n            setEmail('');\r\n            setName('');\r\n        }).catch((error) => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     const handleScreenResize = () => {\r\n    //         const screenWidth = Dimensions.get('window').width;\r\n    //         setIsMobileView(screenWidth < 1200);\r\n    //     };\r\n\r\n    //     // Initial check on component mount\r\n    //     handleScreenResize();\r\n\r\n    //     // Listen for screen dimension changes\r\n    //     Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n    //     // Cleanup event listener on component unmount\r\n    //     return () => {\r\n    //         Dimensions.removeEventListener('change', handleScreenResize);\r\n    //     };\r\n    // }, []);\r\n\r\n\r\n\r\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleEdit = useCallback((id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputPassword(selectedItem.pass);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setModalVisible(true);\r\n        setSelectedItemType(selectedItem.type);\r\n        setSelectedType(selectedItem.type);\r\n        setSelectedTypeDisplay(selectedItem.typeDisplay);\r\n        setIsEmailDuplicate(false);\r\n        // console.log(selectedItem);\r\n\r\n        if (inputEmailRef.current) {\r\n            inputEmailRef.current.setNativeProps({ text: selectedItem.email });\r\n        }\r\n\r\n        if (inputNameRef.current) {\r\n            inputNameRef.current.setNativeProps({ text: selectedItem.name });\r\n        }\r\n        if (inputPassRef.current) {\r\n            inputPassRef.current.setNativeProps({ text: selectedItem.pass });\r\n        }\r\n    }, [data]);\r\n\r\n\r\n\r\n    const handleInputEmailChange = debounce((value) => {\r\n        setInputEmail(value);\r\n    }, 50);\r\n\r\n    const handleInputNameChange = debounce((value) => {\r\n        setInputName(value);\r\n    }, 50);\r\n\r\n    const handleInputPassChange = debounce((value) => {\r\n        setInputPassword(value);\r\n    }, 50);\r\n\r\n\r\n    const handleOpenDisableModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowDisableModal(true);\r\n    };\r\n\r\n    const handleOpenEnableModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowEnableModal(true);\r\n    };\r\n\r\n    const handleOpenDeleteModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowDeleteModal(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setModalVisible(false);\r\n        setShow(false);\r\n    };\r\n\r\n    const handleCloseDisableModal = () => {\r\n        setShowDisableModal(false);\r\n    };\r\n\r\n    const handleOpenSaveSuccessModal = () => {\r\n        setShowDisableModal(false);\r\n    };\r\n\r\n\r\n    const handleCloseDeleteModal = () => {\r\n        setShowDeleteModal(false);\r\n    };\r\n    const handleCloseEnableModal = () => {\r\n        setShowEnableModal(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [selectedItem]);\r\n    const addLogToCollection = async (data) => {\r\n        try {\r\n            const firestore = getFirestore();\r\n            const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n            // Add a new document to the \"logs\" collection\r\n            await addDoc(logsCollectionRef, data);\r\n\r\n        } catch (error) {\r\n            console.error('Error adding document:', error);\r\n        }\r\n    };\r\n    // useEffect(() => {\r\n    //     const fetchTime = async () => {\r\n    //         try {\r\n    //             const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    //             const { datetime } = response.data;\r\n    //             const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    //             setTime(formattedTime);\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching time:', error);\r\n    //         }\r\n    //     };\r\n\r\n    //     const interval = setInterval(() => {\r\n    //         if (isIntervalActive) {\r\n    //             fetchTime();\r\n    //         }\r\n    //     }, 1000);\r\n\r\n    //     return () => {\r\n    //         clearInterval(interval);\r\n    //     };\r\n    // }, [isIntervalActive]);\r\n\r\n    const openSuccessModal = () => {\r\n        setShowSuccessModal(true);\r\n\r\n    };\r\n\r\n    const closeSuccessModal = () => {\r\n        setShowSuccessModal(false);\r\n        setIsDisabled(false);\r\n        setIsYesLoading(false);\r\n    };\r\n\r\n\r\n    // async function disableUserByUid(uid) {\r\n    //     try {\r\n    //         await updateDisabled(auth, uid, true);\r\n    //         console.log('User account disabled successfully');\r\n    //     } catch (error) {\r\n    //         console.error('Error disabling user account:', error);\r\n    //     }\r\n    // }\r\n\r\n    const handleEnable = useCallback(async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n        try {\r\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n            const updates = {\r\n                active: true,\r\n            };\r\n\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            await updateDoc(itemDocRef, updates);\r\n\r\n            const updatedData = data.map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, active: true };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            setData(updatedData);\r\n            const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            // console.log('Field updated successfully.');\r\n\r\n            const logData = {\r\n                message: `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`.toLowerCase(),\r\n                    'Account Enabled'.toLowerCase(),\r\n                    'Enabled'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n            };\r\n            addLogToCollection(logData);\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n            handleCloseEnableModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n        }\r\n    }, [data]);\r\n\r\n    const deleteDocument = async (collectionPath, customId) => {\r\n        const firestore = getFirestore();\r\n        const documentRef = doc(firestore, collectionPath, customId);\r\n\r\n        try {\r\n            await deleteDoc(documentRef);\r\n            console.log('Document deleted successfully.');\r\n        } catch (error) {\r\n            console.error('Error deleting document:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleDelete = useCallback(async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n\r\n\r\n        try {\r\n\r\n            const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n            const user = userCredential.user;\r\n\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            await deleteUser(user);\r\n            const logData = {\r\n                message: `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`,\r\n                timestamp: formattedTime,\r\n                colorScheme: false,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`.toLowerCase(),\r\n                    'Account Deleted'.toLowerCase(),\r\n                    'Deleted'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n            };\r\n            addLogToCollection(logData);\r\n\r\n\r\n            console.log('Account deleted successfully');\r\n\r\n            const signInCredential = await signInWithEmailAndPassword(\r\n                auth,\r\n                authEmail,\r\n                authPassword\r\n            );\r\n            const signedInUser = signInCredential.user;\r\n            signedInUser\r\n            deleteDocument('accounts', selectedItem.email);\r\n            // setData(updatedData);\r\n            // const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            navigate('/account-list')\r\n            // console.log('Field updated successfully.');\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n\r\n            handleCloseDeleteModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n        }\r\n    }, [data]);\r\n\r\n    const handleDisable = useCallback(async (id) => {\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n\r\n        try {\r\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n            const updates = {\r\n                active: false,\r\n            };\r\n\r\n            await updateDoc(itemDocRef, updates);\r\n\r\n            const updatedData = data.map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, active: false };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            setData(updatedData);\r\n            const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            // console.log('Field updated successfully.');\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            const logData = {\r\n                message: `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`,\r\n                timestamp: formattedTime,\r\n                colorScheme: false,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`.toLowerCase(),\r\n                    'Account Disabled'.toLowerCase(),\r\n                    'Disabled'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n\r\n            };\r\n            addLogToCollection(logData);\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n            handleCloseDisableModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n            setIsDisabled(false);\r\n            setIsSaveLoading(false);\r\n        }\r\n    }, [data]);\r\n\r\n    // Apply search filter to the data\r\n    const applySearchFilter = (data, searchInputValue) => {\r\n        if (!searchInputValue) {\r\n            return data;\r\n        }\r\n        const filteredData = data.filter((item) =>\r\n            item.email.toLowerCase().includes(searchInputValue.toLowerCase()) ||\r\n            item.name.toLowerCase().includes(searchInputValue.toLowerCase()) ||\r\n            item.typeDisplay.toLowerCase().includes(searchInputValue.toLowerCase())\r\n        );\r\n        return filteredData;\r\n    };\r\n\r\n\r\n\r\n    const handleSave = async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setIsDisabled(true);\r\n        setIsSaveLoading(true);\r\n        if (\r\n            isPasswordLengthLabel() === false ||\r\n            validateEmail() === false ||\r\n            inputName === ''\r\n        ) {\r\n            setTimeout(() => {\r\n                // Reset loading and disabled state\r\n                setIsLoading(false);\r\n                setIsDisabled(false);\r\n            }, 500);\r\n        } else {\r\n\r\n            if (inputEmail === selectedItem.email && inputPassword === selectedItem.pass) {\r\n\r\n\r\n                const documentRef = doc(db, 'accounts', selectedItem.id);\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime(formattedTime);\r\n\r\n                const updatedFields = {\r\n                    name: inputName,\r\n                    type: selectedType,\r\n                    typeDisplay: selectedTypeDisplay,\r\n                    lastUpdatedDate: formattedTime,\r\n                    // Add more fields as needed\r\n\r\n                };\r\n\r\n                try {\r\n\r\n                    await updateDoc(documentRef, updatedFields);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n\r\n\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime(formattedTime);\r\n\r\n                    const logData = {\r\n                        message: `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            selectedItem.email.toLowerCase(),\r\n                            selectedItem.name.toLowerCase(),\r\n                            inputName.toLowerCase(),\r\n                            name.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n                    }\r\n\r\n                    addLogToCollection(logData);\r\n\r\n                    const updatedData = data.map((item) => {\r\n                        if (item.id === id) {\r\n                            item.name = inputName;\r\n                            item.type = selectedType;\r\n                            item.typeDisplay = selectedTypeDisplay;\r\n                            item.lastUpdatedDate = formattedTime;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setData(updatedData);\r\n                    const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n                    setFilteredData(filteredData);\r\n                    // console.log('Field updated successfully.');\r\n                    // console.log('Document successfully updated!');\r\n                    handleCloseModal();\r\n                    setShowSuccessModal(true);\r\n                } catch (error) {\r\n                    console.error('Error updating document:', error);\r\n                }\r\n\r\n            }\r\n\r\n            else if (inputEmail === selectedItem.email && inputPassword !== selectedItem.pass) {\r\n\r\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n                const user = userCredential.user;\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime();\r\n\r\n                try {\r\n                    await updatePassword(user, inputPassword);\r\n\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime();\r\n                    // console.log('Password changed successfully');\r\n                    const userDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n\r\n\r\n                    const updatedFields = {\r\n                        email: inputEmail,\r\n                        name: inputName,\r\n                        type: selectedType,\r\n                        typeDisplay: selectedTypeDisplay,\r\n                        dateOfCreation: selectedItem.dateOfCreation,\r\n                        lastUpdatedDate: formattedTime,\r\n                        pass: inputPassword,\r\n                        active: true,\r\n\r\n                        // Add more fields as needed\r\n                    };\r\n                    // Perform setDoc operation\r\n                    await setDoc(userDocRef, updatedFields);\r\n\r\n                    const signInCredential = await signInWithEmailAndPassword(\r\n                        auth,\r\n                        authEmail,\r\n                        authPassword\r\n                    );\r\n\r\n                    const signedInUser = signInCredential.user;\r\n                    signedInUser\r\n\r\n\r\n                    // console.log(authEmail, authPassword);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n\r\n                    setTime(formattedTime);\r\n\r\n                    const logData = {\r\n                        message: `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`.toLowerCase(),\r\n                            'Password Changed'.toLowerCase(),\r\n                            'Password'.toLowerCase(),\r\n                            selectedItem.email.toLowerCase(),\r\n                            selectedItem.name.toLowerCase(),\r\n                            name.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n\r\n                    const updatedItem = {\r\n                        ...selectedItem,\r\n                        email: inputEmail,\r\n                        name: inputName,\r\n                        type: selectedType,\r\n                        typeDisplay: selectedTypeDisplay,\r\n                        lastUpdatedDate: formattedTime,\r\n                    };\r\n\r\n                    const updatedData = data.map((item) => {\r\n                        if (item.id === id) {\r\n                            item.name = inputName;\r\n                            item.type = selectedType;\r\n                            item.typeDisplay = selectedTypeDisplay;\r\n                            item.lastUpdatedDate = formattedTime;\r\n                            item.pass = inputPassword;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setData(updatedData);\r\n                    const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\r\n                    setFilteredData(filteredData);\r\n                    // console.log('Document set successfully');\r\n                    handleCloseModal();\r\n                    setShowSuccessModal(true);\r\n                } catch (error) {\r\n                    console.error('Error:', error);\r\n                }\r\n\r\n            }\r\n\r\n            else if (inputEmail !== selectedItem.email) {\r\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n                const user = userCredential.user;\r\n\r\n\r\n                // updateEmail(user, inputEmail)\r\n                //     .then(async () => {\r\n                //         // Email change successful\r\n                //         setIsDisabled(false);\r\n                //         setIsSaveLoading(false);\r\n                //         const documentRef = doc(db, 'accounts', selectedItem.email);\r\n\r\n                const oldDocumentRef = doc(db, 'accounts', selectedItem.email);\r\n                const newDocumentRef = doc(db, 'accounts', inputEmail);\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime(formattedTime);\r\n\r\n                try {\r\n                    // Get the data from the old document\r\n                    const documentSnapshot = await getDoc(oldDocumentRef);\r\n                    if (documentSnapshot.exists()) {\r\n                        const documentData = documentSnapshot.data();\r\n\r\n                        // Merge the updated fields with the existing document data\r\n\r\n                        // Create the new document with the desired ID and copy the merged data\r\n\r\n                        const updatedFields = {\r\n                            email: inputEmail,\r\n                            name: inputName,\r\n                            type: selectedType,\r\n                            typeDisplay: selectedTypeDisplay,\r\n                            dateOfCreation: selectedItem.dateOfCreation,\r\n                            lastUpdatedDate: formattedTime,\r\n                            pass: inputPassword,\r\n                            active: true,\r\n\r\n                            // Add more fields as needed\r\n                        };\r\n\r\n                        await setDoc(newDocumentRef, updatedFields);\r\n                        await deleteDoc(oldDocumentRef);\r\n                        // Optionally, delete the old document\r\n\r\n                        try {\r\n                            const userCredential = await createUserWithEmailAndPassword(auth, inputEmail, inputPassword);\r\n                            // console.log('User created successfully:', userCredential.user);\r\n\r\n                            setIsDisabled(false);\r\n                            setIsSaveLoading(false);\r\n\r\n                            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                            const { datetime } = response.data;\r\n                            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                            const year = moment(datetime).format('YYYY');\r\n                            const month = moment(datetime).format('MM');\r\n                            const monthWithDay = moment(datetime).format('MM/DD');\r\n                            const date = moment(datetime).format('YYYY/MM/DD');\r\n                            const day = moment(datetime).format('DD');\r\n                            const time = moment(datetime).format('HH:mm');\r\n                            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                            setTime(formattedTime);\r\n\r\n                            const logData = {\r\n                                message: `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`,\r\n                                timestamp: formattedTime,\r\n                                colorScheme: true,\r\n                                keywords: [\r\n                                    formattedTime.toLowerCase(),\r\n                                    `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`.toLowerCase(),\r\n                                    'Updated'.toLowerCase(),\r\n                                    'Email'.toLowerCase(),\r\n                                    selectedItem.email.toLowerCase(),\r\n                                    selectedItem.name.toLowerCase(),\r\n                                    inputEmail.toLowerCase(),\r\n                                    monthWithDay.toLowerCase(),\r\n                                    name.toLowerCase(),\r\n                                    year.toLowerCase(),\r\n                                    month.toLowerCase(),\r\n                                    day.toLowerCase(),\r\n                                    date.toLowerCase(),\r\n                                    time.toLowerCase(),\r\n                                    timeWithMinutesSeconds.toLowerCase(),\r\n                                ],\r\n                            }\r\n                            try {\r\n                                await deleteUser(user);\r\n                                // console.log('User authentication record deleted successfully.');\r\n\r\n\r\n\r\n                                setIsDisabled(false);\r\n                                setIsSaveLoading(false);\r\n\r\n                                const signInCredential = await signInWithEmailAndPassword(\r\n                                    auth,\r\n                                    authEmail,\r\n                                    authPassword\r\n                                );\r\n\r\n                                const signedInUser = signInCredential.user;\r\n                                signedInUser\r\n\r\n                                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                                const { datetime } = response.data;\r\n                                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                                setTime(formattedTime);\r\n\r\n                                const updatedItem = {\r\n                                    ...selectedItem,\r\n                                    email: inputEmail,\r\n                                    name: inputName,\r\n                                    type: selectedType,\r\n                                    typeDisplay: selectedTypeDisplay,\r\n                                    lastUpdatedDate: formattedTime,\r\n                                };\r\n\r\n                                const updatedData = data.map((item) =>\r\n                                    item.id === id ? updatedItem : item\r\n                                );\r\n                                setData(updatedData);\r\n                                const filteredData = applySearchFilter(updatedData, searchInputValue);\r\n                                setFilteredData(filteredData);\r\n                                // console.log(authEmail, authPassword);\r\n\r\n\r\n                            } catch (error) {\r\n                                console.error('Error deleting user authentication record:', error);\r\n                            }\r\n\r\n                            addLogToCollection(logData);\r\n                            handleCloseModal();\r\n                            setShowSuccessModal(true);\r\n\r\n                            // console.log('Document ID successfully changed!');\r\n                        } catch (error) {\r\n                            console.error('Error creating user:', error);\r\n                        }\r\n                    } else {\r\n                        console.error('Old document does not exist!');\r\n                    }\r\n\r\n                } catch (error) {\r\n                    console.error('Error changing document ID:', error);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n                }\r\n\r\n\r\n                // })\r\n                // .catch((error) => {\r\n                //     console.error('Error changing email:', error);\r\n                // });\r\n            }\r\n\r\n\r\n\r\n\r\n            else {\r\n                try {\r\n                    const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\r\n                    if (signInMethods.length > 0) {\r\n                        // Email already exists                        \r\n                        setIsDisabled(false);\r\n                        setIsSaveLoading(false);\r\n                        setIsEmailDuplicate(true);\r\n                        setEmailError(false);\r\n                        validateEmail(false);\r\n\r\n                        return;\r\n                    }\r\n\r\n\r\n                } catch (error) {\r\n                    const errorCode = error.code;\r\n                    const errorMessage = error.message;\r\n                    console.log('An error occurred while checking the email existence. Please try again later.');\r\n                    // console.log(errorCode, errorMessage);\r\n                    setIsLoading(false);\r\n                    setIsDisabled(false);\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n    };\r\n\r\n    const handleChangeEmailText = (text) => {\r\n        setInputEmail(text);\r\n    };\r\n\r\n\r\n\r\n    const isPasswordLengthLabel = () => {\r\n        return inputPassword.length >= 6;\r\n    };\r\n    // const handlePasswordChange = _.debounce((value) => {\r\n    //     setInputPassword(value);\r\n    // }, 50);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc'));\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                    setData(documents);\r\n                });\r\n\r\n                return () => unsubscribe();\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter(\r\n            (item) =>\r\n                item.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                item.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                item.typeDisplay.toLowerCase().includes(searchQuery.toLowerCase())\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce((text) => {\r\n        setSearchQuery(text);\r\n    }, 300);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    const showPopover = () => {\r\n        setShowNamePopover(true);\r\n    };\r\n\r\n    // Function to hide the Popover\r\n    const hidePopover = () => {\r\n        setShowNamePopover(false);\r\n    };\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#0642F4'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#0642F4'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n    return (\r\n        <NativeBaseProvider>\r\n\r\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#0642f4'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={0}\r\n                    borderBottomColor={'cyan.500'}\r\n\r\n                >\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen} />\r\n\r\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: logo,\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    {/* {showDrawerIcon && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    />} */}\r\n\r\n\r\n\r\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: logo2,\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n\r\n\r\n                    <View style={{ alignItems: 'center', flex: 1 }}>\r\n                        <QRCodeScanner />\r\n                    </View>\r\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n                    {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                        <Flex direction=\"row-reverse\">\r\n                            <Popover isOpen={showNamePopover} trigger={triggerProps => {\r\n                                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                    <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                                </Text>;\r\n                            }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\r\n                                <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                                    <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                        <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                            Logout\r\n                                        </Button>\r\n                                    </Popover.Body>\r\n                                </Popover.Content>\r\n                            </Popover>\r\n                        </Flex>\r\n                    </Box> */}\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <Box flex={[1]} flexDirection=\"row\" >\r\n                    {/* Sidebar */}\r\n                    {/* <SideDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    /> */}\r\n\r\n                    {/* Main Content */}\r\n                    <Box flex={1} flexGrow={1} minHeight={0}>\r\n                        {/* Main Content Content */}\r\n                        <Input ref={searchInput} onChangeText={handleSearch} placeholder=\"Search\" bgColor={'white'} />\r\n                        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n                            <Box height={'100%'}>\r\n\r\n                                <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                                    <Box borderWidth={1} borderColor=\"gray.200\" borderRadius={4} overflow=\"hidden\" display={['none', 'none', 'none', '', '', '']}>\r\n                                        <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor={'#0642F4'} >\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Email</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Name</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Type of Account</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Date of Creation</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Last Updated</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Status</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Operate</Text>\r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <PresenceTransition visible={true} initial={{\r\n                                        opacity: 0\r\n                                    }} animate={{\r\n                                        opacity: 1,\r\n                                        transition: {\r\n                                            duration: 250\r\n                                        }\r\n                                    }}>\r\n                                        {paginatedData.map((item) => (\r\n                                            <Box key={item.id} margin={[2, 2, 2, 0, 0, 0]} flexDirection={['column', 'column', 'column', 'row', 'row', 'row']} bgColor={item.active ? 'blue.200' : 'amber.500'} borderColor={'gray.200'} borderWidth={[2, 2, 2, 1, 1, 1]} paddingBottom={1} marginRight={0}>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Email</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.email}</Text>\r\n\r\n\r\n                                                    </Box>\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Name</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.name}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}  > Type of Account</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.typeDisplay}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Date of Creation</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.dateOfCreation}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Last Updated</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.lastUpdatedDate}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Status</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.active ? 'Enabled' : 'Disabled'}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Operate</Text>\r\n                                                        </Box>\r\n                                                        <HStack space={1} flex={[5, 5, 5, 1, 1, 1]}>\r\n                                                            <Button\r\n                                                                onPress={() => handleEdit(item.id)}\r\n                                                                flex={[1, 1, 1, 2, 2, 2]}\r\n                                                                padding={1}\r\n                                                                justifyContent='center'\r\n                                                                alignItems='center'\r\n                                                                flexDirection='row'>\r\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Edit</Text>\r\n                                                                <Icon as={<MaterialIcons name={\"edit\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                            </Button>\r\n                                                            {item.active ? (\r\n                                                                <Button onPress={() => handleOpenDisableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'amber'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Disable</Text>\r\n                                                                    <Icon as={<MaterialIcons name={\"block\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                                </Button>\r\n                                                            ) : (\r\n                                                                <Button onPress={() => handleOpenEnableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'success'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Enable</Text>\r\n                                                                    <Icon as={<MaterialIcons name={\"check-circle\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                                </Button>\r\n                                                            )}\r\n                                                            <Button onPress={() => handleOpenDeleteModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'error'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Delete</Text>\r\n                                                                <Icon as={<MaterialIcons name={\"delete\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                            </Button>\r\n                                                        </HStack>\r\n                                                    </Box>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n\r\n                                        ))}\r\n                                    </PresenceTransition>\r\n                                    <DataTable.Pagination\r\n                                        page={page}\r\n                                        numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                        onPageChange={(page) => setPage(page)}\r\n                                        label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                        optionsPerPage={optionsPerPage}\r\n                                        itemsPerPage={itemsPerPage}\r\n                                        setItemsPerPage={setItemsPerPage}\r\n                                        showFastPagination\r\n                                        optionsLabel={'Rows per page'}\r\n                                    />\r\n                                </DataTable>\r\n                            </Box>\r\n                            <Modal isOpen={modalVisible} onClose={handleCloseModal}>\r\n                                <Modal.Content>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header borderBottomWidth={0}>Edit Acccount</Modal.Header>\r\n                                    <Modal.Body>\r\n\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <VStack><Text>Email: </Text> <Input color={!isEmailDuplicate ? 'black' : 'red.500'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputEmail} ref={inputEmailRef} onChangeText={handleInputEmailChange} /></VStack>\r\n                                                {!validateEmail() && (\r\n                                                    <Text color={'#D22730'} bold>Invalid Email!</Text>\r\n                                                )}\r\n                                                {isEmailDuplicate && (\r\n                                                    <Text color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\r\n                                                )}\r\n                                                <VStack><Text>Name: </Text> <Input borderBottomColor={inputName !== '' ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputName} ref={inputNameRef} onChangeText={handleInputNameChange} /></VStack>\r\n                                                {inputName === '' && (\r\n                                                    <Text color={'#D22730'} bold>Empty Name!</Text>\r\n                                                )}\r\n                                                <VStack><Text>Password: </Text>\r\n                                                    <Input borderBottomColor={isPasswordLengthLabel() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputPassword} ref={inputPassRef} onChangeText={handleInputPassChange} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\r\n                                                        <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" />\r\n                                                    </Pressable>} />\r\n                                                </VStack>\r\n\r\n                                                <VStack><Text>Type of Account:</Text>\r\n                                                    <HStack space={1} justifyContent=\"center\" >\r\n                                                        <Button _hover={{ bgColor: 'booking' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountType4} bgColor={'booking' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Booking</Text></Button>\r\n\r\n                                                        <Button _hover={{ bgColor: 'staff' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountType3} bgColor={'staff' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Staff</Text></Button>\r\n\r\n                                                        <Button _hover={{ bgColor: 'admin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeAd} bgColor={'admin' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Admin</Text></Button>\r\n\r\n\r\n\r\n                                                    </HStack>\r\n                                                    <HStack space={1} justifyContent=\"center\" marginTop={1}>\r\n                                                        <Button _hover={{ bgColor: 'superadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeSpAd} bgColor={'superadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Super Admin</Text></Button>\r\n                                                        <Button _hover={{ bgColor: 'devadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeDevAd} bgColor={'devadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Dev Admin</Text></Button>\r\n                                                    </HStack>\r\n                                                </VStack>\r\n\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseModal} flex={1} padding={1} margin={1}>Close</Button>\r\n                                        <Button onPress={() => handleSave(selectedItem.id)} disabled={isDisabled} flex={1} padding={1} colorScheme={'success'} margin={1}>{isSaveLoading ? <Spinner color=\"white\" size={21} /> : 'Save'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={showDisableModal} onClose={handleCloseDisableModal}>\r\n                                <Modal.Content bgColor={'amber.500'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'amber.500'} borderBottomWidth={0} _text={{ color: 'white', }}>Disable Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'amber.500'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text color={'white'}>Email: {selectedItem.email}</Text>\r\n                                                <Text color={'white'}>Name: {selectedItem.name}</Text>\r\n                                                <Text color={'white'}>Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'amber.500'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleDisable(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={showDeleteModal} onClose={handleCloseDeleteModal}>\r\n                                <Modal.Content bgColor={'error.300'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'error.300'} borderBottomWidth={0} >Delete Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'error.300'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text >Email: {selectedItem.email}</Text>\r\n                                                <Text >Name: {selectedItem.name}</Text>\r\n                                                <Text >Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'error.300'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleDelete(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n\r\n                            <Modal isOpen={showEnableModal} onClose={handleCloseEnableModal}>\r\n                                <Modal.Content bgColor={'success.200'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'success.200'} borderBottomWidth={0}>Enable Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'success.200'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text>Email: {selectedItem.email}</Text>\r\n                                                <Text>Name: {selectedItem.name}</Text>\r\n                                                <Text>Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'success.200'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseEnableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleEnable(selectedItem.id)} colorScheme={'success'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                            <Modal isOpen={showSuccessModal} onClose={() => setShowSuccessModal(false)} size=\"lg\"  >\r\n                                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n                                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n                                    <Modal.Body >\r\n                                        <Text color=\"white\" textAlign={'center'}>The account update was successful.</Text>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n                                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowSuccessModal(false)}>\r\n                                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                        </ScrollView>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  PresenceTransition,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Title,\r\n  Content,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  VStack,\r\n  ScrollView,\r\n  SectionList,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Modal,\r\n  Divider,\r\n  Popover\r\n} from \"native-base\";\r\nimport {\r\n  FontAwesome,\r\n  Entypo,\r\n  MaterialIcons,\r\n  Ionicons,\r\n  Fontisto,\r\n  EvilIcons,\r\n  AntDesign,\r\n  MaterialCommunityIcons,\r\n  Feather,\r\n  FontAwesome5Brands,\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './../style.css';\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport { setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\nlet selectedScreen = 'ADD C-HUB ACCOUNT'\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AddAccount() {\r\n  const dispatch = useDispatch();\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const [isMobileView, setIsMobileView] = useState(false);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [show2, setShow2] = React.useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n  const [isSelectedLogs, setIsSelectedLogs] = useState(false);\r\n  const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(true);\r\n  const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\r\n  const [isSelected3, setIsSelected3] = useState(false);\r\n  const [isSelected4, setIsSelected4] = useState(false);\r\n\r\n  const [accountTypeAdmin, setAccountTypeAdmin] = useState(false);\r\n  const [accountTypeBooking, setAccountTypeBooking] = useState(false);\r\n  const [accountTypeSales, setAccountTypeSales] = useState(false);\r\n  const [accountTypeHamanasu, setAccountTypeHamanasu] = useState(false);\r\n  const [accountTypeApi, setAccountTypeApi] = useState(false);\r\n\r\n\r\n  const [nameVerify, setNameVerify] = useState(false);\r\n  const [emailVerify, setEmailVerify] = useState(false);\r\n  const [passwordVerify, setPasswordVerify] = useState(false);\r\n  const [confirmPasswordVerify, setConfirmPasswordVerify] = useState(false);\r\n  const [accountTypeVerify, setAccountTypeVerify] = useState(false);\r\n  const [isEmailDuplicate, setIsEmailDuplicate] = useState(false);\r\n  const [emailError, setEmailError] = useState(false);\r\n  // const [inputName, setInputName] = useState('');\r\n  // const [inputEmail, setInputEmail] = useState('');\r\n  // const [inputPassword, setInputPassword] = useState('');\r\n  // const [inputConfirmPassword, setInputConfirmPassword] = useState('');\r\n  const [typeOfAccount, setTypeOfAccount] = useState('');\r\n  const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const inputRefs = useRef([]);\r\n\r\n\r\n  const inputName = useRef(null);\r\n  const inputEmail = useRef(null);\r\n  const inputPassword = useRef(null);\r\n  const inputConfirmPassword = useRef(null);\r\n\r\n  const [passwordMatch, setPasswordMatch] = useState(false);\r\n  const [passwordMatchLabel, setPasswordMatchLabel] = useState(true);\r\n  const [passwordLengthLabel, setPasswordLengthLabel] = useState(false);\r\n  const [isNameEmpty, setIsNameEmpty] = useState(true);\r\n\r\n  const [formattedTime, setFormattedTime] = useState('');\r\n\r\n  const [time, setTime] = useState('');\r\n  const fetchTimeRef = useRef();\r\n  const [isIntervalActive, setIsIntervalActive] = useState(true);\r\n\r\n  const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n  }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\r\n\r\n\r\n\r\n\r\n  const SuccessModal = () => {\r\n    return <Center>\r\n      <Modal isOpen={showModal} onClose={closeModal} size=\"lg\"  >\r\n        <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n          <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n          <Modal.Body >\r\n\r\n            <Text textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\r\n          </Modal.Body>\r\n          <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n            <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={closeModal} _text={{ color: 'black', }}>\r\n              Ok\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </Center>;\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n  }, [typeOfAccount]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (!user) {\r\n        // navigation.navigate(\"Login\")\r\n        navigate(\"/Login\")\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const firebaseFirestore = getFirestore();\r\n\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const firestore = getFirestore();\r\n      const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const fetchTime = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n  //       const { datetime } = response.data;\r\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n  //       setTime(formattedTime);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching time:', error);\r\n  //     }\r\n  //   };\r\n  //   const interval = setInterval(fetchTime, 1000);\r\n  //   return () => clearInterval(interval);\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   const fetchTime = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n  //       const { datetime } = response.data;\r\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n  //       setTime(formattedTime);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching time:', error);\r\n  //     }\r\n  //   };\r\n\r\n  //   const interval = setInterval(() => {\r\n  //     if (isIntervalActive) {\r\n  //       fetchTime();\r\n  //     }\r\n  //   }, 1000);\r\n\r\n  //   return () => {\r\n  //     clearInterval(interval);\r\n  //   };\r\n  // }, [isIntervalActive]);\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n    setIsIntervalActive(false); // Pause the interval when the modal is opened\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setIsIntervalActive(true); // Resume the interval when the modal is closed\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleAddAccount = async () => {\r\n    setIsDisabled(true);\r\n    setIsLoading(true);\r\n    if (\r\n      passwordLengthLabel === false ||\r\n      passwordMatch === false ||\r\n      passwordMatchLabel === false ||\r\n      validateEmail() === false ||\r\n      isNameEmpty === true ||\r\n      typeOfAccount === ''\r\n    ) {\r\n      setTimeout(() => {\r\n        // Reset loading and disabled state\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n      }, 500);\r\n    } else {\r\n      try {\r\n        const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail.current?.value);\r\n        if (signInMethods.length > 0) {\r\n          // Email already exists\r\n          setIsEmailDuplicate(true);\r\n          setEmailError(false);\r\n          validateEmail(false);\r\n          setIsLoading(false);\r\n          setIsDisabled(false);\r\n          return;\r\n        }\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        await createUserWithEmailAndPassword(authForCreateUser, inputEmail.current.value, inputPassword.current.value)\r\n          .then((userCredential) => {\r\n\r\n            const user = userCredential.user;\r\n\r\n\r\n\r\n            try {\r\n\r\n              // setTime(formattedTime);\r\n\r\n              const customID = inputEmail.current.value; // Replace 'your-custom-id' with your desired custom ID\r\n              const docRef = doc(db, 'accounts', customID); // Replace 'myCollection' with the name of your desired collection\r\n              const logData = {\r\n                message: `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`,\r\n                timestamp: formattedTime,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`.toLowerCase(),\r\n                  'Account Added'.toLowerCase(),\r\n                  'Added'.toLowerCase(),\r\n                  inputName.current.value.toLowerCase(),\r\n                  typeOfAccountDisplay.toLowerCase(),\r\n                  name.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n                colorScheme: true,\r\n              };\r\n\r\n              setDoc(docRef, {\r\n                // Specify the data you want to add to the document\r\n                email: inputEmail.current?.value,\r\n                name: inputName.current?.value,\r\n                pass: inputPassword.current?.value,\r\n                type: typeOfAccount,\r\n                typeDisplay: typeOfAccountDisplay,\r\n                dateOfCreation: formattedTime,\r\n                lastUpdatedDate: formattedTime,\r\n                active: true,\r\n                // ...\r\n              });\r\n\r\n              addLogToCollection(logData);\r\n              console.log(logData);\r\n              console.log(formattedTime);\r\n              setIsLoading(false);\r\n              setIsDisabled(false);\r\n              handleClear();\r\n              openModal();\r\n\r\n              console.log('Document added with custom ID: ', customID);\r\n            } catch (error) {\r\n              console.error('Error adding document: ', error);\r\n            }\r\n\r\n\r\n\r\n\r\n            // Reset loading and disabled state\r\n\r\n\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.log('An error occurred during sign-up. Please try again later.');\r\n            console.log(error);\r\n            setIsLoading(false);\r\n            setIsDisabled(false);\r\n          });\r\n      } catch (error) {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log('An error occurred while checking the email existence. Please try again later.');\r\n        // console.log(errorCode, errorMessage);\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    const text = '';\r\n\r\n    inputName.current.value = \"\";\r\n    inputEmail.current.value = \"\";\r\n    inputPassword.current.value = \"\";\r\n    inputConfirmPassword.current.value = \"\";\r\n\r\n    setEmailError(false);\r\n    setIsEmailDuplicate(false);\r\n    setIsNameEmpty(true);\r\n\r\n    setPasswordLengthLabel(false);\r\n    setPasswordMatch(false);\r\n    setPasswordMatchLabel(true);\r\n\r\n    setTypeOfAccount('');\r\n    setTypeOfAccountDisplay('');\r\n    // setInputConfirmPassword('');\r\n    // setInputEmail('');\r\n    // setInputName('');\r\n    // setInputPassword('');\r\n\r\n\r\n  };\r\n\r\n  const registerInputRef = (index) => (ref) => {\r\n    inputRefs.current[index] = ref;\r\n  };\r\n\r\n  const handleToggleAccountTypeAdmin = () => {\r\n    const text = 'admin';\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Admin');\r\n  };\r\n\r\n  const handleToggleAccountTypeBooking = () => {\r\n    const text = 'booking';\r\n\r\n\r\n    setTypeOfAccount(text);\r\n\r\n    setTypeOfAccountDisplay('Booking');\r\n  };\r\n\r\n\r\n  const handleToggleAccountTypeSales = () => {\r\n    const text = 'sales';\r\n\r\n\r\n    setTypeOfAccount(text);\r\n\r\n    setTypeOfAccountDisplay('Sales');\r\n  };\r\n\r\n  const handleToggleAccountTypeHamanasu = () => {\r\n    const text = 'hamanasu';\r\n\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Hamanasu');\r\n  };\r\n\r\n\r\n  const handleToggleAccountTypeApi = () => {\r\n    const text = 'api';\r\n\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Api');\r\n  };\r\n\r\n  // const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n  //   navigation.navigate(\"LOGS\");\r\n  // }, []);\r\n\r\n  // const handleToggleAddAccount = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  // }, []);\r\n\r\n  // const handleToggleAccountList = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ACCOUNT LIST\");\r\n  // }, []);\r\n\r\n  // const handleToggleAddVehicle = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ADD NEW VEHICLE\");\r\n  // }, []);\r\n\r\n  // const handleVehicleList = useCallback(() => {\r\n  //   navigation.navigate(\"VEHICLE LIST\");\r\n  // }, []);\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\")\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate(\"/Login\")\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      // This will now always be a function\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n      listenForNameChange(documentId);\r\n    }\r\n  }, []);\r\n\r\n  const listenForNameChange = (documentId) => {\r\n    const userRef = doc(db, 'accounts', documentId);\r\n\r\n    const unsubscribe = onSnapshot(userRef, (doc) => {\r\n      if (doc.exists()) {\r\n        const name = doc.data().name;\r\n        const type = doc.data().type;\r\n        setName(name);\r\n        setType(type);\r\n        // Perform any necessary actions with the name value\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    });\r\n\r\n    // To stop listening for updates, you can call unsubscribe()\r\n    // unsubscribe();\r\n  };\r\n\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handlePasswordChange = () => {\r\n    // const inputPasswordValue = inputPassword.current?.value;\r\n    // const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    // const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    // setPasswordMatch(\r\n    //   inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    // );\r\n    // setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n    // setPasswordLengthLabel(inputPasswordValueLength >= 6);\r\n    handlePasswordStatus();\r\n  };\r\n\r\n  const handleConfirmPasswordChange = () => {\r\n    const inputPasswordValue = inputPassword.current?.value;\r\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    setPasswordMatch(\r\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    );\r\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n  };\r\n\r\n\r\n  const handlePasswordStatus = () => {\r\n    const inputPasswordValue = inputPassword.current?.value;\r\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    setPasswordMatch(\r\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    );\r\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n    setPasswordLengthLabel(inputPasswordValueLength >= 6);\r\n\r\n  };\r\n\r\n  // const isPasswordMatch = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n  //   return (\r\n  //     inputPasswordValue === inputConfirmPasswordValue &&\r\n  //     inputPasswordValueLength >= 6\r\n  //   );\r\n  // };\r\n\r\n  // const isAccountType = () => {\r\n  //   return accountTypeDevAd || accountTypeSpAd || accountTypeAd || accountType3 || accountType4 === true;\r\n  // };\r\n\r\n  // const isPasswordMatchLabel = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n  //   return inputPassword.current?.value === inputConfirmPassword.current?.value;\r\n  // };\r\n\r\n  // const isPasswordLengthLabel = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n  //   return inputPasswordValueLength >= 6;\r\n  // };\r\n\r\n\r\n  const handleEmailChange = () => {\r\n    setIsEmailDuplicate(false);\r\n    handleEmailSubmit();\r\n  };\r\n\r\n  const handleNameChange = () => {\r\n    setIsNameEmpty(inputName.current?.value === '')\r\n  };\r\n\r\n\r\n  const validateEmail = () => {\r\n    const emailValue = inputEmail.current?.value;\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    const isValid = emailRegex.test(emailValue);\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleEmailSubmit = (value) => {\r\n    setEmailError(validateEmail(value));\r\n\r\n    if (emailError) {\r\n      // console.log(emailError);\r\n      // setEmailError(validateEmail());\r\n    } else {\r\n\r\n    }\r\n  };\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(auth).then(() => {\r\n      // navigation.navigate('Login');\r\n      navigate(\"/Login\")\r\n      setEmail('');\r\n      setName('');\r\n    }).catch((error) => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const handleScreenResize = () => {\r\n  //     const screenWidth = Dimensions.get('window').width;\r\n  //     setIsMobileView(screenWidth < 1200);\r\n  //   };\r\n\r\n  //   // Initial check on component mount\r\n  //   handleScreenResize();\r\n\r\n  //   // Listen for screen dimension changes\r\n  //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n  //   // Cleanup event listener on component unmount\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleScreenResize);\r\n  //   };\r\n  // }, []);\r\n\r\n  const sidebarListData = [{\r\n    title: \"VEHICLE INFORMATION INPUT\",\r\n    data: [\"Add New Vehicle\", \"Vehicle List\",]\r\n  },];\r\n\r\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n  const showPopover = () => {\r\n    setShowNamePopover(true);\r\n  };\r\n\r\n  // Function to hide the Popover\r\n  const hidePopover = () => {\r\n    setShowNamePopover(false);\r\n  };\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#0642F4'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#0642F4'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n  return (\r\n    <NativeBaseProvider>\r\n      <SuccessModal />\r\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#0642f4'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={0}\r\n          borderBottomColor={'cyan.500'}\r\n\r\n        >\r\n\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen} />\r\n\r\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          {/* {showDrawerIcon && <MobileViewDrawer\r\n            selectedScreen={selectedScreen}\r\n          />} */}\r\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n            <FastImage\r\n              source={{\r\n                uri: logo2,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n\r\n          <View style={{ alignItems: 'center', flex: 1 }}>\r\n            <QRCodeScanner />\r\n          </View>\r\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <Box flex={[1]} flexDirection=\"row\" >\r\n\r\n\r\n          {/* Main Content */}\r\n          <Box flex={1} flexGrow={1} minHeight={0}>\r\n            {/* Main Content Content */}\r\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n\r\n              {/* <AddAccount/> */}\r\n\r\n              <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" >\r\n\r\n\r\n                <Box bgColor='#A6BCFE' w='100%' h='100%' margin={1}>\r\n                  <Center flex={1}>\r\n                    <Center px=\"3\">\r\n\r\n\r\n                      <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n                        <Text marginTop={5} marginBottom={1} fontSize={[12, 14, 16]} color={'white'} bold={'center'}>ADD ACCOUNT FOR REAL MOTOR JAPAN CONTROL HUB</Text>\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputName} onSubmitEditing={handleAddAccount} onChangeText={handleNameChange} borderColor={'white'} borderBottomColor={!isNameEmpty ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<AntDesign name=\"idcard\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Name\" placeholderTextColor='white' color='white' />\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputEmail} onChangeText={handleEmailChange} onSubmitEditing={handleAddAccount} color={!isEmailDuplicate ? 'white' : 'red.500'} borderColor={'white'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' />\r\n\r\n\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordLengthLabel ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handlePasswordChange} fontSize='16' borderColor={'white'} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\r\n                          <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n                        </Pressable>} placeholder=\"Password\" placeholderTextColor='gray' color='white' />\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputConfirmPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordMatch ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handleConfirmPasswordChange} fontSize='16' borderColor={'white'} type={show2 ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show2 ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow2(!show2)}>\r\n                          <Icon as={<MaterialIcons name={show2 ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n                        </Pressable>} placeholder=\"Confirm Password\" placeholderTextColor='white' color='white' />\r\n                        {!validateEmail() && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Invalid Email!</Text>\r\n                        )}\r\n                        {isEmailDuplicate && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\r\n                        )}\r\n                        {!passwordLengthLabel && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Password must be at least 6 characters or above!</Text>\r\n                        )}\r\n                        {!passwordMatchLabel && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Passwords do not match!</Text>\r\n                        )}\r\n\r\n                        <Text fontSize={16} color={'white'} bold>ACCOUNT TYPE:                                                             </Text>\r\n                        <Box borderColor={typeOfAccount !== '' ? 'green.300' : 'red.500'} borderWidth={2}>\r\n                          <Flex wrap=\"wrap\" flexDir={'row'} justifyContent=\"center\" space={1}>\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'hamanasu' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeHamanasu}\r\n                              bgColor={typeOfAccount == 'hamanasu' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Hamanasu</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'booking' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeBooking}\r\n                              bgColor={typeOfAccount == 'booking' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Booking</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'sales' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeSales}\r\n                              bgColor={typeOfAccount == 'sales' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Sales</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'admin' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeAdmin}\r\n                              bgColor={typeOfAccount == 'admin' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Admin</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'api' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeApi}\r\n                              bgColor={typeOfAccount == 'api' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>API</Text>\r\n                            </Button>\r\n                          </Flex>\r\n                        </Box>\r\n                        <HStack space={1} justifyContent=\"center\" marginBottom={5}>\r\n                          <Button _hover={{ bgColor: '#D9D9D9', }} _pressed={{ bgColor: '#D9D9D9', }} _focus={{ bgColor: '#D9D9D9', }} bgColor='warmGray.200' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                            base: 130,\r\n                            md: 130,\r\n                            sm: 130,\r\n                          }} onPress={handleClear} ><Text style={{ color: 'gray', }}>Clear</Text></Button>\r\n                          <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                            base: 130,\r\n                            md: 130,\r\n                            sm: 130,\r\n                          }} onPress={handleAddAccount} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Add Acccount</Text>}</Button>\r\n\r\n                        </HStack>\r\n\r\n\r\n                      </Stack>\r\n\r\n                    </Center>\r\n\r\n\r\n                  </Center>\r\n\r\n\r\n                </Box>\r\n\r\n              </Box>\r\n\r\n            </ScrollView>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </NativeBaseProvider>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  Image as NativeImage,\r\n  Input,\r\n  Modal,\r\n  NativeBaseProvider,\r\n  Popover,\r\n  Pressable,\r\n  Spinner,\r\n  Text,\r\n  VStack,\r\n  useBreakpointValue,\r\n  TextArea,\r\n  InputRightAddon,\r\n  InputGroup,\r\n  Select,\r\n  CheckIcon,\r\n  ScrollView,\r\n  PresenceTransition,\r\n  Drawer,\r\n  InputLeftAddon,\r\n  Heading,\r\n  FormControl,\r\n  WarningOutlineIcon\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useCallback, useMemo, useLayoutEffect } from 'react';\r\nimport { Dimensions, TouchableOpacity, StyleSheet, Platform, View } from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject, } from 'firebase/storage';\r\nimport { DragSortableView } from \"react-native-drag-sort\";\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport SelectDropdown from 'react-native-select-dropdown';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { cloneDeep } from 'lodash';\r\nimport ImageMarker, { Position } from \"react-native-image-marker\";\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\n\r\n\r\nimport {\r\n  // setModelData,\r\n  setMakeData,\r\n  setIsLoading,\r\n  setSelectedImages,\r\n  setIsAddPhotoVisible,\r\n  setAddAnotherImages,\r\n  setLoginName,\r\n  setDeleteImageVisible,\r\n  setExpenseNameData,\r\n  setPaidToData,\r\n  setCurrentDate,\r\n  setSupplyChainsCostsData,\r\n  setSelectedExpenseName,\r\n  setSelectedPaidTo,\r\n  setLoadingModalVisible,\r\n  setIsSuccessModalOpen,\r\n  setIsUpdateSuccessModalOpen\r\n\r\n} from './redux/store'\r\n\r\n\r\nimport \"setimmediate\";\r\n\r\n\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css'; // Import a CSS effect for the lazy loading transition\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\n\r\nimport { AutocompleteDropdown, AutocompleteDropdownContextProvider } from 'react-native-autocomplete-dropdown';\r\nimport { nanoid } from 'nanoid';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst { width } = Dimensions.get('window');\r\n\r\n\r\nconst childrenWidth = 76;\r\nconst childrenHeight = 76;\r\nconst marginChildrenTop = 7;\r\nconst marginChildrenBottom = 0;\r\n\r\nlet globalJpyToUsd = '';\r\nlet globalUsdToJpy = '';\r\n\r\nlet globalSupplyChainCostsData = [];\r\nlet globalSelectedExpenseName = '';\r\nlet globalSupplyChainCostsAmount = 0;\r\nlet globalSelectedPaidTo = '';\r\nlet globalModelDataVariable = [];\r\nlet globalMakeDataVariable = [];\r\nlet globalRegYearDataVariable = [];\r\nlet globalPortDataVariable = [];\r\nlet globalSalesDataVariable = [];\r\nlet globalBuyerDataVariable = [];\r\nlet globalTransmissionDataVariable = [];\r\nlet globalExteriorColorDataVariable = [];\r\nlet globalFuelDataVariable = [];\r\nlet globalDriveTypeDataVariable = [];\r\nlet globalBodyTypeDataVariable = [];\r\nlet globalSelectedImages = [];\r\nlet globalVehicleFolderName = '';\r\nlet selectedScreen = 'ADD NEW VEHICLE'\r\nlet globalReferenceNumber = '';\r\nlet globalSPCSelectedDate = '';\r\nlet globalFobPrice = '';\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst UpdateSuccessModal = ({ onClose, bodyText, headerText }) => {\r\n\r\n  const isUpdateSuccessModalOpen = useSelector((state) => state.isUpdateSuccessModalOpen);\r\n\r\n  return (\r\n    <Modal isOpen={isUpdateSuccessModalOpen} onClose={onClose} >\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text textAlign={'center'} color={'#102A43'} bold>\r\n            😊😎 Success! 😎😊\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          justifyContent={'center'}\r\n          alignItems={'center'}\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              {headerText}\r\n              {/* Vehicle Added! */}\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              {bodyText}\r\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UploadSuccessModal = ({ onClose, bodyText, headerText }) => {\r\n\r\n  const isSuccessModalOpen = useSelector((state) => state.isSuccessModalOpen);\r\n\r\n  return (\r\n    <Modal isOpen={isSuccessModalOpen} onClose={onClose} >\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text textAlign={'center'} color={'#102A43'} bold>\r\n            😊😎 Success! 😎😊\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          justifyContent={'center'}\r\n          alignItems={'center'}\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              {headerText}\r\n              {/* Vehicle Added! */}\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              {bodyText}\r\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst LoadingModal = () => {\r\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n  return (\r\n\r\n    <Box\r\n      position=\"absolute\"\r\n      top={0}\r\n      bottom={0}\r\n      left={0}\r\n      right={0}\r\n      backgroundColor=\"rgba(0, 0, 0, 0.5)\"\r\n      flex={1}\r\n      display={loadingModalVisible ? '' : 'none'}\r\n    >\r\n      {/* Content within the modal */}\r\n      <Center flex={1}>\r\n        <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n          <Spinner size=\"lg\" color=\"white\" />\r\n          <Text color={'white'} selectable={false}>Loading, please wait!</Text>\r\n        </Box>\r\n      </Center>\r\n    </Box>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedExpenseName}\r\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedExpenseName = value\r\n      dispatch(setSelectedExpenseName(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Expense Name\"\r\n    placeholder=\"Choose Expense Name\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {expenseNameData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n\r\n\r\n};\r\nconst SelectPaidTo = ({ paidToIsError, }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedPaidTo}\r\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedPaidTo = value\r\n      dispatch(setSelectedPaidTo(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Paid To\"\r\n    placeholder=\"Choose Paid To\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {paidToData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n    ;\r\n};\r\n\r\n\r\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\r\n\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const handleModalCalendarOpen = () => {\r\n    setModalCalendarVisible(true);\r\n  };\r\n\r\n  const handleModalCalendarClose = () => {\r\n    setModalCalendarVisible(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <Pressable onPress={handleModalCalendarOpen} flex={3}>\r\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n      </Pressable>\r\n\r\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n        <Modal.CloseButton />\r\n        <Modal.Content>\r\n          <Box height={'full'} flex={1}>\r\n\r\n            <Calendar\r\n              onDayPress={useCallback(day => {\r\n                setSelectedDate(day.dateString);\r\n                // console.log(day.dateString);\r\n                globalSPCSelectedDate = day.dateString;\r\n                handleModalCalendarClose();\r\n              }, [])}\r\n              markedDates={{\r\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n              }}\r\n              renderArrow={(direction) => (\r\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n              )}\r\n              enableSwipeMonths={true}\r\n              initialDate={selectedDate}\r\n              showSixWeeks />\r\n\r\n          </Box>\r\n\r\n        </Modal.Content>\r\n\r\n      </Modal></>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst SupplyChainsCosts = ({\r\n  handleAddExpenseNameTextChange,\r\n  textAreaAddExpenseName,\r\n  inputExpenseAmount,\r\n  handleInputExpenseAmountChange,\r\n  handleAddPaidToTextChange,\r\n  paidToData,\r\n  inputCarNotes,\r\n\r\n}) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const [sccData, setSccData] = useState([]);\r\n  const currentDate = useSelector((state) => state.currentDate);\r\n  const [supplyChainsCostsModalVisible, setSupplyChainsCostsModalVisible] = useState(false);\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n\r\n  const [clearModalVisible, setClearModalVisible] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\r\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\r\n  const [paidToIsError, setPaidToIsError] = useState(false);\r\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\r\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\r\n  const selectExpenseNameRef = useRef(null);\r\n  const selectPaidToRef = useRef(null);\r\n\r\n\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsOpen = () => {\r\n    setSupplyChainsCostsModalVisible(true);\r\n  };\r\n\r\n  const handleModalSupplyChainsCostsClose = () => {\r\n    setSupplyChainsCostsModalVisible(false);\r\n    inputExpenseAmount.current?.clear();\r\n    globalSelectedExpenseName = '';\r\n    setSelectResetKey(nanoid());\r\n    globalSelectedPaidTo = '';\r\n    setSelectedDate(currentDate);\r\n    globalSPCSelectedDate = currentDate;\r\n    dispatch(setSelectedExpenseName(''));\r\n    dispatch(setSelectedPaidTo(''));\r\n    setInputAmountIsError(false);\r\n    setExpenseNameIsError(false);\r\n    setPaidToIsError(false);\r\n  };\r\n\r\n  const handleClearModalOpen = () => {\r\n    setClearModalVisible(true);\r\n  };\r\n\r\n  const handleClearModalClose = () => {\r\n    setClearModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const amounts = supplyChainsCostsData.map((item) => {\r\n      const expenseName = Object.keys(item)[0];\r\n      const expenseData = item[expenseName];\r\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n    });\r\n\r\n    // Use reduce to add up all the amounts\r\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n    const formattedTotalAmount = totalAmount.toLocaleString();\r\n    setTotalAmount(formattedTotalAmount);\r\n    globalSupplyChainCostsAmount = formattedTotalAmount;\r\n\r\n  }, [supplyChainsCostsData]);\r\n\r\n  const handleSave = useCallback(() => {\r\n\r\n\r\n\r\n    if (inputExpenseAmount.current?.value == ''\r\n      || inputExpenseAmount.current?.value == 0\r\n      || globalSelectedExpenseName == ''\r\n      || globalSelectedPaidTo == ''\r\n    ) {\r\n\r\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\r\n        setInputAmountIsError(true);\r\n      }\r\n\r\n      if (globalSelectedExpenseName == '') {\r\n        setExpenseNameIsError(true);\r\n      }\r\n\r\n      if (globalSelectedPaidTo == '') {\r\n        setPaidToIsError(true);\r\n      }\r\n    }\r\n\r\n    else {\r\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\r\n\r\n      if (existingIndex !== -1) {\r\n        // If an entry with the same expense name exists, update it\r\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\r\n        updatedData[existingIndex][globalSelectedExpenseName] = {\r\n          expenseName: globalSelectedExpenseName,\r\n          amount: inputExpenseAmount.current?.value,\r\n          date: globalSPCSelectedDate,\r\n          paidName: globalSelectedPaidTo,\r\n        };\r\n        globalSupplyChainCostsData = updatedData;\r\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n\r\n      } else {\r\n        setInputAmountIsError(false);\r\n        setExpenseNameIsError(false);\r\n        setPaidToIsError(false);\r\n        // If no entry with the same expense name exists, add a new entry\r\n        const newData = {\r\n          [globalSelectedExpenseName]: {\r\n            expenseName: globalSelectedExpenseName,\r\n            amount: inputExpenseAmount.current?.value,\r\n            date: globalSPCSelectedDate,\r\n            paidName: globalSelectedPaidTo,\r\n          },\r\n        };\r\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\r\n        console.log(globalSupplyChainCostsData);\r\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\r\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\r\n        setSelectResetKey(nanoid());\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const handleEditPress = useCallback((item) => {\r\n    console.log(item.amount);\r\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\r\n    dispatch(setSelectedExpenseName(item.expenseName));\r\n    globalSelectedExpenseName = item.expenseName;\r\n    dispatch(setSelectedPaidTo(item.paidName));\r\n    globalSelectedPaidTo = item.paidName;\r\n    globalSPCSelectedDate = item.date;\r\n    setSelectedDate(item.date);\r\n  }, [])\r\n\r\n\r\n  const handleDeleteItem = (expenseName) => {\r\n    // Find the index of the item to be deleted\r\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\r\n\r\n    if (itemIndex !== -1) {\r\n      // Create a copy of the data array and remove the item at the found index\r\n      const newData = [...globalSupplyChainCostsData];\r\n      newData.splice(itemIndex, 1);\r\n\r\n      // Update the state with the new array\r\n      dispatch(setSupplyChainsCostsData(newData));\r\n      globalSupplyChainCostsData = newData;\r\n    }\r\n  };\r\n\r\n  const handleFirstModalClose = () => {\r\n    setSupplyChainsCostsModalVisible(false);\r\n\r\n  };\r\n  const handleFirstModalOpen = () => {\r\n    setSupplyChainsCostsModalVisible(true);\r\n\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        borderRadius={3}\r\n        flex={1}\r\n        onPress={handleModalSupplyChainsCostsOpen}\r\n        variant={'outline'}\r\n        _text={{ color: 'black', }}\r\n        leftIcon={<MaterialIcons name=\"payments\" size={20} color=\"black\" />}>\r\n        <Text>Supply Chains Costs: ¥{totalAmount}</Text>\r\n      </Button>\r\n\r\n      <Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\r\n        <Modal.Content bgColor={'white'} w={'50%'} h={'auto'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header bgColor={'#7B9CFF'}>\r\n            <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\r\n\r\n\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Box height={'full'}>\r\n              <Box paddingBottom={5}>\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\r\n\r\n                    <SupplyChainsCostsSortAndAddModal\r\n                      docName='ExpenseName'\r\n                      handleAddTextChange={handleAddExpenseNameTextChange}\r\n                      textAreaAdd={textAreaAddExpenseName}\r\n                      title='Expense Name'\r\n                      dataName={'expenseName'}\r\n                      databaseInit={projectExtensionFirestore}\r\n                      headerText=\"Rearrange/Add Expense Name\"\r\n                      data={expenseNameData}\r\n                      handleFirstModalClose={handleFirstModalClose}\r\n                      handleFirstModalOpen={handleFirstModalOpen}\r\n                    />\r\n                  </Box>\r\n\r\n                  <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\r\n                  {/* <Select\r\n                    // ref={selectExpenseNameRef}\r\n                    key={`expenseName${resetKey}`}\r\n                    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n                    flex={3}\r\n                    onValueChange={(value) => {\r\n                      globalSelectedExpenseName = value\r\n                    }}\r\n                    accessibilityLabel=\"Choose Expense Name\"\r\n                    placeholder=\"Choose Expense Name\"\r\n                    _selectedItem={{\r\n                      bg: \"teal.600\",\r\n                      endIcon: <CheckIcon size=\"5\" />\r\n                    }}>\r\n                    {expenseNameData.map((item) => (\r\n\r\n                      <Select.Item key={item} label={item} value={item} />\r\n\r\n                    ))}\r\n                  </Select> */}\r\n\r\n\r\n                </Box>\r\n\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1} >Amount</Text>\r\n                  </Box>\r\n                  <Input\r\n                    borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\r\n                    flex={3}\r\n                    ref={inputExpenseAmount}\r\n                    onChangeText={handleInputExpenseAmountChange}\r\n                    placeholder=\"Amount\"\r\n                    bgColor={'white'}\r\n                    placeholderTextColor={'muted.400'}\r\n                    InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\r\n                </Box>\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\r\n                  </Box>\r\n\r\n                  <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\r\n                </Box>\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\r\n\r\n\r\n                    <SupplyChainsCostsSortAndAddModal\r\n                      docName='PaidTo'\r\n                      handleAddTextChange={handleAddPaidToTextChange}\r\n                      textAreaAdd={textAreaAddExpenseName}\r\n                      title='Paid To'\r\n                      dataName={'paidTo'}\r\n                      databaseInit={projectExtensionFirestore}\r\n                      headerText=\"Rearrange/Add Paid To\"\r\n                      data={paidToData}\r\n                      handleFirstModalClose={handleFirstModalClose}\r\n                      handleFirstModalOpen={handleFirstModalOpen}\r\n                    />\r\n\r\n                  </Box>\r\n\r\n                  <SelectPaidTo paidToIsError={paidToIsError} />\r\n                </Box>\r\n\r\n                <Button\r\n                  onPress={handleSave}\r\n                  colorScheme={'success'}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                  margin={1}\r\n                  flex={1}\r\n                  width={'40%'}\r\n                  alignSelf={'center'}\r\n                  leftIcon={<MaterialIcons name='add' color='white' size={20} />}\r\n                >\r\n                  ADD\r\n                </Button>\r\n              </Box>\r\n\r\n              <Box>\r\n                <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\r\n                </Box>\r\n                {supplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n\r\n                  return (\r\n                    <Box key={index} flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\r\n                      justifyContent={'center'} alignItems={'center'}>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      <Box flex={1} marginLeft={1} flexDir={'row'}>\r\n\r\n                        <Pressable flex={1} margin={1} onPress={() => handleEditPress(expenseData)}>\r\n                          {({\r\n                            isHovered,\r\n                            isFocused,\r\n                            isPressed\r\n                          }) => {\r\n                            return <Box flex={1} bgColor={isHovered ? 'primary.700' : 'primary.500'} borderRadius={3}>\r\n                              <Text flex={1} textAlign={'center'} color={'white'}>Edit</Text>\r\n                            </Box>\r\n                          }}\r\n                        </Pressable>\r\n\r\n                        <Pressable flex={1} margin={1} onPress={() => handleDeleteItem(expenseData.expenseName)}>\r\n                          {({\r\n                            isHovered,\r\n                            isFocused,\r\n                            isPressed\r\n                          }) => {\r\n                            return <Box flex={1} bgColor={isHovered ? 'error.800' : 'error.500'} borderRadius={3}>\r\n                              <Text flex={1} textAlign={'center'} color={'white'}>Delete</Text>\r\n                            </Box>\r\n                          }}\r\n                        </Pressable>\r\n                      </Box>\r\n                    </Box>\r\n                  );\r\n                })}\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n\r\n          </Modal.Body>\r\n\r\n\r\n          <HStack space={5} width={'full'} justifyContent={'space-between'}>\r\n            <Box flex={4} />\r\n            <Button\r\n              onPress={handleModalSupplyChainsCostsClose}\r\n              colorScheme={'gray'}\r\n              size={'sm'}\r\n              borderRadius={5}\r\n              margin={1}\r\n              flex={1}\r\n            >\r\n              Close\r\n            </Button>\r\n          </HStack>\r\n\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n        <Modal.Content bgColor={'amber.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'amber.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'amber.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'amber.600'} bold>\r\n                Warning!\r\n              </Text>\r\n              <Text color={'amber.600'}>\r\n                Are you sure you want to clear?\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleClearModalClose}\r\n                colorScheme={'warmGray'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button\r\n                onPress={() => {\r\n\r\n                }}\r\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                Clear\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = projectControlAuth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nconst storage = getStorage(projectExtensionFirebase);\r\n\r\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\r\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n\r\n  const handleModalDeleteOpen = () => {\r\n    setModalDeleteImagesVisible(true);\r\n  };\r\n\r\n  const handleModalDeleteClose = () => {\r\n    setModalDeleteImagesVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        position=\"absolute\"\r\n        top={0}\r\n        right={0}\r\n        bg=\"error.500\"\r\n        borderRadius={3}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        display={isAddPhotoVisible ? 'none' : 'block'}\r\n      >\r\n        <Pressable onPress={handleModalDeleteOpen} flex={1}>\r\n          <Icon as={<Ionicons name=\"trash-sharp\" />} size={5} color=\"white\" cursor={'pointer'} />\r\n        </Pressable>\r\n      </Box>\r\n\r\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\r\n        <Modal.Content bgColor={'error.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear Images\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'error.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.400'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.500'} bold>\r\n                Alert!\r\n              </Text>\r\n              <Text color={'danger.500'}>\r\n                Are you sure you want to clear <Text color={'danger.500'} bold>{selectedImages.length} </Text>selected image(s)?\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalDeleteClose} colorScheme={'warmGray'} flex={1} size={'sm'} borderRadius={5}>\r\n                No\r\n              </Button>\r\n              <Button onPress={handleClearImages} flex={1} size={'sm'} colorScheme={'error'} borderRadius={5}>\r\n                Clear Images\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\r\n  const dispatch = useDispatch();\r\n  const { width } = Dimensions.get('window');\r\n\r\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  const [boolean, setBoolean] = useState(true);\r\n  const selectedImages = useSelector((state) => state.selectedImages);\r\n  // const [selectedImages, setSelectedImages] = useState([]);\r\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\r\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\r\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\r\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\r\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n  const [scrollEnabled, setscrollEnabled] = useState(true);\r\n  const [isEnterEdit, setisEnterEdit] = useState(false);\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setIsCursorLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    dropdown: {\r\n      margin: 16,\r\n      height: 50,\r\n      borderBottomColor: 'gray',\r\n      borderBottomWidth: 0.5,\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n      fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n      height: 40,\r\n      fontSize: 16,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 20,\r\n\r\n    },\r\n    txt: {\r\n      fontSize: 18,\r\n      lineHeight: 24,\r\n      padding: 5\r\n    },\r\n    sort: {\r\n    },\r\n    item_children: {\r\n      width: 90,\r\n      height: 90,\r\n      backgroundColor: 'black',\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    item_delete_icon: {\r\n      width: 14,\r\n      height: 14,\r\n      position: \"absolute\",\r\n      right: 1,\r\n      top: 1\r\n    },\r\n    item_icon: {\r\n      width: 90,\r\n      height: 90,\r\n      resizeMode: \"contain\",\r\n      position: \"absolute\"\r\n    }\r\n  });\r\n\r\n  const handleImageAddToSelection = async () => {\r\n    dispatch(setDeleteImageVisible(true));\r\n    if (selectedImages.length === 40) {\r\n      return; // Limit reached, do not add a new image\r\n    }\r\n\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Filter out images larger than 10MB\r\n      const newImages = [...selectedImages];\r\n      const promises = response.assets.map(async (asset) => {\r\n        const file = await fetch(asset.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          const exists = newImages.some((image) => image.uri === asset.uri);\r\n          if (!exists) {\r\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\r\n          }\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      });\r\n\r\n      await Promise.all(promises);\r\n\r\n      const limitedImages = newImages.slice(0, 40);\r\n      dispatch(setSelectedImages(limitedImages));\r\n      globalSelectedImages = limitedImages;\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      // limitedImages.forEach((image) => {\r\n      //   console.log(`File size: ${image.fileSize}`);\r\n      // });\r\n\r\n    } catch (error) {\r\n      console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n  const reloadData = useCallback(() => {\r\n    if (selectedImages.length > 0) {\r\n      // ... Logic to reload data using selectedImages and width\r\n\r\n      // Assuming your logic has updated selectedImages, you can directly use it here\r\n      const updatedSelectedImages = [...selectedImages];\r\n\r\n      // Dispatch the updatedSelectedImages array to the state\r\n      dispatch(setSelectedImages(updatedSelectedImages));\r\n    }\r\n\r\n  }, [widthState]);\r\n\r\n  useEffect(() => {\r\n    const handleWidthChange = ({ window }) => {\r\n      setWidthState(window.width);\r\n    };\r\n\r\n    Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n    return () => {\r\n      Dimensions.removeEventListener('change', handleWidthChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, [reloadData]);\r\n\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    setModalDeleteImagesVisible(false);\r\n    // dispatch(setSelectedImages([]));\r\n    // globalSelectedImages = [];\r\n    // dispatch(setIsAddPhotoVisible(true));\r\n    // dispatch(setAddAnotherImages(false));\r\n    // dispatch(setDeleteImageVisible(true));\r\n    handleClearImagesExtra();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const renderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleImageSelection = async () => {\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40,\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Remove duplicates from the selected images\r\n      const uniqueImages = response.assets.filter(\r\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\r\n      );\r\n\r\n      // Filter out images larger than 10MB\r\n      const filteredImages = [];\r\n      const imageOrder = [];\r\n      for (let index = 0; index < uniqueImages.length; index++) {\r\n        const image = uniqueImages[index];\r\n        const file = await fetch(image.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          filteredImages.push(image);\r\n          imageOrder.push(index);\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      }\r\n\r\n\r\n      // Sort the filtered images based on their original order\r\n      const sortedImages = filteredImages.sort((a, b) => {\r\n        const indexA = imageOrder[filteredImages.indexOf(a)];\r\n        const indexB = imageOrder[filteredImages.indexOf(b)];\r\n        return indexA - indexB;\r\n      });\r\n\r\n\r\n\r\n      // Limit the number of selected images to 40\r\n      const limitedImages = sortedImages.slice(0, 40);\r\n\r\n      globalSelectedImages = limitedImages;\r\n      if (limitedImages.length > 0) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(true));\r\n      }\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      dispatch(setSelectedImages(globalSelectedImages));\r\n\r\n    } catch (error) {\r\n      console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleDeleteImagePress = useCallback((uri) => {\r\n\r\n    globalSelectedImages = globalSelectedImages.filter((item) => {\r\n      // Replace 'uriToDelete' with the URI you want to delete\r\n      return item.uri !== uri;\r\n    });\r\n\r\n    if (globalSelectedImages.length < 40) {\r\n      dispatch(setAddAnotherImages(true));\r\n    }\r\n\r\n    if (globalSelectedImages.length == 0) {\r\n      dispatch(setAddAnotherImages(false));\r\n      dispatch(setIsAddPhotoVisible(true));\r\n    }\r\n    dispatch(setSelectedImages(globalSelectedImages));\r\n    // dispatch(setSelectedImages((prevImages) => {\r\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\r\n\r\n    //   if (updatedImages.length < 40) {\r\n    //     dispatch(setAddAnotherImages(true));\r\n    //   }\r\n    //   if (updatedImages.length == 0) {\r\n    //    dispatch(setAddAnotherImages(false));\r\n    //     dispatch(setIsAddPhotoVisible(true));\r\n    //   }\r\n    //   return updatedImages;\r\n    // }));\r\n\r\n    // console.log(globalSelectedImages.map((item) => item.uri));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\r\n\r\n\r\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\r\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\r\n\r\n            <ClearImagesModal\r\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\r\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\r\n              handleClearImages={handleClearImages}\r\n              selectedImages={selectedImages}\r\n              isAddPhotoVisible={isAddPhotoVisible} />\r\n\r\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\r\n\r\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"white\" />\r\n\r\n\r\n              <ScrollView\r\n                scrollEnabled={scrollEnabled}\r\n                flex={1}\r\n              >\r\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\r\n\r\n\r\n                  <DragSortableView\r\n\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    delayLongPress={100}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onDragStart={useCallback(() => {\r\n                      if (!isEnterEdit) {\r\n                        setisEnterEdit(true);\r\n                        setscrollEnabled(false);\r\n                      } else {\r\n                        setscrollEnabled(false);\r\n                      }\r\n                    }, [])}\r\n                    onDragEnd={useCallback(() => {\r\n                      setscrollEnabled(true);\r\n                    }, [])}\r\n                    onDataChange={useCallback((data) => {\r\n\r\n                      if (data.length !== data) {\r\n                        dispatch(setSelectedImages(data));\r\n                        globalSelectedImages = data;\r\n                      }\r\n\r\n                    }, [])}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => renderItem(item, index), [])} />\r\n\r\n                  <Center>\r\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"white\" />\r\n                  </Center>\r\n\r\n                </Box>\r\n\r\n\r\n\r\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    sortable={false}\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\r\n\r\n                </Box>\r\n              </ScrollView>\r\n\r\n\r\n\r\n\r\n            </Box>\r\n\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={0}\r\n              left={0}\r\n              borderRadius={3}\r\n              bgColor={'rgba(0, 0, 0, 0.5)'}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              display={isAddPhotoVisible ? 'none' : 'block'}>\r\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\r\n            </Box>\r\n          </Box>\r\n\r\n        </ScrollView>\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      {/* </Box> */}\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'}>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} >\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Please select image(s) smaller than 10MB!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst SuccessFailModal = ({ isSuccessOpen, isFailedOpen, handleFailModalClose, inputStockIDNumber, handleSuccessModalClose }) => {\r\n  const okSuccessButtonRef = useRef(null);\r\n  const okFailButtonRef = useRef(null);\r\n\r\n  return (\r\n    <><Modal isOpen={isSuccessOpen} onClose={handleSuccessModalClose} initialFocusRef={okSuccessButtonRef} finalFocusRef={inputStockIDNumber}>\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text color={'#102A43'} bold>\r\n            Success!\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              Success!\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              Stock ID Exist!\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button ref={okSuccessButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleSuccessModalClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n      <Modal isOpen={isFailedOpen} onClose={handleFailModalClose} initialFocusRef={okFailButtonRef} finalFocusRef={inputStockIDNumber} >\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Stock ID Do Not Exist!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button ref={okFailButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleFailModalClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal></>\r\n  );\r\n}\r\n\r\n\r\nconst StockIDAndMakeAndModel = ({\r\n  selectStockStatus,\r\n  handleSetBordersWhite,\r\n  inputFobUsd,\r\n  handleClearIfError,\r\n  monthNumbers,\r\n  steeringData,\r\n  selectPort,\r\n  selectSales,\r\n  selectBuyer,\r\n  inputRefNum,\r\n  inputChassis,\r\n  inputModelCode,\r\n  inputEngineCode,\r\n  inputEngineDis,\r\n  selectSteering,\r\n  inputMileage,\r\n  selectTransmission,\r\n  selectExteriorColor,\r\n  inputNumOfSeats,\r\n  inputDoors,\r\n  inputPurchasedPrice,\r\n  selectFuel,\r\n  inputDimensionLength,\r\n  inputDimensionWidth,\r\n  inputDimensionHeight,\r\n  inputDimensionCubicMeters,\r\n  selectDriveType,\r\n  inputWeight,\r\n  selectBodyType,\r\n  inputCarName,\r\n  inputCarDesc,\r\n  inputFobJpy,\r\n  selectRegYear,\r\n  selectRegMonth,\r\n  setRefNumFromSelects,\r\n  inputStockIDNumber,\r\n  stockIDNumError,\r\n  selectMakeForModelRef,\r\n  textAreaAddModel,\r\n  selectMakeForAddModelRef,\r\n  handleAddMakeTextChange,\r\n  textAreaAddMake,\r\n  makeError,\r\n  modelError,\r\n  selectMakeBoxRef,\r\n  selectMakeRef,\r\n  selectModelRef,\r\n  selectModelBoxRef,\r\n  setCarNameFromSelects,\r\n  setCarNameFromSelectsModel,\r\n  inputCarNotes,\r\n  inputCarMemo,\r\n  purchasedPriceError,\r\n  handleInputPurchasedPriceChange }) => {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  // const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const makeData = useSelector((state) => state.makeData);\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const portData = useSelector((state) => state.portData);\r\n  // const isLoading = useSelector((state) => state.isLoading);\r\n  const transmissionData = useSelector((state) => state.transmissionData);\r\n  const fuelData = useSelector((state) => state.fuelData);\r\n  const buyerData = useSelector((state) => state.buyerData);\r\n  const salesData = useSelector((state) => state.salesData);\r\n  const driveTypeData = useSelector((state) => state.driveTypeData);\r\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\r\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\r\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\r\n  // const usdToJpy = useSelector((state) => state.usdToJpy);\r\n\r\n\r\n  const [modelData, setModelData] = useState([]);\r\n  const [isSearchLoading, setIsSearchLoading] = useState(false);\r\n  const [isSuccessOpen, setIsSuccessOpen] = useState(false);\r\n  const [isFailedOpen, setIsFailedOpen] = useState(false);\r\n  const [fetchedData, setFetchedData] = useState([]);\r\n  const [model, setModel] = useState('');\r\n  const [key, setKey] = useState(0);\r\n  // useEffect(() => {\r\n\r\n  //   selectModelRef.current.selectIndex(modelData.indexOf(model));\r\n  //   console.log(model);\r\n  // }, [modelData]);\r\n\r\n  // const exportFunction = () => {\r\n  //   const clearModelData = () =>{\r\n  //       setModelData([]);\r\n  //   };\r\n\r\n  //   return clearModelData;\r\n  // }\r\n\r\n  const handleInputFobJpyChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    // console.log(globalJpyToUsd);\r\n    // Check if the numeric value starts with 0\r\n    if (numericValue.startsWith('0')) {\r\n      // Handle the case when the value starts with 0\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n      return;\r\n    }\r\n\r\n    // Truncate the numeric value to a maximum of 9 digits\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n    if (formattedValue !== '') {\r\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\r\n\r\n      if (!isNaN(multipliedValue)) {\r\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\r\n      } else {\r\n        // Handle the case when the multipliedValue is NaN\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: '' });\r\n      }\r\n    } else {\r\n      // Handle the case when formattedValue is empty\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n    }\r\n  };\r\n\r\n\r\n  const getImages = useCallback(async (folderName) => {\r\n    // const dispatch = useDispatch();\r\n    dispatch(setLoadingModalVisible(true));\r\n    try {\r\n\r\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\r\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n\r\n      const urls = await Promise.all(\r\n        imageRefs.items.map(async (itemRef) => {\r\n          const uri = await getDownloadURL(itemRef);\r\n          return { uri, fileName: itemRef.name };\r\n        })\r\n      );\r\n\r\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\r\n      urls.sort((a, b) => {\r\n        const fileNameA = parseInt(a.fileName);\r\n        const fileNameB = parseInt(b.fileName);\r\n        return fileNameA - fileNameB;\r\n      });\r\n\r\n      if (urls.length > 0) {\r\n        dispatch(setDeleteImageVisible(false));\r\n        dispatch(setSelectedImages(urls));\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n        globalSelectedImages = urls;\r\n\r\n      }\r\n\r\n      else {\r\n        dispatch(setDeleteImageVisible(true));\r\n        dispatch(setIsAddPhotoVisible(true));\r\n        dispatch(setAddAnotherImages(false));\r\n        dispatch(setSelectedImages([]));\r\n        dispatch(setDeleteImageVisible(true));\r\n        globalSelectedImages = [];\r\n      }\r\n\r\n\r\n      console.log(urls);\r\n\r\n    } catch (error) {\r\n      // Handle any errors that may occur during the Firebase operations\r\n      console.error('Error getting image URLs:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleSearchPress = useCallback(async () => {\r\n\r\n\r\n    if (inputStockIDNumber.current?.value !== '') {\r\n      dispatch(setLoadingModalVisible(true));\r\n      setIsSearchLoading(true);\r\n      setIsSuccessOpen(false);\r\n      setIsFailedOpen(false);\r\n\r\n      const q = query(collection(projectExtensionFirestore, 'VehicleProducts'), where('stockID', '==', inputStockIDNumber.current?.value));\r\n\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      if (querySnapshot.empty) {\r\n        console.log('No documents found');\r\n        // setIsLoading(false);\r\n        dispatch(setDeleteImageVisible(true));\r\n        setIsSearchLoading(false);\r\n        setIsFailedOpen(true);\r\n        dispatch(setIsAddPhotoVisible(true));\r\n        dispatch(setAddAnotherImages(false));\r\n        dispatch(setSelectedImages([]));\r\n        globalSelectedImages = [];\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n      }\r\n\r\n\r\n      else {\r\n\r\n        // dispatch(setSelectedImages([]));\r\n        // globalSelectedImages = [];\r\n\r\n        querySnapshot.forEach(async (item) => {\r\n          const data = item.data();\r\n          selectModelRef.current.reset();\r\n          // console.log(item.id, \" => \", item.data().make);\r\n          setIsSearchLoading(false);\r\n          // setIsSuccessOpen(true);\r\n\r\n          // fetchModelData();\r\n          // setModel(data.model);\r\n\r\n          // console.log(portData);    \r\n          async function fetchDataAndSelectIndex() {\r\n            try {\r\n              const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\r\n              const docSnapshot = await getDoc(collectionRef);\r\n              if (docSnapshot.exists()) {\r\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n              }\r\n            } catch (error) {\r\n              console.error('Error fetching models data from Firebase: ', error);\r\n            }\r\n          }\r\n\r\n          try {\r\n            const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\r\n            const docSnapshot = await getDoc(collectionRef);\r\n            if (docSnapshot.exists()) {\r\n              const modelsDataFromFirebase = docSnapshot.data().model;\r\n              setModelData(modelsDataFromFirebase);\r\n              globalModelDataVariable = modelsDataFromFirebase;\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching models data from Firebase: ', error);\r\n          }\r\n\r\n          handleSetBordersWhite();\r\n          fetchDataAndSelectIndex();\r\n          selectStockStatus.current.selectIndex(stockStatusData.indexOf(data.stockStatus));\r\n          selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\r\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\r\n          selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(parseInt(data.regYear, 10)));\r\n          selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\r\n          selectPort.current.selectIndex(portData.findIndex(item => item.id === data.portID));\r\n          selectSales.current.selectIndex(salesData.findIndex(item => item.id === data.salesID));\r\n          selectBuyer.current.selectIndex(buyerData.findIndex(item => item.id === data.buyerID));\r\n          inputRefNum.current.setNativeProps({ text: data.referenceNumber || '' });\r\n          inputChassis.current.setNativeProps({ text: data.chassisNumber || '' });\r\n          inputModelCode.current.setNativeProps({ text: data.modelCode || '' });\r\n          inputEngineCode.current.setNativeProps({ text: data.engineCode || '' });\r\n          inputEngineDis.current.setNativeProps({ text: data.engineDisplacement ? data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\r\n          inputMileage.current.setNativeProps({ text: data.mileage ? data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\r\n          selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\r\n          inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats || '' });\r\n          inputDoors.current.setNativeProps({ text: data.doors || '' });\r\n          inputPurchasedPrice.current.setNativeProps({ text: data.purchasedPrice ? data.purchasedPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\").toString() : '' });\r\n          selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\r\n          inputDimensionLength.current.setNativeProps({ text: data.dimensionLength ? data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth ? data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight ? data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters || '' });\r\n          selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\r\n          inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\r\n          selectBodyType.current.selectIndex(bodyTypeData.findIndex(item => item.toLowerCase() === data.bodyType.toLowerCase()));\r\n          inputCarName.current.setNativeProps({ text: data.carName || '' });\r\n          inputCarDesc.current.setNativeProps({ text: data.carDescription || '' });\r\n          inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          globalFobPrice = data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '';\r\n          handleInputFobJpyChange(data.fobPrice ? data.fobPrice : \"0\");\r\n          // selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\r\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\r\n          // selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\r\n          // selectPort.current.selectIndex(portData.findIndex(item => item.name === data.port));\r\n          // selectSales.current.selectIndex(salesData.findIndex(item => item.name === data.sales));\r\n          // selectBuyer.current.selectIndex(buyerData.findIndex(item => item.name === data.buyer));\r\n          // inputRefNum.current.setNativeProps({ text: data.referenceNumber });\r\n          // inputChassis.current.setNativeProps({ text: data.chassisNumber });\r\n          // inputModelCode.current.setNativeProps({ text: data.modelCode });\r\n          // inputEngineCode.current.setNativeProps({ text: data.engineCode });\r\n          // inputEngineDis.current.setNativeProps({ text: data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\r\n          // inputMileage.current.setNativeProps({ text: data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\r\n          // selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\r\n          // inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats });\r\n          // inputDoors.current.setNativeProps({ text: data.doors });\r\n          // selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\r\n          // inputDimensionLength.current.setNativeProps({ text: data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters });\r\n          // selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\r\n          // inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});          \r\n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\r\n          // inputCarName.current.setNativeProps({ text: data.carName });\r\n          // inputCarDesc.current.setNativeProps({ text: data.carDescription });\r\n          // inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});\r\n          // handleInputFobJpyChange(data.fobPrice);\r\n\r\n          if (data.notes == undefined) {\r\n            inputCarNotes.current.setNativeProps({ text: '' });\r\n          }\r\n          else {\r\n            inputCarNotes.current.setNativeProps({ text: data.notes });\r\n          }\r\n\r\n          if (data.memo == undefined) {\r\n            inputCarMemo.current.setNativeProps({ text: '' });\r\n\r\n          }\r\n          else {\r\n            inputCarMemo.current.setNativeProps({ text: data.memo });\r\n\r\n          }\r\n\r\n          featuresState.SafetySystemAnBrSy = data.SafetySystemAnBrSy;\r\n          featuresState.SafetySystemDrAi = data.SafetySystemDrAi;\r\n          featuresState.SafetySystemPaAi = data.SafetySystemPaAi;\r\n          featuresState.SafetySystemSiAi = data.SafetySystemSiAi;\r\n          featuresState.ComfortAiCoFr = data.ComfortAiCoFr;\r\n          featuresState.ComfortAiCoRe = data.ComfortAiCoRe;\r\n          featuresState.ComfortAMFMRa = data.ComfortAMFMRa;\r\n          featuresState.ComfortAMFMSt = data.ComfortAMFMSt;\r\n          featuresState.ComfortCDPl = data.ComfortCDPl;\r\n          featuresState.ComfortCDCh = data.ComfortCDCh;\r\n          featuresState.ComfortCrSpCo = data.ComfortCrSpCo;\r\n          featuresState.ComfortDiSp = data.ComfortDiSp;\r\n          featuresState.ComfortDVDPl = data.ComfortDVDPl;\r\n          featuresState.ComfortHDD = data.ComfortHDD;\r\n          featuresState.ComfortNaSyGPS = data.ComfortNaSyGPS;\r\n          featuresState.ComfortPoSt = data.ComfortPoSt;\r\n          featuresState.ComfortPrAuSy = data.ComfortPrAuSy;\r\n          featuresState.ComfortReKeSy = data.ComfortReKeSy;\r\n          featuresState.ComfortTiStWh = data.ComfortTiStWh;\r\n          featuresState.InteriorLeSe = data.InteriorLeSe;\r\n          featuresState.InteriorPoDoLo = data.InteriorPoDoLo;\r\n          featuresState.InteriorPoMi = data.InteriorPoMi;\r\n          featuresState.InteriorPoSe = data.InteriorPoSe;\r\n          featuresState.InteriorPoWi = data.InteriorPoWi;\r\n          featuresState.InteriorReWiDe = data.InteriorReWiDe;\r\n          featuresState.InteriorReWiWi = data.InteriorReWiWi;\r\n          featuresState.InteriorThRoSe = data.InteriorThRoSe;\r\n          featuresState.InteriorTiGl = data.InteriorTiGl;\r\n          featuresState.ExteriorAlWh = data.ExteriorAlWh;\r\n          featuresState.ExteriorPoSlDo = data.ExteriorPoSlDo;\r\n          featuresState.ExteriorSuRo = data.ExteriorSuRo;\r\n          featuresState.SellingPointsCuWh = data.SellingPointsCuWh;\r\n          featuresState.SellingPointsFuLo = data.SellingPointsFuLo;\r\n          featuresState.SellingPointsMaHiAv = data.SellingPointsMaHiAv;\r\n          featuresState.SellingPointsBrNeTi = data.SellingPointsBrNeTi;\r\n          featuresState.SellingPointsNoAcHi = data.SellingPointsNoAcHi;\r\n          featuresState.SellingPointsNoSmPrOw = data.SellingPointsNoSmPrOw;\r\n          featuresState.SellingPointsOnOwHi = data.SellingPointsOnOwHi;\r\n          featuresState.SellingPointsPeRaTi = data.SellingPointsPeRaTi;\r\n          featuresState.SellingPointsReBo = data.SellingPointsReBo;\r\n          featuresState.SellingPointsTuEn = data.SellingPointsTuEn;\r\n          featuresState.SellingPointsUpAuSy = data.SellingPointsUpAuSy;\r\n\r\n          resetKey++;\r\n\r\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\r\n          makeVariable.text = data.make ? data.make : \"\";\r\n          modelVariable.text = data.model ? data.model : \"\";\r\n          regYearVariable.text = data.regYear ? data.regYear : \"\";\r\n          regMonthVariable.text = data.regMonth ? data.regMonth : \"\";\r\n          portVariable.text = data.port ? data.port : \"\";\r\n          salesVariable.text = data.sales ? data.sales : \"\";\r\n          buyerVariable.text = data.buyer ? data.buyer : \"\";\r\n          portVariable.id = data.portID ? data.portID : \"\";\r\n          salesVariable.id = data.salesID ? data.salesID : \"\";\r\n          buyerVariable.id = data.buyerID ? data.buyerID : \"\";\r\n          referenceNumberVariable.text = data.referenceNumber ? data.referenceNumber : \"\";\r\n          globalVehicleFolderName = data.stockID ? data.stockID : \"\";\r\n          steeringVariable.text = data.steering ? data.steering : \"\";\r\n          transmissionVariable.text = data.transmission ? data.transmission : \"\";\r\n          exteriorColorVariable.text = data.exteriorColor ? data.exteriorColor : \"\";\r\n          fuelVariable.text = data.fuel ? data.fuel : \"\";\r\n          driveTypeVariable.text = data.driveType ? data.driveType : \"\";\r\n          bodyTypeVariable.text = data.bodyType ? data.bodyType : \"\";\r\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\r\n          globalSupplyChainCostsData = data.supplyChainsCostsData ? data.supplyChainsCostsData : [];\r\n          dispatch(setSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\r\n\r\n          await getImages(globalVehicleFolderName);\r\n\r\n          dispatch(setLoadingModalVisible(false));\r\n\r\n          // const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), makeVariable.text), (snapshot) => {\r\n          //   setModelData(snapshot.data()?.model || []);\r\n          //   selectModelRef.current.selectIndex(modelData.indexOf(data.model));\r\n\r\n          //   return () => unsubscribe();\r\n          // });\r\n\r\n\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);;\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (isFailedOpen == false) {\r\n  //     handleClearIfError();\r\n  //   }\r\n\r\n\r\n  // }, [isFailedOpen])\r\n  const handleFailModalClose = useCallback(() => {\r\n    setIsFailedOpen(false);\r\n\r\n    handleClearIfError();\r\n\r\n\r\n  }, []);\r\n\r\n  const handleSuccessModalClose = useCallback(() => {\r\n    setIsSuccessOpen(false);\r\n\r\n    selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n    // console.log(globalModelDataVariable.indexOf(makeVariable.text));\r\n\r\n\r\n  }, []);\r\n\r\n  const handleModelChange = useCallback(() => {\r\n    // console.log('Selected make:', value);\r\n    setCarNameFromSelectsModel();\r\n\r\n  }, []);\r\n\r\n\r\n  const handleMakeChange = useCallback(async (item) => {\r\n    setCarNameFromSelects();\r\n    // dispatch(setSelectedMake(item));\r\n    // fetchModelData();\r\n    //  dispatch(setIsLoading(true));\r\n    try {\r\n      if (makeVariable.text !== '') {\r\n\r\n        try {\r\n\r\n          const collectionRef = doc(projectExtensionFirestore, 'Model', item);\r\n\r\n          const docSnapshot = await getDoc(collectionRef);\r\n          if (docSnapshot.exists()) {\r\n            const modelsDataFromFirebase = docSnapshot.data().model;\r\n            setModelData(modelsDataFromFirebase);\r\n            globalModelDataVariable = modelsDataFromFirebase;\r\n            // console.log(globalModelVariable);\r\n\r\n            // modelKey++;\r\n            // console.log(modelKey);\r\n            // dispatch(setIsLoading(false));\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching models data from Firebase: ', error);\r\n        }\r\n\r\n      }\r\n\r\n      else {\r\n        //  dispatch(setModelData([]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching models data from Firebase: ', error);\r\n    }\r\n\r\n  }, [projectExtensionFirestore, modelData, makeData]);\r\n\r\n  const handleInputStockIDNumberChange = useCallback((text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 10);\r\n    inputStockIDNumber.current.value = truncatedValue;\r\n    globalVehicleFolderName = truncatedValue;\r\n    setRefNumFromSelects();\r\n    // // Limit the numeric value to a maximum of 4 characters\r\n    // const truncatedValue = numericValue.slice(5);\r\n\r\n    // // Format the truncated numeric value with comma separator\r\n    // const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    // // Remove comma separator from the formatted value\r\n    // const valueWithoutCommas = formattedValue.replace(/,/g, '');\r\n\r\n    // inputStockIDNumber.current.value = valueWithoutCommas;\r\n  }, []);\r\n\r\n  const handleModelOnFocus = useCallback(() => {\r\n    // console.log(globalModelVariable.length);\r\n    const condition = makeVariable.text === '' && globalModelDataVariable.length > 0;\r\n\r\n    if (condition) {\r\n      globalModelDataVariable = [];\r\n      setModelData([]);\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n        <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={handleSearchPress} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\r\n          InputRightElement={\r\n            <Button isLoading={isSearchLoading} isLoadingText=\"Search\" size={'xs'} colorScheme={'primary'}\r\n              leftIcon={<Icon as={<MaterialIcons name=\"search\" />} size={5} color=\"white\" />}\r\n              onPress={() => {\r\n                handleSearchPress()\r\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n              }}>Search</Button>\r\n          }\r\n        />\r\n        </Box>\r\n        <SuccessFailModal inputStockIDNumber={inputStockIDNumber} isSuccessOpen={isSuccessOpen} setIsSuccessOpen={setIsSuccessOpen} isFailedOpen={isFailedOpen} setIsFailedOpen={setIsFailedOpen} handleSuccessModalClose={handleSuccessModalClose} handleFailModalClose={handleFailModalClose} />\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Purchase Price</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n        <Box bgColor={'white'} flex={1} borderColor={purchasedPriceError} borderWidth={1}>\r\n          <Input keyboardType=\"numeric\" flex={1} ref={inputPurchasedPrice} onChangeText={handleInputPurchasedPriceChange} bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"Purchase Price\" placeholderTextColor={'muted.400'} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Make</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n          <SortAndAddModal docName='Make' handleAddTextChange={handleAddMakeTextChange} textAreaAdd={textAreaAddMake} title='Make' dataName={'make'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Make\" data={makeData} />\r\n        </Box>\r\n\r\n        <Box ref={selectMakeBoxRef} bgColor={'white'} flex={1} borderColor={makeError} borderWidth={1}>\r\n\r\n\r\n          <SelectDropdown\r\n            ref={selectMakeRef}\r\n            buttonStyle={{\r\n              flex: 1,\r\n              width: '100%',\r\n              backgroundColor: 'white',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              padding: 4,\r\n            }}\r\n            buttonTextStyle={{\r\n              textAlign: 'left',\r\n              color: '#424242',\r\n              fontSize: 12,\r\n            }}\r\n            dropdownStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              shadowColor: '#000000',\r\n              shadowOffset: { width: 0, height: 2 },\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 4,\r\n              elevation: 2,\r\n            }}\r\n            rowStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 15,\r\n            }}\r\n            rowTextStyle={{\r\n              color: '#424242',\r\n              fontSize: 16,\r\n            }}\r\n            data={makeData}\r\n            onSelect={useCallback((selectedItem) => {\r\n              makeVariable.text = selectedItem;\r\n              selectModelRef.current.reset();\r\n              modelVariable.text = '';\r\n              handleMakeChange(selectedItem);\r\n\r\n\r\n            }, [])}\r\n            defaultButtonText=\"-- Choose Make --\"\r\n            buttonTextAfterSelection={(selectedItem) => {\r\n              return selectedItem;\r\n            }} SelectDropdown\r\n            renderDropdownIcon={(isOpened) => {\r\n              return (\r\n                <Ionicons\r\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                  color={'#424242'}\r\n                  size={18}\r\n                />\r\n              );\r\n            }}\r\n            rowTextForSelection={(item) => {\r\n              return item;\r\n            }}\r\n            searchPlaceHolder=\"Search for Make\"\r\n            searchInputStyle={{ marginTop: 2, }}\r\n            disableAutoScroll\r\n            search />\r\n\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} >\r\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Model</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n          <ModelSortAndAddModal\r\n            selectMakeForAddModelRef={selectMakeForAddModelRef}\r\n            selectMakeForModelRef={selectMakeForModelRef}\r\n            textAreaAddModel={textAreaAddModel}\r\n            makeData={makeData} />\r\n        </Box>\r\n        <Box ref={selectModelBoxRef} bgColor={'white'} flex={1} borderColor={modelError} borderWidth={1}>\r\n\r\n\r\n          <SelectDropdown\r\n\r\n            onFocus={handleModelOnFocus}\r\n            ref={selectModelRef}\r\n            // disabled={makeVariable.text === '' ? true : false}\r\n            // key={`make${key}`}\r\n            buttonStyle={{\r\n              flex: 1,\r\n              width: '100%',\r\n              backgroundColor: 'white',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              padding: 4,\r\n            }}\r\n            buttonTextStyle={{\r\n              textAlign: 'left',\r\n              color: '#424242',\r\n              fontSize: 12,\r\n            }}\r\n            dropdownStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              shadowColor: '#000000',\r\n              shadowOffset: { width: 0, height: 2 },\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 4,\r\n              elevation: 2,\r\n            }}\r\n            rowStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 15,\r\n            }}\r\n            rowTextStyle={{\r\n              color: '#424242',\r\n              fontSize: 16,\r\n            }}\r\n            // data={modelData.map((item) => item)}\r\n            data={modelData}\r\n            onSelect={useCallback((selectedItem) => {\r\n              modelVariable.text = selectedItem;\r\n              // console.log(modelVariable.text);\r\n\r\n\r\n              handleModelChange()\r\n            }, [])}\r\n            defaultButtonText=\"-- Choose Model --\"\r\n            buttonTextAfterSelection={(selectedItem) => {\r\n              return selectedItem;\r\n            }}\r\n            renderDropdownIcon={(isOpened) => {\r\n              return (\r\n                <Ionicons\r\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                  color={'#424242'}\r\n                  size={18}\r\n                />\r\n              );\r\n            }}\r\n            rowTextForSelection={(item) => {\r\n              return item;\r\n            }}\r\n            searchPlaceHolder=\"Search for Model\"\r\n            searchInputStyle={{ marginTop: 2, width: '100%', }}\r\n            disableAutoScroll\r\n            search\r\n\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n    handleFirstModalClose();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    handleFirstModalOpen();\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n\r\n  }, [modalSortOpen, modalIsLoading]);\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose} useRNModal>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        useRNModal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nconst SortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nconst PSBSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAddCode, textAreaAdd, handleAddTextChange, handleAddCodeTextChange, docName }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n  }, []);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n  }, []);\r\n\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    textAreaAdd.current.clear();\r\n    textAreaAddCode.current.clear();\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n\r\n  }, [])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, []);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataCode = textAreaAddCode.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n    const dataCodeArray = dataCode.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n\r\n    if (data !== '' && dataCode !== '') {\r\n      setModalSaveLoading(true);\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n\r\n        const dataToUpdate = dataArray.map((data, index) => ({\r\n          id: dataCodeArray[index],\r\n          name: data,\r\n        }));\r\n\r\n        const updateObject = {};\r\n        updateObject[dataName] = arrayUnion(...dataToUpdate);\r\n\r\n        await setDoc(modalDocRef, updateObject, { merge: true });\r\n        // const updateData = {\r\n        //   [dataName]: arrayUnion({ id: arrayUnion(...dataCodeArray), name: arrayUnion(...dataArray) })\r\n        // };\r\n\r\n        // await setDoc(modalDocRef, updateData, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity onPress={handleSortModalOpen} focusable={false}>\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item.id}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item.name}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAddCode}\r\n        size={'lg'}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          {/* <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} w={'full'}> */}\r\n          <HStack space={5} flex={1} margin={2}>\r\n            <VStack space={1} flex={1}>\r\n              <Text textAlign={'center'}>Code</Text>\r\n              <TextArea\r\n                flex={2}\r\n                textAlign={'center'}\r\n                w={'full'}\r\n                ref={textAreaAddCode}\r\n                multiline\r\n                onChangeText={handleAddCodeTextChange}\r\n                totalLines={8}\r\n                placeholder=\"Enter your data, separated by new lines\"\r\n              />\r\n            </VStack>\r\n            <VStack space={1} flex={1}>\r\n              <Text textAlign={'center'}>Name</Text>\r\n              <TextArea\r\n                flex={2}\r\n                textAlign={'center'}\r\n                w={'full'}\r\n                ref={textAreaAdd}\r\n                multiline\r\n                onChangeText={handleAddTextChange}\r\n                totalLines={8}\r\n                placeholder=\"Enter your data, separated by new lines\"\r\n              />\r\n            </VStack>\r\n          </HStack>\r\n          {/* </Modal.Body> */}\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleModalAddClose}\r\n                colorScheme={'muted'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}>\r\n                Close\r\n              </Button>\r\n              <Button\r\n                onPress={handleAddSubmit}\r\n                isLoading={modalSaveLoading ? true : false}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}>\r\n                Add\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nconst ModelSortAndAddModal = ({ selectMakeForAddModelRef, selectMakeForModelRef, textAreaAddModel, makeData }) => {\r\n\r\n  const [modalAddModel, setModalAddModel] = useState(false);\r\n  const [modalSaveModel, setModalSaveModel] = useState(false);\r\n  const [modalModel, setModalModel] = useState(false);\r\n  const [modalAddModelSuccess, setModalAddModelSuccess] = useState(false);\r\n  const [keySelectMakeForModel, setKeySelectMakeForModel] = useState(1);\r\n  const [keySelectMakeForAddModel, setKeySelectMakeForAddModel] = useState(1);\r\n  const [modelSortData, setModelSortData] = useState([]);\r\n  const [isAddModelDisabled, setIsAddModelDisabled] = useState(false);\r\n  const [modalSaveModelLoading, setModalSaveModelLoading] = useState(false);\r\n  const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n\r\n  const fetchModelSortData = async () => {\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n\r\n      const modelSortDocRef = doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value);\r\n      const modelSortDocSnap = await getDoc(modelSortDocRef);\r\n      if (modelSortDocSnap.exists()) {\r\n        setModelSortData(modelSortDocSnap.data()?.model || []);\r\n\r\n      }\r\n      else {\r\n        setModelSortData([]);\r\n      }\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n\r\n  //     const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), (snapshot) => {\r\n  //       setModelSortData(snapshot.data()?.model || []);\r\n  //       return () => unsubscribe();\r\n  //     });\r\n\r\n  //   }\r\n\r\n  // }, []);\r\n\r\n  const handleDeleteModelPress = useCallback(\r\n    (item) => {\r\n      setModelSortData((prevModelData) => {\r\n        const updatedModelData = prevModelData.filter((model) => model !== item);\r\n        return updatedModelData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const handleSaveModel = useCallback(async () => {\r\n    setModalSaveModelLoading(true);\r\n    console.log(selectMakeForModelRef.current?.value);\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n      try {\r\n        await updateDoc(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), { model: modelSortData });\r\n        setModalSaveModelLoading(false);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const logData = {\r\n          message: `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`.toLowerCase(),\r\n            'Model Update'.toLowerCase(),\r\n            'Model'.toLowerCase(),\r\n            'Update'.toLowerCase(),\r\n            selectMakeForModelRef.current.value.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n\r\n        addLogToCollection(logData);\r\n\r\n        handleModalSaveModelClose();\r\n      } catch (error) {\r\n        console.error(error);\r\n        setModalSaveModelLoading(false);\r\n        handleModalSaveModelClose();\r\n      }\r\n\r\n    }\r\n    else {\r\n      setModalSaveModelLoading(false);\r\n    }\r\n\r\n\r\n\r\n\r\n  }, [projectExtensionFirestore, modelSortData]);\r\n\r\n  const handleAddModelTextChange = () => {\r\n    const newText = textAreaAddModel.current?.value?.toUpperCase();\r\n    textAreaAddModel.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n  const handleMakeForModelChange = useCallback(() => {\r\n    makeForAddModelVariable.text = selectMakeForAddModelRef.current?.value;\r\n    fetchModelSortData();\r\n\r\n    // console.log(selectMakeForModelRef.current?.value);\r\n  }, []);\r\n\r\n  const handleMakeForAddModelChange = useCallback(() => {\r\n    setIsAddModelDisabled(false);\r\n\r\n  }, []);\r\n\r\n\r\n  const handleModalModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalModel(true);\r\n    fetchModelSortData();\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  const handleModalModelClose = useCallback(() => {\r\n    setModalIsLoading(false);\r\n\r\n    setModalModel(false);\r\n    setIsLoading(false);\r\n    setKeySelectMakeForModel(prevKey => prevKey + 1);\r\n    setModelSortData([]);\r\n  }, []);\r\n\r\n  const handleModalAddModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalAddModel(true);\r\n    // handleModalModelClose();\r\n    setModalModel(false);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleModalAddModelClose = useCallback(() => {\r\n    handleModalModelOpen();\r\n    setModalAddModel(false);\r\n    textAreaAddModel.current.clear();\r\n    setIsAddModelDisabled(true);\r\n    setIsLoading(false);\r\n    setKeySelectMakeForAddModel(prevKey => prevKey + 1);\r\n\r\n  }, []);\r\n\r\n  const handleModalAddModelSuccessOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalAddModel(false);\r\n    setModalModel(false);\r\n    textAreaAddModel.current.clear();\r\n    setModalAddModelSuccess(true);\r\n\r\n\r\n  }, []);\r\n\r\n  const handleModalAddModelSuccessClose = useCallback(() => {\r\n    setModalAddModelSuccess(false);\r\n    handleModalModelOpen();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleModalSaveModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n      setModalSaveModel(true);\r\n      // handleModalModelClose();\r\n      setModalModel(false);\r\n      setIsLoading(false);\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleModalSaveModelClose = useCallback(() => {\r\n    setModalSaveModel(false);\r\n    handleModalModelOpen();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleAddModelSubmit = async () => {\r\n    const data = textAreaAddModel.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n      setModalSaveLoading(true);\r\n      try {\r\n\r\n        const makeCollectionRef = collection(projectExtensionFirestore, 'Model');\r\n        const makeDocRef = doc(makeCollectionRef, selectMakeForAddModelRef.current?.value);\r\n        await setDoc(makeDocRef, { model: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`.toLowerCase(),\r\n            'Model Added'.toLowerCase(),\r\n            'Model'.toLowerCase(),\r\n            'Added'.toLowerCase(),\r\n            selectMakeForAddModelRef.current.value.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        setModalSaveLoading(false);\r\n        addLogToCollection(logData);\r\n\r\n        handleModalAddModelSuccessOpen();\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleModalModelOpen}>\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) :\r\n          (<Spinner color=\"white\" />)\r\n        }\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalModel}\r\n        onClose={handleModalModelClose} >\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Rearrange/Add Model</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n            <Box w={'full'} flexDir={'column'} height={'f'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddModelOpen}><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n              <Box>\r\n                <Select key={keySelectMakeForModel} ref={selectMakeForModelRef} onValueChange={handleMakeForModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\r\n                  bg: \"teal.600\",\r\n                  endIcon: <CheckIcon size=\"5\" />\r\n                }}>\r\n                  {makeData.map((item) => (\r\n\r\n                    <Select.Item key={item} label={item} value={item} />\r\n\r\n                  ))}\r\n                </Select>\r\n              </Box>\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modelSortData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16, 42, 67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteModelPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModelSortData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveModelOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n\r\n\r\n\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddModel}\r\n        onClose={handleModalAddModelClose}\r\n        initialFocusRef={selectMakeForAddModelRef}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add Model</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n            <Select key={keySelectMakeForAddModel} ref={selectMakeForAddModelRef} onValueChange={handleMakeForAddModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\r\n              bg: \"teal.600\",\r\n              endIcon: <CheckIcon size=\"5\" />\r\n            }}>\r\n              {makeData.map((item) => (\r\n\r\n                <Select.Item key={item} label={item} value={item} />\r\n\r\n              ))}\r\n            </Select>\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAddModel}\r\n              multiline\r\n              onChangeText={handleAddModelTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\"\r\n              isDisabled={isAddModelDisabled ? true : false}\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddModelSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSaveModel}\r\n        onClose={handleModalSaveModelClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Model Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSaveModel} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveModelLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalAddModelSuccess} onClose={handleModalAddModelSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Model Added!\r\n                {/* Vehicle Added! */}\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Model was successfully added! You can view it in the model list.\r\n                {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddModelSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nconst referenceNumberVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nconst nameVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nconst makeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst makeForAddModelVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\n\r\nconst modelVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst regYearVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst regMonthVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst steeringVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst transmissionVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst exteriorColorVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst fuelVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst portVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst salesVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst buyerVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst driveTypeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst bodyTypeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst stockStatusVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nlet resetKey = 0;\r\nconst featuresState = {\r\n  SafetySystemAnBrSy: false,\r\n  SafetySystemDrAi: false,\r\n  SafetySystemPaAi: false,\r\n  SafetySystemSiAi: false,\r\n  ComfortAiCoFr: false,\r\n  ComfortAiCoRe: false,\r\n  ComfortAMFMRa: false,\r\n  ComfortAMFMSt: false,\r\n  ComfortCDPl: false,\r\n  ComfortCDCh: false,\r\n  ComfortCrSpCo: false,\r\n  ComfortDiSp: false,\r\n  ComfortDVDPl: false,\r\n  ComfortHDD: false,\r\n  ComfortNaSyGPS: false,\r\n  ComfortPoSt: false,\r\n  ComfortPrAuSy: false,\r\n  ComfortReKeSy: false,\r\n  ComfortTiStWh: false,\r\n  InteriorLeSe: false,\r\n  InteriorPoDoLo: false,\r\n  InteriorPoMi: false,\r\n  InteriorPoSe: false,\r\n  InteriorPoWi: false,\r\n  InteriorReWiDe: false,\r\n  InteriorReWiWi: false,\r\n  InteriorThRoSe: false,\r\n  InteriorTiGl: false,\r\n  ExteriorAlWh: false,\r\n  ExteriorPoSlDo: false,\r\n  ExteriorSuRo: false,\r\n  SellingPointsCuWh: false,\r\n  SellingPointsFuLo: false,\r\n  SellingPointsMaHiAv: false,\r\n  SellingPointsBrNeTi: false,\r\n  SellingPointsNoAcHi: false,\r\n  SellingPointsNoSmPrOw: false,\r\n  SellingPointsOnOwHi: false,\r\n  SellingPointsPeRaTi: false,\r\n  SellingPointsReBo: false,\r\n  SellingPointsTuEn: false,\r\n  SellingPointsUpAuSy: false,\r\n};\r\n\r\nconst CheckBoxButton = ({ label, onChange, variable }) => {\r\n  const [checked, setChecked] = useState(variable);\r\n\r\n  // useEffect(() => {console.log(checked)}, [checked])\r\n\r\n  const handlePress = () => {\r\n\r\n    setChecked(!checked);\r\n    onChange(!checked);\r\n\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={{ flex: 1, justifyContent: 'center', }}\r\n      onPress={handlePress}\r\n    >\r\n      <Box\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        borderRadius={3}\r\n        bgColor={checked ? '#7b9cff' : 'white'}\r\n        margin={1}\r\n        overflow={'hidden'}\r\n        // h={50}\r\n        // w={180}\r\n        padding={2}\r\n        borderWidth={1}\r\n        borderColor={checked ? 'white' : 'muted.400'}\r\n      >\r\n        <Text\r\n          // fontSize={[9, 11, 12, 11, 12, 13]}\r\n          // maxW={[85, 100, 180, 100, 130, 180]}\r\n          textAlign={'center'}\r\n          noOfLines={3}\r\n          color={checked ? 'white' : 'muted.400'}\r\n        >\r\n          {label}\r\n        </Text>\r\n      </Box>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default function AddVehicle() {\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const loginName = useSelector((state) => state.loginName);\r\n\r\n  const [renderLoading, setRenderLoading] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n\r\n  const [name, setName] = useState(loginName);\r\n  // const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n  const dragSortableViewRef = useRef();\r\n\r\n  nameVariable.text = loginName;\r\n\r\n  const inputCarNotes = useRef(null);\r\n  const inputCarMemo = useRef(null);\r\n  const inputCarName = useRef(null);\r\n  const inputCarDesc = useRef(null);\r\n  const inputFobJpy = useRef(null);\r\n  const inputFobUsd = useRef(null);\r\n  const inputRegYear = useRef(null);\r\n  const selectRegYear = useRef(null);\r\n  const selectRegMonth = useRef(null);\r\n  const inputRegMonth = useRef(null);\r\n  const inputRefNum = useRef(null);\r\n  const inputStockIDNumber = useRef(null);\r\n  const inputChassis = useRef(null);\r\n  const inputModelCode = useRef(null);\r\n  const inputEngineCode = useRef(null);\r\n  const inputEngineDis = useRef(null);\r\n  const selectSteering = useRef(null);\r\n  const inputMileage = useRef(null);\r\n  const selectTransmission = useRef(null);\r\n  const selectExteriorColor = useRef(null);\r\n  const inputNumOfSeats = useRef(null);\r\n  const inputDoors = useRef(null);\r\n  const inputPurchasedPrice = useRef(null);\r\n  const inputFuel = useRef(null);\r\n  const selectFuel = useRef(null);\r\n  const selectPort = useRef(null);\r\n  const selectSales = useRef(null);\r\n  const selectBuyer = useRef(null);\r\n  const selectDriveType = useRef(null);\r\n  const inputDimensionLength = useRef(null);\r\n  const inputDimensionWidth = useRef(null);\r\n  const inputDimensionHeight = useRef(null);\r\n  const inputDimensionCubicMeters = useRef(null);\r\n  const inputDriveType = useRef(null);\r\n  const inputWeight = useRef(null);\r\n  const selectBodyType = useRef(null);\r\n  const selectStockStatus = useRef(null);\r\n  const textAreaAddMake = useRef(null);\r\n  const textAreaAddModel = useRef(null);\r\n  const textAreaAddTransmission = useRef(null);\r\n  const textAreaAddExteriorColor = useRef(null);\r\n  const textAreaAddFuel = useRef(null);\r\n  const textAreaAddPort = useRef(null);\r\n  const textAreaAddPortCode = useRef(null);\r\n  const textAreaAddSales = useRef(null);\r\n  const textAreaAddBuyer = useRef(null);\r\n  const textAreaAddSalesCode = useRef(null);\r\n  const textAreaAddBuyerCode = useRef(null);\r\n  const textAreaAddDriveType = useRef(null);\r\n  const textAreaAddBodyType = useRef(null);\r\n  const textAreaAddExpenseName = useRef(null);\r\n  const textAreaAddPaidTo = useRef(null);\r\n  const inputExpenseAmount = useRef(null);\r\n\r\n  // const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  // const selectedImages = useSelector((state) => state.selectedImages);\r\n  const portData = useSelector((state) => state.portData);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const transmissionData = useSelector((state) => state.transmissionData);\r\n  const fuelData = useSelector((state) => state.fuelData);\r\n  const buyerData = useSelector((state) => state.buyerData);\r\n  const salesData = useSelector((state) => state.salesData);\r\n  const driveTypeData = useSelector((state) => state.driveTypeData);\r\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\r\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\r\n  const currentYear = useSelector((state) => state.currentYear);\r\n\r\n  const minYear = 1970;\r\n  const years = Array.from({ length: currentYear - minYear + 1 }, (_, index) => currentYear - index);\r\n  globalRegYearDataVariable = years;\r\n\r\n\r\n\r\n\r\n  const steeringData = ['Left', 'Right'];\r\n\r\n\r\n  const selectMakeRef = useRef(null);\r\n  const selectModelRef = useRef(null);\r\n\r\n  const selectMakeForModelRef = useRef(null);\r\n  const selectMakeForAddModelRef = useRef(null);\r\n\r\n\r\n  const [isNoFeaturesSelected, setIsNoFeaturesSelected] = useState('white');\r\n\r\n\r\n  const [carNameError, setCarNameError] = useState('muted.500');\r\n  const [makeError, setMakeError] = useState('white');\r\n  const [modelError, setModelError] = useState('white');\r\n  const [regYearError, setRegYearError] = useState('white');\r\n  const [regMonthError, setRegMonthError] = useState('white');\r\n  const [refNumError, setRefNumError] = useState('white');\r\n  const [stockIDNumError, setStockIDNumError] = useState('white');\r\n  const [chassisError, setChassisError] = useState('white');\r\n  const [modelCodeError, setModelCodeError] = useState('white');\r\n  const [engineDisError, setEngineDisError] = useState('white');\r\n  const [steeringError, setSteeringError] = useState('white');\r\n  const [mileageError, setMileageError] = useState('white');\r\n  const [transmissionError, setTransmissionError] = useState('white');\r\n  const [exteriorColoError, setExteriorColoError] = useState('white');\r\n  const [numOfSeatsError, setNumOfSeatsError] = useState('white');\r\n  const [doorsError, setDoorsError] = useState('white');\r\n  const [purchasedPriceError, setPurchasedPriceError] = useState('white');\r\n  const [fuelError, setFuelError] = useState('white');\r\n  const [portError, setPortError] = useState('white');\r\n  const [buyerError, setBuyerError] = useState('white');\r\n  const [salesError, setSalesError] = useState('white');\r\n  const [dimensionLengthError, setDimensionLengthError] = useState('white');\r\n  const [dimensionWidthError, setDimensionWidthError] = useState('white');\r\n  const [dimensionHeightError, setDimensionHeightError] = useState('white');\r\n  const [driveTypeError, setDriveTypeError] = useState('white');\r\n  const [weightError, setWeightError] = useState('white');\r\n  const [bodyTypeError, setBodyTypeError] = useState('white');\r\n  const [stockStatusError, setStockStatusError] = useState('white');\r\n\r\n\r\n\r\n  const inputVehicleBoxRef = useRef(null);\r\n\r\n\r\n  const selectMakeBoxRef = useRef(null);\r\n  const selectModelBoxRef = useRef(null);\r\n  const selectRegYearBoxRef = useRef(null);\r\n  const selectRegMonthBoxRef = useRef(null);\r\n  const selectSteeringBoxRef = useRef(null);\r\n  const selectTransmissionBoxRef = useRef(null);\r\n  const selectExteriorColorBoxRef = useRef(null);\r\n  const selectFuelBoxRef = useRef(null);\r\n  const selectPortBoxRef = useRef(null);\r\n  const selectBuyerBoxRef = useRef(null);\r\n  const selectSalesBoxRef = useRef(null);\r\n  const selectDriveTypeBoxRef = useRef(null);\r\n  const selectBodyTypeBoxRef = useRef(null);\r\n  const selectStockStatusBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n\r\n    handleClearImages();\r\n\r\n    dispatch(setSupplyChainsCostsData([]));\r\n    dispatch(setDeleteImageVisible(true));\r\n    portVariable.id = '';\r\n    portVariable.text = '';\r\n    salesVariable.id = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.id = '';\r\n    buyerVariable.text = '';\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n    Object.keys(featuresState).forEach(property => {\r\n      featuresState[property] = false;\r\n    });\r\n\r\n    console.log('Sample');\r\n\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n  }, []);\r\n\r\n\r\n  const handleClearIfError = useCallback(() => {\r\n\r\n\r\n    handleClearToggleButton();\r\n    clearSelect();\r\n\r\n    inputCarName.current?.clear();\r\n    inputCarDesc.current?.clear();\r\n    inputFobJpy.current?.clear();\r\n    inputFobUsd.current?.clear();\r\n\r\n    inputRegYear.current?.clear();\r\n    inputRegMonth.current?.clear();\r\n    inputRefNum.current?.clear();\r\n    inputChassis.current?.clear();\r\n    inputModelCode.current?.clear();\r\n    inputEngineCode.current?.clear();\r\n    inputEngineDis.current?.clear();\r\n    inputMileage.current?.clear();\r\n    inputNumOfSeats.current?.clear();\r\n    inputDoors.current?.clear();\r\n    inputPurchasedPrice.current?.clear();\r\n    inputFuel.current?.clear();\r\n    inputDimensionLength.current?.clear();\r\n    inputDimensionWidth.current?.clear();\r\n    inputDimensionHeight.current?.clear();\r\n    inputDimensionCubicMeters.current.value = \"0.00\";\r\n    inputDriveType.current?.clear();\r\n    inputWeight.current?.clear();\r\n\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    portVariable.text = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.text = '';\r\n    portVariable.id = '';\r\n    salesVariable.id = '';\r\n    buyerVariable.id = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n  }, []);\r\n\r\n  // const uploadImages = useCallback(async () => {\r\n  //   const storageRef = ref(storage, `${globalVehicleFolderName}`);\r\n  //   const ImageFormat = { jpg: 'jpg' };\r\n\r\n  //   try {\r\n  //     // Get the names of the images to keep\r\n  //     const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n  //     // Delete existing files in the folder that do not match the names of the images to keep\r\n  //     const listResult = await listAll(storageRef);\r\n  //     await Promise.all(\r\n  //       listResult.items\r\n  //         .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n  //         .map((itemRef) => deleteObject(itemRef))\r\n  //     );\r\n\r\n  //     // Upload new images with or without watermarks based on the platform\r\n  //     function blobToArrayBuffer(blob) {\r\n  //       return new Promise((resolve, reject) => {\r\n  //         const reader = new FileReader();\r\n  //         reader.onload = () => resolve(reader.result);\r\n  //         reader.onerror = reject;\r\n  //         reader.readAsArrayBuffer(blob);\r\n  //       });\r\n  //     }\r\n\r\n  //     // ...\r\n\r\n  //     await Promise.all(\r\n  //       globalSelectedImages.map(async (asset, index) => {\r\n  //         const { uri } = asset;\r\n  //         const imageName = index.toString();\r\n\r\n  //         const response = await fetch(uri);\r\n  //         const blob = await response.blob();\r\n\r\n  //         const imageRef = ref(storage, `${globalVehicleFolderName}/${imageName}`);\r\n\r\n  //         // Define your watermark options\r\n  //         const watermarkOptions = {\r\n  //           text: 'Real Motor Japan',\r\n  //           color: '#FFFFFF', // Text color\r\n  //           fontSize: 20,\r\n  //           opacity: 50, // Set opacity if needed\r\n  //         };\r\n\r\n  //         // Convert the blob to an ArrayBuffer\r\n  //         const arrayBuffer = await blobToArrayBuffer(blob);\r\n\r\n  //         // Use watermark.js to add the watermark\r\n  //         const watermarkedArrayBuffer = await watermark([arrayBuffer, watermarkOptions])\r\n  //           .image(watermark.image.bottomCenter())\r\n  //           .then((img) => img.arrayBuffer());\r\n\r\n  //         // Convert the ArrayBuffer back to a Blob\r\n  //         const watermarkedBlob = new Blob([watermarkedArrayBuffer]);\r\n\r\n  //         await uploadBytes(imageRef, watermarkedBlob, { contentType: 'image/jpeg' });\r\n  //       })\r\n  //     );\r\n\r\n  //     console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\r\n  //   } catch (error) {\r\n  //     console.error('Error uploading images:', error);\r\n  //   }\r\n  // }, []);\r\n\r\n  const uploadImages = useCallback(async () => {\r\n\r\n    const storageRef = ref(storage, `${globalVehicleFolderName}`);\r\n    const ImageFormat = { jpg: 'jpg' };\r\n\r\n\r\n\r\n    try {\r\n      // Get the names of the images to keep\r\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n      // Delete existing files in the folder that do not match the names of the images to keep\r\n      const listResult = await listAll(storageRef);\r\n      await Promise.all(\r\n        listResult.items\r\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n          .map((itemRef) => deleteObject(itemRef))\r\n      );\r\n\r\n      await Promise.all(\r\n        globalSelectedImages.map(async (asset, index) => {\r\n          const { uri } = asset;\r\n          const imagename = index.toString();\r\n\r\n          const response = await fetch(uri);\r\n          const blob = await response.blob();\r\n\r\n          // Create an offscreen canvas\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          // Create a new image object\r\n          const img = new Image();\r\n          img.src = URL.createObjectURL(blob);\r\n\r\n          // Draw the image on the canvas\r\n          img.onload = async () => {\r\n            // Create a canvas element\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            // Calculate the desired width and height for the resized image\r\n            const maxWidth = 800; // Set your desired maximum width\r\n            const maxHeight = 600; // Set your desired maximum height\r\n            let newWidth = img.width;\r\n            let newHeight = img.height;\r\n\r\n            // Check if the image needs resizing\r\n            if (img.width > maxWidth) {\r\n              newWidth = maxWidth;\r\n              newHeight = (img.height * maxWidth) / img.width;\r\n            }\r\n\r\n            if (newHeight > maxHeight) {\r\n              newWidth = (newWidth * maxHeight) / newHeight;\r\n              newHeight = maxHeight;\r\n            }\r\n\r\n            // Set the canvas dimensions to the new width and height\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n\r\n            // Draw the resized image onto the canvas\r\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n\r\n            // Calculate the font size as a percentage of the image width\r\n            const fontSizePercentage = 3;\r\n            const imageRes = img.height * img.width;\r\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\r\n\r\n            ctx.font = `bold ${fontSize}px Arial`;\r\n            ctx.fillStyle = '#fff';\r\n            ctx.shadowColor = 'transparent';\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.lineWidth = 2;\r\n\r\n            // Calculate the position for the watermark text\r\n            const watermarkText = `Real Motor Japan ${globalReferenceNumber}`;\r\n            const textWidth = ctx.measureText(watermarkText).width;\r\n            const textHeight = fontSize; // Font size determines the text height\r\n\r\n            // Set padding around the text (adjust as needed)\r\n            const paddingX = 10;\r\n            const paddingY = 5;\r\n\r\n            // Calculate the position for the text shadow\r\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\r\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\r\n\r\n            // Increase the shadow thickness by adjusting the shadow blur radius\r\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\r\n\r\n            // Draw the text shadow (black)\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(watermarkText, xShadow, yShadow);\r\n\r\n            // Reset the shadow blur radius for the actual text\r\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\r\n\r\n            // Calculate the position for the actual text\r\n            const x = (canvas.width - textWidth) / 2;\r\n            const y = canvas.height - 20;\r\n\r\n            // Draw the actual text (white)\r\n            ctx.fillStyle = '#fff';\r\n            ctx.fillText(watermarkText, x, y);\r\n\r\n            // Convert the canvas to a blob\r\n            const watermarkedImageBlob = await new Promise(resolve => {\r\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\r\n            });\r\n\r\n            // Upload the resized image to Firebase Storage\r\n            const imageRef = ref(storage, `${globalVehicleFolderName}/${imagename}`);\r\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\r\n          };\r\n\r\n        })\r\n\r\n      );\r\n\r\n\r\n      console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleUpload = useCallback(async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    setCarNameError('muted.500');\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setBuyerError('white');\r\n    setSalesError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    const selectIsEmpty = makeVariable.text == \"\" ||\r\n      modelVariable.text == \"\" ||\r\n      regYearVariable.text == \"\" ||\r\n      regMonthVariable.text == \"\" ||\r\n      steeringVariable.text == \"\" ||\r\n      transmissionVariable.text == \"\" ||\r\n      exteriorColorVariable.text == \"\" ||\r\n      fuelVariable.text == \"\" ||\r\n      portVariable.text == \"\" ||\r\n      buyerVariable.text == \"\" ||\r\n      salesVariable.text == \"\" ||\r\n      driveTypeVariable.text == \"\" ||\r\n      bodyTypeVariable.text == \"\" ||\r\n      stockStatusVariable.text == \"\";\r\n\r\n    const inputIsEmpty = inputStockIDNumber.current?.value == \"\" || inputRefNum.current?.value == \"\" ||\r\n      inputChassis.current?.value == \"\" ||\r\n      inputModelCode.current?.value == \"\" ||\r\n      inputEngineDis.current?.value == \"\" ||\r\n      inputEngineDis.current?.value == 0 ||\r\n      inputMileage.current?.value == \"\" ||\r\n      inputMileage.current?.value == 0 ||\r\n      inputNumOfSeats.current?.value == \"\" ||\r\n      inputDoors.current?.value == \"\" ||\r\n      inputNumOfSeats.current?.value == 0 ||\r\n      inputDoors.current?.value == 0 ||\r\n      inputPurchasedPrice.current?.value == 0 ||\r\n      inputPurchasedPrice.current?.value == \"\" ||\r\n      inputDimensionLength.current?.value == \"\" ||\r\n      inputDimensionWidth.current?.value == \"\" ||\r\n      inputDimensionHeight.current?.value == \"\" ||\r\n      inputDimensionCubicMeters.current?.value == \"\" ||\r\n      inputDimensionLength.current?.value == 0 ||\r\n      inputDimensionWidth.current?.value == 0 ||\r\n      inputDimensionHeight.current?.value == 0 ||\r\n      inputDimensionCubicMeters.current?.value == 0 ||\r\n      inputWeight.current?.value == \"\" ||\r\n      inputWeight.current?.value == 0 ||\r\n      inputCarName.current?.value == \"\";\r\n\r\n    // const inputExceedLength = input;\r\n    const allValuesAreFalse = Object.values(featuresState).every((value) => value === false);\r\n\r\n    console.log(inputIsEmpty || selectIsEmpty);\r\n\r\n    if (inputIsEmpty || selectIsEmpty || allValuesAreFalse) {\r\n      dispatch(setLoadingModalVisible(false));\r\n      inputVehicleBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n      if (allValuesAreFalse) {\r\n        // All features are false\r\n        console.log('All features are false');\r\n        setIsNoFeaturesSelected('danger.400');\r\n        // featureBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        // handleModalUploadClose();\r\n      } else {\r\n        // At least one feature is true\r\n        console.log('At least one feature is true.');\r\n        // handleModalUploadClose();\r\n      }\r\n\r\n      if (inputCarName.current?.value == \"\") {\r\n        inputCarName.current.scrollIntoView({ behavior: 'smooth' });\r\n        setCarNameError('danger.400');\r\n      }\r\n\r\n      if (bodyTypeVariable.text == \"\") {\r\n        selectBodyTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setBodyTypeError('danger.400');\r\n      }\r\n\r\n      if (stockStatusVariable.text == \"\") {\r\n        selectStockStatusBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setStockStatusError('danger.400');\r\n      }\r\n\r\n      if (inputWeight.current?.value == \"\" || inputWeight.current?.value == 0) {\r\n        inputWeight.current.scrollIntoView({ behavior: 'smooth' });\r\n        setWeightError('danger.400');\r\n      }\r\n\r\n      if (driveTypeVariable.text == \"\") {\r\n        selectDriveTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDriveTypeError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionHeight.current?.value == \"\" || inputDimensionHeight.current?.value == 0) {\r\n        inputDimensionHeight.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionHeightError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionWidth.current?.value == \"\" || inputDimensionWidth.current?.value == 0) {\r\n        inputDimensionWidth.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionWidthError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionLength.current?.value == \"\" || inputDimensionLength.current?.value == 0) {\r\n        inputDimensionLength.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionLengthError('danger.400');\r\n      }\r\n\r\n      if (fuelVariable.text == \"\") {\r\n        selectFuelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setFuelError('danger.400');\r\n      }\r\n\r\n      if (inputDoors.current?.value == \"\" || inputDoors.current?.value == 0) {\r\n        inputDoors.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDoorsError('danger.400');\r\n      }\r\n      if (inputPurchasedPrice.current?.value == \"\" || inputPurchasedPrice.current?.value == 0) {\r\n        inputPurchasedPrice.current.scrollIntoView({ behavior: 'smooth' });\r\n        setPurchasedPriceError('danger.400');\r\n      }\r\n\r\n      if (inputNumOfSeats.current?.value == \"\") {\r\n        inputNumOfSeats.current.scrollIntoView({ behavior: 'smooth' });\r\n        setNumOfSeatsError('danger.400');\r\n      }\r\n\r\n      if (exteriorColorVariable.text == \"\") {\r\n        selectExteriorColorBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setExteriorColoError('danger.400');\r\n      }\r\n\r\n      if (transmissionVariable.text == \"\") {\r\n        selectTransmissionBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setTransmissionError('danger.400');\r\n      }\r\n\r\n      if (inputMileage.current?.value == \"\" || inputMileage.current?.value == 0) {\r\n        inputMileage.current.scrollIntoView({ behavior: 'smooth' });\r\n        setMileageError('danger.400');\r\n      }\r\n\r\n      if (steeringVariable.text == \"\") {\r\n        selectSteeringBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setSteeringError('danger.400');\r\n      }\r\n\r\n      if (inputEngineDis.current?.value == \"\" || inputEngineDis.current?.value == 0) {\r\n        inputEngineDis.current.scrollIntoView({ behavior: 'smooth' });\r\n        setEngineDisError('danger.400');\r\n      }\r\n\r\n      if (inputModelCode.current?.value == \"\") {\r\n        inputModelCode.current.scrollIntoView({ behavior: 'smooth' });\r\n        setModelCodeError('danger.400');\r\n      }\r\n\r\n      if (inputChassis.current?.value == \"\") {\r\n        inputChassis.current.scrollIntoView({ behavior: 'smooth' });\r\n        setChassisError('danger.400');\r\n      }\r\n\r\n      if (inputRefNum.current?.value == \"\") {\r\n        inputRefNum.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRefNumError('danger.400');\r\n      }\r\n      if (buyerVariable.text == \"\") {\r\n        selectBuyerBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setBuyerError('danger.400');\r\n      }\r\n\r\n      if (salesVariable.text == \"\") {\r\n        selectSalesBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setSalesError('danger.400');\r\n      }\r\n\r\n\r\n      if (portVariable.text == \"\") {\r\n        selectPortBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setPortError('danger.400');\r\n      }\r\n\r\n\r\n      if (regMonthVariable.text == \"\") {\r\n        selectRegMonthBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRegMonthError('danger.400');\r\n      }\r\n\r\n      if (regYearVariable.text == \"\") {\r\n        selectRegYearBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRegYearError('danger.400');\r\n      }\r\n\r\n      if (modelVariable.text == \"\") {\r\n        selectModelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setModelError('danger.400');\r\n      }\r\n\r\n      if (makeVariable.text == \"\") {\r\n        selectMakeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setMakeError('danger.400');\r\n      }\r\n\r\n      if (inputStockIDNumber.current?.value == \"\") {\r\n        inputStockIDNumber.current.scrollIntoView({ behavior: 'smooth' });\r\n        setStockIDNumError('danger.400');\r\n      }\r\n\r\n    }\r\n    else {\r\n      const stockCollectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n      const stockID = inputStockIDNumber.current?.value;\r\n      const docQuery = doc(stockCollectionRef, stockID);\r\n      const docSnap = await getDoc(docQuery);\r\n\r\n      dispatch(setLoadingModalVisible(true));\r\n      globalReferenceNumber = inputRefNum.current?.value;\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const timestampForID = moment(datetime).format('YYYYMMDDHHmmss');\r\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n      const year = moment(datetime).format('YYYY');\r\n      const month = moment(datetime).format('MM');\r\n      const monthWithDay = moment(datetime).format('MM/DD');\r\n      const date = moment(datetime).format('YYYY/MM/DD');\r\n      const day = moment(datetime).format('DD');\r\n      const time = moment(datetime).format('HH:mm');\r\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n      // console.log(`${timestampForID}${inputRefNum.current?.value}`);\r\n\r\n      const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n      const docRef = doc(collectionRef, inputStockIDNumber.current?.value);\r\n\r\n      const docData = docSnap.data();\r\n      // Your data object to be added\r\n      const docSnapshot = await getDoc(docRef);\r\n\r\n\r\n\r\n\r\n      const keywordsData = [\r\n        inputRefNum.current?.value,\r\n        inputCarName.current?.value,\r\n        inputStockIDNumber.current?.value,\r\n        regYearVariable.text,\r\n        makeVariable.text,\r\n        modelVariable.text,\r\n        inputChassis.current?.value,\r\n        `${makeVariable.text} ${modelVariable.text}`,\r\n        `${regYearVariable.text} ${makeVariable.text}`,\r\n      ]\r\n      const fobHistoryData = {\r\n        date: formattedTime,\r\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\r\n        changedBy: nameVariable.text,\r\n      };\r\n\r\n      let fobHistoryValue;\r\n      const inputFobValue = inputFobJpy.current?.value;\r\n      if (globalFobPrice !== inputFobValue && inputFobValue !== '') {\r\n        fobHistoryValue = arrayUnion(fobHistoryData);\r\n      }\r\n\r\n      const data = {\r\n        keywords: keywordsData,\r\n        imageCount: globalSelectedImages.length,\r\n        supplyChainsCostsData: globalSupplyChainCostsData,\r\n        ...(fobHistoryValue && { fobHistory: fobHistoryValue }),\r\n        // ...(docSnap.exists() || docData.inputStockIDNumber.current?.value.hasOwnProperty('dateAdded')\r\n        // ? { updatedDate: formattedTime }\r\n        // : { dateAdded: formattedTime }),\r\n        // dateAdded: formattedTime, \r\n        display: false,\r\n        photos: false,\r\n        stockID: inputStockIDNumber.current?.value,\r\n        make: makeVariable.text,\r\n        model: modelVariable.text,\r\n        regYear: regYearVariable.text,\r\n        regMonth: regMonthVariable.text,\r\n        referenceNumber: inputRefNum.current?.value,\r\n        chassisNumber: inputChassis.current?.value,\r\n        modelCode: inputModelCode.current?.value,\r\n        engineCode: inputEngineCode.current?.value,\r\n        engineDisplacement: inputEngineDis.current.value.replace(/,/g, ''),\r\n        steering: steeringVariable.text,\r\n        mileage: inputMileage.current.value.replace(/,/g, ''),\r\n        transmission: transmissionVariable.text,\r\n        exteriorColor: exteriorColorVariable.text,\r\n        numberOfSeats: inputNumOfSeats.current?.value,\r\n        doors: inputDoors.current?.value,\r\n        purchasedPrice: inputPurchasedPrice.current.value.replace(/,/g, ''),\r\n        fuel: fuelVariable.text,\r\n        port: portVariable.text,\r\n        sales: salesVariable.text,\r\n        buyer: buyerVariable.text,\r\n        portID: portVariable.id,\r\n        salesID: salesVariable.id,\r\n        buyerID: buyerVariable.id,\r\n        dimensionLength: inputDimensionLength.current.value.replace(/,/g, ''),\r\n        dimensionWidth: inputDimensionWidth.current.value.replace(/,/g, ''),\r\n        dimensionHeight: inputDimensionHeight.current.value.replace(/,/g, ''),\r\n        dimensionCubicMeters: inputDimensionCubicMeters.current.value.replace(/,/g, ''),\r\n        driveType: driveTypeVariable.text,\r\n        weight: inputWeight.current.value.replace(/,/g, ''),\r\n        bodyType: bodyTypeVariable.text,\r\n        stockStatus: stockStatusVariable.text,\r\n        carName: inputCarName.current?.value,\r\n        carDescription: inputCarDesc.current?.value,\r\n        notes: inputCarNotes.current?.value,\r\n        memo: inputCarMemo.current?.value,\r\n\r\n        comfort: {\r\n          ComfortAiCoFr: featuresState.ComfortAiCoFr,\r\n          ComfortAiCoRe: featuresState.ComfortAiCoRe,\r\n          ComfortAMFMRa: featuresState.ComfortAMFMRa,\r\n          ComfortAMFMSt: featuresState.ComfortAMFMSt,\r\n          ComfortCDPl: featuresState.ComfortCDPl,\r\n          ComfortCDCh: featuresState.ComfortCDCh,\r\n          ComfortCrSpCo: featuresState.ComfortCrSpCo,\r\n          ComfortDiSp: featuresState.ComfortDiSp,\r\n          ComfortDVDPl: featuresState.ComfortDVDPl,\r\n          ComfortHDD: featuresState.ComfortHDD,\r\n          ComfortNaSyGPS: featuresState.ComfortNaSyGPS,\r\n          ComfortPoSt: featuresState.ComfortPoSt,\r\n          ComfortPrAuSy: featuresState.ComfortPrAuSy,\r\n          ComfortReKeSy: featuresState.ComfortReKeSy,\r\n          ComfortTiStWh: featuresState.ComfortTiStWh,\r\n        },\r\n\r\n        ComfortAiCoFr: featuresState.ComfortAiCoFr,\r\n        ComfortAiCoRe: featuresState.ComfortAiCoRe,\r\n        ComfortAMFMRa: featuresState.ComfortAMFMRa,\r\n        ComfortAMFMSt: featuresState.ComfortAMFMSt,\r\n        ComfortCDPl: featuresState.ComfortCDPl,\r\n        ComfortCDCh: featuresState.ComfortCDCh,\r\n        ComfortCrSpCo: featuresState.ComfortCrSpCo,\r\n        ComfortDiSp: featuresState.ComfortDiSp,\r\n        ComfortDVDPl: featuresState.ComfortDVDPl,\r\n        ComfortHDD: featuresState.ComfortHDD,\r\n        ComfortNaSyGPS: featuresState.ComfortNaSyGPS,\r\n        ComfortPoSt: featuresState.ComfortPoSt,\r\n        ComfortPrAuSy: featuresState.ComfortPrAuSy,\r\n        ComfortReKeSy: featuresState.ComfortReKeSy,\r\n        ComfortTiStWh: featuresState.ComfortTiStWh,\r\n\r\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\r\n\r\n        safetySystem: {\r\n          SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy,\r\n          SafetySystemDrAi: featuresState.SafetySystemDrAi,\r\n          SafetySystemPaAi: featuresState.SafetySystemPaAi,\r\n          SafetySystemSiAi: featuresState.SafetySystemSiAi,\r\n\r\n        },\r\n\r\n        SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy,\r\n        SafetySystemDrAi: featuresState.SafetySystemDrAi,\r\n        SafetySystemPaAi: featuresState.SafetySystemPaAi,\r\n        SafetySystemSiAi: featuresState.SafetySystemSiAi,\r\n\r\n        interior: {\r\n          InteriorLeSe: featuresState.InteriorLeSe,\r\n          InteriorPoDoLo: featuresState.InteriorPoDoLo,\r\n          InteriorPoMi: featuresState.InteriorPoMi,\r\n          InteriorPoSe: featuresState.InteriorPoSe,\r\n          InteriorPoWi: featuresState.InteriorPoWi,\r\n          InteriorReWiDe: featuresState.InteriorReWiDe,\r\n          InteriorReWiWi: featuresState.InteriorReWiWi,\r\n          InteriorThRoSe: featuresState.InteriorThRoSe,\r\n          InteriorTiGl: featuresState.InteriorTiGl,\r\n        },\r\n\r\n        InteriorLeSe: featuresState.InteriorLeSe,\r\n        InteriorPoDoLo: featuresState.InteriorPoDoLo,\r\n        InteriorPoMi: featuresState.InteriorPoMi,\r\n        InteriorPoSe: featuresState.InteriorPoSe,\r\n        InteriorPoWi: featuresState.InteriorPoWi,\r\n        InteriorReWiDe: featuresState.InteriorReWiDe,\r\n        InteriorReWiWi: featuresState.InteriorReWiWi,\r\n        InteriorThRoSe: featuresState.InteriorThRoSe,\r\n        InteriorTiGl: featuresState.InteriorTiGl,\r\n\r\n        exterior: {\r\n          ExteriorAlWh: featuresState.ExteriorAlWh,\r\n          ExteriorPoSlDo: featuresState.ExteriorPoSlDo,\r\n          ExteriorSuRo: featuresState.ExteriorSuRo,\r\n        },\r\n        ExteriorAlWh: featuresState.ExteriorAlWh,\r\n        ExteriorPoSlDo: featuresState.ExteriorPoSlDo,\r\n        ExteriorSuRo: featuresState.ExteriorSuRo,\r\n\r\n        sellingPoints: {\r\n          SellingPointsCuWh: featuresState.SellingPointsCuWh,\r\n          SellingPointsFuLo: featuresState.SellingPointsFuLo,\r\n          SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv,\r\n          SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi,\r\n          SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi,\r\n          SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw,\r\n          SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi,\r\n          SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi,\r\n          SellingPointsReBo: featuresState.SellingPointsReBo,\r\n          SellingPointsTuEn: featuresState.SellingPointsTuEn,\r\n          SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy,\r\n        },\r\n\r\n        SellingPointsCuWh: featuresState.SellingPointsCuWh,\r\n        SellingPointsFuLo: featuresState.SellingPointsFuLo,\r\n        SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv,\r\n        SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi,\r\n        SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi,\r\n        SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw,\r\n        SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi,\r\n        SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi,\r\n        SellingPointsReBo: featuresState.SellingPointsReBo,\r\n        SellingPointsTuEn: featuresState.SellingPointsTuEn,\r\n        SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy,\r\n\r\n\r\n        // Add more fields as needed\r\n      };\r\n\r\n      // Get a reference to the document with the given stock ID\r\n\r\n\r\n      // Get the document\r\n\r\n\r\n      // Check if the document exists\r\n      if (docSnap.exists()) {\r\n        updateDoc(docRef, data)\r\n          .then(async () => {\r\n            try {\r\n\r\n              await uploadImages();\r\n              dispatch(setLoadingModalVisible(false));\r\n              dispatch(setIsUpdateSuccessModalOpen(true));\r\n\r\n              try {\r\n                // Check if the document exists\r\n                const docSnapshot = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                  const dataDoc = docSnap.data();\r\n                  if (dataDoc) {\r\n                    if ('dateAdded' in dataDoc) {\r\n                      // The document exists and has a 'dateAdded' field\r\n                      console.log('Date Update');\r\n                      // Update the 'updatedDate' field without removing 'dateAdded'\r\n                      const updates = {\r\n                        updatedDate: formattedTime, // Replace 'formattedTime' with the updated date value\r\n                      };\r\n\r\n                      // Use updateDoc to only update the 'updatedDate' field in the document\r\n                      await updateDoc(docRef, updates);\r\n                    } else {\r\n                      // The document exists, but it doesn't have a 'dateAdded' field\r\n                      console.log('Date Added');\r\n                      // Update the 'dateAdded' field without removing other fields\r\n                      const updates = {\r\n                        dateAdded: formattedTime, // Replace 'formattedTime' with the date value\r\n                      };\r\n\r\n                      // Use updateDoc to only update the 'dateAdded' field in the document\r\n                      await updateDoc(docRef, updates);\r\n                    }\r\n                  } else {\r\n                    // The document exists, but it doesn't have a 'dateAdded' field\r\n                    console.log('Date Added');\r\n                    // Update the 'dateAdded' field without removing other fields\r\n                    const updates = {\r\n                      dateAdded: formattedTime, // Replace 'formattedTime' with the date value\r\n                    };\r\n\r\n                    // Use updateDoc to only update the 'dateAdded' field in the document\r\n                    await updateDoc(docRef, updates);\r\n                  }\r\n                } else {\r\n                  // The document does not exist\r\n                  console.log('Date Added');\r\n                }\r\n              } catch (error) {\r\n                console.error('Error checking document:', error);\r\n              }\r\n\r\n              const logData = {\r\n                message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  inputStockIDNumber.current.value.toLowerCase(),\r\n                  `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\r\n                  'Vehicle Updated'.toLowerCase(),\r\n                  'Vehicle'.toLowerCase(),\r\n                  'Updated'.toLowerCase(),\r\n                  inputCarName.current.value.toLowerCase(),\r\n                  inputRefNum.current.value.toLowerCase(),\r\n                  nameVariable.text.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n              };\r\n              dispatch(setLoadingModalVisible(false));\r\n              handleClearImages();\r\n              addLogToCollection(logData);\r\n              handleClear();\r\n              console.log('Document updated successfully!');\r\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\r\n            } catch (error) {\r\n              // Handle errors that may occur during the update process\r\n              console.error('Error updating document:', error);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.error('Error updating document: ', error);\r\n          });\r\n      }\r\n      else {\r\n        const dataWithDateAdded = {\r\n          ...data,\r\n          dateAdded: formattedTime,\r\n        };\r\n\r\n        setDoc(docRef, dataWithDateAdded)\r\n          .then(async () => {\r\n\r\n            try {\r\n              await uploadImages();\r\n              dispatch(setLoadingModalVisible(false));\r\n              dispatch(setIsSuccessModalOpen(true));\r\n\r\n              // try {\r\n              //   // Check if the document exists\r\n              //   const docSnapshot = await getDoc(docRef);\r\n\r\n              //   if (docSnapshot.exists()) {\r\n              //     const data = docSnapshot.data();\r\n              //     if (data) {\r\n              //       if ('dateAdded' in data) {\r\n              //         // The document exists and has a 'dateAdded' field\r\n              //         console.log('Date Update');\r\n              //         // Update the 'updatedDate' field in the document\r\n              //         const updates = {\r\n              //           updatedDate: formattedTime, // Replace 'newFieldValue' with the updated date value\r\n              //         };\r\n\r\n              //         // Use setDoc to update the 'updatedDate' field in the document\r\n              //         await setDoc(docRef, updates, { merge: true });\r\n              //       } else {\r\n              //         // The document exists, but it doesn't have a 'dateAdded' field\r\n              //         console.log('Date Added');\r\n              //         // Update the 'dateAdded' field in the document\r\n              //         const updates = {\r\n              //           dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\r\n              //         };\r\n\r\n              //         // Use setDoc to update the 'dateAdded' field in the document\r\n              //         await setDoc(docRef, updates, { merge: true });\r\n              //       }\r\n              //     } else {\r\n              //       // The document exists, but it doesn't have a 'dateAdded' field\r\n              //       console.log('Date Added');\r\n              //       // Update the 'dateAdded' field in the document\r\n              //       const updates = {\r\n              //         dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\r\n              //       };\r\n\r\n              //       // Use setDoc to update the 'dateAdded' field in the document\r\n              //       await setDoc(docRef, updates, { merge: true });\r\n              //     }\r\n              //   } else {\r\n              //     // The document does not exist\r\n              //     console.log('Date Added');\r\n              //   }\r\n              // } catch (error) {\r\n              //   console.error('Error checking document:', error);\r\n              // }\r\n\r\n              const logData = {\r\n                message: `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  inputStockIDNumber.current.value.toLowerCase(),\r\n                  `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\r\n                  'Vehicle Added'.toLowerCase(),\r\n                  'Vehicle'.toLowerCase(),\r\n                  'Added'.toLowerCase(),\r\n                  inputCarName.current.value.toLowerCase(),\r\n                  inputRefNum.current.value.toLowerCase(),\r\n                  nameVariable.text.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n              };\r\n\r\n              handleClearImages();\r\n              addLogToCollection(logData);\r\n              handleClear();\r\n              console.log('Document added successfully!');\r\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n          })\r\n          .catch((error) => {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.error('Error adding document: ', error);\r\n          });\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleClearToggleButton = () => {\r\n    resetKey++;\r\n\r\n    featuresState.SafetySystemAnBrSy = false;\r\n    featuresState.SafetySystemDrAi = false;\r\n    featuresState.SafetySystemPaAi = false;\r\n    featuresState.SafetySystemSiAi = false;\r\n    featuresState.ComfortAiCoFr = false;\r\n    featuresState.ComfortAiCoRe = false;\r\n    featuresState.ComfortAMFMRa = false;\r\n    featuresState.ComfortAMFMSt = false;\r\n    featuresState.ComfortCDPl = false;\r\n    featuresState.ComfortCDCh = false;\r\n    featuresState.ComfortCrSpCo = false;\r\n    featuresState.ComfortDiSp = false;\r\n    featuresState.ComfortDVDPl = false;\r\n    featuresState.ComfortHDD = false;\r\n    featuresState.ComfortNaSyGPS = false;\r\n    featuresState.ComfortPoSt = false;\r\n    featuresState.ComfortPrAuSy = false;\r\n    featuresState.ComfortReKeSy = false;\r\n    featuresState.ComfortTiStWh = false;\r\n    featuresState.InteriorLeSe = false;\r\n    featuresState.InteriorPoDoLo = false;\r\n    featuresState.InteriorPoMi = false;\r\n    featuresState.InteriorPoSe = false;\r\n    featuresState.InteriorPoWi = false;\r\n    featuresState.InteriorReWiDe = false;\r\n    featuresState.InteriorReWiWi = false;\r\n    featuresState.InteriorThRoSe = false;\r\n    featuresState.InteriorTiGl = false;\r\n    featuresState.ExteriorAlWh = false;\r\n    featuresState.ExteriorPoSlDo = false;\r\n    featuresState.ExteriorSuRo = false;\r\n    featuresState.SellingPointsCuWh = false;\r\n    featuresState.SellingPointsFuLo = false;\r\n    featuresState.SellingPointsMaHiAv = false;\r\n    featuresState.SellingPointsBrNeTi = false;\r\n    featuresState.SellingPointsNoAcHi = false;\r\n    featuresState.SellingPointsNoSmPrOw = false;\r\n    featuresState.SellingPointsOnOwHi = false;\r\n    featuresState.SellingPointsPeRaTi = false;\r\n    featuresState.SellingPointsReBo = false;\r\n    featuresState.SellingPointsTuEn = false;\r\n    featuresState.SellingPointsUpAuSy = false;\r\n  };\r\n\r\n  const handleClear = useCallback(() => {\r\n\r\n    handleClearToggleButton();\r\n    handleClearImages();\r\n    clearSelect();\r\n\r\n\r\n    dispatch(setSupplyChainsCostsData([]));\r\n    globalSupplyChainCostsData = [];\r\n    globalSupplyChainCostsAmount = '';\r\n    globalFobPrice = '';\r\n\r\n    inputStockIDNumber.current?.clear();\r\n    inputCarName.current?.clear();\r\n    inputCarDesc.current?.clear();\r\n    inputFobJpy.current?.clear();\r\n    inputFobUsd.current?.clear();\r\n\r\n    inputRegYear.current?.clear();\r\n    inputRegMonth.current?.clear();\r\n    inputRefNum.current?.clear();\r\n    inputChassis.current?.clear();\r\n    inputModelCode.current?.clear();\r\n    inputEngineCode.current?.clear();\r\n    inputEngineDis.current?.clear();\r\n    inputMileage.current?.clear();\r\n    inputNumOfSeats.current?.clear();\r\n    inputDoors.current?.clear();\r\n    inputPurchasedPrice.current?.clear();\r\n    inputFuel.current?.clear();\r\n    inputDimensionLength.current?.clear();\r\n    inputDimensionWidth.current?.clear();\r\n    inputDimensionHeight.current?.clear();\r\n    inputDimensionCubicMeters.current.value = \"0.00\";\r\n    inputDriveType.current?.clear();\r\n    inputWeight.current?.clear();\r\n    inputCarNotes.current?.clear();\r\n    inputCarMemo.current?.clear();\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    portVariable.text = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.text = '';\r\n    portVariable.id = '';\r\n    salesVariable.id = '';\r\n    buyerVariable.id = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    // handleModalClearClose();\r\n\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  // const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n  //   navigation.navigate(\"LOGS\");\r\n  // }, []);\r\n  // const handleToggleAddAccount = useCallback(() => {\r\n\r\n\r\n  //   navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  // }, []);\r\n\r\n  // const handleToggleAccountList = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ACCOUNT LIST\");\r\n  // }, []);\r\n\r\n  // const handleToggleAddVehicle = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ADD NEW VEHICLE\");\r\n  // }, []);\r\n\r\n\r\n  // const handleVehicleList = useCallback(() => {\r\n  //   navigation.navigate(\"VEHICLE LIST\");\r\n  // }, []);\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(projectControlAuth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(projectControlAuth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate(\"/Login\");\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = projectControlAuth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(projectControlAuth).then(() => {\r\n      // navigation.navigate('Login');\r\n      navigate(\"/Login\");\r\n      setEmail('');\r\n      setName('');\r\n    }).catch(() => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n  const { width } = Dimensions.get('window');\r\n\r\n\r\n  const handleInputPurchasedPriceChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputPurchasedPrice.current.value = formattedValue;\r\n\r\n  };\r\n\r\n\r\n  const handleInputFobJpyChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Check if the numeric value starts with 0\r\n    if (numericValue.startsWith('0')) {\r\n      // Handle the case when the value starts with 0\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n      return;\r\n    }\r\n\r\n    // Truncate the numeric value to a maximum of 9 digits\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n    if (formattedValue !== '') {\r\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\r\n\r\n      if (!isNaN(multipliedValue)) {\r\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\r\n      } else {\r\n        // Handle the case when the multipliedValue is NaN\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: '' });\r\n      }\r\n    } else {\r\n      // Handle the case when formattedValue is empty\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleInputFobJpyChange(inputFobJpy.current?.value);\r\n  }, [jpyToUsd]);\r\n\r\n\r\n\r\n  const handleAddMakeTextChange = () => {\r\n    const newText = textAreaAddMake.current?.value?.toUpperCase();\r\n    textAreaAddMake.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n\r\n  const handleAddTransmissionTextChange = () => {\r\n    const textAreaValue = textAreaAddTransmission.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddTransmission.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddFuelTextChange = () => {\r\n    const textAreaValue = textAreaAddFuel.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddFuel.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddPortTextChange = () => {\r\n    const textAreaValue = textAreaAddPort.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPort.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPortCodeTextChange = () => {\r\n    const newText = textAreaAddPortCode.current?.value?.toUpperCase();\r\n    textAreaAddPortCode.current?.setNativeProps({ text: newText });\r\n    // Remove any non-numeric characters\r\n\r\n\r\n  };\r\n\r\n  const handleAddSalesTextChange = () => {\r\n    const textAreaValue = textAreaAddSales.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddSales.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddSalesCodeTextChange = () => {\r\n    const newText = textAreaAddSalesCode.current?.value?.toUpperCase();\r\n    textAreaAddSalesCode.current?.setNativeProps({ text: newText });\r\n  };\r\n\r\n  const handleAddBuyerTextChange = () => {\r\n    const textAreaValue = textAreaAddBuyer.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddBuyer.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddBuyerCodeTextChange = (text) => {\r\n\r\n    const numericValue = text.replace(/[^0-9\\n]/g, '');\r\n\r\n    // Update the value of the textarea while preventing new lines\r\n    textAreaAddBuyerCode.current.value = numericValue;\r\n  };\r\n\r\n  const handleAddDriveTypeTextChange = () => {\r\n    const textAreaValue = textAreaAddDriveType.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddDriveType.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddBodyTypeTextChange = () => {\r\n    const textAreaValue = textAreaAddBodyType.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddBodyType.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddExteriorColorTextChange = () => {\r\n    const textAreaValue = textAreaAddExteriorColor.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExteriorColor.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddExpenseNameTextChange = () => {\r\n    const textAreaValue = textAreaAddExpenseName.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPaidToTextChange = () => {\r\n    const textAreaValue = textAreaAddPaidTo.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleInputRefNumChange = () => {\r\n    const newText = inputRefNum.current?.value?.toUpperCase();\r\n    inputRefNum.current?.setNativeProps({ text: newText });\r\n\r\n    setRefNumFromSelects();\r\n  };\r\n\r\n  const handleInputChassisChange = () => {\r\n    const newText = inputChassis.current?.value?.toUpperCase();\r\n    inputChassis.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n  const handleInputModelCodeChange = () => {\r\n    const newText = inputModelCode.current?.value?.toUpperCase();\r\n    inputModelCode.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n  const handleInputEngineCodeChange = () => {\r\n    const newText = inputEngineCode.current?.value?.toUpperCase();\r\n    inputEngineCode.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n\r\n\r\n  const handleInputEngineDisChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 5);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputEngineDis.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputExpenseAmountChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputExpenseAmount.current.value = formattedValue;\r\n  };\r\n\r\n\r\n  const handleInputMileageChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputMileage.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputNumOfSeatsChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 3);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputNumOfSeats.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputDoorsChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 2);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputDoors.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputDimensionLengthChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionLength.current.value = formattedValue;\r\n\r\n    calculateCubicMeters();\r\n  };\r\n\r\n\r\n  const handleInputDimensionWidthChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionWidth.current.value = formattedValue;\r\n\r\n    calculateCubicMeters();\r\n  };\r\n\r\n  const handleInputDimensionHeightChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionHeight.current.value = formattedValue;\r\n    calculateCubicMeters();\r\n\r\n  };\r\n\r\n  const handleInputDimensionCubicMetersChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputDimensionCubicMeters.current.value = formattedValue;\r\n    calculateCubicMeters();\r\n  };\r\n\r\n  const handleInputWeightChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 5);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputWeight.current.value = formattedValue;\r\n  };\r\n\r\n  const monthNumbers = [\r\n    '01',\r\n    '02',\r\n    '03',\r\n    '04',\r\n    '05',\r\n    '06',\r\n    '07',\r\n    '08',\r\n    '09',\r\n    '10',\r\n    '11',\r\n    '12'\r\n  ];\r\n\r\n  const calculateCubicMeters = () => {\r\n    const length = parseFloat(inputDimensionLength.current?.value?.replace(/,/g, '')) || 0;\r\n    const width = parseFloat(inputDimensionWidth.current?.value?.replace(/,/g, '')) || 0;\r\n    const height = parseFloat(inputDimensionHeight.current?.value?.replace(/,/g, '')) || 0;\r\n\r\n    const result = (length * width * height) / 1000000;\r\n    const resultFormatted = result.toFixed(2);\r\n\r\n    // setCubicMeters(resultFormatted);\r\n    inputDimensionCubicMeters.current.setNativeProps({ text: resultFormatted });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   let makeValue = makeVariable.text;\r\n\r\n  //   if (makeValue !== '') {\r\n  //     setCarNameFromSelects();\r\n  //   }\r\n\r\n  // }, [modelData]);\r\n\r\n\r\n  const setRefNumFromSelects = () => {\r\n    let portValue = portVariable.id;\r\n    let stockIDValue = inputStockIDNumber.current?.value;\r\n    let salesValue = salesVariable.id;\r\n    let buyerValue = buyerVariable.id;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${portValue}${stockIDValue}${salesValue}-${buyerValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    // inputCarName.current.setNativeProps({ text: carName });\r\n    inputRefNum.current.setNativeProps({ text: carName });\r\n    referenceNumberVariable.text = carName;\r\n    // console.log(carName);\r\n  };\r\n\r\n\r\n  const setCarNameFromSelects = () => {\r\n    let regYearValue = regYearVariable.text;\r\n    let makeValue = makeVariable.text;\r\n    let modelValue = modelVariable.text;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    inputCarName.current.setNativeProps({ text: carName });\r\n\r\n  };\r\n\r\n  const setCarNameFromSelectsModel = () => {\r\n    let regYearValue = regYearVariable.text;\r\n    let makeValue = makeVariable.text;\r\n    let modelValue = modelVariable.text;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    inputCarName.current.setNativeProps({ text: carName });\r\n\r\n\r\n  };\r\n  // const [selectedMake, setSelectedMake] = useState();\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n\r\n\r\n  // }, []);\r\n\r\n  const clearSelect = () => {\r\n    // setModelData([]);\r\n\r\n    // if (makeVariable.text !== '') {\r\n    //   dispatch(setModelData([]));\r\n    // }\r\n\r\n\r\n\r\n    selectMakeRef.current.reset();\r\n    selectModelRef.current.reset();\r\n    selectRegYear.current.reset();\r\n    selectRegMonth.current.reset();\r\n    selectSteering.current.reset();\r\n    selectTransmission.current.reset();\r\n    selectExteriorColor.current.reset();\r\n    selectFuel.current.reset();\r\n    selectPort.current.reset();\r\n    selectSales.current.reset();\r\n    selectBuyer.current.reset();\r\n    selectDriveType.current.reset();\r\n    selectBodyType.current.reset();\r\n    selectStockStatus.current.reset();\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n\r\n\r\n  const ClearModalButton = ({ handleClear }) => {\r\n    const [modalClearVisible, setModalClearVisible] = useState(false);\r\n\r\n    const handleModalClearOpen = useCallback(() => {\r\n      setModalClearVisible(true);\r\n\r\n\r\n      // selectMakeRef.current.selectIndex(makeData.indexOf('TOYOTA'));\r\n    }, []);\r\n\r\n    const handleModalClearClose = useCallback(() => {\r\n      setModalClearVisible(false);\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          bgColor={'#D9D9D9'}\r\n          onPress={handleModalClearOpen}\r\n          _text={{ color: 'muted.500' }}\r\n          _hover={{ bgColor: '#f0eded' }}\r\n        >\r\n          Clear\r\n        </Button>\r\n\r\n        <Modal isOpen={modalClearVisible} onClose={handleModalClearClose}>\r\n          <Modal.Content bgColor={'amber.100'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n              <Text color={'#102A43'} bold>\r\n                Clear\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'amber.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'amber.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'amber.600'} bold>\r\n                  Warning!\r\n                </Text>\r\n                <Text color={'amber.600'}>\r\n                  Are you sure you want to clear all inputs? This action will clear all the fields and cannot be undone!\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalClearClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  onPress={() => {\r\n                    handleModalClearClose();\r\n                    handleClear();\r\n                  }}\r\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                  Clear\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  const SelectFeaturesButton = () => {\r\n    const [featuresModalVisible, setFeaturesModalVisible] = useState(false);\r\n    const [featuresClearModalVisible, setClearModalVisible] = useState(false);\r\n\r\n    const [key, setKey] = useState(resetKey);\r\n\r\n\r\n    const handleModalSelectFeaturesOpen = () => {\r\n      setFeaturesModalVisible(true);\r\n    };\r\n\r\n    const handleModalSelectFeaturesClose = () => {\r\n      setFeaturesModalVisible(false);\r\n    };\r\n\r\n    const handleClearModalOpen = () => {\r\n      setClearModalVisible(true);\r\n    };\r\n\r\n    const handleClearModalClose = () => {\r\n      setClearModalVisible(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          onPress={handleModalSelectFeaturesOpen}\r\n          variant={'outline'}\r\n          _text={{ color: 'black', }}\r\n          leftIcon={<MaterialCommunityIcons name=\"car-info\" size={20} color=\"black\" />}>\r\n\r\n          Select Features\r\n        </Button>\r\n\r\n        <Modal\r\n          isOpen={featuresModalVisible}\r\n          onClose={handleModalSelectFeaturesClose} size={'full'} useRNModal>\r\n          <Modal.Content bgColor={'white'} w={'80%'} h={'80%'}>\r\n            <Modal.CloseButton />\r\n            {/* <Modal.Header borderBottomWidth={0} bgColor={'white'}>\r\n              <Text color={'#102A43'} bold>\r\n                Features\r\n              </Text>\r\n            </Modal.Header> */}\r\n            {/* <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'white'}\r\n              flex={1}\r\n              h={'100%'}\r\n            > */}\r\n            <ScrollView flex={1} flexDirection={'column'} margin={10}>\r\n\r\n              {/* <Box bgColor={'#7b9cff'} borderColor={isNoFeaturesSelected} borderWidth={'1'} marginTop={1} ref={featureBoxRef}>\r\n                  <Text color={'white'} bold fontSize={20} width={'full'}> Features</Text>\r\n                </Box> */}\r\n\r\n              <Box>\r\n                <Text color={'black'} bold fontSize={16} width={'full'}> Safety System</Text>\r\n              </Box>\r\n\r\n\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SafetySystemAnBrSy} key={`SafetySystemAnBrSy-${resetKey}`} label=\"Anti-Lock Braking System (ABS)\" onChange={(checked) => featuresState.SafetySystemAnBrSy = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemDrAi} key={`SafetySystemDrAi-${resetKey}`} label=\"Driver Airbag\" onChange={(checked) => featuresState.SafetySystemDrAi = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemPaAi} key={`SafetySystemPaAi-${resetKey}`} label=\"Passenger Airbag\" onChange={(checked) => featuresState.SafetySystemPaAi = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemSiAi} key={`SafetySystemSiAi-${resetKey}`} label=\"Side Airbag\" onChange={(checked) => featuresState.SafetySystemSiAi = checked} />\r\n              </Box>\r\n\r\n              <Box>\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Comfort</Text>\r\n              </Box>\r\n\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortAiCoFr} key={`ComfortAiCoFr-${resetKey}`} label=\"Air Conditioner (Front)\" onChange={(checked) => featuresState.ComfortAiCoFr = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAiCoRe} key={`ComfortAiCoRe-${resetKey}`} label=\"Air Conditioner (Rear)\" onChange={(checked) => featuresState.ComfortAiCoRe = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAMFMRa} key={`ComfortAMFMRa-${resetKey}`} label=\"AM/FM Radio\" onChange={(checked) => featuresState.ComfortAMFMRa = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAMFMSt} key={`ComfortAMFMSt-${resetKey}`} label=\"AM/FM Stereo\" onChange={(checked) => featuresState.ComfortAMFMSt = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortCDPl} key={`ComfortCDPl-${resetKey}`} label=\"CD Player\" onChange={(checked) => featuresState.ComfortCDPl = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortCDCh} key={`ComfortCDCh-${resetKey}`} label=\"CD Changer\" onChange={(checked) => featuresState.ComfortCDCh = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortCrSpCo} key={`ComfortCrSpCo-${resetKey}`} label=\"Cruise Speed Control\" onChange={(checked) => featuresState.ComfortCrSpCo = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortDiSp} key={`ComfortDiSp-${resetKey}`} label=\"Digital Speedometer\" onChange={(checked) => featuresState.ComfortDiSp = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortDVDPl} key={`ComfortDVDPl-${resetKey}`} label=\"DVD Player\" onChange={(checked) => featuresState.ComfortDVDPl = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortHDD} key={`ComfortHDD-${resetKey}`} label=\"Hard Disk Drive\" onChange={(checked) => featuresState.ComfortHDD = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortNaSyGPS} key={`ComfortNaSyGPS-${resetKey}`} label=\"Navigation System (GPS)\" onChange={(checked) => featuresState.ComfortNaSyGPS = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortPoSt} key={`ComfortPoSt-${resetKey}`} label=\"Power Steering\" onChange={(checked) => featuresState.ComfortPoSt = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortPrAuSy} key={`ComfortPrAuSy-${resetKey}`} label=\"Premium Audio System\" onChange={(checked) => featuresState.ComfortPrAuSy = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortReKeSy} key={`ComfortReKeSy-${resetKey}`} label=\"Remote Keyless System\" onChange={(checked) => featuresState.ComfortReKeSy = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortTiStWh} key={`ComfortTiStWh-${resetKey}`} label=\"Tilt Steering Wheel\" onChange={(checked) => featuresState.ComfortTiStWh = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n\r\n              <Box>\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Interior</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorLeSe} key={`InteriorLeSe-${resetKey}`} label=\"Leather Seats\" onChange={(checked) => featuresState.InteriorLeSe = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoDoLo} key={`InteriorPoDoLo-${resetKey}`} label=\"Power Door Locks\" onChange={(checked) => featuresState.InteriorPoDoLo = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoMi} key={`InteriorPoMi-${resetKey}`} label=\"Power Mirrors\" onChange={(checked) => featuresState.InteriorPoMi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoSe} key={`InteriorPoSe-${resetKey}`} label=\"Power Seats\" onChange={(checked) => featuresState.InteriorPoSe = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorPoWi} key={`InteriorPoWi-${resetKey}`} label=\"Power Windows\" onChange={(checked) => featuresState.InteriorPoWi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorReWiDe} key={`InteriorReWiDe-${resetKey}`} label=\"Rear Window Defroster\" onChange={(checked) => featuresState.InteriorReWiDe = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorReWiWi} key={`InteriorReWiWi-${resetKey}`} label=\"Rear Window Wiper\" onChange={(checked) => featuresState.InteriorReWiWi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorThRoSe} key={`InteriorThRoSe-${resetKey}`} label=\"Third Row Seats\" onChange={(checked) => featuresState.InteriorThRoSe = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorTiGl} key={`InteriorTiGl-${resetKey}`} label=\"Tinted Glasses\" onChange={(checked) => featuresState.InteriorTiGl = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n              <Box >\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Exterior</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ExteriorAlWh} key={`ExteriorAlWh-${resetKey}`} label=\"Alloy Wheels\" onChange={(checked) => featuresState.ExteriorAlWh = checked} />\r\n                <CheckBoxButton variable={featuresState.ExteriorPoSlDo} key={`ExteriorPoSlDo-${resetKey}`} label=\"Power Sliding Door\" onChange={(checked) => featuresState.ExteriorPoSlDo = checked} />\r\n                <CheckBoxButton variable={featuresState.ExteriorSuRo} key={`ExteriorSuRo-${resetKey}`} label=\"Sunroof\" onChange={(checked) => featuresState.ExteriorSuRo = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n              <Box >\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Selling Points</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsCuWh} key={`SellingPointsCuWh-${resetKey}`} label=\"Customized Wheels\" onChange={(checked) => featuresState.SellingPointsCuWh = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsFuLo} key={`SellingPointsFuLo-${resetKey}`} label=\"Fully Loaded\" onChange={(checked) => featuresState.SellingPointsFuLo = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsMaHiAv} key={`SellingPointsMaHiAv-${resetKey}`} label=\"Maintenance History Available\" onChange={(checked) => featuresState.SellingPointsMaHiAv = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsBrNeTi} key={`SellingPointsBrNeTi-${resetKey}`} label=\"Brand New Tires\" onChange={(checked) => featuresState.SellingPointsBrNeTi = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsNoAcHi} key={`SellingPointsNoAcHi-${resetKey}`} label=\"No Accident History\" onChange={(checked) => featuresState.SellingPointsNoAcHi = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsNoSmPrOw} key={`SellingPointsNoSmPrOw-${resetKey}`} label=\"Non-Smoking Previous Owner\" onChange={(checked) => featuresState.SellingPointsNoSmPrOw = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsOnOwHi} key={`SellingPointsOnOwHi-${resetKey}`} label=\"One Owner History\" onChange={(checked) => featuresState.SellingPointsOnOwHi = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsPeRaTi} key={`SellingPointsPeRaTi-${resetKey}`} label=\"Performance-rated Tires\" onChange={(checked) => featuresState.SellingPointsPeRaTi = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsReBo} key={`SellingPointsReBo-${resetKey}`} label=\"Repainted Body\" onChange={(checked) => featuresState.SellingPointsReBo = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsTuEn} key={`SellingPointsTuEn-${resetKey}`} label=\"Turbo Engine\" onChange={(checked) => featuresState.SellingPointsTuEn = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsUpAuSy} key={`SellingPointsUpAuSy-${resetKey}`} label=\"Upgraded Audio System\" onChange={(checked) => featuresState.SellingPointsUpAuSy = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n            </ScrollView>\r\n            <HStack space={5} width={'full'} justifyContent={'space-between'}>\r\n              <Button\r\n                onPress={() => {\r\n                  handleClearModalOpen();\r\n                }}\r\n                colorScheme={'gray'}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n                margin={1}\r\n                flex={1}\r\n              >\r\n                Clear\r\n              </Button>\r\n              <Box flex={2} />\r\n              <Button\r\n                onPress={handleModalSelectFeaturesClose}\r\n                colorScheme={'primary'}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n                margin={1}\r\n                flex={1}\r\n              >\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n            {/* </Modal.Body> */}\r\n            {/* <Modal.Footer borderTopWidth={0} bgColor={'white'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalSelectFeaturesClose}\r\n                  colorScheme={'warmGray'}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer> */}\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n        <Modal isOpen={featuresClearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n          <Modal.Content bgColor={'amber.100'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n              <Text color={'#102A43'} bold>\r\n                Clear\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'amber.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'amber.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'amber.600'} bold>\r\n                  Warning!\r\n                </Text>\r\n                <Text color={'amber.600'}>\r\n                  Are you sure you want to clear?\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleClearModalClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  onPress={() => {\r\n                    handleClearToggleButton();\r\n                    setKey(resetKey++);\r\n                    handleClearModalClose();\r\n                  }}\r\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                  Clear\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleClearImagesExtra = () => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n    dispatch(setDeleteImageVisible(true));\r\n  };\r\n\r\n  const UploadModalButton = ({ handleUpload }) => {\r\n    const [modalUploadVisible, setModalUploadVisible] = useState(false);\r\n    const handleModalUploadOpen = () => {\r\n      setModalUploadVisible(true);\r\n    };\r\n\r\n    const handleModalUploadClose = () => {\r\n      setModalUploadVisible(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          onPress={handleModalUploadOpen}\r\n          bgColor={'#7B9CFF'}\r\n          _hover={{ bgColor: '#517cfc', }}>\r\n          Upload/Save\r\n        </Button>\r\n\r\n        <Modal isOpen={modalUploadVisible} onClose={handleModalUploadClose}>\r\n          <Modal.Content bgColor={'white'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'white'}>\r\n              <Text color={'#102A43'} bold>\r\n                Upload/Save\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'gray.300'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'black'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'black'} bold>\r\n                  Attention!\r\n                </Text>\r\n                <Text color={'black'}>\r\n                  Are you sure you want to upload/save? This action will upload a new vehicle to the list and can be edited later.\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'white'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalUploadClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button isLoading={isLoading} onPress={async () => {\r\n                  await handleUpload();\r\n                  handleModalUploadClose()\r\n                }}\r\n                  flex={1} size={'sm'} colorScheme={'primary'} borderRadius={5}>\r\n                  Upload/Save\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#0642F4'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#0642F4'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const handleSuccessModalClose = useCallback(() => {\r\n    dispatch(setIsSuccessModalOpen(false));\r\n  }, []);\r\n\r\n  const handleUpdateSuccessModalClose = useCallback(() => {\r\n    dispatch(setIsUpdateSuccessModalOpen(false));\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  const handleSetBordersWhite = () => {\r\n\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n\r\n  };\r\n  return (\r\n\r\n\r\n\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#0642f4'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={0}\r\n          borderBottomColor={'cyan.500'} >\r\n\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen} />\r\n\r\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          {/* {showDrawerIcon && <MobileViewDrawer\r\n            selectedScreen={selectedScreen}\r\n          />} */}\r\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo2,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          <View style={{ alignItems: 'center', flex: 1 }}>\r\n            <QRCodeScanner />\r\n          </View>\r\n\r\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n          {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n            <Flex direction=\"row-reverse\">\r\n              <Popover isOpen={showNamePopover} trigger={triggerProps => {\r\n                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                  <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                </Text>;\r\n              }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\r\n                <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                 \r\n                  <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                    <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                      Logout\r\n                    </Button>\r\n                  </Popover.Body>\r\n                </Popover.Content>\r\n              </Popover>\r\n            </Flex>\r\n          </Box> */}\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <Box flex={[1]} flexDirection=\"row\" >\r\n\r\n\r\n          {/* Main Content */}\r\n\r\n          <Box flex={1} flexGrow={1} minHeight={0}>\r\n            {/* Main Content Content */}\r\n\r\n\r\n\r\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n              <PresenceTransition visible={true} initial={{\r\n                opacity: 0,\r\n              }} animate={{\r\n                opacity: 1,\r\n                transition: {\r\n                  duration: 250\r\n                }\r\n              }}>\r\n\r\n\r\n                <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" flexDir={'column'}>\r\n\r\n\r\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\r\n\r\n                  </Box>\r\n\r\n\r\n\r\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} >\r\n\r\n\r\n                    <Box flexDir={['column', 'column', 'column', 'column', 'row', 'row']} height={'full'} flex={1} display={screenWidth < 1280 ? 'none' : 'flex'}>\r\n                      <Box flexDir={'row'} flex={1}>\r\n                        <Box margin={2} flex={1} flexDir={['column']} >\r\n\r\n\r\n                          <Box borderColor={'white'} borderWidth={1} ref={inputVehicleBoxRef}>\r\n\r\n                            <Box flex={1} bgColor={'#7b9cff'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Text color={'white'} marginLeft={1} bold fontSize={20} width={'full'}>Input Vehicle Specification</Text>\r\n                            </Box>\r\n\r\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                            <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                            <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={() => buttonSearchRef.current?.handlePress()} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\r\n                              InputRightElement={\r\n                                <StockIDNumber />\r\n                              }\r\n                            />\r\n                            </Box>\r\n\r\n\r\n                          </Box> */}\r\n\r\n                            <StockIDAndMakeAndModel\r\n                              selectStockStatus={selectStockStatus}\r\n                              handleSetBordersWhite={handleSetBordersWhite}\r\n                              handleClearIfError={handleClearIfError}\r\n                              handleClearToggleButton={handleClearToggleButton}\r\n                              inputFobUsd={inputFobUsd}\r\n                              years={years}\r\n                              monthNumbers={monthNumbers}\r\n                              portData={portData}\r\n                              salesData={salesData}\r\n                              buyerData={buyerData}\r\n                              steeringData={steeringData}\r\n                              transmissionData={transmissionData}\r\n                              exteriorColorData={exteriorColorData}\r\n                              fuelData={fuelData}\r\n                              driveTypeData={driveTypeData}\r\n                              bodyTypeData={bodyTypeData}\r\n                              selectPort={selectPort}\r\n                              selectSales={selectSales}\r\n                              selectBuyer={selectBuyer}\r\n                              inputRefNum={inputRefNum}\r\n                              inputChassis={inputChassis}\r\n                              inputModelCode={inputModelCode}\r\n                              inputEngineCode={inputEngineCode}\r\n                              inputEngineDis={inputEngineDis}\r\n                              selectSteering={selectSteering}\r\n                              inputMileage={inputMileage}\r\n                              selectTransmission={selectTransmission}\r\n                              selectExteriorColor={selectExteriorColor}\r\n                              inputNumOfSeats={inputNumOfSeats}\r\n                              inputDoors={inputDoors}\r\n                              inputPurchasedPrice={inputPurchasedPrice}\r\n                              selectFuel={selectFuel}\r\n                              inputDimensionLength={inputDimensionLength}\r\n                              inputDimensionWidth={inputDimensionWidth}\r\n                              inputDimensionHeight={inputDimensionHeight}\r\n                              inputDimensionCubicMeters={inputDimensionCubicMeters}\r\n                              selectDriveType={selectDriveType}\r\n                              inputWeight={inputWeight}\r\n                              selectBodyType={selectBodyType}\r\n                              inputCarName={inputCarName}\r\n                              inputCarDesc={inputCarDesc}\r\n                              inputFobJpy={inputFobJpy}\r\n                              selectRegYear={selectRegYear}\r\n                              selectRegMonth={selectRegMonth}\r\n                              setRefNumFromSelects={setRefNumFromSelects}\r\n                              inputStockIDNumber={inputStockIDNumber}\r\n                              stockIDNumError={stockIDNumError}\r\n                              selectMakeForModelRef={selectMakeForModelRef}\r\n                              textAreaAddModel={textAreaAddModel}\r\n                              selectMakeForAddModelRef={selectMakeForAddModelRef}\r\n                              handleAddMakeTextChange={handleAddMakeTextChange}\r\n                              textAreaAddMake={textAreaAddMake}\r\n                              modelError={modelError}\r\n                              // makeData={makeData}\r\n                              makeError={makeError}\r\n                              selectMakeBoxRef={selectMakeBoxRef}\r\n                              selectMakeRef={selectMakeRef}\r\n                              selectModelRef={selectModelRef}\r\n                              selectModelBoxRef={selectModelBoxRef}\r\n                              setCarNameFromSelects={setCarNameFromSelects}\r\n                              setCarNameFromSelectsModel={setCarNameFromSelectsModel}\r\n                              inputCarNotes={inputCarNotes}\r\n                              inputCarMemo={inputCarMemo}\r\n                              purchasedPriceError={purchasedPriceError}\r\n                              handleInputPurchasedPriceChange={handleInputPurchasedPriceChange}\r\n                            />\r\n\r\n\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={2} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Year & Month</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box ref={selectRegYearBoxRef} bgColor={'white'} flex={1} borderColor={regYearError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectRegYear}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={years}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    regYearVariable.text = selectedItem;\r\n                                    // console.log(regYearVariable.text);\r\n                                    setCarNameFromSelects()\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Year --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\"Year\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n\r\n                              </Box>\r\n                              <Box ref={selectRegMonthBoxRef} bgColor={'white'} flex={1} borderColor={regMonthError} borderWidth={1}>\r\n\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectRegMonth}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={monthNumbers}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    regMonthVariable.text = selectedItem;\r\n                                    // console.log(regMonthVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"--Choose Month--\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\"Month\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    outlineStyle: 'none',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Port</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Port'}\r\n                                  handleAddTextChange={handleAddPortTextChange}\r\n                                  handleAddCodeTextChange={handleAddPortCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddPortCode}\r\n                                  textAreaAdd={textAreaAddPort}\r\n                                  title='Port'\r\n                                  dataName={'port'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Port\"\r\n                                  data={portData} />\r\n                              </Box>\r\n                              <Box ref={selectPortBoxRef} bgColor={'white'} flex={1} borderColor={portError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectPort}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={portData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    portVariable.text = selectedItem.name;\r\n                                    portVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Port --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Port\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Sales In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Sales'}\r\n                                  handleAddTextChange={handleAddSalesTextChange}\r\n                                  handleAddCodeTextChange={handleAddSalesCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddSalesCode}\r\n                                  textAreaAdd={textAreaAddSales}\r\n                                  title='Sales'\r\n                                  dataName={'sales'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Sales\"\r\n                                  data={salesData} />\r\n                              </Box>\r\n                              <Box ref={selectSalesBoxRef} bgColor={'white'} flex={1} borderColor={salesError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectSales}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={salesData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    salesVariable.text = selectedItem.name;\r\n                                    salesVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Sales --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Sales\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Buyer In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalBuyerOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Buyer'}\r\n                                  handleAddTextChange={handleAddBuyerTextChange}\r\n                                  handleAddCodeTextChange={handleAddBuyerCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddBuyerCode}\r\n                                  textAreaAdd={textAreaAddBuyer}\r\n                                  title='Buyer'\r\n                                  dataName={'buyer'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add buyer\"\r\n                                  data={buyerData} />\r\n                              </Box>\r\n                              <Box ref={selectBuyerBoxRef} bgColor={'white'} flex={1} borderColor={buyerError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectBuyer}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={buyerData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    buyerVariable.text = selectedItem.name;\r\n                                    buyerVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Buyer --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Buyer\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n\r\n\r\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                            <Box bgColor={'#8096D7'} flex={1} justifyContent=\"center\" alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Month</Text></Box>\r\n                            <Box bgColor={'white'} flex={1}><Input placeholder=\"Registration Month\" /></Box>\r\n                          </Box> */}\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Reference Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={refNumError} borderWidth={1}><Input defaultValue=\"\" ref={inputRefNum} onChangeText={handleInputRefNumChange} placeholder=\" Reference Number\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Chassis / Frame Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={chassisError} borderWidth={1}><Input defaultValue=\"\" ref={inputChassis} onChangeText={handleInputChassisChange} placeholder=\" Chassis / Frame Number\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Model Code</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={modelCodeError} borderWidth={1}><Input defaultValue=\"\" ref={inputModelCode} onChangeText={handleInputModelCodeChange} placeholder=\" Model Code\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Code</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}><Input defaultValue=\"\" ref={inputEngineCode} onChangeText={handleInputEngineCodeChange} placeholder=\" Engine Code\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Displacement</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={engineDisError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputEngineDis} onChangeText={handleInputEngineDisChange} flex={1} placeholder=\" Engine Displacement\" /><InputRightAddon children={\"cc\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Steering</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}></Box>\r\n                              </Box>\r\n                              <Box ref={selectSteeringBoxRef} bgColor={'white'} flex={1} borderColor={steeringError} borderWidth={1}>\r\n                                {/* <Select key={keySelectSteering} ref={selectSteering} accessibilityLabel=\"Choose Steering\" placeholder=\"Choose Steering\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                <Select.Item key={'Left'} label={'Left'} value={'Left'} />\r\n                                <Select.Item key={'Right'} label={'Right'} value={'Right'} />\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectSteering}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={steeringData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    steeringVariable.text = selectedItem;\r\n                                    // console.log(steeringVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Steering --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Steering\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} bgColor={'#8096D7'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Mileage</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={mileageError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputMileage} onChangeText={handleInputMileageChange} flex={1} placeholder=\" Mileage\" /><InputRightAddon children={\"km\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={1} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Transmission</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalTransmissionOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal docName={'Transmission'} handleAddTextChange={handleAddTransmissionTextChange} textAreaAdd={textAreaAddTransmission} title='Transmission' dataName={'transmission'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Transmission\" data={transmissionData} />\r\n                              </Box>\r\n                              <Box ref={selectTransmissionBoxRef} bgColor={'white'} flex={1} borderColor={transmissionError} borderWidth={1}>\r\n                                {/* <Select key={keySelectTransmission} accessibilityLabel=\"Choose Transmission\" placeholder=\"Choose Transmission\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {transmissionData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectTransmission}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={transmissionData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    transmissionVariable.text = selectedItem;\r\n                                    // console.log(transmissionVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Transmission --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Transmission\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Exterior Color</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalExteriorColorOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='ExteriorColor'\r\n                                  handleAddTextChange={handleAddExteriorColorTextChange}\r\n                                  textAreaAdd={textAreaAddExteriorColor}\r\n                                  title='Exterior Color'\r\n                                  dataName={'exteriorColor'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Transmission\"\r\n                                  data={transmissionData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectExteriorColorBoxRef} bgColor={'white'} flex={1} borderColor={exteriorColoError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectExteriorColor}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={exteriorColorData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    exteriorColorVariable.text = selectedItem;\r\n                                    // console.log(exteriorColorVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Exterior Color --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Exterior Color\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Number of Seats</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={numOfSeatsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputNumOfSeats} onChangeText={handleInputNumOfSeatsChange} placeholder=\" Number of Seats\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Doors</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={doorsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDoors} onChangeText={handleInputDoorsChange} placeholder=\" Doors\" /></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Fuel</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalFuelOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='Fuel'\r\n                                  handleAddTextChange={handleAddFuelTextChange}\r\n                                  textAreaAdd={textAreaAddFuel}\r\n                                  title='Fuel'\r\n                                  dataName={'fuel'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Fuel\"\r\n                                  data={fuelData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectFuelBoxRef} bgColor={'white'} flex={1} borderColor={fuelError} borderWidth={1}>\r\n                                {/* <Select key={keySelectFuel} accessibilityLabel=\"Choose Fuel\" placeholder=\"Choose Fuel\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {fuelData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectFuel}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={fuelData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    fuelVariable.text = selectedItem;\r\n                                    // console.log(fuelVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Fuel --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Fuel\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} alignSelf={'center'} flex={[1, 1, 1, 1, 2, 2]} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Dimension</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionLengthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionLength} onChangeText={handleInputDimensionLengthChange} flex={1} placeholder=\"Length\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionWidthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionWidth} onChangeText={handleInputDimensionWidthChange} flex={1} placeholder=\"Width\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionHeightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionHeight} onChangeText={handleInputDimensionHeightChange} flex={1} placeholder=\"Height\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1}><InputGroup><Input keyboardType=\"numeric\" ref={inputDimensionCubicMeters} defaultValue=\"0.00\" onChangeText={handleInputDimensionCubicMetersChange} bgColor={'muted.100'} disabled editable={false} flex={1} placeholder=\"Cubic Meters\" /><InputRightAddon children={\"m³\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Drive Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalDriveTypeOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='DriveType'\r\n                                  handleAddTextChange={handleAddDriveTypeTextChange}\r\n                                  textAreaAdd={textAreaAddDriveType}\r\n                                  title='Drive Type'\r\n                                  dataName={'driveType'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Drive Type\"\r\n                                  data={driveTypeData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectDriveTypeBoxRef} bgColor={'white'} flex={1} borderColor={driveTypeError} borderWidth={1}>\r\n                                {/* <Select key={keySelectDriveType} accessibilityLabel=\"Choose Drive Type\" placeholder=\"Choose Drive Type\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {driveTypeData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectDriveType}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={driveTypeData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    driveTypeVariable.text = selectedItem;\r\n                                    // console.log(driveTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Drive Type --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Drive Type\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Weight</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={weightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" ref={inputWeight} keyboardType=\"numeric\" onChangeText={handleInputWeightChange} flex={1} placeholder=\" Weight\" /><InputRightAddon children={\"kg\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'0'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Body Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n                                <SortAndAddModal\r\n                                  docName='BodyType'\r\n                                  handleAddTextChange={handleAddBodyTypeTextChange}\r\n                                  textAreaAdd={textAreaAddBodyType}\r\n                                  title='Body Type'\r\n                                  dataName={'bodyType'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Body Type\"\r\n                                  data={bodyTypeData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectBodyTypeBoxRef} bgColor={'white'} flex={1} borderColor={bodyTypeError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectBodyType}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={bodyTypeData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    bodyTypeVariable.text = selectedItem;\r\n                                    // console.log(bodyTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Body Type --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Body Type\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Supply Chains Costs</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}>\r\n                                <SupplyChainsCosts\r\n                                  handleAddExpenseNameTextChange={handleAddExpenseNameTextChange}\r\n                                  textAreaAddExpenseName={textAreaAddExpenseName}\r\n                                  inputExpenseAmount={inputExpenseAmount}\r\n                                  handleInputExpenseAmountChange={handleInputExpenseAmountChange}\r\n                                  handleAddPaidToTextChange={handleAddPaidToTextChange}\r\n                                  paidToData={paidToData}\r\n                                  inputCarNotes={inputCarNotes}\r\n                                /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Select Features</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={isNoFeaturesSelected} borderWidth={1}><SelectFeaturesButton /></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock Status</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n                              </Box>\r\n                              <Box ref={selectStockStatusBoxRef} bgColor={'white'} flex={1} borderColor={stockStatusError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectStockStatus}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={stockStatusData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    stockStatusVariable.text = selectedItem;\r\n                                    // console.log(bodyTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Stock Status --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Stock Status\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n\r\n\r\n                          </Box>\r\n\r\n\r\n                        </Box>\r\n\r\n                      </Box>\r\n\r\n                      <br /> <br /> <br /> <br />\r\n\r\n                      <Box flex={1} bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\r\n                        {/*=============================================================== Add Image(s)===============================================================*/}\r\n                        <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\r\n\r\n                      </Box>\r\n\r\n                    </Box>\r\n\r\n                  </Box>\r\n\r\n                  <Box flex={1} margin={1} flexDirection={'column'} h={'full'} display={['none', 'none', 'none', 'none', 'flex', 'flex']}>\r\n                    <Box h={'full'} w={'full'}>\r\n\r\n                      <HStack flex={1}>\r\n                        <Input\r\n                          ref={inputCarName}\r\n                          borderColor={carNameError}\r\n                          placeholder=\"Car Name\" margin={1} bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} flex={1} />\r\n                        <HStack flex={1}>\r\n                          <InputGroup flex={1}>\r\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} children={\"Notes \"} />\r\n                            <Input flex={1} ref={inputCarNotes} borderColor={carNameError} placeholder=\"Note\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                          </InputGroup>\r\n                        </HStack>\r\n                      </HStack>\r\n\r\n                      <HStack flex={2}>\r\n                        <TextArea flex={1} ref={inputCarDesc} borderColor='muted.500' bgColor={'white'} placeholder=\"Car Description / Salespoint\" borderWidth={1} placeholderTextColor={'muted.400'} margin={1} />\r\n                        <HStack marginTop={1} flex={1}>\r\n                          <InputGroup flex={1}>\r\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} color={'white'} children={\"Memo\"} />\r\n                            <Input multiline flex={1} ref={inputCarMemo} borderColor={carNameError} placeholder=\"Memo\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                          </InputGroup>\r\n                        </HStack>\r\n                      </HStack>\r\n\r\n\r\n                      <HStack>\r\n                        <Input keyboardType=\"numeric\" flex={1} ref={inputFobJpy} onChangeText={handleInputFobJpyChange} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"FOB Price\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                        <Input disabled ref={inputFobUsd} flex={1} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"dollar\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"0\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                      </HStack>\r\n\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  <Box w={'full'} flexDir={'row'} margin={1} paddingBottom={10} paddingTop={10} display={screenWidth < 1280 ? 'none' : 'flex'}>\r\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#D9D9D9'} onPress={handleModalClearOpen} _text={{ color: 'muted.500', }} _hover={{ bgColor: '#f0eded', }}>Clear</Button> */}\r\n                    <ClearModalButton handleClear={handleClear} />\r\n                    <Button borderRadius={3} flex={1} bgColor={'#A6BCFE'} disabled></Button> <Button flex={1} bgColor={'#A6BCFE'} disabled></Button>\r\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#7B9CFF'} _hover={{ bgColor: '#517cfc', }}>Upload</Button> */}\r\n                    <UploadModalButton handleUpload={handleUpload} />\r\n\r\n                  </Box>\r\n\r\n                </Box>\r\n              </PresenceTransition>\r\n            </ScrollView>\r\n\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n\r\n      <LoadingModal />\r\n      {/* <Box\r\n        position=\"absolute\"\r\n        top={0}\r\n        bottom={0}\r\n        left={0}\r\n        right={0}\r\n        backgroundColor=\"rgba(0, 0, 0, 0.5)\"\r\n        flex={1}\r\n        display={isLoading ? '' : 'none'}\r\n      >\r\n        <Center flex={1}>\r\n          <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Spinner size=\"lg\" color=\"white\" />\r\n            <Text color={'white'}>Loading, please wait!</Text>\r\n          </Box>\r\n        </Center>\r\n      </Box> */}\r\n\r\n      <UpdateSuccessModal onClose={handleUpdateSuccessModalClose} headerText={'Vehicle Updated!'} bodyText={'Vehicle was successfully updated!'} />\r\n      <UploadSuccessModal onClose={handleSuccessModalClose} headerText={'Vehicle Added!'} bodyText={'Vehicle was successfully added! You can view it in the vehicle list.'} />\r\n    </NativeBaseProvider>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Flex,\r\n    HStack,\r\n    Icon,\r\n    Image as NativeImage,\r\n    Input,\r\n    Modal,\r\n    NativeBaseProvider,\r\n    Popover,\r\n    Spinner,\r\n    Stack,\r\n    Text,\r\n    VStack,\r\n    TextArea,\r\n    InputRightAddon,\r\n    InputGroup,\r\n    InputLeftAddon,\r\n    Select,\r\n    CheckIcon,\r\n    PresenceTransition,\r\n    CloseIcon,\r\n    ScrollView as ScrollViewNative,\r\n    Divider,\r\n    useDisclosure,\r\n    useDisclose,\r\n    FormControl,\r\n    Checkbox,\r\n    useToast,\r\n    Tooltip,\r\n    Progress,\r\n    Alert\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n    Dimensions,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    StyleSheet,\r\n    View,\r\n    PanResponder,\r\n    Animated,\r\n    Easing,\r\n    InputAccessoryView,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    TextInput,\r\n    Image as RNImage,\r\n    Pressable,\r\n    Linking,\r\n    Modal as RNModal,\r\n    Platform,\r\n    SafeAreaView,\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo,\r\n    FontAwesome5,\r\n    EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup, increment } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n    setVehicleListData,\r\n    setSupplyChainsCostsData,\r\n    setSelectedPaidTo,\r\n    setSelectedExpenseName,\r\n    setSupplyChainsCostsModalVisible,\r\n    setVehicleListSupplyChainsCostsData,\r\n    setDeleteImageVisible,\r\n    setSelectedImages,\r\n    setAddAnotherImages,\r\n    setIsAddPhotoVisible,\r\n    setUploadImagesModalVisible,\r\n    setUploadImagesButtonLoading,\r\n    setViewImagesModalVisible,\r\n    setViewImagesData,\r\n    setLoadingModalVisible,\r\n    setAddVehicleListData,\r\n    setEditVehicleModalVisible,\r\n    setFobPriceHistoryModalVisible,\r\n    setChatListData,\r\n    setChatListImageUrl,\r\n    setChatListLastVisible,\r\n    setLoadMoreLoading,\r\n    setNoMoreData,\r\n    setActiveChatId,\r\n    setChatListSearchText,\r\n    setChatMessagesData,\r\n    setChatMessageBoxLoading,\r\n    setSelectedChatData,\r\n    setReadByListModalVisible,\r\n    setLoadMoreMessagesLoading,\r\n    setNoMoreMessagesData,\r\n    setDeleteMessageTemplateVisible,\r\n    setInvoiceData,\r\n    setTransactionModalVisible,\r\n    setPreviewInvoiceVisible,\r\n    setSelectedCustomerData,\r\n    setPdfViewerModalVisible,\r\n    setSelectedFileUrl,\r\n    setIsLoading,\r\n    setLoginName,\r\n    setCarImageUrl,\r\n    setSelectedVehicleData,\r\n    setMessageTextInputValue,\r\n    setCustomInvoiceVisible,\r\n} from './redux/store';\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\nimport Hyperlink from 'react-native-hyperlink';\r\nimport { HmacSHA256, enc } from 'crypto-js';\r\nimport { AES } from 'crypto-js';\r\nimport { CRYPTO_KEY, CRYPTO_KEY_API } from '@env';\r\nimport { captureRef } from 'react-native-view-shot';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport QRCode from 'react-native-qrcode-svg';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { HashRouter as Router, Route, Routes, useNavigate, Navigate, useParams, useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'CHAT MESSAGES'\r\nlet globalLastVisible;\r\nlet globalMessagesLastVisible;\r\nlet globalSearchText = '';\r\nlet globalCustomerId = '';\r\nlet globalChatId = '';\r\nlet globalImageUrl = '';\r\nlet globalCustomerCarName = '';\r\nlet globalCustomerFirstName = '';\r\nlet globalCustomerLastName = '';\r\n\r\nlet globalAdditionalNameArray = [];\r\n\r\nlet globalAdditionalPriceArray = [];\r\n\r\nlet globalMessageTemplateSelectedTitle = '';\r\n\r\n// let userEmail = projectControlAuth.currentUser.email;\r\n\r\nlet formattedIssuingDate = ''; // Initialize the variable outside the conditional rendering block\r\nlet formattedDueDate = '';\r\n\r\nlet transactionModalTitle = '';\r\n\r\nlet transactionModalContentValue = 0;\r\n\r\nlet ip = '';\r\nlet ipCountry = '';\r\n\r\nlet globalInvoiceVariable = {\r\n    carData: {\r\n\r\n    },\r\n    selectedCurrencyExchange: '',\r\n    cfs: '',\r\n    placeOfDelivery: '',\r\n    departureCountry: '',\r\n    departurePort: '',\r\n    salesPerson: '',\r\n\r\n    discharge: {\r\n        port: '',\r\n        country: '',\r\n    },\r\n\r\n    consignee: {\r\n        sameAsBuyer: null,\r\n        name: '',\r\n        address: '',\r\n        contactNumber: '',\r\n        fax: '',\r\n        email: '',\r\n    },\r\n\r\n    notifyParty: {\r\n        sameAsConsignee: null,\r\n        name: '',\r\n        address: '',\r\n        contactNumber: '',\r\n        fax: '',\r\n        email: '',\r\n    },\r\n\r\n    paymentDetails: {\r\n        incoterms: '',\r\n        inspectionIsChecked: null,\r\n        inspectionName: '',\r\n        warrantyIsCheck: null,\r\n        warrantyAmount: 0,\r\n        fobPrice: 0,\r\n        freightPrice: 0,\r\n        insurancePrice: 0,\r\n        inspectionPrice: 0,\r\n        totalAmount: 0,\r\n        additionalName: [],\r\n        additionalPrice: [],\r\n    },\r\n\r\n    bankInformations: {\r\n        dueDate: '',\r\n        issuingDate: '',\r\n        bankAccount: {\r\n\r\n        },\r\n        paymentTerms: '',\r\n        salesAgreement: '',\r\n    },\r\n\r\n}\r\n\r\nconst mobileViewBreakpoint = 1367;\r\n\r\nlet globalSelectedPDFUrl = '';\r\nlet globalSelectedFileType = '';\r\n\r\n\r\nconst firestore = getFirestore();\r\n\r\n\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n\r\n    const user = projectControlAuth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\nconst encryptDataAPI = (data) => {\r\n    try {\r\n        const secretKey = CRYPTO_KEY_API.toString();\r\n        return AES.encrypt(data, secretKey).toString();\r\n    } catch (error) {\r\n        console.error(\"Error encrypting data:\", error);\r\n        // useNavigate(`/devadmin/chat-messages`);\r\n\r\n        // Handle the encryption error or return a fallback\r\n        return null; // or handle it in another appropriate way\r\n    }\r\n};\r\n\r\nconst encryptData = (data) => {\r\n    try {\r\n        const secretKey = CRYPTO_KEY.toString();\r\n        return AES.encrypt(data, secretKey).toString();\r\n    } catch (error) {\r\n        console.error(\"Error encrypting data:\", error);\r\n        // useNavigate(`/devadmin/chat-messages`);\r\n\r\n        // Handle the encryption error or return a fallback\r\n        return null; // or handle it in another appropriate way\r\n    }\r\n};\r\n\r\nconst decryptData = (ciphertext) => {\r\n    try {\r\n        const secretKey = CRYPTO_KEY.toString();\r\n\r\n        const bytes = AES.decrypt(ciphertext, secretKey);\r\n        return bytes.toString(enc.Utf8);\r\n    } catch (error) {\r\n        console.error(\"Error decrypting data:\", error);\r\n        // useNavigate(`/devadmin/chat-messages`);\r\n\r\n        // Handle the decryption error or return a fallback\r\n        return null; // or handle it in another appropriate way\r\n    }\r\n};\r\n\r\n\r\nconst TimelineStatus = ({ data }) => {\r\n\r\n    const selectedChatData = useSelector(state => state.selectedChatData);\r\n\r\n    const changeIndex = data.findIndex(item => selectedChatData.stepIndicator.value < item.value);\r\n\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', paddingTop: 3, }}>\r\n            {/* Dots and individual line segments */}\r\n            {data.map((item, index) => (\r\n                <View key={index} style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                    {/* Dot */}\r\n                    <Tooltip label={item.title} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33' }}>\r\n                        <View style={{\r\n                            width: 20,\r\n                            height: 20,\r\n                            borderRadius: 10,\r\n                            backgroundColor: selectedChatData.stepIndicator.value < item.value ? '#C1C1C1' : '#abf7c7',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            {selectedChatData.stepIndicator.value < item.value ? (\r\n                                <FastImage\r\n                                    source={{\r\n                                        uri: require(`../../assets/chat_step/chat_step_${item.value}_off.png`),\r\n                                        priority: FastImage.priority.normal,\r\n                                    }}\r\n                                    style={{\r\n                                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                                        width: 15,\r\n                                        height: 15,\r\n                                        alignSelf: 'center',\r\n                                    }}\r\n                                    resizeMode={FastImage.resizeMode.stretch}\r\n                                />\r\n                            ) : (\r\n                                <FastImage\r\n                                    source={{\r\n                                        uri: require(`../../assets/chat_step/chat_step_${item.value}_on.png`),\r\n                                        priority: FastImage.priority.normal\r\n                                    }}\r\n                                    style={{\r\n                                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                                        width: 15,\r\n                                        height: 15,\r\n                                        alignSelf: 'center',\r\n                                    }}\r\n                                    resizeMode={FastImage.resizeMode.stretch}\r\n                                />\r\n                            )}\r\n\r\n                        </View>\r\n                    </Tooltip>\r\n                    {/* Line Segment (except for the last dot) */}\r\n                    {index < data.length - 1 && (\r\n                        <View style={{\r\n                            height: 3,\r\n                            width: 20, // Adjust the width to match the space between the dots\r\n                            backgroundColor: selectedChatData.stepIndicator.value <= item.value ? '#C1C1C1' : '#abf7c7',\r\n                        }} />\r\n                    )}\r\n                </View>\r\n            ))}\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nconst statusData = [\r\n    { title: 'Negotiation', value: 1 },\r\n    { title: 'Issued Proforma Invoice', value: 2 },\r\n    { title: 'Order Item', value: 3 },\r\n    { title: 'Payment Confirmed', value: 4 },\r\n    { title: 'Shipping Schedule', value: 5 },\r\n    { title: 'Documents', value: 6 },\r\n    { title: 'Vehicle Received', value: 7 },\r\n    // Add more events as needed\r\n];\r\n\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }} selectable={false}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n// const SkeletonChatListLayout = () => {\r\n//     return (\r\n//         <SkeletonPlaceholder>\r\n//             <SkeletonPlaceholder.Item flexDirection=\"row\" alignItems=\"center\" padding={12}>\r\n//                 {/* Placeholder for Image */}\r\n//                 <SkeletonPlaceholder.Item width={60} height={60} borderRadius={30} />\r\n\r\n//                 {/* Placeholder for Texts */}\r\n//                 <SkeletonPlaceholder.Item flex={1} marginLeft={20}>\r\n//                     {/* Date */}\r\n//                     <SkeletonPlaceholder.Item width={80} height={12} marginBottom={6} />\r\n//                     {/* Car Name */}\r\n//                     <SkeletonPlaceholder.Item width={120} height={14} marginBottom={6} />\r\n//                     {/* Text First and Last */}\r\n//                     <SkeletonPlaceholder.Item width={140} height={14} marginBottom={6} />\r\n//                     {/* Last Message */}\r\n//                     <SkeletonPlaceholder.Item width={160} height={12} marginBottom={6} />\r\n//                 </SkeletonPlaceholder.Item>\r\n//             </SkeletonPlaceholder.Item>\r\n//         </SkeletonPlaceholder>\r\n//     );\r\n// };\r\n\r\nconst HeaderButton = ({ title, onPress, isActive, headerCount }) => {\r\n    const activeStyle = isActive ? { backgroundColor: '#E1EDF7' } : {};\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n    return (\r\n        <Pressable\r\n            onHoverIn={hoverIn}\r\n            onHoverOut={hoverOut}\r\n            focusable={false}\r\n            onPress={onPress}\r\n            style={{ backgroundColor: isHovered ? '#f2f2f2' : 'transparent', padding: 12, marginVertical: screenWidth > 1818 ? 10 : 2, borderWidth: 5, borderColor: 'transparent', marginLeft: 8, width: 195, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 5, ...activeStyle }}\r\n        >\r\n            <Text color={isActive ? '#0A78BE' : '#1C2B33'} fontSize={14} style={{ fontWeight: isActive ? 700 : 400, alignSelf: 'center', textAlign: 'center', }}>{title}</Text>\r\n            {headerCount}\r\n\r\n        </Pressable>\r\n    );\r\n\r\n};\r\n\r\nconst FilterButton = ({ title, onPress, isActive, iconActive, iconNotActive }) => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n    return (\r\n        <Pressable\r\n            focusable={false}\r\n            variant='ghost'\r\n            onPress={onPress}\r\n            onHoverIn={hoverIn}\r\n            onHoverOut={hoverOut}\r\n            style={{\r\n                padding: 5,\r\n                width: 100,\r\n                margin: 5,\r\n                flexDirection: 'row', // Align items in a row\r\n                alignItems: 'center', // Center items vertically\r\n                justifyContent: 'center',\r\n                borderRadius: 5,\r\n                backgroundColor: isActive ? '#E1EDF7' : (isHovered ? '#d7d7d9' : '#ECEDF0'),\r\n            }}\r\n        >\r\n            {isActive ? iconActive : iconNotActive}\r\n            <Text color={isActive ? '#0A78BE' : '#1C2B33'} fontSize={14} style={{ fontWeight: isActive ? 700 : 400, marginLeft: 5, }}>{title}</Text>\r\n\r\n\r\n        </Pressable>\r\n    );\r\n};\r\n\r\nconst formatDate = (timestamp) => {\r\n    const currentDate = new Date();\r\n    const formattedTimestamp = timestamp.replace(' at ', 'T').replace(/\\//g, '-');\r\n    const givenDate = new Date(formattedTimestamp);\r\n\r\n    // Resetting the time part to compare dates only\r\n    const currentFormattedDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\r\n    const givenFormattedDate = new Date(givenDate.getFullYear(), givenDate.getMonth(), givenDate.getDate());\r\n\r\n    // Check if the dates are the same\r\n    if (givenFormattedDate.getTime() === currentFormattedDate.getTime()) {\r\n        return \"This day\";\r\n    }\r\n\r\n    const oneDay = 24 * 60 * 60 * 1000;\r\n    const startOfWeek = new Date();\r\n    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() + (startOfWeek.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    // Check if the date is within this week\r\n    if (givenDate >= startOfWeek && givenDate < currentFormattedDate) {\r\n        return givenDate.toLocaleDateString('en-US', { weekday: 'short' });\r\n    }\r\n\r\n    // Check if the date is within this year\r\n    const startOfYear = new Date(new Date().getFullYear(), 0, 1);\r\n    if (givenDate >= startOfYear) {\r\n        return givenDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    }\r\n\r\n    // If the date is not within this year\r\n    return givenDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });\r\n};\r\n\r\nconst SkeletonChatListLayout = () => {\r\n\r\n    return (\r\n        <>\r\n            <View // Add a unique key here\r\n                style={{\r\n                    padding: 12,\r\n                    alignItems: 'flex-start',\r\n                    flexDirection: 'row',\r\n                    backgroundColor: 'white',\r\n                }}\r\n            >\r\n                {/* Skeleton for the image */}\r\n                <View\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginRight: 12,\r\n                    }}\r\n                />\r\n                {/* Skeleton for the text */}\r\n                <View style={{ flex: 1 }}>\r\n                    {Array.from({ length: 3 }).map((_, subIndex) => (\r\n                        <View\r\n                            key={`text-${subIndex}`}  // Add a unique key here for each text line\r\n                            style={{\r\n                                height: 10,\r\n                                backgroundColor: '#e0e0e0',\r\n                                marginBottom: 6,\r\n                                width: '80%',\r\n                                borderRadius: 4,\r\n                            }}\r\n                        />\r\n                    ))}\r\n                    <View style={{\r\n                        position: 'absolute',\r\n                        right: 10, height: 10,\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginBottom: 6,\r\n                        width: '5%',\r\n                        borderRadius: 4,\r\n                    }} />\r\n\r\n                    <View\r\n                        style={{\r\n                            borderRadius: 4,\r\n                            backgroundColor: '#e0e0e0',\r\n                            position: 'absolute',\r\n                            right: -20,\r\n                            top: -20,\r\n                            padding: 10,\r\n                            alignSelf: 'center',\r\n                        }}\r\n\r\n                    />\r\n                </View>\r\n            </View>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst DeleteMessageTemplateYesNo = ({ handleDeleteMessageTemplateClose }) => {\r\n\r\n    const deleteMessageTemplateVisible = useSelector((state) => state.deleteMessageTemplateVisible);\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n    const selectedTitle = globalMessageTemplateSelectedTitle;\r\n    const [isDeleteLoading, setIsDeleteLoading] = useState(false);\r\n    const handleClose = () => {\r\n        handleDeleteMessageTemplateClose();\r\n\r\n    }\r\n\r\n\r\n    const deleteMessageTemplate = async (titleToDelete) => {\r\n        const documentRef = doc(projectControlFirestore, 'MessageTemplate', email);\r\n        setIsDeleteLoading(true);\r\n        try {\r\n            // Fetch current data\r\n            const docSnap = await getDoc(documentRef);\r\n\r\n            if (docSnap.exists()) {\r\n                let messageTemplates = docSnap.data().messageTemplate || [];\r\n\r\n                // Filter out the item with the specified title\r\n                const updatedTemplates = messageTemplates.filter(template => template.title !== titleToDelete);\r\n\r\n                // Update the document with the new array\r\n                await updateDoc(documentRef, { messageTemplate: updatedTemplates });\r\n\r\n                console.log('Item successfully deleted');\r\n                setIsDeleteLoading(false);\r\n                handleClose();\r\n            } else {\r\n                console.log('Document does not exist');\r\n                setIsDeleteLoading(false);\r\n\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting item: ', error);\r\n            setIsDeleteLoading(false);\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={deleteMessageTemplateVisible}\r\n            onClose={handleClose}\r\n        >\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header >Delete Message Template?</Modal.Header>\r\n                <Modal.Body>\r\n                    <View style={{ flex: 1, }}>\r\n                        <Text style={{ fontWeight: 400, }}>Are you sure you want to delete the selected message template?</Text>\r\n                    </View>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"ghost\" space=\"2\">\r\n                        <Button style={{ width: 80, height: 36, }} onPress={handleClose} variant={'solid'} colorScheme={'warmGray'}>Cancel</Button>\r\n                        <Button isLoading={isDeleteLoading ? true : false} onPress={() => deleteMessageTemplate(selectedTitle)} style={{ padding: 16, height: 36, }} variant={'solid'} colorScheme={'error'}>Delete</Button>\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n};\r\n\r\nconst MessageTemplateItem = ({ setOriginalTitle, addVisible, titleInputRef, valueInputRef, setAddVisible, item, textInputRef, setPopoverOpen }) => {\r\n    const [isTemplateItemHovered, setIsTemplateItemHovered] = useState(false);\r\n    const [isTemplateMenuHovered, setIsTemplateMenuHovered] = useState(false);\r\n    const [isTemplateEditHovered, setIsTemplateEditHovered] = useState(false);\r\n    const [isTemplateDeleteHovered, setIsTemplateDeleteHovered] = useState(false);\r\n    const [templateMenuOpen, setTemplateMenuOpen] = useState(false);\r\n    const [currentItem, setCurrentItem] = useState(null);\r\n    const [addIsVisible, setIsAddVisible] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const onPress = (item) => {\r\n        // textInputRef.current.value = item.value;\r\n        dispatch(setMessageTextInputValue(item.value));\r\n        setPopoverOpen(false);\r\n    };\r\n\r\n    const onEditPress = (item) => {\r\n\r\n        setAddVisible(true);\r\n        // setCurrentItem(item);\r\n        setIsAddVisible(true);\r\n        setTemplateMenuOpen(false);\r\n        titleInputRef.current.value = item.title;\r\n        valueInputRef.current.value = item.value;\r\n        setOriginalTitle(item.title);\r\n        textInputRef.current.focus();\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n\r\n\r\n    //     if (addIsVisible == true) {\r\n    //         console.log(addIsVisible);\r\n    //         titleInputRef.current.value = currentItem.title;\r\n    //         valueInputRef.current.value = currentItem.value;\r\n    //     }\r\n    //     if (titleInputRef.current && valueInputRef.current) {\r\n    //         titleInputRef.current.value = currentItem.title;\r\n    //         valueInputRef.current.value = currentItem.value;\r\n    //     }\r\n    // }, [currentItem]);\r\n\r\n    const handleDeletePress = (title) => {\r\n\r\n        dispatch(setDeleteMessageTemplateVisible(true));\r\n        globalMessageTemplateSelectedTitle = title;\r\n    }\r\n\r\n\r\n    return (\r\n        <Pressable\r\n            onPress={() => onPress(item)}\r\n            onHoverIn={() => setIsTemplateItemHovered(true)}\r\n            onHoverOut={() => setIsTemplateItemHovered(false)}\r\n            style={{\r\n                padding: 10,\r\n                backgroundColor: isTemplateItemHovered ? '#f2f2f2' : 'transparent',\r\n                flex: 1,\r\n                borderRadius: 5,\r\n            }}>\r\n            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                <Text style={{ fontWeight: '700', flex: 1, }} numberOfLines={1} ellipsizeMode='tail'>{item.title}</Text>\r\n                <Popover\r\n                    isOpen={templateMenuOpen}\r\n                    onClose={() => setTemplateMenuOpen(false)}\r\n                    trigger={(triggerProps) => {\r\n                        return <Pressable\r\n                            {...triggerProps}\r\n                            onPress={() => setTemplateMenuOpen(true)}\r\n                            onHoverIn={() => setIsTemplateMenuHovered(true)}\r\n                            onHoverOut={() => setIsTemplateMenuHovered(false)}\r\n                            style={{ backgroundColor: isTemplateMenuHovered ? '#dedede' : 'transparent', padding: 5, justifyContent: 'center', borderRadius: 5, }}>\r\n                            <Entypo size={16} name='dots-three-horizontal' color='#171717' />\r\n                        </Pressable>\r\n                    }}\r\n\r\n                >\r\n                    <Popover.Content>\r\n\r\n                        <Pressable\r\n                            onPress={() => onEditPress(item)}\r\n                            onHoverIn={() => setIsTemplateEditHovered(true)}\r\n                            onHoverOut={() => setIsTemplateEditHovered(false)} style={{ flex: 1, width: 50, backgroundColor: isTemplateEditHovered ? '#dedede' : 'white', padding: 5, }} focusable={false}>\r\n                            <Text>Edit</Text>\r\n                        </Pressable>\r\n\r\n                        <Pressable\r\n                            onPress={() => handleDeletePress(item.title)}\r\n                            onHoverIn={() => setIsTemplateDeleteHovered(true)}\r\n                            onHoverOut={() => setIsTemplateDeleteHovered(false)} style={{ flex: 1, width: 50, backgroundColor: isTemplateDeleteHovered ? '#dedede' : 'white', padding: 5, }} focusable={false}>\r\n                            <Text>Delete</Text>\r\n                        </Pressable>\r\n\r\n                    </Popover.Content>\r\n                </Popover>\r\n            </View>\r\n            <Text style={{ fontWeight: '400', fontSize: 12, }} numberOfLines={1} ellipsizeMode='tail'>{item.value}</Text>\r\n        </Pressable>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst MessageTemplate = ({ textInputRef }) => {\r\n    const dispatch = useDispatch();\r\n    const [isTemplateHovered, setIsTemplateHovered] = useState(false);\r\n    const [isAddHovered, setIsAddHovered] = useState(false);\r\n    const [popoverOpen, setPopoverOpen] = useState(false);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [addVisible, setAddVisible] = useState(false);\r\n\r\n    const [isCancelHovered, setIsCancelHovered] = useState(false);\r\n    const [isSaveHovered, setIsSaveHovered] = useState(false);\r\n    const [originalTitle, setOriginalTitle] = useState('');\r\n\r\n\r\n    const [saveLoading, setSaveLoading] = useState(false);\r\n\r\n    const [templateData, setTemplateData] = useState([]);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const searchInputRef = useRef(null);\r\n    const titleInputRef = useRef(null);\r\n    const valueInputRef = useRef(null);\r\n\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n    const data = [\r\n        { title: 'Message 1', value: 'Sample Message 1' },\r\n        { title: 'Message 2', value: 'Sample Message 2' },\r\n        { title: 'Message 3', value: 'Sample Message 3' },\r\n    ];\r\n\r\n\r\n\r\n    const saveMessageTemplate = async () => {\r\n        setSaveLoading(true);\r\n        const documentRef = doc(projectControlFirestore, 'MessageTemplate', email);\r\n\r\n        try {\r\n            // Fetch current data\r\n            const docSnap = await getDoc(documentRef);\r\n\r\n            let messageTemplates = [];\r\n            const newTitle = titleInputRef.current?.value;\r\n            const newValue = valueInputRef.current?.value;\r\n\r\n            if (newTitle && newValue) {\r\n                if (docSnap.exists()) {\r\n                    // Document exists, get the current templates\r\n                    messageTemplates = docSnap.data().messageTemplate || [];\r\n\r\n                    // Find index based on the original title\r\n                    const index = messageTemplates.findIndex(template => template.title === originalTitle);\r\n\r\n                    if (index !== -1) {\r\n                        // Update existing template\r\n                        messageTemplates[index] = { title: newTitle, value: newValue };\r\n                    } else {\r\n                        // Add new template if original title does not exist\r\n                        messageTemplates.push({ title: newTitle, value: newValue });\r\n                    }\r\n                } else {\r\n                    // Document does not exist, create a new array with the new template\r\n                    console.log('Creating a new document');\r\n                    messageTemplates = [{ title: newTitle, value: newValue }];\r\n                }\r\n\r\n                // Update or set the document\r\n                await setDoc(documentRef, { messageTemplate: messageTemplates }, { merge: true });\r\n\r\n                console.log('Document successfully updated or created');\r\n            } else {\r\n                console.log('Title or value is empty');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating or creating document: ', error);\r\n        } finally {\r\n            setSaveLoading(false);\r\n            handleCancelPressed();\r\n        }\r\n    };\r\n\r\n\r\n    const handleSearch = (text) => {\r\n        setSearchText(text);\r\n        const filtered = templateData.filter(item =>\r\n            item.title.toLowerCase().includes(text.toLowerCase()) ||\r\n            item.value.toLowerCase().includes(text.toLowerCase())\r\n        );\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const handlePopoverClose = () => {\r\n        setPopoverOpen(false);\r\n        setAddVisible(false);\r\n        setIsAddHovered(false);\r\n    };\r\n\r\n    const handleCancelPressed = () => {\r\n        setIsAddHovered(false);\r\n        setAddVisible(false);\r\n        setIsCancelHovered(false)\r\n        setIsSaveHovered(false)\r\n        titleInputRef.current.clear();\r\n        valueInputRef.current.clear();\r\n\r\n    };\r\n\r\n    const renderItem = ({ item }) => {\r\n        return <MessageTemplateItem setOriginalTitle={setOriginalTitle} addVisible={addVisible} titleInputRef={titleInputRef} valueInputRef={valueInputRef} setAddVisible={setAddVisible} item={item} textInputRef={textInputRef} setPopoverOpen={setPopoverOpen} />;\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectControlFirestore, \"MessageTemplate\", email);\r\n\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                let arrayFieldData = docSnap.data().messageTemplate;\r\n\r\n                // Sort the array by title\r\n                arrayFieldData.sort((a, b) => {\r\n                    let titleA = a.title.toUpperCase(); // ignore upper and lowercase\r\n                    let titleB = b.title.toUpperCase(); // ignore upper and lowercase\r\n                    if (titleA < titleB) {\r\n                        return -1;\r\n                    }\r\n                    if (titleA > titleB) {\r\n                        return 1;\r\n                    }\r\n                    // titles must be equal\r\n                    return 0;\r\n                });\r\n\r\n                setTemplateData(arrayFieldData);\r\n            } else {\r\n                console.log(\"No such document!\");\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching document:\", error);\r\n        });\r\n\r\n        // Cleanup subscription on unmount\r\n        return () => unsubscribe();\r\n    }, [popoverOpen]);\r\n\r\n    const handleDeleteMessageTemplateClose = () => {\r\n\r\n        dispatch(setDeleteMessageTemplateVisible(false));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <DeleteMessageTemplateYesNo handleDeleteMessageTemplateClose={handleDeleteMessageTemplateClose} />\r\n            <Popover\r\n                isOpen={popoverOpen}\r\n                onClose={handlePopoverClose}\r\n                // initialFocusRef={searchInputRef}\r\n                finalFocusRef={textInputRef}\r\n                placement={'top'}\r\n                trigger={(triggerProps) => {\r\n                    return <Pressable\r\n                        focusable={false}\r\n                        {...triggerProps}\r\n                        onPress={() => setPopoverOpen(true)}\r\n                        onHoverIn={() => setIsTemplateHovered(true)}\r\n                        onHoverOut={() => setIsTemplateHovered(false)}\r\n                        style={({ pressed }) => [\r\n                            {\r\n                                bottom: 0,\r\n                                right: 100,\r\n                                position: 'absolute',\r\n                                borderRadius: 20,\r\n                                opacity: pressed ? 0.5 : 1\r\n                            }\r\n                        ]}\r\n\r\n                    >\r\n                        <Ionicons name=\"chatbox-ellipses-outline\" size={24} color={isTemplateHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n                    </Pressable>\r\n                }} >\r\n                <Popover.Content w={screenWidth < mobileViewBreakpoint ? 320 : 400} marginRight={10} >\r\n                    <Popover.Arrow />\r\n                    <View style={{ display: addVisible ? 'flex' : 'none', }}><Popover.Header backgroundColor={'white'}>\r\n                        <View style={{ flexDirection: 'row', flex: 1 }}>\r\n                            <Text style={{ fontWeight: 700, fontSize: 16, flex: 1 }}>Create a message template</Text>\r\n                        </View>\r\n                    </Popover.Header>\r\n                        <Popover.Body backgroundColor={'white'} height={250}>\r\n                            <Text style={{ fontWeight: 700, }}>Title</Text>\r\n                            <TextInput\r\n                                ref={titleInputRef}\r\n                                placeholder='Input Title'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 40, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5 }} />\r\n                            <br />\r\n                            <Text style={{ fontWeight: 700, }}>Message</Text>\r\n                            <TextInput\r\n                                multiline\r\n                                ref={valueInputRef}\r\n                                placeholder='Input Message'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 100, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5 }} />\r\n\r\n                        </Popover.Body>\r\n                        <Popover.Footer backgroundColor={'white'}>\r\n                            <View style={{ height: 30, flexDirection: 'row', justifyContent: 'center', }}>\r\n                                <Pressable\r\n                                    onHoverIn={() => setIsCancelHovered(true)}\r\n                                    onHoverOut={() => setIsCancelHovered(false)}\r\n                                    onPress={handleCancelPressed}\r\n                                    style={{ backgroundColor: isCancelHovered ? '#DADADA' : 'white', width: 60, borderRadius: 5, padding: 5, borderWidth: 1, borderColor: '#DADDE1', marginHorizontal: 5, }}>\r\n                                    <Text style={{ textAlign: 'center', fontWeight: 500, }}>Cancel</Text>\r\n                                </Pressable>\r\n\r\n                                <Pressable\r\n                                    onPress={saveMessageTemplate}\r\n                                    onHoverIn={() => setIsSaveHovered(true)}\r\n                                    onHoverOut={() => setIsSaveHovered(false)}\r\n                                    style={{ backgroundColor: isSaveHovered ? '#107a37' : '#16A34A', width: 60, borderRadius: 5, padding: 5, borderWidth: 1, borderColor: '#DADDE1', marginHorizontal: 5, }}>\r\n                                    {saveLoading ?\r\n                                        (<Spinner\r\n                                            animating\r\n                                            size=\"sm\"\r\n                                            color={'white'}\r\n                                        />) :\r\n                                        (\r\n                                            <Text style={{ textAlign: 'center', color: 'white', fontWeight: 500, }}>Save</Text>\r\n                                        )}\r\n                                </Pressable>\r\n                            </View>\r\n                        </Popover.Footer>\r\n                    </View><View style={{ display: !addVisible ? 'flex' : 'none', }}><Popover.Header backgroundColor={'white'}>\r\n                        <View style={{ flexDirection: 'row', flex: 1 }}>\r\n                            <Text style={{ fontWeight: 700, fontSize: 16, flex: 1 }}>Message Template</Text>\r\n                            <Pressable focusable={false} onPress={() => setAddVisible(true)} onHoverIn={() => setIsAddHovered(true)} onHoverOut={() => setIsAddHovered(false)}>\r\n                                <Text style={{ fontWeight: 400, fontSize: 16, color: '#1B81C2', textDecorationLine: isAddHovered ? 'underline' : 'none' }}>+ ADD</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </Popover.Header>\r\n                        <Popover.Body backgroundColor={'white'} height={300}>\r\n                            <TextInput\r\n                                ref={searchInputRef}\r\n                                focusable={false}\r\n                                placeholder='Search'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 40, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5, marginBottom: 5, }}\r\n                                keyboardType='search'\r\n                                onChangeText={handleSearch}\r\n                                value={searchText} />\r\n                            {templateData.length > 0 || filteredData.length > 0 ? (\r\n                                <FlatList\r\n                                    style={{ height: 100, borderBottomLeftRadius: 5 }}\r\n                                    renderItem={renderItem}\r\n                                    keyExtractor={item => item.title.toString()}\r\n                                    data={searchText ? filteredData : templateData} />\r\n                            ) : (\r\n                                <Text style={{ fontWeight: 700, alignSelf: 'center', }}>No message template found</Text>\r\n                            )}\r\n\r\n                        </Popover.Body>\r\n                    </View>\r\n                </Popover.Content>\r\n            </Popover>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst FileDisplay = ({ file, onRemove }) => {\r\n    const iconSize = 24;\r\n    if (!file) return null;  // Define the icon size\r\n\r\n\r\n\r\n\r\n    const getFileIcon = (type) => {\r\n        if (type.includes('pdf')) {\r\n            return <MaterialIcons name={'picture-as-pdf'} size={iconSize} color=\"#FF0000\" />; // Red for PDF\r\n        }\r\n        if (type.includes('msword') || type.includes('wordprocessingml')) {\r\n            return <MaterialCommunityIcons name={'microsoft-word'} size={iconSize} color=\"#2B579A\" />; // Blue for Word\r\n        }\r\n        if (type.includes('vnd.ms-excel') || type.includes('spreadsheetml') || type === 'text/csv') {\r\n            return <MaterialCommunityIcons name={'microsoft-excel'} size={iconSize} color=\"#217346\" />; // Green for Excel and CSV\r\n        }\r\n        if (type.includes('rar') || type.includes('x-rar-compressed') || type.includes('x-compressed')) {\r\n            return <FastImage\r\n                source={{ uri: require('../../assets/rar_icon.png'), priority: FastImage.priority.high }}\r\n                style={{\r\n                    width: 24,\r\n                    height: 24,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.cover}\r\n            />; // Color of your choice for RAR files\r\n        }\r\n\r\n        return <MaterialIcons name=\"insert-drive-file\" size={iconSize} color=\"black\" />; // Default color for others\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', margin: 5 }}>\r\n            {getFileIcon(file.type)}\r\n            <Text style={{ marginLeft: 10 }}>{file.name}</Text>\r\n            <Pressable onPress={onRemove}>\r\n                <MaterialIcons name=\"close\" size={20} color=\"black\" />\r\n            </Pressable>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst MessageTextInput = ({ handleSendMessage, textInputRef }) => {\r\n    const [inputHeight, setInputHeight] = useState(50);\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const messageTextInputValue = useSelector((state) => state.messageTextInputValue)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleContentOnChange = (event) => {\r\n        const target = event.target;\r\n        // Temporarily reset height to ensure scrollHeight reflects current content\r\n        target.style.height = '0px'; // Reset height to recalculate\r\n        const updatedHeight = Math.max(50, Math.min(200, target.scrollHeight));\r\n        target.style.height = `${updatedHeight}px`; // Set to new calculated height\r\n        setInputHeight(updatedHeight);\r\n\r\n    };\r\n\r\n    const handleContentSizeChange = (event) => {\r\n        const { width, height } = event.nativeEvent.contentSize;\r\n        const updatedHeight = Math.max(50, Math.min(200, height));\r\n        setInputHeight(updatedHeight); // Set to new calculated height\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        // Define a breakpoint for mobile resolution, e.g., 768 pixels\r\n        const mobileBreakpoint = 768;\r\n\r\n        // Check if the screen width is less than or equal to the mobile breakpoint\r\n        if (screenWidth >= mobileBreakpoint) {\r\n            // Check if 'Enter' key is pressed\r\n            if (e.nativeEvent.key === 'Enter' && !e.nativeEvent.shiftKey) {\r\n                e.preventDefault(); // Prevent the default behavior of adding a new line\r\n                handleSendMessage();\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (text) => {\r\n        dispatch(setMessageTextInputValue(text));\r\n        // You can also call handleContentSizeChange manually here if needed\r\n    };\r\n\r\n    return (\r\n        <TextInput\r\n            ref={textInputRef}\r\n            value={messageTextInputValue} // Controlled component\r\n            multiline\r\n            placeholder='Send a message...'\r\n            placeholderTextColor='#9B9E9F'\r\n            onChangeText={handleInputChange} // Use onChangeText for React Native\r\n            onChange={handleContentOnChange}\r\n            onContentSizeChange={handleContentSizeChange}\r\n            onKeyPress={handleKeyPress}\r\n            style={{\r\n                outlineStyle: 'none',\r\n                width: '100%',\r\n                minHeight: 50,\r\n                maxHeight: 200,\r\n                height: inputHeight,\r\n                alignSelf: 'center',\r\n                padding: 10,\r\n                overflow: 'auto',\r\n                marginBottom: 25,\r\n                marginRight: 50,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nconst ChatInputText = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n\r\n    const [isSendHovered, setIsSendHovered] = useState(false);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [selectedFilePreview, setSelectedFilePreview] = useState(null);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [imageUri, setImageUri] = useState(null);\r\n    const [fileUri, setFileUri] = useState(null);\r\n    const [fileName, setFileName] = useState('');\r\n    const [isSendImageHovered, setIsSendImageHovered] = useState(false);\r\n    const [isSendAttachmentHovered, setIsSendAttachmentHovered] = useState(false);\r\n    const [sendIsLoading, setSendIsLoading] = useState(false);\r\n    const textInputRef = useRef(null);\r\n    const [inputHeight, setInputHeight] = useState(50);\r\n\r\n    const [inputValue, setInputValue] = useState(''); // Add state for input value\r\n    const messageTextInputValue = useSelector((state) => state.messageTextInputValue)\r\n    const dispatch = useDispatch();\r\n    const handleContentSizeChange = (event) => {\r\n        const target = event.target;\r\n        // Temporarily reset height to ensure scrollHeight reflects current content\r\n        target.style.height = '0px'; // Reset height to recalculate\r\n        const updatedHeight = Math.max(50, Math.min(200, target.scrollHeight));\r\n        target.style.height = `${updatedHeight}px`; // Set to new calculated height\r\n        setInputHeight(updatedHeight);\r\n\r\n    };\r\n\r\n    const removeImage = () => {\r\n        setImageUri(null);\r\n        setSelectedImage(null);\r\n        setFileName(null);\r\n\r\n    };\r\n\r\n    const removeFile = () => {\r\n        setSelectedFile(null);\r\n        setSelectedFilePreview(null);\r\n        setFileUri(null);\r\n        setFileName(null);\r\n\r\n\r\n    };\r\n\r\n    const selectFile = async () => {\r\n        const maxFileSize = 10 * 1024 * 1024; // 5MB in bytes\r\n\r\n        if (Platform.OS === 'web') {\r\n            return new Promise((resolve, reject) => {\r\n                const input = document.createElement('input');\r\n                input.type = 'file';\r\n                input.accept = '.pdf, .doc, .docx, .xls, .xlsx, .rar'; // Acceptable file types\r\n                input.onchange = () => {\r\n                    const file = input.files[0];\r\n\r\n                    if (file) {\r\n                        if (![\r\n                            'application/pdf',\r\n                            'application/msword',\r\n                            'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n                            'application/vnd.ms-excel',\r\n                            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                            'application/x-rar-compressed',\r\n                            'application/x-compressed',\r\n                            'text/csv'\r\n                        ].includes(file.type)) {\r\n                            alert('File type not allowed');\r\n                            reject('File type not allowed');\r\n                            return;\r\n                        }\r\n\r\n                        if (file.size > maxFileSize) {\r\n                            alert('File size should be less than 10MB');\r\n                            reject('File size should be less than 10MB');\r\n                            return;\r\n                        }\r\n                        removeImage();\r\n                        // Read the file as a Data URL and set it in the state\r\n                        const reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            setFileUri(e.target.result);\r\n                            resolve(file);\r\n                            setSelectedFile(file);\r\n                            setSelectedFilePreview({ name: file.name, type: file.type });\r\n                            setFileName(file.name);\r\n                            textInputRef.current.focus();\r\n                        };\r\n                        reader.onerror = (e) => {\r\n                            reject(e);\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                };\r\n                input.click();\r\n            });\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                launchImageLibrary({ mediaType: 'photo' }, (response) => {\r\n                    if (response.didCancel) {\r\n                        reject('User cancelled image picker');\r\n                    } else if (response.errorCode) {\r\n                        reject(response.errorMessage);\r\n                    } else {\r\n                        const asset = response.assets[0];\r\n\r\n                        if (!asset.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if (asset.fileSize > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('File size should be less than 10MB');\r\n                            return;\r\n                        }\r\n\r\n                        const selectedImageUri = asset.uri;\r\n                        const fileName = asset.fileName || 'Unknown name';\r\n                        resolve({ uri: selectedImageUri, name: fileName });\r\n                        setImageUri(selectedImageUri); // Set imageUri here\r\n                        // console.log(`File name: ${fileName}`);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const selectImage = async () => {\r\n        const maxFileSize = 10 * 1024 * 1024; // 5MB in bytes\r\n\r\n        if (Platform.OS === 'web') {\r\n\r\n            return new Promise((resolve, reject) => {\r\n                const input = document.createElement('input');\r\n                input.type = 'file';\r\n                input.accept = 'image/*';\r\n                input.onchange = () => {\r\n                    const file = input.files[0];\r\n                    if (file) {\r\n\r\n                        if (!file.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if (file.size > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('File size should be less than 10MB');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        removeFile();\r\n                        const reader = new FileReader();\r\n                        reader.readAsDataURL(file);\r\n                        reader.onload = () => {\r\n                            resolve({ dataUrl: reader.result, name: file.name });\r\n                            setImageUri(reader.result); // Set imageUri here\r\n                            setFileName(file.name);\r\n                            // console.log(`File name: ${file.name}`);\r\n                        };\r\n                        setSelectedImage(file);\r\n                        reader.onerror = error => reject(error);\r\n                    }\r\n                };\r\n                input.click();\r\n            });\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                launchImageLibrary({ mediaType: 'photo' }, (response) => {\r\n                    if (response.didCancel) {\r\n                        reject('User cancelled image picker');\r\n                    } else if (response.errorCode) {\r\n                        reject(response.errorMessage);\r\n                    } else {\r\n                        const asset = response.assets[0];\r\n\r\n                        if (!asset.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n                            return;\r\n                        }\r\n\r\n                        if (asset.fileSize > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('Only image files are allowed');\r\n                            return;\r\n                        }\r\n\r\n                        const selectedImageUri = asset.uri;\r\n                        const fileName = asset.fileName || 'Unknown name';\r\n                        resolve({ uri: selectedImageUri, name: fileName });\r\n                        setImageUri(selectedImageUri); // Set imageUri here\r\n                        // console.log(`File name: ${fileName}`);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const resizeImage = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = (event) => {\r\n                const img = new Image();\r\n                img.src = event.target.result;\r\n                img.onload = () => {\r\n                    const canvas = document.createElement('canvas');\r\n                    const ctx = canvas.getContext('2d');\r\n\r\n                    // Set your desired image size here\r\n                    const maxWidth = 800; // Example value\r\n                    const maxHeight = 800; // Example value\r\n                    let width = img.width;\r\n                    let height = img.height;\r\n\r\n                    if (width > height) {\r\n                        if (width > maxWidth) {\r\n                            height *= maxWidth / width;\r\n                            width = maxWidth;\r\n                        }\r\n                    } else {\r\n                        if (height > maxHeight) {\r\n                            width *= maxHeight / height;\r\n                            height = maxHeight;\r\n                        }\r\n                    }\r\n\r\n                    canvas.width = width;\r\n                    canvas.height = height;\r\n                    ctx.drawImage(img, 0, 0, width, height);\r\n                    canvas.toBlob((blob) => {\r\n                        resolve(new File([blob], file.name, {\r\n                            type: 'image/jpeg',\r\n                            lastModified: Date.now()\r\n                        }));\r\n                    }, 'image/jpeg', 0.7); // Adjust the quality (0.7 is a good balance between quality and file size)\r\n                };\r\n                img.onerror = error => reject(error);\r\n            };\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    };\r\n\r\n    const addFileMessage = async () => {\r\n        setSendIsLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeForFile = moment(datetime).format('MMDDYYYYHHmmss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const inputValue = textInputRef.current?.value;\r\n\r\n        textInputRef.current.clear();\r\n        textInputRef.current.focus();\r\n        removeFile();\r\n\r\n        const storage = getStorage(projectExtensionFirebase);\r\n\r\n        if (fileUri) { // Assuming you have a fileUri state for the selected file\r\n\r\n            try {\r\n\r\n                let fileUrl = null;\r\n                if (fileUri) {\r\n                    // Upload file and get URL\r\n                    const fileRef = ref(storage, `ChatFiles/${selectedChatData.id}/C-HUB_${formattedTimeForFile}/${fileName}`);\r\n                    const uploadResult = await uploadBytes(fileRef, selectedFile);\r\n                    fileUrl = await getDownloadURL(uploadResult.ref);\r\n                }\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime,\r\n                    ip: ip,\r\n                    ipCountry: ipCountry,\r\n                    file: {\r\n                        name: fileName,\r\n                        type: 'attachment', // Set the file type\r\n                        url: fileUrl,\r\n                    } // Include file URL if available\r\n                });\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: `Sent an attachment`,\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const addImageMessage = async () => {\r\n        setSendIsLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeForFile = moment(datetime).format('MMDDYYYYHHmmss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const inputValue = textInputRef.current?.value;\r\n\r\n\r\n\r\n        const storage = getStorage(projectExtensionFirebase);\r\n\r\n        if (imageUri) { // Assuming imageFile holds the file to be uploaded\r\n\r\n            textInputRef.current.clear();\r\n            textInputRef.current.focus();\r\n            removeImage();\r\n\r\n            try {\r\n                let imageUrl = null;\r\n                if (imageUri) {\r\n                    // Upload image and get URL\r\n                    const resizedImage = await resizeImage(selectedImage);\r\n                    const imageRef = ref(storage, `ChatFiles/${selectedChatData.id}/C-HUB_${formattedTimeForFile}/${fileName}`);\r\n                    const uploadResult = await uploadBytes(imageRef, resizedImage);\r\n                    imageUrl = await getDownloadURL(uploadResult.ref);\r\n                }\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime,\r\n                    ip: ip,\r\n                    ipCountry: ipCountry,\r\n                    file: {\r\n                        name: fileName,\r\n                        type: 'image',\r\n                        url: imageUrl,\r\n                    } // Include image URL if available\r\n                });\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: 'Sent an image',\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const addMessage = async () => {\r\n        setSendIsLoading(true);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        // const inputValue = textInputRef.current?.value;\r\n        const inputValue = messageTextInputValue;\r\n        dispatch(setMessageTextInputValue(''));\r\n        textInputRef.current.clear();\r\n        textInputRef.current.focus();\r\n\r\n        if (inputValue !== '') {\r\n            const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n            try {\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime, // Using the fetched timestamp\r\n                    ip: ip, // IP Address\r\n                    ipCountry: ipCountry // Country of the IP Address\r\n                });\r\n\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: inputValue,\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n\r\n    };\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const handleKeyPress = (e) => {\r\n        // Define a breakpoint for mobile resolution, e.g., 768 pixels\r\n        const mobileBreakpoint = 768;\r\n\r\n        // Check if the screen width is less than or equal to the mobile breakpoint\r\n        if (screenWidth >= mobileBreakpoint) {\r\n            // Check if 'Enter' key is pressed\r\n            if (e.nativeEvent.key === 'Enter' && !e.nativeEvent.shiftKey) {\r\n                e.preventDefault(); // Prevent the default behavior of adding a new line\r\n                handleSendMessage();\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const handleSendMessage = () => {\r\n        textInputRef.current.focus();\r\n\r\n        if (imageUri !== null) {\r\n            addImageMessage();\r\n        }\r\n        if (fileUri !== null) {\r\n            addFileMessage();\r\n        }\r\n        else {\r\n            addMessage();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <View style={{ width: '98%', flexDirection: 'row', backgroundColor: 'white', }}>\r\n\r\n            <View style={{ flexDirection: 'column', flex: 1, }}>\r\n\r\n                {fileUri &&\r\n                    (\r\n                        <FileDisplay file={selectedFilePreview} onRemove={removeFile} />\r\n                    )}\r\n\r\n                {imageUri && (\r\n                    <View style={{\r\n                        position: 'relative', // Make sure the parent View is positioned relative\r\n                        width: 70,\r\n                        height: 70,\r\n                        borderRadius: 5,\r\n                        overflow: 'hidden', // This ensures that nothing spills out of the container\r\n                        borderWidth: 1,\r\n                        borderColor: '#DADDE1',\r\n                        margin: 2,\r\n                    }}>\r\n                        <FastImage\r\n                            source={{ uri: imageUri }}\r\n                            style={{ width: '100%', height: '100%', borderRadius: 10 }}\r\n                            resizeMode={FastImage.resizeMode.cover}\r\n                        />\r\n                        <Pressable\r\n                            onPress={removeImage}\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                right: 0,\r\n                                backgroundColor: 'rgba(255, 255, 255, 0.6)', // Semi-transparent background for better visibility\r\n                                borderRadius: 12 // Circular shape\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"close\" size={20} color=\"black\" />\r\n                        </Pressable>\r\n                    </View>\r\n\r\n                )}\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <View style={{ marginHorizontal: 5, marginTop: 5, }}>\r\n                        <FastImage\r\n                            source={{ uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FRMJ%20Round.jpg?alt=media&token=90d7f2fe-d9cd-4a6f-9a6b-bc39fe2b33b2', priority: FastImage.priority.high }}\r\n                            style={{\r\n                                width: 30,\r\n                                height: 30,\r\n                                borderRadius: 15,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.cover}\r\n                        />\r\n                    </View>\r\n                    {/* <TextInput\r\n                        ref={textInputRef}\r\n                        multiline\r\n                        placeholder='Send a message...'\r\n                        placeholderTextColor='#9B9E9F'\r\n                        onChange={handleContentSizeChange}\r\n                        onKeyPress={handleKeyPress}\r\n                        style={{\r\n                            outlineStyle: 'none',\r\n                            width: '100%',\r\n                            minHeight: 50, // Set your desired minHeight\r\n                            maxHeight: 200, // Set your desired maxHeight\r\n                            height: inputHeight, // Dynamic height\r\n                            alignSelf: 'center',\r\n                            padding: 10,\r\n                            overflow: 'auto',\r\n                            marginBottom: 25,\r\n                            marginRight: 50,\r\n                        }}\r\n                    /> */}\r\n\r\n                    <MessageTextInput handleSendMessage={handleSendMessage} textInputRef={textInputRef} />\r\n\r\n                    <Pressable\r\n                        focusable={false}\r\n                        onPress={() => sendIsLoading ? null : handleSendMessage()}\r\n                        onHoverIn={() => setIsSendHovered(true)}\r\n                        onHoverOut={() => setIsSendHovered(false)}\r\n                        style={({ pressed }) => [\r\n                            {\r\n                                padding: 10,\r\n                                top: 5,\r\n                                right: 10,\r\n                                position: 'absolute',\r\n                                borderRadius: 20,\r\n                                backgroundColor: isSendHovered ? '#e8f4ff' : 'transparent', // Change color on hover\r\n                                opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                            }\r\n                        ]}\r\n                    >\r\n                        {sendIsLoading ? <Spinner\r\n                            animating\r\n                            size=\"sm\"\r\n                            color={\"#95BCF9\"}\r\n                        /> :\r\n                            <MaterialIcons name=\"send\" size={24} color=\"#95BCF9\" />\r\n                        }\r\n                    </Pressable>\r\n                </View>\r\n            </View>\r\n\r\n            <Pressable\r\n                onHoverIn={() => setIsSendImageHovered(true)}\r\n                onHoverOut={() => setIsSendImageHovered(false)}\r\n                style={({ pressed }) => [\r\n                    {\r\n                        padding: 10,\r\n                        bottom: -10,\r\n                        right: 125,\r\n                        position: 'absolute',\r\n                        borderRadius: 20,\r\n                        opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                    }\r\n                ]}\r\n                onPress={selectImage}\r\n            >\r\n                <Ionicons name=\"image-outline\" size={24} color={isSendImageHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n            </Pressable>\r\n\r\n            <Pressable\r\n                onHoverIn={() => setIsSendAttachmentHovered(true)}\r\n                onHoverOut={() => setIsSendAttachmentHovered(false)}\r\n                style={({ pressed }) => [\r\n                    {\r\n                        padding: 10,\r\n                        bottom: -9,\r\n                        right: 155,\r\n                        position: 'absolute',\r\n                        borderRadius: 20,\r\n                        opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                    }\r\n                ]}\r\n                onPress={selectFile}\r\n            >\r\n                <MaterialIcons name=\"attach-file\" size={24} color={isSendAttachmentHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n            </Pressable>\r\n\r\n            <MessageTemplate textInputRef={textInputRef} />\r\n\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst CancelledView = () => {\r\n\r\n    return (\r\n        <View style={{\r\n            zIndex: 999,\r\n            position: 'absolute',\r\n            borderRadius: 40,\r\n            borderWidth: 0, // Border width\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            opacity: 0.5,\r\n            // Centering the view within its parent\r\n            top: 38,\r\n            left: 17,\r\n        }}>\r\n\r\n            <View style={{ backgroundColor: \"#FF0000\", width: 50, height: 6, borderRadius: 20, }} />\r\n        </View>\r\n    );\r\n\r\n};\r\n\r\nconst ChatListItem = ({ item, onPress, onPressNewTab, isActive, messageUnread, formattedDate, chatListData }) => {\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    const [chatListStepImageUrl, setChatListStepImageUrl] = useState(null);\r\n    const [textFirst, setTextFirst] = useState('');\r\n    const [textLast, setTextLast] = useState('');\r\n    const dispatch = useDispatch();\r\n    const [isUnreadHovered, setIsUnreadHovered] = useState(false);\r\n    const [isOpenNewTabHovered, setIsOpenNewTabHovered] = useState(false);\r\n    const [isUnreadVisible, setIsUnreadVisible] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [customerData, setCustomerData] = useState({});\r\n\r\n    const carName = item.carData && item.carData.carName ? item.carData.carName : (item.vehicle && item.vehicle.carName ? item.vehicle.carName : '');\r\n    const updateChatToUnread = async () => {\r\n        dispatch(setActiveChatId(''));\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setSelectedChatData([]));\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", item.id);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                read: false,\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n    };\r\n\r\n    const hoverIn = () => {\r\n        setIsHovered(true)\r\n    };\r\n\r\n    const hoverOut = () => {\r\n        setIsHovered(false);\r\n    };\r\n\r\n    const hoverOpenNewTabIn = () => {\r\n        setIsHovered(true)\r\n        setIsOpenNewTabHovered(true)\r\n    };\r\n\r\n    const hoverOpenNewTabOut = () => {\r\n        setIsOpenNewTabHovered(false)\r\n    };\r\n\r\n    const hoverUnreadIn = () => {\r\n        setIsHovered(true)\r\n        setIsUnreadHovered(true)\r\n    };\r\n\r\n    const hoverUnreadOut = () => {\r\n        setIsUnreadHovered(false)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // getChatListStepImageUrl();\r\n        const folderName = item.carData && item.carData.stockID ? item.carData.stockID : (item.vehicle && item.vehicle.carId ? item.vehicle.carId : '');\r\n        const storage = getStorage(projectExtensionFirebase);\r\n        const imageRef = ref(storage, `${folderName}/0`); // Ensure this path is correct\r\n\r\n        getDownloadURL(imageRef)\r\n            .then((url) => {\r\n                setImageUrl(url);\r\n            })\r\n            .catch((error) => {\r\n                if (error.code === 'storage/object-not-found') {\r\n                    // Handle the 'object not found' error.\r\n                    setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n                } else {\r\n                    // Handle other errors differently\r\n\r\n                    setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n\r\n                }\r\n            });\r\n\r\n        const collectionPath = 'accounts';\r\n        const docId = item.participants.customer; // Ensure this is a valid document ID\r\n\r\n        const docRef = doc(projectExtensionFirestore, collectionPath, docId);\r\n\r\n        const unsubscribe = onSnapshot(docRef, (doc) => {\r\n            if (doc.exists()) {\r\n                const data = doc.data();\r\n                setCustomerData(data ? data : {});\r\n                setTextFirst(data.textFirst ? data.textFirst : '');\r\n                setTextLast(data.textLast ? data.textLast : '');\r\n\r\n            } else {\r\n                console.log(\"Document not found\");\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching document: \", error);\r\n        });\r\n\r\n        // Clean up function to unsubscribe from the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const loadingCondition = !imageUrl || imageUrl == null || imageUrl == '' || imageUrl == undefined || !item;\r\n\r\n    const chatStepIconOn = require(`../../assets/chat_step/chat_step_${item.stepIndicator.value}_on.png`);\r\n    const chatStepIconOff = require(`../../assets/chat_step/chat_step_${item.stepIndicator.value}_off.png`);\r\n\r\n\r\n    const handlePress = () => {\r\n        onPress()\r\n\r\n        // dispatch(setSelectedCustomerData(customerData));\r\n        globalCustomerFirstName = textFirst ? textFirst : '';\r\n        globalCustomerLastName = textLast ? textLast : '';\r\n        globalImageUrl = imageUrl ? imageUrl : '';\r\n        dispatch(setCarImageUrl(imageUrl ? imageUrl : ''));\r\n\r\n        globalCustomerCarName = carName;\r\n        setIsHovered(false);\r\n        setIsUnreadHovered(false)\r\n\r\n\r\n    }\r\n\r\n    const handlePressNewTab = () => {\r\n        onPressNewTab()\r\n\r\n        // dispatch(setSelectedCustomerData(customerData));\r\n        globalCustomerFirstName = textFirst ? textFirst : '';\r\n        globalCustomerLastName = textLast ? textLast : '';\r\n        globalImageUrl = imageUrl ? imageUrl : '';\r\n        dispatch(setCarImageUrl(imageUrl ? imageUrl : ''));\r\n\r\n        globalCustomerCarName = carName;\r\n        setIsHovered(false);\r\n        setIsUnreadHovered(false)\r\n\r\n\r\n    }\r\n\r\n    if (loadingCondition) {\r\n        return <SkeletonChatListLayout />\r\n    }\r\n    else {\r\n        return (\r\n            <Pressable\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                focusable={false}\r\n                style={{\r\n                    padding: 12,\r\n                    alignItems: 'flex-start', // Align items to the start of the button\r\n                    flexDirection: 'row',\r\n                    backgroundColor: isActive ? '#f2f2f2' : (isHovered ? '#f2f2f2' : 'white'),\r\n                    borderLeftColor: isActive ? '#0A9FDC' : 'transparent',\r\n                    borderRightColor: isActive ? '#0A9FDC' : 'transparent',\r\n                    borderLeftWidth: 2,\r\n                    borderRightWidth: 2,\r\n\r\n                }}\r\n                onPress={handlePress}\r\n            >\r\n                {item.isCancelled && <CancelledView />}\r\n\r\n                <View style={{ paddingRight: 10, justifyContent: 'center', }}>\r\n                    {imageUrl ? (\r\n                        <FastImage\r\n                            source={{ uri: imageUrl, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                width: 60,\r\n                                height: 60,\r\n                                borderRadius: 30,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    ) : (\r\n                        <View\r\n                            style={{\r\n                                width: 60,\r\n                                height: 60,\r\n                                borderRadius: 30,\r\n                                backgroundColor: '#e0e0e0',\r\n                                marginRight: 12,\r\n                            }}\r\n                        />\r\n                    )}\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                    {!isHovered ? (<Text style={{ fontSize: 12, position: 'absolute', right: 10, color: messageUnread ? '#0A78BE' : '#90949C', fontWeight: messageUnread ? 700 : 400, }}>{formattedDate}</Text>) : (!item.read ? (<Text style={{ fontSize: 12, position: 'absolute', right: 10, color: messageUnread ? '#0A78BE' : '#90949C', fontWeight: messageUnread ? 700 : 400, }}>{formattedDate}</Text>) : null)}\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 14, width: '70%', overflow: 'hidden', fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#1C2B33' : '#586369', }}>{carName}</Text>\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 14, width: '80%', overflow: 'hidden', flex: 1, fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#1C2B33' : '#586369', }}>{`${textFirst} ${textLast}`}</Text>\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 12, width: '80%', overflow: 'hidden', flex: 1, fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#0A78BE' : '#90949c', }}>{item.lastMessageSender == item.participants.customer ? (item.lastMessage ? item.lastMessage : 'No message found') : (item.lastMessage ? `Sales: ${item.lastMessage}` : `Sales: No message found`)}</Text>\r\n                    {!item.read ? (\r\n                        <FastImage\r\n                            source={{ uri: chatStepIconOn, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                tintColor: 'rgba(128, 128, 128, 1)',\r\n                                width: 22,\r\n                                height: 20,\r\n                                position: 'absolute',\r\n                                right: 10,\r\n                                bottom: 0,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    ) : (\r\n                        <FastImage\r\n                            source={{ uri: chatStepIconOff, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                tintColor: 'rgba(128, 128, 128, 1)',\r\n                                width: 22,\r\n                                height: 20,\r\n                                position: 'absolute',\r\n                                right: 10,\r\n                                bottom: 0,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    )}\r\n\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        top: 10,\r\n                        padding: 10,\r\n                        alignSelf: 'center',\r\n                        fontSize: 12,\r\n                        overflow: 'hidden',\r\n                        flex: 1,\r\n                        fontWeight: messageUnread ? 700 : 400,\r\n                        color: messageUnread ? '#FF0000' : '#90949c',\r\n                    }}>\r\n                        {item.invoiceNumber && item.stepIndicator.value > 2 ? item.invoiceNumber : ''}\r\n                    </Text>\r\n\r\n                    {isHovered && item.read && (\r\n                        <Tooltip label=\"Mark as unread\" placement='right' openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                onHoverIn={hoverUnreadIn}\r\n                                onHoverOut={hoverUnreadOut}\r\n                                onPress={updateChatToUnread}\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    right: 0,\r\n                                    top: -10,\r\n                                    padding: 10,\r\n                                    alignSelf: 'center',\r\n                                }}\r\n\r\n                            >\r\n                                <MaterialIcons name=\"mark-as-unread\" size={22} color={isUnreadHovered ? \"#1B81C2\" : \"#BABABA\"} />\r\n                            </Pressable>\r\n                        </Tooltip>\r\n                    )}\r\n\r\n                    {isHovered && (\r\n                        <Tooltip label=\"Open in new tab\" placement='right' openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                onHoverIn={hoverOpenNewTabIn}\r\n                                onHoverOut={hoverOpenNewTabOut}\r\n                                onPress={handlePressNewTab}\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    right: -22,\r\n                                    top: -22,\r\n                                    padding: 10,\r\n                                    alignSelf: 'center',\r\n                                }}\r\n\r\n                            >\r\n                                <MaterialIcons name=\"open-in-new\" size={16} color={isOpenNewTabHovered ? \"#1B81C2\" : \"#BABABA\"} />\r\n                            </Pressable>\r\n                        </Tooltip>\r\n                    )}\r\n                </View>\r\n\r\n\r\n\r\n            </Pressable>\r\n        );\r\n    }\r\n\r\n\r\n};\r\n\r\nconst ChatList = ({ unreadButtonValue, activeButtonValue, }) => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const chatListLastVisible = useSelector((state) => state.chatListLastVisible);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const loadMoreLoading = useSelector((state) => state.loadMoreLoading);\r\n    const noMoreData = useSelector((state) => state.noMoreData);\r\n    const renderFooterRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    const { chatId } = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const updateChatToRead = async () => {\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", activeChatId);\r\n        const user = projectControlAuth.currentUser\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        if (email !== '') {\r\n\r\n            try {\r\n                await updateDoc(docRef, {\r\n                    read: true,\r\n                    readBy: arrayUnion(email),\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n                dispatch(setActiveChatId(''));\r\n                navigate(`/top/chat-messages`);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const fetchChatMessages = () => {\r\n        if (!activeChatId) {\r\n            // Handle the case where there's no active chat ID\r\n        }\r\n        else {\r\n            dispatch(setChatMessagesData([]));\r\n            dispatch(setChatMessageBoxLoading(true));\r\n            updateChatToRead();\r\n\r\n            try {\r\n                // References to the document and its 'messages' subcollection\r\n                let activeInvoiceNumer;\r\n                const docRef = doc(projectExtensionFirestore, 'chats', activeChatId);\r\n\r\n                const messagesRef = collection(docRef, 'messages');\r\n\r\n                // Query for the 'messages' subcollection\r\n                const messagesQuery = query(messagesRef, orderBy('timestamp', 'desc'), limit(10));\r\n\r\n                // Listen to the document\r\n                const unsubscribeDoc = onSnapshot(docRef, (docSnapshot) => {\r\n                    if (docSnapshot.exists()) {\r\n                        const data = docSnapshot.data();\r\n                        // Add the document ID to the data\r\n                        const dataWithId = {\r\n                            ...data,\r\n                            id: docSnapshot.id\r\n                        };\r\n                        // Dispatch any action you need with the document data\r\n                        dispatch(setSelectedChatData(dataWithId));\r\n\r\n                        // Define and listen to the invoice document only after the chat document is confirmed to exist\r\n                        if (dataWithId.invoiceNumber || dataWithId.invoiceNumber == '') {\r\n                            const invoiceDocRef = doc(projectExtensionFirestore, 'IssuedInvoice', dataWithId.invoiceNumber);\r\n                            const unsubscribeInvoice = onSnapshot(invoiceDocRef, (invoiceDocSnapshot) => {\r\n                                if (invoiceDocSnapshot.exists()) {\r\n                                    const invoiceData = invoiceDocSnapshot.data();\r\n                                    // Add the document ID to the data\r\n                                    const invoiceDataWithId = {\r\n                                        ...invoiceData,\r\n                                        id: invoiceDocSnapshot.id\r\n                                    };\r\n                                    // Dispatch any action you need with the invoice document data\r\n                                    dispatch(setInvoiceData(invoiceDataWithId ? invoiceDataWithId : {}));\r\n\r\n                                } else {\r\n                                    // Handle the case where the invoice document does not exist\r\n                                    console.log('No Invoice Yet');\r\n                                    dispatch(setInvoiceData({}));\r\n                                }\r\n                            });\r\n\r\n                            // Cleanup function for the invoice listener\r\n                            return () => {\r\n                                unsubscribeInvoice();\r\n\r\n                            };\r\n                        } else {\r\n                            dispatch(setInvoiceData({}));\r\n                            console.log('No Invoice Yet');\r\n                        }\r\n\r\n                    }\r\n\r\n                });\r\n                const unsubscribeMessages = onSnapshot(messagesQuery, (querySnapshot) => {\r\n                    let messages = [];\r\n                    querySnapshot.forEach((doc) => {\r\n                        const data = doc.data();\r\n                        const timestamp = data.timestamp ? data.timestamp.toString() : null;\r\n                        messages.push({ id: doc.id, ...data, timestamp });\r\n                    });\r\n\r\n                    dispatch(setChatMessagesData(messages));\r\n                    dispatch(setChatMessageBoxLoading(false));\r\n                    globalMessagesLastVisible = querySnapshot.docs[querySnapshot.docs.length - 1];\r\n                });\r\n\r\n                // Return a cleanup function\r\n                return () => {\r\n                    unsubscribeDoc();\r\n                    unsubscribeMessages();\r\n                    // if (activeInvoiceNumer && activeInvoiceNumer !== '') {\r\n                    //     unsubscribeInvoice();\r\n                    // }\r\n                };\r\n            } catch (error) {\r\n                console.error(\"Error setting up real-time messages: \", error);\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleLoadMore = () => {\r\n        dispatch(setLoadMoreLoading(true));\r\n\r\n        let nextQuery;\r\n        if (!globalLastVisible) {\r\n            // No more data to load or globalLastVisible is undefined\r\n            console.log(\"No more data to load or globalLastVisible is undefined\");\r\n            setTimeout(() => {\r\n                dispatch(setLoadMoreLoading(false));\r\n                dispatch(setNoMoreData(true));\r\n            }, 0);\r\n            return;\r\n        }\r\n        else {\r\n\r\n            if (chatListData.length >= 10) {\r\n                if (unreadButtonValue == true) {\r\n\r\n                    if (activeButtonValue == 0) {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    else {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                where('read', '==', false),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    if (activeButtonValue == 0) {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    else {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            else {\r\n                dispatch(setNoMoreData(true));\r\n                dispatch(setLoadMoreLoading(false));\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        if (chatListData.length < 10) {\r\n            setTimeout(() => {\r\n                dispatch(setLoadMoreLoading(false));\r\n                dispatch(setNoMoreData(true));\r\n            }, 0);\r\n        }\r\n\r\n        else {\r\n            try {\r\n                const unsubscribe = onSnapshot(nextQuery, (snapshot) => {\r\n                    if (snapshot.empty) {\r\n                        // Handle the case when there's no more data\r\n                        console.log(\"No more data to load\");\r\n                        setTimeout(() => {\r\n                            dispatch(setLoadMoreLoading(false));\r\n                            dispatch(setNoMoreData(true));\r\n                            globalLastVisible = null;\r\n                        }, 0);  // Delay setting loading and no more data flags\r\n                        return;\r\n                    }\r\n\r\n                    const chatsData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        chatsData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n\r\n                    // Append new data to the existing list\r\n\r\n                    setTimeout(() => {\r\n                        dispatch(setChatListData([...chatListData, ...chatsData]));\r\n                        dispatch(setLoadMoreLoading(false));\r\n                        globalLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n                    }, 0);\r\n\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data from Firebase:', error);\r\n                setTimeout(() => dispatch(setLoadMoreLoading(false)), 0);  // Ensure loading is set to false even if there's an error\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        // dispatch(setCarImageUrl(''));\r\n        dispatch(setMessageTextInputValue(''));\r\n\r\n        if (chatId) {\r\n\r\n            setTimeout(() => {\r\n                const decodedChatId = decodeURIComponent(chatId);\r\n                const decryptedChatId = decryptData(decodedChatId).toString();\r\n                let parts = decryptedChatId.split('_');\r\n                let stockIdPart = parts[1];\r\n                let emailPart = parts[parts.length - 1];\r\n\r\n\r\n                // console.log(decryptedChatId);\r\n\r\n                if (!emailPart) {\r\n                    console.error(\"Invalid email part:\", emailPart);\r\n                    return;\r\n                }\r\n                const folderName = selectedChatData.carData && selectedChatData.carData.stockID ? selectedChatData.carData.stockID : (selectedChatData.vehicle && selectedChatData.vehicle.carId ? selectedChatData.vehicle.carId : '');\r\n                const storage = getStorage(projectExtensionFirebase);\r\n                const imageRef = ref(storage, `${stockIdPart}/0`); // Ensure this path is correct\r\n\r\n                // console.log('Folder Name: ', folderName)\r\n                getDownloadURL(imageRef)\r\n                    .then((url) => {\r\n                        setImageUrl(url);\r\n                        globalImageUrl = url;\r\n                        dispatch(setCarImageUrl(url));\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        if (error.code === 'storage/object-not-found') {\r\n                            // Handle the 'object not found' error.\r\n                            setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n                        } else {\r\n                            // Handle other errors differently\r\n\r\n                            setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n\r\n                        }\r\n                    });\r\n\r\n\r\n                if (selectedChatData) {\r\n                    const collectionPath = 'accounts';\r\n                    const docId = selectedChatData.participants?.customer; // Ensure this is a valid document ID\r\n\r\n                    const docRef = doc(projectExtensionFirestore, collectionPath, emailPart);\r\n\r\n                    const docRefVehicle = doc(projectExtensionFirestore, 'VehicleProducts', stockIdPart);\r\n\r\n                    const unsubscribeVehicle = onSnapshot(docRefVehicle, (doc) => {\r\n                        if (doc.exists()) {\r\n                            const data = doc.data();\r\n                            dispatch(setSelectedVehicleData(data ? data : {}));\r\n                            // console.log(`Name: ${data.textFirst} ${data.textLast}`)\r\n\r\n                            // globalCustomerCarName = carName;\r\n                            // setTextFirst(data.textFirst ? data.textFirst : '');\r\n                            // setTextLast(data.textLast ? data.textLast : '');\r\n\r\n\r\n                        } else {\r\n                            console.log(\"Document not found\");\r\n                        }\r\n                    }, (error) => {\r\n                        console.error(\"Error fetching document: \", error);\r\n                    });\r\n\r\n                    const unsubscribe = onSnapshot(docRef, (doc) => {\r\n                        if (doc.exists()) {\r\n                            const data = doc.data();\r\n                            dispatch(setSelectedCustomerData(data ? data : {}));\r\n                            globalCustomerFirstName = data.textFirst ? data.textFirst : '';\r\n                            globalCustomerLastName = data.textLast ? data.textLast : '';\r\n                            // console.log(`Name: ${data.textFirst} ${data.textLast}`)\r\n\r\n\r\n                            // globalCustomerCarName = carName;\r\n                            // setTextFirst(data.textFirst ? data.textFirst : '');\r\n                            // setTextLast(data.textLast ? data.textLast : '');\r\n\r\n\r\n                        } else {\r\n                            console.log(\"Document not found\");\r\n                        }\r\n                    }, (error) => {\r\n                        console.error(\"Error fetching document: \", error);\r\n                    });\r\n\r\n                    // Clean up function to unsubscribe from the listener when the component unmounts\r\n                    return () => {\r\n\r\n                        unsubscribe()\r\n                        unsubscribeVehicle()\r\n                    };\r\n                }\r\n\r\n\r\n\r\n\r\n            }, 1);\r\n        }\r\n\r\n        const unsubscribe = fetchChatMessages();\r\n\r\n\r\n        return () => {\r\n            if (unsubscribe) {\r\n\r\n                unsubscribe(); // Unsubscribe when the component unmounts\r\n            }\r\n        };\r\n\r\n    }, [activeChatId]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (chatId) {\r\n            const decryptedChatId = decryptData(chatId).toString();\r\n\r\n            setTimeout(() => {\r\n                // console.log(decryptedChatId)\r\n                dispatch(setActiveChatId(decryptedChatId));\r\n\r\n            }, 1);\r\n\r\n\r\n        }\r\n    }, [chatId]);\r\n\r\n    const handleChatPress = async (customerId, chatId) => {\r\n        if (chatId !== activeChatId) {\r\n            const encryptedChatId = encryptData(chatId);\r\n            const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\r\n            navigate(`/top/chat-messages/${encodedChatId}`);\r\n            // console.log(encodedChatId)\r\n            // console.log(decodeURIComponent(encodedChatId))\r\n            // console.log(decryptData(decodeURIComponent(encodedChatId)))\r\n\r\n            // // Assuming chatId is already properly encoded and needs no further encoding\r\n            // const path = `/devadmin/chat-messages/${encodedChatId}`;\r\n            // // Construct the URL for hash-based routing\r\n            // const baseUrl = window.location.origin + window.location.pathname;\r\n            // const fullPath = `${baseUrl}#${path}`;\r\n            // window.open(fullPath, '_blank');\r\n\r\n            dispatch(setActiveChatId(chatId));\r\n\r\n            globalCustomerId = customerId;\r\n            globalChatId = chatId;\r\n\r\n        }\r\n    };\r\n\r\n    const handleChatPressNewTab = async (customerId, chatId) => {\r\n        const encryptedChatId = encryptData(chatId);\r\n        const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\r\n        // navigate(`/devadmin/chat-messages/${encodedChatId}`);\r\n        // console.log(encodedChatId)\r\n        // console.log(decodeURIComponent(encodedChatId))\r\n        // console.log(decryptData(decodeURIComponent(encodedChatId)))\r\n\r\n        // Assuming chatId is already properly encoded and needs no further encoding\r\n        const path = `/top/chat-messages/${encodedChatId}`;\r\n        // Construct the URL for hash-based routing\r\n        const baseUrl = window.location.origin + window.location.pathname;\r\n        const fullPath = `${baseUrl}#${path}`;\r\n        window.open(fullPath, '_blank');\r\n\r\n        // dispatch(setActiveChatId(chatId));\r\n\r\n        globalCustomerId = customerId;\r\n        globalChatId = chatId;\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setActiveChatId(''));\r\n    }, [unreadButtonValue])\r\n\r\n    const renderFooter = () => {\r\n        return (\r\n            <>\r\n                {!noMoreData && (\r\n                    <View style={{ paddingVertical: 20, borderTopWidth: 1, borderColor: \"#DADDE1\", height: 60, }}>\r\n                        {loadMoreLoading && (\r\n                            <Spinner\r\n                                animating\r\n                                size=\"sm\"\r\n                                color={'#7B9CFF'}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </>\r\n\r\n\r\n        );\r\n    };\r\n\r\n    const renderItem = ({ item }) => {\r\n\r\n        const isActive = item.id === activeChatId;\r\n        const messageUnread = !item.read;\r\n        const formattedDate = formatDate(item.lastMessageDate);\r\n\r\n        return (\r\n            <ChatListItem\r\n                onPressNewTab={() => handleChatPressNewTab(item.participants.customer, item.id)}\r\n                chatListData={chatListData}\r\n                item={item}\r\n                onPress={() => handleChatPress(item.participants.customer, item.id)}\r\n                isActive={isActive}\r\n                messageUnread={messageUnread}\r\n                formattedDate={formattedDate}\r\n            />\r\n        );\r\n\r\n    };\r\n\r\n    if (chatListData.length < 1) {\r\n        return (\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }}>\r\n                <Text style={{ fontWeight: 700, alignSelf: 'center', }}>{unreadButtonValue ? 'No unread messages to show' : 'No messages to show'}</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <>\r\n                <FlatList\r\n                    style={{ height: 100, borderBottomLeftRadius: 5, }}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id.toString()}\r\n                    data={chatListData}\r\n                    initialNumToRender={1}\r\n                    maxToRenderPerBatch={10}\r\n                    windowSize={21}\r\n                    onEndReachedThreshold={0.05}\r\n                    removeClippedSubviews={true}\r\n                    ListFooterComponent={renderFooter}\r\n                    onEndReached={handleLoadMore}  // Implement this function\r\n                />\r\n\r\n            </>\r\n\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\nconst SearchChat = ({ lastVisible, setLastVisible, unreadButtonValue, activeButtonValue }) => {\r\n\r\n    const searchInputRef = useRef(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [clearVisible, setClearVisible] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const searchData = async ({ }) => {\r\n        let q;\r\n\r\n        const searchValue = searchInputRef.current?.value;\r\n        if (unreadButtonValue == true) {\r\n\r\n            if (activeButtonValue == 0) {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n            else {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        where('read', '==', false),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            if (activeButtonValue == 0) {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n            else {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        try {\r\n            const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                const chatsData = [];\r\n                snapshot.forEach((doc) => {\r\n                    chatsData.push({\r\n                        id: doc.id,\r\n                        ...doc.data(),\r\n                    });\r\n                });\r\n                dispatch(setChatListData(chatsData));\r\n                globalLastVisible = snapshot.docs[snapshot.docs.length - 1]\r\n\r\n\r\n            });\r\n\r\n            // Return the unsubscribe function to stop listening when necessary\r\n            return () => {\r\n                if (unsubscribe) {\r\n                    unsubscribe();\r\n                }\r\n            };\r\n        } catch (error) {\r\n            // Handle errors here\r\n            console.error('Error fetching data from Firebase:', error);\r\n        }\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n\r\n    //     searchData();\r\n\r\n    // }, [searchText])\r\n\r\n    useEffect(() => {\r\n        setSearchText('');\r\n        dispatch(setChatListSearchText(''));\r\n        globalSearchText = '';\r\n        searchInputRef.current.value = '';\r\n        setClearVisible(false);\r\n\r\n    }, [activeButtonValue, unreadButtonValue])\r\n\r\n    const handleSearchEnter = () => {\r\n        // setSortField('dateAdded');\r\n        // setIsSortActive(false)\r\n        if (searchInputRef.current?.value !== '') {\r\n            dispatch(setChatListSearchText(searchInputRef.current.value.trim()));\r\n            setSearchText(searchInputRef.current.value.trim());\r\n            globalSearchText = searchInputRef.current.value.trim();\r\n        }\r\n        else {\r\n            setSearchText('');\r\n            globalSearchText = '';\r\n            if (searchText == '') {\r\n                dispatch(setChatListSearchText(''));\r\n                searchData();\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleClearText = () => {\r\n        searchInputRef.current.clear();\r\n        setClearVisible(false);\r\n        if (searchText !== '') {\r\n            setSearchText(''); // Clear the text\r\n            dispatch(setChatListSearchText(''));\r\n            dispatch(setActiveChatId(''));\r\n            globalSearchText = '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', width: '100%', alignSelf: 'center', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5, margin: 10 }}>\r\n            <TextInput\r\n                ref={searchInputRef}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                placeholderTextColor='#9B9E9F'\r\n                underlineColorAndroid=\"transparent\"\r\n                style={{ flex: 1, height: 40, padding: 10, outlineStyle: 'none' }}\r\n                onChangeText={() => setClearVisible(true)}\r\n                keyboardType='search'\r\n            />\r\n            {clearVisible ? (\r\n                <Pressable\r\n                    focusable={false}\r\n                    onPress={handleClearText}\r\n                    style={({ pressed, hovered }) => [\r\n                        {\r\n                            borderRadius: 10,\r\n                            marginRight: 10,\r\n                            opacity: pressed ? 0.5 : 1, // Change opacity when pressed\r\n                            // Add hover effect\r\n                            backgroundColor: hovered ? '#ddd' : 'transparent',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <MaterialIcons name=\"close\" size={20} color=\"#000\" />\r\n                </Pressable>\r\n            ) : null}\r\n        </View>);\r\n}\r\n\r\nconst timelineData = [\r\n    { key: '1', title: 'Event 1', description: 'Description 1' },\r\n    { key: '2', title: 'Event 2', description: 'Description 2' },\r\n    // ... more events\r\n];\r\n\r\n// const TimelineItem = ({ title, description }) => (\r\n//     <View style={{ alignItems: 'center', marginRight: 20 }}>\r\n//         <View style={{ width: 10, height: 10, borderRadius: 5, backgroundColor: 'blue', marginBottom: 5 }} />\r\n//         <Text style={{ fontWeight: 'bold' }}>{title}</Text>\r\n//         <Text style={{ textAlign: 'center' }}>{description}</Text>\r\n//     </View>\r\n// );\r\n\r\n// const HorizontalTimeline = () => (\r\n//     <FlatList\r\n//         data={timelineData}\r\n//         renderItem={({ item }) => <TimelineItem title={item.title} description={item.description} />}\r\n//         horizontal\r\n//         showsHorizontalScrollIndicator={false}\r\n//         style={{ flexDirection: 'row', padding: 10 }}\r\n//     />\r\n// );\r\n\r\nconst ModalAddBank = () => {\r\n    const [modalAddBankVisible, setModalAddBankVisible] = useState(false);\r\n    const [isCancelHovered, setCancelHovered] = useState(false);\r\n    const [isAddHovered, setAddHovered] = useState(false);\r\n\r\n\r\n\r\n\r\n    const handleModalAddBankOpen = () => {\r\n        setModalAddBankVisible(true);\r\n    };\r\n\r\n    const handleModalAddBankClose = () => {\r\n        setModalAddBankVisible(false);\r\n    };\r\n\r\n    const bankNameRef = useRef(null);\r\n    const branchNameRef = useRef(null);\r\n    const swiftcodeRef = useRef(null);\r\n    const addressRef = useRef(null);\r\n    const accountHolderRef = useRef(null);\r\n    const accountNumberRef = useRef(null);\r\n\r\n\r\n\r\n    const addBankAccount = async () => {\r\n        const docRef = doc(projectExtensionFirestore, 'DataForInvoice', 'BankAccounts');\r\n\r\n        const bankNameValue = bankNameRef.current?.value;\r\n        const branchNameValue = branchNameRef.current?.value;\r\n        const swiftcodeValue = swiftcodeRef.current?.value;\r\n        const addressValue = addressRef.current?.value;\r\n        const accountHolderValue = accountHolderRef.current?.value;\r\n        const accountNumberValue = accountNumberRef.current?.value;\r\n\r\n        const elementToAdd = {\r\n            bankName: bankNameValue,\r\n            branchName: branchNameValue,\r\n            swiftCode: swiftcodeValue,\r\n            address: addressValue,\r\n            accountHolder: accountHolderValue,\r\n            accountNumberValue: accountNumberValue,\r\n        }\r\n\r\n        try {\r\n            await updateDoc(docRef, {\r\n                [bankNameValue]: elementToAdd,\r\n            });\r\n            console.log(\"Element added to the array field\");\r\n            handleModalAddBankClose();\r\n        } catch (error) {\r\n            console.error(\"Error adding element to the array\", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Pressable onPress={handleModalAddBankOpen} style={{ alignSelf: 'center', marginHorizontal: 5, marginTop: 3, }}>\r\n                <FontAwesome name={'plus-circle'} size={25} color='#16A34A' />\r\n            </Pressable>\r\n\r\n            <Modal isOpen={modalAddBankVisible} onClose={handleModalAddBankClose} useRNModal>\r\n                <Modal.Content>\r\n                    <Modal.Header>Add Bank Account</Modal.Header>\r\n                    <Modal.Body>\r\n                        <View style={{ height: '100%', flex: 1, }}>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Bank Name:</Text>\r\n                                <TextInput\r\n                                    ref={bankNameRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Bank Name'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Branch Name:</Text>\r\n                                <TextInput\r\n                                    ref={branchNameRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Branch Name'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>SWIFTCODE:</Text>\r\n                                <TextInput\r\n                                    ref={swiftcodeRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='SWIFTCODE'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Address:</Text>\r\n                                <TextInput\r\n                                    ref={addressRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Address'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Account Holder:</Text>\r\n                                <TextInput\r\n                                    ref={accountHolderRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Account Holder'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Account Number:</Text>\r\n                                <TextInput\r\n                                    ref={accountNumberRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Account Number'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', }}>\r\n                            <Pressable\r\n                                style={{ width: 100, padding: 5, borderRadius: 3, backgroundColor: isCancelHovered ? '#686868' : '#525252' }}\r\n                                onHoverIn={() => setCancelHovered(true)}\r\n                                onHoverOut={() => setCancelHovered(false)}\r\n                                onPress={handleModalAddBankClose}\r\n                            >\r\n                                <Text style={{ fontWeight: 500, textAlign: 'center', color: 'white', }}>Cancel</Text>\r\n                            </Pressable>\r\n\r\n                            <Pressable\r\n                                onPress={addBankAccount}\r\n                                style={{ width: 100, padding: 5, borderRadius: 3, backgroundColor: isAddHovered ? '#1B8B5A' : '#16A34A' }}\r\n                                onHoverIn={() => setAddHovered(true)}\r\n                                onHoverOut={() => setAddHovered(false)}\r\n                            >\r\n                                <Text style={{ fontWeight: 500, textAlign: 'center', color: 'white', }}>Add</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst BankInformation = () => {\r\n\r\n    let invoiceSelectedDueDate = '';\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [selectedDueDate, setSelectedDueDate] = useState('');\r\n    const [bankAccountsData, setBankAccountsData] = useState({});\r\n    const [selectedBank, setSelectedBank] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.bankAccount.bankName ? invoiceData.bankInformations.bankAccount.bankName : \"SUMITOMO MITSUI BANKING CORPORATION\");\r\n    let selectedBankData = {};\r\n\r\n    const paymentTermsRef = useRef(null);\r\n    const salesAgreementRef = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const subscribeToBankAccounts = () => {\r\n            const docRef = doc(projectExtensionFirestore, 'DataForInvoice', 'BankAccounts');\r\n\r\n            const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    const bankAccounts = {};\r\n\r\n                    // Assuming each entry in your document is a bank account\r\n                    Object.entries(data).forEach(([key, value]) => {\r\n                        if (value.bankName) {\r\n                            bankAccounts[value.bankName] = value;\r\n                        }\r\n                    });\r\n\r\n                    // console.log(bankAccounts);\r\n                    setBankAccountsData(bankAccounts);\r\n                    globalInvoiceVariable.bankInformations.bankAccount = bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"];\r\n                    // Use state or context to store selected bank data if needed\r\n                    // setSelectedBank(bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"]);\r\n                    // console.log(bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"]);\r\n                } else {\r\n                    console.log(\"No such document!\");\r\n                }\r\n            }, (error) => {\r\n                console.error(\"Error fetching document\", error);\r\n            });\r\n\r\n            return unsubscribe; // Return the unsubscribe function to call it later to stop listening\r\n        };\r\n\r\n\r\n        if (currentDate) {\r\n            const date = new Date(currentDate);\r\n\r\n            // Check the day of the week\r\n            const dayOfWeek = date.getDay();\r\n\r\n            if (dayOfWeek === 5) { // Friday\r\n                date.setDate(date.getDate() + 3); // Add 3 days to reach Monday\r\n            } else if (dayOfWeek === 6) { // Saturday\r\n                date.setDate(date.getDate() + 2); // Add 2 days to reach Monday\r\n            } else {\r\n                date.setDate(date.getDate() + 1); // Sunday to Thursday, add 1 day\r\n            }\r\n\r\n            // Format the date back to string\r\n            const adjustedDate = date.toISOString().split('T')[0];\r\n            setSelectedDueDate(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.dueDate ? invoiceData.bankInformations.dueDate : adjustedDate);\r\n            globalInvoiceVariable.bankInformations.dueDate = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.dueDate ? invoiceData.bankInformations.dueDate : adjustedDate;\r\n            globalInvoiceVariable.bankInformations.paymentTerms = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.paymentTerms ? invoiceData.bankInformations.paymentTerms : paymentTermsRef.current?.value;\r\n            // globalInvoiceVariable.bankInformations.salesAgreement = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.salesAgreement ? invoiceData.bankInformations.salesAgreement : salesAgreementRef.current?.value;\r\n            globalInvoiceVariable.bankInformations.issuingDate = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.issuingDate ? invoiceData.bankInformations.issuingDate : currentDate;\r\n\r\n        }\r\n\r\n        const unsubscribe = subscribeToBankAccounts();\r\n    }, [currentDate]);\r\n\r\n\r\n\r\n    const ModalCalendar = ({ selectedDate, setSelectedDate, currentDate }) => {\r\n\r\n        const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n        const handleModalCalendarOpen = () => {\r\n            setModalCalendarVisible(true);\r\n        };\r\n\r\n        const handleModalCalendarClose = () => {\r\n            setModalCalendarVisible(false);\r\n        };\r\n\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n                <Pressable style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onPress={handleModalCalendarOpen}>\r\n                    <TextInput value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n                </Pressable>\r\n\r\n                <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Content>\r\n                        <View style={{ height: '100%', flex: 1 }}>\r\n                            <Calendar\r\n                                onDayPress={useCallback(day => {\r\n                                    setSelectedDate(day.dateString);\r\n                                    invoiceSelectedDueDate = day.dateString;\r\n                                    globalInvoiceVariable.bankInformations.dueDate = day.dateString;\r\n                                    handleModalCalendarClose();\r\n                                }, [])}\r\n                                markedDates={{\r\n                                    [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n                                }}\r\n                                renderArrow={(direction) => (\r\n                                    direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n                                )}\r\n                                enableSwipeMonths={true}\r\n                                initialDate={selectedDate}\r\n                                // minDate={currentDate}\r\n                                showSixWeeks />\r\n\r\n                        </View>\r\n\r\n                    </Modal.Content>\r\n\r\n                </Modal>\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n\r\n    const handleValueChange = (selectedBankName) => {\r\n        const selectedBankObj = bankAccountsData[selectedBankName];\r\n        setSelectedBank(selectedBankName);\r\n        globalInvoiceVariable.bankInformations.bankAccount = selectedBankObj;\r\n        // console.log(selectedBankObj);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <View style={{ marginLeft: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Due Date:</Text>\r\n                <ModalCalendar currentDate={currentDate} selectedDate={selectedDueDate} setSelectedDate={setSelectedDueDate} />\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2, marginVertical: 10, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Bank Account: </Text>\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <Select\r\n                        selectedValue={selectedBank}\r\n                        onValueChange={handleValueChange}\r\n                        bgColor={'#FAFAFA'}\r\n                        accessibilityLabel=\"Choose Country\"\r\n                        placeholder=\"---\"\r\n                        _selectedItem={{\r\n                            bg: \"teal.600\",\r\n                            endIcon: <CheckIcon />,\r\n                        }}\r\n                        height={9}\r\n                        style={{ flex: 1, marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\r\n                    >\r\n                        {Object.keys(bankAccountsData).map((bankName) => (\r\n                            <Select.Item key={bankName} label={bankName} value={bankName} />\r\n                        ))}\r\n                    </Select>\r\n\r\n                    <ModalAddBank />\r\n                </View>\r\n\r\n\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Payment Terms:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.bankInformations.paymentTerms = value;\r\n                }} ref={paymentTermsRef} multiline defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.paymentTerms ? invoiceData.bankInformations.paymentTerms : \"Full payment via Telegraphic Transfer (T/T) required before the due date.\"} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            {/* <View style={{ flex: 4, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Sales Agreement:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.bankInformations.salesAgreement = value;\r\n                }} ref={salesAgreementRef} multiline defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.salesAgreement ? invoiceData.bankInformations.salesAgreement : `Payment Information:\r\nThe customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.\r\nNo warranty service is provided on used vehicles.\r\n\r\nConditions for order cancellation:\r\n(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.\r\n(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.\r\n\r\nIntermediary Banking Information:\r\nBank Name: SUMITOMO MITSUI BANKING CORPORATION (THE NEW YORK AUTHORITY).\r\nSwift code: SMBCUS33\r\nAddress: 277 Park Avenue\r\nCity: New York, NY\r\nPostal Code: 10172\r\nCountry: United States\r\n`}\r\n                    placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ width: '60%', height: 100, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View> */}\r\n        </>\r\n    );\r\n}\r\n\r\nconst PaymentDetails = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const fobPriceInput = useRef(null);\r\n    const freightInput = useRef(null);\r\n    const inspectionInput = useRef(null);\r\n    const insuranceInput = useRef(null);\r\n\r\n    const [totalAmountCalculated, setTotalAmountCalculated] = useState('0');\r\n    const [selectedIncoterms, setSelectedIncoterms] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.incoterms ? invoiceData.paymentDetails.incoterms :\r\n        selectedChatData.insurance ? 'CIF' : 'C&F');\r\n\r\n    const [selectedCurrencyExchange, setSelectedCurrencyExchange] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.selectedCurrencyExchange !== 'None' && invoiceData.selectedCurrencyExchange ? invoiceData.selectedCurrencyExchange : 'None');\r\n\r\n\r\n    const [inspectionIsChecked, setInspectionIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionIsChecked : (invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.paymentDetails.inspectionIsChecked : selectedChatData.inspection));\r\n    const [inspectionName, setInspectionName] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionName ? invoiceData.paymentDetails.inspectionName : selectedChatData.inspectionName);\r\n\r\n    const [warrantyIsChecked, setWarrantyIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyIsCheck ? invoiceData.paymentDetails.warrantyIsCheck : selectedChatData.warranty);\r\n\r\n    const warrantyPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyPrice && invoiceData.paymentDetails.warrantyPrice ? invoiceData.paymentDetails.warrantyPrice : 150;\r\n    const insurancePrice = 50;\r\n\r\n    const additionalNameRef = useRef(null);\r\n    const additionalPriceRef = useRef(null);\r\n\r\n    const safelyParseNumber = (value) => {\r\n        const number = Number(value.replace(/,/g, ''));\r\n        return isNaN(number) ? 0 : number;\r\n    };\r\n\r\n    const calculateTotalAmount = () => {\r\n        const fobPrice = safelyParseNumber(fobPriceInput.current?.value);\r\n        const freight = safelyParseNumber(freightInput.current?.value);\r\n        const inspection = safelyParseNumber(inspectionInput.current?.value);\r\n        const insurance = safelyParseNumber(insuranceInput.current?.value);\r\n\r\n        const additionalPricesTotal = globalAdditionalPriceArray.reduce((sum, value) => sum + safelyParseNumber(value), 0);\r\n\r\n        // const total = Math.round(fobPrice + freight + inspection + (warrantyIsChecked ? warrantyPrice : 0) + insurance + additionalPricesTotal).toLocaleString();\r\n        const total = Math.round(fobPrice + freight + inspection + insurance + additionalPricesTotal).toLocaleString();\r\n        setTotalAmountCalculated(total);\r\n        globalInvoiceVariable.paymentDetails.totalAmount = total;\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        additionalNameRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName.join('\\n') : '';\r\n        additionalPriceRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice.join('\\n') : '';\r\n\r\n        globalInvoiceVariable.selectedCurrencyExchange = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.selectedCurrencyExchange !== 'None' && invoiceData.selectedCurrencyExchange ? invoiceData.selectedCurrencyExchange : 'None';\r\n\r\n        globalInvoiceVariable.paymentDetails.incoterms = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.incoterms ? invoiceData.paymentDetails.incoterms : selectedIncoterms;\r\n        globalInvoiceVariable.paymentDetails.inspectionIsChecked = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionIsChecked : inspectionIsChecked;\r\n        globalInvoiceVariable.paymentDetails.inspectionName = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionName ? invoiceData.paymentDetails.inspectionName : inspectionName;\r\n        globalInvoiceVariable.paymentDetails.inspectionPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionPrice ? invoiceData.paymentDetails.inspectionPrice : inspectionIsChecked ? 300 : 0;\r\n        globalInvoiceVariable.paymentDetails.warrantyIsCheck = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyIsCheck ? invoiceData.paymentDetails.warrantyIsCheck : warrantyIsChecked;\r\n        // globalInvoiceVariable.paymentDetails.warrantyPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyPrice ? invoiceData.paymentDetails.warrantyPrice : warrantyIsChecked ? warrantyPrice : 0;\r\n        globalInvoiceVariable.paymentDetails.fobPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.fobPrice ? invoiceData.paymentDetails.fobPrice : fobPriceInput.current?.value;\r\n        globalInvoiceVariable.paymentDetails.freightPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.freightPrice ? invoiceData.paymentDetails.freightPrice : freightInput.current?.value;\r\n        globalInvoiceVariable.paymentDetails.insurancePrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.insurancePrice ? invoiceData.paymentDetails.insurancePrice : selectedIncoterms == 'CIF' ? insuranceInput.current?.value : 0;\r\n        globalInvoiceVariable.paymentDetails.additionalPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice : [];\r\n        globalInvoiceVariable.paymentDetails.additionalName = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName : [];\r\n        globalAdditionalPriceArray = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice : [];\r\n\r\n        calculateTotalAmount();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        inspectionInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionPrice && invoiceData.paymentDetails.inspectionPrice == true ? invoiceData.paymentDetails.inspectionPrice : inspectionIsChecked ? 300 : 0;\r\n        calculateTotalAmount();\r\n\r\n    }, [inspectionIsChecked]);\r\n\r\n    useEffect(() => {\r\n\r\n        insuranceInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.insurancePrice && invoiceData.paymentDetails.incoterms == 'CIF' ? invoiceData.paymentDetails.insurancePrice : selectedIncoterms == 'CIF' ? 50 : 0;\r\n        freightInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.freightPrice ? invoiceData.paymentDetails.freightPrice : selectedIncoterms == 'FOB' ? 0 : freightCalculation;\r\n\r\n        calculateTotalAmount();\r\n\r\n    }, [selectedIncoterms]);\r\n\r\n    useEffect(() => {\r\n        calculateTotalAmount();\r\n\r\n    }, [warrantyIsChecked]);\r\n\r\n    const freightCalculation = (\r\n        (selectedChatData.m3 ? selectedChatData.m3 :\r\n            (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n                selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice)\r\n    ).toFixed(2);\r\n\r\n    const totalPriceCalculation = (\r\n        (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n            (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n                selectedChatData.carData.fobPrice : 0) *\r\n            (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n                (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                    selectedChatData.currency.jpyToUsd : 0))) +\r\n        parseFloat(freightCalculation)\r\n    ).toFixed(2);\r\n\r\n    const fobPriceDollars = (\r\n        (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n            (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n                selectedChatData.carData.fobPrice : 0) *\r\n            (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n                (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                    selectedChatData.currency.jpyToUsd : 0))\r\n        ).toFixed(2));\r\n\r\n\r\n    const handleAdditionalPriceTextChange = (text) => {\r\n        // Process and filter each line\r\n        const filteredLines = text.split('\\n').map(line => {\r\n            let filteredLine = line.replace(/[^0-9.]/g, '');\r\n            const parts = filteredLine.split('.');\r\n            if (parts.length > 2) {\r\n                filteredLine = parts[0] + '.' + parts[1];\r\n            }\r\n            return filteredLine;\r\n        });\r\n\r\n        // Update the ref and the state\r\n        additionalPriceRef.current.value = filteredLines.join('\\n');\r\n        // setAdditionalPriceArray(filteredLines);\r\n        globalAdditionalPriceArray = filteredLines;\r\n        globalInvoiceVariable.paymentDetails.additionalPrice = filteredLines;\r\n        calculateTotalAmount();\r\n\r\n    };\r\n\r\n    const handleAdditionalNameTextChange = (text) => {\r\n        // Update the ref\r\n        additionalNameRef.current.value = text;\r\n\r\n        // Split the text into lines and update the state\r\n        const lines = text.split('\\n');\r\n        // setAdditionalNameArray(lines);\r\n        globalInvoiceVariable.paymentDetails.additionalName = lines;\r\n    };\r\n\r\n\r\n    const handleFobPriceInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        fobPriceInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.fobPrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleFreightInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        freightInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.freightPrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleInspectionInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        inspectionInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.inspectionPrice = filteredText;\r\n\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleInsuranceInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        insuranceInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.insurancePrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#16A34A', }}>Payment Details</Text>\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Incoterms:</Text>\r\n\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <Select\r\n                        selectedValue={selectedIncoterms}\r\n                        onValueChange={(value) => setSelectedIncoterms(value)}\r\n                        bgColor={'#FAFAFA'}\r\n                        accessibilityLabel=\"Choose Country\"\r\n                        placeholder=\"---\"\r\n                        _selectedItem={{\r\n                            bg: \"teal.600\",\r\n                            endIcon: <CheckIcon />,\r\n                        }}\r\n                        height={9}\r\n                        style={{ flex: 1, marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\r\n                    >\r\n                        <Select.Item key={'C&F'} label={'C&F'} value={'C&F'} />\r\n                        <Select.Item key={'CIF'} label={'CIF'} value={'CIF'} />\r\n                        <Select.Item key={'FOB'} label={'FOB'} value={'FOB'} />\r\n                    </Select>\r\n                    <Text style={{ fontWeight: 700, margin: 3, }}>Rate: </Text>\r\n                    <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>\r\n                        {selectedChatData.currency && selectedChatData.currency.usdToJpy\r\n                            ? Number(selectedChatData.currency.usdToJpy).toFixed(2) : '0.00'}\r\n                    </Text>\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ flexDirection: 'row', marginLeft: 2, marginTop: 10, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Inspection:</Text>\r\n                <Checkbox\r\n                    isChecked={inspectionIsChecked}\r\n                    onChange={value => {\r\n                        setInspectionIsChecked(value)\r\n                        globalInvoiceVariable.paymentDetails.inspectionIsChecked = value;\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                />\r\n            </View>\r\n\r\n            {/* <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Warranty:</Text>\r\n                <Checkbox\r\n                    isChecked={warrantyIsChecked}\r\n                    onChange={value => setWarrantyIsChecked(value)}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                />\r\n                <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>${warrantyPrice}</Text>\r\n            </View> */}\r\n\r\n            <View style={{ marginLeft: 2 }}>\r\n                <Text style={{ fontWeight: 700, margin: 3 }}>FOB Price:</Text>\r\n\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1 }}>$</Text>\r\n                    <TextInput\r\n                        onChangeText={handleFobPriceInputChangeText}\r\n                        ref={fobPriceInput}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.paymentDetails.fobPrice : selectedIncoterms == 'FOB' ? 0 : fobPriceDollars}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='FOB Price'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2 }}>\r\n                <Text style={{ fontWeight: 700, margin: 3 }}>Freight:</Text>\r\n\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1 }}>$</Text>\r\n                    <TextInput\r\n                        onChangeText={handleFreightInputChangeText}\r\n                        ref={freightInput}\r\n                        defaultValue={freightCalculation}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Freight'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n                    {/* <MaterialCommunityIcons name='swap-horizontal' size={18} color={'gray'} />\r\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, flex: 1, }}>$</Text> */}\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2, display: selectedIncoterms == 'CIF' ? 'flex' : 'none' }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Insurance:</Text>\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, }}>$</Text>\r\n                    <TextInput\r\n                        onChangeText={handleInsuranceInputChangeText}\r\n                        ref={insuranceInput}\r\n                        defaultValue={50}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder={`Insurance`}\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2, display: inspectionIsChecked ? 'flex' : 'none' }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Inspection:</Text>\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, }}>$</Text>\r\n                    <TextInput\r\n                        onChangeText={handleInspectionInputChangeText}\r\n                        ref={inspectionInput}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder={`Inspection [${selectedChatData.inspectionName}]`}\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n                    <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>{`[${selectedChatData.inspectionName}]`}</Text>\r\n                </View>\r\n\r\n            </View>\r\n\r\n\r\n            <View style={{ marginLeft: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Additional:</Text>\r\n\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        flexDirection: 'row',\r\n                    }}\r\n                >\r\n                    <TextInput ref={additionalNameRef} onChangeText={handleAdditionalNameTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                        style={{ flex: 1, height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                    <TextInput ref={additionalPriceRef} onChangeText={handleAdditionalPriceTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Price'\r\n                        style={{ flex: 1, height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', marginBottom: 4, }} />\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignItems: 'center', }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Total Amount:</Text>\r\n                <Text style={{ fontWeight: 700, fontSize: 18, margin: 3, color: '#FF0000', }}>{`$${totalAmountCalculated}`}</Text>\r\n\r\n                <MaterialCommunityIcons name='swap-horizontal' size={30} color={'gray'} />\r\n\r\n\r\n                <Select\r\n                    selectedValue={selectedCurrencyExchange}\r\n                    onValueChange={(value) => {\r\n\r\n                        setSelectedCurrencyExchange(value)\r\n                        globalInvoiceVariable.selectedCurrencyExchange = value;\r\n                    }}\r\n                    bgColor={'#FAFAFA'}\r\n                    accessibilityLabel=\"Choose Currency\"\r\n                    placeholder=\"---\"\r\n                    _selectedItem={{\r\n                        bg: \"teal.600\",\r\n                        endIcon: <CheckIcon />,\r\n                    }}\r\n                    height={9}\r\n                    style={{ flex: 1, marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\r\n                >\r\n                    <Select.Item key={'None'} label={'None'} value={'None'} />\r\n                    <Select.Item key={'€ EURO'} label={'€ EURO'} value={'EURO'} />\r\n                    <Select.Item key={'A$ AUD'} label={'A$ AUD'} value={'AUD'} />\r\n                    <Select.Item key={'£ GBP'} label={'£ GBP'} value={'GBP'} />\r\n                    <Select.Item key={'C$ CAD'} label={'C$ CAD'} value={'CAD'} />\r\n                </Select>\r\n\r\n            </View>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst SelectPortOfDischarge = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [countriesDischarge, setCountriesDischarge] = useState([]);\r\n    const [portsData, setPortsData] = useState({});\r\n    const [nearestPorts, setNearestPorts] = useState([]);\r\n    const [selectedPortCountry, setSelectedPortCountry] = useState('');\r\n    const [selectedCountry, setSelectedCountry] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.country : selectedChatData.country);\r\n    const [selectedPort, setSelectedPort] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.port : selectedChatData.port);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.port : selectedChatData.port);\r\n\r\n        const fetchPorts = async () => {\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    const sortedPorts = Object.keys(data)\r\n                        .map(portName => ({\r\n                            name: portName.replace(/_/g, '.'), // Replace '_' with '.'\r\n                            ...data[portName]\r\n                        }))\r\n                        .sort((a, b) => a.sortOrder - b.sortOrder);\r\n                    setNearestPorts(sortedPorts);\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n\r\n        const fetchPortsData = async () => {\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    setPortsData(data);\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n\r\n        fetchPorts();\r\n        fetchPortsData();\r\n        // fetchCountries();\r\n\r\n        globalInvoiceVariable.discharge.port = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.discharge.port ? invoiceData.discharge.port : selectedPort;\r\n        globalInvoiceVariable.discharge.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.discharge.country ? invoiceData.discharge.country : selectedPortCountry;\r\n\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        // When selectedCountry changes, update nearestPorts\r\n        const selectedCountryData = countriesDischarge.find(country => country.name === selectedCountry);\r\n        if (selectedCountryData && selectedCountryData.nearestPorts) {\r\n            setNearestPorts(selectedCountryData.nearestPorts);\r\n        } else {\r\n            setNearestPorts([]); // Reset to empty if no ports or country not found\r\n        }\r\n    }, [selectedCountry, countriesDischarge]);\r\n\r\n    useEffect(() => {\r\n        const portData = portsData[selectedPort];\r\n        if (portData && portData.country) {\r\n            setSelectedPortCountry(portData.country);\r\n            // console.log('Nagoya Price ', portData.nagoyaPrice);\r\n            globalInvoiceVariable.discharge.country = portData.country;\r\n        } else {\r\n            setSelectedPortCountry(''); // Reset selected country if port not found or has no country\r\n            console.log('Not found');\r\n        }\r\n    }, [selectedPort, portsData]);\r\n\r\n    return (\r\n        <>\r\n            {/* <Select\r\n                selectedValue={selectedCountry}\r\n                onValueChange={(value) => {\r\n                    setSelectedCountry(value)\r\n                    globalInvoiceVariable.discharge.country = value;\r\n\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"Choose Country\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />,\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}\r\n            >\r\n                {countriesDischarge.map((country) => (\r\n                    <Select.Item key={country.name} label={country.name} value={country.name} />\r\n                ))}\r\n            </Select> */}\r\n            <Select\r\n                selectedValue={selectedPort}\r\n                onValueChange={(value) => {\r\n                    setSelectedPort(value)\r\n                    globalInvoiceVariable.discharge.port = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                accessibilityLabel=\"Choose Port\"\r\n                placeholder=\"Select port\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />,\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}\r\n            >\r\n                {nearestPorts.map((port, index) => (\r\n                    <Select.Item key={index} label={port.name} value={port.name} />\r\n                ))}\r\n            </Select>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst SelectSalesPerson = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [selectedSales, setSelectedSales] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.salesPerson : (selectedChatData.carData && selectedChatData.carData.sales ? selectedChatData.carData.sales : ''));\r\n    const salesData = useSelector((state) => state.salesData);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        globalInvoiceVariable.salesPerson = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.salesPerson ? invoiceData.salesPerson : (selectedChatData.carData && selectedChatData.carData.sales ? selectedChatData.carData.sales : '');\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Select\r\n            selectedValue={selectedSales}\r\n            onValueChange={(value) => {\r\n                setSelectedSales(value);\r\n                globalInvoiceVariable.salesPerson = value;\r\n            }}\r\n            bgColor={'#FAFAFA'}\r\n            accessibilityLabel=\"---\"\r\n            placeholder=\"---\"\r\n            _selectedItem={{\r\n                bg: \"teal.600\",\r\n                endIcon: <CheckIcon />\r\n            }}\r\n            style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}>\r\n            {salesData.map((item) => (\r\n                <Select.Item key={item.id} label={item.name} value={item.name} />\r\n            ))}\r\n        </Select>\r\n    );\r\n}\r\n\r\nconst SelectPortOfDeparture = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const portData = useSelector((state) => state.portData);\r\n    const salesData = useSelector((state) => state.salesData);\r\n    const [selectedPort, setSelectedPort] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : ''));\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : ''));\r\n\r\n        globalInvoiceVariable.departurePort = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.departurePort ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : '');\r\n        globalInvoiceVariable.departureCountry = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.departureCountry ? invoiceData.departureCountry : 'Japan';\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                flexDirection: 'row',\r\n            }}\r\n        >\r\n            <Select\r\n                focusable={false}\r\n                selectedValue='Japan'\r\n                onValueChange={(value) => {\r\n                    globalInvoiceVariable.departureCountry = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1, outlineStyle: 'none', }}>\r\n                <Select.Item key={'Japan'} label={'Japan'} value={'Japan'} />\r\n            </Select>\r\n\r\n            <Select\r\n                focusable={false}\r\n                selectedValue={selectedPort}\r\n                onValueChange={(value) => {\r\n                    setSelectedPort(value);\r\n                    globalInvoiceVariable.departurePort = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1, outlineStyle: 'none' }}>\r\n                {portData.map((item) => (\r\n                    <Select.Item key={item.id} label={item.name} value={item.name} />\r\n                ))}\r\n            </Select>\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\nconst NotifyPartyInput = ({ accountData, setAccountData }) => {\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.sameAsConsignee : true);\r\n\r\n    const notifyPartyName = useRef(null);\r\n    const notifyPartyAddress = useRef(null);\r\n    const notifyPartyCity = useRef(null);\r\n    const notifyPartyCountry = useRef(null);\r\n    const notifyPartyContactNumber = useRef(null);\r\n    const notifyPartyFax = useRef(null);\r\n    const notifyPartyEmail = useRef(null);\r\n\r\n    useEffect(() => {\r\n\r\n        notifyPartyName.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.name ? invoiceData.notifyParty.name : '';\r\n        notifyPartyAddress.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.address ? invoiceData.notifyParty.address : '';\r\n        notifyPartyCity.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.city ? invoiceData.notifyParty.city : '';\r\n        notifyPartyCountry.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.country ? invoiceData.notifyParty.country : '';\r\n        notifyPartyContactNumber.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.contactNumber ? invoiceData.notifyParty.contactNumber : '';\r\n        notifyPartyFax.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.fax ? invoiceData.notifyParty.fax : '';\r\n        notifyPartyEmail.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.email ? invoiceData.notifyParty.email : '';\r\n\r\n        globalInvoiceVariable.notifyParty.name = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.name ? invoiceData.notifyParty.name : notifyPartyName.current?.value;\r\n        globalInvoiceVariable.notifyParty.address = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.address ? invoiceData.notifyParty.address : notifyPartyAddress.current?.value;\r\n        globalInvoiceVariable.notifyParty.city = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.city ? invoiceData.notifyParty.city : notifyPartyCity.current?.value;\r\n        globalInvoiceVariable.notifyParty.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.country ? invoiceData.notifyParty.country : notifyPartyCountry.current?.value;\r\n        globalInvoiceVariable.notifyParty.contactNumber = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.contactNumber ? invoiceData.notifyParty.contactNumber : notifyPartyContactNumber.current?.value;\r\n        globalInvoiceVariable.notifyParty.fax = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.fax ? invoiceData.notifyParty.fax : notifyPartyFax.current?.value;\r\n        globalInvoiceVariable.notifyParty.email = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.email ? invoiceData.notifyParty.email : notifyPartyEmail.current?.value;\r\n        globalInvoiceVariable.notifyParty.sameAsConsignee = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.sameAsConsignee ? invoiceData.notifyParty.sameAsConsignee : isChecked;\r\n\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#FF0000', }}>Notify Party</Text>\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, }}>\r\n                <Checkbox\r\n                    isChecked={isChecked}\r\n                    onChange={value => {\r\n                        setIsChecked(value)\r\n                        globalInvoiceVariable.notifyParty.sameAsConsignee = value;\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                >\r\n                    Same as consignee\r\n                </Checkbox>\r\n            </View>\r\n\r\n            <View style={{ display: isChecked ? 'none' : 'flex', }}>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Name:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.name = value;\r\n                    }}\r\n                        ref={notifyPartyName} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Address:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.address = value;\r\n                    }} ref={notifyPartyAddress} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Address'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>City:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.city = value;\r\n                    }} ref={notifyPartyCity} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='City'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Country:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.country = value;\r\n                    }} ref={notifyPartyCountry} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Country'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Contact Number:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.contactNumber = value;\r\n                    }} ref={notifyPartyContactNumber} disabled={isChecked} multiline placeholderTextColor='#9B9E9F' placeholder='Contact Number'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>FAX:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.fax = value;\r\n                    }} ref={notifyPartyFax} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='FAX'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Email:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.email = value;\r\n                    }} ref={notifyPartyEmail} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n            </View>\r\n\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />{/* Horizontal Line */}\r\n        </>\r\n    )\r\n}\r\n\r\nconst ConsigneeInput = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.sameAsBuyer : true);\r\n    const [accountData, setAccountData] = useState({});\r\n\r\n    const consigneeName = useRef(null);\r\n    const consigneeAddress = useRef(null);\r\n    const consigneeCity = useRef(null);\r\n    const consigneeCountry = useRef(null);\r\n    const consigneeContactNumber = useRef(null);\r\n    const consigneeFax = useRef(null);\r\n    const consigneeEmail = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAccountData = async () => {\r\n            if (!selectedChatData.participants && selectedChatData.participants.customer) return; // Make sure there's a selected email\r\n            const docRef = doc(projectExtensionFirestore, 'accounts', selectedChatData.participants.customer);\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    setAccountData(docSnap.data());\r\n                    // console.log(docSnap.data());\r\n                    consigneeName.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.name ? invoiceData.consignee.name : `${data.textFirst ? data.textFirst : ''} ${data.textLast ? data.textLast : ''}`;\r\n                    consigneeAddress.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.address ? invoiceData.consignee.address : `${data.textStreet ? data.textStreet : ''} ${data.textZip ? data.textZip : ''}`;\r\n                    consigneeCity.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.city ? invoiceData.consignee.city : `${data.city ? data.city : ''}`;\r\n                    consigneeCountry.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.country ? invoiceData.consignee.country : `${data.country ? data.country : ''}`;\r\n                    consigneeContactNumber.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.contactNumber ? invoiceData.consignee.contactNumber : `${data.textPhoneNumber ? data.textPhoneNumber : ''}`;\r\n                    consigneeFax.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.fax ? invoiceData.consignee.fax : `${data.fax ? data.fax : ''}`;\r\n                    consigneeEmail.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.email ? invoiceData.consignee.email : `${data.textEmail ? data.textEmail : ''}`;\r\n\r\n\r\n                    globalInvoiceVariable.consignee.name = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.name ? invoiceData.consignee.name : `${data.textFirst ? data.textFirst : ''} ${data.textLast ? data.textLast : ''}`;\r\n                    globalInvoiceVariable.consignee.address = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.address ? invoiceData.consignee.address : `${data.textStreet ? data.textStreet : ''} ${data.textZip ? data.textZip : ''}`;\r\n                    globalInvoiceVariable.consignee.city = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.city ? invoiceData.consignee.city : `${data.city ? data.city : ''}`;\r\n                    globalInvoiceVariable.consignee.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.country ? invoiceData.consignee.country : `${data.country ? data.country : ''}`;\r\n                    globalInvoiceVariable.consignee.contactNumber = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.contactNumber ? invoiceData.consignee.contactNumber : `${data.textPhoneNumber ? data.textPhoneNumber : ''}`;\r\n                    globalInvoiceVariable.consignee.fax = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.fax ? invoiceData.consignee.fax : `${data.fax ? data.fax : ''}`;\r\n                    globalInvoiceVariable.consignee.email = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.email ? invoiceData.consignee.email : `${data.textEmail ? data.textEmail : ''}`;\r\n                    globalInvoiceVariable.consignee.sameAsBuyer = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.sameAsBuyer ? invoiceData.consignee.sameAsBuyer : isChecked;\r\n\r\n                    // console.log(accountData.length);\r\n                } else {\r\n                    console.log('No such document!');\r\n                    setAccountData(null);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n        fetchAccountData();\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isChecked) {\r\n            consigneeName.current.value = `${accountData.textFirst ? accountData.textFirst : ''} ${accountData.textLast ? accountData.textLast : ''}`;\r\n            consigneeAddress.current.value = `${accountData.textStreet ? accountData.textStreet : ''} ${accountData.textZip ? accountData.textZip : ''}`;\r\n            consigneeCity.current.value = `${accountData.city ? accountData.city : ''}`;\r\n            consigneeCountry.current.value = `${accountData.country ? accountData.country : ''}`;\r\n            consigneeContactNumber.current.value = `${accountData.textPhoneNumber ? accountData.textPhoneNumber : ''}`;\r\n            consigneeFax.current.value = `${accountData.fax ? accountData.fax : ''}`;\r\n            consigneeEmail.current.value = `${accountData.textEmail ? accountData.textEmail : ''}`;\r\n        }\r\n\r\n        // console.log(globalInvoiceVariable);\r\n\r\n\r\n    }, [isChecked])\r\n\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#0A78BE', }}>Consignee</Text>\r\n            </View>\r\n            <View style={{ flexDirection: 'row', margin: 5, }}>\r\n                <Checkbox\r\n                    isChecked={isChecked}\r\n                    onChange={value => {\r\n                        globalInvoiceVariable.consignee.sameAsBuyer = value;\r\n                        setIsChecked(value)\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                >\r\n                    Same as buyer\r\n                </Checkbox>\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Name:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.name = value;\r\n                }} ref={consigneeName} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Address:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.address = value;\r\n                }} ref={consigneeAddress} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Address'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>City:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.city = value;\r\n                }} ref={consigneeCity} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='City'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Country:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.country = value;\r\n                }} ref={consigneeCountry} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Country'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Contact Number:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.contactNumber = value;\r\n                }} ref={consigneeContactNumber} disabled={isChecked} multiline placeholderTextColor='#9B9E9F' placeholder='Contact Number'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>FAX:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.fax = value;\r\n                }} ref={consigneeFax} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='FAX'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Email:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.email = value;\r\n                }} ref={consigneeEmail} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            <NotifyPartyInput accountData={accountData} setAccountData={setAccountData} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst InvoiceFeatures = ({ widthScaleFactor, heightScaleFactor }) => {\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    return (\r\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', width: 495 * widthScaleFactor, }}>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemAnBrSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Anti-Lock Braking System (ABS)</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemDrAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Driver Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemPaAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Passenger Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemSiAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Side Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAiCoFr ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Air Conditioner (Front)</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAiCoRe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Air Conditioner (Rear)</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAMFMRa ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>AM/FM Radio</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAMFMSt ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>AM/FM Stereo</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCDPl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>CD Player</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCDCh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>CD Changer</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCrSpCo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Cruis Speed Control</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortDiSp ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}> Digital Speedometer</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortDVDPl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>DVD Player</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortHDD ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Hard Disk Drive</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortNaSyGPS ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Navigation System (GPS)</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortPoSt ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Steering</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortPrAuSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Premium Audio System</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortReKeSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Remote Keyless System</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortTiStWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Tilt Steering Wheel</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorLeSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Leather Seats</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoDoLo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Door Locks</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoMi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Mirrors</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Seats</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoWi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Windows</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorReWiDe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Rear Window Defroster</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorReWiWi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Rear Window Wiper</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorThRoSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Third Row Seats</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorTiGl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Tinted Glasses</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorAlWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Alloy Wheels</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorPoSlDo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Sliding Door</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorSuRo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Sunroof</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsCuWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Customized Wheels</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsFuLo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Fully Loaded</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsMaHiAv ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Maintenance History Available</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsBrNeTi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Brand New Tires</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsNoAcHi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>No Accident History</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsNoSmPrOw ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Non-Smoking Previous Owner</Text>\r\n            </View>\r\n\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsOnOwHi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>One Owner History</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsPeRaTi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Performance-rated Tires</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsReBo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Repainted Body</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsTuEn ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Turbo Engine</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsUpAuSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Upgraded Audio System</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst createHmacSha256Hash = (data, secretKey) => {\r\n    const hash = HmacSHA256(data, secretKey);\r\n    return enc.Hex.stringify(hash);\r\n};\r\n\r\n\r\nconst ConfirmPaymentModalContent = () => {\r\n    const dispatch = useDispatch();\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n\r\n\r\n    const [historyModalVisible, setHistoryModalVisible] = useState(false);\r\n\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    const totalAmountString = invoiceData.paymentDetails.totalAmount;\r\n    const totalAmountNumber = parseFloat(totalAmountString.replace(/,/g, ''));\r\n\r\n    const inputAmountRef = useRef(null);\r\n\r\n    const handleHistoryModalOpen = () => {\r\n        setHistoryModalVisible(true);\r\n\r\n        // console.log(selectedChatData.payments);\r\n    }\r\n\r\n    const handleHistoryModalClose = () => {\r\n        setHistoryModalVisible(false);\r\n\r\n    }\r\n\r\n    const handleInputAmountChangeText = (text) => {\r\n        // Remove characters that are not digits, dot, or minus, and ensure minus is only at the start\r\n        const filteredText = text\r\n            .replace(/[^0-9.-]/g, '')  // Remove characters that are not digits, dot, or minus\r\n            .replace(/(.)\\-/g, '$1')   // Remove minus if not at the start\r\n            .replace(/^-(?=\\-)/, '')   // Remove extra minus at the start\r\n            .replace(/(\\..*)\\./g, '$1'); // Allow only one dot\r\n\r\n        // Update the input field\r\n        inputAmountRef.current.value = filteredText;\r\n    };\r\n\r\n\r\n\r\n    const handleCompletePaymentPress = () => {\r\n        const filteredText = invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1') - totalValue;\r\n        inputAmountRef.current.value = filteredText;\r\n    }\r\n\r\n\r\n    const fullPaymentMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `Full Payment Received\r\n\r\nDear Customer,\r\n\r\nI hope this message finds you well. \r\n\r\nWe are writing to confirm that we have received your full payment. \r\n\r\nThank you for settling your account promptly.\r\n\r\nShould you have any further questions or require assistance, please feel free to contact us.\r\n                \r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `Full Payment Received\r\n\r\nDear Customer,\r\n\r\nI hope this message finds you well. \r\n\r\nWe are writing to confirm that we have received your full payment. \r\n                \r\nThank you for settling your account promptly.\r\n                \r\nShould you have any further questions or require assistance, please feel free to contact us.\r\n                                \r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n\r\n    const overBalanceMessage = async (amount) => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `Dear Customer,\r\n\r\nGood day! \r\n\r\nWe're writing to inform you about your account with us at Real Motor Japan.\r\n                \r\nYou have an extra overbalance in your account.\r\n\r\nAmount: $${amount}\r\n                \r\nFeel free to contact us if you have any questions. We're here to help.\r\n                \r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `Dear Customer,\r\n\r\nGood day! \r\n                \r\nWe're writing to inform you about your account with us at Real Motor Japan.\r\n                                \r\nYou have an extra overbalance in your account.\r\n                \r\nAmount: $${amount}\r\n                                \r\nFeel free to contact us if you have any questions. We're here to help.\r\n                                \r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const paymentMessage = async (amount, transactionDate) => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `🌟 Payment Confirmation Alert 🌟\r\n\r\nDear Customer! 👋\r\n\r\nWe're thrilled to inform you that your recent payment has been successfully reflected in our bank account.\r\n\r\nYour prompt and efficient transaction is greatly appreciated! 🎉\r\n\r\n🔍 Payment Details:\r\n\r\nAmount: $${amount}\r\nTransaction Date: ${transactionDate}\r\n\r\nYour account and services are now fully up-to-date. If you have any further questions or require assistance, feel free to reach out.\r\n\r\nThank you for your continued trust in us.\r\nLooking forward to serving you more in the future! 😊\r\n\r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `🌟 Payment Confirmation Alert 🌟\r\n\r\nDear Customer! 👋\r\n\r\nWe're thrilled to inform you that your recent payment has been successfully reflected in our bank account.\r\n\r\nYour prompt and efficient transaction is greatly appreciated! 🎉\r\n\r\n🔍 Payment Details:\r\n\r\nAmount: $${amount}\r\nTransaction Date: ${transactionDate}\r\n\r\nYour account and services are now fully up-to-date. If you have any further questions or require assistance, feel free to reach out.\r\n\r\nThank you for your continued trust in us.\r\nLooking forward to serving you more in the future! 😊\r\n\r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const confirmPayment = async () => {\r\n        setIsConfirmLoading(true);\r\n\r\n        const amountNeeded = invoiceData.paymentDetails.totalAmount ? invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1') - totalValue : '';\r\n        const docRef = doc(projectExtensionFirestore, 'chats', selectedChatData.id);\r\n        const docRefCustomer = doc(projectExtensionFirestore, 'accounts', selectedChatData.participants.customer);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n\r\n        const newPayments = [\r\n            { value: inputAmountRef.current.value, date: formattedTime },\r\n        ];\r\n\r\n        const newPaymentsAccount = [\r\n            { value: inputAmountRef.current.value, date: formattedTime, vehicleRef: selectedChatData.carData.referenceNumber, vehicleName: selectedChatData.carData.carName, },\r\n        ];\r\n\r\n        const inputAmount = inputAmountRef.current.value;\r\n        const numericInputAmount = Number(inputAmount);\r\n        const formattedInputAmount = numericInputAmount.toLocaleString();\r\n        const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n        if (inputAmount === '' || inputAmount === '0') {\r\n            setIsConfirmLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (!inputAmount.startsWith('-')) {\r\n                // First, execute paymentMessage\r\n                await paymentMessage(formattedInputAmount, formattedTime);\r\n                await delay(10); //10ms delay\r\n\r\n                if (numericInputAmount >= amountNeeded) {\r\n                    // Once paymentMessage is successful, execute fullPaymentMessage\r\n                    await fullPaymentMessage();\r\n                    await delay(10); //10ms delay\r\n\r\n                    if (numericInputAmount > amountNeeded) {\r\n                        // Calculate overbalance and execute overBalanceMessage\r\n                        const overBalance = numericInputAmount - amountNeeded;\r\n\r\n                        if (overBalance > 0) {\r\n                            await overBalanceMessage(selectedCustomerData.overBalance ? selectedCustomerData.overBalance + overBalance : '');\r\n                            await delay(10); //10ms delay\r\n                            await updateDoc(docRefCustomer, {\r\n                                overBalance: increment(overBalance),\r\n                            });\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    // Update step indicator for successful payment\r\n                    await updateDoc(docRef, {\r\n                        'stepIndicator.value': 4,\r\n                        'stepIndicator.status': 'Payment Confirmed',\r\n                    });\r\n\r\n                } else {\r\n                    // Handle the case where the payment is less than the amount needed\r\n                    console.log('Partial payment received');\r\n                }\r\n\r\n                // Update payments and payments history\r\n\r\n                await updateDoc(docRef, {\r\n                    payments: arrayUnion(...newPayments)\r\n                });\r\n\r\n                await updateDoc(docRefCustomer, {\r\n                    paymentsHistory: arrayUnion(...newPaymentsAccount)\r\n                });\r\n\r\n            } else {\r\n                console.error('Negative value entered');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error processing payment: ', error);\r\n        } finally {\r\n            setIsConfirmLoading(false);\r\n            dispatch(setTransactionModalVisible(false));\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    function formatDate(dateString) {\r\n        // Remove ' at ' from the date string\r\n        const cleanedDateString = dateString.replace(' at ', ' ');\r\n        const date = new Date(cleanedDateString);\r\n\r\n        if (isNaN(date.getTime())) {\r\n            // Date is not valid\r\n            console.error(\"Invalid Date:\", dateString);\r\n            return \"Invalid Date\";\r\n        }\r\n\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        const year = date.getFullYear();\r\n        const month = months[date.getMonth()];\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n\r\n        let hours = date.getHours();\r\n        const minutes = date.getMinutes().toString().padStart(2, '0');\r\n        const ampm = hours >= 12 ? 'pm' : 'am';\r\n\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n\r\n        return `${year} ${month} ${day} at ${hours}:${minutes}${ampm}`;\r\n    }\r\n\r\n    const PaymentHistoryModal = ({ historyModalVisible, handleHistoryModalClose, payments }) => {\r\n        // Create a copy of payments and sort it by date in descending order\r\n        const sortedPayments = [...payments].sort((a, b) => {\r\n            const dateA = a.date;\r\n            const dateB = b.date;\r\n            return dateB - dateA; // Sorts in descending order\r\n        });\r\n\r\n        // console.log(sortedPayments);\r\n\r\n        return (\r\n            <Modal isOpen={historyModalVisible} onClose={handleHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Payment History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500, }}>\r\n                            {\r\n                                sortedPayments.length > 0 ?\r\n                                    sortedPayments.map((payment, index) => (\r\n                                        <View key={index} style={{\r\n                                            marginBottom: 15,\r\n                                            backgroundColor: '#F8F9FF', // Card background color\r\n                                            borderRadius: 10, // Rounded corners for the card\r\n                                            shadowColor: '#000', // Shadow color\r\n                                            shadowOffset: { width: 0, height: 2 },\r\n                                            shadowOpacity: 0.1,\r\n                                            shadowRadius: 2,\r\n                                            elevation: 3, // Elevation for Android\r\n                                            padding: 15, // Padding inside the card\r\n                                            borderBottomWidth: 1,\r\n                                            borderBottomColor: '#eee',\r\n                                        }}>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Date: </Text>\r\n                                                <Text style={{ color: '#333' }}>\r\n                                                    {formatDate(sortedPayments[sortedPayments.length - 1 - index].date)}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Value: </Text>\r\n                                                <Text style={{ color: Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString().startsWith('-') ? '#FF0000' : '#16A34A' }}>\r\n                                                    ${Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString()}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                        </View>\r\n                                    )) :\r\n                                    <Text style={{ fontWeight: 'bold', alignSelf: 'center', }} italic>No history to show</Text>\r\n                            }\r\n                        </ScrollView>\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        );\r\n    };\r\n\r\n    const totalValue = selectedChatData.payments\r\n        ? selectedChatData.payments.reduce((sum, payment) => {\r\n            const value = Number(payment.value);\r\n            return sum + (isNaN(value) ? 0 : value);\r\n        }, 0)\r\n        : 0;\r\n\r\n    const isTotalValueGreater = Number(totalValue) < Number(invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1'));\r\n    const displayedAmount = isTotalValueGreater ? Number(totalValue).toLocaleString() : invoiceData.paymentDetails.totalAmount;\r\n\r\n    return (\r\n\r\n        <View style={{ flex: 1, }}>\r\n\r\n            <View style={{ marginLeft: 5, }}>\r\n\r\n                <Text style={{ fontWefight: 700, fontSize: 14, }}>Total Paid:</Text>\r\n\r\n                <Progress w=\"90%\" shadow={2} value={Number(totalValue)} max={totalAmountNumber} _filledTrack={{\r\n                    bg: \"lime.500\"\r\n                }} />\r\n\r\n                <Text style={{ fontWeight: 700, fontSize: 14, color: '#FF0000', }}>${displayedAmount}\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#8D7777', }}> out of </Text>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#16A34A', }}>{`$${invoiceData.paymentDetails.totalAmount}`}</Text>\r\n                </Text>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ marginLeft: 5, }}>\r\n\r\n                <Pressable\r\n                    onPress={handleHistoryModalOpen}\r\n                    style={{ width: 'fit-content', }}>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#0A78BE', }} underline selectable={false}>Payments History</Text>\r\n                </Pressable>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ marginLeft: 5, marginTop: 5, }}>\r\n\r\n                <Text style={{ fontWeight: 700, fontSize: 14, }}>Input Amount:</Text>\r\n\r\n                <View style={{ flexDirection: 'row', alignItems: 'center', }}>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 18, }}>$</Text>\r\n\r\n                    <TextInput\r\n                        ref={inputAmountRef}\r\n                        placeholderTextColor='#9B9E9F' placeholder='Input Amount'\r\n                        style={{ height: 35, width: 300, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        onChangeText={handleInputAmountChangeText}\r\n                    />\r\n\r\n                </View>\r\n\r\n                <Pressable\r\n                    onPress={handleCompletePaymentPress}\r\n                    style={{ width: 'fit-content', }}>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#16A34A', }} underline selectable={false}>Complete Payment</Text>\r\n                </Pressable>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}>\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        backgroundColor: '#16A34A', // Change color on hover\r\n                        borderRadius: 5,\r\n                        padding: 5,\r\n                    }}\r\n                >\r\n                    {!isConfirmLoading ? (\r\n                        <Pressable\r\n                            onPress={() => confirmPayment()}\r\n                        >\r\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>\r\n                                Confirm\r\n                            </Text>\r\n                        </Pressable>\r\n                    ) : (\r\n                        <Spinner size={'sm'} color={'white'} />)}\r\n\r\n                </View>\r\n            </View>\r\n\r\n            <PaymentHistoryModal\r\n                historyModalVisible={historyModalVisible}\r\n                handleHistoryModalClose={handleHistoryModalClose}\r\n                payments={selectedChatData.payments ? selectedChatData.payments : []} />\r\n\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst IssueProformaInvoiceModalContent = () => {\r\n    const dispatch = useDispatch();\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const [isConfirmHovered, setIsConfirmHovered] = useState(false);\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    const cfsInputRef = useRef(null);\r\n    const placeOfDeliveryInputRef = useRef(null);\r\n    const secretKey = CRYPTO_KEY.toString();\r\n\r\n\r\n\r\n    const invoiceMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: 'Issued Invoice',\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'IssuedInvoice',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: 'Issued Invoice',\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const confirmInvoice = async () => {\r\n        setIsConfirmLoading(true);\r\n        const year = currentDate.split('-')[0]; // Split the date and get the year\r\n        const yearSuffix = year.slice(-2); // Get last 2 digits of the year\r\n        const collectionRef = collection(projectExtensionFirestore, \"IssuedInvoice\");\r\n\r\n        try {\r\n            // Retrieve all documents for the current yearF\r\n            const querySnapshot = await getDocs(collectionRef);\r\n            let maxNumber = 0;\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const docName = doc.id;\r\n                if (docName.startsWith(yearSuffix)) {\r\n                    const number = parseInt(docName.substring(2), 10);\r\n                    if (number > maxNumber) {\r\n                        maxNumber = number;\r\n                    }\r\n                }\r\n            });\r\n\r\n            const nextNumber = maxNumber + 1;\r\n            const docName = `${yearSuffix}${nextNumber}`;\r\n            const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", docName);\r\n            const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\r\n\r\n            const hashedData = createHmacSha256Hash(docName, secretKey);\r\n\r\n            // Create a new document with the globalInvoiceVariable object\r\n            if (selectedChatData.invoiceNumber) {\r\n                const updateDocRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n\r\n                await setDoc(updateDocRef, {\r\n                    ...globalInvoiceVariable,\r\n                    isCancelled: false,\r\n                    customerEmail: selectedCustomerData.textEmail,\r\n                    chatId: selectedChatData.id,\r\n                    carData: selectedChatData.carData,\r\n                    currency: selectedChatData.currency,\r\n                }, { merge: true });\r\n\r\n                if (selectedChatData.stepIndicator.value == 1) {\r\n                    await updateDoc(docRefChatId, {\r\n                        'stepIndicator.status': 'Issue Proforma Invoice',\r\n                        'stepIndicator.value': 2,\r\n                        // finalPrice: globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, ''),\r\n                    });\r\n                }\r\n\r\n                invoiceMessage();\r\n                setIsConfirmLoading(false);\r\n                dispatch(setTransactionModalVisible(false));\r\n            }\r\n\r\n            else {\r\n\r\n                await setDoc(docRef, {\r\n                    ...globalInvoiceVariable,\r\n                    isCancelled: false,\r\n                    customerEmail: selectedCustomerData.textEmail,\r\n                    chatId: selectedChatData.id,\r\n                    cryptoNumber: hashedData,\r\n                    carData: selectedChatData.carData,\r\n                    currency: selectedChatData.currency,\r\n                });\r\n\r\n                await updateDoc(docRefChatId, {\r\n                    keywords: arrayUnion(docName),\r\n                    invoiceNumber: docName,\r\n                    'stepIndicator.status': 'Issue Proforma Invoice',\r\n                    'stepIndicator.value': 2,\r\n                    // finalPrice: globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, ''),\r\n                });\r\n\r\n                invoiceMessage();\r\n                setIsConfirmLoading(false);\r\n                dispatch(setTransactionModalVisible(false));\r\n\r\n\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error creating document: \", error);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     calculateTotalAmount();\r\n    // }, [additionalPriceArray]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        globalInvoiceVariable.cfs = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.cfs ? invoiceData.cfs : cfsInputRef.current?.value;\r\n        globalInvoiceVariable.placeOfDelivery = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.placeOfDelivery ? invoiceData.placeOfDelivery : placeOfDeliveryInputRef.current?.value;\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <ScrollView style={{ flex: 1, maxHeight: 500, }}>\r\n\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>CFS:</Text>\r\n                <TextInput\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.cfs ? invoiceData.cfs : ''}\r\n                    ref={cfsInputRef} placeholderTextColor='#9B9E9F' placeholder='Input CFS (Optional)'\r\n                    style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onChangeText={(value) => globalInvoiceVariable.cfs = value} />\r\n            </View>\r\n\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Place of Delivery:</Text>\r\n                <TextInput\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.placeOfDelivery ? invoiceData.placeOfDelivery : ''}\r\n                    ref={placeOfDeliveryInputRef} placeholderTextColor='#9B9E9F' placeholder='Place of Delivery (Optional)'\r\n                    style={{ height: 25, width: 200, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onChangeText={(value) => globalInvoiceVariable.placeOfDelivery = value} />\r\n            </View>\r\n\r\n            <View style={{ margin: 5, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3 }}>Port of Departure:</Text>\r\n                <SelectPortOfDeparture />\r\n            </View>\r\n\r\n            <View style={{ margin: 5, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Sales Person:</Text>\r\n                <SelectSalesPerson />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 5, }} />\r\n\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Port of Discharge:</Text>\r\n                {/*Select Discharge*/}\r\n                <SelectPortOfDischarge />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 5, }} />\r\n\r\n            <ConsigneeInput />\r\n\r\n            <PaymentDetails />\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', marginTop: 4, }} />\r\n\r\n            <BankInformation />\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, marginTop: 4, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}>\r\n                <View\r\n\r\n                    // onTouchEnd={() => confirmInvoice()}\r\n                    style={{\r\n                        flex: 1,\r\n                        backgroundColor: isConfirmHovered ? '#145A32' : '#16A34A', // Change color on hover\r\n                        borderRadius: 5,\r\n                        padding: 5,\r\n                    }}\r\n\r\n                // onMouseEnter={() => setIsConfirmHovered(true)}\r\n                // onMouseLeave={() => setIsConfirmHovered(false)}\r\n                >\r\n                    {!isConfirmLoading ? (\r\n                        <Pressable onPress={() => confirmInvoice()}>\r\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>\r\n                                Confirm\r\n                            </Text>\r\n                        </Pressable>\r\n\r\n                    ) : (\r\n                        <Spinner size={'sm'} color={'white'} />)}\r\n\r\n                </View>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\n\r\nconst ProfitCalculator = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const [totalSCCAmount, setTotalSCCAmount] = useState(0);\r\n    const [formattedTotalSCCAmount, setFormattedTotalSCCAmount] = useState(0);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [totalProfitAmountDollars, setTotalProfitAmountDollars] = useState(0);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n    const inputPriceRef = useRef(null);\r\n\r\n\r\n    const [portsData, setPortsData] = useState({});\r\n    const [origFreight, setOrigFreight] = useState(0);\r\n    const [lastFetchedPort, setLastFetchedPort] = useState('');\r\n\r\n\r\n    // Function to fetch ports data from Firestore\r\n    const fetchPortsData = async () => {\r\n        const currentPort = invoiceData.discharge.port;\r\n        const freightOrigPrice = selectedChatData.freightOrigPrice;\r\n\r\n        // Fetch data if the current port is different from the last fetched port\r\n        // and if freightOrigPrice is valid (exists, not an empty string, and not 0)\r\n        if (currentPort !== lastFetchedPort && !freightOrigPrice) {\r\n\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    if (data[currentPort]?.kobePrice !== undefined) {\r\n\r\n                        if (invoiceData.departurePort == \"Nagoya\") {\r\n\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].nagoyaPrice,\r\n                            });\r\n                            // console.log(\"Nagoya Price \", data[currentPort].nagoyaPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Yokohama\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].yokohamaPrice,\r\n                            });\r\n                            // console.log(\"Yokohama Price \", data[currentPort].yokohamaPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Kyushu\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].kyushuPrice,\r\n                            });\r\n                            // console.log(\"Kyushu Price \", data[currentPort].kyushuPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Kobe\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].kobePrice,\r\n                            });\r\n                            // console.log(\"Kobe Price \", data[currentPort].kobePrice);\r\n\r\n                        }\r\n\r\n                        setLastFetchedPort(currentPort); // Update last fetched port\r\n                    } else {\r\n                        console.log('Port data not found for the given port');\r\n                    }\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        } else {\r\n            console.log('No need to fetch new data');\r\n        }\r\n    };\r\n\r\n\r\n    // useEffect for fetching ports data\r\n    // useEffect(() => {\r\n    //     // Fetch ports data\r\n    //     const fetchPortsData = async () => {\r\n    //         const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n    //         try {\r\n    //             const docSnap = await getDoc(docRef);\r\n\r\n    //             if (docSnap.exists()) {\r\n    //                 const data = docSnap.data();\r\n    //                 setPortsData(data[invoiceData.discharge.port].kobePrice);\r\n    //                 console.log(data[invoiceData.discharge.port].kobePrice);\r\n    //             } else {\r\n    //                 console.log('No such document!');\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching document:', error);\r\n    //         }\r\n    //     };\r\n\r\n    //     fetchPortsData();\r\n\r\n    // }, [invoiceData]);\r\n\r\n\r\n    const handleModalOpen = () => {\r\n        setModalVisible(true);\r\n        inputPriceRef.current.value = defaultInputPrice;\r\n        calculateTotalAmount();\r\n\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n\r\n    };\r\n\r\n\r\n    const fee = {\r\n        auction: 10000,\r\n        transport: 10000,\r\n        shippingAgent: 15000,\r\n    };\r\n\r\n    const purchasedPrice = Number(selectedChatData.carData && selectedChatData.carData.purchasedPrice ? selectedChatData.carData.purchasedPrice : 0);\r\n    const formattedPurchasedPrice = Number(purchasedPrice).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const auctionFee = Number(fee.auction);\r\n    const formattedAuctionFee = Number(auctionFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const transportFee = Number(fee.transport);\r\n    const formattedTransportFee = Number(transportFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const shippingAgentFee = Number(fee.shippingAgent);\r\n    const formattedShippingAgentFee = Number(shippingAgentFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const cubicMeter = Number(selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ? selectedChatData.carData.dimensionCubicMeters : 0).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n\r\n    const costPerCubicMeter = Number(selectedChatData && selectedChatData.freightOrigPrice ? selectedChatData.freightOrigPrice : 0);\r\n    const formattedCostPerCubicMeter = Number(costPerCubicMeter).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const totalCubicMeterCostDollars = Number(costPerCubicMeter * cubicMeter);\r\n    const formattedTotalCubicMeterCostDollars = Number(costPerCubicMeter * cubicMeter).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const totalCubicMeterCostYen = Number(totalCubicMeterCostDollars * selectedChatData.currency.usdToJpy);\r\n    const formattedTotalCubicMeterCostYen = Number(totalCubicMeterCostYen).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const realTotalPriceYen = (purchasedPrice + auctionFee + transportFee + shippingAgentFee + totalSCCAmount + totalCubicMeterCostYen)\r\n    const formattedRealTotalPriceYen = Number(realTotalPriceYen).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const realTotalPriceDollars = realTotalPriceYen * selectedChatData.currency.jpyToUsd;\r\n    const formattedRealTotalPriceDollars = realTotalPriceDollars.toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n\r\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\r\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice));\r\n\r\n\r\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0))) + freightCalculation;\r\n\r\n    const defaultInputPrice = Math.round(\r\n        invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount\r\n            ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, ''))\r\n            : totalPriceCalculation\r\n    );\r\n\r\n\r\n\r\n\r\n    const safelyParseNumber = (value) => {\r\n        const number = Number(value.replace(/,/g, ''));\r\n        return isNaN(number) ? 0 : number;\r\n    };\r\n\r\n    const calculateTotalAmount = () => {\r\n\r\n        const inputPrice = safelyParseNumber(inputPriceRef.current?.value);\r\n\r\n        const totalAmountDollars = Math.round(inputPrice - realTotalPriceDollars);\r\n        setTotalProfitAmountDollars(totalAmountDollars);\r\n        // const total = Math.round(fobPrice + freight + inspection + insurance + additionalPricesTotal).toLocaleString();\r\n        // setTotalAmountCalculated(total);\r\n        // globalInvoiceVariable.paymentDetails.totalAmount = total;\r\n    };\r\n\r\n    const handleInputPriceChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9]/g, '');\r\n        inputPriceRef.current.value = filteredText;\r\n\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        if (selectedChatData.carData && selectedChatData.carData.supplyChainsCostsData) {\r\n\r\n            const amounts = selectedChatData.carData.supplyChainsCostsData.map((item) => {\r\n                const expenseName = Object.keys(item)[0];\r\n                const expenseData = item[expenseName];\r\n                return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n            });\r\n\r\n            // Use reduce to add up all the amounts\r\n            const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n            const formattedTotalAmount = totalAmount.toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n            setTotalSCCAmount(totalAmount);\r\n            setFormattedTotalSCCAmount(formattedTotalAmount);\r\n\r\n\r\n            // console.log(defaultInputPrice);\r\n            // console.log(realTotalPriceDollars);\r\n            // console.log(formattedRealTotalPriceDollars);\r\n            // console.log(realTotalPriceYen);\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const freightOrigPrice = selectedChatData.freightOrigPrice;\r\n\r\n        if (modalVisible && !freightOrigPrice) {\r\n            fetchPortsData();\r\n        }\r\n\r\n\r\n    }, [modalVisible]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (totalSCCAmount !== 0 || totalSCCAmount !== '') {\r\n            const totalAmountDollars = Math.round(defaultInputPrice - realTotalPriceDollars);\r\n            setTotalProfitAmountDollars(totalAmountDollars);\r\n        }\r\n\r\n\r\n    }, [totalSCCAmount]);\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable\r\n                onPress={handleModalOpen}\r\n                focusable={false}\r\n                variant='ghost'\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#4c555c' : '#6e7a83',\r\n                }}>\r\n                <Ionicons size={15} color={'white'} name='calculator' />\r\n                <Text style={{ textAlign: 'center', color: 'white', fontWeight: 'bold', }} >Profit Calculator</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={modalVisible}\r\n                onClose={() => {\r\n                    handleModalClose()\r\n                }}\r\n                initialFocusRef={inputPriceRef}\r\n                size={'lg'}\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header>Profit Calculator</Modal.Header>\r\n                    <Modal.Body style={{ flexDirection: 'row', backgroundColor: '#fafafa', }}>\r\n\r\n                        <View style={{ flex: 1, borderRightWidth: 1, borderRightColor: '#DADDE1', maxHeight: 500, }}>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, }}>Profit (Yen):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(totalProfitAmountDollars * selectedChatData.currency.usdToJpy) < 0 ? '#FF0000' : '#8D7777',\r\n                                }}>\r\n                                    {`${Number(totalProfitAmountDollars * selectedChatData.currency.usdToJpy).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, }}>Profit (US Dollars):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(totalProfitAmountDollars) < 0 ? '#FF0000' : '#16A34A',\r\n                                }}>\r\n                                    {`${Number(totalProfitAmountDollars).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, }}>Profit (Percentage):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(((totalProfitAmountDollars * selectedChatData.currency.usdToJpy) / purchasedPrice) * 100) <= 10.5 ? '#FF0000' : '#336699',\r\n                                }}>\r\n                                    {`${Number(((totalProfitAmountDollars * selectedChatData.currency.usdToJpy) / purchasedPrice) * 100).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}%`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: '#6E7A83', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, color: 'white', }}>Price to calculate:</Text>\r\n                                <TextInput\r\n                                    onChangeText={handleInputPriceChangeText}\r\n                                    defaultValue={defaultInputPrice}\r\n                                    ref={inputPriceRef}\r\n                                    placeholderTextColor='#9B9E9F' placeholder='Input Price'\r\n                                    style={{\r\n                                        backgroundColor: 'white',\r\n                                        height: 25,\r\n                                        margin: 2,\r\n                                        padding: 1,\r\n                                        borderRadius: 4,\r\n                                        borderWidth: 1,\r\n                                        borderColor: 'white',\r\n                                        outlineStyle: 'none',\r\n                                        fontSize: 18,\r\n                                        fontWeight: '700',\r\n                                    }}\r\n                                />\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n\r\n                        <View style={{ flex: 1, marginLeft: 3 }}>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Purchased Price:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedPurchasedPrice}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Auction Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedAuctionFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Transport Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedTransportFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Shipping Agent Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedShippingAgentFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Supply Chains Costs:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedTotalSCCAmount}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Cubic Meter:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${cubicMeter}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Cost per Cubic Meter:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedCostPerCubicMeter} x ${cubicMeter}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 14, color: '#16A34A', }}>\r\n                                    {`${formattedTotalCubicMeterCostDollars}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 14, color: '#8D7777', }}>\r\n                                    {`${formattedTotalCubicMeterCostYen}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, }}>Total:</Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 18, color: '#8D7777', }}>\r\n                                    {`${formattedRealTotalPriceYen}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 18, color: '#16A34A', }}>\r\n                                    {`${formattedRealTotalPriceDollars}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst GenerateCustomInvoice = () => {\r\n    let invoiceNameExtension = '';\r\n    let divideInvoice = 1;\r\n    let additionalPriceLocal;\r\n    let additionalNameLocal;\r\n    // npm install html2canvas jspdf\r\n    // import jsPDF from 'jspdf';\r\n    // import html2canvas from 'html2canvas';\r\n    const dispatch = useDispatch();\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const customInvoiceVisible = useSelector((state) => state.customInvoiceVisible);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [isPreviewHovered, setIsPreviewHovered] = useState(false);\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const invoiceRef = useRef(null);\r\n    const qrCodeRef = useRef(null);\r\n    const [capturedImageUri, setCapturedImageUri] = useState('');\r\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.sameAsConsignee : false);\r\n\r\n    const [invoiceNumber, setInvoiceNumber] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.id : '');\r\n    const [invoiceViewKey, setInvoiceViewKey] = useState(0);\r\n\r\n    const issuingDateRef = useRef(null);\r\n    const [issuingDate, setIssuingDate] = useState('');\r\n\r\n    const dueDateRef = useRef(null);\r\n    const [dueDate, setDueDate] = useState('');\r\n\r\n\r\n    const shippedFromRef = useRef(null);\r\n    const [shippedFrom, setShippedFrom] = useState('');\r\n\r\n    const shippedToRef = useRef(null);\r\n    const [shippedTo, setShippedTo] = useState('');\r\n\r\n    const placeOfDeliveryRef = useRef(null);\r\n    const [placeOfDelivery, setPlaceOfDelivery] = useState('');\r\n\r\n    const cfsRef = useRef(null);\r\n    const [cfs, setCfs] = useState('');\r\n\r\n    const consigneeNameRef = useRef(null);\r\n    const [consigneeName, setConsigneeName] = useState('');\r\n\r\n    const consigneeAddressRef = useRef(null);\r\n    const [consigneeAddress, setConsigneeAddress] = useState('');\r\n\r\n    const consigneeEmailRef = useRef(null);\r\n    const [consigneeEmail, setConsigneeEmail] = useState('');\r\n\r\n    const consigneeContactRef = useRef(null);\r\n    const [consigneeContact, setConsigneeContact] = useState('');\r\n\r\n    const consigneeFaxRef = useRef(null);\r\n    const [consigneeFax, setConsigneeFax] = useState('');\r\n\r\n    const notifyPartyNameRef = useRef(null);\r\n    const [notifyPartyName, setNotifyPartyName] = useState('');\r\n\r\n    const notifyPartyAddressRef = useRef(null);\r\n    const [notifyPartyAddress, setNotifyPartyAddress] = useState('');\r\n\r\n    const notifyPartyEmailRef = useRef(null);\r\n    const [notifyPartyEmail, setNotifyPartyEmail] = useState('');\r\n\r\n    const notifyPartyContactRef = useRef(null);\r\n    const [notifyPartyContact, setNotifyPartyContact] = useState('');\r\n\r\n    const notifyPartyFaxRef = useRef(null);\r\n    const [notifyPartyFax, setNotifyPartyFax] = useState('');\r\n\r\n    const carNameRef = useRef(null);\r\n    const [carName, setCarName] = useState('');\r\n\r\n    const specificationsRef = useRef(null);\r\n    const [specifications, setSpecifications] = useState('');\r\n\r\n    const itemNoteRef = useRef(null);\r\n    const [itemNote, setItemNote] = useState('');\r\n\r\n    const fobTextRef = useRef(null);\r\n    const [fobText, setFobText] = useState('');\r\n\r\n    const fobPriceRef = useRef(null);\r\n    const [fobPrice, setFobPrice] = useState('');\r\n\r\n    const freightTextRef = useRef(null);\r\n    const [freightText, setFreightText] = useState('');\r\n\r\n    const freightPriceRef = useRef(null);\r\n    const [freightPrice, setFreightPrice] = useState('');\r\n\r\n    const inspectionTextRef = useRef(null);\r\n    const [inspectionText, setInspectionText] = useState('');\r\n\r\n    const inspectionPriceRef = useRef(null);\r\n    const [inspectionPrice, setInspectionPrice] = useState('');\r\n\r\n    const totalPriceRef = useRef(null);\r\n    const [totalPrice, setTotalPrice] = useState('');\r\n\r\n\r\n    const additionalNameRef = useRef(null);\r\n    const [additionalName, setAdditionalName] = useState([]);\r\n\r\n    const additionalPriceRef = useRef(null);\r\n    const [additionalPrice, setAdditionalPrice] = useState([]);\r\n\r\n    const dividedByRef = useRef(null);\r\n    const [dividedBy, setDividedBy] = useState('');\r\n\r\n\r\n\r\n\r\n    const handleModalClose = () => {\r\n        dispatch(setCustomInvoiceVisible(false))\r\n        dispatch(setPreviewInvoiceVisible(true))\r\n        setCapturedImageUri('');\r\n    }\r\n\r\n    function countTrueValuesInCarData(invoiceData) {\r\n        let count = 0;\r\n\r\n        // Check if carData exists in invoiceData\r\n        if (invoiceData.carData) {\r\n            // List of fields to check within carData\r\n            const fields = ['interior', 'exterior', 'safetySystem', 'comfort', 'sellingPoints'];\r\n\r\n            fields.forEach(field => {\r\n                if (invoiceData.carData[field]) {\r\n                    // Count true values in each field of carData\r\n                    count += Object.values(invoiceData.carData[field]).filter(value => value === true).length;\r\n                }\r\n            });\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n\r\n    // useEffect(() => {\r\n    //     let generatedImageUri = '';\r\n    //     const captureImageAsync = async () => {\r\n    //         try {\r\n    //             if (invoiceRef.current && modalVisible == true) {\r\n    //                 // Adjust the scale to control the captured image resolution\r\n    //                 const scale = 0.85; // Experiment with different scale values\r\n    //                 const width = 2480 * scale;\r\n    //                 const height = 3508 * scale;\r\n\r\n    //                 const imageUri = await captureRef(invoiceRef, {\r\n    //                     format: 'jpg',\r\n    //                     quality: 1, // Adjust quality if needed\r\n    //                     result: 'base64',\r\n    //                     width: width,\r\n    //                     height: height,\r\n    //                 });\r\n\r\n    //                 generatedImageUri = `data:image/jpeg;base64,${imageUri}`\r\n    //                 setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\r\n\r\n    //                 // console.log(`data:image/jpeg;base64,${imageUri}`);\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.error(\"Error capturing view:\", error);\r\n    //         }\r\n    //     };\r\n\r\n    //     captureImageAsync();\r\n\r\n    // }, [invoiceRef.current, invoiceData, modalVisible]);\r\n\r\n    useEffect(() => {\r\n        setCapturedImageUri(capturedImageUri);\r\n    }, [capturedImageUri])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const captureImage = async () => {\r\n\r\n\r\n\r\n\r\n        try {\r\n            // Adjust the scale to control the captured image resolution\r\n            const scale = 0.9; // Experiment with different scale values\r\n            const width = 2480 * scale;\r\n            const height = 3508 * scale;\r\n\r\n            const imageUri = await captureRef(invoiceRef, {\r\n                format: 'jpg',\r\n                quality: 1, // Adjust quality if needed\r\n                result: 'base64',\r\n                width: width,\r\n                height: height,\r\n            });\r\n\r\n            // generatedImageUri = `data:image/jpeg;base64,${imageUri}`\r\n            setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\r\n            await createPDF(`data:image/jpeg;base64,${imageUri}`);\r\n            return `data:image/jpeg;base64,${imageUri}`;\r\n        } catch (error) {\r\n            console.error(\"Error capturing view:\", error);\r\n        }\r\n    };\r\n\r\n    const createPDF = async () => {\r\n\r\n\r\n\r\n        const element = invoiceRef.current;\r\n        if (element) {\r\n            // Reduce the scale slightly for smaller file size\r\n            const scale = 1; // Fine-tune this value for balance\r\n\r\n            const canvas = await html2canvas(element, {\r\n                scale: scale,\r\n            });\r\n\r\n            // Experiment with JPEG quality for a balance between quality and file size\r\n            const imageData = canvas.toDataURL('image/jpeg', 0.9);\r\n\r\n            // A4 size dimensions in mm\r\n            const pdfWidth = 210;\r\n            const pdfHeight = 297;\r\n\r\n            const pdf = new jsPDF({\r\n                orientation: 'portrait',\r\n                unit: 'mm',\r\n                format: 'a4'\r\n            });\r\n\r\n            // Adjust PDF compression settings\r\n            const options = {\r\n                imageCompression: 'JPEG',\r\n                imageQuality: 1, // Fine-tune this value as well\r\n            };\r\n\r\n            const imgProps = pdf.getImageProperties(imageData);\r\n            const pdfWidthFit = pdfWidth;\r\n            const pdfHeightFit = (imgProps.height * pdfWidthFit) / imgProps.width;\r\n\r\n            pdf.addImage(imageData, 'JPEG', 0, 0, pdfWidthFit, pdfHeightFit, undefined, 'FAST', 0, options);\r\n\r\n            // Filename logic\r\n            selectedChatData.stepIndicator.value < 3 ?\r\n                pdf.save(`Proforma Invoice (${invoiceData.carData.carName} [${invoiceData.carData.referenceNumber}]) (A4 Paper Size).pdf`) :\r\n                pdf.save(`Invoice No. ${invoiceData.id}${invoiceNameExtension} (A4 Paper Size).pdf`);\r\n        } else {\r\n            console.error(\"No element to capture\");\r\n        }\r\n    };\r\n\r\n    const handleCaptureAndCreatePDF = async () => {\r\n\r\n        handleAdditionalNameTextChange(additionalNameRef.current.value)\r\n        handleAdditionalPriceTextChange(additionalPriceRef.current.value)\r\n\r\n        setIssuingDate(issuingDateRef.current.value);\r\n        setDueDate(dueDateRef.current.value);\r\n        setShippedFrom(shippedFromRef.current.value);\r\n        setShippedTo(shippedToRef.current.value);\r\n        setPlaceOfDelivery(placeOfDeliveryRef.current.value);\r\n        setCfs(cfsRef.current.value);\r\n        setConsigneeName(consigneeNameRef.current.value);\r\n        setConsigneeAddress(consigneeAddressRef.current.value);\r\n        setConsigneeEmail(consigneeEmailRef.current.value);\r\n        setConsigneeContact(consigneeContactRef.current.value);\r\n        setConsigneeFax(consigneeFaxRef.current.value);\r\n        setNotifyPartyName(notifyPartyNameRef.current.value);\r\n        setNotifyPartyAddress(notifyPartyAddressRef.current.value);\r\n        setNotifyPartyEmail(notifyPartyEmailRef.current.value);\r\n        setNotifyPartyContact(notifyPartyContactRef.current.value);\r\n        setNotifyPartyFax(notifyPartyFaxRef.current.value);\r\n        setCarName(carNameRef.current.value);\r\n        setSpecifications(specificationsRef.current.value);\r\n        setItemNote(itemNoteRef.current.value);\r\n        setFobText(fobTextRef.current.value);\r\n        setFobPrice(fobPriceRef.current.value);\r\n        setFreightText(freightTextRef.current.value);\r\n        setFreightPrice(freightPriceRef.current.value);\r\n        setInspectionText(inspectionTextRef.current.value);\r\n        setInspectionPrice(inspectionPriceRef.current.value);\r\n        setTotalPrice(totalPriceRef.current.value);\r\n        setAdditionalName(additionalNameLocal);\r\n        setAdditionalPrice(additionalPriceLocal);\r\n        setDividedBy(dividedByRef.current.value);\r\n\r\n\r\n        if (Number(divideInvoice) > 1) {\r\n            for (let i = 0; i < Number(divideInvoice); i++) {\r\n                // Update the invoice number for each iteration based on 'i'\r\n                setInvoiceNumber(`${invoiceData.id}-${i + 1}`);\r\n                invoiceNameExtension = `-${i + 1}`;\r\n                // Await the capturing of the image\r\n                await captureImage();  // Assuming this is defined elsewhere and works asynchronously\r\n            }\r\n        } else if (Number(divideInvoice) === 1) {\r\n            // If dividedBy is exactly 1, you've already set the invoice number above\r\n            setInvoiceNumber(`${invoiceData.id}`);\r\n            invoiceNameExtension = '';\r\n            await captureImage();  // Just capture the image once\r\n        }\r\n\r\n        // if (capturedImageUri) {\r\n        // await createPDF(capturedImageUri);\r\n        // }\r\n\r\n    };\r\n\r\n\r\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\r\n        const dueDateString = invoiceData.bankInformations.dueDate;\r\n        const issuingDateObject = new Date(issuingDateString);\r\n        const dueDateObject = new Date(dueDateString);\r\n\r\n\r\n        const options = {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        };\r\n\r\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\r\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\r\n\r\n    }\r\n\r\n    const originalWidth = 794;\r\n    const originalHeight = 1123;\r\n\r\n\r\n    const originalSmallWidth = 794;\r\n    const originalSmallHeight = 1123;\r\n\r\n    const newWidth = 2480;\r\n    const newHeight = 3508;\r\n\r\n    const smallWidth = 377;\r\n    const smallHeight = 541;\r\n\r\n    const smallWidthScaleFactor = smallWidth / originalSmallWidth;\r\n    const smallHeightScaleFactor = smallHeight / originalSmallHeight;\r\n\r\n    const widthScaleFactor = newWidth / originalWidth;\r\n    const heightScaleFactor = newHeight / originalHeight;\r\n\r\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\r\n        const dueDateString = invoiceData.bankInformations.dueDate;\r\n        const issuingDateObject = new Date(issuingDateString);\r\n        const dueDateObject = new Date(dueDateString);\r\n\r\n\r\n        const options = {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        };\r\n\r\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\r\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\r\n\r\n    }\r\n\r\n    // additionalNameRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName.join('\\n') : '';\r\n    // additionalPriceRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice.join('\\n') : '';\r\n\r\n    const handleAdditionalPriceTextChange = (text) => {\r\n        // Process and filter each line\r\n        const filteredLines = text.split('\\n').map(line => {\r\n            let filteredLine = line.replace(/[^0-9.]/g, '');\r\n            const parts = filteredLine.split('.');\r\n            if (parts.length > 2) {\r\n                filteredLine = parts[0] + '.' + parts[1];\r\n            }\r\n            return filteredLine;\r\n        });\r\n\r\n        // Update the ref and the state\r\n        additionalPriceRef.current.value = filteredLines.join('\\n');\r\n        // setAdditionalPriceArray(filteredLines);\r\n        // globalAdditionalPriceArray = filteredLines;\r\n        additionalPriceLocal = filteredLines;\r\n\r\n    };\r\n\r\n    const handleAdditionalNameTextChange = (text) => {\r\n        // Update the ref\r\n        additionalNameRef.current.value = text;\r\n\r\n        // Split the text into lines and update the state\r\n        const lines = text.split('\\n');\r\n        // setAdditionalNameArray(lines);\r\n        additionalNameLocal = lines;\r\n    };\r\n\r\n    const handleFreightTextChange = (value) => {\r\n        // Remove any non-numeric characters and leading zeros\r\n        const numericValue = value.replace(/[^0-9]/g, '');\r\n        // Update your variable only if the result is not an empty string and not 0\r\n        freightPriceRef.current.value = numericValue;\r\n\r\n    }\r\n\r\n    const handleInspectionTextChange = (value) => {\r\n        // Remove any non-numeric characters and leading zeros\r\n        const numericValue = value.replace(/[^0-9]/g, '');\r\n        // Update your variable only if the result is not an empty string and not 0\r\n        inspectionPriceRef.current.value = numericValue;\r\n\r\n    }\r\n\r\n\r\n    const handleFobTextChange = (value) => {\r\n        // Remove any non-numeric characters and leading zeros\r\n        const numericValue = value.replace(/[^0-9]/g, '');\r\n        // Update your variable only if the result is not an empty string and not 0\r\n        fobPriceRef.current.value = numericValue;\r\n\r\n    }\r\n\r\n    const handleDividedByTextChange = (value) => {\r\n        // Remove any non-numeric characters and leading zeros\r\n        const numericValue = value.replace(/[^0-9]/g, '').replace(/^0+/g, '');\r\n        // Update your variable only if the result is not an empty string and not 0\r\n        dividedByRef.current.value = numericValue;\r\n        divideInvoice = numericValue;\r\n\r\n    }\r\n\r\n\r\n    const FormContent = () => {\r\n\r\n\r\n        return (\r\n\r\n            <View\r\n                style={{\r\n                    width: screenWidth < mobileViewBreakpoint ? '98%' : 500\r\n                }}\r\n            >\r\n                <View\r\n                    style={{\r\n                        flex: 1\r\n                    }}\r\n                >\r\n\r\n                    <Text style={{ fontSize: 16, fontWeight: 'bold', padding: 10, alignSelf: 'center', }}>Generate Custom Invoice</Text>\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text key={invoiceViewKey} style={{ margin: 2, fontWeight: 'bold', }}>Issuing Date:</Text>\r\n\r\n                    <TextInput\r\n                        ref={issuingDateRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? formattedIssuingDate : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Issuing Date'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, fontWeight: 'bold', }}>Due Date:</Text>\r\n\r\n                    <TextInput\r\n                        ref={dueDateRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? formattedDueDate : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Due Date'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Shipped from:</Text>\r\n\r\n                    <TextInput\r\n                        ref={shippedFromRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${invoiceData.departurePort}, ${invoiceData.departureCountry}` : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Shipped from'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Shipped to:</Text>\r\n\r\n                    <TextInput\r\n                        ref={shippedToRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${invoiceData.discharge.port}, ${invoiceData.discharge.country}` : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Shipped to'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Place of Delivery:</Text>\r\n\r\n                    <TextInput\r\n                        ref={placeOfDeliveryRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length && invoiceData.placeOfDelivery > 0 ? invoiceData.placeOfDelivery : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Place of Delivery'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>CFS:</Text>\r\n\r\n                    <TextInput\r\n                        ref={cfsRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length && invoiceData.cfs > 0 ? invoiceData.cfs : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='CFS'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text style={{ fontSize: 16, fontWeight: 'bold', alignSelf: 'center', color: '#0A78BE', }}>Consignee</Text>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Name:</Text>\r\n\r\n                    <TextInput\r\n                        ref={consigneeNameRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.name : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Name'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Address:</Text>\r\n\r\n                    <TextInput\r\n                        ref={consigneeAddressRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.address : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Address'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Email:</Text>\r\n\r\n                    <TextInput\r\n                        ref={consigneeEmailRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.email : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Email'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Contact Number:</Text>\r\n\r\n                    <TextInput\r\n                        ref={consigneeContactRef}\r\n                        multiline\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.contactNumber : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Contact Number'\r\n                        style={{ height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Fax:</Text>\r\n\r\n                    <TextInput\r\n                        ref={consigneeFaxRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.fax : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Fax'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text style={{ fontSize: 16, fontWeight: 'bold', alignSelf: 'center', color: '#FF0000', }}>Notify Party</Text>\r\n\r\n                    <Checkbox\r\n                        isChecked={isChecked}\r\n                        onChange={value => {\r\n                            setIsChecked(value)\r\n                            globalInvoiceVariable.consignee.sameAsBuyer = value;\r\n                        }}\r\n                        style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                        size=\"sm\"\r\n                        _text={{ fontWeight: 700 }}\r\n                    >\r\n                        Same as consignee\r\n                    </Checkbox>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Name:</Text>\r\n\r\n                    <TextInput\r\n                        ref={notifyPartyNameRef}\r\n                        disabled={isChecked}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.name : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Name'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Address:</Text>\r\n\r\n                    <TextInput\r\n                        ref={notifyPartyAddressRef}\r\n                        disabled={isChecked}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.address : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Address'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Email:</Text>\r\n\r\n                    <TextInput\r\n                        ref={notifyPartyEmailRef}\r\n                        disabled={isChecked}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.email : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Email'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Contact Number:</Text>\r\n\r\n                    <TextInput\r\n                        ref={notifyPartyContactRef}\r\n                        disabled={isChecked}\r\n                        multiline\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.contactNumber : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Contact Number'\r\n                        style={{ height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Fax:</Text>\r\n\r\n                    <TextInput\r\n                        ref={notifyPartyFaxRef}\r\n                        disabled={isChecked}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.fax : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Fax'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Car name:</Text>\r\n\r\n                    <TextInput\r\n                        ref={carNameRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.carData.carName : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Date'\r\n                        style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Specifications:</Text>\r\n\r\n                    <TextInput\r\n                        ref={specificationsRef}\r\n                        multiline\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${invoiceData.carData.chassisNumber}\\n${invoiceData.carData.exteriorColor}\\n${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n${invoiceData.carData.fuel}\\n${invoiceData.carData.transmission}` : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Specifications'\r\n                        style={{ height: 120, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Item note:</Text>\r\n\r\n                    <TextInput\r\n                        ref={itemNoteRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}` : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Item note'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>FOB:</Text>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                        }}\r\n                    >\r\n\r\n                        <TextInput\r\n                            ref={fobTextRef}\r\n                            defaultValue={'FOB'}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Fob'\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none' }}\r\n                            onChangeText={(text) => {\r\n                                const filteredText = text.replace(/[^0-9]/g, ''); // Remove non-numeric characters\r\n\r\n                                fobTextRef.current.value = filteredText;\r\n\r\n                            }}\r\n                        />\r\n\r\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>$</Text>\r\n\r\n                        <TextInput\r\n                            ref={fobPriceRef}\r\n                            onChangeText={handleFobTextChange}\r\n                            defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? Math.round(Number(invoiceData.paymentDetails.fobPrice)) : ''}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='FOB Price'\r\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n\r\n                    </View>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Freight:</Text>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                        }}\r\n                    >\r\n                        <TextInput\r\n                            ref={freightTextRef}\r\n                            defaultValue={'Freight'}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Freight'\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n\r\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>$</Text>\r\n\r\n                        <TextInput\r\n                            ref={freightPriceRef}\r\n                            onChangeText={handleFreightTextChange}\r\n                            defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? Math.round(Number(invoiceData.paymentDetails.freightPrice)) : ''}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Freight Price'\r\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n\r\n                    </View>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Inspection:</Text>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                        }}\r\n                    >\r\n                        <TextInput\r\n                            ref={inspectionTextRef}\r\n                            onChangeText={handleInspectionTextChange}\r\n                            defaultValue={`Inspection ${invoiceData && Object.keys(invoiceData).length > 0 ? `[${invoiceData.paymentDetails.inspectionName}]` : ''}`}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Inspection'\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n\r\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>$</Text>\r\n\r\n                        <TextInput\r\n                            ref={inspectionPriceRef}\r\n                            defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.paymentDetails.inspectionPrice : ''}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Inspection Price'\r\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n                    </View>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Additional:</Text>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                        }}\r\n                    >\r\n                        <TextInput ref={additionalNameRef} onChangeText={handleAdditionalNameTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                            defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName.join('\\n') : ''}\r\n                            style={{ flex: 1, height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                        <TextInput ref={additionalPriceRef} onChangeText={handleAdditionalPriceTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Price'\r\n                            defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice.join('\\n') : ''}\r\n                            style={{ flex: 1, height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                    </View>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Total price:</Text>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                        }}\r\n                    >\r\n\r\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>$</Text>\r\n\r\n                        <TextInput\r\n                            ref={totalPriceRef}\r\n                            defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${(invoiceData.paymentDetails.totalAmount).replace(/,/g, '')}` : ''}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Total price'\r\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n                    </View>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Divided by:</Text>\r\n\r\n                    <TextInput\r\n                        ref={dividedByRef}\r\n                        defaultValue={'1'}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Total price'\r\n                        onChangeText={handleDividedByTextChange}\r\n                        keyboardType='numeric' // This prop prompts the user with a numeric keypad\r\n                        style={{\r\n                            flex: 1,\r\n                            height: 25,\r\n                            margin: 2,\r\n                            padding: 1,\r\n                            borderRadius: 2,\r\n                            borderWidth: 1,\r\n                            borderColor: '#D9D9D9',\r\n                            outlineStyle: 'none',\r\n                        }}\r\n                    />\r\n\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <Modal\r\n                isOpen={customInvoiceVisible}\r\n                onClose={() => {\r\n                    handleModalClose();\r\n                }}\r\n                size={'lg'}\r\n                useRNModal\r\n            >\r\n\r\n                <Modal.Content>\r\n\r\n                    {customInvoiceVisible &&\r\n                        <ScrollView\r\n                            style={{ maxHeight: 600, maxWidth: screenWidth < mobileViewBreakpoint ? '100%' : 520, }}\r\n                        >\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                right: 0,\r\n                                left: 0,\r\n                                backgroundColor: 'white',\r\n                                zIndex: 999,\r\n                                flex: 1,\r\n                                alignItems: 'center', // Center horizontally\r\n                            }}>\r\n                                <FormContent />\r\n                                <View style={{ flexDirection: 'row', margin: 5, width: '100%', justifyContent: 'center', }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onPress={() => {\r\n                                            handleCaptureAndCreatePDF()\r\n                                        }}\r\n                                        style={{ justifyContent: 'center', flexDirection: 'row', padding: 5, borderRadius: 5, marginHorizontal: 10, backgroundColor: '#16A34A', width: '100%' }}>\r\n                                        <MaterialCommunityIcons size={20} name='download' color='white' />\r\n                                        <Text style={{ color: 'white', }}>Download as PDF</Text>\r\n                                    </Pressable>\r\n                                </View>\r\n                            </View>\r\n\r\n                            {/* Main content with invoice details */}\r\n                            {\r\n\r\n                                <View\r\n                                    ref={invoiceRef}\r\n                                    key={invoiceViewKey}\r\n                                    style={{\r\n                                        width: newWidth,\r\n                                        height: newHeight,\r\n                                        backgroundColor: 'white',\r\n                                        zIndex: 1\r\n                                    }}>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        <NativeImage\r\n                                            source={require('../../assets/RMJ logo for invoice.png')}\r\n                                            style={{\r\n                                                width: 95 * widthScaleFactor,\r\n                                                height: 85 * heightScaleFactor,\r\n                                                resizeMode: 'stretch',\r\n                                            }}\r\n                                        />\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * heightScaleFactor }}>\r\n                                        {/* Title */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`PROFORMA INVOICE`}</Text> :\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`INVOICE`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        {/* QR CODE */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <View\r\n                                                ref={qrCodeRef}\r\n                                            >\r\n                                                <QRCode\r\n                                                    value={invoiceData.cryptoNumber}\r\n                                                    size={80 * widthScaleFactor}\r\n                                                    color=\"black\"\r\n                                                    backgroundColor=\"white\"\r\n                                                />\r\n                                            </View>\r\n\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 34 * heightScaleFactor }}>\r\n                                        {/* Invoice Number */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Invoice No. RMJ-${invoiceNumber}`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 34 * heightScaleFactor, }}>\r\n                                            {/* Issuing Date */}\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${issuingDate}`}</Text>\r\n                                            </View>\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#F00A0A', }}>{`Valid Until: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${dueDate}`}</Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 49 * heightScaleFactor, flexDirection: 'row' }}>\r\n                                            {/* Issuing Date */}\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                            <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${issuingDate}`}</Text>\r\n                                        </View>\r\n                                    }\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 40 * widthScaleFactor,\r\n                                        top: 134 * heightScaleFactor,\r\n                                        width: 280 * widthScaleFactor,\r\n                                    }}>\r\n                                        {/* Shipper */}\r\n                                        <Text style={{\r\n                                            fontWeight: 750,\r\n                                            fontSize: 16 * widthScaleFactor,\r\n                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                            width: 'fit-content', // Make the underline cover the text width\r\n                                            marginBottom: 5, // Add some space between text and underline\r\n                                        }}>\r\n                                            {`Shipper`}\r\n                                        </Text>\r\n                                        <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: +81565850606`}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped From:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{shippedFrom}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped To:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{shippedTo}</Text>\r\n                                        {placeOfDelivery !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Place of Delivery:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{placeOfDelivery}</Text>\r\n                                            </>\r\n                                            : null}\r\n                                        {cfs !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`CFS:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{cfs}</Text>\r\n                                            </>\r\n                                            : null}\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', width: 715 * widthScaleFactor, }}>\r\n\r\n                                            <View style={{\r\n                                                flex: 1, width: 280 * widthScaleFactor,\r\n                                            }}>\r\n                                                {/* Buyer Information */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#0A78BE',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#0A78BE',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n\r\n                                                }}>\r\n                                                    {`Buyer Information`}\r\n                                                </Text>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{consigneeName}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${consigneeAddress}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${consigneeEmail}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${consigneeContact}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${consigneeFax == '' ? 'N/A' : consigneeFax}`}</Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, paddingLeft: 20 * widthScaleFactor, width: 280 * widthScaleFactor, }}>\r\n                                                {/* Notify Party */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#FF0000',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#FF0000',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n                                                }}>\r\n                                                    {`Notify Party`}\r\n                                                </Text>\r\n                                                {isChecked == true ? (\r\n                                                    <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\r\n                                                    (<>\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${notifyPartyName}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${notifyPartyAddress}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${notifyPartyEmail}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${notifyPartyContact}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${notifyPartyFax == '' ? 'N/A' : notifyPartyFax}`}</Text>\r\n                                                    </>)}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n\r\n                                    </View>\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#FF5C00', height: 194 * heightScaleFactor, }}>\r\n                                            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                <Entypo size={50 * widthScaleFactor} name='warning' color={'#FF0000'} />\r\n                                                <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#FF0000', marginLeft: 20 * widthScaleFactor, }}>{`Bank Information will be provided after placing an order.`}</Text>\r\n                                            </View>\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#1ABA3D', }}>\r\n\r\n                                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * widthScaleFactor, marginBottom: 5 * heightScaleFactor, }}>\r\n                                                <View style={{ flex: 1, marginRight: 50 * widthScaleFactor, }}>\r\n\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Bank Account`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Bank Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Branch Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`SWIFTCODE: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Address: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Name of Account Holder: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Account Number: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View style={{ flex: 1 }}>\r\n\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Payment Terms`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Terms: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <View style={{ paddingTop: 30 * heightScaleFactor, }}>\r\n\r\n                                                        <Text style={{\r\n                                                            fontWeight: 750,\r\n                                                            fontSize: 14 * widthScaleFactor,\r\n                                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                            width: 'fit-content', // Make the underline cover the text width\r\n                                                            marginBottom: 2, // Add some space between text and underline\r\n                                                            color: '#F00A0A',\r\n                                                            borderBottomColor: '#F00A0A',\r\n                                                        }}>\r\n                                                            {`Payment Due`}\r\n                                                        </Text>\r\n\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#F00A0A', lineHeight: 14 * widthScaleFactor }}>{`Due Date: `}\r\n                                                            <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, color: 'black', lineHeight: 14 * widthScaleFactor }}>{`${dueDate}`}</Text>\r\n                                                        </Text>\r\n\r\n                                                    </View>\r\n\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                        </View>}\r\n\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 38 * widthScaleFactor,\r\n                                        top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * heightScaleFactor : 537 * heightScaleFactor,\r\n                                        width: 718 * widthScaleFactor,\r\n                                        borderWidth: 1 * widthScaleFactor,\r\n                                        borderColor: '#C2E2F4',\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Description`}\r\n                                                </Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Notes`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Quantity`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Amount`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                        {(fobText !== '' && fobPrice > 0) &&\r\n                                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 5,\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {`${fobText}`}\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 2,\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {fobPrice > 0 ? `$${Math.round(Number(fobPrice)).toLocaleString('en-US')}` : ''}\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                            </View>\r\n                                        }\r\n\r\n                                        {(freightText !== '' && freightPrice > 0) &&\r\n                                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 5,\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {`${freightText}`}\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 2,\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {freightPrice > 0 ? `$${Math.round(Number(freightPrice)).toLocaleString('en-US')}` : ''}\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                            </View>\r\n                                        }\r\n\r\n\r\n                                        {(inspectionText !== '' && inspectionPrice > 0) &&\r\n                                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 5,\r\n                                                    flexDirection: 'row',\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {inspectionText}\r\n                                                    </Text>\r\n\r\n\r\n                                                </View>\r\n\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 2,\r\n                                                }}>\r\n\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {inspectionPrice > 0 ? `$${Number(inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                    </Text>\r\n\r\n\r\n                                                </View>\r\n\r\n\r\n                                            </View>\r\n                                        }\r\n                                        {(additionalName && additionalName.length > 0) &&\r\n                                            (additionalPrice && additionalPrice.length > 0) &&\r\n                                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 5,\r\n                                                    flexDirection: 'row',\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {additionalName && additionalName.length > 0 ? `${additionalName.join(' + ')}` : ' '}\r\n                                                    </Text>\r\n\r\n\r\n                                                </View>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 2,\r\n                                                }}>\r\n\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {additionalPrice && additionalPrice.length > 0\r\n                                                            ? additionalPrice.map(price =>\r\n                                                                !isNaN(parseFloat(price)) ? // Check if the price is a number\r\n                                                                    `$${parseFloat(price).toLocaleString('en-US', {\r\n                                                                        style: 'currency',\r\n                                                                        currency: 'USD',\r\n                                                                        minimumFractionDigits: 0,\r\n                                                                        maximumFractionDigits: 0\r\n                                                                    }).slice(1)}` : ''\r\n                                                            ).join(' + ')\r\n                                                            : ' '}\r\n\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                            </View>\r\n                                        }\r\n\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                paddingVertical: 2 * heightScaleFactor,\r\n\r\n                                            }}>\r\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                        {\"Used Vehicle\\n\"}\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${carName}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${specifications}\\n`}\r\n                                                        </Text>\r\n                                                    </Text>\r\n\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n\r\n                                                <Text style={{\r\n                                                    fontWeight: 400,\r\n                                                    fontSize: 12 * widthScaleFactor,\r\n                                                    lineHeight: 14 * widthScaleFactor,\r\n                                                    marginBottom: 3 * heightScaleFactor,\r\n                                                    alignSelf: 'center',\r\n                                                }}>\r\n                                                    {`${itemNote}`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 1,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n                                                {carName !== '' ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                        {'1'}\r\n                                                    </Text>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                justifyContent: 'center',\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\r\n                                                    <>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            color: '#008AC6',\r\n                                                            marginRight: 10 * widthScaleFactor,\r\n                                                            top: 51 * heightScaleFactor,\r\n                                                            left: 50 * widthScaleFactor,\r\n                                                            position: 'absolute',\r\n                                                        }}>\r\n                                                            {\"Total\"}\r\n                                                            <Text style={{\r\n                                                                fontWeight: 700,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                alignSelf: 'center',\r\n                                                                color: '#00720B',\r\n                                                                marginLeft: 5 * widthScaleFactor,\r\n                                                            }}>\r\n                                                                {`$${(Number(totalPrice) / Number(dividedBy)).toLocaleString('en-US')}`}\r\n                                                            </Text>\r\n                                                        </Text>\r\n\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 825 * heightScaleFactor, width: 350 * widthScaleFactor, }}>\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Payment Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'No warranty service is provided on used vehicles.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Conditions for order cancellation:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Intermediary Banking Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Swift code: SMBCUS33'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Address: 277 Park Avenue'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'City: New York, NY'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Postal Code: 10172'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Country: United States'}\r\n                                        </Text>\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ? null :\r\n                                        <View style={{ position: 'absolute', right: 39 * widthScaleFactor, top: 835 * heightScaleFactor, width: 300 * widthScaleFactor, }}>\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 80 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n                                                <NativeImage\r\n                                                    source={require('../../assets/RMJ Invoice Signature with Hanko.png')}\r\n                                                    style={{\r\n                                                        width: 276 * widthScaleFactor,\r\n                                                        height: 81 * heightScaleFactor,\r\n                                                        resizeMode: 'contain',\r\n                                                        alignSelf: 'center',\r\n                                                        marginBottom: 0, // Minimize margin to keep the line close\r\n                                                    }}\r\n                                                />\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Real Motor Japan'}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 5 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Your Signature'}\r\n                                                </Text>\r\n                                            </View>\r\n                                        </View>}\r\n\r\n\r\n                                </View>\r\n                            }\r\n\r\n\r\n                        </ScrollView>\r\n\r\n                    }\r\n                </Modal.Content>\r\n\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\nconst PreviewInvoice = () => {\r\n\r\n    // npm install html2canvas jspdf\r\n    // import jsPDF from 'jspdf';\r\n    // import html2canvas from 'html2canvas';\r\n    const dispatch = useDispatch();\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const previewInvoiceVisible = useSelector((state) => state.previewInvoiceVisible);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [isPreviewHovered, setIsPreviewHovered] = useState(false);\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const invoiceRef = useRef(null);\r\n    const qrCodeRef = useRef(null);\r\n    const [invoiceImageUri, setInvoiceImageUri] = useState('');\r\n    const hoverPreviewIn = () => setIsPreviewHovered(true);\r\n    const hoverPreviewOut = () => setIsPreviewHovered(false);\r\n    const [firstCaptureUri, setFirstCaptureUri] = useState('');\r\n    const [capturedImageUri, setCapturedImageUri] = useState('');\r\n    const [vehicleImageUri, setVehicleImageUri] = useState(globalImageUrl);\r\n    const [featuresTrueCount, setFeaturesTrueCount] = useState(0);\r\n    const [rerenderState, setRerenderState] = useState(0);\r\n    const [imagePreviewKey, setImagePreviewKey] = useState(0);\r\n    const handlePreviewInvoiceModalOpen = () => {\r\n        dispatch(setPreviewInvoiceVisible(true));\r\n    };\r\n\r\n    const handlePreviewInvoiceModalClose = () => {\r\n        dispatch(setPreviewInvoiceVisible(false));\r\n        setCapturedImageUri('');\r\n    }\r\n\r\n    function countTrueValuesInCarData(invoiceData) {\r\n        let count = 0;\r\n\r\n        // Check if carData exists in invoiceData\r\n        if (invoiceData.carData) {\r\n            // List of fields to check within carData\r\n            const fields = ['interior', 'exterior', 'safetySystem', 'comfort', 'sellingPoints'];\r\n\r\n            fields.forEach(field => {\r\n                if (invoiceData.carData[field]) {\r\n                    // Count true values in each field of carData\r\n                    count += Object.values(invoiceData.carData[field]).filter(value => value === true).length;\r\n                }\r\n            });\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (previewInvoiceVisible) {\r\n            setRerenderState(rerenderState + 1);\r\n        }\r\n    }, [previewInvoiceVisible])\r\n\r\n\r\n    useEffect(() => {\r\n        let generatedImageUri = '';\r\n        const captureImageAsync = async () => {\r\n            try {\r\n                if (invoiceRef.current) {\r\n                    // Adjust the scale to control the captured image resolution\r\n                    const scale = 0.85; // Experiment with different scale values\r\n                    const width = 2480 * scale;\r\n                    const height = 3508 * scale;\r\n\r\n\r\n                    const imageUri = await captureRef(invoiceRef, {\r\n                        format: 'jpg',\r\n                        quality: 1, // Adjust quality if needed\r\n                        result: 'base64',\r\n                        width: width,\r\n                        height: height,\r\n                    });\r\n\r\n                    const trueCount = countTrueValuesInCarData(invoiceData);\r\n                    setFeaturesTrueCount(trueCount);\r\n                    generatedImageUri = `data:image/jpeg;base64,${imageUri}`\r\n                    setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\r\n\r\n                    // console.log(`data:image/jpeg;base64,${imageUri}`);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error capturing view:\", error);\r\n            }\r\n        };\r\n\r\n\r\n        captureImageAsync();\r\n\r\n\r\n    }, [invoiceRef.current, invoiceData]);\r\n\r\n    useEffect(() => {\r\n        setCapturedImageUri(capturedImageUri);\r\n    }, [capturedImageUri])\r\n\r\n    const captureImage = async () => {\r\n        try {\r\n            // Adjust the scale to control the captured image resolution\r\n            const scale = 0.9; // Experiment with different scale values\r\n            const width = 2480 * scale;\r\n            const height = 3508 * scale;\r\n\r\n            const imageUri = await captureRef(invoiceRef, {\r\n                format: 'jpg',\r\n                quality: 1, // Adjust quality if needed\r\n                result: 'base64',\r\n                width: width,\r\n                height: height,\r\n            });\r\n            return `data:image/jpeg;base64,${imageUri}`;\r\n        } catch (error) {\r\n            console.error(\"Error capturing view:\", error);\r\n        }\r\n    };\r\n\r\n    const createPDF = async () => {\r\n        const element = invoiceRef.current;\r\n        if (element) {\r\n            // Reduce the scale slightly for smaller file size\r\n            const scale = 1; // Fine-tune this value for balance\r\n\r\n            const canvas = await html2canvas(element, {\r\n                scale: scale,\r\n            });\r\n\r\n            // Experiment with JPEG quality for a balance between quality and file size\r\n            const imageData = canvas.toDataURL('image/jpeg', 0.9);\r\n\r\n            // A4 size dimensions in mm\r\n            const pdfWidth = 210;\r\n            const pdfHeight = 297;\r\n\r\n            const pdf = new jsPDF({\r\n                orientation: 'portrait',\r\n                unit: 'mm',\r\n                format: 'a4'\r\n            });\r\n\r\n            // Adjust PDF compression settings\r\n            const options = {\r\n                imageCompression: 'JPEG',\r\n                imageQuality: 1, // Fine-tune this value as well\r\n            };\r\n\r\n            const imgProps = pdf.getImageProperties(imageData);\r\n            const pdfWidthFit = pdfWidth;\r\n            const pdfHeightFit = (imgProps.height * pdfWidthFit) / imgProps.width;\r\n\r\n            pdf.addImage(imageData, 'JPEG', 0, 0, pdfWidthFit, pdfHeightFit, undefined, 'FAST', 0, options);\r\n\r\n            // Filename logic\r\n            selectedChatData.stepIndicator.value < 3 ?\r\n                pdf.save(`Proforma Invoice (${invoiceData.carData.carName} [${invoiceData.carData.referenceNumber}]) (A4 Paper Size).pdf`) :\r\n                pdf.save(`Invoice No. ${invoiceData.id} (A4 Paper Size).pdf`);\r\n        } else {\r\n            console.error(\"No element to capture\");\r\n        }\r\n    };\r\n\r\n\r\n    const handleCaptureAndCreatePDF = async () => {\r\n        const capturedImageUri = await captureImage();\r\n        if (capturedImageUri) {\r\n            await createPDF(capturedImageUri);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\r\n        const dueDateString = invoiceData.bankInformations.dueDate;\r\n        const issuingDateObject = new Date(issuingDateString);\r\n        const dueDateObject = new Date(dueDateString);\r\n\r\n\r\n        const options = {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        };\r\n\r\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\r\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\r\n\r\n    }\r\n\r\n    const originalWidth = 794;\r\n    const originalHeight = 1123;\r\n\r\n\r\n    const originalSmallWidth = 794;\r\n    const originalSmallHeight = 1123;\r\n\r\n    const newWidth = 2480;\r\n    const newHeight = 3508;\r\n\r\n    const smallWidth = 377;\r\n    const smallHeight = 541;\r\n\r\n    const smallWidthScaleFactor = smallWidth / originalSmallWidth;\r\n    const smallHeightScaleFactor = smallHeight / originalSmallHeight;\r\n\r\n    const widthScaleFactor = newWidth / originalWidth;\r\n    const heightScaleFactor = newHeight / originalHeight;\r\n\r\n    const openImage = () => {\r\n        if (Platform.OS === 'web') {\r\n            const imageWindow = window.open();\r\n            imageWindow.document.write(`\r\n                <style>\r\n                    body {\r\n                        margin: 0;\r\n                        display: flex;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                        height: 100vh;\r\n                        overflow: hidden;\r\n                    }\r\n                    img {\r\n                        width: 595px;\r\n                        height: 842px;\r\n                        object-fit: contain;\r\n                        transition: transform 0.25s ease;\r\n                        cursor: zoom-in; /* Set cursor to magnifying glass */\r\n                    }\r\n                    .zoomed {\r\n                        transform: scale(3);\r\n                        transform-origin: center;\r\n                        cursor: zoom-out; /* Change cursor to indicate zooming out */\r\n                    }\r\n                </style>\r\n                <img id=\"zoomableImage\" src=\"${capturedImageUri}\" alt=\"Base64 Image\" draggable=\"false\" />\r\n                <script>\r\n                    const image = document.getElementById('zoomableImage');\r\n    \r\n                    image.addEventListener('mousedown', function(e) {\r\n                        const rect = this.getBoundingClientRect();\r\n                        const x = e.clientX - rect.left;\r\n                        const y = e.clientY - rect.top;\r\n    \r\n                        // Set the transform origin to the mouse position\r\n                        this.style.transformOrigin = \\`\\${x}px \\${y}px\\`;\r\n                        this.classList.add('zoomed');\r\n                    });\r\n    \r\n                    document.addEventListener('mouseup', function() {\r\n                        image.classList.remove('zoomed');\r\n                    });\r\n                </script>\r\n            `);\r\n        } else {\r\n            console.log('This feature is only available in a web environment');\r\n        }\r\n    };\r\n\r\n\r\n    const s2ab = (s) => {\r\n        const buf = new ArrayBuffer(s.length);\r\n        const view = new Uint8Array(buf);\r\n        for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\r\n        return buf;\r\n    };\r\n\r\n    const modifyAndDownloadExcel = (file, dataToInsert) => {\r\n        // Read the file using SheetJS\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            const workbook = XLSX.read(e.target.result, { type: 'binary' });\r\n\r\n            // Assuming the data is for the first sheet\r\n            const sheetName = workbook.SheetNames[0];\r\n            const sheet = workbook.Sheets[sheetName];\r\n\r\n            // Insert your data into the sheet\r\n            // Example: Inserting data starting from the second row, in columns A, B, and C\r\n            dataToInsert.forEach((row, index) => {\r\n                const rowIndex = index + 2; // Adjust based on where you want to start inserting data\r\n                ['A', 'B', 'C'].forEach((col, colIndex) => {\r\n                    const cellRef = `${col}${rowIndex}`;\r\n                    XLSX.utils.sheet_add_aoa(sheet, [[row[colIndex]]], { origin: cellRef });\r\n                });\r\n            });\r\n\r\n            // Write the modified workbook to a binary string\r\n            const wbOut = XLSX.write(workbook, { bookType: 'xlsx', type: 'binary' });\r\n\r\n            // Convert the binary string to a Blob and trigger a download\r\n            const blob = new Blob([s2ab(wbOut)], { type: 'application/octet-stream' });\r\n            saveAs(blob, `Invoice No.${selectedChatData.invoiceNumber} Excel.xlsx`);\r\n        };\r\n        reader.readAsBinaryString(file);\r\n    };\r\n\r\n    const valueCurrency = 10;\r\n\r\n    const convertedCurrency = (baseValue) => {\r\n\r\n\r\n        if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange) {\r\n            return `$${Math.round(Number(baseValue)).toLocaleString('en-US', { useGrouping: true })}`\r\n        }\r\n\r\n        if (invoiceData.selectedCurrencyExchange == 'EURO') {\r\n\r\n            return `€${(Math.round(Number(baseValue) * Number(invoiceData.currency.usdToEur) + (valueCurrency * Number(invoiceData.currency.usdToEur)))).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'AUD') {\r\n            return `A$${(Math.round(Number(baseValue) * Number(invoiceData.currency.usdToAud) + (valueCurrency * Number(invoiceData.currency.usdToAud)))).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'GBP') {\r\n            return `£${(Math.round(Number(baseValue) * Number(invoiceData.currency.usdToGbp) + (valueCurrency * Number(invoiceData.currency.usdToGbp)))).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'CAD') {\r\n            return `C$${(Math.round(Number(baseValue) * Number(invoiceData.currency.usdToCad) + (valueCurrency * Number(invoiceData.currency.usdToCad)))).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n    }\r\n\r\n    const totalPriceCalculated = () => {\r\n\r\n        const totalAdditionalPrice = invoiceData.paymentDetails.additionalPrice.reduce((total, price) => {\r\n            const converted = convertedCurrency(Number(price)); // Convert each price using your currency conversion function\r\n            const numericPart = converted.replace(/[^0-9.]/g, ''); // Remove non-numeric characters, assuming decimal numbers\r\n            return total + parseFloat(numericPart); // Add the numeric value to the total\r\n        }, 0);\r\n\r\n        const totalEur = Number(invoiceData.paymentDetails.fobPrice) * Number(invoiceData.currency.usdToEur)\r\n            + (valueCurrency * Number(invoiceData.currency.usdToEur))\r\n            + Number(invoiceData.paymentDetails.freightPrice) * Number(invoiceData.currency.usdToEur)\r\n            + (valueCurrency * Number(invoiceData.currency.usdToEur))\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice) * Number(invoiceData.currency.usdToEur)\r\n                    + (valueCurrency * Number(invoiceData.currency.usdToEur)))\r\n                : 0)\r\n            + totalAdditionalPrice;\r\n\r\n        const totalAud = Number(invoiceData.paymentDetails.fobPrice) * Number(invoiceData.currency.usdToAud)\r\n            + (valueCurrency * Number(invoiceData.currency.usdToAud))\r\n            + Number(invoiceData.paymentDetails.freightPrice) * Number(invoiceData.currency.usdToAud)\r\n            + (valueCurrency * Number(invoiceData.currency.usdToAud))\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice) * Number(invoiceData.currency.usdToAud)\r\n                    + (valueCurrency * Number(invoiceData.currency.usdToAud)))\r\n                : 0)\r\n            + totalAdditionalPrice;\r\n\r\n        const totalGbp = Number(invoiceData.paymentDetails.fobPrice) * Number(invoiceData.currency.usdToGbp)\r\n            + (valueCurrency * Number(invoiceData.currency.usdToGbp))\r\n            + Number(invoiceData.paymentDetails.freightPrice) * Number(invoiceData.currency.usdToGbp)\r\n            + (valueCurrency * Number(invoiceData.currency.usdToGbp))\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice) * Number(invoiceData.currency.usdToGbp)\r\n                    + (valueCurrency * Number(invoiceData.currency.usdToGbp)))\r\n                : 0)\r\n            + totalAdditionalPrice;\r\n\r\n        const totalCad = Number(invoiceData.paymentDetails.fobPrice) * Number(invoiceData.currency.usdToCad)\r\n            + (valueCurrency * Number(invoiceData.currency.usdToCad))\r\n            + Number(invoiceData.paymentDetails.freightPrice) * Number(invoiceData.currency.usdToCad)\r\n            + (valueCurrency * Number(invoiceData.currency.usdToCad))\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice) * Number(invoiceData.currency.usdToCad)\r\n                    + (valueCurrency * Number(invoiceData.currency.usdToCad)))\r\n                : 0)\r\n            + totalAdditionalPrice;\r\n\r\n        if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange) {\r\n\r\n            return `$${invoiceData.paymentDetails.totalPrice}`\r\n        }\r\n\r\n        if (invoiceData.selectedCurrencyExchange == 'EURO') {\r\n            return `€${Math.round(totalEur).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'AUD') {\r\n            return `A$${Math.round(totalAud).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'GBP') {\r\n            return `£${Math.round(totalGbp).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'CAD') {\r\n            return `C$${Math.round(totalCad).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n    }\r\n\r\n    const PreviewInvoiceForMobile = () => {\r\n\r\n        return (\r\n            <View\r\n                style={{\r\n                    width: smallWidth,\r\n                    height: smallHeight,\r\n                    backgroundColor: 'white',\r\n                    zIndex: 1\r\n                }}>\r\n\r\n                <View\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        zIndex: 999,\r\n                    }}\r\n                />\r\n\r\n                <View style={{ position: 'absolute', left: 38 * smallWidthScaleFactor, top: 38 * smallHeightScaleFactor }}>\r\n                    <NativeImage\r\n                        source={require('../../assets/RMJ logo for invoice.png')}\r\n                        style={{\r\n                            width: 95 * smallWidthScaleFactor,\r\n                            height: 85 * smallHeightScaleFactor,\r\n                            resizeMode: 'stretch',\r\n                        }}\r\n                    />\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * smallHeightScaleFactor }}>\r\n                    {/* Title */}\r\n                    {selectedChatData.stepIndicator.value < 3 ?\r\n                        <Text style={{ fontWeight: 700, fontSize: 25 * smallWidthScaleFactor }}>{`PROFORMA INVOICE`}</Text> :\r\n                        <Text style={{ fontWeight: 700, fontSize: 25 * smallWidthScaleFactor }}>{`INVOICE`}</Text>\r\n                    }\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 38 * smallHeightScaleFactor }}>\r\n                    {/* QR CODE */}\r\n                    {selectedChatData.stepIndicator.value < 3 ?\r\n                        null :\r\n                        <QRCode\r\n                            value={invoiceData.cryptoNumber}\r\n                            size={80 * smallWidthScaleFactor}\r\n                            color=\"black\"\r\n                            backgroundColor=\"white\"\r\n                        />\r\n                    }\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', right: 121 * smallWidthScaleFactor, top: 34 * smallHeightScaleFactor }}>\r\n                    {/* Invoice Number */}\r\n                    {selectedChatData.stepIndicator.value < 3 ?\r\n                        null :\r\n                        <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Invoice No. RMJ-${invoiceData.id}`}</Text>\r\n                    }\r\n                </View>\r\n\r\n                {selectedChatData.stepIndicator.value < 3 ?\r\n                    <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 34 * smallHeightScaleFactor, }}>\r\n                        {/* Issuing Date */}\r\n                        <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                            <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                        </View>\r\n                        <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                            <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, color: '#F00A0A', }}>{`Valid Until: `}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                        </View>\r\n\r\n                    </View>\r\n                    :\r\n                    <View style={{ position: 'absolute', right: 121 * smallWidthScaleFactor, top: 49 * smallHeightScaleFactor, flexDirection: 'row' }}>\r\n                        {/* Issuing Date */}\r\n                        <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                        <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                    </View>\r\n                }\r\n\r\n                <View style={{\r\n                    position: 'absolute',\r\n                    left: 40 * smallWidthScaleFactor,\r\n                    top: 134 * smallHeightScaleFactor,\r\n                    width: 280 * smallWidthScaleFactor,\r\n                }}>\r\n                    {/* Shipper */}\r\n                    <Text style={{\r\n                        fontWeight: 750,\r\n                        fontSize: 16 * smallWidthScaleFactor,\r\n                        borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                        width: 'fit-content', // Make the underline cover the text width\r\n                        marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                    }}>\r\n                        {`Shipper`}\r\n                    </Text>\r\n                    <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: +81565850606`}</Text>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Shipped From:`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.departurePort}, ${invoiceData.departureCountry}`}</Text>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Shipped To:`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.discharge.port}, ${invoiceData.discharge.country}`}</Text>\r\n                    {invoiceData.placeOfDelivery && invoiceData.placeOfDelivery !== '' ?\r\n                        <>\r\n                            <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Place of Delivery:`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 12 * smallHeightScaleFactor }}>{`${invoiceData.placeOfDelivery}`}</Text>\r\n                        </>\r\n                        : null}\r\n                    {invoiceData.cfs && invoiceData.cfs !== '' ?\r\n                        <>\r\n                            <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`CFS:`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.cfs}`}</Text>\r\n                        </>\r\n                        : null}\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', width: 715 * smallWidthScaleFactor, }}>\r\n\r\n                        <View style={{\r\n                            flex: 1, width: 280 * smallWidthScaleFactor,\r\n                        }}>\r\n                            {/* Buyer Information */}\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 18 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                borderBottomColor: '#0A78BE',\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                color: '#0A78BE',\r\n                                marginTop: 45 * smallHeightScaleFactor,\r\n\r\n                            }}>\r\n                                {`Buyer Information`}\r\n                            </Text>\r\n                            <Text style={{ fontWeight: 750, fontSize: 16 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.name}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.address}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.email}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.contactNumber}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: ${invoiceData.consignee.fax == '' ? 'N/A' : invoiceData.consignee.fax}`}</Text>\r\n\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, paddingLeft: 20 * smallWidthScaleFactor, width: 280 * smallWidthScaleFactor, }}>\r\n                            {/* Notify Party */}\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 18 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                borderBottomColor: '#FF0000',\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                color: '#FF0000',\r\n                                marginTop: 45 * smallHeightScaleFactor,\r\n                            }}>\r\n                                {`Notify Party`}\r\n                            </Text>\r\n                            {invoiceData.notifyParty.sameAsConsignee == true ? (\r\n                                <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\r\n                                (<>\r\n                                    <Text style={{ fontWeight: 750, fontSize: 16 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.name}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.address}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.email}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.contactNumber}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: ${invoiceData.notifyParty.fax == '' ? 'N/A' : invoiceData.notifyParty.fax}`}</Text>\r\n                                </>)}\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n\r\n                </View>\r\n                {selectedChatData.stepIndicator.value < 3 ?\r\n\r\n                    <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 130 * smallHeightScaleFactor, borderWidth: 3 * smallWidthScaleFactor, width: 430 * smallWidthScaleFactor, borderColor: '#FF5C00', height: 194 * smallHeightScaleFactor, }}>\r\n                        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', flexDirection: 'row', }}>\r\n                            <Entypo size={50 * smallWidthScaleFactor} name='warning' color={'#FF0000'} style={{ marginLeft: 15 * smallWidthScaleFactor, }} />\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, color: '#FF0000', marginLeft: 20 * smallWidthScaleFactor, }}>{`Bank Information will be provided after placing an order.`}</Text>\r\n                        </View>\r\n                    </View>\r\n                    :\r\n                    <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 130 * smallHeightScaleFactor, borderWidth: 3 * smallWidthScaleFactor, width: 430 * smallWidthScaleFactor, borderColor: '#1ABA3D', }}>\r\n\r\n                        <View style={{ flex: 1, alignItems: 'center', }}>\r\n                            <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * smallWidthScaleFactor, marginBottom: 5 * smallHeightScaleFactor, }}>\r\n                            <View style={{ flex: 1, marginRight: 50 * smallWidthScaleFactor, }}>\r\n                                <Text style={{\r\n                                    fontWeight: 750,\r\n                                    fontSize: 14 * smallWidthScaleFactor,\r\n                                    borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                    width: 'fit-content', // Make the underline cover the text width\r\n                                    marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                }}>\r\n                                    {`Bank Account`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Bank Name: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Branch Name: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`SWIFTCODE: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Address: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Name of Account Holder: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Account Number: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ flex: 1 }}>\r\n\r\n                                <Text style={{\r\n                                    fontWeight: 750,\r\n                                    fontSize: 14 * smallWidthScaleFactor,\r\n                                    borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                                    width: 'fit-content', // Make the underline cover the text width\r\n                                    marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                }}>\r\n                                    {`Payment Terms`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Terms: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\r\n                                </Text>\r\n\r\n                                <View style={{ paddingTop: 30 * smallHeightScaleFactor, }}>\r\n\r\n                                    <Text style={{\r\n                                        fontWeight: 750,\r\n                                        fontSize: 14 * smallWidthScaleFactor,\r\n                                        borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                                        width: 'fit-content', // Make the underline cover the text width\r\n                                        marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                        color: '#F00A0A',\r\n                                        borderBottomColor: '#F00A0A',\r\n                                    }}>\r\n                                        {`Payment Due`}\r\n                                    </Text>\r\n\r\n                                    <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, color: '#F00A0A', lineHeight: 14 * smallWidthScaleFactor }}>{`Due Date: `}\r\n                                        <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, color: 'black', lineHeight: 14 * smallWidthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                    </Text>\r\n\r\n                                </View>\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                    </View>}\r\n\r\n\r\n\r\n                <View style={{\r\n                    position: 'absolute',\r\n                    left: 38 * smallWidthScaleFactor,\r\n                    top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * smallHeightScaleFactor : 537 * smallHeightScaleFactor,\r\n                    width: 718 * smallWidthScaleFactor,\r\n                    borderWidth: 1 * smallWidthScaleFactor,\r\n                    borderColor: '#C2E2F4',\r\n                    alignSelf: 'center',\r\n                }}>\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Description`}\r\n                            </Text>\r\n\r\n                        </View>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Notes`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Quantity`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Amount`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {`FOB`}\r\n                            </Text>\r\n                        </View>\r\n\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {`$${Math.round(Number(invoiceData.paymentDetails.fobPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {`Freight`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {`$${Math.round(Number(invoiceData.paymentDetails.freightPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                            </Text>}\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <>\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            marginLeft: 2 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                    </Text>\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            marginLeft: 2 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? ` + Insurance` : ' '}\r\n                                    </Text>\r\n                                </>\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        marginLeft: 2 * smallWidthScaleFactor,\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.incoterms == \"CIF\" ? `Insurance` : ' '}\r\n                                </Text>\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                    }}>\r\n                                    {' '}\r\n                                </Text>\r\n                            }\r\n\r\n\r\n                        </View>\r\n\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                            </Text>}\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.incoterms === \"CIF\" ? ` + $${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                    </Text>\r\n                                </Text>\r\n\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.incoterms == \"CIF\" ? `$${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                </Text>\r\n                            }\r\n\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 ? `${invoiceData.paymentDetails.additionalName.join(' + ')}` : ' '}\r\n                            </Text>}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\r\n                                    ? invoiceData.paymentDetails.additionalPrice.map(price =>\r\n                                        `$${parseFloat(price).toLocaleString('en-US', {\r\n                                            style: 'currency',\r\n                                            currency: 'USD',\r\n                                            minimumFractionDigits: 0,\r\n                                            maximumFractionDigits: 0\r\n                                        }).slice(1)}`\r\n                                    ).join(' + ')\r\n                                    : ' '}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            flexDirection: 'row',\r\n                            paddingVertical: 2 * smallHeightScaleFactor,\r\n\r\n                        }}>\r\n                            {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                    {\"Used Vehicle\\n\"}\r\n                                    <Text style={{\r\n                                        fontWeight: 700,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.carName}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.chassisNumber}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.exteriorColor}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.fuel}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.transmission}\\n`}\r\n                                    </Text>\r\n                                </Text>\r\n\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            {invoiceData.paymentDetails && invoiceData.paymentDetails.incoterms && invoiceData.discharge.port && invoiceData.discharge ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    {`${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}`}\r\n                                </Text>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 1,\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    {'1'}\r\n                                </Text>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            justifyContent: 'center',\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\r\n                                <>\r\n                                    <Text style={{\r\n                                        fontWeight: 700,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        color: '#008AC6',\r\n                                        marginRight: 10 * smallWidthScaleFactor,\r\n                                        top: 51 * smallHeightScaleFactor,\r\n                                        left: 50 * smallWidthScaleFactor,\r\n                                        position: 'absolute',\r\n                                    }}>\r\n                                        {\"Total\"}\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            alignSelf: 'center',\r\n                                            color: '#00720B',\r\n                                            marginLeft: 5 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                            {`$${invoiceData.paymentDetails.totalAmount}`}\r\n                                        </Text>\r\n                                    </Text>\r\n\r\n                                </>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', left: 38 * smallWidthScaleFactor, top: 825 * smallHeightScaleFactor, width: 350 * smallWidthScaleFactor, }}>\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Payment Information:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'No warranty service is provided on used vehicles.'}\r\n                    </Text>\r\n\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Conditions for order cancellation:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\r\n                    </Text>\r\n\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Intermediary Banking Information:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Swift code: SMBCUS33'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Address: 277 Park Avenue'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'City: New York, NY'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Postal Code: 10172'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Country: United States'}\r\n                    </Text>\r\n                </View>\r\n\r\n                {selectedChatData.stepIndicator.value < 3 ? null :\r\n                    <View style={{ position: 'absolute', right: 39 * smallWidthScaleFactor, top: 835 * smallHeightScaleFactor, width: 300 * smallWidthScaleFactor, }}>\r\n                        <View style={{\r\n                            width: 300 * smallWidthScaleFactor,\r\n                            alignItems: 'center',\r\n                            paddingBottom: 80 * smallHeightScaleFactor, // Adjust this value to control space between image and line\r\n                        }}>\r\n                            <NativeImage\r\n                                source={require('../../assets/RMJ Invoice Signature with Hanko.png')}\r\n                                style={{\r\n                                    width: 276 * smallWidthScaleFactor,\r\n                                    height: 81 * smallHeightScaleFactor,\r\n                                    resizeMode: 'contain',\r\n                                    alignSelf: 'center',\r\n                                    marginBottom: 0, // Minimize margin to keep the line close\r\n                                }}\r\n                            />\r\n                            <View style={{\r\n                                borderBottomWidth: 1 * smallHeightScaleFactor,\r\n                                borderColor: 'black', // Change the color as needed\r\n                                width: '100%', // Line width as per your requirement\r\n                            }} />\r\n                            <Text italic style={{\r\n                                fontWeight: 700,\r\n                                fontSize: 16 * smallWidthScaleFactor,\r\n                            }}>\r\n                                {'Real Motor Japan'}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            width: 300 * smallWidthScaleFactor,\r\n                            alignItems: 'center',\r\n                            paddingBottom: 5 * smallHeightScaleFactor, // Adjust this value to control space between image and line\r\n                        }}>\r\n\r\n                            <View style={{\r\n                                borderBottomWidth: 1 * smallHeightScaleFactor,\r\n                                borderColor: 'black', // Change the color as needed\r\n                                width: '100%', // Line width as per your requirement\r\n                            }} />\r\n                            <Text italic style={{\r\n                                fontWeight: 700,\r\n                                fontSize: 16 * smallWidthScaleFactor,\r\n                            }}>\r\n                                {'Your Signature'}\r\n                            </Text>\r\n                        </View>\r\n                    </View>}\r\n\r\n\r\n            </View>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <> {invoiceData && Object.keys(invoiceData).length > 0 &&\r\n\r\n            <>{!selectedChatData.isCancelled && <Pressable\r\n                onPress={handlePreviewInvoiceModalOpen}\r\n                focusable={false}\r\n                variant='ghost'\r\n                onHoverIn={hoverPreviewIn}\r\n                onHoverOut={hoverPreviewOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isPreviewHovered ? '#0772ad' : '#0A8DD5',\r\n                }}>\r\n\r\n                {selectedChatData.invoiceNumber && selectedChatData.stepIndicator.value > 2 ?\r\n                    <Text style={{ fontWeight: 700, color: 'white', }}>\r\n                        {`Preview Invoice No. ${selectedChatData.invoiceNumber}`}\r\n                    </Text>\r\n                    :\r\n                    <Text style={{ fontWeight: 700, color: 'white', }}>\r\n                        {`Preview Invoice`}\r\n                    </Text>}\r\n            </Pressable>}\r\n\r\n                <Modal\r\n                    isOpen={previewInvoiceVisible}\r\n                    onClose={() => {\r\n                        handlePreviewInvoiceModalClose();\r\n                    }}\r\n                    size={'full'}\r\n                    useRNModal\r\n                >\r\n                    <View style={{ flexDirection: 'row', margin: 2, }}>\r\n                        <Pressable onPress={() => {\r\n                            capturedImageUri ? handleCaptureAndCreatePDF() : null;\r\n                        }}\r\n                            style={{ justifyContent: 'center', flexDirection: 'row', padding: 5, borderRadius: 5, marginRight: 5, backgroundColor: '#16A34A', }}>\r\n                            <MaterialCommunityIcons size={20} name='download' color='white' />\r\n                            <Text style={{ color: 'white', }}>Download as PDF</Text>\r\n                        </Pressable>\r\n\r\n                        {selectedChatData.isCancelled && selectedChatData.stepIndicator.value < 3 ?\r\n                            null :\r\n                            <Pressable\r\n                                onPress={() => {\r\n                                    dispatch(setCustomInvoiceVisible(true))\r\n                                    dispatch(setPreviewInvoiceVisible(false))\r\n                                }}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                style={{\r\n                                    justifyContent: 'center',\r\n                                    flexDirection: 'row',\r\n                                    padding: 5,\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: '#0A8DD5',\r\n                                }}>\r\n                                <MaterialCommunityIcons size={20} name='file-document-edit' color='white' />\r\n                                <Text style={{ fontWeight: 400, color: 'white', }}>\r\n                                    {`Generate Custom Invoice`}\r\n                                </Text>\r\n                            </Pressable>\r\n\r\n                        }\r\n\r\n                        <Pressable\r\n                            onPress={() => {\r\n                                capturedImageUri ? openImage() : null;\r\n                            }}\r\n                            style={{ position: 'absolute', top: -2, right: selectedChatData.stepIndicator.value < 3 ? -375 : -285, flexDirection: 'row', padding: 5, borderRadius: 5, backgroundColor: '#0A8DD5', }}>\r\n                            <Entypo size={20} name='images' color='white' />\r\n                            <Text style={{ color: 'white', }}>View Image</Text>\r\n                        </Pressable>\r\n\r\n                    </View>\r\n                    <Modal.CloseButton />\r\n                    {previewInvoiceVisible &&\r\n                        <ScrollView\r\n                            style={{ maxHeight: screenWidth < 960 ? 520 : 720, maxWidth: screenWidth < 960 ? '90%' : 900 }}\r\n                        >\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                right: 0,\r\n                                left: 0,\r\n                                backgroundColor: 'white',\r\n                                zIndex: 999,\r\n                                flex: 1,\r\n                                alignItems: 'center', // Center horizontally\r\n                            }}>\r\n                                {capturedImageUri ? (\r\n                                    (screenWidth < mobileViewBreakpoint ? <PreviewInvoiceForMobile /> :\r\n                                        <RNImage\r\n                                            key={imagePreviewKey}\r\n                                            source={{ uri: capturedImageUri.toString() }}\r\n                                            style={{\r\n                                                marginTop: 5,\r\n                                                width: screenWidth < mobileViewBreakpoint ? 377 : 595,\r\n                                                height: screenWidth < mobileViewBreakpoint ? 541 : 842,\r\n                                                resizeMode: 'stretch',\r\n                                                borderWidth: 1,\r\n                                                borderColor: '#DADDE1',\r\n                                            }}\r\n                                        />\r\n                                    )\r\n                                ) : (\r\n                                    <Spinner size={'lg'} color={'#0A9FDC'} style={{ alignSelf: 'center', paddingTop: 80 * heightScaleFactor, }} />\r\n                                )}\r\n                            </View>\r\n\r\n                            {/* Main content with invoice details */}\r\n                            {\r\n\r\n                                <View ref={invoiceRef}\r\n                                    style={{\r\n                                        width: newWidth,\r\n                                        height: newHeight,\r\n                                        backgroundColor: 'white',\r\n                                        zIndex: 1\r\n                                    }}>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        <NativeImage\r\n                                            source={require('../../assets/RMJ logo for invoice.png')}\r\n                                            style={{\r\n                                                width: 95 * widthScaleFactor,\r\n                                                height: 85 * heightScaleFactor,\r\n                                                resizeMode: 'stretch',\r\n                                            }}\r\n                                        />\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * heightScaleFactor }}>\r\n                                        {/* Title */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`PROFORMA INVOICE`}</Text> :\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`INVOICE`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        {/* QR CODE */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <View\r\n                                                ref={qrCodeRef}\r\n                                            >\r\n                                                <QRCode\r\n                                                    value={invoiceData.cryptoNumber}\r\n                                                    size={80 * widthScaleFactor}\r\n                                                    color=\"black\"\r\n                                                    backgroundColor=\"white\"\r\n                                                />\r\n                                            </View>\r\n\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 34 * heightScaleFactor }}>\r\n                                        {/* Invoice Number */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Invoice No. RMJ-${invoiceData.id}`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 34 * heightScaleFactor, }}>\r\n                                            {/* Issuing Date */}\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                                            </View>\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#F00A0A', }}>{`Valid Until: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 49 * heightScaleFactor, flexDirection: 'row' }}>\r\n                                            {/* Issuing Date */}\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                            <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                                        </View>\r\n                                    }\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 40 * widthScaleFactor,\r\n                                        top: 134 * heightScaleFactor,\r\n                                        width: 280 * widthScaleFactor,\r\n                                    }}>\r\n                                        {/* Shipper */}\r\n                                        <Text style={{\r\n                                            fontWeight: 750,\r\n                                            fontSize: 16 * widthScaleFactor,\r\n                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                            width: 'fit-content', // Make the underline cover the text width\r\n                                            marginBottom: 5, // Add some space between text and underline\r\n                                        }}>\r\n                                            {`Shipper`}\r\n                                        </Text>\r\n                                        <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: +81565850606`}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped From:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.departurePort}, ${invoiceData.departureCountry}`}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped To:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.discharge.port}, ${invoiceData.discharge.country}`}</Text>\r\n                                        {invoiceData.placeOfDelivery && invoiceData.placeOfDelivery !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Place of Delivery:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.placeOfDelivery}`}</Text>\r\n                                            </>\r\n                                            : null}\r\n                                        {invoiceData.cfs && invoiceData.cfs !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`CFS:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.cfs}`}</Text>\r\n                                            </>\r\n                                            : null}\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', width: 715 * widthScaleFactor, }}>\r\n\r\n                                            <View style={{\r\n                                                flex: 1, width: 280 * widthScaleFactor,\r\n                                            }}>\r\n                                                {/* Buyer Information */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#0A78BE',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#0A78BE',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n\r\n                                                }}>\r\n                                                    {`Buyer Information`}\r\n                                                </Text>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.name}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.address}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.email}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.contactNumber}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${invoiceData.consignee.fax == '' ? 'N/A' : invoiceData.consignee.fax}`}</Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, paddingLeft: 20 * widthScaleFactor, width: 280 * widthScaleFactor, }}>\r\n                                                {/* Notify Party */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#FF0000',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#FF0000',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n                                                }}>\r\n                                                    {`Notify Party`}\r\n                                                </Text>\r\n                                                {invoiceData.notifyParty.sameAsConsignee == true ? (\r\n                                                    <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\r\n                                                    (<>\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.name}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.address}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.email}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.contactNumber}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${invoiceData.notifyParty.fax == '' ? 'N/A' : invoiceData.notifyParty.fax}`}</Text>\r\n                                                    </>)}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n\r\n                                    </View>\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#FF5C00', height: 194 * heightScaleFactor, }}>\r\n                                            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                <Entypo size={50 * widthScaleFactor} name='warning' color={'#FF0000'} />\r\n                                                <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#FF0000', marginLeft: 20 * widthScaleFactor, }}>{`Bank Information will be provided after placing an order.`}</Text>\r\n                                            </View>\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#1ABA3D', }}>\r\n\r\n                                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * widthScaleFactor, marginBottom: 5 * heightScaleFactor, }}>\r\n                                                <View style={{ flex: 1, marginRight: 50 * widthScaleFactor, }}>\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Bank Account`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Bank Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Branch Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`SWIFTCODE: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Address: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Name of Account Holder: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Account Number: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View style={{ flex: 1 }}>\r\n\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Payment Terms`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Terms: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <View style={{ paddingTop: 30 * heightScaleFactor, }}>\r\n\r\n                                                        <Text style={{\r\n                                                            fontWeight: 750,\r\n                                                            fontSize: 14 * widthScaleFactor,\r\n                                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                            width: 'fit-content', // Make the underline cover the text width\r\n                                                            marginBottom: 2, // Add some space between text and underline\r\n                                                            color: '#F00A0A',\r\n                                                            borderBottomColor: '#F00A0A',\r\n                                                        }}>\r\n                                                            {`Payment Due`}\r\n                                                        </Text>\r\n\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#F00A0A', lineHeight: 14 * widthScaleFactor }}>{`Due Date: `}\r\n                                                            <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, color: 'black', lineHeight: 14 * widthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                                        </Text>\r\n\r\n                                                    </View>\r\n\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                        </View>}\r\n\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 38 * widthScaleFactor,\r\n                                        top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * heightScaleFactor : 537 * heightScaleFactor,\r\n                                        width: 718 * widthScaleFactor,\r\n                                        borderWidth: 1 * widthScaleFactor,\r\n                                        borderColor: '#C2E2F4',\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Description`}\r\n                                                </Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Notes`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Quantity`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Amount`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {`FOB`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {`${convertedCurrency(Math.round(Number(invoiceData.paymentDetails.fobPrice)))}`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {`Freight`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {`${convertedCurrency(Math.round(Number(invoiceData.paymentDetails.freightPrice)))}`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                                </Text>}\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <>\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                marginLeft: 2 * widthScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                                        </Text>\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                marginLeft: 2 * widthScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.incoterms == \"CIF\" ? ` + Insurance` : ' '}\r\n                                                        </Text>\r\n                                                    </>\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? `Insurance` : ' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                        }}>\r\n                                                        {' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n\r\n                                            </View>\r\n\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.inspectionIsChecked ? `${convertedCurrency(Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\r\n                                                </Text>}\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.inspectionIsChecked ? `${convertedCurrency(Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.incoterms === \"CIF\" ? ` + ${convertedCurrency(Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\r\n                                                        </Text>\r\n                                                    </Text>\r\n\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? `${convertedCurrency(Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n                                            </View>\r\n\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 ? `${invoiceData.paymentDetails.additionalName.join(' + ')}` : ' '}\r\n                                                </Text>}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\r\n                                                        ? invoiceData.paymentDetails.additionalPrice.map(price => {\r\n                                                            const converted = convertedCurrency(Number(price));\r\n                                                            return converted;\r\n                                                        }).join(' + ')\r\n                                                        : ' '}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                paddingVertical: 2 * heightScaleFactor,\r\n\r\n                                            }}>\r\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                        {\"Used Vehicle\\n\"}\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.carName}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.chassisNumber}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.exteriorColor}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.fuel}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.transmission}\\n`}\r\n                                                        </Text>\r\n                                                    </Text>\r\n\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.incoterms && invoiceData.discharge.port && invoiceData.discharge ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                        {`${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}`}\r\n                                                    </Text>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 1,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                        {'1'}\r\n                                                    </Text>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                justifyContent: 'center',\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\r\n                                                    <>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            color: '#008AC6',\r\n                                                            marginRight: 10 * widthScaleFactor,\r\n                                                            top: 51 * heightScaleFactor,\r\n                                                            left: 50 * widthScaleFactor,\r\n                                                            position: 'absolute',\r\n                                                        }}>\r\n                                                            {\"Total\"}\r\n                                                            <Text style={{\r\n                                                                fontWeight: 700,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                alignSelf: 'center',\r\n                                                                color: '#00720B',\r\n                                                                marginLeft: 5 * widthScaleFactor,\r\n                                                            }}>\r\n                                                                {`${totalPriceCalculated()}`}\r\n                                                            </Text>\r\n                                                        </Text>\r\n\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 825 * heightScaleFactor, width: 350 * widthScaleFactor, }}>\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Payment Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'No warranty service is provided on used vehicles.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Conditions for order cancellation:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Intermediary Banking Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Swift code: SMBCUS33'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Address: 277 Park Avenue'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'City: New York, NY'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Postal Code: 10172'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Country: United States'}\r\n                                        </Text>\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ? null :\r\n                                        <View style={{ position: 'absolute', right: 39 * widthScaleFactor, top: 835 * heightScaleFactor, width: 300 * widthScaleFactor, }}>\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 80 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n                                                <NativeImage\r\n                                                    source={require('../../assets/RMJ Invoice Signature with Hanko.png')}\r\n                                                    style={{\r\n                                                        width: 276 * widthScaleFactor,\r\n                                                        height: 81 * heightScaleFactor,\r\n                                                        resizeMode: 'contain',\r\n                                                        alignSelf: 'center',\r\n                                                        marginBottom: 0, // Minimize margin to keep the line close\r\n                                                    }}\r\n                                                />\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Real Motor Japan'}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 5 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Your Signature'}\r\n                                                </Text>\r\n                                            </View>\r\n                                        </View>}\r\n\r\n\r\n                                </View>\r\n                            }\r\n\r\n\r\n                        </ScrollView>\r\n\r\n                    }\r\n\r\n                </Modal>\r\n            </>\r\n        }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst ReopenTransaction = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData)\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData)\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isYesHovered, setIsYesHovered] = useState(false);\r\n    const [isNoHovered, setIsNoHovered] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n\r\n    const yesHoverIn = () => setIsYesHovered(true);\r\n    const yesHoverOut = () => setIsYesHovered(false);\r\n\r\n    const noHoverIn = () => setIsNoHovered(true);\r\n    const noHoverOut = () => setIsNoHovered(false);\r\n\r\n    const handleModalOpen = () => {\r\n        setIsModalVisible(true);\r\n\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setIsModalVisible(false);\r\n\r\n    }\r\n\r\n\r\n    const reopenTransactionMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `The transaction has been reopened by the seller.`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `The transaction has been reopened by the seller.`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const handleReopenTransaction = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeEmail = moment(datetime).format('MMMM D, YYYY');\r\n\r\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n        const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\r\n        const docRefVehicle = doc(projectExtensionFirestore, \"VehicleProducts\", selectedChatData.carData.stockID);\r\n\r\n        setIsYesLoading(true);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                'isCancelled': false, // Update the specific field\r\n                'orderPlaced': true\r\n            });\r\n            try {\r\n                await updateDoc(docRefChatId, {\r\n                    'isCancelled': false // Update the specific field\r\n                });\r\n\r\n                try {\r\n                    await updateDoc(docRefVehicle, {\r\n                        'stockStatus': 'Reserved', // Update the specific field\r\n                        'reservedTo': selectedCustomerData.textEmail,\r\n                    });\r\n                } catch (error) {\r\n                    console.error(\"Error updating document: \", error);\r\n                }\r\n                await reopenTransactionMessage();\r\n\r\n                setIsYesLoading(false);\r\n                console.log(\"Document successfully updated\");\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n            console.log(\"Document successfully updated\");\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#0772ad' : '#0A8DD5',\r\n                    padding: 10,\r\n                }}>\r\n\r\n                <MaterialCommunityIcons name='restart' size={15} color={'white'} />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Reopen Transaction`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={isModalVisible}\r\n                onClose={() => {\r\n                    handleModalClose()\r\n                }}\r\n\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.Header>Reopen Transaction</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to reopen the transaction?\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onPress={handleModalClose}\r\n                                onHoverIn={noHoverIn}\r\n                                onHoverOut={noHoverOut}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isNoHovered ? '#3F3F46' : '#52525B',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text color={'white'} style={{ fontWeight: 700, }}>No</Text>\r\n                            </Pressable>\r\n\r\n                            <View style={{ flex: 1 }} />\r\n\r\n                            <Pressable\r\n                                onPress={handleReopenTransaction}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onHoverIn={yesHoverIn}\r\n                                onHoverOut={yesHoverOut}\r\n                                disabled={isYesLoading}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isYesHovered ? '#0772ad' : '#0A8DD5',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {!isYesLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Yes</Text> : <Spinner size={'sm'} color={'white'} />}\r\n                            </Pressable>\r\n                        </View>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst CancelTransaction = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData)\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData)\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isYesHovered, setIsYesHovered] = useState(false);\r\n    const [isNoHovered, setIsNoHovered] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n\r\n    const yesHoverIn = () => setIsYesHovered(true);\r\n    const yesHoverOut = () => setIsYesHovered(false);\r\n\r\n    const noHoverIn = () => setIsNoHovered(true);\r\n    const noHoverOut = () => setIsNoHovered(false);\r\n\r\n    const handleModalOpen = () => {\r\n        setIsModalVisible(true);\r\n\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setIsModalVisible(false);\r\n\r\n    }\r\n\r\n\r\n    const sendEmail = async (to, subject, htmlContent) => {\r\n        try {\r\n            const response = await fetch('https://rmjsmtp.duckdns.org/emailServer/send-email', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    to,\r\n                    subject,\r\n                    htmlContent,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Email sent successfully');\r\n            } else {\r\n                console.error('Failed to send email');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error sending email:', error);\r\n        }\r\n    };\r\n\r\n    const htmlContent = `<html><head>\r\n    <title>Transaction Cancellation Notice</title>\r\n    <style>\r\n        body {\r\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n            background-color: #f4f4f4;\r\n            color: #333;\r\n            padding: 10px;\r\n            margin: 0;\r\n        }\r\n        .container {\r\n            background-color: #fff;\r\n            border-radius: 8px;\r\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n            margin: 20px auto;\r\n            max-width: 600px;\r\n            padding: 20px;\r\n        }\r\n        .highlight-red {\r\n            color: #FF0000; /* Red */\r\n            font-weight: bold;\r\n        }\r\n        .highlight-bold {\r\n            font-weight: bold;\r\n        }\r\n        p {\r\n            font-size: 16px;\r\n            line-height: 1.6;\r\n            margin: 10px 0 20px;\r\n        }\r\n        .signature {\r\n            font-weight: bold;\r\n            margin-top: 40px;\r\n            text-align: left;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <p><strong>Dear Valued Customer,</strong></p>\r\n\r\n        <p>I hope this message finds you well.</p>\r\n        \r\n        <p>I wanted to inform you that unfortunately, due to the non-receipt of payment for <span class=\"highlight-bold\">Invoice No. <span class=\"highlight-red\">${selectedChatData.invoiceNumber}</span></span> by the due date, </p>\r\n\r\n        <p>We had to proceed with the <span class=\"highlight-red\">cancellation of the transaction.</span></p>\r\n\r\n        <p>We understand that unforeseen circumstances can arise, and we're here to discuss any concerns or possible ways to support you moving forward.</p>\r\n\r\n        <p>Please reach out if you have any questions or require assistance.</p>\r\n\r\n        <p>Thank you for your understanding.</p>\r\n        \r\n        <p class=\"signature\">Best regards,<br>Real Motor Japan</p>\r\n    </div>\r\n\r\n</body></html>`;\r\n\r\n    const cancelTransactionMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `The transaction has been cancelled.`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `The transaction has been cancelled.`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const handleCancelTransaction = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeEmail = moment(datetime).format('MMMM D, YYYY');\r\n\r\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n        const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\r\n        const docRefVehicle = doc(projectExtensionFirestore, \"VehicleProducts\", selectedChatData.carData.stockID);\r\n\r\n        setIsYesLoading(true);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                'isCancelled': true, // Update the specific field\r\n                'orderPlaced': false\r\n            });\r\n            try {\r\n                await updateDoc(docRefChatId, {\r\n                    'isCancelled': true // Update the specific field\r\n                });\r\n\r\n                try {\r\n                    await updateDoc(docRefVehicle, {\r\n                        'stockStatus': 'On-Sale', // Update the specific field\r\n                        'reservedTo': ''\r\n                    });\r\n                } catch (error) {\r\n                    console.error(\"Error updating document: \", error);\r\n                }\r\n                await cancelTransactionMessage();\r\n\r\n                await sendEmail(selectedCustomerData.textEmail, `Transaction Cancelled | Real Motor Japan | Invoice No. ${selectedChatData.invoiceNumber}  (${formattedTimeEmail})`, htmlContent);\r\n\r\n                setIsYesLoading(false);\r\n                console.log(\"Document successfully updated\");\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n            console.log(\"Document successfully updated\");\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#AAAAAA' : '#CCCCCC',\r\n                }}\r\n            >\r\n                <MaterialIcons name='cancel' size={15} color={'#52525B'} />\r\n                <Text color={'#52525B'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Cancel Transaction`}</Text>\r\n            </Pressable>\r\n\r\n\r\n            <Modal\r\n                isOpen={isModalVisible}\r\n                onClose={() => {\r\n                    handleModalClose()\r\n                }}\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.Header>Cancel Transaction</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to cancel the transation?\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onPress={handleModalClose}\r\n                                onHoverIn={noHoverIn}\r\n                                onHoverOut={noHoverOut}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isNoHovered ? '#3F3F46' : '#52525B',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text color={'white'} style={{ fontWeight: 700, }}>No</Text>\r\n                            </Pressable>\r\n\r\n                            <View style={{ flex: 1 }} />\r\n\r\n                            <Pressable\r\n                                onPress={handleCancelTransaction}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onHoverIn={yesHoverIn}\r\n                                onHoverOut={yesHoverOut}\r\n                                disabled={isYesLoading}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isYesHovered ? '#800101' : '#FF0000',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {!isYesLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Yes</Text> : <Spinner size={'sm'} color={'white'} />}\r\n                            </Pressable>\r\n                        </View>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst ExtendDueDateButton = () => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [isConfirmHovered, setIsConfirmHovered] = useState(false);\r\n    const [isCancelHovered, setIsCancelHovered] = useState(false);\r\n    const [selectedDueDate, setSelectedDueDate] = useState('');\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    let invoiceSelectedDueDate = '';\r\n\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n\r\n    const confirmHoverIn = () => setIsConfirmHovered(true);\r\n    const confirmHoverOut = () => setIsConfirmHovered(false);\r\n\r\n    const cancelHoverIn = () => setIsCancelHovered(true);\r\n    const cancelHoverOut = () => setIsCancelHovered(false);\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleModalOpen = () => {\r\n        setModalVisible(true);\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n    }\r\n\r\n    const handleConfirm = async () => {\r\n\r\n        try {\r\n            await confirmExtendDueDate();\r\n            handleModalClose();\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const extendDueDateMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `The due date has been changed to ${selectedDueDate\r\n                    ? new Date(selectedDueDate).toLocaleDateString(undefined, {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric',\r\n                    })\r\n                    : 'Invalid Date'\r\n                    }`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `The due date has been changed to ${selectedDueDate\r\n                    ? new Date(selectedDueDate).toLocaleDateString(undefined, {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric',\r\n                    })\r\n                    : 'Invalid Date'\r\n                    }`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const confirmExtendDueDate = async () => {\r\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n        setIsConfirmLoading(true);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                'bankInformations.dueDate': selectedDueDate // Update the specific field\r\n            });\r\n            await extendDueDateMessage();\r\n            setIsConfirmLoading(false);\r\n            console.log(\"Document successfully updated\");\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n    };\r\n\r\n    const ModalCalendar = ({ selectedDate, setSelectedDate, currentDate }) => {\r\n\r\n        const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n        const handleModalCalendarOpen = () => {\r\n            setModalCalendarVisible(true);\r\n        };\r\n\r\n        const handleModalCalendarClose = () => {\r\n            setModalCalendarVisible(false);\r\n        };\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n                <Pressable style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onPress={handleModalCalendarOpen}>\r\n                    <Text style={{ flex: 1, }} >{selectedDate}</Text>\r\n                </Pressable>\r\n\r\n                <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Content>\r\n                        <View style={{ height: '100%', flex: 1 }}>\r\n                            <Calendar\r\n                                onDayPress={useCallback(day => {\r\n                                    setSelectedDate(day.dateString);\r\n                                    invoiceSelectedDueDate = day.dateString;\r\n                                    globalInvoiceVariable.bankInformations.dueDate = day.dateString;\r\n                                    handleModalCalendarClose();\r\n                                }, [])}\r\n                                markedDates={{\r\n                                    [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n                                }}\r\n                                renderArrow={(direction) => (\r\n                                    direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n                                )}\r\n                                enableSwipeMonths={true}\r\n                                initialDate={selectedDate}\r\n                                // minDate={currentDate}\r\n                                showSixWeeks />\r\n\r\n                        </View>\r\n\r\n                    </Modal.Content>\r\n\r\n                </Modal>\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (currentDate) {\r\n            const date = new Date(currentDate);\r\n\r\n            // Check the day of the week\r\n            const dayOfWeek = date.getDay();\r\n\r\n            if (dayOfWeek === 5) { // Friday\r\n                date.setDate(date.getDate() + 3); // Add 3 days to reach Monday\r\n            } else if (dayOfWeek === 6) { // Saturday\r\n                date.setDate(date.getDate() + 2); // Add 2 days to reach Monday\r\n            } else {\r\n                date.setDate(date.getDate() + 1); // Sunday to Thursday, add 1 day\r\n            }\r\n\r\n            // Format the date back to string\r\n            const adjustedDate = date.toISOString().split('T')[0];\r\n            setSelectedDueDate(adjustedDate);\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#a8720a' : '#D38F0D',\r\n                }}\r\n            >\r\n                <FontAwesome name='calendar-plus-o' size={15} color={'white'} />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Extend Due Date`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={modalVisible}\r\n                onClose={handleModalClose}\r\n                useRNModal\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.Header >Extend Due Date</Modal.Header>\r\n                    <View style={{ margin: 2, }}>\r\n                        <Text style={{ fontWeight: 700, marginLeft: 3, }}>Due Date:</Text>\r\n                        <ModalCalendar currentDate={currentDate} selectedDate={selectedDueDate} setSelectedDate={setSelectedDueDate} />\r\n                    </View>\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onPress={handleModalClose}\r\n                                onHoverIn={cancelHoverIn}\r\n                                onHoverOut={cancelHoverOut}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isCancelHovered ? '#3F3F46' : '#52525B',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text color={'white'} style={{ fontWeight: 700, }}>Cancel</Text>\r\n                            </Pressable>\r\n\r\n                            <View style={{ flex: 1 }} />\r\n\r\n                            <Pressable\r\n                                onPress={handleConfirm}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onHoverIn={confirmHoverIn}\r\n                                onHoverOut={confirmHoverOut}\r\n                                disabled={isConfirmLoading}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isConfirmHovered ? '#0f7534' : '#16A34A',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {!isConfirmLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Confirm</Text> : <Spinner size={'sm'} color={'white'} />}\r\n                            </Pressable>\r\n                        </View>\r\n\r\n\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nconst TransactionModal = () => {\r\n    const transactionModalVisible = useSelector((state) => state.transactionModalVisible);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleTransactionModalClose = () => {\r\n        dispatch(setTransactionModalVisible(false));\r\n    }\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={transactionModalVisible}\r\n            onClose={() => {\r\n                handleTransactionModalClose()\r\n            }}\r\n            size={'lg'}\r\n            useRNModal\r\n        >\r\n            {transactionModalVisible &&\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n\r\n                    <Modal.Header style={{ borderBottomWidth: 2, borderColor: '#0A9FDC', }} >{transactionModalTitle}</Modal.Header>\r\n\r\n                    {transactionModalContentValue == 1 || transactionModalContentValue == 2 &&\r\n                        <IssueProformaInvoiceModalContent />\r\n                    }\r\n\r\n                    {transactionModalContentValue == 3 &&\r\n                        <ConfirmPaymentModalContent />\r\n                    }\r\n                </Modal.Content>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst TransactionButton = ({ title, buttonValue, transactionValue, colorHoverIn, colorHoverOut }) => {\r\n\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleTransactionModalOpen = () => {\r\n        dispatch(setTransactionModalVisible(true));\r\n        transactionModalTitle = title;\r\n        transactionModalContentValue = transactionValue;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleTransactionModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? colorHoverIn : colorHoverOut,\r\n                }}\r\n            >\r\n                <FastImage\r\n                    source={{\r\n                        uri: require(`../../assets/chat_step/chat_step_${buttonValue}_on.png`),\r\n                        priority: FastImage.priority.normal\r\n                    }}\r\n                    style={{\r\n                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                        width: 15,\r\n                        height: 15,\r\n                        alignSelf: 'center',\r\n                    }}\r\n                    resizeMode={FastImage.resizeMode.stretch}\r\n                />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{title}</Text>\r\n            </Pressable>\r\n\r\n        </>\r\n\r\n    );\r\n};\r\n\r\n\r\nconst TransactionList = ({ displayedTransactions, handleChatPress, selectedCustomerData }) => {\r\n    // Assuming an environment that supports onMouseEnter and onMouseLeave\r\n    return (\r\n        Array.isArray(selectedCustomerData.transactions) && selectedCustomerData.transactions.length > 0 ? (\r\n            displayedTransactions.map((transaction, index) => {\r\n                const [isHovered, setIsHovered] = useState(false); // This won't work as expected due to scope\r\n\r\n                return (\r\n                    <Pressable\r\n                        key={index}\r\n                        onPress={() => handleChatPress(`chat_${transaction.stockId}_${selectedCustomerData.textEmail}`)}\r\n                        onMouseEnter={() => setIsHovered(true)} // These events are not native to React Native\r\n                        onMouseLeave={() => setIsHovered(false)}\r\n                        style={{\r\n                            marginBottom: 15,\r\n                            backgroundColor: isHovered ? '#F2F2F2' : '#FFFFFF', // Change color on hover\r\n                            borderRadius: 10,\r\n                            shadowColor: '#000',\r\n                            shadowOffset: { width: 0, height: 2 },\r\n                            shadowOpacity: 0.1,\r\n                            shadowRadius: 2,\r\n                            elevation: 3,\r\n                            padding: 5,\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: '#eee',\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <View>\r\n                            <FastImage\r\n                                source={{ uri: transaction.imageUrl, priority: FastImage.priority.normal }}\r\n                                style={{\r\n                                    width: 60,\r\n                                    height: 60,\r\n                                    borderRadius: 30,\r\n                                    alignSelf: 'center',\r\n                                    margin: 10,\r\n                                }}\r\n                                resizeMode={FastImage.resizeMode.stretch}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                <Text style={{ color: '#0A78BE' }} selectable={false}>\r\n                                    {transaction.carName}\r\n                                </Text>\r\n                            </Text>\r\n                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                <Text style={{ color: '#333' }} selectable={false}>{transaction.referenceNumber}</Text>\r\n                            </Text>\r\n                        </View>\r\n                    </Pressable>\r\n                );\r\n            })\r\n        ) : (\r\n            <Text style={{ fontWeight: 'bold', alignSelf: 'center' }} italic>No history to show</Text>\r\n        )\r\n    );\r\n};\r\n\r\nconst TransactionHistoryModal = () => {\r\n\r\n    const [transactionHistoryVisible, setTransactionHistoryVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const navigate = useNavigate();\r\n    const [displayedTransactions, setDisplayedTransactions] = useState(selectedCustomerData.transactions ? selectedCustomerData.transactions.slice(0, 5) : null);\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const hoverStyle = isHovered ? {\r\n        backgroundColor: '#E8EAF6', // Lighter background color on hover\r\n        // Any other style changes on hover\r\n    } : {};\r\n\r\n    const loadMorePayments = () => {\r\n        if (loadingMore) return; // Prevent multiple loads\r\n\r\n        setLoadingMore(true);\r\n        const nextItems = selectedCustomerData.transactions.slice(\r\n            displayedTransactions.length,\r\n            displayedTransactions.length + 5\r\n        );\r\n\r\n        setTimeout(() => { // Simulate network request\r\n            setDisplayedTransactions([...displayedTransactions, ...nextItems]);\r\n            setLoadingMore(false);\r\n        }, 500); // Adjust the timeout as needed\r\n    };\r\n\r\n    const handleTransactionHistoryModalOpen = () => {\r\n        setDisplayedTransactions(selectedCustomerData.transactions ? selectedCustomerData.transactions.slice(0, 5) : null);\r\n        setTransactionHistoryVisible(true);\r\n\r\n    };\r\n\r\n    const handleTransactionHistoryModalClose = () => {\r\n        setTransactionHistoryVisible(false);\r\n    };\r\n\r\n    const isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\r\n        return layoutMeasurement.height + contentOffset.y >= contentSize.height - 20;\r\n    };\r\n\r\n    const handleChatPress = (chatId) => {\r\n        const encryptedChatId = encryptData(chatId);\r\n        const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\r\n        // navigate(`/top/chat-messages/${encodedChatId}`);\r\n        const path = `/top/chat-messages/${encodedChatId}`;\r\n        // Construct the URL for hash-based routing\r\n        const baseUrl = window.location.origin + window.location.pathname;\r\n        const fullPath = `${baseUrl}#${path}`;\r\n        window.open(fullPath, '_blank');\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n\r\n            <Pressable onPress={handleTransactionHistoryModalOpen}>\r\n                <Text style={{ fontSize: screenWidth < mobileViewBreakpoint ? 10 : 14, color: '#0A78BE', textAlign: 'center', }} underline>\r\n                    {`View Transactions`}\r\n                </Text>\r\n            </Pressable>\r\n\r\n            <Modal isOpen={transactionHistoryVisible} onClose={handleTransactionHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ backgroundColor: 'white', textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Transactions History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView\r\n                            style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500 }}\r\n                            onScroll={({ nativeEvent }) => {\r\n                                if (isCloseToBottom(nativeEvent)) {\r\n                                    loadMorePayments();\r\n                                }\r\n                            }}\r\n                            scrollEventThrottle={400} // Adjust as needed\r\n                        >\r\n\r\n                            <TransactionList\r\n                                displayedTransactions={displayedTransactions}\r\n                                handleChatPress={handleChatPress}\r\n                                selectedCustomerData={selectedCustomerData}\r\n                            />\r\n\r\n                            <View style={{ height: 20, }}>\r\n                                {loadingMore && <Spinner size='sm' color=\"#7B9CFF\" />}\r\n                            </View>\r\n\r\n                        </ScrollView>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nconst PaymentHistoryModal = () => {\r\n\r\n    const [paymentHistoryVisible, setPaymentHistoryVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const sortedPayments = selectedCustomerData.paymentsHistory\r\n        ? [...selectedCustomerData.paymentsHistory].sort((a, b) => {\r\n            const dateA = new Date(a.date);\r\n            const dateB = new Date(b.date);\r\n            return dateB - dateA; // Sorts in descending order\r\n        })\r\n        : [];\r\n\r\n    const [displayedPayments, setDisplayedPayments] = useState(sortedPayments.slice(0, 5));\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n\r\n    const loadMorePayments = () => {\r\n        if (loadingMore) return; // Prevent multiple loads\r\n\r\n        setLoadingMore(true);\r\n        const nextItems = sortedPayments.slice(\r\n            displayedPayments.length,\r\n            displayedPayments.length + 5\r\n        );\r\n\r\n        setTimeout(() => { // Simulate network request\r\n            setDisplayedPayments([...displayedPayments, ...nextItems]);\r\n            setLoadingMore(false);\r\n        }, 500); // Adjust the timeout as needed\r\n    };\r\n\r\n    const handlePaymentHistoryModalOpen = () => {\r\n        setDisplayedPayments(sortedPayments.slice(0, 5));\r\n        setPaymentHistoryVisible(true);\r\n\r\n    };\r\n\r\n    const handlePaymentHistoryModalClose = () => {\r\n        setPaymentHistoryVisible(false);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function formatDate(dateString) {\r\n        // Remove ' at ' from the date string\r\n        const cleanedDateString = dateString.replace(' at ', ' ');\r\n        const date = new Date(cleanedDateString);\r\n\r\n        if (isNaN(date.getTime())) {\r\n            // Date is not valid\r\n            console.error(\"Invalid Date:\", dateString);\r\n            return \"Invalid Date\";\r\n        }\r\n\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        const year = date.getFullYear();\r\n        const month = months[date.getMonth()];\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n\r\n        let hours = date.getHours();\r\n        const minutes = date.getMinutes().toString().padStart(2, '0');\r\n        const ampm = hours >= 12 ? 'pm' : 'am';\r\n\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n\r\n        return `${year} ${month} ${day} at ${hours}:${minutes}${ampm}`;\r\n    }\r\n\r\n    const isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\r\n        return layoutMeasurement.height + contentOffset.y >= contentSize.height - 20;\r\n    };\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable onPress={handlePaymentHistoryModalOpen}>\r\n                <Text style={{ fontSize: screenWidth < mobileViewBreakpoint ? 10 : 14, color: '#0A78BE', textAlign: 'center', }} underline>\r\n                    {`View Payments History`}\r\n                </Text>\r\n            </Pressable>\r\n\r\n            <Modal isOpen={paymentHistoryVisible} onClose={handlePaymentHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ backgroundColor: 'white', textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Payment History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView\r\n                            style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500 }}\r\n                            onScroll={({ nativeEvent }) => {\r\n                                if (isCloseToBottom(nativeEvent)) {\r\n                                    loadMorePayments();\r\n                                }\r\n                            }}\r\n                            scrollEventThrottle={400} // Adjust as needed\r\n                        >\r\n                            {\r\n                                Array.isArray(sortedPayments) && sortedPayments.length > 0 ?\r\n                                    displayedPayments.map((payment, index) => (\r\n                                        <View key={index} style={{\r\n                                            marginBottom: 15,\r\n                                            backgroundColor: '#F8F9FF', // Card background color\r\n                                            borderRadius: 10, // Rounded corners for the card\r\n                                            shadowColor: '#000', // Shadow color\r\n                                            shadowOffset: { width: 0, height: 2 },\r\n                                            shadowOpacity: 0.1,\r\n                                            shadowRadius: 2,\r\n                                            elevation: 3, // Elevation for Android\r\n                                            padding: 15, // Padding inside the card\r\n                                            borderBottomWidth: 1,\r\n                                            borderBottomColor: '#eee',\r\n                                        }}>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Date: </Text>\r\n                                                <Text style={{ color: '#333' }}>\r\n                                                    {formatDate(sortedPayments[sortedPayments.length - 1 - index].date)}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Value: </Text>\r\n                                                <Text style={{ color: Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString().startsWith('-') ? '#FF0000' : '#16A34A' }}>\r\n                                                    ${Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString()}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Vehicle Name: </Text>\r\n                                                <Text style={{ color: '#333' }}>{sortedPayments[sortedPayments.length - 1 - index].vehicleName}</Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Reference Number: </Text>\r\n                                                <Text style={{ color: '#333' }}>{sortedPayments[sortedPayments.length - 1 - index].vehicleRef}</Text>\r\n                                            </Text>\r\n\r\n                                        </View>\r\n\r\n                                    )) :\r\n                                    <Text style={{ fontWeight: 'bold', alignSelf: 'center', }} italic>No history to show</Text>\r\n                            }\r\n                            <View style={{ height: 20, }}>\r\n                                {loadingMore && <Spinner size='sm' color=\"#7B9CFF\" />}\r\n                            </View>\r\n\r\n                        </ScrollView>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst CustomerProfileModal = () => {\r\n    const [customerModalVisible, setCustomerModalVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n    const handleModalOpen = () => {\r\n        setCustomerModalVisible(true);\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setCustomerModalVisible(false);\r\n    }\r\n\r\n    const totalPaymentValue = selectedCustomerData.paymentsHistory\r\n        ? selectedCustomerData.paymentsHistory.reduce((sum, payment) => {\r\n            const value = Number(payment.value);\r\n            return sum + (isNaN(value) ? 0 : value);\r\n        }, 0)\r\n        : 0;\r\n\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                onPress={handleModalOpen}\r\n                style={{ width: 'fit-content', }}\r\n            >\r\n                <Text style={{ fontWeight: 700, }} underline>{`${globalCustomerFirstName} ${globalCustomerLastName}`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={customerModalVisible}\r\n                onClose={handleModalClose}\r\n                size={'lg'}\r\n\r\n            >\r\n                <Modal.Content background={'white'}>\r\n\r\n                    <Modal.Body>\r\n\r\n                        <View\r\n                            style={{\r\n                                flex: 1,\r\n                                alignItems: 'center',\r\n                            }}>\r\n\r\n                            <View style={{\r\n                                borderRadius: 10,\r\n                                backgroundColor: '#F8F9FF',\r\n                                width: screenWidth < mobileViewBreakpoint ? '100%' : '90%',\r\n                                alignItems: 'center',\r\n                                paddingBottom: 15,\r\n\r\n                            }}>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 24 : 26, color: '#0A78BE', }} selectable>\r\n                                    {`${globalCustomerFirstName} ${globalCustomerLastName}`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontSize: screenWidth < mobileViewBreakpoint ? 12 : 14, color: '#6F6F6F', width: '45%', textAlign: 'center', }} selectable>\r\n                                    {`${selectedCustomerData.textZip}, ${selectedCustomerData.textStreet}, ${selectedCustomerData.city}, ${selectedCustomerData.country}`}\r\n                                </Text>\r\n\r\n                                <View\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'row',\r\n                                        paddingTop: 20,\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center',\r\n                                    }}\r\n                                >\r\n\r\n                                    <Text style={{ fontSize: screenWidth < mobileViewBreakpoint ? 12 : 14, color: '#6F6F6F', textAlign: 'center', paddingTop: 2, }} selectable>\r\n                                        {`${selectedCustomerData.textPhoneNumber}`}\r\n                                    </Text>\r\n\r\n                                    {/* Separator */}\r\n\r\n                                    <View style={{\r\n                                        height: '100%', // Full height of the parent View\r\n                                        width: 2, // Width of the line\r\n                                        backgroundColor: '#DCDCDC', // Line color\r\n                                        marginHorizontal: 10, // Space on the sides of the line\r\n                                    }} />\r\n\r\n                                    <Hyperlink\r\n                                        linkDefault={true}\r\n                                        linkStyle={{ color: '#8A64F6', fontSize: screenWidth < mobileViewBreakpoint ? 12 : 14 }}\r\n\r\n                                    >\r\n                                        <Text style={{ textAlign: 'center' }} selectable>\r\n                                            {selectedCustomerData.textEmail}\r\n                                        </Text>\r\n                                    </Hyperlink>\r\n\r\n                                </View>\r\n\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                        <View\r\n                            style={{\r\n                                width: screenWidth < mobileViewBreakpoint ? '100%' : '90%',\r\n                                justifyContent: 'center',\r\n                                marginTop: 50,\r\n                                flexDirection: 'row',\r\n                                alignSelf: 'center',\r\n                            }}>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 20 : 24, color: '#009922', textAlign: 'center', }} selectable>\r\n                                    {`$${(totalPaymentValue).toLocaleString('en-US')}`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 12 : 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Total Payment`}\r\n                                </Text>\r\n\r\n                                <PaymentHistoryModal />\r\n\r\n\r\n                            </View>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 20 : 24, color: '#990000', textAlign: 'center', }} selectable>\r\n                                    {`$${selectedCustomerData.overBalance ? Number(selectedCustomerData.overBalance).toLocaleString('en-US') : 0}`}\r\n                                </Text>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 12 : 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Overbalance`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontSize: 14, color: 'transparent', textAlign: 'center', }} underline selectable={false}>\r\n                                    {`-----`}\r\n                                </Text>\r\n\r\n\r\n                            </View>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 20 : 24, color: '#0029A3', textAlign: 'center', }} selectable>\r\n                                    {`${selectedCustomerData.transactions ? (selectedCustomerData.transactions).length : 0}`}\r\n                                </Text>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 12 : 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Transactions`}\r\n                                </Text>\r\n\r\n                                <TransactionHistoryModal />\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                    </Modal.Body>\r\n\r\n\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst ChatMessageHeader = () => {\r\n\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const selectedVehicleData = useSelector((state) => state.selectedVehicleData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const carImageUrl = useSelector((state) => state.carImageUrl);\r\n    const dispatch = useDispatch();\r\n    const [reRenderKey, setReRenderKey] = useState(0);\r\n    const totalPriceCondition = selectedChatData.fobPrice && selectedChatData.jpyToUsd && selectedChatData.m3 && selectedChatData.freightPrice;\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\r\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice));\r\n\r\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0))) + freightCalculation;\r\n\r\n    const fobPriceDollars = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0)));\r\n\r\n    const carName = selectedChatData.carData && selectedChatData.carData.carName ? selectedChatData.carData.carName : (selectedChatData.vehicle && selectedChatData.vehicle.carName ? selectedChatData.vehicle.carName : '');\r\n\r\n    const freightPriceYen = freightCalculation / selectedChatData.currency.jpyToUsd;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setReRenderKey(reRenderKey + 1)\r\n        dispatch(setChatMessageBoxLoading(false));\r\n\r\n    }, [activeChatId]);\r\n\r\n\r\n\r\n    return (\r\n\r\n        <View style={{\r\n            flex: 1,\r\n            alignSelf: 'flex-start',\r\n            flexDirection: 'row',\r\n        }}>\r\n\r\n\r\n            {carImageUrl ? (\r\n                <FastImage\r\n                    source={{ uri: carImageUrl, priority: FastImage.priority.normal }}\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        alignSelf: 'center',\r\n                        margin: 10,\r\n                    }}\r\n                    resizeMode={FastImage.resizeMode.stretch}\r\n                />\r\n            ) : (\r\n                <View\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        alignSelf: 'center',\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginRight: 10,\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            <View style={{ alignSelf: 'center', paddingRight: 10, }}>\r\n                <Text style={{ fontWeight: 700, color: '#0A78BE', }}>{carName}</Text>\r\n\r\n                <CustomerProfileModal />\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 1, color: '#8D7777', }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.referenceNumber ? selectedChatData.carData.referenceNumber : 'Chassis N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                {/* <Text style={{ fontWeight: 700, color: \"#16A34A\", }}>{`$${selectedChatData.offerPrice ? selectedChatData.offerPrice : 0}`}</Text> */}\r\n                <TimelineStatus data={statusData} />\r\n\r\n            </View>\r\n\r\n            {/* <HorizontalTimeline /> */}\r\n\r\n            <View style={{ alignSelf: 'center', justifyContent: 'center', paddingLeft: 10, }}>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.chassisNumber ? selectedChatData.carData.chassisNumber : 'Chassis N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.modelCode ? selectedChatData.carData.modelCode : 'Model Code N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.mileage\r\n                            ? Number(selectedChatData.carData.mileage).toLocaleString('en-US')\r\n                            : 'Mileage N/A'} km\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.fuel ? selectedChatData.carData.fuel : 'Fuel N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.transmission ? selectedChatData.carData.transmission : 'Transmission N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ alignSelf: 'center', justifyContent: 'center', paddingLeft: 15, }}>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontSize: 18, }} bold>Total Price: </Text>\r\n                    <Text selectable style={{ fontSize: 18, color: \"#16A34A\", textAlign: 'right', }} bold>\r\n                        {`$${Number(totalPriceCalculation).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2, }}>\r\n                        ({`¥${Number(\r\n                            totalPriceCalculation /\r\n                            ((selectedChatData && selectedChatData.jpyToUsd) ? Number(selectedChatData.jpyToUsd) :\r\n                                (selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd) ? selectedChatData.currency.jpyToUsd :\r\n                                    0)\r\n                        ).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, }}>FOB Price: </Text>\r\n                    <Text selectable style={{ fontWeight: 700, color: \"#8D7777\", textAlign: 'right', }}>\r\n                        {`${Number(fobPriceDollars).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 2, marginLeft: 2, }}>\r\n                        ({`${(selectedChatData.fobPrice ? selectedChatData.fobPrice : Number(selectedChatData.carData && selectedChatData.carData.fobPrice ? selectedChatData.carData.fobPrice : 0)).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, }}>Freight Price: </Text>\r\n                    <Text selectable style={{ fontWeight: 700, color: \"#8D7777\", textAlign: 'right', }}>\r\n                        {`${Number(freightCalculation).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 2, marginLeft: 2, }}>\r\n                        ({`${(selectedChatData.freightPrice ? freightPriceYen : Number(selectedChatData.carData && selectedChatData.carData.freightPrice ? freightPriceYen : 0)).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, textAlign: 'right', }}>\r\n                        {`${selectedChatData.country && selectedChatData.port ? `${selectedChatData.country} / ${selectedChatData.port}` : 'N/A'}`}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, color: \"#16A34A\", }}>{selectedChatData.insurance ? 'CIF' : 'C&F'}\r\n                        {selectedChatData.inspection ? ` + Inpection[${selectedChatData.inspectionName}]` : ''}</Text>\r\n                </View>\r\n            </View>\r\n\r\n            {(chatMessagesData.length > 0 && selectedVehicleData.stockStatus == 'Reserved' &&\r\n                selectedVehicleData.reservedTo !== selectedCustomerData.textEmail) ?\r\n                null :\r\n                (<View style={{ paddingLeft: 10, paddingRight: 10, paddingTop: 2, }}>\r\n                    {(selectedChatData.stepIndicator.value == 1 || selectedChatData.stepIndicator.value == 2) &&\r\n                        <>\r\n                            <ProfitCalculator />\r\n\r\n                            <TransactionButton\r\n                                key={'Issue Proforma Invoice'}\r\n                                title={selectedChatData.stepIndicator.value == 1 ? 'Issue Proforma Invoice' : selectedChatData.stepIndicator.value == 2 ? 'Update Invoice' : ''}\r\n                                colorHoverIn={'#0f7534'}\r\n                                colorHoverOut={'#16A34A'}\r\n                                transactionValue={2}\r\n                                buttonValue={2}\r\n                                iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />\r\n\r\n                            <PreviewInvoice />\r\n\r\n                            <View style={{ flexDirection: 'row' }}>\r\n                                <Text style={{ fontWeight: 700, fontSize: 18 }}>Final Price: </Text>\r\n                                <Text selectable style={{ fontWeight: 700, fontSize: 18, color: \"#FF0000\", textAlign: 'right' }}>\r\n                                    {`$${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2 }}>\r\n                                    ({`¥${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount && selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd ? (Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) / Number(selectedChatData.currency.jpyToUsd)) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                                </Text>\r\n                            </View>\r\n                        </>\r\n                    }\r\n\r\n                    {(selectedChatData.stepIndicator.value == 3) &&\r\n\r\n\r\n                        (\r\n                            <View style={{ flexDirection: 'row', paddingRight: 10, paddingTop: 2, }}>\r\n                                {\r\n                                    selectedChatData.isCancelled == true && (\r\n                                        <View style={{ flexDirection: 'row', paddingRight: 10, }}>\r\n                                            <View style={{ paddingLeft: 10, }}>\r\n                                                <ReopenTransaction />\r\n                                            </View>\r\n                                        </View>\r\n                                    )\r\n                                }\r\n                                <View style={{ paddingLeft: 10, }}>\r\n                                    {!selectedChatData.isCancelled && <ProfitCalculator />}\r\n\r\n                                    {!selectedChatData.isCancelled && <TransactionButton\r\n                                        key={'Input Payment'}\r\n                                        title={'Input Payment'}\r\n                                        colorHoverOut={'#FF0000'}\r\n                                        colorHoverIn={'#800101'}\r\n                                        transactionValue={3}\r\n                                        buttonValue={4}\r\n                                        iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />}\r\n\r\n                                    <PreviewInvoice />\r\n\r\n                                    {!selectedChatData.isCancelled && <View style={{ flexDirection: 'row' }}>\r\n                                        <Text style={{ fontWeight: 700, fontSize: 18 }}>Final Price: </Text>\r\n                                        <Text selectable style={{ fontWeight: 700, fontSize: 18, color: \"#FF0000\", textAlign: 'right' }}>\r\n                                            {`$${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                        </Text>\r\n                                        <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2 }}>\r\n                                            ({`¥${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount && selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd ? (Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) / Number(selectedChatData.currency.jpyToUsd)) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                                        </Text>\r\n                                    </View>}\r\n                                </View>\r\n\r\n                                <View style={{ paddingLeft: 10, }}>\r\n\r\n                                    {!selectedChatData.isCancelled && <TransactionButton\r\n                                        key={'Issue Proforma Invoice'}\r\n                                        title={selectedChatData.stepIndicator.value == 1 ? 'Issue Proforma Invoice' : 'Update Invoice'}\r\n                                        colorHoverIn={'#0f7534'}\r\n                                        colorHoverOut={'#16A34A'}\r\n                                        transactionValue={2}\r\n                                        buttonValue={2}\r\n                                        iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />}\r\n\r\n                                    {!selectedChatData.isCancelled && <ExtendDueDateButton />}\r\n\r\n                                    {!selectedChatData.isCancelled && <CancelTransaction />}\r\n\r\n                                    {!selectedChatData.isCancelled && <View style={{ flexDirection: 'row', }}>\r\n                                        {invoiceData && invoiceData.bankInformations && invoiceData.bankInformations.dueDate &&\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14, }}>Due Date: </Text>\r\n                                                <Text selectable style={{ fontWeight: 700, fontSize: 14, textAlign: 'right', color: '#FF0000', }}>\r\n                                                    {\r\n                                                        invoiceData.bankInformations.dueDate\r\n                                                            ? new Date(invoiceData.bankInformations.dueDate).toLocaleDateString(undefined, {\r\n                                                                year: 'numeric',\r\n                                                                month: 'long',\r\n                                                                day: 'numeric',\r\n                                                            })\r\n                                                            : 'Invalid Date'\r\n                                                    }\r\n                                                </Text>\r\n                                            </>}\r\n                                    </View>}\r\n\r\n                                </View>\r\n                            </View>)\r\n                    }\r\n                </View>)\r\n\r\n            }\r\n\r\n            <GenerateCustomInvoice />\r\n\r\n            <TransactionModal />\r\n        </View>\r\n\r\n    );\r\n};\r\n\r\n\r\nconst ReadByListModal = ({ userEmail, handleReadByListModalClose }) => {\r\n\r\n    const readByListModalVisible = useSelector((state) => state.readByListModalVisible)\r\n    const selectedChatData = useSelector((state) => state.selectedChatData)\r\n    // const [email, setEmail] = useState(projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '');\r\n\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={readByListModalVisible}\r\n            onClose={() => handleReadByListModalClose()}\r\n            useRNModal\r\n            size={'xs'}\r\n        >\r\n            <Modal.Content borderRadius={0} style={{ padding: 15, backgroundColor: '#f8f8f8', shadowColor: '#000', shadowOffset: { width: 0, height: 2 }, shadowOpacity: 0.25, shadowRadius: 3.84, elevation: 5 }}>\r\n                <Modal.CloseButton />\r\n\r\n                <Modal.Header style={{ fontSize: 22, fontWeight: '600', textAlign: 'center', color: '#333', }}>Read List</Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    {\r\n                        selectedChatData.readBy.length > 0 ? (\r\n                            <ScrollView style={{ maxHeight: 250, borderRadius: 10 }}>\r\n                                {/* Sort and map over the readBy list */}\r\n                                {\r\n                                    [...selectedChatData.readBy]\r\n                                        .sort((a, b) => a === email ? -1 : b === email ? 1 : 0)\r\n                                        .map(item => (\r\n                                            <View key={item} style={{ flex: 1, flexDirection: 'row', alignItems: 'center', marginVertical: 8, borderBottomWidth: 0.5, borderColor: '#ddd', paddingBottom: 8 }}>\r\n                                                {item === 'RMJ-Bot' ?\r\n                                                    <FontAwesome5 name=\"robot\" size={24} color=\"#4A90E2\" style={{ marginRight: 12 }} /> :\r\n                                                    <FontAwesome name=\"user-circle\" size={24} color=\"#4A90E2\" style={{ marginRight: 12 }} />}\r\n                                                <View style={{ flex: 1 }}> {/* Ensure text has its own block and can wrap */}\r\n                                                    <Text style={{ color: '#555', flexWrap: 'wrap' }}>{email === item ? 'You' : item}</Text>\r\n                                                </View>\r\n                                            </View>\r\n                                        ))\r\n                                }\r\n                            </ScrollView>\r\n                        ) : (\r\n                            <Text style={{ textAlign: 'center', color: 'grey', fontSize: 16 }}>No one has read this message yet.</Text>\r\n                        )\r\n                    }\r\n                </Modal.Body>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n}\r\n\r\nconst ImagePreviewModal = ({ isVisible, onClose, imageUrl }) => {\r\n    return (\r\n        <Modal isOpen={isVisible} onClose={onClose} size=\"full\" useRNModal>\r\n            <Modal.Content\r\n                style={{\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                    width: '80%',\r\n                    height: '80%',\r\n                    alignSelf: 'center',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                <Modal.CloseButton />\r\n                <FastImage\r\n                    source={{ uri: imageUrl, priority: FastImage.priority.normal }}\r\n                    style={{ width: '100%', height: '100%', borderRadius: 10 }}\r\n                    resizeMode={FastImage.resizeMode.contain}\r\n                />\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n\r\nconst HoverablePressable = ({ url, printComponent }) => {\r\n    const [isHoveredDownload, setIsHoveredDownload] = useState(false);\r\n    const [isHoveredPrint, setIsHoveredPrint] = useState(false);\r\n    const baseStyle = {\r\n        marginRight: 10,\r\n        borderRadius: 16,\r\n        borderWidth: 1,\r\n        borderColor: 'white',\r\n        width: 26,\r\n        height: 26,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    };\r\n\r\n    const hoverStyle = {\r\n        backgroundColor: '#ddd', // Example hover style\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip label=\"Download\" openDelay={200} bgColor={'white'} _text={{ color: '#1C2B33', }}>\r\n                <Pressable\r\n                    style={{\r\n                        marginRight: 8,\r\n                        borderRadius: 16,\r\n                        width: 32,\r\n                        height: 32,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        backgroundColor: isHoveredDownload ? '#424649' : 'transparent',\r\n                    }}\r\n                    onPress={async () => {\r\n                        await Linking.openURL(url);\r\n                    }}\r\n                    onMouseEnter={() => setIsHoveredDownload(true)}\r\n                    onMouseLeave={() => setIsHoveredDownload(false)}\r\n                >\r\n                    <MaterialCommunityIcons name=\"download\" size={20} color={'#F1F1F1'} />\r\n                </Pressable>\r\n            </Tooltip>\r\n\r\n            {/* <Tooltip label=\"Print\" openDelay={200} bgColor={'white'} _text={{ color: '#1C2B33', }}>\r\n                <Pressable\r\n                    style={{\r\n                        marginRight: 8,\r\n                        borderRadius: 16,\r\n                        width: 32,\r\n                        height: 32,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        backgroundColor: isHoveredPrint ? '#424649' : 'transparent',\r\n                    }}\r\n                    onMouseEnter={() => setIsHoveredPrint(true)}\r\n                    onMouseLeave={() => setIsHoveredPrint(false)}\r\n                    onPress={printComponent}\r\n                >\r\n                    <MaterialCommunityIcons name=\"printer\" size={20} color={'#F1F1F1'} />\r\n                </Pressable>\r\n            </Tooltip> */}\r\n        </>\r\n    );\r\n};\r\n\r\nconst DocumentPreviewModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const selectedFileUrl = useSelector((state) => state.selectedFileUrl);\r\n    const pdfViewerModalVisible = useSelector((state) => state.pdfViewerModalVisible);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const [iframeKey, setIframeKey] = useState(0);\r\n\r\n\r\n    const url = 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/ChatFiles%2Fchat_2023090239_marcvan14%40gmail.com%2FC-HUB_01312024153002.887%2FDAILY%20REPORT%202024-01-29.pdf?alt=media&token=88b7be9b-17ef-48d3-b5b3-6f7f0d317b7c'\r\n    const urlDocx = 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/ChatFiles%2Fchat_2023090239_marcvan14%40gmail.com%2FC-HUB_01312024170117.701%2FDAILY%20REPORT%202024-01-29.docx?alt=media&token=9bf45632-e192-45bf-8b40-9fd5cdb9368e';\r\n    const [isLoading, setLoading] = useState(true); // Loading state\r\n\r\n    // console.log(`https://docs.google.com/viewer?url=${encodeURIComponent(urlDocx)}&embedded=true`);\r\n\r\n\r\n    const handleIframeLoad = () => {\r\n        setLoading(false); // Set loading to false when iframe content is loaded\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n\r\n        dispatch(setPdfViewerModalVisible(false))\r\n        dispatch(setSelectedFileUrl(''))\r\n        setLoading(true);\r\n        globalSelectedFileType = '';\r\n        globalSelectedPDFUrl = '';\r\n    }\r\n\r\n    const printIframe = () => {\r\n        // const iframe = document.getElementById('documentIframe');\r\n        // iframe.contentWindow.print();\r\n        const printWindow = window.open(`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`, '_blank');\r\n        printWindow.focus();\r\n        printWindow.print();\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const timeout = setTimeout(() => {\r\n\r\n            if (isLoading) {\r\n                console.log(\"Iframe is taking too long to load. Attempting to reload.\");\r\n                console.log(\"Current URL:\", selectedFileUrl);\r\n                console.log(\"Current Global URL:\", globalSelectedPDFUrl);\r\n\r\n                setIsLoading(false);\r\n                setIframeKey(prevKey => prevKey + 1);\r\n                dispatch(setSelectedFileUrl(globalSelectedPDFUrl));\r\n\r\n            }\r\n\r\n        }, 5000); // Timeout set to 5 seconds\r\n\r\n        return () => clearTimeout(timeout);\r\n\r\n    }, [isLoading,]);\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={pdfViewerModalVisible}\r\n            onClose={() => {\r\n                handleModalClose();\r\n            }\r\n            } size=\"xl\">\r\n            <Modal.Content>\r\n                {globalSelectedFileType !== 'pdf' ?\r\n\r\n                    (<>\r\n                        {isLoading && (\r\n                            <View style={{\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                left: 0,\r\n                                right: 0,\r\n                                position: 'absolute',\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                height: '700px'  // Same height as the iframe for consistent layout\r\n                            }}>\r\n                                <Spinner\r\n                                    animating\r\n                                    size=\"lg\"\r\n                                    color={'#7B9CFF'}\r\n                                />\r\n                            </View>\r\n                        )}\r\n                        {selectedFileUrl !== '' &&\r\n                            <>\r\n                                {!isLoading &&\r\n                                    <View style={{ flexDirection: 'row', width: '100%', height: 57, borderRadius: 0, backgroundColor: '#323639', justifyContent: 'flex-end', alignItems: 'center', }}>\r\n                                        <HoverablePressable url={globalSelectedPDFUrl} printComponent={printIframe} />\r\n                                    </View>\r\n                                }\r\n\r\n                                <iframe\r\n                                    key={iframeKey}\r\n                                    src={`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`}\r\n                                    id='documentIframe'\r\n                                    style={{ width: '100%', height: '700px' }}\r\n                                    title=\"Document Viewer\"\r\n                                    onLoad={() => {\r\n                                        handleIframeLoad();\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </>\r\n                    )\r\n\r\n                    : (\r\n                        <>\r\n                            {isLoading && (\r\n                                <View style={{\r\n                                    top: 0,\r\n                                    bottom: 0,\r\n                                    left: 0,\r\n                                    right: 0,\r\n                                    position: 'absolute',\r\n                                    justifyContent: 'center',\r\n                                    alignItems: 'center',\r\n                                    height: '700px'  // Same height as the iframe for consistent layout\r\n                                }}>\r\n                                    <Spinner\r\n                                        animating\r\n                                        size=\"lg\"\r\n                                        color={'#7B9CFF'}\r\n                                    />\r\n                                </View>\r\n                            )}\r\n                            {selectedFileUrl !== '' &&\r\n                                (\r\n                                    screenWidth < mobileViewBreakpoint ?\r\n                                        (<>\r\n                                            {!isLoading &&\r\n                                                <View style={{ flexDirection: 'row', width: '100%', height: 57, borderRadius: 0, backgroundColor: '#323639', justifyContent: 'flex-end', alignItems: 'center', }}>\r\n\r\n                                                    <HoverablePressable url={globalSelectedPDFUrl} printComponent={printIframe} />\r\n                                                </View>\r\n                                            }\r\n\r\n                                            <iframe\r\n                                                key={iframeKey}\r\n                                                src={`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`}\r\n                                                id='mobilePdfIframe'\r\n                                                style={{ width: '100%', height: '700px' }}\r\n                                                title=\"PDF Viewer\"\r\n                                                onLoad={handleIframeLoad}\r\n                                            />\r\n                                        </>) :\r\n                                        (<iframe\r\n                                            src={selectedFileUrl}\r\n                                            style={{ width: '100%', height: '700px' }}\r\n                                            title=\"PDF Viewer\"\r\n                                            onLoad={handleIframeLoad} // Event when iframe has loaded\r\n                                        />)\r\n                                )\r\n                            }\r\n                        </>\r\n                    )\r\n\r\n\r\n                }\r\n\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n\r\n};\r\n\r\nconst ChatMessageBox = ({ activeButtonValue, userEmail }) => {\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const loadMoreMessagesLoading = useSelector((state) => state.loadMoreMessagesLoading);\r\n    const noMoreMessagesData = useSelector((state) => state.noMoreMessagesData);\r\n    const [isEyeHovered, setIsEyeHovered] = useState(false);\r\n    const flatListRef = useRef();\r\n    const [hoveredImageIndex, setHoveredImageIndex] = useState(null);\r\n\r\n    const [selectedImageIndex, setSelectedImageIndex] = useState(null);\r\n    const [isPreviewVisible, setIsPreviewVisible] = useState(false);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const screenHeight = Dimensions.get('window').height;\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        // Store the current path\r\n        const handlePopState = () => {\r\n            if (screenWidth < mobileViewBreakpoint && activeChatId !== '') {\r\n                dispatch(setMessageTextInputValue(''));\r\n                dispatch(setChatMessagesData([]));\r\n                dispatch(setActiveChatId(''));\r\n                navigate('/top/chat-messages');\r\n            }\r\n        };\r\n\r\n        // Add event listener when component mounts or when dependencies change\r\n        window.addEventListener('popstate', handlePopState);\r\n\r\n        // Cleanup function to remove event listener when component unmounts or dependencies change\r\n        return () => {\r\n            window.removeEventListener('popstate', handlePopState);\r\n        };\r\n\r\n    }, []);\r\n\r\n    const openPreview = (index) => {\r\n        setSelectedImageIndex(index);\r\n        setIsPreviewVisible(true);\r\n    };\r\n\r\n    const closePreview = () => {\r\n        setIsPreviewVisible(false);\r\n        setSelectedImageIndex(null);\r\n    };\r\n\r\n    const handleImageMessageMouseEnter = (index) => {\r\n        setHoveredImageIndex(index);\r\n    };\r\n\r\n    const handleImageMessageMouseLeave = () => {\r\n        setHoveredImageIndex(null);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [read, setRead] = useState(selectedChatData.read);\r\n\r\n    const handleReadByListModalOpen = () => {\r\n        dispatch(setReadByListModalVisible(true));\r\n    };\r\n\r\n    const handleReadByListModalClose = () => {\r\n        dispatch(setReadByListModalVisible(false));\r\n    };\r\n\r\n    const animatedValue = useRef(new Animated.Value(0)).current;\r\n\r\n    useEffect(() => {\r\n        Animated.loop(\r\n            Animated.sequence([\r\n                Animated.timing(animatedValue, {\r\n                    toValue: 1,\r\n                    duration: 2000,\r\n                    useNativeDriver: true\r\n                }),\r\n                Animated.timing(animatedValue, {\r\n                    toValue: 0,\r\n                    duration: 2000,\r\n                    useNativeDriver: true\r\n                })\r\n            ])\r\n        ).start();\r\n    }, [selectedChatData, chatMessagesData, animatedValue]);\r\n\r\n    const borderColor = animatedValue.interpolate({\r\n        inputRange: [0, 0.25, 0.5, 0.75, 1],\r\n        outputRange: [\r\n            'rgb(255, 100, 100)', // Red\r\n            'rgb(100, 255, 100)', // Green\r\n            'rgb(100, 100, 255)', // Blue\r\n            'rgb(255, 255, 100)', // Yellow\r\n            'rgb(255, 100, 255)'  // Magenta\r\n        ]\r\n    });\r\n\r\n    const renderFooter = () => {\r\n        return (\r\n            <>\r\n                {!noMoreMessagesData && (\r\n                    <View style={{ paddingVertical: 20, height: 60, }}>\r\n                        {loadMoreMessagesLoading && (\r\n                            <Spinner\r\n                                animating\r\n                                size=\"sm\"\r\n                                color={'#7B9CFF'}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </>\r\n\r\n        );\r\n    };\r\n\r\n    const handleLoadMoreMessages = async () => {\r\n        dispatch(setLoadMoreMessagesLoading(true));\r\n        dispatch(setNoMoreMessagesData(false));\r\n\r\n        let nextQuery;\r\n        if (!globalMessagesLastVisible) {\r\n            // No more data to load or globalLastVisible is undefined\r\n            dispatch(setLoadMoreMessagesLoading(false));\r\n            dispatch(setNoMoreMessagesData(true));\r\n        }\r\n\r\n        else {\r\n            dispatch(setLoadMoreMessagesLoading(true));\r\n            dispatch(setNoMoreMessagesData(false));\r\n\r\n            nextQuery = query(\r\n                collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(globalMessagesLastVisible),\r\n                limit(10)\r\n            );\r\n            try {\r\n                const unsubscribe = onSnapshot(nextQuery, (snapshot) => {\r\n                    if (snapshot.empty) {\r\n                        // Handle the case when there's no more data\r\n                        console.log(\"No more data to load\");\r\n                        setTimeout(() => {\r\n                            dispatch(setLoadMoreMessagesLoading(false));\r\n                            dispatch(setNoMoreMessagesData(true));\r\n                            globalMessagesLastVisible = null;\r\n                        }, 0);  // Delay setting loading and no more data flags\r\n                        return;\r\n                    }\r\n\r\n                    const chatsData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        chatsData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n\r\n                    // Append new data to the existing list\r\n\r\n                    setTimeout(() => {\r\n                        dispatch(setChatMessagesData([...chatMessagesData, ...chatsData]));\r\n                        dispatch(setLoadMoreMessagesLoading(false));\r\n                        globalMessagesLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n                    }, 0);\r\n\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data from Firebase:', error);\r\n                setTimeout(() => dispatch(setLoadMoreMessagesLoading(false)), 0);  // Ensure loading is set to false even if there's an error\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const updateChatToRead = async () => {\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", activeChatId);\r\n        if (email !== '') {\r\n            try {\r\n\r\n                await updateDoc(docRef, {\r\n                    read: true,\r\n                    readBy: arrayUnion(email),\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (activeChatId == selectedChatData.id) {\r\n            if (selectedChatData.stepIndicator.value !== activeButtonValue && activeButtonValue !== 0) {\r\n                dispatch(setChatMessagesData([]));\r\n                dispatch(setMessageTextInputValue(''));\r\n                dispatch(setActiveChatId(''));\r\n            }\r\n            else {\r\n                updateChatToRead();\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }, [selectedChatData]);\r\n\r\n    const handlePreviewInvoiceModalOpen = () => {\r\n        dispatch(setPreviewInvoiceVisible(true));\r\n    };\r\n\r\n    const formatDate = (timestamp) => {\r\n        // Parse the original timestamp\r\n        // Expected format: \"2024/01/15 at 12:17:50\"\r\n        const parts = timestamp.match(/(\\d{4})\\/(\\d{2})\\/(\\d{2}) at (\\d{2}):(\\d{2}):(\\d{2})/);\r\n        if (!parts) return timestamp; // Return original if parsing fails\r\n\r\n        // Create a new Date object\r\n        const date = new Date(parts[1], parts[2] - 1, parts[3], parts[4], parts[5], parts[6]);\r\n\r\n        // Format month names\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n        // Convert to 12-hour format and determine AM or PM\r\n        const hours = date.getHours();\r\n        const isPM = hours >= 12;\r\n        const formattedHours = hours % 12 || 12; // Convert 0 to 12 for 12 AM\r\n        const amPm = isPM ? 'PM' : 'AM';\r\n\r\n        // Construct the new format with year at the beginning\r\n        return `${date.getFullYear().toString().substr(-2)} ${months[date.getMonth()]} ${date.getDate()}, ${formattedHours}:${date.getMinutes().toString().padStart(2, '0')} ${amPm}`;\r\n    };\r\n\r\n    const extractUsernameFromEmail = (email) => {\r\n        const [username] = email.split('@');\r\n        return username;\r\n    };\r\n\r\n\r\n    const breakUrl = (url, maxUrlLength = 30) => {\r\n        let brokenUrl = '';\r\n        while (url.length > 0) {\r\n            brokenUrl += url.substring(0, maxUrlLength);\r\n            if (url.length > maxUrlLength) {\r\n                brokenUrl += '\\u200B'; // Zero-width space\r\n            }\r\n            url = url.substring(maxUrlLength);\r\n        }\r\n        return brokenUrl;\r\n    };\r\n\r\n    const isUrl = (text) => {\r\n        // Simple URL check\r\n        const urlPattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n        return !!urlPattern.test(text);\r\n    };\r\n\r\n    const handleLinkPress = (url) => {\r\n        Linking.canOpenURL(url).then(supported => {\r\n            if (supported) {\r\n                Linking.openURL(url);\r\n            } else {\r\n                console.log(\"Don't know how to open URI: \" + url);\r\n            }\r\n        });\r\n    };\r\n\r\n    const cleanUrl = (url) => {\r\n        // Removing Zero Width Space and other potential invisible characters\r\n        return url.replace(/[\\u200B-\\u200D\\uFEFF]/g, '');\r\n    };\r\n\r\n\r\n    const renderItemText = (isGlobalCustomerSender, text) => {\r\n        const urlPattern = new RegExp('(https?:\\\\/\\\\/[^\\\\s]+)', 'g');\r\n        let segments = text.split(urlPattern);\r\n\r\n        const insertBreaks = (str, n) => {\r\n            // Inserts a zero-width space every 'n' characters in 'str'\r\n            let result = '';\r\n            while (str.length > 0) {\r\n                result += str.substring(0, n) + '\\u200B';\r\n                str = str.substring(n);\r\n            }\r\n            return result;\r\n        };\r\n\r\n        return segments.map((segment, index) => {\r\n            const segmentWithBreaks = segment.length > 30 && !segment.includes(' ') ? insertBreaks(segment, 30) : segment;\r\n\r\n            if (isUrlForText(segment)) {\r\n                // Apply breaks for long URLs\r\n                return (\r\n                    <Pressable key={index} onPress={() => handleLinkPress(segment)}>\r\n                        <Text\r\n                            selectable\r\n                            style={{\r\n                                fontWeight: '400',\r\n                                color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                fontSize: 16,\r\n                                flexShrink: 1,\r\n                                textDecorationLine: 'underline',\r\n                                flexWrap: 'wrap',\r\n                            }}\r\n                        >\r\n                            {segmentWithBreaks}\r\n                        </Text>\r\n                    </Pressable>\r\n                );\r\n            } else {\r\n                return (\r\n                    <Text\r\n                        selectable\r\n                        key={index}\r\n                        style={{\r\n                            fontWeight: '400',\r\n                            color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                            fontSize: screenWidth < mobileViewBreakpoint ? 14 : 16,\r\n                            flexShrink: 1,\r\n                            flexWrap: 'wrap',\r\n                        }}\r\n                    >\r\n                        {segmentWithBreaks}\r\n                    </Text>\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n    const getFileIcon = (fileName) => {\r\n        const iconSize = 24;\r\n        const lowerFileName = fileName.toLowerCase();\r\n\r\n        if (lowerFileName.endsWith('.pdf')) {\r\n            return <MaterialIcons name={'picture-as-pdf'} size={iconSize} color=\"#fca19a\" />;\r\n        }\r\n        // Add more conditions for other file types as needed\r\n        // Example for .docx files\r\n        if (lowerFileName.endsWith('.docx') || lowerFileName.endsWith('.doc')) {\r\n            return <MaterialCommunityIcons name={'microsoft-word'} size={iconSize} color=\"#7B9CFF\" />;\r\n        }\r\n        if (lowerFileName.endsWith('.xlsx') || lowerFileName.endsWith('.xls') || lowerFileName.endsWith('.csv')) {\r\n            return <MaterialCommunityIcons name={'microsoft-excel'} size={iconSize} color=\"#6db375\" />;\r\n        }\r\n\r\n        if (lowerFileName.endsWith('.rar') || lowerFileName.endsWith('.zip')) {\r\n            return <FastImage\r\n                source={{ uri: require('../../assets/rar_icon.png'), priority: FastImage.priority.high }}\r\n                style={{\r\n                    width: iconSize,\r\n                    height: iconSize,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.cover}\r\n            />;\r\n        }\r\n        // Default icon if no specific type is matched\r\n        return <MaterialIcons name=\"insert-drive-file\" size={iconSize} color=\"#b3afaf\" />;\r\n    };\r\n\r\n    const isUrlForText = (text) => {\r\n        const urlPattern = new RegExp('^(http://www\\\\.|https://www\\\\.|http://|https://)[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(/.*)?$');\r\n        return urlPattern.test(text);\r\n    }\r\n\r\n    const renderItem = ({ item, index }) => {\r\n        const isGlobalCustomerSender = item.sender === globalCustomerId;\r\n        const isLastMessage = index === 0; // Since the list is inverted, the first item is actually the last message\r\n        const isHovered = hoveredImageIndex === index;\r\n        const textFontSize = screenWidth < mobileViewBreakpoint ? 14 : 16;\r\n\r\n        return (\r\n            <View style={{\r\n                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                width: '100%',\r\n                height: '100%',\r\n                alignSelf: isGlobalCustomerSender ? 'flex-start' : 'flex-end',\r\n                marginVertical: 4,\r\n                maxWidth: screenWidth < mobileViewBreakpoint ? '80%' : '60%', // Max width for long messages\r\n                // borderWidth: 1,\r\n                // borderColor: 'red',\r\n            }}>\r\n                {item.messageType == 'IssuedInvoice' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <Animated.View style={{\r\n                                padding: 7,\r\n                                flex: 1,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                borderWidth: 3,\r\n                                borderColor: borderColor,\r\n                            }}>\r\n                                <Pressable onPress={handlePreviewInvoiceModalOpen}>\r\n                                    <Text underline selectable style={{\r\n                                        fontWeight: 400,\r\n                                        color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                        fontSize: textFontSize,\r\n                                    }}>\r\n                                        {item.text.trim()}\r\n                                    </Text>\r\n                                </Pressable>\r\n                            </Animated.View>\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                left: -60,\r\n                                top: '50%',\r\n                                bottom: '50%',\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                            }}>\r\n                                {/* Display read status text outside of the message bubble */}\r\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n\r\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Pressable\r\n                                            focusable={false}\r\n                                            onHoverIn={() => setIsEyeHovered(true)}\r\n                                            onHoverOut={() => setIsEyeHovered(false)}\r\n                                            onPress={handleReadByListModalOpen}\r\n                                        >\r\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                        </Pressable>\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: '#888c96',\r\n                            fontSize: screenWidth < mobileViewBreakpoint ? 9 : 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n                    </View>\r\n                }\r\n\r\n\r\n                {item.messageType == 'InputPayment' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <Animated.View style={{\r\n                                padding: 7,\r\n                                flex: 1,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                borderWidth: 3,\r\n                                borderColor: borderColor,\r\n                            }}>\r\n                                <Text selectable style={{\r\n                                    fontWeight: 400,\r\n                                    color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                    fontSize: textFontSize,\r\n                                }}>\r\n                                    {item.text.trim()}\r\n                                </Text>\r\n                            </Animated.View>\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                left: -60,\r\n                                top: '50%',\r\n                                bottom: '50%',\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                            }}>\r\n                                {/* Display read status text outside of the message bubble */}\r\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n\r\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Pressable\r\n                                            focusable={false}\r\n                                            onHoverIn={() => setIsEyeHovered(true)}\r\n                                            onHoverOut={() => setIsEyeHovered(false)}\r\n                                            onPress={handleReadByListModalOpen}\r\n                                        >\r\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                        </Pressable>\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp, sender email, IP, and country */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n                    </View>\r\n                }\r\n\r\n\r\n                {!item.messageType && item.file && item.file.type == 'attachment' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        {item.text && item.text !== '' &&\r\n                            <View style={{\r\n                                marginBottom: 5,\r\n                                padding: 10,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                flexShrink: 1,\r\n                            }}>\r\n                                {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                            </View>\r\n                        }\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    marginBottom: 5,\r\n                                    padding: 10,\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    <Pressable\r\n                                        onPress={() => {\r\n                                            if (item.file.name.endsWith('.pdf')) {\r\n                                                globalSelectedFileType = 'pdf'\r\n                                                dispatch(setPdfViewerModalVisible(true));\r\n                                                dispatch(setSelectedFileUrl(item.file.url));\r\n                                                globalSelectedPDFUrl = item.file.url;\r\n\r\n                                            }\r\n                                            else {\r\n                                                globalSelectedFileType = 'not-pdf'\r\n                                                dispatch(setPdfViewerModalVisible(true));\r\n                                                dispatch(setSelectedFileUrl(item.file.url));\r\n                                                globalSelectedPDFUrl = item.file.url;\r\n\r\n\r\n\r\n                                            }\r\n                                            // dispatch(setSelectedFileUrl(item.file.url));\r\n                                            // // globalSelectedPDFUrl = item.file.url\r\n                                            // dispatch(setPdfViewerModalVisible(true));\r\n\r\n                                        }}\r\n                                        style={{ flexDirection: 'row', }}\r\n                                    >\r\n                                        <View style={{ marginRight: 5, }}>\r\n                                            {getFileIcon(item.file.name)}\r\n                                        </View>\r\n\r\n                                        <Text underline selectable style={{\r\n                                            fontWeight: 400,\r\n                                            color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                            fontSize: textFontSize,\r\n                                        }}>\r\n                                            {item.file.name.trim()}\r\n                                        </Text>\r\n                                    </Pressable>\r\n                                </View>\r\n                            </View>\r\n\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                left: -60,\r\n                                top: '50%',\r\n                                bottom: '50%',\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                            }}>\r\n                                {/* Display read status text outside of the message bubble */}\r\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n\r\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Pressable\r\n                                            focusable={false}\r\n                                            onHoverIn={() => setIsEyeHovered(true)}\r\n                                            onHoverOut={() => setIsEyeHovered(false)}\r\n                                            onPress={handleReadByListModalOpen}\r\n                                        >\r\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                        </Pressable>\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: '#888c96',\r\n                            fontSize: screenWidth < mobileViewBreakpoint ? 9 : 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n\r\n                    </View>}\r\n\r\n\r\n                {!item.messageType && item.file && item.file.type == 'image' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        {item.text && item.text !== '' &&\r\n                            <View style={{\r\n                                marginBottom: 5,\r\n                                padding: 10,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                flexShrink: 1,\r\n                            }}>\r\n                                {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                            </View>\r\n                        }\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    padding: 0,\r\n                                    borderRadius: 10,\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    <Pressable\r\n                                        onMouseEnter={() => handleImageMessageMouseEnter(index)}\r\n                                        onMouseLeave={handleImageMessageMouseLeave}\r\n                                        onPress={() => openPreview(index)}\r\n                                        style={{\r\n                                            position: 'relative', // Ensure relative positioning for the overlay\r\n                                            width: 250,\r\n                                            height: 250,\r\n                                            alignSelf: 'center',\r\n                                        }}\r\n                                    >\r\n                                        <FastImage\r\n                                            source={{ uri: item.file.url, priority: FastImage.priority.normal }}\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                height: '100%',\r\n                                                borderRadius: 10,\r\n                                                borderWidth: 1,\r\n                                                borderColor: '#DADDE1',\r\n                                            }}\r\n                                            resizeMode={FastImage.resizeMode.contain}\r\n                                        />\r\n                                        {isHovered && (\r\n                                            <View style={{\r\n                                                ...StyleSheet.absoluteFillObject, // Make overlay cover the entire image\r\n                                                backgroundColor: 'rgba(0, 0, 0, 0.1)', // Semi-transparent black\r\n                                                borderRadius: 10, // Match the border radius of the image\r\n                                            }} />\r\n                                        )}\r\n                                    </Pressable>\r\n                                </View>\r\n                            </View>\r\n\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                left: -60,\r\n                                top: '50%',\r\n                                bottom: '50%',\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                            }}>\r\n                                {/* Display read status text outside of the message bubble */}\r\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n\r\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Pressable\r\n                                            focusable={false}\r\n                                            onHoverIn={() => setIsEyeHovered(true)}\r\n                                            onHoverOut={() => setIsEyeHovered(false)}\r\n                                            onPress={handleReadByListModalOpen}\r\n                                        >\r\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                        </Pressable>\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: '#888c96',\r\n                            fontSize: screenWidth < mobileViewBreakpoint ? 9 : 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n\r\n                    </View>}\r\n\r\n                {!item.messageType && !item.file &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    padding: 10,\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                                </View>\r\n                            </View>\r\n\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                left: -60,\r\n                                top: '50%',\r\n                                bottom: '50%',\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                            }}>\r\n                                {/* Display read status text outside of the message bubble */}\r\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n\r\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Pressable\r\n                                            focusable={false}\r\n                                            onHoverIn={() => setIsEyeHovered(true)}\r\n                                            onHoverOut={() => setIsEyeHovered(false)}\r\n                                            onPress={handleReadByListModalOpen}\r\n                                        >\r\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                        </Pressable>\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: '#888c96',\r\n                            fontSize: screenWidth < mobileViewBreakpoint ? 9 : 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n                    </View>}\r\n\r\n            </View>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        chatMessagesData.length > 0 ? (\r\n            <>\r\n                <FlatList\r\n                    style={{ height: 100 }}\r\n                    ref={flatListRef}\r\n                    data={chatMessagesData}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id}\r\n                    initialNumToRender={10} // Adjust based on your average message size and performance\r\n                    maxToRenderPerBatch={10}\r\n                    windowSize={100}\r\n                    onEndReachedThreshold={0.05}\r\n                    ListFooterComponent={renderFooter}\r\n                    onEndReached={handleLoadMoreMessages}\r\n                    inverted\r\n                />\r\n                {selectedImageIndex !== null && (\r\n                    <ImagePreviewModal\r\n                        isVisible={isPreviewVisible}\r\n                        onClose={closePreview}\r\n                        imageUrl={chatMessagesData[selectedImageIndex].file.url}\r\n                    />\r\n                )}\r\n                <ReadByListModal userEmail={userEmail} handleReadByListModalClose={handleReadByListModalClose} />\r\n            </>\r\n        ) : null\r\n    );\r\n};\r\n\r\n\r\nconst ReservedStatusViewForHeader = () => {\r\n\r\n    return (\r\n        <View style={{\r\n            zIndex: 999,\r\n            flex: 1,\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: '#FFFFCC',\r\n            padding: 10,\r\n            borderRadius: 5,\r\n            opacity: 0.7, // Set border color\r\n        }}>\r\n            <Text style={{ color: '#FF0000', fontSize: 16, fontWeight: 'bold', textAlign: 'center', }} selectable={false}>The vehicle is reserved to a customer</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst CancelledViewForHeader = () => {\r\n\r\n    return (\r\n        <View style={{\r\n            zIndex: 999,\r\n            flex: 1,\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: 'red',\r\n            padding: 10,\r\n            borderRadius: 5,\r\n            opacity: 0.7, // Set border color\r\n        }}>\r\n            <Text style={{ color: 'white', fontSize: 16, fontWeight: 'bold', textAlign: 'center', }} selectable={false}>Cancelled Transaction</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default function ChatMessages() {\r\n    const navigate = useNavigate();\r\n    const selectedChatData = useSelector(state => state.selectedChatData);\r\n    const selectedVehicleData = useSelector(state => state.selectedVehicleData);\r\n    const selectedCustomerData = useSelector(state => state.selectedCustomerData);\r\n    const [email, setEmail] = useState('');\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const chatMessageBoxLoading = useSelector((state) => state.chatMessageBoxLoading);\r\n    const chatListSearchText = useSelector((state) => state.chatListSearchText);\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const loginName = useSelector((state) => state.loginName);\r\n\r\n    const [name, setName] = useState(loginName);\r\n\r\n    // const screenWidth = Dimensions.get('window').width;\r\n\r\n    const [activeButton, setActiveButton] = useState('All messages');\r\n    const [activeButtonValue, setActiveButtonValue] = useState(0);\r\n\r\n    const [activeFilterButton, setActiveFilterButton] = useState('');\r\n    const [unreadButtonValue, setUnreadButtonValue] = useState(false);\r\n    const [readButtonValue, setReadButtonValue] = useState(false);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [unreadCount, setUnreadCount] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // globalImageUrl = '';\r\n        // navigate(`/devadmin/chat-messages/#`);\r\n        // console.log(encryptDataAPI('rmj-marc'));\r\n\r\n        const updateWidth = () => {\r\n            const newWidth = Dimensions.get('window').width;\r\n            setScreenWidth(newWidth); // Update the screenWidth state\r\n        };\r\n\r\n        // Add event listener for window resize\r\n        Dimensions.addEventListener('change', updateWidth);\r\n\r\n        // Clean up the event listener when the component unmounts or re-renders\r\n\r\n        const fetchIpAndCountry = async () => {\r\n            try {\r\n                // dispatch(setChatMessageBoxLoading(true));\r\n                // Fetch IP Address\r\n                const ipResponse = await axios.get('https://api.ipify.org?format=json');\r\n                const fetchedIp = ipResponse.data.ip;\r\n                ip = fetchedIp;\r\n\r\n                // Fetch IP Country\r\n                if (fetchedIp) {\r\n                    const countryResponse = await axios.get(`https://ipapi.co/${fetchedIp}/json/`);\r\n                    const fetchedIpCountry = countryResponse.data.country_name;\r\n                    ipCountry = fetchedIpCountry;\r\n                    // dispatch(setChatMessageBoxLoading(false));\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching IP data:', error);\r\n            }\r\n        };\r\n        const collectionRef = collection(projectExtensionFirestore, 'chats'); // Replace with your collection name\r\n        const unrepliedQuery = query(\r\n            collectionRef,\r\n            where('read', '==', false),\r\n            limit(10) // Limit the query to 10 documents\r\n        );\r\n\r\n        const unsubscribe = onSnapshot(unrepliedQuery, (querySnapshot) => {\r\n            setUnreadCount(querySnapshot.size); // Update state with the new count\r\n            fetchIpAndCountry();\r\n\r\n        }, (error) => {\r\n            console.error(\"Error fetching documents: \", error);\r\n        });\r\n\r\n\r\n\r\n        // Clean up function to unsubscribe from the listener when the component unmounts\r\n        return () => {\r\n            Dimensions.removeEventListener('change', updateWidth);\r\n            unsubscribe();\r\n        };\r\n\r\n    }, []);\r\n\r\n    const handlePress = (buttonTitle, buttonTitleValue) => {\r\n        if (activeButton == buttonTitle) {\r\n        }\r\n        else {\r\n            setActiveButton(buttonTitle);\r\n            setActiveButtonValue(buttonTitleValue);\r\n            setActiveFilterButton('');\r\n            setUnreadButtonValue(false);\r\n\r\n            dispatch(setActiveChatId(''));\r\n\r\n            dispatch(setLoadMoreLoading(false));\r\n            dispatch(setNoMoreData(false));\r\n        }\r\n    };\r\n\r\n\r\n    const handleUnreadPress = (buttonTitle) => {\r\n\r\n        setActiveFilterButton(prevState => prevState === buttonTitle ? '' : buttonTitle);\r\n        setUnreadButtonValue(prevState => !prevState);\r\n        setReadButtonValue(false);\r\n    };\r\n\r\n    const handleReadPress = (buttonTitle) => {\r\n\r\n        setActiveFilterButton(prevState => prevState === buttonTitle ? '' : buttonTitle);\r\n        setReadButtonValue(prevState => !prevState);\r\n        setUnreadButtonValue(false);\r\n\r\n    };\r\n\r\n\r\n    //Main fetch\r\n    useEffect(() => {\r\n        let queryRef;\r\n        dispatch(setMessageTextInputValue(''));\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setChatMessageBoxLoading(false));\r\n        dispatch(setActiveChatId(''));\r\n\r\n        // Helper function to build the query\r\n        const buildQuery = () => {\r\n            const searchValue = chatListSearchText.toUpperCase();\r\n\r\n            if (unreadButtonValue) {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('read', '==', false), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n            else if (readButtonValue) {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('read', '==', true), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n            else {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n        };\r\n\r\n        // Build and execute the query\r\n        queryRef = buildQuery();\r\n\r\n        const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n            const chatsData = [];\r\n            snapshot.forEach((doc) => {\r\n                chatsData.push({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                });\r\n            });\r\n\r\n            dispatch(setChatListData(chatsData));\r\n            globalLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n            dispatch(setNoMoreData(false));\r\n            dispatch(setLoadMoreLoading(false));\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }, (error) => {\r\n            console.error('Error fetching data from Firebase:', error);\r\n        });\r\n\r\n        // Cleanup function\r\n        return () => {\r\n            if (unsubscribe) {\r\n                unsubscribe();\r\n            }\r\n        };\r\n    }, [unreadButtonValue, readButtonValue, activeButtonValue, chatListSearchText]);\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                navigate(\"/login\")\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(projectControlAuth)\r\n                    .then(() => {\r\n                        navigate(\"/login\")\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(projectControlAuth)\r\n                .then(() => {\r\n                    navigate(\"/login\")\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = projectControlAuth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const listenForNameChange = (documentId) => {\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            onSnapshot(accountDocRef, (docSnapshot) => {\r\n                if (docSnapshot.exists()) {\r\n                    const data = docSnapshot.data();\r\n                    const fieldType = data.type;\r\n                    const fieldName = data.name;\r\n                    dispatch(setLoginName(fieldName));\r\n\r\n                } else {\r\n                    // Handle the case where the document does not exist\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSignOut = () => {\r\n        // Check if currentUser exists before signing out\r\n        if (projectControlAuth.currentUser) {\r\n            signOut(projectControlAuth).then(() => {\r\n                navigate(\"/login\")\r\n                setEmail('');\r\n                setName('');\r\n            }).catch(() => {\r\n                // Handle any sign out errors here\r\n            });\r\n        } else {\r\n            // Handle the case where there is no user currently signed in\r\n            console.log('No user signed in to sign out');\r\n            // Optionally navigate to the login screen or show a message\r\n            navigate(\"/login\")\r\n        }\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   const handleScreenResize = () => {\r\n    //     const screenWidth = Dimensions.get('window').width;\r\n    //     setIsMobileView(screenWidth < 1200);\r\n    //   };\r\n\r\n    //   // Initial check on component mount\r\n    //   handleScreenResize();\r\n\r\n    //   // Listen for screen dimension changes\r\n    //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n    //   // Cleanup event listener on component unmount\r\n    //   return () => {\r\n    //     Dimensions.removeEventListener('change', handleScreenResize);\r\n    //   };\r\n    // }, []);\r\n\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#0642F4'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#0642F4'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n\r\n\r\n\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n\r\n    const slideAnim = useRef(new Animated.Value(screenWidth)).current;\r\n    const isVisible = chatMessagesData.length > 0;\r\n\r\n    useEffect(() => {\r\n        if (isVisible) {\r\n            // Delayed slide in from right to left with smooth easing\r\n            Animated.timing(slideAnim, {\r\n                toValue: 0, // Final position on the screen\r\n                duration: 300, // Slightly longer duration for smoother effect\r\n                useNativeDriver: true, // Use native driver for better performance\r\n                easing: Easing.bezier(0.25, 0.1, 0.25, 1), // Smooth and natural easing curve\r\n                delay: 100, // Start with a slight delay for a smoother transition\r\n            }).start();\r\n        } else {\r\n            // Delayed slide out to the right with smooth easing when not visible\r\n            Animated.timing(slideAnim, {\r\n                toValue: screenWidth,\r\n                duration: 300, // Slightly longer duration for smoother effect\r\n                useNativeDriver: true,\r\n                easing: Easing.bezier(0.25, 0.1, 0.25, 1), // Smooth and natural easing curve\r\n                delay: 100, // Start with a slight delay for a smoother transition\r\n            }).start();\r\n        }\r\n    }, [isVisible, screenWidth, slideAnim]);\r\n\r\n    const handlePressBack = () => {\r\n        dispatch(setMessageTextInputValue(''));\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setActiveChatId(''));\r\n        navigate(`/top/chat-messages`);\r\n    }\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <NativeBaseProvider>\r\n                <View style={{ backgroundColor: \"white\", height: '100%', width: '100%', flexDirection: 'column', maxHeight: '100vh', overflow: 'hidden', }} >\r\n                    {/* Header */}\r\n                    <Box\r\n                        px=\"3\"\r\n                        bgColor='#0642f4'\r\n                        height={54}\r\n                        position=\"sticky\"\r\n                        top={0}\r\n                        zIndex={999}\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                        borderBottomWidth={0}\r\n                        borderBottomColor={'cyan.500'}\r\n                    >\r\n\r\n                        <SideDrawer\r\n                            selectedScreen={selectedScreen} />\r\n\r\n                        <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n\r\n                            <FastImage\r\n                                source={{\r\n                                    uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                    priority: FastImage.priority.high,\r\n                                }}\r\n                                resizeMode={FastImage.resizeMode.stretch}\r\n                                style={styles.image} />\r\n                        </Box>\r\n\r\n                        <View style={{ alignItems: 'center', flex: 1 }}>\r\n                            <QRCodeScanner />\r\n                        </View>\r\n\r\n                        <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n\r\n                    </Box>\r\n\r\n                    {/* Content */}\r\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        {/* Sidebar */}\r\n                        {/* <SideDrawer\r\n                            selectedScreen={selectedScreen} /> */}\r\n\r\n                        {/* Main Content */}\r\n                        {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n                        {/* Main Content Content */}\r\n\r\n                        {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n                        <View style={{ flex: 1, backgroundColor: \"white\", height: '100%' }}>\r\n                            <View style={{ flex: 1, height: '100%' }}>\r\n\r\n                                <View style={{\r\n                                    display: screenWidth < mobileViewBreakpoint && activeChatId !== '' ? 'none' : 'flex',\r\n                                    borderBottomWidth: 1,\r\n                                    borderColor: '#f5f5f5',\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    height: 60,\r\n                                }}>\r\n                                    {/* Chat Header */}\r\n                                    <View style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'row',\r\n                                    }}>\r\n                                        <View style={{\r\n                                            flex: 1,\r\n                                            flexDirection: 'row',\r\n                                        }}>\r\n                                            <ScrollView scrollEnabled horizontal>\r\n\r\n                                                <HeaderButton\r\n                                                    key={'All messages'}\r\n                                                    title={'All messages'}\r\n                                                    onPress={() => handlePress('All messages', 0)}\r\n                                                    isActive={activeButton === 'All messages'}\r\n                                                    headerCount={\r\n                                                        unreadCount > 0 ?\r\n                                                            (<View style={{\r\n                                                                backgroundColor: '#FF0000',\r\n                                                                borderRadius: 100, // Half of width and height\r\n                                                                width: 20,\r\n                                                                height: 20, // Same as width for a perfect circle\r\n                                                                marginLeft: 10,\r\n                                                                justifyContent: 'center', // Center children vertically\r\n                                                                alignItems: 'center', // Center children horizontally\r\n                                                            }}>\r\n                                                                <Text style={{\r\n                                                                    color: 'white',\r\n                                                                    fontWeight: 700,\r\n                                                                    fontSize: 14,\r\n                                                                }}>{unreadCount > 9 ? `9+` : unreadCount}</Text>\r\n                                                            </View>) : (<></>)}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Negotiation'}\r\n                                                    title={'Negotiation'}\r\n                                                    onPress={() => handlePress('Negotiation', 1)}\r\n                                                    isActive={activeButton === 'Negotiation'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Issued Proforma Invoice'}\r\n                                                    title={'Issued Proforma Invoice'}\r\n                                                    onPress={() => handlePress('Issued Proforma Invoice', 2)}\r\n                                                    isActive={activeButton === 'Issued Proforma Invoice'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Order Item'}\r\n                                                    title={'Order Item'}\r\n                                                    onPress={() => handlePress('Order Item', 3)}\r\n                                                    isActive={activeButton === 'Order Item'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Payment Confirmed'}\r\n                                                    title={'Payment Confirmed'}\r\n                                                    onPress={() => handlePress('Payment Confirmed', 4)}\r\n                                                    isActive={activeButton === 'Payment Confirmed'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Shipping Schedule'}\r\n                                                    title={'Shipping Schedule'}\r\n                                                    onPress={() => handlePress('Shipping Schedule', 5)}\r\n                                                    isActive={activeButton === 'Shipping Schedule'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Documents'}\r\n                                                    title={'Documents'}\r\n                                                    onPress={() => handlePress('Documents', 6)}\r\n                                                    isActive={activeButton === 'Documents'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Vehicle Received'}\r\n                                                    title={'Vehicle Received'}\r\n                                                    onPress={() => handlePress('Vehicle Received', 7)}\r\n                                                    isActive={activeButton === 'Vehicle Received'}\r\n                                                />\r\n                                            </ScrollView>\r\n                                        </View>\r\n\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', height: '100%', }}>\r\n                                    {/* Chat Body */}\r\n\r\n                                    <View style={{ flex: screenWidth > mobileViewBreakpoint ? '' : 1, display: screenWidth < mobileViewBreakpoint && activeChatId !== '' ? 'none' : 'flex', }}>\r\n\r\n                                        <View style={{ flex: 1, maxWidth: screenWidth > mobileViewBreakpoint ? 380 : '100%', minWidth: screenWidth > mobileViewBreakpoint ? 380 : '100%', borderRightWidth: 0, borderColor: '#DADDE1', maxHeight: 100, minHeight: 100, backgroundColor: 'white', }}>\r\n                                            {/* Chat Search */}\r\n                                            <View style={{ flex: 1, paddingHorizontal: 10 }}>\r\n                                                <SearchChat lastVisible={lastVisible} setLastVisible={setLastVisible} unreadButtonValue={unreadButtonValue} activeButtonValue={activeButtonValue} />\r\n                                                {/* <Pressable\r\n                                                variant=\"ghost\"\r\n                                                style={{\r\n                                                    padding: 3,\r\n                                                    width: 100,\r\n                                                    flexDirection: 'row', // Align items in a row\r\n                                                    alignItems: 'center', // Center items vertically\r\n                                                    borderRadius: 5,\r\n                                                }}\r\n                                                backgroundColor='#ECEDF0'\r\n                                                _hover={{ backgroundColor: '#d7d7d9' }}\r\n                                            >\r\n                                                <MaterialIcons name=\"mark-email-unread\" color=\"#1C2B33\" size={20} />\r\n                                                <Text style={{ color: '#1C2B33', marginLeft: 5 }}>Unreplied</Text>\r\n                                            </Pressable> */}\r\n                                                <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                                    <FilterButton\r\n                                                        key={'Unread'}\r\n                                                        title={'Unread '}\r\n                                                        onPress={() => handleUnreadPress('Unread')}\r\n                                                        isActive={activeFilterButton === 'Unread'}\r\n                                                        iconActive={<MaterialIcons name=\"mark-email-unread\" color=\"#0A78BE\" size={16} />}\r\n                                                        iconNotActive={<MaterialIcons name=\"mark-email-unread\" color=\"#1C2B33\" size={16} />}\r\n                                                    />\r\n\r\n                                                    <FilterButton\r\n                                                        key={'Read'}\r\n                                                        title={'Read '}\r\n                                                        onPress={() => handleReadPress('Read')}\r\n                                                        isActive={activeFilterButton === 'Read'}\r\n                                                        iconActive={<MaterialIcons name=\"mark-email-read\" color=\"#0A78BE\" size={16} />}\r\n                                                        iconNotActive={<MaterialIcons name=\"mark-email-read\" color=\"#1C2B33\" size={16} />}\r\n                                                    />\r\n\r\n                                                </View>\r\n\r\n                                            </View>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, maxWidth: screenWidth > mobileViewBreakpoint ? 380 : '100%', minWidth: screenWidth > mobileViewBreakpoint ? 380 : '100%', borderRightWidth: 0, borderColor: '#DADDE1', backgroundColor: 'white', }}>\r\n                                            {/* Chat List */}\r\n                                            <ChatList unreadButtonValue={unreadButtonValue} activeButtonValue={activeButtonValue} />\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    {screenWidth > mobileViewBreakpoint && (chatMessageBoxLoading ? (\r\n                                        <View style={{ flex: 1, backgroundColor: 'white', justifyContent: 'center', alignItems: 'center', height: '100%', }}>\r\n                                            <Spinner\r\n                                                animating\r\n                                                size=\"lg\"\r\n                                                color={'#7B9CFF'}\r\n                                            />\r\n                                        </View>) : (\r\n                                        <View style={{ flex: 1, }}>\r\n\r\n                                            <View style={{ flex: 1, minHeight: 90, maxHeight: screenWidth < 1281 ? 130 : 125, borderBottomWidth: 0, borderColor: '#DADDE1', backgroundColor: 'white', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                {/* Chat Message Header */}\r\n\r\n                                                <ScrollView scrollEnabled horizontal>\r\n                                                    {chatMessagesData.length < 1 ? null : (<ChatMessageHeader />)}\r\n                                                </ScrollView>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, borderColor: '#DADDE1', backgroundColor: chatMessagesData.length < 1 ? 'white' : '#e5ebfe', paddingBottom: 10, }}>\r\n\r\n                                                <View style={{ flex: 1, }}>\r\n\r\n                                                    {(selectedChatData && chatMessagesData.length > 0 && selectedCustomerData && selectedVehicleData) &&\r\n                                                        (selectedChatData && chatMessagesData.length > 0 && selectedVehicleData.stockStatus == 'Reserved' &&\r\n                                                            (selectedVehicleData.reservedTo !== selectedCustomerData.textEmail))\r\n                                                        ? <ReservedStatusViewForHeader /> :\r\n                                                        (selectedChatData.isCancelled && chatMessagesData.length > 0 && <CancelledViewForHeader />)\r\n                                                    }\r\n\r\n                                                    {/* Chat Message Box */}\r\n                                                    <ChatMessageBox activeButtonValue={activeButtonValue} userEmail={email} />\r\n                                                    <DocumentPreviewModal />\r\n                                                </View>\r\n\r\n                                                <View style={{ maxHeight: 180, justifyContent: 'flex-end', alignItems: 'center' }}>\r\n                                                    {/* Chat Input Text */}\r\n                                                    {chatMessagesData.length < 1 ? null : (<ChatInputText />)}\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                    ))}\r\n\r\n                                    {screenWidth < mobileViewBreakpoint && activeChatId !== '' && (chatMessageBoxLoading ? (\r\n\r\n                                        <View style={{ flex: 1, backgroundColor: 'white', justifyContent: 'center', alignItems: 'center', }}>\r\n                                            <Spinner\r\n                                                animating\r\n                                                size=\"lg\"\r\n                                                color={'#7B9CFF'}\r\n                                            />\r\n                                        </View>) : (\r\n\r\n                                        <Animated.View\r\n                                            style={{\r\n                                                backgroundColor: '#E5EBFE',\r\n                                                height: '100%',\r\n                                                flex: 1,\r\n                                                transform: [{ translateX: slideAnim }]\r\n                                            }}\r\n\r\n                                        >\r\n\r\n                                            <View style={{ flex: 1 }}>\r\n                                                <View style={{ flex: 1, minHeight: 90, maxHeight: screenWidth < 1281 ? 130 : 125, borderBottomWidth: 0, borderColor: '#DADDE1', backgroundColor: 'white', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                    {/* Chat Message Header */}\r\n                                                    {(screenWidth < mobileViewBreakpoint && chatMessagesData.length > 0) &&\r\n                                                        <Pressable onPress={handlePressBack} style={{ justifyContent: 'center', alignItems: 'center', }}>\r\n                                                            <Ionicons name=\"chevron-back\" size={40} color='black' />\r\n                                                        </Pressable>\r\n                                                    }\r\n\r\n                                                    <ScrollView scrollEnabled horizontal>\r\n                                                        {chatMessagesData.length < 1 ? null : (<ChatMessageHeader />)}\r\n                                                    </ScrollView>\r\n                                                </View>\r\n\r\n                                                <View style={{ flex: 1, borderColor: '#DADDE1', backgroundColor: chatMessagesData.length < 1 ? 'white' : '#e5ebfe', paddingBottom: 10, }}>\r\n                                                    <View style={{ flex: 1, }}>\r\n                                                        {(chatMessagesData.length > 0 && selectedVehicleData.stockStatus == 'Reserved' &&\r\n                                                            selectedVehicleData.reservedTo !== selectedCustomerData.textEmail)\r\n                                                            ? <ReservedStatusViewForHeader /> :\r\n                                                            (selectedChatData.isCancelled && chatMessagesData.length > 0 && <CancelledViewForHeader />)\r\n                                                        }\r\n                                                        {/* Chat Message Box */}\r\n                                                        <ChatMessageBox activeButtonValue={activeButtonValue} userEmail={email} />\r\n                                                        <DocumentPreviewModal />\r\n\r\n                                                    </View>\r\n                                                </View>\r\n                                            </View>\r\n\r\n                                            {/* Absolute Positioned Chat Input Text at the Bottom */}\r\n                                            <View style={{ alignItems: 'center', paddingBottom: 10 }}>\r\n                                                {chatMessagesData.length < 1 ? null : (<ChatInputText />)}\r\n                                            </View>\r\n\r\n                                        </Animated.View>\r\n                                    ))}\r\n                                </View>\r\n                            </View>\r\n                            {/* <SuccessModal /> */}\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <LoadingModal />\r\n            </NativeBaseProvider>\r\n\r\n\r\n        </>\r\n\r\n    );\r\n}","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Flex,\r\n    HStack,\r\n    Icon,\r\n    Image as NativeImage,\r\n    Input,\r\n    Modal,\r\n    NativeBaseProvider,\r\n    Popover,\r\n    Pressable,\r\n    Spinner,\r\n    Stack,\r\n    Text,\r\n    VStack,\r\n    useBreakpointValue,\r\n    TextArea,\r\n    InputRightAddon,\r\n    InputGroup,\r\n    InputLeftAddon,\r\n    Select,\r\n    CheckIcon,\r\n    PresenceTransition,\r\n    CloseIcon,\r\n    ScrollView as ScrollViewNative,\r\n    Divider,\r\n    useDisclosure,\r\n    useDisclose,\r\n    FormControl,\r\n    Checkbox,\r\n    useToast,\r\n} from 'native-base';\r\nimport { DataTable } from 'react-native-paper';\r\n\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n    Dimensions,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    StyleSheet,\r\n    View,\r\n    PanResponder,\r\n    Animated,\r\n    InputAccessoryView,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    TextInput,\r\n    Image as RNImage\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo,\r\n    FontAwesome5,\r\n    EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { debounce } from 'lodash';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, deleteField } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n    setVehicleListData,\r\n    setSupplyChainsCostsData,\r\n    setSelectedPaidTo,\r\n    setSelectedExpenseName,\r\n    setSupplyChainsCostsModalVisible,\r\n    setVehicleListSupplyChainsCostsData,\r\n    setDeleteImageVisible,\r\n    setSelectedImages,\r\n    setAddAnotherImages,\r\n    setIsAddPhotoVisible,\r\n    setUploadImagesModalVisible,\r\n    setUploadImagesButtonLoading,\r\n    setViewImagesModalVisible,\r\n    setViewImagesData,\r\n    setLoadingModalVisible,\r\n    setAddVehicleListData,\r\n    setEditVehicleModalVisible,\r\n    setFobPriceHistoryModalVisible,\r\n    setSelectedButton,\r\n    setAddCountryModalVisible,\r\n    setAddPortModalVisible,\r\n    setDeletePortModalVisible,\r\n    setAddPortsForCountriesModalVisible,\r\n    setCountryPortsData,\r\n    setDeleteCountryModalVisible,\r\n    setLoginName\r\n} from './redux/store';\r\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep, merge } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'FREIGHT'\r\n\r\nlet nameVariable = {\r\n    text: ''\r\n}\r\n\r\nlet defaultSelectedButton = 'countries';\r\n\r\nlet selectedPort = '';\r\nlet selectedCountry = '';\r\nlet selectedPortForCountry = '';\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = projectControlAuth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\nconst SearchablePortDropdown = ({ modalAddOpen }) => {\r\n    // const [selectedItem, setSelectedItem] = useState(null);\r\n    const [query, setQuery] = useState('');\r\n    const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n    const [data, setData] = useState([]); // Initialize data state with an empty array\r\n    const searchRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Your data fetching logic here\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map((key) => ({\r\n                        ports: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n            } else {\r\n                console.log('No such document!');\r\n            }\r\n        }, (error) => {\r\n            console.error('Error fetching countries: ', error);\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const filteredData = data.filter((item) =>\r\n        item.ports.toLowerCase().includes(query.toLowerCase().trim()) ||\r\n        item.country.toLowerCase().includes(query.toLowerCase().trim())\r\n    );\r\n\r\n    const renderItem = ({ item }) => (\r\n        <TouchableOpacity\r\n            style={{\r\n                padding: 10,\r\n                borderBottomWidth: 1,\r\n                borderBottomColor: '#ccc',\r\n                width: '100%',\r\n                backgroundColor: '#85929F',\r\n            }}\r\n            onPress={() => {\r\n                // setSelectedItem(item);\r\n                selectedPortForCountry = item;\r\n                setQuery('');\r\n                setIsDropdownVisible(false);\r\n\r\n            }}\r\n        >\r\n            <Text style={{ color: 'white', }}>{item.ports}</Text>\r\n        </TouchableOpacity>\r\n    );\r\n\r\n    useEffect(() => {\r\n\r\n        searchRef.current.focus();\r\n\r\n    }, [isDropdownVisible])\r\n\r\n    useEffect(() => {\r\n\r\n        searchRef.current.focus();\r\n        setIsDropdownVisible(false);\r\n        selectedPortForCountry = '';\r\n\r\n    }, [modalAddOpen])\r\n\r\n    return (\r\n        <View style={{ flex: 1, width: '100%' }}>\r\n            <Button\r\n                title=\"Show Dropdown\"\r\n                onPress={() => {\r\n                    setIsDropdownVisible(!isDropdownVisible)\r\n\r\n                }}\r\n                bgColor={'#102A43'}\r\n                style={{ borderWidth: 1 }}\r\n                flex={1}\r\n            >\r\n                <View style={{\r\n                    flex: 1,\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between', // This will position the children at opposite ends\r\n                }}>\r\n                    <Text style={{ color: 'white', flex: 1, alignSelf: 'flex-start' }}>{selectedPortForCountry ? selectedPortForCountry.ports : 'Select Port'}</Text>\r\n                    <MaterialIcons style={{ alignSelf: 'flex-end' }} name={isDropdownVisible ? 'keyboard-arrow-up' : 'keyboard-arrow-down'} color='white' size={22} />\r\n                </View>\r\n            </Button>\r\n            <View style={{ display: isDropdownVisible ? 'flex' : 'none' }}>\r\n                <TextInput\r\n                    ref={searchRef}\r\n                    style={{\r\n                        outlineStyle: 'none',\r\n                        padding: 10,\r\n                        borderWidth: 1,\r\n                        borderColor: '#102A43',\r\n                        flex: 1,\r\n                    }}\r\n                    placeholder=\"Search...\"\r\n                    value={query}\r\n                    onChangeText={(text) => setQuery(text)}\r\n                />\r\n                <FlatList\r\n                    style={{ height: 150, width: '100%', borderWidth: 1, borderColor: '#102A43', borderRadius: 5, }}\r\n                    data={filteredData}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={(item) => item.ports.toString()}\r\n                />\r\n            </View>\r\n\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }} selectable={false}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n//     const dispatch = useDispatch();\r\n//     const toast = useToast();\r\n//     const [inspectionData, setInspectionData] = useState(['Required', 'Not-Required', 'Optional']);\r\n//     const [key, setKey] = useState(nanoid());\r\n\r\n//     const [selectedStockStatusValue, setSelectedStockStatusValue] = useState(selectedValue);\r\n//     const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n//     const handleSaveStockStatus = async () => {\r\n\r\n//         dispatch(setLoadingModalVisible(true));\r\n\r\n//        const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n//         const { datetime } = response.data;\r\n//         const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n//         const year = moment(datetime).format('YYYY');\r\n//         const month = moment(datetime).format('MM');\r\n//         const monthWithDay = moment(datetime).format('MM/DD');\r\n//         const date = moment(datetime).format('YYYY/MM/DD');\r\n//         const day = moment(datetime).format('DD');\r\n//         const time = moment(datetime).format('HH:mm');\r\n\r\n//         const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n//         if (item.stockStatus == selectedStockStatusValue || selectedStockStatusValue == '' || selectedStockStatusValue == '__NativeBasePlaceHolder__') {\r\n//             dispatch(setLoadingModalVisible(false));\r\n//         }\r\n\r\n//         else {\r\n\r\n//             const stockStatusHistoryData = {\r\n//                 date: formattedTime,\r\n//                 stockStatus: selectedStockStatusValue,\r\n//                 changedBy: nameVariable.text,\r\n//             };\r\n//             const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n//             try {\r\n//                 await updateDoc(vehicleProductRef, {\r\n//                     stockStatus: selectedStockStatusValue,\r\n//                     stockStatusHistory: arrayUnion(stockStatusHistoryData)\r\n//                 });\r\n//                 const logData = {\r\n//                     message: `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to \"${selectedStockStatusValue}\" with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n//                     timestamp: formattedTime,\r\n//                     colorScheme: true,\r\n//                     keywords: [\r\n//                         formattedTime.toLowerCase(),\r\n//                         globalCurrentStockID.toLowerCase(),\r\n//                         `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to ${selectedStockStatusValue} with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n//                         'Stock Status'.toLowerCase(),\r\n//                         'Stock Status Updated'.toLowerCase(),\r\n//                         'Stock'.toLowerCase(),\r\n//                         'Status Updated'.toLowerCase(),\r\n//                         'Updated'.toLowerCase(),\r\n//                         globalSelectedCarName.toLowerCase(),\r\n//                         globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n//                         nameVariable.text.toLowerCase(),\r\n//                         year.toLowerCase(),\r\n//                         month.toLowerCase(),\r\n//                         monthWithDay.toLowerCase(),\r\n//                         date.toLowerCase(),\r\n//                         day.toLowerCase(),\r\n//                         time.toLowerCase(),\r\n//                         timeWithMinutesSeconds.toLowerCase(),\r\n//                     ],\r\n//                 };\r\n//                 addLogToCollection(logData);\r\n//                 dispatch(setLoadingModalVisible(false));\r\n\r\n//                 // console.log('FOB Price updated successfully');\r\n//                 toast.show({\r\n//                     render: () => {\r\n//                         return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n//                             <Text style={{ color: 'white' }}>Stock Status updated successfully!</Text>\r\n//                         </View>;\r\n//                     }\r\n//                 })\r\n//             } catch (error) {\r\n//                 console.error(error);\r\n//                 toast.show({\r\n//                     render: () => {\r\n//                         return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n//                             <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n//                         </View>;\r\n//                     }\r\n//                 })\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <View style={{ flex: 1, flexDirection: 'row' }}>\r\n//             <View style={{ width: screenWidth >= 1360 ? '70%' : '88%', backgroundColor: 'white', }}>\r\n//                 <Select\r\n//                     selectedValue={selectedStockStatusValue}\r\n//                     onValueChange={(value) => {\r\n//                         setSelectedStockStatusValue(value);\r\n//                     }}\r\n//                     flex={3}\r\n//                     accessibilityLabel=\"---\"\r\n//                     placeholder=\"---\"\r\n//                     _selectedItem={{\r\n//                         bg: \"teal.600\",\r\n//                         endIcon: <CheckIcon size=\"5\" />\r\n//                     }}\r\n//                 >\r\n//                     {stockStatusData.map((item) => (\r\n//                         <Select.Item key={item} label={item} value={item} />\r\n//                     ))}\r\n//                 </Select>\r\n//             </View>\r\n\r\n//             <TouchableHighlight\r\n//                 underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n//                 onPress={handleSaveStockStatus}\r\n//                 style={{\r\n//                     backgroundColor: '#16A34A',\r\n//                     borderRadius: 5,\r\n//                     padding: 3,\r\n//                     margin: 2,\r\n//                     alignSelf: 'center',\r\n//                 }}>\r\n//                 <MaterialIcons name='update' color='white' size={22} />\r\n//             </TouchableHighlight>\r\n//         </View>\r\n\r\n\r\n\r\n\r\n//     );\r\n// };\r\n\r\nconst addLogToCollection = async (data) => {\r\n    try {\r\n        const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n        // Add a new document to the \"logs\" collection\r\n        await addDoc(logsCollectionRef, data);\r\n\r\n        console.log('Document added successfully!');\r\n    } catch (error) {\r\n        console.error('Error adding document:', error);\r\n    }\r\n};\r\n\r\n\r\nconst SortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, collectionName, handleFirstModalClose, handleFirstModalOpen }) => {\r\n    const [modalSortOpen, setModalSortOpen] = useState(false);\r\n    const [modalAddOpen, setModalAddOpen] = useState(false);\r\n    const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n    const [modalSave, setModalSave] = useState(false);\r\n    const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n    const [modalData, setModalData] = useState(data);\r\n    const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n    const handleDeleteItemPress = useCallback(\r\n        (item) => {\r\n            setModalData((prevData) => {\r\n                const updatedData = prevData.filter((value) => value !== item);\r\n                return updatedData;\r\n            });\r\n        },\r\n        []\r\n    );\r\n\r\n    // useEffect(() => {\r\n\r\n    //   fetchData();\r\n\r\n    // }, [modalSortOpen]);\r\n\r\n\r\n\r\n    const fetchData = useCallback(async () => {\r\n        const modalDocRef = doc(collection(databaseInit, collectionName), docName);\r\n        const modalDocSnap = await getDoc(modalDocRef);\r\n        if (modalDocSnap.exists()) {\r\n            // setModalData(modalDocSnap.data()?.dataName || []);\r\n            setModalData(modalDocSnap.data()?.[dataName] || []);\r\n        }\r\n    }, [databaseInit, modalData]);\r\n\r\n    // useEffect(() => {\r\n    //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n    //     setModalData(snapshot.data()?.[dataName] || []);\r\n    //   });\r\n\r\n    //   return () => unsubscribe();\r\n    // }, [dataName, databaseInit, docName]);\r\n\r\n    const handleSave = useCallback(async () => {\r\n        setModalSaveLoading(true);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        try {\r\n            await updateDoc(doc(collection(databaseInit, collectionName), docName), { [dataName]: modalData });\r\n            setModalSaveLoading(false);\r\n            setModalSortOpen(true);\r\n            setModalSave(false);\r\n\r\n\r\n            const logData = {\r\n                message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n                    `${title} updated`.toLowerCase(),\r\n                    `\"${title}\" updated`.toLowerCase(),\r\n                    'updated'.toLowerCase(),\r\n                    title.toLowerCase(),\r\n                    nameVariable.text.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n            };\r\n\r\n            addLogToCollection(logData);\r\n\r\n        } catch (error) {\r\n            setModalSaveLoading(false);\r\n            handleModalSaveClose();\r\n            console.error(error);\r\n        }\r\n\r\n\r\n    }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n    const handleSortModalOpen = useCallback(() => {\r\n        setModalIsLoading(true);\r\n        fetchData();\r\n        setModalSortOpen(true);\r\n        // handleFirstModalClose();\r\n    }, [modalSortOpen, modalIsLoading]);\r\n\r\n    const handleSortModalClose = useCallback(async () => {\r\n        setModalSortOpen(false);\r\n        setModalIsLoading(false);\r\n        // handleFirstModalOpen();\r\n    }, [modalSortOpen, modalIsLoading]);\r\n\r\n    // const handleAddTextChange = () => {\r\n    //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n    //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n    // };\r\n\r\n\r\n    const handleModalAddOpen = useCallback(() => {\r\n        setModalAddOpen(true);\r\n        handleSortModalClose();\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, [])\r\n\r\n    const handleModalAddClose = useCallback(() => {\r\n        setModalAddOpen(false);\r\n        handleSortModalOpen();\r\n        textAreaAdd.current?.clear();\r\n    }, [modalAddOpen])\r\n\r\n    const handleModalAddSuccessClose = useCallback(() => {\r\n        setModalAddSuccess(false);\r\n        // setIsLoading(false);\r\n        handleSortModalOpen();\r\n    }, [modalAddSuccess])\r\n\r\n    const handleModalAddSuccessOpen = useCallback(() => {\r\n        setModalAddSuccess(true);\r\n        handleSortModalClose();\r\n        setModalAddOpen(false);\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n    const handleModalSaveOpen = useCallback(() => {\r\n        setModalSave(true);\r\n        setModalSortOpen(false);\r\n        setModalIsLoading(true);\r\n    }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n    const handleModalSaveClose = useCallback(() => {\r\n        setModalSave(false);\r\n        setModalSortOpen(true);\r\n    }, [modalSave, modalSortOpen]);\r\n\r\n    const handleAddSubmit = async () => {\r\n\r\n        const data = textAreaAdd.current?.value;\r\n        const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        if (data !== '') {\r\n\r\n            setModalSaveLoading(true);\r\n\r\n            try {\r\n                const modalCollectionRef = collection(databaseInit, collectionName);\r\n                const modalDocRef = doc(modalCollectionRef, docName);\r\n                await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n                const logData = {\r\n                    message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n                        `${title} added`.toLowerCase(),\r\n                        `\"${title}\" added`.toLowerCase(),\r\n                        'added'.toLowerCase(),\r\n                        title.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                        timeWithMinutesSeconds.toLowerCase(),\r\n                    ],\r\n                };\r\n                addLogToCollection(logData);\r\n                setModalSaveLoading(false);\r\n\r\n                handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n                console.log('Data added to Firestore');\r\n            } catch (error) {\r\n                console.error('Error adding data to Firestore:', error);\r\n                setModalSaveLoading(false);\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Box justifyContent=\"center\" alignItems={'flex-start'} marginRight={1}>\r\n\r\n                {!modalIsLoading ? (\r\n                    <TouchableOpacity onPress={handleSortModalOpen} >\r\n                        <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n                    </TouchableOpacity>\r\n                ) : (\r\n                    <Spinner color=\"white\" size={20} />\r\n                )}\r\n\r\n\r\n            </Box>\r\n\r\n            <Modal\r\n                isOpen={modalSortOpen}\r\n                onClose={handleSortModalClose}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>{headerText}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                        <Box w={'full'} flexDir={'column'}>\r\n                            <Box alignItems={'flex-end'}>\r\n                                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n                            </Box>\r\n\r\n                            <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                                <DraggableFlatList\r\n                                    style={{ alignContent: 'center', flex: 1, }}\r\n                                    data={modalData}\r\n                                    keyExtractor={(item) => item}\r\n                                    renderItem={({ item, drag }) => (\r\n\r\n                                        <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                                            <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n\r\n                                            <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                                            <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                                        </Box>\r\n\r\n                                    )}\r\n                                    onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n                            </Box>\r\n\r\n                        </Box>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalSave}\r\n                onClose={handleModalSaveClose}>\r\n                <Modal.Content >\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Save Order?</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n                        <Text>Are you sure you want to save changes?</Text>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} >\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n                            <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalAddOpen}\r\n                onClose={handleModalAddClose}\r\n                initialFocusRef={textAreaAdd}>\r\n                <Modal.Content >\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Add {title}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n                        <TextArea\r\n                            textAlign={'center'}\r\n                            w={'full'}\r\n                            ref={textAreaAdd}\r\n                            multiline\r\n                            onChangeText={handleAddTextChange}\r\n                            totalLines={4}\r\n                            placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} >\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n            {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n            <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n                <Modal.Content bgColor={'green.100'}>\r\n                    <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n                        <Text textAlign={'center'} color={'#102A43'} bold>\r\n                            😊😎 Success! 😎😊\r\n                        </Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body\r\n                        justifyContent={'center'}\r\n                        alignItems={'center'}\r\n                        bgColor={'green.200'}\r\n                        borderLeftWidth={4}\r\n                        borderLeftColor={'green.600'}\r\n                        margin={5}\r\n                    >\r\n                        <Box flex={1}>\r\n                            <Text color={'green.600'} bold>\r\n                                Added successfully!\r\n                            </Text>\r\n                            <Text color={'green.600'}>\r\n                                Added successfully!\r\n                            </Text>\r\n                        </Box>\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                                Ok\r\n                            </Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\n\r\nconst FreightNavigation = () => {\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const dispatch = useDispatch();\r\n    const [selectedButtonState, setSelectedButtonState] = useState(defaultSelectedButton);\r\n\r\n\r\n    const handlePress = (button) => {\r\n        if (button !== selectedButtonState) {\r\n            dispatch(setLoadingModalVisible(true));\r\n        }\r\n        dispatch(setSelectedButton(button));\r\n        setSelectedButtonState(button);\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center', width: screenWidth >= 960 ? '50%' : '90%' }}>\r\n\r\n            <TouchableOpacity\r\n                onPress={() => handlePress('countries')}\r\n                style={{\r\n                    borderRadius: 5,\r\n                    flex: 1,\r\n                    padding: 10,\r\n                    margin: 10,\r\n                    borderWidth: 1,\r\n                    borderColor: 'white',\r\n                    backgroundColor: selectedButtonState === 'countries' ? '#0642F4' : 'transparent',\r\n                    flexDirection: 'row',\r\n                }}\r\n            >\r\n                <MaterialIcons\r\n                    name=\"flag\" // The icon name from MaterialIcons\r\n                    size={20} // Set the size of the icon\r\n                    color={selectedButtonState === 'countries' ? 'white' : 'black'} // Set the color based on active state\r\n                />\r\n                <Text style={{ color: selectedButtonState === 'countries' ? 'white' : 'black', fontWeight: 'bold', marginLeft: 5, }}>Countries</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n                onPress={() => handlePress('ports')}\r\n                style={{\r\n                    borderRadius: 5,\r\n                    flex: 1,\r\n                    padding: 10,\r\n                    margin: 10,\r\n                    borderWidth: 1,\r\n                    borderColor: 'white',\r\n                    backgroundColor: selectedButtonState === 'ports' ? '#0642F4' : 'transparent',\r\n                    flexDirection: 'row',\r\n                }}\r\n            >\r\n                <MaterialIcons\r\n                    name=\"directions-boat\" // The icon name from MaterialIcons\r\n                    size={20} // Set the size of the icon\r\n                    color={selectedButtonState === 'ports' ? 'white' : 'black'} // Set the color based on active state\r\n                />\r\n                <Text style={{ color: selectedButtonState === 'ports' ? 'white' : 'black', fontWeight: 'bold', marginLeft: 5, }}>Ports</Text>\r\n            </TouchableOpacity>\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectMethod = ({ defaultValue, portCode, page, searchQuery }) => {\r\n    const [selectedMethod, setSelectedMethod] = useState('');\r\n    const methodData = useSelector((state) => state.methodData);\r\n\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updatePortMethod = async (portCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        if (newValue !== '' && newValue !== '__NativeBasePlaceHolder__') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = portCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const methodField = `${formattedCountryCode}.method`;\r\n\r\n            try {\r\n                if (currentValue == selectedMethod) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [methodField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Method Updated: \"${nameVariable.text}\" updated \"${portCode}\" method to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Method Updated: \"${nameVariable.text}\" updated \"${portCode}\" inspection to \"${newValue}\"`.toLowerCase(),\r\n                            'Method'.toLowerCase(),\r\n                            'Method Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            portCode.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Method updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Method updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating method:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedPortCode = portCode.replace(/\\./g, '_');\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const portData = documentSnapshot.data()[formattedPortCode];\r\n                // Make sure to check if portData exists before trying to access its properties\r\n                if (portData && portData.method) {\r\n                    const method = portData.method;\r\n                    setSelectedMethod(method);\r\n                    currentValue = method;\r\n                }\r\n                else {\r\n                    setSelectedMethod('__NativeBasePlaceHolder__');\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: '100%', }}>\r\n\r\n\r\n            <Select\r\n                selectedValue={selectedMethod}\r\n                onValueChange={(value) => {\r\n                    setSelectedMethod(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {methodData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updatePortMethod(portCode, selectedMethod)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectInspectionIsRequired = ({ width, defaultValue, countryCode, page, searchQuery }) => {\r\n    const [selectedInspectionIsRequired, setSelectedInspectionIsRequired] = useState('');\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updateCountryInspection = async (countryCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const inspectionIsRequiredField = `${formattedCountryCode}.inspectionIsRequired`;\r\n\r\n            try {\r\n                if (currentValue == selectedInspectionIsRequired) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [inspectionIsRequiredField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Inspection Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Inspection Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection to \"${newValue}\"`.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Inspection Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Inspection updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Inspection updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.inspectionIsRequired) {\r\n                    const inspectionIsRequired = countryData.inspectionIsRequired;\r\n                    setSelectedInspectionIsRequired(inspectionIsRequired);\r\n                    currentValue = inspectionIsRequired;\r\n\r\n\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: width, }}>\r\n\r\n\r\n            <Select\r\n                selectedValue={selectedInspectionIsRequired}\r\n                onValueChange={(value) => {\r\n                    setSelectedInspectionIsRequired(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {inspectionIsRequiredData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updateCountryInspection(countryCode, selectedInspectionIsRequired)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectInspectionName = ({ width, defaultValue, countryCode, page, searchQuery }) => {\r\n    const [selectedInspectionName, setSelectedInspectionName] = useState('');\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updateCountryInspectionName = async (countryCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const inspectionNameField = `${formattedCountryCode}.inspectionName`;\r\n\r\n            try {\r\n                if (currentValue == selectedInspectionName) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [inspectionNameField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Inspection Name Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection name to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Inspection Name Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection name to \"${newValue}\"`.toLowerCase(),\r\n                            'Inspection Name'.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Inspection Name Updated'.toLowerCase(),\r\n                            'Name'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Inspection Name updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Inspection Name updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.inspectionName) {\r\n                    const inspectionName = countryData.inspectionName;\r\n                    setSelectedInspectionName(inspectionName);\r\n                    currentValue = inspectionName;\r\n\r\n                }\r\n                else {\r\n                    setSelectedInspectionName('__NativeBasePlaceHolder__');\r\n                    currentValue = '__NativeBasePlaceHolder__';\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: width, }}>\r\n            <Select\r\n                selectedValue={selectedInspectionName}\r\n                onValueChange={(value) => {\r\n                    setSelectedInspectionName(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {inspectionNameData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updateCountryInspectionName(countryCode, selectedInspectionName)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\nconst countriesList = [\r\n    \"Zambia\",\r\n    \"D.R.Congo\",\r\n    \"Mozambique\",\r\n    \"Zimbabwe\",\r\n    \"Uganda\",\r\n    \"Tanzania\",\r\n    \"Malawi\",\r\n    \"Burundi\",\r\n    \"Lesotho\",\r\n    \"South Sudan\",\r\n    \"Botswana\",\r\n    \"Kenya\",\r\n    \"Republic of South Africa\",\r\n    \"Djibouti\",\r\n    \"Ethiopia\",\r\n    \"Angola\",\r\n    \"Benin\",\r\n    \"Cameroon\",\r\n    \"Gabon\",\r\n    \"Ghana\",\r\n    \"Guinea\",\r\n    \"Madagascar\",\r\n    \"Mali\",\r\n    \"Namibia\",\r\n    \"Nigeria\",\r\n    \"Rwanda\",\r\n    \"Sierra Leone\",\r\n    \"Sudan\",\r\n    \"Algeria\",\r\n    \"Canary Islands\",\r\n    \"Cape Verde\",\r\n    \"Central African Republic\",\r\n    \"Chad\",\r\n    \"Equatorial Guinea\",\r\n    \"Eritrea\",\r\n    \"Gambia\",\r\n    \"Liberia\",\r\n    \"Mahe\",\r\n    \"Maldives\",\r\n    \"Mauritania\",\r\n    \"Mayotte\",\r\n    \"Morocco\",\r\n    \"Niger\",\r\n    \"Republic of Guinea-Bissau\",\r\n    \"Republic of the Congo\",\r\n    \"Reunion\",\r\n    \"Saint Helena\",\r\n    \"Sao Tome and Principe\",\r\n    \"Seychelles\",\r\n    \"Swaziland\",\r\n    \"Tunisia\",\r\n    \"Afghanistan\",\r\n    \"Albania\",\r\n    \"American Samoa\",\r\n    \"Anguilla\",\r\n    \"Antigua and Barbuda\",\r\n    \"Argentina\",\r\n    \"Armenia\",\r\n    \"Aruba\",\r\n    \"Australia\",\r\n    \"Austria\",\r\n    \"Azerbaijan\",\r\n    \"Bahamas\",\r\n    \"Bahrain\",\r\n    \"Bangladesh\",\r\n    \"Barbados\",\r\n    \"Belgium\",\r\n    \"Belize\",\r\n    \"Bermuda\",\r\n    \"Bhutan\",\r\n    \"Bolivia\",\r\n    \"Bonaire/Netherlands Antilles\",\r\n    \"Brazil\",\r\n    \"British Virgin Islands\",\r\n    \"Brunei Darussalam\",\r\n    \"Bulgaria\",\r\n    \"Burkina Faso\",\r\n    \"Cambodia\",\r\n    \"Canada\",\r\n    \"Cayman Islands\",\r\n    \"Chile\",\r\n    \"Colombia\",\r\n    \"Commonwealth of Dominica\",\r\n    \"Comoros\",\r\n    \"Cook Islands\",\r\n    \"Costa Rica\",\r\n    \"Cote D'Ivoire\",\r\n    \"Croatia\",\r\n    \"Cuba\",\r\n    \"Curacao/Netherlands Antilles\",\r\n    \"Cyprus\",\r\n    \"Czech Republic\",\r\n    \"Denmark\",\r\n    \"Dominican Republic\",\r\n    \"East Timor\",\r\n    \"Ecuador\",\r\n    \"Egypt\",\r\n    \"Estonia\",\r\n    \"Fiji\",\r\n    \"Finland\",\r\n    \"France\",\r\n    \"French Guiana\",\r\n    \"French Polynesia\",\r\n    \"Georgia\",\r\n    \"Germany\",\r\n    \"Greece\",\r\n    \"Grenada\",\r\n    \"Guadeloupe\",\r\n    \"Guatemala\",\r\n    \"Guyana\",\r\n    \"Haiti\",\r\n    \"Honduras\",\r\n    \"Hong Kong\",\r\n    \"Hungary\",\r\n    \"Iceland\",\r\n    \"India\",\r\n    \"Indonesia\",\r\n    \"Iran\",\r\n    \"Iraq\",\r\n    \"Ireland\",\r\n    \"Israel\",\r\n    \"Italy\",\r\n    \"Jamaica\",\r\n    \"Japan\",\r\n    \"Jordan\",\r\n    \"Kazakhstan\",\r\n    \"Kiribati\",\r\n    \"Korea\",\r\n    \"Kuwait\",\r\n    \"Kyrgyzstan\",\r\n    \"LAO PDR\",\r\n    \"Latvia\",\r\n    \"Lebanon\",\r\n    \"Libya\",\r\n    \"Lithuania\",\r\n    \"Luxembourg\",\r\n    \"Macau\",\r\n    \"Malaysia\",\r\n    \"Malta\",\r\n    \"Marshall Islands\",\r\n    \"Martinique\",\r\n    \"Mauritius\",\r\n    \"Mexico\",\r\n    \"Micronesia\",\r\n    \"Moldova\",\r\n    \"Mongolia\",\r\n    \"Montenegro\",\r\n    \"Montserrat\",\r\n    \"Myanmar\",\r\n    \"Nauru\",\r\n    \"Nepal\",\r\n    \"Netherlands\",\r\n    \"Netherlands Antilles\",\r\n    \"New Caledonia\",\r\n    \"New Zealand\",\r\n    \"Niue\",\r\n    \"Norway\",\r\n    \"Oman\",\r\n    \"Pakistan\",\r\n    \"Palau\",\r\n    \"Panama\",\r\n    \"Papua New Guinea\",\r\n    \"Paraguay\",\r\n    \"People's Republic of China\",\r\n    \"Peru\",\r\n    \"Philippines\",\r\n    \"Poland\",\r\n    \"Portugal\",\r\n    \"Puerto Rico\",\r\n    \"Qatar\",\r\n    \"Republic of Belarus\",\r\n    \"Republic of El Salvador\",\r\n    \"Republic of Macedonia\",\r\n    \"Republic of Nicaragua\",\r\n    \"Romania\",\r\n    \"Russian Federation\",\r\n    \"Saba Island\",\r\n    \"Saint Eustatius\",\r\n    \"Saint Kitts And Nevis\",\r\n    \"Samoa\",\r\n    \"Saudi Arabia\",\r\n    \"Senegal\",\r\n    \"Serbia\",\r\n    \"Singapore\",\r\n    \"Slovak Republic\",\r\n    \"Slovenia\",\r\n    \"Solomon Islands\",\r\n    \"Somalia\",\r\n    \"Spain\",\r\n    \"Sri Lanka\",\r\n    \"St. Barthelemy\",\r\n    \"St. Croix\",\r\n    \"St. Lucia\",\r\n    \"St. Maarten\",\r\n    \"St. Thomas\",\r\n    \"St. Vincent\",\r\n    \"Suriname\",\r\n    \"Sweden\",\r\n    \"Switzerland\",\r\n    \"Syria\",\r\n    \"Taiwan\",\r\n    \"Tajikistan\",\r\n    \"Thailand\",\r\n    \"Togo\",\r\n    \"Tonga\",\r\n    \"Tortola\",\r\n    \"Trinidad and Tobago\",\r\n    \"Turkey\",\r\n    \"Turkmenistan\",\r\n    \"Turks and Caicos Islands\",\r\n    \"Tuvalu\",\r\n    \"UAE\",\r\n    \"Ukraine\",\r\n    \"United Kingdom\",\r\n    \"Uruguay\",\r\n    \"US Virgin Islands\",\r\n    \"USA\",\r\n    \"Uzbekistan\",\r\n    \"Vanuatu\",\r\n    \"Venezuela\",\r\n    \"Vietnam\",\r\n    \"Wallis et Futuna\",\r\n    \"Yemen\",\r\n    \"Somaliland\",\r\n\r\n];\r\n\r\n\r\nconst addPort = async (portName, country, sortOrder) => {\r\n    const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n    // New country data\r\n    const newCountryData = {\r\n        [portName]: {\r\n            country: country,\r\n            sortOrder: sortOrder,\r\n            method: '',\r\n        }\r\n    };\r\n\r\n    // Set document with merge option\r\n    try {\r\n        await setDoc(docRef, newCountryData, { merge: true });\r\n        console.log(\"Country added/updated successfully!\");\r\n\r\n    } catch (error) {\r\n        console.error(\"Error adding/updating country: \", error);\r\n    }\r\n};\r\n\r\n\r\nconst addCountry = async (countryName, inspectionIsRequired, inspectionName, sortOrder) => {\r\n    const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n    // New country data\r\n    const newCountryData = {\r\n        [countryName]: {\r\n            inspectionIsRequired: inspectionIsRequired,\r\n            inspectionName: inspectionName,\r\n            sortOrder: sortOrder\r\n        }\r\n    };\r\n\r\n    // Set document with merge option\r\n    try {\r\n        await setDoc(docRef, newCountryData, { merge: true });\r\n        console.log(\"Country added/updated successfully!\");\r\n\r\n    } catch (error) {\r\n        console.error(\"Error adding/updating country: \", error);\r\n    }\r\n};\r\n\r\nconst AddCountryModal = ({ handleAddCountryModalClose }) => {\r\n\r\n    const addCountryModalVisible = useSelector((state) => state.addCountryModalVisible);\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const inputCountryText = useRef(null);\r\n    const textAreaAddInspectionIsRequired = useRef(null);\r\n    const textAreaAddInspectionName = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    const [addButtonLoading, setAddButtonLoading] = useState(false);\r\n\r\n    const handleAddInspectionIsRequiredTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionIsRequired.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionIsRequired.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddInspectionNameTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionName.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionName.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddButton = async () => {\r\n        setAddButtonLoading(true);\r\n        const countryCode = inputCountryText.current?.value;\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        if (inputCountryText.current?.value !== '') {\r\n            try {\r\n                await addCountry(formattedCountryCode, 'Not-Required', '', 999);\r\n                const logData = {\r\n                    message: `Country Added: \"${nameVariable.text}\" added country \"${countryCode}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Country Added: \"${nameVariable.text}\" added country \"${countryCode}\" for Freight.`.toLowerCase(),\r\n                        'Country'.toLowerCase(),\r\n                        'Country Added'.toLowerCase(),\r\n                        'Added'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        countryCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Country added successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                dispatch(setAddCountryModalVisible(false));\r\n                setAddButtonLoading(false);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n\r\n        else {\r\n            setAddButtonLoading(false);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleFirstModalClose = () => {\r\n        dispatch(setAddCountryModalVisible(false));\r\n\r\n    };\r\n    const handleFirstModalOpen = () => {\r\n        dispatch(setAddCountryModalVisible(true));\r\n    }\r\n\r\n    const filterInput = (inputRef) => {\r\n        const currentValue = inputRef.current.value;\r\n        const filteredValue = currentValue.replace(/[^a-zA-Z0-9. ]/g, '');\r\n        if (currentValue !== filteredValue) {\r\n            inputRef.current.setNativeProps({ text: filteredValue });\r\n        }\r\n    };\r\n    return (\r\n        <Modal\r\n            isOpen={addCountryModalVisible}\r\n            onClose={() => {\r\n                handleAddCountryModalClose();\r\n                inputCountryText.current.value = '';\r\n            }}\r\n            size={'md'}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header style={{ backgroundColor: '#7B9CFF', }}><Text color={'white'} fontSize={20} bold>Add Country</Text></Modal.Header>\r\n                <Modal.Body >\r\n                    <View style={{ marginVertical: 5, }}>\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Country</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputCountryText}\r\n                            onChangeText={() => filterInput(inputCountryText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Country' />\r\n\r\n                    </View>\r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"solid\" space=\"2\">\r\n                        <Button colorScheme={'gray'} onPress={() => {\r\n                            handleAddCountryModalClose();\r\n                            inputCountryText.current.value = '';\r\n                        }}>Cancel</Button>\r\n                        {addButtonLoading ?\r\n                            (<Spinner size=\"lg\" color={'#16A34A'} />) :\r\n                            (<Button colorScheme={'success'} onPress={handleAddButton}>Add</Button>)\r\n                        }\r\n\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst NavigatePage = () => {\r\n    const selectedButton = useSelector((state) => state.selectedButton);\r\n\r\n    if (selectedButton === 'countries') {\r\n        return <CountriesTable />;\r\n    }\r\n    if (selectedButton === 'ports') {\r\n        return <PortsTable />;\r\n    }\r\n};\r\n\r\n\r\nconst AddPortsForCountriesModal = ({ handleAddPortsForCountriesModalClose, handleAddPortsForCountriesModalOpen }) => {\r\n\r\n    const addPortsForCountriesModalVisible = useSelector((state) => state.addPortsForCountriesModalVisible);\r\n    const countryPortsData = useSelector((state) => state.countryPortsData);\r\n    const [data, setData] = useState([]);\r\n    const [modalSortOpen, setModalSortOpen] = useState(false);\r\n    const [modalAddOpen, setModalAddOpen] = useState(false);\r\n    const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n    const [modalSave, setModalSave] = useState(false);\r\n    const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n    const [modalIsLoading, setModalIsLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = selectedCountry.replace(/\\./g, '_');\r\n\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.nearestPorts) {\r\n                    const nearestPorts = countryData.nearestPorts;\r\n                    setData(nearestPorts);\r\n\r\n                }\r\n                else {\r\n                    setData([]);\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [addPortsForCountriesModalVisible]);\r\n\r\n    const handleDeleteItemPress = useCallback(\r\n        (item) => {\r\n            setData((prevData) => {\r\n                const updatedData = prevData.filter((value) => value !== item);\r\n                return updatedData;\r\n            });\r\n        },\r\n        []\r\n    );\r\n\r\n    const handleModalAddOpen = useCallback(() => {\r\n        setModalAddOpen(true);\r\n        handleAddPortsForCountriesModalClose();\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, []);\r\n\r\n    const handleModalAddClose = useCallback(() => {\r\n        setModalAddOpen(false);\r\n        dispatch(setAddPortsForCountriesModalVisible(true));\r\n    }, []);\r\n\r\n    const addPortForCountryField = async (newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        setModalSaveLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n\r\n        if (selectedPortForCountry.ports !== '') {\r\n            const formattedCountryCode = selectedCountry.replace(/\\./g, '_');\r\n            const nearestPortsField = `${formattedCountryCode}.nearestPorts`;\r\n\r\n            try {\r\n                // Fetch the current nearestPorts array from Firestore\r\n                const docSnap = await getDoc(documentRef);\r\n                if (docSnap.exists()) {\r\n                    const nearestPorts = docSnap.data()[formattedCountryCode]?.nearestPorts || [];\r\n\r\n                    // Check if selectedPortForCountry is already in the nearestPorts array\r\n                    if (!nearestPorts.includes(selectedPortForCountry.ports)) {\r\n                        // Update the document with the new value\r\n                        await updateDoc(documentRef, {\r\n                            [nearestPortsField]: [...nearestPorts, selectedPortForCountry.ports]\r\n                        });\r\n\r\n                        const logData = {\r\n                            message: `Nearest Ports Added: \"${nameVariable.text}\" added \"${selectedPortForCountry.ports}\" port to \"${selectedCountry}\"`,\r\n                            timestamp: formattedTime,\r\n                            colorScheme: true,\r\n                            keywords: [\r\n                                formattedTime.toLowerCase(),\r\n                                `Nearest Ports Added: \"${nameVariable.text}\" added \"${selectedPortForCountry.ports}\" port to \"${selectedCountry}\"`.toLowerCase(),\r\n                                'Nearest Ports'.toLowerCase(),\r\n                                'Nearest'.toLowerCase(),\r\n                                'Nearest Ports Added'.toLowerCase(),\r\n                                'Ports'.toLowerCase(),\r\n                                'Added'.toLowerCase(),\r\n                                selectedPortForCountry.ports.toLowerCase(),\r\n                                selectedCountry.toLowerCase(),\r\n                                nameVariable.text.toLowerCase(),\r\n                                year.toLowerCase(),\r\n                                month.toLowerCase(),\r\n                                monthWithDay.toLowerCase(),\r\n                                date.toLowerCase(),\r\n                                day.toLowerCase(),\r\n                                time.toLowerCase(),\r\n                            ],\r\n                        };\r\n                        addLogToCollection(logData);\r\n                        handleAddPortsForCountriesModalClose();\r\n                        toast.show({\r\n                            render: () => {\r\n                                return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                    <Text style={{ color: 'white' }}>Nearest Ports added successfully</Text>\r\n                                </View>;\r\n                            }\r\n                        })\r\n                        console.log('Nearest Ports added successfully');\r\n                        setModalSaveLoading(false);\r\n                        handleModalAddClose();\r\n                        // ...\r\n                    } else {\r\n                        // Handle the case where the port already exists\r\n                        console.log('Port already exists in the nearest ports list');\r\n                        setModalSaveLoading(false);\r\n\r\n                        // You can show a message to the user here if needed\r\n                    }\r\n                } else {\r\n                    console.log('No such document!');\r\n                    setModalSaveLoading(false);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n                setModalSaveLoading(false);\r\n                // Error handling...\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.log(newValue);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const updateCountryPortsField = async (newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        setModalSaveLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = selectedCountry.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const nearestPortsField = `${formattedCountryCode}.nearestPorts`;\r\n\r\n            try {\r\n\r\n\r\n                await updateDoc(documentRef, {\r\n                    [nearestPortsField]: newValue\r\n                });\r\n\r\n                dispatch(setLoadingModalVisible(false));\r\n                const logData = {\r\n                    message: `Nearest Ports Updated: \"${nameVariable.text}\" updated \"${selectedCountry}\" nearest ports`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Nearest Ports Updated: \"${nameVariable.text}\" updated \"${selectedCountry}\" nearest ports`.toLowerCase(),\r\n                        'Nearest Ports'.toLowerCase(),\r\n                        'Nearest'.toLowerCase(),\r\n                        'Nearest Ports Updated'.toLowerCase(),\r\n                        'Ports'.toLowerCase(),\r\n                        'Updated'.toLowerCase(),\r\n                        selectedCountry.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                addLogToCollection(logData);\r\n                handleAddPortsForCountriesModalClose();\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Nearest Ports updated successfully</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                console.log('Nearest Ports updated successfully');\r\n                setModalSaveLoading(false);\r\n\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n                setModalSaveLoading(false);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.log(newValue);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <><Modal\r\n            isOpen={addPortsForCountriesModalVisible}\r\n            onClose={handleAddPortsForCountriesModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header borderBottomWidth={0}>\r\n                    <Text color={'#102A43'} bold>Manage ports for {selectedCountry}</Text>\r\n                </Modal.Header>\r\n                <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                    <View style={{ width: '100%' }}>\r\n                        <View style={{ alignItems: 'flex-end', }}>\r\n                            <TouchableOpacity onPress={handleModalAddOpen}><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></TouchableOpacity>\r\n                        </View>\r\n                        <View style={{ flex: 1, borderWidth: 1, borderColor: '#102A43', borderRadius: 5, }}>\r\n                            <DraggableFlatList\r\n                                style={{ alignContent: 'center', flex: 1, }}\r\n                                data={data}\r\n                                keyExtractor={(item) => item}\r\n                                renderItem={({ item, drag }) => (\r\n\r\n                                    <View style={{\r\n                                        flex: 1,\r\n                                        backgroundColor: 'rgba(16,42,67, 0.5)',\r\n                                        borderBottomWidth: 1,\r\n                                        borderBottomColor: '#A8A29E',\r\n                                        flexDirection: 'row',\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center',\r\n                                    }}>\r\n                                        <TouchableOpacity onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></TouchableOpacity>\r\n                                        <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                                        <TouchableOpacity onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></TouchableOpacity>\r\n                                    </View>\r\n\r\n                                )}\r\n                                onDragEnd={useCallback(({ data }) => setData(data), [])} />\r\n\r\n\r\n                        </View>\r\n\r\n                    </View>\r\n                </Modal.Body>\r\n                <Modal.Footer borderTopWidth={0}>\r\n                    <HStack space={5} flex={1}>\r\n                        <Button onPress={handleAddPortsForCountriesModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                        {modalSaveLoading ?\r\n                            (<Button flex={1} size={'sm'} borderRadius={5} colorScheme={'success'} disabled>\r\n                                <Spinner size={18} color={'white'} flex={1} borderRadius={5} />\r\n                            </Button>) :\r\n                            (<Button onPress={() => updateCountryPortsField(data)} flex={1} size={'sm'} borderRadius={5} colorScheme={'success'}>Save</Button>)\r\n                        }\r\n\r\n                    </HStack>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n            <Modal\r\n                isOpen={modalAddOpen}\r\n                onClose={handleModalAddClose}\r\n            // initialFocusRef={textAreaAdd}\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Add Ports for {selectedCountry}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                        <SearchablePortDropdown modalAddOpen={modalAddOpen} />\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={() => addPortForCountryField()} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5} colorScheme={'success'}>Add</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal></>\r\n    );\r\n\r\n}\r\n\r\nconst DeleteCountryModal = ({ handleDeleteCountryModalClose }) => {\r\n    const deleteCountryModalVisible = useSelector((state) => state.deleteCountryModalVisible);\r\n    const [buttonLoading, setButtonLoading] = useState(false);\r\n\r\n    const handleDeleteCountry = async () => {\r\n        setButtonLoading(true);\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        const formattedFieldCode = selectedCountry.replace(/\\./g, '_');\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        updateDoc(documentRef, {\r\n            [formattedFieldCode]: deleteField()\r\n        })\r\n            .then(() => {\r\n                console.log('Field deleted successfully');\r\n                handleDeleteCountryModalClose();\r\n                setButtonLoading(false);\r\n                const logData = {\r\n                    message: `Country Deleted: \"${nameVariable.text}\" deleted country \"${selectedCountry}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: false,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Country Deleted: \"${nameVariable.text}\" deleted country \"${selectedCountry}\" for Freight.`.toLowerCase(),\r\n                        'Country'.toLowerCase(),\r\n                        'Country Deleted'.toLowerCase(),\r\n                        'Deleted'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        selectedCountry.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting field: ', error);\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal isOpen={deleteCountryModalVisible} onClose={handleDeleteCountryModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header>Delete Country?</Modal.Header>\r\n                <Modal.Body>\r\n                    Are you sure you want to delete the selected country?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        <TouchableOpacity\r\n                            style={{ flex: 1, backgroundColor: '#525252', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            onPress={handleDeleteCountryModalClose}\r\n                        >\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }}>No</Text>\r\n                        </TouchableOpacity>\r\n                        {buttonLoading ?\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            ><Spinner size={18} color={'white'} />\r\n                            </TouchableOpacity>) :\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                                onPress={handleDeleteCountry}\r\n                            >\r\n                                <Text style={{ color: 'white', alignSelf: 'center', }}>Yes</Text>\r\n                            </TouchableOpacity>)\r\n                        }\r\n\r\n\r\n                    </View>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst CountriesTable = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const optionsPerPage = [10, 20, 50];\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const [data, setData] = useState([]); // This will hold all the countries data   \r\n    const [page, setPage] = useState(0);\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const inputSearchRef = useRef(null);\r\n    const inputSortOrder = useRef([]);\r\n    const toast = useToast();\r\n    const textAreaAddInspectionIsRequired = useRef(null);\r\n    const textAreaAddInspectionName = useRef(null);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter((item) =>\r\n            item.country.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.inspectionName.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.inspectionIsRequired.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.sortOrder.toString().includes(searchQuery)\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce(() => {\r\n        setSearchQuery(inputSearchRef.current?.value);\r\n    }, 50);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    // useEffect(() => {\r\n    //     const addCountriesToFirestore = async () => {\r\n    //         // Create a new list with dots replaced by underscores\r\n    //         const sanitizedCountriesList = countriesList.map(country =>\r\n    //             country.replace(/\\./g, '_')\r\n    //         );\r\n\r\n    //         for (const [index, country] of sanitizedCountriesList.entries()) {\r\n    //             // The index of an array is zero-based, to make it one-based add 1\r\n    //             // (If you really need a one-based index, otherwise just use index)\r\n    //             const sortOrder = index;\r\n    //             try {\r\n    //                 await addCountry(country, 'Not-Required', '', sortOrder);\r\n    //             } catch (error) {\r\n    //                 console.error(`Error adding country: ${country}`, error);\r\n    //                 // Optionally handle the error by stopping the loop, or continue to the next iteration\r\n    //                 // break; // Stop the loop if an error occurs\r\n    //                 // continue; // Skip to the next iteration\r\n    //             }\r\n    //             // Optionally add a delay here if necessary\r\n    //             // await new Promise(resolve => setTimeout(resolve, 1000)); // 1 second delay\r\n    //         }\r\n    //     };\r\n\r\n    //     addCountriesToFirestore();\r\n    // }, []);\r\n    const handleAddInspectionNameTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionName.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionName.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddInspectionIsRequiredTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionIsRequired.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionIsRequired.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map(key => ({\r\n                        country: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n                setFilteredData(formattedData);\r\n                dispatch(setLoadingModalVisible(false));\r\n            } else {\r\n                console.log(\"No such document!\");\r\n\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching countries: \", error);\r\n\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n\r\n    const handleAddCountryModalOpen = () => {\r\n\r\n        dispatch(setAddCountryModalVisible(true));\r\n\r\n    }\r\n\r\n    const handleAddCountryModalClose = () => {\r\n\r\n        dispatch(setAddCountryModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n    const handleAddPortsForCountriesModalOpen = (nearestPorts, country) => {\r\n\r\n        dispatch(setAddPortsForCountriesModalVisible(true));\r\n        dispatch(setCountryPortsData(nearestPorts));\r\n        // setSelectedCountry(selectedCountry);\r\n        selectedCountry = country;\r\n    }\r\n\r\n\r\n    const handleAddPortsForCountriesModalClose = () => {\r\n\r\n        dispatch(setAddPortsForCountriesModalVisible(false));\r\n    }\r\n\r\n    useEffect(() => {\r\n        paginatedData.forEach(item => {\r\n            inputSortOrder.current[item.country].value = item.sortOrder ? item.sortOrder : 0;\r\n        });\r\n        // setInputMemoValues(initialValues);\r\n\r\n    }, [paginatedData, screenWidth]); // Run this effect when 'items' changes\r\n    // Now, to update a specific field\r\n\r\n    const updateCountrySortOrder = async (countryCode, newValue, inputRef) => {\r\n        // Specify the document reference\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const sortOrderField = `${formattedCountryCode}.sortOrder`;\r\n\r\n            try {\r\n                // Perform the update\r\n                await updateDoc(documentRef, {\r\n                    [sortOrderField]: newValue\r\n                });\r\n\r\n\r\n\r\n                const logData = {\r\n                    message: `Sort Order Updated: \"${nameVariable.text}\" updated \"${countryCode}\" sort order to \"${newValue}\".`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Sort Order Updated: \"${nameVariable.text}\" updated \"${countryCode}\" sort order to \"${newValue}\"`.toLowerCase(),\r\n                        'Sort'.toLowerCase(),\r\n                        'Sort Order'.toLowerCase(),\r\n                        'Sort Order Updated'.toLowerCase(),\r\n                        'Order Updated'.toLowerCase(),\r\n                        'Order'.toLowerCase(),\r\n                        'Updated'.toLowerCase(),\r\n                        countryCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Sort order updated successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                addLogToCollection(logData);\r\n                dispatch(setLoadingModalVisible(false));\r\n                console.log('Sort order updated successfully');\r\n            } catch (error) {\r\n                console.error('Error updating sort order:', error);\r\n\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n    // Call the function to update the field\r\n\r\n\r\n\r\n\r\n    const handleSortOrderTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 3);\r\n\r\n        inputSortOrder.current[item.country].value = numericValue;\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleDeleteCountryModalOpen = (selectedValue) => {\r\n\r\n        dispatch(setDeleteCountryModalVisible(true));\r\n        selectedCountry = selectedValue;\r\n\r\n    }\r\n\r\n    const handleDeleteCountryModalClose = () => {\r\n\r\n        dispatch(setDeleteCountryModalVisible(false));\r\n\r\n    }\r\n\r\n    const handleUpdateInsurance = async (newValue, currentValue, countryCode) => {\r\n\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const insuranceField = `${formattedCountryCode}.insurance`;\r\n\r\n            try {\r\n                if (currentValue == newValue) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [insuranceField]: newValue,\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Insurance Updated: \"${nameVariable.text}\" updated \"${countryCode}\" insurance to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Insurance Updated: \"${nameVariable.text}\" updated \"${countryCode}\" insurance to \"${newValue}\"`.toLowerCase(),\r\n                            'Insurance'.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Insurance Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            newValue.toString().toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Insurance updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Insurance updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {screenWidth >= 1280 ? (\r\n                <View style={{ flex: 1, }}>\r\n                    {/* Search Bar */}\r\n                    <View style={{ padding: 10 }}>\r\n                        <TextInput\r\n                            ref={inputSearchRef}\r\n                            onSubmitEditing={handleSearch}\r\n                            style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                            placeholder='Search'\r\n                            returnKeyType='search'\r\n                            autoCapitalize='none'\r\n                        />\r\n                    </View>\r\n\r\n                    {/* Add Country Button */}\r\n                    <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                        <TouchableOpacity\r\n                            onPress={handleAddCountryModalOpen}\r\n                            style={{\r\n                                borderRadius: 5,\r\n                                padding: 10,\r\n                                borderWidth: 1,\r\n                                borderColor: 'white',\r\n                                backgroundColor: '#16A34A',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                            <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Country</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    {/* Table Headers */}\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: '#E4E4E7',\r\n                            backgroundColor: '#0642F4',\r\n                            padding: 10,\r\n                            borderRadius: 5,\r\n                            marginTop: 10,\r\n                        }}\r\n                    >\r\n                        <View style={{ flex: 1, padding: 2, }}>\r\n                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, }}>\r\n                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, flexDirection: 'row', }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='InspectionIsRequiredDoc'\r\n                                handleAddTextChange={handleAddInspectionIsRequiredTextChange}\r\n                                textAreaAdd={textAreaAddInspectionIsRequired}\r\n                                title='Inspection'\r\n                                dataName={'inspectionIsRequiredData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Inspection\"\r\n                                data={inspectionIsRequiredData}\r\n                            />\r\n                            <Text flex={1} style={{ color: 'white', }} bold>Inspection</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, flexDirection: 'row', }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='InspectionNameDoc'\r\n                                handleAddTextChange={handleAddInspectionNameTextChange}\r\n                                textAreaAdd={textAreaAddInspectionName}\r\n                                title='Inspection Name'\r\n                                dataName={'inspectionNameData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Inspection\"\r\n                                data={inspectionNameData}\r\n                            />\r\n                            <Text style={{ color: 'white', }} bold>Inspection Name</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }} bold>Insurance</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }} bold>Nearest Port</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                        {paginatedData.map((item, index) => (\r\n                            <View\r\n                                key={index}\r\n                                style={{\r\n                                    flex: 1,\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'space-between',\r\n                                    alignItems: 'center',\r\n                                    borderBottomWidth: 1,\r\n                                    borderBottomColor: '#E4E4E7',\r\n                                    backgroundColor: '#BFDBFE',\r\n                                    paddingVertical: 10,\r\n                                }}>\r\n                                <Text style={{ flex: 1, marginHorizontal: 5 }} selectable>{item.country}</Text>\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 5, }}>\r\n                                    {/* <Text style={{ borderTopLeftRadius: 5, borderBottomLeftRadius: 5, alignSelf: 'center', backgroundColor: 'white', padding: 8 }}>{item.sortOrder}→</Text> */}\r\n                                    <TextInput\r\n                                        ref={(ref) => (inputSortOrder.current[item.country] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '20%', backgroundColor: 'white', borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                        onSubmitEditing={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                        onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n\r\n                                </View>\r\n                                {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <SelectInspectionIsRequired width={'70%'} defaultValue={item.inspectionIsRequired} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n\r\n                                </View>\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <SelectInspectionName width={'70%'} defaultValue={item.inspectionName} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, marginHorizontal: 5, justifyContent: 'center', alignItems: 'center', }}>\r\n                                    <BouncyCheckbox\r\n                                        size={25}\r\n                                        fillColor=\"#0642F4\"\r\n                                        unfillColor=\"#FFFFFF\"\r\n                                        innerIconStyle={{ borderWidth: 2 }}\r\n                                        textStyle={{ fontFamily: \"JosefinSans-Regular\" }}\r\n                                        isChecked={item.insurance ? item.insurance : false}\r\n                                        onPress={(isChecked) => handleUpdateInsurance(isChecked, item.insurance ? item.insurance : false, item.country)}\r\n                                    />\r\n                                </View>\r\n                                <View style={{ flexDirection: 'row', flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <TouchableOpacity\r\n                                        onPress={() => handleAddPortsForCountriesModalOpen(item.nearestPorts ? item.nearestPorts : [], item.country)}\r\n                                        style={{ flex: 1, backgroundColor: '#0891B2', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}\r\n                                    >\r\n                                        <MaterialIcons\r\n                                            name=\"directions-boat\" // The icon name from MaterialIcons\r\n                                            size={20} // Set the size of the icon\r\n                                            color={'white'} // Set the color based on active state\r\n                                        />\r\n                                        <Text style={{ alignSelf: 'center', color: 'white', marginLeft: 3, }}>View Ports</Text>\r\n                                    </TouchableOpacity>\r\n                                    {/* <TouchableOpacity style={{ flex: 1 }}>\r\n                                <Text>Add Ports</Text>\r\n                            </TouchableOpacity> */}\r\n                                </View>\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => handleDeleteCountryModalOpen(item.country)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#DC2626',\r\n                                                borderRadius: 5,\r\n                                                padding: 10,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <AntDesign name='delete' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n                                {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                            </View>\r\n                        ))}\r\n                        <DataTable.Pagination\r\n                            page={page}\r\n                            numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                            onPageChange={(page) => setPage(page)}\r\n                            label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                            optionsPerPage={optionsPerPage}\r\n                            itemsPerPage={itemsPerPage}\r\n                            setItemsPerPage={setItemsPerPage}\r\n                            showFastPagination\r\n                            optionsLabel={'Rows per page'}\r\n                        />\r\n                    </DataTable>\r\n                    <AddCountryModal handleAddCountryModalClose={handleAddCountryModalClose} />\r\n                    <AddPortsForCountriesModal handleAddPortsForCountriesModalClose={handleAddPortsForCountriesModalClose} handleAddPortsForCountriesModalOpen={handleAddPortsForCountriesModalOpen} />\r\n                    <DeleteCountryModal handleDeleteCountryModalClose={handleDeleteCountryModalClose} />\r\n                </View>\r\n            ) :\r\n\r\n                (\r\n                    //Countries Table Mobile View\r\n                    <View style={{ flex: 1, }}>\r\n                        {/* Search Bar */}\r\n                        <View style={{ padding: 10 }}>\r\n                            <TextInput\r\n                                ref={inputSearchRef}\r\n                                onSubmitEditing={handleSearch}\r\n                                style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                                placeholder='Search'\r\n                                returnKeyType='search'\r\n                                autoCapitalize='none'\r\n                            />\r\n                        </View>\r\n\r\n                        <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                            <TouchableOpacity\r\n                                onPress={handleAddCountryModalOpen}\r\n                                style={{\r\n                                    borderRadius: 5,\r\n                                    padding: 10,\r\n                                    borderWidth: 1,\r\n                                    borderColor: 'white',\r\n                                    backgroundColor: '#16A34A',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                                <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Country</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n\r\n                        {/* Table Headers */}\r\n\r\n\r\n                        <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                            {paginatedData.map((item, index) => (\r\n                                <View\r\n                                    key={index}\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'column',\r\n                                        borderWidth: 1,\r\n                                        borderColor: '#E4E4E7',\r\n                                        backgroundColor: '#BFDBFE',\r\n                                        margin: 10,\r\n                                    }}>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <Text selectable style={{ marginLeft: 3 }}>{item.country}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            {/* <Text style={{ borderTopLeftRadius: 5, borderBottomLeftRadius: 5, alignSelf: 'center', backgroundColor: 'white', padding: 8 }}>{item.sortOrder}→</Text> */}\r\n                                            <TextInput\r\n                                                ref={(ref) => (inputSortOrder.current[item.country] = ref)}\r\n                                                style={{ outlineStyle: 'none', padding: 5, width: '100%', backgroundColor: 'white', borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                onSubmitEditing={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                                onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                            />\r\n                                            <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                <TouchableHighlight\r\n                                                    onPress={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                                    underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                    style={{\r\n                                                        backgroundColor: '#16A34A',\r\n                                                        borderRadius: 5,\r\n                                                        padding: 5,\r\n                                                        margin: 2,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    <MaterialIcons name='update' color='white' size={22} />\r\n                                                </TouchableHighlight>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Inspection</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <SelectInspectionIsRequired width={'100%'} defaultValue={item.inspectionIsRequired} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Inspection Name</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <SelectInspectionName width={'100%'} defaultValue={item.inspectionName} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Insurance</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <BouncyCheckbox\r\n                                                size={25}\r\n                                                fillColor=\"#0642F4\"\r\n                                                unfillColor=\"#FFFFFF\"\r\n                                                innerIconStyle={{ borderWidth: 2 }}\r\n                                                textStyle={{ fontFamily: \"JosefinSans-Regular\" }}\r\n                                                isChecked={item.insurance ? item.insurance : false}\r\n                                                onPress={(isChecked) => handleUpdateInsurance(isChecked, item.insurance ? item.insurance : false, item.country)}\r\n                                            />\r\n                                        </View>\r\n                                    </View>\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Nearest Port</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flexDirection: 'row', flex: 1, marginHorizontal: 5 }}>\r\n                                                <TouchableOpacity\r\n                                                    onPress={() => handleAddPortsForCountriesModalOpen(item.nearestPorts ? item.nearestPorts : [], item.country)}\r\n                                                    style={{ flex: 1, backgroundColor: '#0891B2', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}\r\n                                                >\r\n                                                    <MaterialIcons\r\n                                                        name=\"directions-boat\" // The icon name from MaterialIcons\r\n                                                        size={20} // Set the size of the icon\r\n                                                        color={'white'} // Set the color based on active state\r\n                                                    />\r\n                                                    <Text style={{ alignSelf: 'center', color: 'white', marginLeft: 3, }}>View Ports</Text>\r\n                                                </TouchableOpacity>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n\r\n                                                <View style={{ flex: 1, borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => handleDeleteCountryModalOpen(item.country)}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 6, }}>\r\n                                                        <AntDesign name='delete' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                </View>\r\n                            ))}\r\n                            <DataTable.Pagination\r\n                                page={page}\r\n                                numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                onPageChange={(page) => setPage(page)}\r\n                                label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                optionsPerPage={optionsPerPage}\r\n                                itemsPerPage={itemsPerPage}\r\n                                setItemsPerPage={setItemsPerPage}\r\n                                showFastPagination\r\n                                optionsLabel={'Rows per page'}\r\n                            />\r\n                        </DataTable>\r\n                        <AddCountryModal handleAddCountryModalClose={handleAddCountryModalClose} />\r\n                        <AddPortsForCountriesModal handleAddPortsForCountriesModalClose={handleAddPortsForCountriesModalClose} handleAddPortsForCountriesModalOpen={handleAddPortsForCountriesModalOpen} />\r\n                        <DeleteCountryModal handleDeleteCountryModalClose={handleDeleteCountryModalClose} />\r\n                    </View>\r\n                )}\r\n\r\n\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst portsList = {\r\n    \"Dar es Salaam\": { country: \"Tanzania\" },\r\n    \"Durban\": { country: \"Republic of South Africa\" },\r\n    \"Maputo\": { country: \"Mozambique\" },\r\n    \"Abidjan\": { country: \"Cote D'Ivoire\" },\r\n    \"Mombasa\": { country: \"Kenya\" },\r\n    \"Lusaka\": { country: \"Zambia\" },\r\n    \"Matadi\": { country: \"D.R. Congo\" },\r\n    \"Zanzibar\": { country: \"Tanzania\" },\r\n    \"St. John's\": { country: \"Antigua and Barbuda\" },\r\n    \"Aarhus\": { country: \"Denmark\" },\r\n    \"Abadan\": { country: \"Iran\" },\r\n    \"Abu Dhabi\": { country: \"United Arab Emirates\" },\r\n    \"Acapulco\": { country: \"Mexico\" },\r\n    \"Adelaide\": { country: \"Australia\" },\r\n    \"Aden\": { country: \"Yemen\" },\r\n    \"Al Khobar\": { country: \"Saudi Arabia\" },\r\n    \"Al Ladhiqiyah\": { country: \"Syria\" },\r\n    \"Al Mukalla\": { country: \"Yemen\" },\r\n    \"Al Qusayr\": { country: \"Egypt\" },\r\n    \"Al Ruwais\": { country: \"Qatar\" },\r\n    \"Alexandria\": { country: \"Egypt\" },\r\n    \"Algiers\": { country: \"Algeria\" },\r\n    \"Antwerp\": { country: \"Belgium\" },\r\n    \"Apia\": { country: \"Samoa\" },\r\n    \"Aqaba\": { country: \"Jordan\" },\r\n    \"Arwad\": { country: \"Syria\" },\r\n    \"As Salif\": { country: \"Yemen\" },\r\n    \"Ash Shihr\": { country: \"Yemen\" },\r\n    \"Ashdod\": { country: \"Israel\" },\r\n    \"Ashgabat\": { country: \"Turkmenistan\" },\r\n    \"Ashkelon\": { country: \"Israel\" },\r\n    \"Assab\": { country: \"Eritrea\" },\r\n    \"Assumption Island\": { country: \"Seychelles\" },\r\n    \"Asunción\": { country: \"Paraguay\" },\r\n    \"Auckland\": { country: \"New Zealand\" },\r\n    \"Avarua\": { country: \"Cook Islands\" },\r\n    \"Balboa\": { country: \"Panama\" },\r\n    \"Balhaf\": { country: \"Yemen\" },\r\n    \"Banana\": { country: \"D.R.Congo\" },\r\n    \"Bandar Abbas\": { country: \"Iran\" },\r\n    \"Bandar Seri Begawan\": { country: \"Brunei Darussalam\" },\r\n    \"Bangkok\": { country: \"Thailand\" },\r\n    \"Baniyas\": { country: \"Syria\" },\r\n    \"Banjul\": { country: \"Gambia\" },\r\n    \"Bar\": { country: \"Montenegro\" },\r\n    \"Barcelona\": { country: \"Spain\" },\r\n    \"Barranquilla\": { country: \"Colombia\" },\r\n    \"Basra\": { country: \"Iraq\" },\r\n    \"Basse-Terre\": { country: \"Guadeloupe\" },\r\n    \"Batroun\": { country: \"Lebanon\" },\r\n    \"Batumi\": { country: \"Georgia\" },\r\n    \"Beira\": { country: \"Mozambique\" },\r\n    \"Beirut\": { country: \"Lebanon\" },\r\n    \"Belize City\": { country: \"Belize\" },\r\n    \"Benghazi\": { country: \"Libya\" },\r\n    \"Berbera\": { country: \"Somalia\" },\r\n    \"Berbera\": { country: \"Somaliland\" },\r\n    \"Bissau\": { country: \"Guinea-Bissau\" },\r\n    \"Bissau\": { country: \"Republic of Guinea-Bissau\" },\r\n    \"Blantyre\": { country: \"Malawi\" },\r\n    \"Bo\": { country: \"Sierra Leone\" },\r\n    \"Boma\": { country: \"D.R.Congo\" },\r\n    \"Bosaso\": { country: \"Somalia\" },\r\n    \"Brava\": { country: \"Somalia\" },\r\n    \"Brazzaville\": { country: \"Republic of the Congo\" },\r\n    \"Bridgetown\": { country: \"Barbados\" },\r\n    \"Brisbane\": { country: \"Australia\" },\r\n    \"Buchanan\": { country: \"Liberia\" },\r\n    \"Bucharest\": { country: \"Romania\" },\r\n    \"Buenos Aires\": { country: \"Argentina\" },\r\n    \"Busan\": { country: \"South Korea\" },\r\n    \"Byblos\": { country: \"Lebanon\" },\r\n    \"Cabinda\": { country: \"Angola\" },\r\n    \"Calabar\": { country: \"Nigeria\" },\r\n    \"Calais\": { country: \"France\" },\r\n    \"Callao\": { country: \"Peru\" },\r\n    \"Cap-Haitien\": { country: \"Haiti\" },\r\n    \"Cape Town\": { country: \"South Africa\" },\r\n    \"Caracas\": { country: \"Venezuela\" },\r\n    \"Cartagena\": { country: \"Colombia\" },\r\n    \"Casablanca\": { country: \"Morocco\" },\r\n    \"Cayenne\": { country: \"French Guiana\" },\r\n    \"Cebu\": { country: \"Philippines\" },\r\n    \"Chabahar\": { country: \"Iran\" },\r\n    \"Charlotte Amalie\": { country: \"US Virgin Islands\" },\r\n    \"Chekka\": { country: \"Lebanon\" },\r\n    \"Chisinau\": { country: \"Moldova\" },\r\n    \"Chittagong\": { country: \"Bangladesh\" },\r\n    \"Christchurch\": { country: \"New Zealand\" },\r\n    \"Colombo\": { country: \"Sri Lanka\" },\r\n    \"Colonia\": { country: \"Micronesia\" },\r\n    \"Comoros\": { country: \"Comoros\" },\r\n    \"Conakry\": { country: \"Guinea\" },\r\n    \"Constanta\": { country: \"Romania\" },\r\n    \"Constanța\": { country: \"Romania\" },\r\n    \"Copenhagen\": { country: \"Denmark\" },\r\n    \"Cork\": { country: \"Ireland\" },\r\n    \"Cotonou\": { country: \"Benin\" },\r\n    \"Cristóbal\": { country: \"Panama\" },\r\n    \"Dakar\": { country: \"Senegal\" },\r\n    \"Dammam\": { country: \"Saudi Arabia\" },\r\n    \"Darwin\": { country: \"Australia\" },\r\n    \"Diego Suarez (Antsiranana)\": { country: \"Madagascar\" },\r\n    \"Dili\": { country: \"East Timor\" },\r\n    \"Djibouti\": { country: \"Djibouti\" },\r\n    \"Doha\": { country: \"Qatar\" },\r\n    \"Doraleh\": { country: \"Djibouti\" },\r\n    \"Douala\": { country: \"Cameroon\" },\r\n    \"Dubai\": { country: \"UAE\" },\r\n    \"Dublin\": { country: \"Ireland\" },\r\n    \"Duqm\": { country: \"Oman\" },\r\n    \"Durrës\": { country: \"Albania\" },\r\n    \"Dzaoudzi\": { country: \"Mayotte\" },\r\n    \"Ehoala\": { country: \"Madagascar\" },\r\n    \"Eil\": { country: \"Somalia\" },\r\n    \"Eilat\": { country: \"Israel\" },\r\n    \"El Arish\": { country: \"Egypt\" },\r\n    \"El Ma'an\": { country: \"Somalia\" },\r\n    \"El Tor\": { country: \"Egypt\" },\r\n    \"Famagusta\": { country: \"Cyprus\" },\r\n    \"Freeport\": { country: \"Bahamas\" },\r\n    \"Freetown\": { country: \"Sierra Leone\" },\r\n    \"Fremantle\": { country: \"Australia\" },\r\n    \"Funafuti\": { country: \"Tuvalu\" },\r\n    \"Garoua\": { country: \"Cameroon\" },\r\n    \"Gdansk\": { country: \"Poland\" },\r\n    \"Gdańsk\": { country: \"Poland\" },\r\n    \"Gdynia\": { country: \"Poland\" },\r\n    \"Genoa\": { country: \"Italy\" },\r\n    \"George Town\": { country: \"Cayman Islands\" },\r\n    \"Georgetown\": { country: \"Guyana\" },\r\n    \"Gizo\": { country: \"Solomon Islands\" },\r\n    \"Gothenburg\": { country: \"Sweden\" },\r\n    \"Grand Turk\": { country: \"Turks and Caicos Islands\" },\r\n    \"Greenville\": { country: \"Liberia\" },\r\n    \"Guangzhou\": { country: \"Peoples Republic of China\" },\r\n    \"Guayaquil\": { country: \"Ecuador\" },\r\n    \"Gwadar\": { country: \"Pakistan\" },\r\n    \"Gydnia\": { country: \"Poland\" },\r\n    \"Hadera\": { country: \"Israel\" },\r\n    \"Haifa\": { country: \"Israel\" },\r\n    \"Hamburg\": { country: \"Germany\" },\r\n    \"Hamilton\": { country: \"Bermuda\" },\r\n    \"Hargeisa\": { country: \"Somaliland\" },\r\n    \"Harper\": { country: \"Liberia\" },\r\n    \"Havana\": { country: \"Cuba\" },\r\n    \"Helsinki\": { country: \"Finland\" },\r\n    \"Ho Chi Minh City\": { country: \"Vietnam\" },\r\n    \"Hobyo\": { country: \"Somalia\" },\r\n    \"Hodeida\": { country: \"Yemen\" },\r\n    \"Hodeidah\": { country: \"Yemen\" },\r\n    \"Hong Kong\": { country: \"Hong Kong\" },\r\n    \"Honiara\": { country: \"Solomon Islands\" },\r\n    \"Incheon\": { country: \"South Korea\" },\r\n    \"Inchon\": { country: \"South Korea\" },\r\n    \"Istanbul\": { country: \"Turkey\" },\r\n    \"Jaffna\": { country: \"Sri Lanka\" },\r\n    \"Jakarta\": { country: \"Indonesia\" },\r\n    \"Jamestown\": { country: \"Saint Helena\" },\r\n    \"Jeddah Islamic Port\": { country: \"Saudi Arabia\" },\r\n    \"Jeddah\": { country: \"Saudi Arabia\" },\r\n    \"Jizan\": { country: \"Saudi Arabia\" },\r\n    \"Jounieh\": { country: \"Lebanon\" },\r\n    \"Jubail\": { country: \"Saudi Arabia\" },\r\n    \"Jurong\": { country: \"Singapore\" },\r\n    \"Kandla\": { country: \"India\" },\r\n    \"Kaohsiung\": { country: \"Taiwan\" },\r\n    \"Karachi\": { country: \"Pakistan\" },\r\n    \"Kathmandu\": { country: \"Nepal\" },\r\n    \"Khartoum\": { country: \"Sudan\" },\r\n    \"Khasab\": { country: \"Oman\" },\r\n    \"King Abdul Aziz Port\": { country: \"Saudi Arabia\" },\r\n    \"King Fahd Industrial Port\": { country: \"Saudi Arabia\" },\r\n    \"Kingston\": { country: \"Jamaica\" },\r\n    \"Kinshasa\": { country: \"D.R.Congo\" },\r\n    \"Kismayo\": { country: \"Somalia\" },\r\n    \"Klaipeda\": { country: \"Lithuania\" },\r\n    \"Kobe\": { country: \"Japan\" },\r\n    \"Kolkata\": { country: \"India\" },\r\n    \"Koror\": { country: \"Palau\" },\r\n    \"Kralendijk\": { country: \"Bonaire/Netherlands Antilles\" },\r\n    \"Kribi\": { country: \"Cameroon\" },\r\n    \"Kuching Port\": { country: \"Malaysia\" },\r\n    \"Kuwait City\": { country: \"Kuwait\" },\r\n    \"Kyrenia\": { country: \"Cyprus\" },\r\n    \"La Ceiba\": { country: \"Honduras\" },\r\n    \"La Digue\": { country: \"Seychelles\" },\r\n    \"La Guaira\": { country: \"Venezuela\" },\r\n    \"La Libertad\": { country: \"El Salvador\" },\r\n    \"Lae\": { country: \"Papua New Guinea\" },\r\n    \"Lagos\": { country: \"Nigeria\" },\r\n    \"Larnaca\": { country: \"Cyprus\" },\r\n    \"Las Palmas\": { country: \"Canary Islands\" },\r\n    \"Latakia\": { country: \"Syria\" },\r\n    \"Le Havre\": { country: \"France\" },\r\n    \"Le Port\": { country: \"Reunion\" },\r\n    \"Libreville\": { country: \"Gabon\" },\r\n    \"Limassol\": { country: \"Cyprus\" },\r\n    \"Limbe\": { country: \"Cameroon\" },\r\n    \"Limón\": { country: \"Costa Rica\" },\r\n    \"Lisbon\": { country: \"Portugal\" },\r\n    \"Lobito\": { country: \"Angola\" },\r\n    \"Lomé\": { country: \"Togo\" },\r\n    \"London\": { country: \"United Kingdom\" },\r\n    \"Luanda\": { country: \"Angola\" },\r\n    \"Luganville\": { country: \"Vanuatu\" },\r\n    \"Lüderitz\": { country: \"Namibia\" },\r\n    \"Mahé\": { country: \"Seychelles\" },\r\n    \"Majunga (Mahajanga)\": { country: \"Madagascar\" },\r\n    \"Majuro\": { country: \"Marshall Islands\" },\r\n    \"Malabo\": { country: \"Equatorial Guinea\" },\r\n    \"Male\": { country: \"Maldives\" },\r\n    \"Malé\": { country: \"Maldives\" },\r\n    \"Manama\": { country: \"Bahrain\" },\r\n    \"Manila\": { country: \"Philippines\" },\r\n    \"Manta\": { country: \"Ecuador\" },\r\n    \"Manzanillo\": { country: \"Mexico\" },\r\n    \"Marsa Matruh\": { country: \"Egypt\" },\r\n    \"MARSAXLOKK\": { country: \"Malta\" },\r\n    \"Marsaxlokk\": { country: \"Malta\" },\r\n    \"Marseille\": { country: \"France\" },\r\n    \"Massawa\": { country: \"Eritrea\" },\r\n    \"Mata-Utu\": { country: \"Wallis and Futuna\" },\r\n    \"Matadi\": { country: \"D.R.Congo\" },\r\n    \"Matarani\": { country: \"Peru\" },\r\n    \"Mayumba\": { country: \"Gabon\" },\r\n    \"Melbourne\": { country: \"Australia\" },\r\n    \"Merca\": { country: \"Somalia\" },\r\n    \"Mindelo\": { country: \"Cape Verde\" },\r\n    \"Miri Port\": { country: \"Malaysia\" },\r\n    \"Mocha\": { country: \"Yemen\" },\r\n    \"Mogadishu\": { country: \"Somalia\" },\r\n    \"Monaco\": { country: \"Monaco\" },\r\n    \"Monrovia\": { country: \"Liberia\" },\r\n    \"Montego Bay\": { country: \"Jamaica\" },\r\n    \"Montevideo\": { country: \"Uruguay\" },\r\n    \"Moroni\": { country: \"Comoros\" },\r\n    \"Muara\": { country: \"Brunei Darussalam\" },\r\n    \"Mukalla\": { country: \"Yemen\" },\r\n    \"Mumbai\": { country: \"India\" },\r\n    \"Muscat\": { country: \"Oman\" },\r\n    \"Nacala\": { country: \"Mozambique\" },\r\n    \"Naha\": { country: \"Japan\" },\r\n    \"Namibe\": { country: \"Angola\" },\r\n    \"Naples\": { country: \"Italy\" },\r\n    \"Nassau\": { country: \"Bahamas\" },\r\n    \"Neiafu\": { country: \"Tonga\" },\r\n    \"New Westminster\": { country: \"Canada\" },\r\n    \"New York\": { country: \"USA\" },\r\n    \"Newcastle\": { country: \"Australia\" },\r\n    \"Nieuw Nickerie\": { country: \"Suriname\" },\r\n    \"Nishtun\": { country: \"Yemen\" },\r\n    \"Nouadhibou\": { country: \"Mauritania\" },\r\n    \"Nouakchott\": { country: \"Mauritania\" },\r\n    \"Noumea\": { country: \"New Caledonia\" },\r\n    \"Novorossiysk\": { country: \"Russian Federation\" },\r\n    \"Nuku'alofa\": { country: \"Tonga\" },\r\n    \"Obock\": { country: \"Djibouti\" },\r\n    \"Odessa\": { country: \"Ukraine\" },\r\n    \"Omboue\": { country: \"Gabon\" },\r\n    \"Onne\": { country: \"Nigeria\" },\r\n    \"Oran\": { country: \"Algeria\" },\r\n    \"Oranjestad\": { country: \"Aruba\" },\r\n    \"Osaka\": { country: \"Japan\" },\r\n    \"Padang\": { country: \"Indonesia\" },\r\n    \"Palermo\": { country: \"Italy\" },\r\n    \"Papeete\": { country: \"French Polynesia\" },\r\n    \"Paramaribo\": { country: \"Suriname\" },\r\n    \"Pattaya\": { country: \"Thailand\" },\r\n    \"Pemba\": { country: \"Mozambique\" },\r\n    \"Penang Port\": { country: \"Malaysia\" },\r\n    \"Philipsburg\": { country: \"Netherlands Antilles\" },\r\n    \"Piraeus\": { country: \"Greece\" },\r\n    \"Plymouth\": { country: \"Montserrat\" },\r\n    \"Pohnpei\": { country: \"Micronesia\" },\r\n    \"Pointe Noire\": { country: \"Republic of the Congo\" },\r\n    \"Pointe-Noire\": { country: \"Republic of the Congo\" },\r\n    \"Pointe-à-Pitre\": { country: \"Guadeloupe\" },\r\n    \"Ponce\": { country: \"Puerto Rico\" },\r\n    \"Port Castries\": { country: \"St. Lucia\" },\r\n    \"Port Elizabeth\": { country: \"South Africa\" },\r\n    \"Port Gentil\": { country: \"Gabon\" },\r\n    \"Port Harcourt\": { country: \"Nigeria\" },\r\n    \"Port Kelang\": { country: \"Malaysia\" },\r\n    \"Port Kembla\": { country: \"Australia\" },\r\n    \"Port Louis\": { country: \"Mauritius\" },\r\n    \"Port Moresby\": { country: \"Papua New Guinea\" },\r\n    \"Port of Spain\": { country: \"Trinidad and Tobago\" },\r\n    \"Port Rashid\": { country: \"United Arab Emirates\" },\r\n    \"Port Réunion\": { country: \"Reunion\" },\r\n    \"Port Sudan\": { country: \"Sudan\" },\r\n    \"Port Sultan Qaboos\": { country: \"Oman\" },\r\n    \"Port Victoria\": { country: \"Seychelles\" },\r\n    \"Port Vila\": { country: \"Vanuatu\" },\r\n    \"Port Villa\": { country: \"Vanuatu\" },\r\n    \"Port-au-Prince\": { country: \"Haiti\" },\r\n    \"Port-Louis\": { country: \"Mauritius\" },\r\n    \"Port-Vila\": { country: \"Vanuatu\" },\r\n    \"Porto Grande (Mindelo)\": { country: \"Cape Verde\" },\r\n    \"Porto-Novo\": { country: \"Benin\" },\r\n    \"Porto\": { country: \"Portugal\" },\r\n    \"Poti\": { country: \"Georgia\" },\r\n    \"Praslin\": { country: \"Seychelles\" },\r\n    \"Principe\": { country: \"Sao Tome and Principe\" },\r\n    \"Providenciales\": { country: \"Turks And Caicos Islands\" },\r\n    \"Puerto Barrios\": { country: \"Guatemala\" },\r\n    \"Puerto Cabello\": { country: \"Venezuela\" },\r\n    \"Puerto Limon\": { country: \"Republic of Costa Rica\" },\r\n    \"Puerto Madryn\": { country: \"Argentina\" },\r\n    \"Puerto Plata\": { country: \"Dominican Republic\" },\r\n    \"Puerto Sucre\": { country: \"Venezuela\" },\r\n    \"Punta del Este\": { country: \"Uruguay\" },\r\n    \"Puntarenas\": { country: \"Costa Rica\" },\r\n    \"Quelimane\": { country: \"Mozambique\" },\r\n    \"Quetzal\": { country: \"Guatemala\" },\r\n    \"Rabaul\": { country: \"Papua New Guinea\" },\r\n    \"Rabigh\": { country: \"Saudi Arabia\" },\r\n    \"Ras Al Ghar\": { country: \"Saudi Arabia\" },\r\n    \"Ras al Khafji\": { country: \"Saudi Arabia\" },\r\n    \"Ras al-Arah\": { country: \"Yemen\" },\r\n    \"Ras Gharib\": { country: \"Egypt\" },\r\n    \"Ras Isa Marine Terminal\": { country: \"Yemen\" },\r\n    \"Ras Isa\": { country: \"Yemen\" },\r\n    \"Ras Shukheir\": { country: \"Egypt\" },\r\n    \"Ras Tanura\": { country: \"Saudi Arabia\" },\r\n    \"Reykjavik\": { country: \"Iceland\" },\r\n    \"Riga\": { country: \"Latvia\" },\r\n    \"Rijeka\": { country: \"Croatia\" },\r\n    \"Rio de Janeiro\": { country: \"Brazil\" },\r\n    \"Road Town\": { country: \"British Virgin Islands\" },\r\n    \"Robertsport\": { country: \"Liberia\" },\r\n    \"Roseau\": { country: \"Commonwealth Of Dominica\" },\r\n    \"Rotterdam\": { country: \"Netherlands\" },\r\n    \"Saida\": { country: \"Lebanon\" },\r\n    \"Saint George's\": { country: \"Grenada\" },\r\n    \"Saint John's\": { country: \"Antigua and Barbuda\" },\r\n    \"Saint John\": { country: \"Barbados\" },\r\n    \"Saint Louis\": { country: \"Senegal\" },\r\n    \"Saint Petersburg\": { country: \"Russian Federation\" },\r\n    \"Saint Pierre\": { country: \"Saint Pierre and Miquelon\" },\r\n    \"Saint-Denis\": { country: \"Reunion\" },\r\n    \"Saipan\": { country: \"Northern Mariana Islands\" },\r\n    \"Salalah\": { country: \"Oman\" },\r\n    \"Saleef\": { country: \"Yemen\" },\r\n    \"San Antonio\": { country: \"Chile\" },\r\n    \"San Jose\": { country: \"Antigua\" },\r\n    \"San Juan\": { country: \"Puerto Rico\" },\r\n    \"San Pedro\": { country: \"Cote D'Ivoire\" },\r\n    \"Sana'a\": { country: \"Yemen\" },\r\n    \"Santo Domingo\": { country: \"Dominican Republic\" },\r\n    \"Santo\": { country: \"Vanuatu\" },\r\n    \"Santos\": { country: \"Brazil\" },\r\n    \"Sao Tome\": { country: \"Sao Tome and Principe\" },\r\n    \"Scarborough\": { country: \"Trinidad and Tobago\" },\r\n    \"Sevastopol\": { country: \"Ukraine\" },\r\n    \"Sfax\": { country: \"Tunisia\" },\r\n    \"Shanghai\": { country: \"Peoples Republic of China\" },\r\n    \"Sharjah\": { country: \"United Arab Emirates\" },\r\n    \"Shenzhen\": { country: \"Peoples Republic of China\" },\r\n    \"Sibu Port\": { country: \"Malaysia\" },\r\n    \"Sidon\": { country: \"Lebanon\" },\r\n    \"Sihanoukville\": { country: \"Cambodia\" },\r\n    \"Singapore\": { country: \"Singapore\" },\r\n    \"Sinop\": { country: \"Turkey\" },\r\n    \"Sittwe\": { country: \"Myanmar\" },\r\n    \"Sochi\": { country: \"Russian Federation\" },\r\n    \"Socotra\": { country: \"Yemen\" },\r\n    \"Sohar\": { country: \"Oman\" },\r\n    \"Sokodé\": { country: \"Togo\" },\r\n    \"Southampton\": { country: \"United Kingdom\" },\r\n    \"Soyo\": { country: \"Angola\" },\r\n    \"Split\": { country: \"Croatia\" },\r\n    \"St. Croix\": { country: \"US Virgin Islands\" },\r\n    \"St. George\": { country: \"Grenada\" },\r\n    \"Stockholm\": { country: \"Sweden\" },\r\n    \"Suakin\": { country: \"Sudan\" },\r\n    \"Sur\": { country: \"Lebanon\" },\r\n    \"Surabaya\": { country: \"Indonesia\" },\r\n    \"Suva\": { country: \"Fiji\" },\r\n    \"Sydney\": { country: \"Australia\" },\r\n    \"Szczecin\": { country: \"Poland\" },\r\n    \"São Tomé\": { country: \"Sao Tome and Principe\" },\r\n    \"Tadjoura\": { country: \"Djibouti\" },\r\n    \"Tainan\": { country: \"Taiwan\" },\r\n    \"Tallinn\": { country: \"Estonia\" },\r\n    \"Tamatave (Toamasina)\": { country: \"Madagascar\" },\r\n    \"Tanajib\": { country: \"Saudi Arabia\" },\r\n    \"Tanjung Pelepas\": { country: \"Malaysia\" },\r\n    \"Tarawa\": { country: \"Kiribati\" },\r\n    \"Tartus\": { country: \"Syria\" },\r\n    \"Tauranga\": { country: \"New Zealand\" },\r\n    \"Tekirdag\": { country: \"Turkey\" },\r\n    \"Tema\": { country: \"Ghana\" },\r\n    \"Tianjin\": { country: \"Peoples Republic of China\" },\r\n    \"Tin Can Island\": { country: \"Nigeria\" },\r\n    \"Toamasina\": { country: \"Madagascar\" },\r\n    \"Toliara\": { country: \"Madagascar\" },\r\n    \"Tonga\": { country: \"Tonga\" },\r\n    \"Toripoli\": { country: \"Libya\" },\r\n    \"Trabzon\": { country: \"Turkey\" },\r\n    \"Trieste\": { country: \"Italy\" },\r\n    \"Trincomalee\": { country: \"Sri Lanka\" },\r\n    \"Tripoli\": { country: \"Lebanon\" },\r\n    \"Tunis\": { country: \"Tunisia\" },\r\n    \"Turkmenbashi\": { country: \"Turkmenistan\" },\r\n    \"Tyre\": { country: \"Lebanon\" },\r\n    \"Tórshavn\": { country: \"Faroe Islands\" },\r\n    \"ULAANBAATAR\": { country: \"Mongolia\" },\r\n    \"Ulcinj\": { country: \"Montenegro\" },\r\n    \"Umm Qasr\": { country: \"Iraq\" },\r\n    \"Ushuaia\": { country: \"Argentina\" },\r\n    \"Valletta\": { country: \"Malta\" },\r\n    \"Valparaíso\": { country: \"Chile\" },\r\n    \"Vancouver\": { country: \"Canada\" },\r\n    \"Varna\": { country: \"Bulgaria\" },\r\n    \"Veracruz\": { country: \"Mexico\" },\r\n    \"Victoria\": { country: \"Mahe (Seychelles)\" },\r\n    \"Visakhapatnam\": { country: \"India\" },\r\n    \"Vladivostok\": { country: \"Russian Federation\" },\r\n    \"Walvis Bay\": { country: \"Namibia\" },\r\n    \"Warri\": { country: \"Nigeria\" },\r\n    \"Wellington\": { country: \"New Zealand\" },\r\n    \"Willemstad\": { country: \"Curacao\" },\r\n    \"Yanbu\": { country: \"Saudi Arabia\" },\r\n    \"Yangon\": { country: \"Myanmar\" },\r\n    \"Yap\": { country: \"Micronesia\" },\r\n    \"Yaren\": { country: \"Nauru\" },\r\n    \"Yokohama\": { country: \"Japan\" },\r\n    \"Zeebrugge\": { country: \"Belgium\" },\r\n    \"Ziguinchor\": { country: \"Senegal\" },\r\n    \"Zonguldak\": { country: \"Turkey\" },\r\n}\r\n\r\n\r\nconst AddPortModal = ({ handleAddPortModalClose }) => {\r\n\r\n    const addPortModalVisible = useSelector((state) => state.addPortModalVisible);\r\n    const inputPortText = useRef(null);\r\n    const inputCountryText = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    const [addButtonLoading, setAddButtonLoading] = useState(false);\r\n\r\n    const handleAddButton = async () => {\r\n        setAddButtonLoading(true);\r\n        if (inputPortText.current?.value !== '' && inputCountryText.current?.value !== '') {\r\n            const countryCode = inputCountryText.current?.value;\r\n            const portCode = inputPortText.current?.value;\r\n            const formattedPortCode = portCode.replace(/\\./g, '_');\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            try {\r\n                await addPort(formattedPortCode, inputCountryText.current?.value, 9999);\r\n                const logData = {\r\n                    message: `Port Added: \"${nameVariable.text}\" added port \"${portCode}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Port Added: \"${nameVariable.text}\" added port \"${portCode}\" for Freight.`.toLowerCase(),\r\n                        'Port'.toLowerCase(),\r\n                        'Port Added'.toLowerCase(),\r\n                        'Added'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        portCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Port added successfully!</Text>\r\n                        </View>;\r\n                    }\r\n\r\n                })\r\n                dispatch(setAddPortModalVisible(false));\r\n                setAddButtonLoading(false);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        else {\r\n            setAddButtonLoading(false);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const filterInput = (inputRef) => {\r\n        const currentValue = inputRef.current.value;\r\n        const filteredValue = currentValue.replace(/[^a-zA-Z0-9. ]/g, '');\r\n        if (currentValue !== filteredValue) {\r\n            inputRef.current.setNativeProps({ text: filteredValue });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={addPortModalVisible}\r\n            onClose={() => {\r\n                handleAddPortModalClose();\r\n                inputPortText.current.value = '';\r\n            }}\r\n            size={'md'}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header style={{ backgroundColor: '#7B9CFF', }}><Text color={'white'} fontSize={20} bold>Add Port</Text></Modal.Header>\r\n                <Modal.Body >\r\n                    <View style={{ marginVertical: 5, }}>\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Port</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputPortText}\r\n                            onChangeText={() => filterInput(inputPortText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Port' />\r\n\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, marginTop: 10, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Country</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputCountryText}\r\n                            onChangeText={() => filterInput(inputCountryText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Country' />\r\n\r\n                    </View>\r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"solid\" space=\"2\">\r\n                        <Button colorScheme={'gray'} onPress={() => {\r\n                            handleAddPortModalClose();\r\n                            inputPortText.current.value = '';\r\n                        }}>Cancel</Button>\r\n                        {addButtonLoading ?\r\n                            (<Spinner size=\"lg\" color={'#16A34A'} />) :\r\n                            (<Button colorScheme={'success'} onPress={handleAddButton}>Add</Button>)\r\n                        }\r\n\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst DeletePortModal = ({ handleDeletePortModalClose }) => {\r\n    const deletePortModalVisible = useSelector((state) => state.deletePortModalVisible);\r\n    const [buttonLoading, setButtonLoading] = useState(false);\r\n\r\n    const handleDeletePort = async () => {\r\n        setButtonLoading(true);\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        const formattedFieldCode = selectedPort.replace(/\\./g, '_');\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        updateDoc(documentRef, {\r\n            [formattedFieldCode]: deleteField()\r\n        })\r\n            .then(() => {\r\n                console.log('Field deleted successfully');\r\n                handleDeletePortModalClose();\r\n                setButtonLoading(false);\r\n                const logData = {\r\n                    message: `Port Deleted: \"${nameVariable.text}\" deleted port \"${selectedPort}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: false,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Port Deleted: \"${nameVariable.text}\" deleted port \"${selectedPort}\" for Freight.`.toLowerCase(),\r\n                        'Port'.toLowerCase(),\r\n                        'Port Deleted'.toLowerCase(),\r\n                        'Deleted'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        selectedPort.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting field: ', error);\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal isOpen={deletePortModalVisible} onClose={handleDeletePortModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header>Delete Port?</Modal.Header>\r\n                <Modal.Body>\r\n                    Are you sure you want to delete the selected port?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        <TouchableOpacity\r\n                            style={{ flex: 1, backgroundColor: '#525252', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            onPress={handleDeletePortModalClose}\r\n                        >\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }}>No</Text>\r\n                        </TouchableOpacity>\r\n                        {buttonLoading ?\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            ><Spinner size={18} color={'white'} />\r\n                            </TouchableOpacity>) :\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                                onPress={handleDeletePort}\r\n                            >\r\n                                <Text style={{ color: 'white', alignSelf: 'center', }}>Yes</Text>\r\n                            </TouchableOpacity>)\r\n                        }\r\n\r\n\r\n                    </View>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst PortsTable = () => {\r\n    const dispatch = useDispatch();\r\n    const methodData = useSelector((state) => state.methodData);\r\n    const toast = useToast();\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const optionsPerPage = [10, 20, 50];\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const inputSearchRef = useRef(null);\r\n    const textAreaAddMethod = useRef(null);\r\n\r\n    const inputSortOrder = useRef([]);\r\n    const inputProfitPrice = useRef([]);\r\n    const inputNagoyaPrice = useRef([]);\r\n    const inputYokohamaPrice = useRef([]);\r\n    const inputKyushuPrice = useRef([]);\r\n    const inputKobePrice = useRef([]);\r\n    const inputMemo = useRef([]);\r\n\r\n    const [inputMemoValues, setInputMemoValues] = useState({});\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const handleSortOrderTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 3);\r\n\r\n        inputSortOrder.current[item.ports].value = numericValue;\r\n\r\n    };\r\n\r\n    const handleProfitPriceTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 4);\r\n\r\n        inputProfitPrice.current[item.ports].value = numericValue;\r\n\r\n    };\r\n\r\n\r\n    const updatePortsField = async (portCode, newValue, inputRef, title, fieldName) => {\r\n        // Specify the document reference\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = portCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const field = `${formattedCountryCode}.${fieldName}`;\r\n\r\n            try {\r\n                // Perform the update\r\n                await updateDoc(documentRef, {\r\n                    [field]: newValue\r\n                });\r\n\r\n                const logData = {\r\n                    message: `${title} Updated: \"${nameVariable.text}\" updated \"${portCode}\" ${title} to \"${newValue}\".`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `${title} Updated: \"${nameVariable.text}\" updated \"${portCode}\" ${title} to \"${newValue}\"`.toLowerCase(),\r\n                        `Sort`.toLowerCase(),\r\n                        `${title}`.toLowerCase(),\r\n                        `${title} Updated`.toLowerCase(),\r\n                        `Updated`.toLowerCase(),\r\n                        portCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>{title} updated successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                addLogToCollection(logData);\r\n                dispatch(setLoadingModalVisible(false));\r\n                console.log(`${title} updated successfully`);\r\n            } catch (error) {\r\n                console.error(`Error updating ${title}:`, error);\r\n\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter((item) =>\r\n            item.country.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.ports.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.sortOrder.toString().includes(searchQuery)\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce(() => {\r\n        setSearchQuery(inputSearchRef.current?.value);\r\n    }, 50);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    // useEffect(() => {\r\n    //     const portsDataWithSortOrder = Object.entries(portsList).reduce((acc, [portName, portDetails], index) => {\r\n    //         // Replace dots in portName with underscores\r\n    //         const sanitizedPortName = portName.replace(/\\./g, '_');\r\n    //         acc[sanitizedPortName] = { ...portDetails, sortOrder: index };\r\n    //         return acc;\r\n    //     }, {});\r\n\r\n    //     setDoc(doc(projectExtensionFirestore, \"CustomerCountryPort\", \"PortsDoc\"), portsDataWithSortOrder)\r\n    //         .then(() => {\r\n    //             console.log(\"Document successfully written!\");\r\n    //             dispatch(setLoadingModalVisible(false));\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(\"Error writing document: \", error);\r\n    //         });\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map(key => ({\r\n                        ports: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n                // setFilteredData(formattedData);\r\n                dispatch(setLoadingModalVisible(false));\r\n            } else {\r\n                console.log(\"No such document!\");\r\n                dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching countries: \", error);\r\n\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n\r\n    const handleAddMethodTextChange = () => {\r\n        const textAreaValue = textAreaAddMethod.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddMethod.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        paginatedData.forEach(item => {\r\n            inputMemo.current[item.ports].value = item.memo ? item.memo : '';\r\n            inputSortOrder.current[item.ports].value = item.sortOrder ? item.sortOrder : 0;\r\n            inputProfitPrice.current[item.ports].value = item.profitPrice ? item.profitPrice : 0;\r\n            inputNagoyaPrice.current[item.ports].value = item.nagoyaPrice ? item.nagoyaPrice : 0;\r\n            inputYokohamaPrice.current[item.ports].value = item.yokohamaPrice ? item.yokohamaPrice : 0;\r\n            inputKyushuPrice.current[item.ports].value = item.kyushuPrice ? item.kyushuPrice : 0;\r\n            inputKobePrice.current[item.ports].value = item.kobePrice ? item.kobePrice : 0;\r\n\r\n\r\n\r\n        });\r\n        // setInputMemoValues(initialValues);\r\n\r\n    }, [paginatedData]); // Run this effect when 'items' changes\r\n\r\n    const handleAddPortModalOpen = () => {\r\n\r\n        dispatch(setAddPortModalVisible(true));\r\n\r\n    }\r\n\r\n    const handleAddPortModalClose = () => {\r\n\r\n        dispatch(setAddPortModalVisible(false));\r\n\r\n    }\r\n\r\n    const handleDeletePortModalOpen = (selectedValue) => {\r\n\r\n        dispatch(setDeletePortModalVisible(true));\r\n        selectedPort = selectedValue;\r\n\r\n    }\r\n\r\n    const handleDeletePortModalClose = () => {\r\n\r\n        dispatch(setDeletePortModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {screenWidth >= 1280 ? (\r\n                <View style={{ flex: 1, }}>\r\n                    {/* Search Bar */}\r\n                    <View style={{ padding: 10 }}>\r\n                        <TextInput\r\n                            ref={inputSearchRef}\r\n                            onSubmitEditing={handleSearch}\r\n                            style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                            placeholder='Search'\r\n                            returnKeyType='search'\r\n                            autoCapitalize='none'\r\n                        />\r\n                    </View>\r\n\r\n                    {/* Add Port Button */}\r\n                    <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                        <TouchableOpacity\r\n                            onPress={handleAddPortModalOpen}\r\n                            style={{\r\n                                borderRadius: 5,\r\n                                padding: 10,\r\n                                borderWidth: 1,\r\n                                borderColor: 'white',\r\n                                backgroundColor: '#16A34A',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                            <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Port</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: '#E4E4E7',\r\n                            backgroundColor: '#0642F4',\r\n                            padding: 10,\r\n                            borderRadius: 5,\r\n                            marginTop: 10,\r\n                        }}\r\n                    >\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Port Name</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Price (USD)</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Nagoya</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Yokohama</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Kyushu</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Kobe</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, padding: 2, flexDirection: 'row' }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='MethodDoc'\r\n                                handleAddTextChange={handleAddMethodTextChange}\r\n                                textAreaAdd={textAreaAddMethod}\r\n                                title='Method'\r\n                                dataName={'methodData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Method\"\r\n                                data={methodData}\r\n                            />\r\n                            <Text style={{ color: 'white', }} bold>Method</Text>\r\n                        </View>\r\n                        <View style={{ flex: 2, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Memo</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n                    <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                        {paginatedData.map((item, index) => (\r\n                            <View\r\n                                key={index}\r\n                                style={{\r\n                                    flex: 1,\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'space-between',\r\n                                    alignItems: 'center',\r\n                                    borderBottomWidth: 1,\r\n                                    borderBottomColor: '#E4E4E7',\r\n                                    backgroundColor: '#BFDBFE',\r\n                                    paddingVertical: 10,\r\n                                }}>\r\n                                <Text style={{ flex: 1, marginHorizontal: 3 }} selectable>{item.ports}</Text>\r\n                                <Text style={{ flex: 1, marginHorizontal: 3, alignSelf: 'center' }} selectable>{item.country}</Text>\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.sortOrder ? item.sortOrder : 0}→</Text> */}\r\n                                    <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, borderLeftColor: '#E4E4E7', }}>\r\n                                        <TextInput\r\n                                            onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                            onSubmitEditing={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                            ref={(ref) => (inputSortOrder.current[item.ports] = ref)}\r\n                                            style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5 }}\r\n                                        />\r\n                                        <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                            <TouchableHighlight\r\n                                                onPress={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                style={{\r\n                                                    backgroundColor: '#16A34A',\r\n                                                    borderRadius: 5,\r\n                                                    padding: 5,\r\n                                                    margin: 2,\r\n                                                    alignSelf: 'center',\r\n                                                }}>\r\n                                                <MaterialIcons name='update' color='white' size={22} />\r\n                                            </TouchableHighlight>\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.profitPrice ? item.profitPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onChangeText={(text) => handleProfitPriceTextChange(text, item)}\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                        ref={(ref) => (inputProfitPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.nagoyaPrice ? item.nagoyaPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                        ref={(ref) => (inputNagoyaPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.yokohamaPrice ? item.yokohamaPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                        ref={(ref) => (inputYokohamaPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kyushuPrice ? item.kyushuPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                        ref={(ref) => (inputKyushuPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kobePrice ? item.kobePrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                        ref={(ref) => (inputKobePrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: screenWidth < 1800 ? 2 : 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    <SelectMethod defaultValue={item.method} portCode={item.ports} page={page} searchQuery={searchQuery} />\r\n                                </View>\r\n\r\n                                <View style={{ flex: 2, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n                                    <TextInput\r\n                                        multiline\r\n                                        // value={inputMemoValues[item.ports] || ''}\r\n                                        // onChangeText={(text) => handleMemoTextChange(text, item.ports)}\r\n                                        ref={(ref) => (inputMemo.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', flex: 2, height: 60, paddingLeft: 5, backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, }}\r\n                                    />\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputMemo.current[item.ports].value, inputMemo, 'Memo', 'memo')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => handleDeletePortModalOpen(item.ports)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#DC2626',\r\n                                                borderRadius: 5,\r\n                                                padding: 10,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <AntDesign name='delete' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n                                {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                            </View>\r\n                        ))}\r\n                        <DataTable.Pagination\r\n                            page={page}\r\n                            numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                            onPageChange={(page) => setPage(page)}\r\n                            label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                            optionsPerPage={optionsPerPage}\r\n                            itemsPerPage={itemsPerPage}\r\n                            setItemsPerPage={setItemsPerPage}\r\n                            showFastPagination\r\n                            optionsLabel={'Rows per page'}\r\n                        />\r\n                    </DataTable>\r\n                    <AddPortModal handleAddPortModalClose={handleAddPortModalClose} />\r\n                    <DeletePortModal handleDeletePortModalClose={handleDeletePortModalClose} />\r\n                </View>) :\r\n                (\r\n                    //Ports Table Mobile View\r\n                    <View style={{ flex: 1, }}>\r\n                        {/* Search Bar */}\r\n                        <View style={{ padding: 10 }}>\r\n                            <TextInput\r\n                                ref={inputSearchRef}\r\n                                onSubmitEditing={handleSearch}\r\n                                style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                                placeholder='Search'\r\n                                returnKeyType='search'\r\n                                autoCapitalize='none'\r\n                            />\r\n                        </View>\r\n\r\n                        {/* Add Port Button */}\r\n                        <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                            <TouchableOpacity\r\n                                onPress={handleAddPortModalOpen}\r\n                                style={{\r\n                                    borderRadius: 5,\r\n                                    padding: 10,\r\n                                    borderWidth: 1,\r\n                                    borderColor: 'white',\r\n                                    backgroundColor: '#16A34A',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                                <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Port</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n                        <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                            {paginatedData.map((item, index) => (\r\n                                <View\r\n                                    key={index}\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'column',\r\n                                        borderWidth: 1,\r\n                                        borderColor: '#E4E4E7',\r\n                                        backgroundColor: '#BFDBFE',\r\n                                        margin: 10,\r\n                                    }}>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Port Name</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <Text style={{ flex: 1, marginHorizontal: 3 }} selectable>{item.ports}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n                                            <Text style={{ flex: 1, marginHorizontal: 3, }} selectable>{item.country}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.sortOrder ? item.sortOrder : 0}→</Text> */}\r\n                                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, borderLeftColor: '#E4E4E7', }}>\r\n                                                    <TextInput\r\n                                                        onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                                        onSubmitEditing={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                        ref={(ref) => (inputSortOrder.current[item.ports] = ref)}\r\n                                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5 }}\r\n                                                    />\r\n                                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                        <TouchableHighlight\r\n                                                            onPress={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                            style={{\r\n                                                                backgroundColor: '#16A34A',\r\n                                                                borderRadius: 5,\r\n                                                                padding: 5,\r\n                                                                margin: 2,\r\n                                                                alignSelf: 'center',\r\n                                                            }}>\r\n                                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                                        </TouchableHighlight>\r\n                                                    </View>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Price (USD)</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.profitPrice ? item.profitPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onChangeText={(text) => handleProfitPriceTextChange(text, item)}\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                                    ref={(ref) => (inputProfitPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Nagoya</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.nagoyaPrice ? item.nagoyaPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                                    ref={(ref) => (inputNagoyaPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Yokohama</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.yokohamaPrice ? item.yokohamaPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                                    ref={(ref) => (inputYokohamaPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Kyushu</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kyushuPrice ? item.kyushuPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                                    ref={(ref) => (inputKyushuPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Kobe</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kobePrice ? item.kobePrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                                    ref={(ref) => (inputKobePrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Method</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                <SelectMethod defaultValue={item.method} portCode={item.ports} page={page} searchQuery={searchQuery} />\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Memo</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 2, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n                                                <TextInput\r\n                                                    multiline\r\n                                                    // value={inputMemoValues[item.ports] || ''}\r\n                                                    // onChangeText={(text) => handleMemoTextChange(text, item.ports)}\r\n                                                    ref={(ref) => (inputMemo.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', flex: 2, height: 60, paddingLeft: 5, backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, }}\r\n                                                />\r\n                                                <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputMemo.current[item.ports].value, inputMemo, 'Memo', 'memo')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            alignSelf: 'center',\r\n                                                            height: '100%',\r\n                                                            justifyContent: 'center',\r\n                                                            alignItems: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n                                                <View style={{ width: '100%', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => handleDeletePortModalOpen(item.ports)}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 6, }}>\r\n                                                        <AntDesign name='delete' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                    {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                    {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                                </View>\r\n                            ))}\r\n                            <DataTable.Pagination\r\n                                page={page}\r\n                                numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                onPageChange={(page) => setPage(page)}\r\n                                label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                optionsPerPage={optionsPerPage}\r\n                                itemsPerPage={itemsPerPage}\r\n                                setItemsPerPage={setItemsPerPage}\r\n                                showFastPagination\r\n                                optionsLabel={'Rows per page'}\r\n                            />\r\n                        </DataTable>\r\n                        <AddPortModal handleAddPortModalClose={handleAddPortModalClose} />\r\n                        <DeletePortModal handleDeletePortModalClose={handleDeletePortModalClose} />\r\n                    </View>\r\n                )}\r\n        </>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default function Freight() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const logo = require('../../assets/C-Hub.png');\r\n    const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n    const [isMobileView, setIsMobileView] = useState(false);\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    // const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n\r\n\r\n    const loginName = useSelector((state) => state.loginName);\r\n    nameVariable.text = loginName;\r\n    const [name, setName] = useState(loginName);\r\n    const [time, setTime] = useState('');\r\n\r\n    const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n    const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const updateWidth = () => {\r\n            const newWidth = Dimensions.get('window').width;\r\n            setScreenWidth(newWidth); // Update the screenWidth state\r\n        };\r\n\r\n        // Add event listener for window resize\r\n        Dimensions.addEventListener('change', updateWidth);\r\n\r\n        // Clean up the event listener when the component unmounts or re-renders\r\n        return () => {\r\n            Dimensions.removeEventListener('change', updateWidth);\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setSelectedButton(defaultSelectedButton));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                // navigation.navigate(\"Login\")\r\n                navigate(\"/Login\");\r\n            }\r\n        })\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(projectControlAuth)\r\n                    .then(() => {\r\n                        // navigation.navigate('Login');\r\n                        navigate(\"/Login\");\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(projectControlAuth)\r\n                .then(() => {\r\n                    // navigation.navigate('Login');\r\n                    navigate(\"/Login\");\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = projectControlAuth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const listenForNameChange = (documentId) => {\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(projectControlAuth).then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n\r\n            setEmail('');\r\n            setName('');\r\n        }).catch(() => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#0642F4'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#0642F4'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <NativeBaseProvider>\r\n            <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#0642f4'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={0}\r\n                    borderBottomColor={'cyan.500'}\r\n                >\r\n\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen} />\r\n\r\n                    <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image} />\r\n                    </Box>\r\n                    {/* \r\n                    {screenWidth <= 960 && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen} />} */}\r\n\r\n\r\n                    <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image} />\r\n                    </Box>\r\n\r\n\r\n                    <View style={{ alignItems: 'center', flex: 1 }}>\r\n                        <QRCodeScanner />\r\n                    </View>\r\n\r\n                    <NamePopover name={name} handleSignOut={handleSignOut} />\r\n\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\r\n\r\n\r\n                    {/* Main Content */}\r\n                    {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n                    {/* Main Content Content */}\r\n\r\n\r\n                    {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n                    <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\r\n                        <ScrollView style={{ flex: 1, }} keyboardShouldPersistTaps='always'>\r\n                            <View style={{ flex: 1, }}>\r\n\r\n                                <FreightNavigation />\r\n                                <NavigatePage />\r\n                                {/* {selectedButton == 'countries' ? <CountriesTable /> : <></>}\r\n                                {selectedButton == 'ports' ? <PortsTable /> : <></>} */}\r\n                            </View>\r\n                        </ScrollView>\r\n                        {/* <SuccessModal /> */}\r\n\r\n                    </View>\r\n\r\n\r\n                    {/* </Box> */}\r\n\r\n                    {/* </Box> */}\r\n                </View>\r\n\r\n            </View>\r\n            <LoadingModal />\r\n\r\n        </NativeBaseProvider>\r\n    );\r\n}","import { useState } from \"react\";\r\nimport { View, Dimensions, StyleSheet, Image } from \"react-native\";\r\nimport { Box, Flex, Popover, Button, Text } from \"native-base\";\r\nimport FastImage from \"react-native-fast-image-web-support\";\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo,\r\n  FontAwesome5,\r\n  EvilIcons\r\n} from 'react-native-vector-icons';\r\n\r\nimport MobileViewDrawer from \"../SideDrawer/MobileViewDrawer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst NamePopover = ({ name, handleSignOut }) => {\r\n  const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n  const showPopover = () => {\r\n    setShowNamePopover(!showNamePopover);\r\n  };\r\n\r\n  return (\r\n    <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n      <Flex direction=\"row-reverse\">\r\n        <Popover\r\n          isOpen={showNamePopover}\r\n          trigger={(triggerProps) => (\r\n            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n              <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n            </Text>\r\n          )}\r\n          onClose={() => setShowNamePopover(!showNamePopover)}\r\n          placement='bottom right'\r\n          trapFocus={false}\r\n        >\r\n          <Popover.Content backgroundColor={'#7B9CFF'}>\r\n            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n              <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                Logout\r\n              </Button>\r\n            </Popover.Body>\r\n          </Popover.Content>\r\n        </Popover>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst StickyHeader = ({ selectedScreen, handleSignOut }) => {\r\n  const loginName = useSelector((state) => state.loginName);\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  // const logo = require('https://i.imgur.com/V98nKSK.png');\r\n  // const logo2 = require('https://i.imgur.com/NGCIoSV.png');\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  return (\r\n\r\n    <Box\r\n      px=\"3\"\r\n      bgColor='#7b9cff'\r\n      height={54}\r\n      position=\"sticky\"\r\n      top={0}\r\n      zIndex={999}\r\n      flexDirection=\"row\"\r\n      alignItems=\"center\"\r\n      borderBottomWidth={2}\r\n      borderBottomColor={'cyan.500'} >\r\n\r\n      <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n        <Image\r\n          source={{ uri: 'https://i.imgur.com/V98nKSK.png' }}\r\n          style={styles.image}\r\n          resizeMode=\"stretch\"\r\n        />\r\n      </Box>\r\n\r\n      {screenWidth <= 960 && <MobileViewDrawer\r\n        selectedScreen={selectedScreen}\r\n      />}\r\n\r\n\r\n      <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n      <Image\r\n          source={{ uri: 'https://i.imgur.com/NGCIoSV.png' }}\r\n          style={styles.image}\r\n          resizeMode=\"stretch\"\r\n        />\r\n      </Box>\r\n\r\n      <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n    </Box>\r\n\r\n  );\r\n}\r\n\r\nexport default StickyHeader;","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Keyboard } from 'react-native';\r\nimport {\r\n    Input,\r\n    Icon,\r\n    Stack,\r\n    Pressable,\r\n    Center,\r\n    PresenceTransition,\r\n    NativeBaseProvider,\r\n    Button,\r\n    Box,\r\n    HStack,\r\n    Image,\r\n    Container,\r\n    Header,\r\n    Left,\r\n    Body,\r\n    Title,\r\n    Content,\r\n    Text,\r\n    Heading,\r\n    Flex,\r\n    VStack,\r\n    ScrollView,\r\n    SectionList,\r\n    useBreakpointValue,\r\n    Spinner,\r\n    Modal,\r\n    Divider,\r\n    IconButton,\r\n    Popover\r\n} from \"native-base\";\r\nimport { DataTable } from 'react-native-paper';\r\nimport {\r\n    FontAwesome,\r\n    Entypo,\r\n    MaterialIcons,\r\n    Ionicons,\r\n    Fontisto,\r\n    EvilIcons,\r\n    AntDesign,\r\n    MaterialCommunityIcons,\r\n    Feather,\r\n    FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, limit } from '../../firebasecontrol'\r\nimport { arrayUnion, where, startAfter, endBefore, limitToLast, collectionGroup } from 'firebase/firestore';\r\nimport { projectExtensionFirestore, projectControlFirestore } from '../../crossFirebase';\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './../style.css';\r\nimport { debounce, set, throttle } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { bg } from 'date-fns/locale';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { LineChart, BarChart } from 'react-native-chart-kit';\r\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from 'victory';\r\nimport {\r\n    OPEN_EXCHANGE_API_KEY\r\n} from '@env';\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\nimport {\r\n    setLogsData,\r\n    setLoadingModalVisible,\r\n} from './redux/store';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\nlet selectedScreen = 'LOGS'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const addKeywordsToLogs = async () =>{\r\n//     const logsRef = collection(projectControlFirestore, \"logs\");\r\n\r\n//     try {\r\n//       const querySnapshot = await getDocs(logsRef);\r\n\r\n//       querySnapshot.forEach((doc) => {\r\n//         const data = doc.data();\r\n//         const keywords = [\r\n//           data.timestamp,\r\n//           data.message,\r\n//         ];\r\n\r\n//         updateDoc(doc.ref, {\r\n//           keywords: arrayUnion(...keywords)\r\n//         });\r\n//       });\r\n\r\n//       console.log(\"Keywords added successfully to logs collection.\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding keywords to logs collection:\", error);\r\n//     }\r\n//   }\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }} selectable={false}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nconst LogsTable = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [firstVisible, setFirstVisible] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const searchInputRef = useRef(null);\r\n    const logsData = useSelector((state) => state.logsData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(projectControlFirestore, 'logs'),\r\n            orderBy('timestamp', 'desc'),\r\n            limit(pageSize)\r\n        );\r\n        const unsubscribe = onSnapshot(q, (documents) => {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n            dispatch(setLogsData(logsDatabaseData));\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            setFirstVisible(documents.docs[0]);\r\n        });\r\n        return () => unsubscribe();\r\n\r\n    }, []);\r\n\r\n    const fetchNextData = async () => {\r\n\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collectionGroup(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n        }\r\n\r\n        else {\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const fetchPreviousData = async () => {\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev')\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev');\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchFirstPage = (documents) => {\r\n\r\n\r\n        const logsDatabaseData = [];\r\n\r\n        documents.forEach((document) => {\r\n            logsDatabaseData.push({\r\n                id: document.id,\r\n                ...document.data(),\r\n            });\r\n        });\r\n\r\n        dispatch(setLogsData(logsDatabaseData));\r\n\r\n        if (documents?.docs[0]) {\r\n            setFirstVisible(documents.docs[0]);\r\n        }\r\n        if (documents?.docs[documents.docs.length - 1]) {\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n        if (!documents.empty) {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n\r\n\r\n\r\n            if (documents?.docs[0]) {\r\n                setFirstVisible(documents.docs[0]);\r\n            }\r\n            if (documents?.docs[documents.docs.length - 1]) {\r\n                setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            }\r\n\r\n            if (pageClicked == 'next') {\r\n                setCurrentPage(currentPage + 1);\r\n            }\r\n            if (pageClicked == 'prev') {\r\n                setCurrentPage(currentPage - 1);\r\n            }\r\n\r\n            dispatch(setLogsData(logsDatabaseData));\r\n        }\r\n\r\n        else {\r\n\r\n            if (searchText == '') {\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n            else {\r\n\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleNextPage = async () => {\r\n        // setPageClicked('next');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage + 1);\r\n        await fetchNextData();\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handlePreviousPage = async () => {\r\n        // setPageClicked('previous');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage - 1);\r\n        await fetchPreviousData();\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        searchData();\r\n\r\n    }, [searchText]);\r\n\r\n    const searchData = async () => {\r\n\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        if (searchText === '') {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n    };\r\n\r\n    const handleSearchEnter = () => {\r\n\r\n        if (searchInputRef.current?.value !== '') {\r\n            setSearchText(searchInputRef.current.value.trim());\r\n        }\r\n        else {\r\n            setSearchText('');\r\n\r\n            if (searchText == '') {\r\n                searchData();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={{ flex: 1, }}>\r\n            <View>\r\n                <TextInput ref={searchInputRef} style={{ width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\r\n                    onSubmitEditing={handleSearchEnter}\r\n                    placeholder='Search'\r\n                    returnKeyType='search'\r\n                    keyboardType='default'\r\n                    autoCapitalize='none'\r\n                />\r\n            </View>\r\n            <View\r\n                style={{\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between',\r\n                    borderBottomWidth: 1,\r\n                    borderBottomColor: '#E4E4E7',\r\n                    backgroundColor: '#0642F4',\r\n                    padding: 2,\r\n                    borderRadius: 5,\r\n                }}>\r\n                <View style={{ flex: 1, padding: 2 }}>\r\n                    <Text style={{ color: 'white', }} bold>Timestamp</Text>\r\n                </View>\r\n                <View style={{ flex: 1, padding: 2 }}>\r\n                    <Text style={{ color: 'white', }} bold>Action</Text>\r\n                </View>\r\n            </View>\r\n            {logsData.map((item) => (\r\n                <View\r\n                    key={item.id}\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#E4E4E7',\r\n                        backgroundColor: item.colorScheme ? '#BBF7D0' : '#EAC7D6',\r\n                        paddingVertical: 10,\r\n                        flexGrow: 1,\r\n                    }}>\r\n                    <View style={{ flex: 1, }}>\r\n                        <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.timestamp}</Text>\r\n                    </View>\r\n                    <View style={{ flex: 1 }}>\r\n                        <Text selectable style={{ width: '90%', }}>{item.message} </Text>\r\n                    </View>\r\n                </View>\r\n            ))}\r\n\r\n            <View style={{ flexDirection: 'row', width: screenWidth < 960 ? '90%' : '30%', alignSelf: 'center', }}>\r\n\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <TouchableOpacity\r\n                        style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                        onPress={handlePreviousPage}>\r\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                            <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n                <View style={{ flex: 1, backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n                </View>\r\n\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                    <TouchableOpacity\r\n                        onPress={handleNextPage}>\r\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                            <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n            <TouchableOpacity\r\n              onPress={addKeywordsToVehicleProducts}>\r\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                <MaterialIcons name='save' size={40} color={'white'} />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View> */}\r\n\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n\r\n};\r\n\r\nconst addLogToCollection = async (data) => {\r\n    try {\r\n        const firestore = getFirestore();\r\n        const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n        // Add a new document to the \"logs\" collection\r\n        await addDoc(logsCollectionRef, data);\r\n\r\n        // console.log('Document added successfully!');\r\n    } catch (error) {\r\n        console.error('Error adding document:', error);\r\n    }\r\n};\r\n\r\nconst CurrencyConverterComponent = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n    const [successModalVisible, setSuccessModalVisible] = useState(false);\r\n    const [todayCurrency, setTodayCurrency] = useState([]);\r\n    const [timestampCurrency, setTimestampCurrency] = useState([]);\r\n    const [exchangeRate, setExchangeRate] = useState('');\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [time, setTime] = useState('');\r\n    const [lastUpdate, setLastUpdate] = useState(null);\r\n    const loginName = useSelector((state) => state.loginName);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onSnapshot(\r\n            doc(projectExtensionFirestore, 'currency', 'currency'),\r\n            (snapshot) => {\r\n                const data = snapshot.data();\r\n                setTodayCurrency(data?.todayCurrency);\r\n                setTimestampCurrency(data?.timestampCurrency);\r\n            }\r\n        );\r\n\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const CurrencyConverter = async () => {\r\n\r\n        setIsLoading(true);\r\n        setIsYesLoading(true);\r\n        try {\r\n            const response = await axios.get(\r\n                `https://openexchangerates.org/api/latest.json?app_id=${OPEN_EXCHANGE_API_KEY}`\r\n            );\r\n\r\n            // Replace 'YOUR_APP_ID' with your actual API key obtained from Open Exchange Rates\r\n\r\n\r\n            const rates = response.data.rates;\r\n            const usdToJpy = 1 / rates.JPY; // Invert the rate to convert USD to JPY\r\n            const JpyToUsd = rates.JPY / 1;\r\n\r\n\r\n\r\n            const yenToDollar = Number(usdToJpy.toFixed(4)); // Move the toFixed here\r\n            const dollarToYen = Number(JpyToUsd.toFixed(4));\r\n\r\n            const usdToEur = 1 / rates.EUR;\r\n            const eurToUsd = rates.EUR;\r\n\r\n            const usdToGbp = 1 / rates.GBP;\r\n            const gbpToUsd = rates.GBP;\r\n\r\n            const usdToAud = 1 / rates.AUD;\r\n            const audToUsd = rates.AUD;\r\n\r\n\r\n            const usdToCad = 1 / rates.CAD;\r\n            const cadToUsd = rates.CAD;\r\n\r\n            // Calculate Yen to Euro and Euro to Yen\r\n            const yenToEuro = yenToDollar * eurToUsd; // Convert Yen to USD first, then to Euro\r\n            const euroToYen = dollarToYen * usdToEur; // Convert Euro to USD first, then to Yen\r\n\r\n            const yenToGbp = yenToDollar * gbpToUsd; // Convert Yen to USD first, then to Pound Sterling\r\n            const gbpToYen = dollarToYen * usdToGbp; // Convert Pound Sterling to USD first, then to Yen\r\n\r\n            const yenToAud = yenToDollar * audToUsd; // Convert Yen to USD first, then to Australian Dollars\r\n            const audToYen = dollarToYen * usdToAud; // Convert Australian Dollars to USD first, then to Yen\r\n\r\n            const yenToCad = yenToDollar * cadToUsd; // Convert Yen to USD first, then to Canadian Dollars\r\n            const cadToYen = dollarToYen * usdToCad; // Convert Canadian Dollars to USD first, then to Yen\r\n\r\n            // Format the new rates\r\n\r\n\r\n\r\n            setExchangeRate(yenToDollar);\r\n\r\n            const timestamp = response.data.timestamp;\r\n            const lastUpdateDate = new Date(timestamp * 1000);\r\n            setLastUpdate(lastUpdateDate);\r\n\r\n            const formattedLastUpdate = lastUpdateDate.toLocaleString('en-US', {\r\n                month: 'long',\r\n                day: 'numeric',\r\n                year: 'numeric',\r\n                hour: 'numeric',\r\n                minute: 'numeric',\r\n                second: 'numeric',\r\n                timeZoneName: 'short',\r\n            });\r\n\r\n            const newTodayCurrency = `1 JPY = ${yenToDollar} USD / 1 USD = ${dollarToYen} JPY\\n1 JPY = ${yenToEuro.toFixed(4)} EUR / 1 EUR = ${euroToYen.toFixed(4)} JPY\\n1 JPY = ${yenToAud.toFixed(4)} AUD / 1 AUD = ${audToYen.toFixed(4)} JPY\\n1 JPY = ${yenToGbp.toFixed(4)} GBP / 1 GBP = ${gbpToYen.toFixed(4)} JPY\\n1 JPY = ${yenToCad.toFixed(4)} CAD / 1 CAD = ${cadToYen.toFixed(4)} JPY\\n`;\r\n            const currencyRef = doc(projectExtensionFirestore, 'currency', 'currency');\r\n\r\n            try {\r\n                await setDoc(currencyRef, {\r\n                    jpyToUsd: Number(usdToJpy),\r\n                    usdToJpy: Number(JpyToUsd),\r\n                    jpyToEur: yenToEuro,\r\n                    eurToJpy: euroToYen,\r\n                    jpyToGbp: yenToGbp,\r\n                    gbpToJpy: gbpToYen,\r\n                    jpyToAud: yenToAud,\r\n                    audToJpy: audToYen,\r\n                    usdToEur: eurToUsd,\r\n                    eurToUsd: usdToEur,\r\n                    usdToGbp: gbpToUsd,\r\n                    gbpToUsd: usdToGbp,\r\n                    usdToAud: audToUsd,\r\n                    audToUsd: usdToAud,\r\n                    cadToUsd: usdToCad,\r\n                    usdToCad: cadToUsd,\r\n                    jpyToCad: cadToYen,\r\n                    cadToJpy: yenToCad,\r\n                    todayCurrency: newTodayCurrency,\r\n                    timestampCurrency: 'Updated Last: ' + formattedLastUpdate,\r\n                }, { merge: true });\r\n                // console.log('Currency data updated successfully!');\r\n                setSuccessModalVisible(true);\r\n                setModalVisible(false);\r\n                setIsLoading(false);\r\n                setIsYesLoading(false);\r\n                try {\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime(formattedTime);\r\n\r\n                    const logDataCurrency = {\r\n                        message: `Currency Update: \"${loginName}\" updated the currency exchange.\\n¥JPY → $USD = ${Number(usdToJpy).toFixed(4)} / $USD → ¥JPY = ${Number(JpyToUsd).toFixed(4)}\\n¥JPY → €EUR = ${yenToEuro.toFixed(4)} / €EUR → ¥JPY = ${euroToYen.toFixed(4)}\\n¥JPY → A$AUD = ${yenToAud.toFixed(4)} / A$AUD → ¥JPY = ${audToYen.toFixed(4)}\\n¥JPY → £GBP = ${yenToGbp.toFixed(4)} / £GBP → ¥JPY = ${gbpToYen.toFixed(4)}\\n¥JPY → C$CAD = ${yenToCad.toFixed(4)} / C$CAD → ¥JPY = ${cadToYen.toFixed(4)}`,\r\n                        timestamp: formattedTime, // Use the formatted time here\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            loginName.toLowerCase(),\r\n                            '$'.toLowerCase(),\r\n                            '¥'.toLowerCase(),\r\n                            `Currency Update: \"${loginName}\" updated the currency exchange.`.toLowerCase(),\r\n                            'Update'.toLowerCase(),\r\n                            'Currency'.toLowerCase(),\r\n                            formattedTime.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n\r\n                    };\r\n\r\n                    addLogToCollection(logDataCurrency);\r\n                }\r\n                catch (error) {\r\n                    console.error('Error fetching time:', error);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Error updating currency data:', error);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching exchange rate:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleCloseCurrencyModal = () => {\r\n        setModalVisible(false);\r\n        setIsLoading(false);\r\n    };\r\n    const handleOpenCurrencyModal = () => {\r\n        setModalVisible(true);\r\n        setIsLoading(true);\r\n    };\r\n\r\n    const handleCloseSuccessModal = () => {\r\n        setSuccessModalVisible(false);\r\n        setIsLoading(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                flex={1}\r\n                borderWidth={1}\r\n                borderColor=\"gray.200\"\r\n                borderRadius={4}\r\n                overflow=\"hidden\"\r\n                margin={1}\r\n                alignItems={'center'}\r\n                bg=\"#F5F5F5\">\r\n                <Image\r\n                    source={require('../../assets/currency_background.jpg')}\r\n                    alt=\"Background Image\"\r\n                    resizeMode=\"stretch\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    position={'absolute'}\r\n\r\n                />\r\n\r\n                <Center height=\"100%\">\r\n\r\n                    <Box alignItems=\"center\" backgroundColor={\"rgba(0, 0, 0, 0.7)\"} borderRadius={5} paddingBottom={1}>\r\n\r\n                        <Text bold color=\"#39ff14\" margin={1} textAlign={'center'} fontSize={screenWidth > 960 ? '' : 12} >{todayCurrency}</Text>\r\n                        <Text textAlign=\"center\" color=\"#39ff14\" margin={1} fontSize={screenWidth > 960 ? '' : 12}>{timestampCurrency}</Text>\r\n                        <Button alignSelf={'center'} w={'95%'} _hover={{ bgColor: \"green.800\" }} bgColor={'transparent'} variant={'outline'} borderColor={\"#39ff14\"} _text={{ color: \"#39ff14\", }} onPress={handleOpenCurrencyModal}>{isLoading ? <Spinner color=\"#39ff14\" size={21} /> : 'Update'}</Button>\r\n\r\n                    </Box>\r\n\r\n                </Center>\r\n\r\n            </Box>\r\n\r\n            <Modal isOpen={modalVisible} onClose={handleCloseCurrencyModal}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>Update currency</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to update to the latest currency?\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <Button onPress={handleCloseCurrencyModal} flex={1} margin={1} colorScheme={'danger'}>No</Button>\r\n                        <Button onPress={CurrencyConverter} colorScheme={'success'} flex={1} margin={1}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal><Modal isOpen={successModalVisible} onClose={handleCloseSuccessModal}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header bgColor={'green.200'} borderBottomWidth={0}>Update success!</Modal.Header>\r\n                    <Modal.Body bgColor={'green.200'}>\r\n                        <Text bold margin={1}>{todayCurrency}</Text>\r\n                        <Text margin={1}>{timestampCurrency}</Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer bgColor={'green.200'} borderTopWidth={0}>\r\n                        <Button onPress={handleCloseSuccessModal} flex={1} margin={1}>Ok</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nconst MyBarChart = () => {\r\n    const dataValues = [\r\n        { day: 1, value: 30 },\r\n        { day: 2, value: 45 },\r\n        // ... add data for each day of the month\r\n        { day: 31, value: 60 }\r\n    ];\r\n\r\n    return (\r\n        <ScrollView style={{ flex: 1, margin: 5, borderRadius: 5, }}>\r\n            <VictoryChart\r\n                theme={VictoryTheme.material}\r\n                domainPadding={10}\r\n                style={{\r\n                    parent: {\r\n                        backgroundColor: \"#FFF\", // White background\r\n                    }\r\n                }}\r\n            >\r\n                <VictoryAxis\r\n                    style={{\r\n                        axis: { stroke: \"#757575\" }, // Style for the axis itself\r\n                        ticks: { stroke: \"grey\", size: 5 }, // Style for axis ticks\r\n                        tickLabels: { fontSize: 10, padding: 5, fill: \"grey\" } // Style for the labels\r\n                    }}\r\n                />\r\n                <VictoryAxis\r\n                    dependentAxis\r\n                    style={{\r\n                        axis: { stroke: \"#757575\" },\r\n                        ticks: { stroke: \"grey\", size: 5 },\r\n                        tickLabels: { fontSize: 10, padding: 5, fill: \"grey\" }\r\n                    }}\r\n                />\r\n                <VictoryBar\r\n                    data={dataValues}\r\n                    x=\"day\"\r\n                    y=\"value\"\r\n                    style={{\r\n                        data: {\r\n                            fill: ({ datum }) => datum.value > 50 ? \"#4178BE\" : \"#5AA9E6\", // Blue shades for bars\r\n                            width: 8 // Width of each bar\r\n                        }\r\n                    }}\r\n                    barRatio={0.8} // Adjusts the width of the bars\r\n                />\r\n            </VictoryChart>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\n\r\nexport default function Logs() {\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const loginName = useSelector((state) => state.loginName);\r\n\r\n    // const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n\r\n    const [isSelectedLogs, setIsSelectedLogs] = useState(true);\r\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\r\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    const [remainingTime, setRemainingTime] = useState(0);\r\n    const [todayCurrency, setTodayCurrency] = useState('')\r\n    const [timestampCurrency, setTimestampCurrency] = useState('');\r\n    const [exchangeRate, setExchangeRate] = useState(null);\r\n    const [lastUpdate, setLastUpdate] = useState(null);\r\n\r\n    const [time, setTime] = useState('');\r\n    const optionsPerPage = [13, 26, 52];\r\n    const [page, setPage] = useState(0);\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    const searchInput = useRef(null);\r\n    const searchInputValue = searchInput.current?.value;\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'logs'), orderBy('timestamp', 'desc'));\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                    setData(documents);\r\n                });\r\n\r\n                return () => unsubscribe();\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // const delayedSearch = (text) => {\r\n    //     clearTimeout(timeoutId);\r\n    //     timeoutId = setTimeout(() => {\r\n    //         handleSearch(text);\r\n    //     }, 300); // Set the delay to 300 milliseconds\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n    // const handleChange = text => {\r\n    //     setEmail(text)\r\n    //     setErrorShow(false)\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const SuccessModal = () => {\r\n        return <Center>\r\n            <Modal isOpen={showModal} onClose={() => setShowModal(false)} size=\"lg\"  >\r\n                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n                    <Modal.Body >\r\n                        <Text color=\"white\" textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowModal(false)}>\r\n                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </Center>;\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                // navigation.navigate(\"Login\")\r\n                navigate(\"/Login\");\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(auth)\r\n                    .then(() => {\r\n                        // navigation.navigate('Login');\r\n                        navigate(\"/Login\");\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(auth)\r\n                .then(() => {\r\n                    // navigation.navigate('Login');\r\n                    navigate(\"/Login\");\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = auth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n    const listenForNameChange = (documentId) => {\r\n        const userRef = doc(db, 'accounts', documentId);\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(auth).then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n            setEmail('');\r\n            setName('');\r\n        }).catch(() => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n    // Function to hide the Popover\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#0642F4'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#0642F4'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n    return (\r\n        <NativeBaseProvider>\r\n            <SuccessModal />\r\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#0642f4'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={0}\r\n                    borderBottomColor={'cyan.500'} >\r\n\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen} />\r\n\r\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    {/* \r\n                    {showDrawerIcon && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen} />} */}\r\n\r\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]} >\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n\r\n\r\n                    <View style={{ alignItems: 'center', flex: 1 }}>\r\n                        <QRCodeScanner />\r\n                    </View>\r\n\r\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <Box flex={[1]} flexDirection=\"row\" >\r\n\r\n\r\n                    {/* Main Content */}\r\n                    <Box flex={1} flexGrow={1} minHeight={0} flexDirection={screenWidth <= 960 ? 'column' : 'row'}>\r\n                        {/* Main Content Content */}\r\n\r\n\r\n\r\n                        <Box flex={1}>\r\n                            <CurrencyConverterComponent />\r\n                            <MyBarChart />\r\n                        </Box>\r\n\r\n\r\n\r\n                        <Box flex={1} height={'100%'}>\r\n                            <ScrollView flex={1}>\r\n                                <LogsTable />\r\n                            </ScrollView>\r\n\r\n\r\n                        </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <LoadingModal />\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","// QRCodeScanner.js\r\nimport {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Flex,\r\n    HStack,\r\n    Icon,\r\n    Image as NativeImage,\r\n    Input,\r\n    Modal,\r\n    NativeBaseProvider,\r\n    Popover,\r\n    Spinner,\r\n    Stack,\r\n    Text,\r\n    VStack,\r\n    TextArea,\r\n    InputRightAddon,\r\n    InputGroup,\r\n    InputLeftAddon,\r\n    Select,\r\n    CheckIcon,\r\n    PresenceTransition,\r\n    CloseIcon,\r\n    ScrollView as ScrollViewNative,\r\n    Divider,\r\n    useDisclosure,\r\n    useDisclose,\r\n    FormControl,\r\n    Checkbox,\r\n    useToast,\r\n    Tooltip,\r\n    Progress,\r\n    Alert\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n    Dimensions,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    StyleSheet,\r\n    View,\r\n    PanResponder,\r\n    Animated,\r\n    Easing,\r\n    InputAccessoryView,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    TextInput,\r\n    Image as RNImage,\r\n    Pressable,\r\n    Linking,\r\n    Modal as RNModal,\r\n    Platform,\r\n    SafeAreaView,\r\n} from 'react-native';\r\nimport Webcam from 'react-webcam';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo,\r\n    FontAwesome5,\r\n    EvilIcons\r\n} from 'react-native-vector-icons';\r\n\r\nimport QRCode from 'react-native-qrcode-svg';\r\n\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup, increment } from 'firebase/firestore';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from '../../../crossFirebase';\r\nimport jsQR from 'jsqr';\r\n\r\n\r\nlet formattedIssuingDate = ''; // Initialize the variable outside the conditional rendering block\r\nlet formattedDueDate = '';\r\n\r\nconst mobileViewBreakpoint = 1367;\r\n\r\nconst QRCodeScanner = () => {\r\n    const webcamRef = React.useRef(null);\r\n    const [qrCode, setQrCode] = useState('');\r\n    const [isScanning, setIsScanning] = useState(false);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [invoiceData, setInvoiceData] = useState(null);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    // QR code scanning logic\r\n    useEffect(() => {\r\n        const intervalId = isScanning ? setInterval(() => {\r\n            const video = webcamRef.current;\r\n            if (video) {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.video.videoWidth;\r\n                canvas.height = video.video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video.video, 0, 0, canvas.width, canvas.height);\r\n                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n                const code = jsQR(imageData.data, imageData.width, imageData.height);\r\n                if (code) {\r\n                    clearInterval(intervalId);\r\n                    setIsScanning(false);\r\n                    setQrCode(code.data);\r\n                    console.log(code.data);\r\n\r\n                }\r\n            }\r\n        }, 100) : null;\r\n\r\n        return () => {\r\n            if (intervalId) {\r\n                clearInterval(intervalId);\r\n            }\r\n        };\r\n    }, [isScanning]);\r\n\r\n    const fetchInvoiceData = async (cryptoNumber) => {\r\n        const q = query(collection(projectExtensionFirestore, 'IssuedInvoice'), where('cryptoNumber', '==', cryptoNumber));\r\n        const querySnapshot = await getDocs(q);\r\n        querySnapshot.forEach((doc) => {\r\n            setInvoiceData({ ...doc.data(), id: doc.id });\r\n        });\r\n        setModalVisible(true); // Show the modal after fetching the data\r\n    };\r\n\r\n    // Listen for QR code detection\r\n    useEffect(() => {\r\n        if (qrCode) {\r\n            fetchInvoiceData(qrCode);\r\n        }\r\n    }, [qrCode]);\r\n\r\n    const toggleScanning = () => {\r\n        setIsScanning(!isScanning);\r\n\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n        setQrCode('');\r\n    };\r\n\r\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\r\n        const dueDateString = invoiceData.bankInformations.dueDate;\r\n        const issuingDateObject = new Date(issuingDateString);\r\n        const dueDateObject = new Date(dueDateString);\r\n\r\n\r\n        const options = {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        };\r\n\r\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\r\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\r\n\r\n    }\r\n\r\n    const originalWidth = 794;\r\n    const originalHeight = 1123;\r\n\r\n\r\n    const originalSmallWidth = 794;\r\n    const originalSmallHeight = 1123;\r\n\r\n    const newWidth = 2480;\r\n    const newHeight = 3508;\r\n\r\n    const smallWidth = screenWidth < mobileViewBreakpoint ? 377 : 574;\r\n    const smallHeight = screenWidth < mobileViewBreakpoint ? 541 : 903;\r\n\r\n    const smallWidthScaleFactor = smallWidth / originalSmallWidth;\r\n    const smallHeightScaleFactor = smallHeight / originalSmallHeight;\r\n\r\n    const widthScaleFactor = newWidth / originalWidth;\r\n    const heightScaleFactor = newHeight / originalHeight;\r\n\r\n    const PreviewInvoice = () => {\r\n\r\n        return (\r\n            <View\r\n                style={{\r\n                    width: smallWidth,\r\n                    height: smallHeight,\r\n                    backgroundColor: 'white',\r\n                    zIndex: 1\r\n                }}>\r\n\r\n                <View\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        zIndex: 999,\r\n                    }}\r\n                />\r\n\r\n\r\n                <View style={{ position: 'absolute', left: 38 * smallWidthScaleFactor, top: 38 * smallHeightScaleFactor }}>\r\n                    <NativeImage\r\n                        source={require('../../../assets/RMJ logo for invoice.png')}\r\n                        style={{\r\n                            width: 95 * smallWidthScaleFactor,\r\n                            height: 85 * smallHeightScaleFactor,\r\n                            resizeMode: 'stretch',\r\n                        }}\r\n                    />\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * smallHeightScaleFactor }}>\r\n                    {/* Title */}\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 25 * smallWidthScaleFactor }}>{`INVOICE`}</Text>\r\n\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 38 * smallHeightScaleFactor }}>\r\n                    {/* QR CODE */}\r\n\r\n                    <QRCode\r\n                        value={invoiceData.cryptoNumber}\r\n                        size={80 * smallWidthScaleFactor}\r\n                        color=\"black\"\r\n                        backgroundColor=\"white\"\r\n                    />\r\n\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', right: 121 * smallWidthScaleFactor, top: 34 * smallHeightScaleFactor }}>\r\n                    {/* Invoice Number */}\r\n                    <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Invoice No. RMJ-${invoiceData.id}`}</Text>\r\n\r\n                </View>\r\n                <View style={{ position: 'absolute', right: 121 * smallWidthScaleFactor, top: 49 * smallHeightScaleFactor, flexDirection: 'row' }}>\r\n                    {/* Issuing Date */}\r\n                    <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                </View>\r\n\r\n\r\n                <View style={{\r\n                    position: 'absolute',\r\n                    left: 40 * smallWidthScaleFactor,\r\n                    top: 134 * smallHeightScaleFactor,\r\n                    width: 280 * smallWidthScaleFactor,\r\n                }}>\r\n                    {/* Shipper */}\r\n                    <Text style={{\r\n                        fontWeight: 750,\r\n                        fontSize: 16 * smallWidthScaleFactor,\r\n                        borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                        width: 'fit-content', // Make the underline cover the text width\r\n                        marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                    }}>\r\n                        {`Shipper`}\r\n                    </Text>\r\n                    <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: +81565850606`}</Text>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Shipped From:`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.departurePort}, ${invoiceData.departureCountry}`}</Text>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Shipped To:`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.discharge.port}, ${invoiceData.discharge.country}`}</Text>\r\n                    {invoiceData.placeOfDelivery && invoiceData.placeOfDelivery !== '' ?\r\n                        <>\r\n                            <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Place of Delivery:`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 12 * smallHeightScaleFactor }}>{`${invoiceData.placeOfDelivery}`}</Text>\r\n                        </>\r\n                        : null}\r\n                    {invoiceData.cfs && invoiceData.cfs !== '' ?\r\n                        <>\r\n                            <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`CFS:`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.cfs}`}</Text>\r\n                        </>\r\n                        : null}\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', width: 715 * smallWidthScaleFactor, }}>\r\n\r\n                        <View style={{\r\n                            flex: 1, width: 280 * smallWidthScaleFactor,\r\n                        }}>\r\n                            {/* Buyer Information */}\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 18 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                borderBottomColor: '#0A78BE',\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                color: '#0A78BE',\r\n                                marginTop: 45 * smallHeightScaleFactor,\r\n\r\n                            }}>\r\n                                {`Buyer Information`}\r\n                            </Text>\r\n                            <Text style={{ fontWeight: 750, fontSize: 16 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.name}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.address}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.email}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.contactNumber}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: ${invoiceData.consignee.fax == '' ? 'N/A' : invoiceData.consignee.fax}`}</Text>\r\n\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, paddingLeft: 20 * smallWidthScaleFactor, width: 280 * smallWidthScaleFactor, }}>\r\n                            {/* Notify Party */}\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 18 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                borderBottomColor: '#FF0000',\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                color: '#FF0000',\r\n                                marginTop: 45 * smallHeightScaleFactor,\r\n                            }}>\r\n                                {`Notify Party`}\r\n                            </Text>\r\n                            {invoiceData.notifyParty.sameAsConsignee == true ? (\r\n                                <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\r\n                                (<>\r\n                                    <Text style={{ fontWeight: 750, fontSize: 16 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.name}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.address}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.email}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.contactNumber}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: ${invoiceData.notifyParty.fax == '' ? 'N/A' : invoiceData.notifyParty.fax}`}</Text>\r\n                                </>)}\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n\r\n                </View>\r\n\r\n\r\n                <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 130 * smallHeightScaleFactor, borderWidth: 3 * smallWidthScaleFactor, width: 430 * smallWidthScaleFactor, borderColor: '#1ABA3D', }}>\r\n\r\n                    <View style={{ flex: 1, alignItems: 'center', }}>\r\n                        <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * smallWidthScaleFactor, marginBottom: 5 * smallHeightScaleFactor, }}>\r\n                        <View style={{ flex: 1, marginRight: 50 * smallWidthScaleFactor, }}>\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 14 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                            }}>\r\n                                {`Bank Account`}\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Bank Name: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Branch Name: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`SWIFTCODE: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Address: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Name of Account Holder: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Account Number: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1 }}>\r\n\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 14 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                            }}>\r\n                                {`Payment Terms`}\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Terms: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\r\n                            </Text>\r\n\r\n                            <View style={{ paddingTop: 30 * smallHeightScaleFactor, }}>\r\n\r\n                                <Text style={{\r\n                                    fontWeight: 750,\r\n                                    fontSize: 14 * smallWidthScaleFactor,\r\n                                    borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                                    width: 'fit-content', // Make the underline cover the text width\r\n                                    marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                    color: '#F00A0A',\r\n                                    borderBottomColor: '#F00A0A',\r\n                                }}>\r\n                                    {`Payment Due`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, color: '#F00A0A', lineHeight: 14 * smallWidthScaleFactor }}>{`Due Date: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, color: 'black', lineHeight: 14 * smallWidthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                </Text>\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                </View>\r\n\r\n\r\n\r\n                <View style={{\r\n                    position: 'absolute',\r\n                    left: 38 * smallWidthScaleFactor,\r\n                    top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * smallHeightScaleFactor : 537 * smallHeightScaleFactor,\r\n                    width: 718 * smallWidthScaleFactor,\r\n                    borderWidth: 1 * smallWidthScaleFactor,\r\n                    borderColor: '#C2E2F4',\r\n                    alignSelf: 'center',\r\n                }}>\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Description`}\r\n                            </Text>\r\n\r\n                        </View>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Notes`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Quantity`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Amount`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {`FOB`}\r\n                            </Text>\r\n                        </View>\r\n\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {`$${Math.round(Number(invoiceData.paymentDetails.fobPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {`Freight`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {`$${Math.round(Number(invoiceData.paymentDetails.freightPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                            </Text>}\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <>\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            marginLeft: 2 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                    </Text>\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            marginLeft: 2 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? ` + Insurance` : ' '}\r\n                                    </Text>\r\n                                </>\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        marginLeft: 2 * smallWidthScaleFactor,\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.incoterms == \"CIF\" ? `Insurance` : ' '}\r\n                                </Text>\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                    }}>\r\n                                    {' '}\r\n                                </Text>\r\n                            }\r\n\r\n\r\n                        </View>\r\n\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                            </Text>}\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.incoterms === \"CIF\" ? ` + $${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                    </Text>\r\n                                </Text>\r\n\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.incoterms == \"CIF\" ? `$${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                </Text>\r\n                            }\r\n\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 ? `${invoiceData.paymentDetails.additionalName.join(' + ')}` : ' '}\r\n                            </Text>}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\r\n                                    ? invoiceData.paymentDetails.additionalPrice.map(price =>\r\n                                        `$${parseFloat(price).toLocaleString('en-US', {\r\n                                            style: 'currency',\r\n                                            currency: 'USD',\r\n                                            minimumFractionDigits: 0,\r\n                                            maximumFractionDigits: 0\r\n                                        }).slice(1)}`\r\n                                    ).join(' + ')\r\n                                    : ' '}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            flexDirection: 'row',\r\n                            paddingVertical: 2 * smallHeightScaleFactor,\r\n\r\n                        }}>\r\n                            {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                    {\"Used Vehicle\\n\"}\r\n                                    <Text style={{\r\n                                        fontWeight: 700,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.carName}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.chassisNumber}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.exteriorColor}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.fuel}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.transmission}\\n`}\r\n                                    </Text>\r\n                                </Text>\r\n\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            {invoiceData.paymentDetails && invoiceData.paymentDetails.incoterms && invoiceData.discharge.port && invoiceData.discharge ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    {`${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}`}\r\n                                </Text>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 1,\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    {'1'}\r\n                                </Text>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            justifyContent: 'center',\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\r\n                                <>\r\n                                    <Text style={{\r\n                                        fontWeight: 700,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        color: '#008AC6',\r\n                                        marginRight: 10 * smallWidthScaleFactor,\r\n                                        top: 51 * smallHeightScaleFactor,\r\n                                        left: 50 * smallWidthScaleFactor,\r\n                                        position: 'absolute',\r\n                                    }}>\r\n                                        {\"Total\"}\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            alignSelf: 'center',\r\n                                            color: '#00720B',\r\n                                            marginLeft: 5 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                            {`$${invoiceData.paymentDetails.totalAmount}`}\r\n                                        </Text>\r\n                                    </Text>\r\n\r\n                                </>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', left: 38 * smallWidthScaleFactor, top: 825 * smallHeightScaleFactor, width: 350 * smallWidthScaleFactor, }}>\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Payment Information:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'No warranty service is provided on used vehicles.'}\r\n                    </Text>\r\n\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Conditions for order cancellation:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\r\n                    </Text>\r\n\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Intermediary Banking Information:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Swift code: SMBCUS33'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Address: 277 Park Avenue'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'City: New York, NY'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Postal Code: 10172'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Country: United States'}\r\n                    </Text>\r\n                </View>\r\n\r\n\r\n                <View style={{ position: 'absolute', right: 39 * smallWidthScaleFactor, top: 835 * smallHeightScaleFactor, width: 300 * smallWidthScaleFactor, }}>\r\n                    <View style={{\r\n                        width: 300 * smallWidthScaleFactor,\r\n                        alignItems: 'center',\r\n                        paddingBottom: 80 * smallHeightScaleFactor, // Adjust this value to control space between image and line\r\n                    }}>\r\n                        <NativeImage\r\n                            source={require('../../../assets/RMJ Invoice Signature with Hanko.png')}\r\n                            style={{\r\n                                width: 276 * smallWidthScaleFactor,\r\n                                height: 81 * smallHeightScaleFactor,\r\n                                resizeMode: 'contain',\r\n                                alignSelf: 'center',\r\n                                marginBottom: 0, // Minimize margin to keep the line close\r\n                            }}\r\n                        />\r\n                        <View style={{\r\n                            borderBottomWidth: 1 * smallHeightScaleFactor,\r\n                            borderColor: 'black', // Change the color as needed\r\n                            width: '100%', // Line width as per your requirement\r\n                        }} />\r\n                        <Text italic style={{\r\n                            fontWeight: 700,\r\n                            fontSize: 16 * smallWidthScaleFactor,\r\n                        }}>\r\n                            {'Real Motor Japan'}\r\n                        </Text>\r\n                    </View>\r\n\r\n                    <View style={{\r\n                        width: 300 * smallWidthScaleFactor,\r\n                        alignItems: 'center',\r\n                        paddingBottom: 5 * smallHeightScaleFactor, // Adjust this value to control space between image and line\r\n                    }}>\r\n\r\n                        <View style={{\r\n                            borderBottomWidth: 1 * smallHeightScaleFactor,\r\n                            borderColor: 'black', // Change the color as needed\r\n                            width: '100%', // Line width as per your requirement\r\n                        }} />\r\n                        <Text italic style={{\r\n                            fontWeight: 700,\r\n                            fontSize: 16 * smallWidthScaleFactor,\r\n                        }}>\r\n                            {'Your Signature'}\r\n                        </Text>\r\n                    </View>\r\n                </View>\r\n\r\n\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                paddingRight: 20,\r\n\r\n            }}\r\n        >\r\n            {/* Modal for displaying invoice data */}\r\n            <Modal\r\n                isOpen={modalVisible}\r\n                onClose={handleModalClose}\r\n                size=\"lg\"\r\n                useRNModal\r\n            >\r\n\r\n                {invoiceData ? (\r\n                    <PreviewInvoice />\r\n                ) : (\r\n                    <Text>No data available</Text>\r\n                )}\r\n\r\n            </Modal>\r\n\r\n\r\n            <Modal isOpen={isScanning} onClose={() => setIsScanning(false)} size=\"lg\">\r\n                <View\r\n                    style={{ backgroundColor: 'black', }}\r\n                >\r\n                    {isScanning && <Webcam ref={webcamRef}\r\n                        style={{\r\n                            width: screenWidth < mobileViewBreakpoint ? 300 : 500,\r\n                            height: screenWidth < mobileViewBreakpoint ? 300 : 500,\r\n                        }} videoConstraints={{ facingMode: \"environment\" }} />}\r\n                </View>\r\n\r\n\r\n            </Modal>\r\n\r\n            {/* {isScanning && (\r\n                <View style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    right: 0,\r\n                    left: 0,\r\n                    width: 300, // Adjust according to your needs\r\n                    height: 300, // Adjust according to your needs\r\n                    borderRadius: 20,\r\n                    overflow: 'hidden',\r\n                }}>\r\n                    <Webcam ref={webcamRef} style={styles.cameraView} videoConstraints={{ facingMode: \"environment\" }} />\r\n                </View>\r\n            )} */}\r\n\r\n            <Pressable\r\n                focusable={false}\r\n                onPress={toggleScanning}\r\n                style={{\r\n                    padding: 10,\r\n                    borderRadius: 5,\r\n                }}>\r\n                <MaterialCommunityIcons name='data-matrix-scan' size={30} color='white' />\r\n            </Pressable>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    cameraContainer: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: [{ translateX: -150 }, { translateY: -150 }], // Adjust based on your webcam view size\r\n        width: 300, // Adjust according to your needs\r\n        height: 300, // Adjust according to your needs\r\n        borderRadius: 20,\r\n        overflow: 'hidden',\r\n    },\r\n    cameraView: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n});\r\n\r\nexport default QRCodeScanner;\r\n\r\n","\r\nimport {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  HStack,\r\n  Modal,\r\n  Text,\r\n  VStack,\r\n  ScrollView,\r\n\r\n} from 'native-base';\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo\r\n} from 'react-native-vector-icons';\r\nimport { View, TouchableOpacity, Easing, Image, Dimensions, Animated } from 'react-native';\r\nimport { TouchableHighlight } from 'react-native-gesture-handler';\r\nimport { useNavigation } from '@react-navigation/core';\r\n\r\n\r\n\r\nconst MobileViewDrawer = ({ selectedScreen }) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const logo2 = require('../../../assets/C-Hub Logo Only.png');\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const handleOpen = () => {\r\n\r\n    setIsOpen(true);\r\n\r\n  }\r\n  const handleClose = () => {\r\n\r\n    setIsOpen(false);\r\n\r\n  }\r\n\r\n  const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"LOGS\");\r\n  }, []);\r\n\r\n  const handleToggleAddAccount = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  }, []);\r\n\r\n  const handleToggleAccountList = useCallback(() => {\r\n\r\n    navigation.navigate(\"ACCOUNT LIST\");\r\n  }, []);\r\n\r\n  const handleToggleAddVehicle = useCallback(() => {\r\n\r\n    navigation.navigate(\"ADD NEW VEHICLE\");\r\n  }, []);\r\n\r\n\r\n  const handleVehicleList = useCallback(() => {\r\n    navigation.navigate(\"VEHICLE LIST\");\r\n  }, []);\r\n\r\n\r\n  const handleFreight = useCallback(() => {\r\n    navigation.navigate(\"FREIGHT\");\r\n  }, []);\r\n\r\n  const handleChatMessages = useCallback(() => {\r\n    navigation.navigate(\"CHAT MESSAGES\");\r\n  }, []);\r\n\r\n\r\n  const slideAnimation = useRef(new Animated.Value(0)).current;\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      Animated.timing(slideAnimation, {\r\n        toValue: 1,\r\n        duration: 500,\r\n        easing: Easing.inOut(Easing.ease),\r\n        useNativeDriver: true,\r\n      }).start();\r\n    } else {\r\n      Animated.timing(slideAnimation, {\r\n        toValue: 0,\r\n        duration: 500,\r\n        easing: Easing.inOut(Easing.ease),\r\n        useNativeDriver: true,\r\n      }).start();\r\n    }\r\n  }, [isOpen, slideAnimation]);\r\n\r\n  return (\r\n\r\n    <>\r\n      <TouchableHighlight onPress={() => handleOpen()} onPressOut={() => handleOpen()} underlayColor=\"#5a7bc9\" style={{ borderRadius: 5, flex: 1 }}>\r\n        <FontAwesome name=\"navicon\" size={30} color=\"white\" style={{ margin: 2 }} />\r\n      </TouchableHighlight>\r\n\r\n\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onClose={handleClose}\r\n        useRNModal\r\n        style={{\r\n          alignItems: 'flex-start',\r\n          justifyContent: 'flex-start',\r\n          height: '100%',\r\n\r\n        }}\r\n      >\r\n        <Modal.Content\r\n          maxWidth={255}\r\n          borderRadius={0}\r\n          maxHeight=\"100%\"\r\n          height=\"full\"\r\n          bgColor={'transparent'}\r\n        >\r\n          <Animated.View\r\n            style={{\r\n              flex: 1,\r\n              transform: [\r\n                {\r\n                  translateX: slideAnimation.interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [-255, 0],\r\n                  }),\r\n                },\r\n              ],\r\n            }}\r\n          >\r\n            <View style={{ backgroundColor: '#7b9cff', flex: 1, borderRightWidth: 2, borderColor: 'cyan' }}>\r\n              <View style={{ flex: 1, }}>\r\n\r\n                <View style={{ flexDirection: 'row', margin: 3, justifyContent: 'space-between' }}>\r\n                  <View style={{ width: '80%', alignItems: 'center', justifyContent: 'center' }}>\r\n                    <Image\r\n                      source={{\r\n                        uri: logo2,\r\n                      }}\r\n                      resizeMode=\"stretch\"\r\n                      style={{ width: 170, height: 30 }}\r\n                    />\r\n                  </View>\r\n                  <TouchableOpacity\r\n                    style={{ flexDirection: 'row', alignItems: 'flex-end', marginVertical: 1.5, marginHorizontal: 1.5 }}\r\n                  >\r\n                    <MaterialIcons\r\n                      name=\"arrow-back\"\r\n                      size={30}\r\n                      color=\"white\"\r\n                      onPress={handleClose}\r\n                    />\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* Sidebar Content */}\r\n                <View style={{ paddingHorizontal: 1, backgroundColor: '#7b9cff', flex: 1 }}>\r\n                  <ScrollView>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderTopWidth: 1,\r\n                        borderColor: 'white',\r\n                        backgroundColor: selectedScreen == 'LOGS' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleLogs}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <MaterialCommunityIcons name=\"history\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          LOGS\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n\r\n                    {/* ACCOUNT MANAGEMENT */}\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAddAccount}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n\r\n                        <MaterialIcons name=\"person-add\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          ADD C-HUB ACCOUNT\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAccountList}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <MaterialCommunityIcons name=\"account-details\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          ACCOUNT LIST\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n                    {/* VEHICLE INFORMATION INPUT */}\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAddVehicle}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 4, }}>\r\n                          <FontAwesome name=\"automobile\" size={15} color=\"white\" />\r\n                          <FontAwesome\r\n                            name=\"plus\"\r\n                            size={10}\r\n                            color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          UPDATE / ADD NEW VEHICLE\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleVehicleList}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <FontAwesome\r\n                            name=\"automobile\"\r\n                            size={15}\r\n                            color=\"white\" />\r\n\r\n                          <MaterialCommunityIcons name=\"format-list-bulleted\" size={10} color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          VEHICLE LIST\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'FREIGHT' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleFreight}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <MaterialIcons\r\n                            name=\"public\"\r\n                            size={20}\r\n                            color=\"white\" />\r\n\r\n                          <MaterialIcons name=\"sync\" size={12} color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          FREIGHT\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleChatMessages}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <Entypo\r\n                            name=\"chat\"\r\n                            size={20}\r\n                            color=\"white\" />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          CHAT MESSAGES\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    {/* Footer Content */}\r\n                    {/* <TouchableOpacity\r\n              style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\r\n              onPress={handleSignOut}\r\n            >\r\n              <Text style={{ color: 'white', textAlign: 'center' }}>\r\n                Logout\r\n              </Text>\r\n            </TouchableOpacity> */}\r\n                  </ScrollView>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </Animated.View>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default MobileViewDrawer;","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    HStack,\r\n    Modal,\r\n    Text,\r\n    VStack,\r\n    ScrollView,\r\n\r\n} from 'native-base';\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo\r\n} from 'react-native-vector-icons';\r\nimport { View, TouchableOpacity, Easing, Image, Dimensions, Animated, Pressable } from 'react-native';\r\nimport { TouchableHighlight } from 'react-native-gesture-handler';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { HashRouter as Router, Route, Routes, Navigate, useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\nconst SideDrawer = ({ selectedScreen }) => {\r\n\r\n    const loginAccountType = useSelector((state) => state.loginAccountType);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const logo2 = require('../../../assets/C-Hub Logo Only.png');\r\n    const [onHover, setOnHover] = useState(false);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    // const navigation = useNavigation();\r\n\r\n\r\n    const navigate = useNavigate();\r\n    const handleOpen = () => {\r\n\r\n        setIsOpen(true);\r\n\r\n    }\r\n    const handleClose = () => {\r\n\r\n        setIsOpen(false);\r\n\r\n    }\r\n\r\n    const handleToggleLogs = useCallback(() => {\r\n        navigate(\"/top/logs\");\r\n    }, []);\r\n\r\n    const handleToggleAddAccount = useCallback(() => {\r\n        navigate(\"/top/add-c-hub-account\");\r\n    }, []);\r\n\r\n    const handleToggleAccountList = useCallback(() => {\r\n\r\n        navigate(\"/top/account-list\");\r\n    }, []);\r\n\r\n    const handleToggleAddVehicle = useCallback(() => {\r\n\r\n        navigate(\"/top/add-new-vehicle\");\r\n    }, []);\r\n\r\n\r\n    const handleVehicleList = useCallback(() => {\r\n        navigate(\"/top/vehicle-list\");\r\n    }, []);\r\n\r\n\r\n    const handleFreight = useCallback(() => {\r\n        navigate(\"/top/freight\");\r\n    }, []);\r\n\r\n    const handleChatMessages = useCallback(() => {\r\n        navigate(\"/top/chat-messages\");\r\n    }, []);\r\n\r\n\r\n    const slideAnimation = useRef(new Animated.Value(0)).current;\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            Animated.timing(slideAnimation, {\r\n                toValue: 1,\r\n                duration: 500,\r\n                easing: Easing.inOut(Easing.ease),\r\n                useNativeDriver: true,\r\n            }).start();\r\n        } else {\r\n            Animated.timing(slideAnimation, {\r\n                toValue: 0,\r\n                duration: 500,\r\n                easing: Easing.inOut(Easing.ease),\r\n                useNativeDriver: true,\r\n            }).start();\r\n        }\r\n    }, [isOpen, slideAnimation]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable\r\n                onHoverIn={() => {\r\n                    handleOpen()\r\n                    setOnHover(true);\r\n                }}\r\n                onHoverOut={() =>\r\n                    setTimeout(() => setOnHover(false), [100])\r\n                }\r\n                onPress={() => handleOpen()} onPressOut={() => handleOpen()} underlayColor=\"#5a7bc9\" style={{\r\n                    backgroundColor: onHover ? '#5a7bc9' : 'transparent',\r\n                    borderRadius: 5,\r\n                }}>\r\n                <FontAwesome name=\"navicon\" size={30} color=\"white\" style={{ margin: 2 }} />\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={handleClose}\r\n                useRNModal\r\n                style={{\r\n                    alignItems: 'flex-start',\r\n                    justifyContent: 'flex-start',\r\n                    height: '100%',\r\n                }}\r\n            >\r\n                <Modal.Content\r\n                    maxWidth={255}\r\n                    borderRadius={0}\r\n                    maxHeight=\"100%\"\r\n                    height=\"full\"\r\n                    bgColor={'transparent'}\r\n                >\r\n                    <Animated.View\r\n                        style={{\r\n                            flex: 1,\r\n                            transform: [\r\n                                {\r\n                                    translateX: slideAnimation.interpolate({\r\n                                        inputRange: [0, 1],\r\n                                        outputRange: [-255, 0],\r\n                                    }),\r\n                                },\r\n                            ],\r\n                        }}\r\n                    >\r\n\r\n                        <View style={{ backgroundColor: '#0642f4', flex: 1, borderRightWidth: 0, borderColor: 'cyan' }}>\r\n                            <View style={{ flex: 1, }}>\r\n\r\n                                <View style={{ flexDirection: 'row', margin: 3, justifyContent: 'space-between' }}>\r\n                                    <View style={{ width: '80%', alignItems: 'center', justifyContent: 'center' }}>\r\n                                        <Image\r\n                                            source={{\r\n                                                uri: logo2,\r\n                                            }}\r\n                                            resizeMode=\"stretch\"\r\n                                            style={{ width: 170, height: 30 }}\r\n                                        />\r\n                                    </View>\r\n                                    <TouchableOpacity\r\n                                        style={{ flexDirection: 'row', alignItems: 'flex-end', marginVertical: 1.5, marginHorizontal: 1.5 }}\r\n                                    >\r\n                                        <MaterialIcons\r\n                                            name=\"arrow-back\"\r\n                                            size={30}\r\n                                            color=\"white\"\r\n                                            onPress={handleClose}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n\r\n                                {/* Sidebar Content */}\r\n                                <View style={{ paddingHorizontal: 1, backgroundColor: '#0642f4', height: '100%' }}>\r\n                                    <ScrollView style={{ width: 245 }}>\r\n                                        <View style={{ height: 20 }}>\r\n                                            {/* Sidebar Content Items */}\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales') &&\r\n                                                <Button\r\n                                                    _text={{ color: selectedScreen == 'LOGS' ? '#0642F4' : \"white\", }}\r\n                                                    borderRadius={0}\r\n                                                    borderTopWidth={1}\r\n                                                    borderBottomWidth={1}\r\n                                                    borderColor={'white'}\r\n                                                    _hover={{ bgColor: selectedScreen == 'LOGS' ? '#FFFFFF' : '#032da8', }}\r\n                                                    marginTop={0}\r\n                                                    w={'full'}\r\n                                                    onPress={() => selectedScreen == 'LOGS' ? null : handleToggleLogs()}\r\n                                                    colorScheme={undefined}\r\n                                                    bgColor={selectedScreen == 'LOGS' ? '#FFFFFF' : '#0642F4'}\r\n                                                    leftIcon={<MaterialCommunityIcons name=\"history\" size={20} color={selectedScreen == 'LOGS' ? '#0642F4' : \"white\"} />}\r\n                                                    justifyContent=\"flex-start\"\r\n                                                    alignItems=\"center\"\r\n                                                >\r\n                                                    LOGS\r\n                                                </Button>\r\n                                            }\r\n\r\n                                            {/* ACCOUNT MANAGEMENT */}\r\n                                            {loginAccountType == 'admin' && <Button\r\n                                                _text={{ color: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0} w={'full'}\r\n                                                onPress={() => selectedScreen == 'ADD C-HUB ACCOUNT' ? null : handleToggleAddAccount()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'ADD C-HUB ACCOUNT' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={<MaterialIcons name=\"person-add\" size={20} color={selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : \"white\"} />}\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >ADD C-HUB ACCOUNT</Button>}\r\n\r\n                                            {loginAccountType == 'admin' && <Button\r\n                                                _text={{ color: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'ACCOUNT LIST' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => selectedScreen == 'ACCOUNT LIST' ? null : handleToggleAccountList()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'ACCOUNT LIST' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={\r\n                                                    <MaterialCommunityIcons name=\"account-details\" size={20}\r\n                                                        color={selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : \"white\"}\r\n                                                    />\r\n\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >ACCOUNT LIST</Button>}\r\n                                            {/* VEHICLE INFORMATION INPUT */}\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') &&\r\n                                                <Button\r\n                                                    _text={{ color: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\", }}\r\n                                                    borderRadius={0}\r\n                                                    borderTopWidth={1}\r\n                                                    borderBottomWidth={1}\r\n                                                    borderColor={'white'}\r\n                                                    _hover={{ bgColor: selectedScreen == 'ADD NEW VEHICLE' ? '#FFFFFF' : '#032da8', }}\r\n                                                    marginTop={0} w={'full'}\r\n                                                    onPress={() => selectedScreen == 'ADD NEW VEHICLE' ? null : handleToggleAddVehicle()}\r\n                                                    colorScheme={undefined}\r\n                                                    bgColor={selectedScreen == 'ADD NEW VEHICLE' ? '#FFFFFF' : '#0642F4'}\r\n                                                    leftIcon={\r\n                                                        <>\r\n                                                            <View>\r\n                                                                <FontAwesome name=\"automobile\" size={15}\r\n                                                                    color={selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\"}\r\n                                                                />\r\n                                                                <FontAwesome\r\n                                                                    name=\"plus\"\r\n                                                                    size={10}\r\n                                                                    color={selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\"}\r\n                                                                    style={{\r\n                                                                        position: 'absolute', // Position it absolutely...\r\n                                                                        top: -3, // ...at the top...\r\n                                                                        left: -5 // ...and left.\r\n                                                                    }}\r\n                                                                />\r\n                                                            </View>\r\n\r\n\r\n                                                        </>\r\n                                                    }\r\n                                                    justifyContent=\"flex-start\"\r\n                                                    alignItems=\"center\"\r\n                                                >UPDATE / ADD NEW VEHICLE</Button>\r\n                                            }\r\n\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') &&\r\n                                                <Button\r\n                                                    _text={{ color: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\", }}\r\n                                                    borderRadius={0}\r\n                                                    borderTopWidth={1}\r\n                                                    borderBottomWidth={1}\r\n                                                    borderColor={'white'}\r\n                                                    _hover={{ bgColor: selectedScreen == 'VEHICLE LIST' ? '#FFFFFF' : '#032da8', }}\r\n                                                    marginTop={0}\r\n                                                    onPress={() => selectedScreen == 'VEHICLE LIST' ? null : handleVehicleList()}\r\n                                                    colorScheme={undefined}\r\n                                                    bgColor={selectedScreen == 'VEHICLE LIST' ? '#FFFFFF' : '#0642F4'}\r\n                                                    leftIcon={\r\n                                                        <>\r\n                                                            <View>\r\n                                                                <FontAwesome\r\n                                                                    name=\"automobile\"\r\n                                                                    size={15}\r\n                                                                    color={selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\"}\r\n                                                                />\r\n\r\n                                                                <MaterialCommunityIcons name=\"format-list-bulleted\" size={10}\r\n                                                                    color={selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\"}\r\n                                                                    style={{\r\n                                                                        position: 'absolute', // Position it absolutely...\r\n                                                                        top: -3, // ...at the top...\r\n                                                                        left: -5 // ...and left.\r\n                                                                    }}\r\n                                                                />\r\n\r\n                                                            </View>\r\n\r\n\r\n                                                        </>\r\n                                                    }\r\n                                                    justifyContent=\"flex-start\"\r\n                                                    alignItems=\"center\"\r\n                                                // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                                >VEHICLE LIST</Button>}\r\n\r\n                                            {loginAccountType == 'admin' && <Button\r\n                                                _text={{ color: selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'FREIGHT' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => selectedScreen == 'FREIGHT' ? null : handleFreight()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'FREIGHT' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <MaterialIcons\r\n                                                                name=\"public\"\r\n                                                                size={20}\r\n                                                                color={selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\"}\r\n                                                            />\r\n\r\n                                                            <MaterialIcons name=\"sync\" size={12}\r\n                                                                color={selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\"}\r\n                                                                style={{\r\n                                                                    position: 'absolute', // Position it absolutely...\r\n                                                                    top: -3, // ...at the top...\r\n                                                                    left: -5 // ...and left.\r\n                                                                }}\r\n                                                            />\r\n\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                            >FREIGHT</Button>\r\n                                            }\r\n\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') && <Button\r\n                                                _text={{ color: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'CHAT MESSAGES' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => { selectedScreen == 'CHAT MESSAGES' ? null : handleChatMessages() }}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'CHAT MESSAGES' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <Entypo\r\n                                                                name=\"chat\"\r\n                                                                size={20}\r\n                                                                color={selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : \"white\"}\r\n\r\n                                                            />\r\n\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                            >CHAT MESSAGES</Button>}\r\n                                        </View>\r\n                                        {/* Footer Content */}\r\n                                        {/* <TouchableOpacity\r\n            style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\r\n            onPress={handleSignOut}\r\n          >\r\n            <Text style={{ color: 'white', textAlign: 'center' }}>\r\n              Logout\r\n            </Text>\r\n          </TouchableOpacity> */}\r\n                                    </ScrollView>\r\n                                    <View style={{ borderTopWidth: 0, backgroundColor: '#7b9cff', position: 'absolute', bottom: 0, left: 0, right: 0, borderTopColor: 'gray', paddingTop: 3 }}>\r\n                                        {/* Footer Content */}\r\n                                        {/* <Center marginBottom={1.5}>\r\n            <Button w={100} colorScheme=\"error\" onPress={handleSignOut}>\r\n              <MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" /> Logout\r\n            </Button>\r\n          </Center> */}\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n\r\n                    </Animated.View>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default SideDrawer;","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  Image as NativeImage,\r\n  Input,\r\n  Modal,\r\n  NativeBaseProvider,\r\n  Popover,\r\n  Pressable,\r\n  Spinner,\r\n  Stack,\r\n  Text,\r\n  VStack,\r\n  useBreakpointValue,\r\n  TextArea,\r\n  InputRightAddon,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  Select,\r\n  CheckIcon,\r\n  PresenceTransition,\r\n  CloseIcon,\r\n  ScrollView as ScrollViewNative,\r\n  Divider,\r\n  useDisclosure,\r\n  useDisclose,\r\n  FormControl,\r\n  Checkbox,\r\n  useToast\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n  Dimensions,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  StyleSheet,\r\n  View,\r\n  PanResponder,\r\n  Animated,\r\n  InputAccessoryView,\r\n  FlatList,\r\n  ScrollView,\r\n  TouchableHighlight,\r\n  TextInput,\r\n  Image as RNImage\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo,\r\n  FontAwesome5,\r\n  EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n  setVehicleListData,\r\n  setSupplyChainsCostsData,\r\n  setSelectedPaidTo,\r\n  setSelectedExpenseName,\r\n  setSupplyChainsCostsModalVisible,\r\n  setVehicleListSupplyChainsCostsData,\r\n  setDeleteImageVisible,\r\n  setSelectedImages,\r\n  setAddAnotherImages,\r\n  setIsAddPhotoVisible,\r\n  setUploadImagesModalVisible,\r\n  setUploadImagesButtonLoading,\r\n  setViewImagesModalVisible,\r\n  setViewImagesData,\r\n  setLoadingModalVisible,\r\n  setAddVehicleListData,\r\n  setEditVehicleModalVisible,\r\n  setFobPriceHistoryModalVisible,\r\n  setFobHistoryData,\r\n  setLoginName\r\n} from './redux/store';\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'VEHICLE LIST'\r\n\r\nlet globalSupplyChainCostsData = [];\r\nlet globalCurrentSupplyChainCostsData = [];\r\nlet globalFobPriceHistoryData = [];\r\nlet globalCurrentStockID = '';\r\nlet globalSelectedPaidTo = '';\r\nlet globalSPCSelectedDate = '';\r\nlet globalSelectedExpenseName = '';\r\nlet globalSupplyChainCostsAmount = 0;\r\nlet globalSelectedImages = [];\r\nlet globalSelectedVehicle = '';\r\nlet globalSelectedVehicleReferenceNumber = '';\r\nlet globalSelectedCarName = '';\r\nconst nameVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = projectControlAuth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    // console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nconst storage = getStorage(projectExtensionFirebase);\r\n\r\nconst SelectStockStatus = ({ selectedValue, id, item }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n  const [selectedStockStatusValue, setSelectedStockStatusValue] = useState(selectedValue);\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', id), (doc) => {\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        // Handle the data from the document\r\n        setSelectedStockStatusValue(data.stockStatus);\r\n        // console.log(`Read ${doc.size} documents from VehicleProducts`);\r\n\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleSaveStockStatus = async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n    if (item.stockStatus == selectedStockStatusValue || selectedStockStatusValue == '' || selectedStockStatusValue == '__NativeBasePlaceHolder__') {\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n    else {\r\n\r\n      const stockStatusHistoryData = {\r\n        date: formattedTime,\r\n        stockStatus: selectedStockStatusValue,\r\n        changedBy: nameVariable.text,\r\n      };\r\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n      try {\r\n        await updateDoc(vehicleProductRef, {\r\n          stockStatus: selectedStockStatusValue,\r\n          stockStatusHistory: arrayUnion(stockStatusHistoryData)\r\n        });\r\n        const logData = {\r\n          message: `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to \"${selectedStockStatusValue}\" with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            globalCurrentStockID.toLowerCase(),\r\n            `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to ${selectedStockStatusValue} with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n            'Stock Status'.toLowerCase(),\r\n            'Stock Status Updated'.toLowerCase(),\r\n            'Stock'.toLowerCase(),\r\n            'Status Updated'.toLowerCase(),\r\n            'Updated'.toLowerCase(),\r\n            globalSelectedCarName.toLowerCase(),\r\n            globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n        // console.log('FOB Price updated successfully');\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Stock Status updated successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n      <View style={{ width: screenWidth >= 1360 ? '70%' : '88%', backgroundColor: 'white', }}>\r\n        <Select\r\n          selectedValue={selectedStockStatusValue}\r\n          onValueChange={(value) => {\r\n            setSelectedStockStatusValue(value);\r\n          }}\r\n          flex={3}\r\n          accessibilityLabel=\"---\"\r\n          placeholder=\"---\"\r\n          _selectedItem={{\r\n            bg: \"teal.600\",\r\n            endIcon: <CheckIcon size=\"5\" />\r\n          }}\r\n        >\r\n          {stockStatusData.map((item) => (\r\n            <Select.Item key={item} label={item} value={item} />\r\n          ))}\r\n        </Select>\r\n      </View>\r\n\r\n      <TouchableHighlight\r\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n        onPress={handleSaveStockStatus}\r\n        style={{\r\n          backgroundColor: '#16A34A',\r\n          borderRadius: 5,\r\n          padding: 3,\r\n          margin: 2,\r\n          alignSelf: 'center',\r\n        }}>\r\n        <MaterialIcons name='update' color='white' size={22} />\r\n      </TouchableHighlight>\r\n    </View>\r\n\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nconst addLogToCollection = async (data) => {\r\n  try {\r\n    const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n    // Add a new document to the \"logs\" collection\r\n    await addDoc(logsCollectionRef, data);\r\n\r\n    // console.log('Document added successfully!');\r\n  } catch (error) {\r\n    console.error('Error adding document:', error);\r\n  }\r\n};\r\n\r\nconst LoadingModal = () => {\r\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        flex: 1,\r\n        display: loadingModalVisible ? 'flex' : 'none',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      {/* Content within the modal */}\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Spinner size=\"lg\" color=\"white\" />\r\n        <Text style={{ color: 'white' }} selectable={false}>Loading, please wait!</Text>\r\n      </View>\r\n    </View>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\r\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n\r\n  const handleModalDeleteOpen = () => {\r\n    setModalDeleteImagesVisible(true);\r\n  };\r\n\r\n  const handleModalDeleteClose = () => {\r\n    setModalDeleteImagesVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          right: 0,\r\n          backgroundColor: '#FF4136',\r\n          borderRadius: 3,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          display: isAddPhotoVisible ? 'none' : 'flex',\r\n        }}\r\n      >\r\n        <TouchableHighlight onPress={handleModalDeleteOpen} style={{ flex: 1 }}>\r\n          <Ionicons name=\"trash-sharp\" size={20} color=\"white\" />\r\n        </TouchableHighlight>\r\n      </View>\r\n\r\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\r\n        <Modal.Content bgColor={'error.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear Images\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'error.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.400'}\r\n            margin={5}\r\n          >\r\n            <View style={{ flex: 1 }}>\r\n              <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>Alert!</Text>\r\n              <Text style={{ color: '#FF4136' }}>\r\n                Are you sure you want to clear{' '}\r\n                <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>\r\n                  {selectedImages.length}\r\n                </Text>{' '}\r\n                selected image(s)?\r\n              </Text>\r\n            </View>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\r\n            <View style={{ flexDirection: 'row', flex: 1 }}>\r\n              <TouchableOpacity\r\n                onPress={handleModalDeleteClose}\r\n                style={{\r\n                  flex: 1,\r\n                  backgroundColor: '#57534E', // Replace with your desired color\r\n                  borderRadius: 5,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  margin: 5,\r\n                  padding: 5,\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 14, color: 'white' }}>No</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={handleClearImages}\r\n                style={{\r\n                  flex: 1,\r\n                  backgroundColor: '#DC2626', // Replace with your desired color\r\n                  borderRadius: 5,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  margin: 5,\r\n                  padding: 5,\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 14, color: 'white' }}>Clear Images</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\r\n  const dispatch = useDispatch();\r\n  const { width } = Dimensions.get('window');\r\n\r\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  const [boolean, setBoolean] = useState(true);\r\n  const selectedImages = useSelector((state) => state.selectedImages);\r\n  // const [selectedImages, setSelectedImages] = useState([]);\r\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\r\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\r\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\r\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\r\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n  const [scrollEnabled, setscrollEnabled] = useState(true);\r\n  const [isEnterEdit, setisEnterEdit] = useState(false);\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setIsCursorLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    dropdown: {\r\n      margin: 16,\r\n      height: 50,\r\n      borderBottomColor: 'gray',\r\n      borderBottomWidth: 0.5,\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n      fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n      height: 40,\r\n      fontSize: 16,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 20,\r\n\r\n    },\r\n    txt: {\r\n      fontSize: 18,\r\n      lineHeight: 24,\r\n      padding: 5\r\n    },\r\n    sort: {\r\n    },\r\n    item_children: {\r\n      width: 90,\r\n      height: 90,\r\n      backgroundColor: 'black',\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    item_delete_icon: {\r\n      width: 14,\r\n      height: 14,\r\n      position: \"absolute\",\r\n      right: 1,\r\n      top: 1\r\n    },\r\n    item_icon: {\r\n      width: 90,\r\n      height: 90,\r\n      resizeMode: \"contain\",\r\n      position: \"absolute\"\r\n    }\r\n  });\r\n\r\n  const handleImageAddToSelection = async () => {\r\n    dispatch(setDeleteImageVisible(true));\r\n    if (selectedImages.length === 40) {\r\n      return; // Limit reached, do not add a new image\r\n    }\r\n\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        // console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        // console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        // console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Filter out images larger than 10MB\r\n      const newImages = [...selectedImages];\r\n      const promises = response.assets.map(async (asset) => {\r\n        const file = await fetch(asset.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          const exists = newImages.some((image) => image.uri === asset.uri);\r\n          if (!exists) {\r\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\r\n          }\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      });\r\n\r\n      await Promise.all(promises);\r\n\r\n      const limitedImages = newImages.slice(0, 40);\r\n      dispatch(setSelectedImages(limitedImages));\r\n      globalSelectedImages = limitedImages;\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      // limitedImages.forEach((image) => {\r\n      //   console.log(`File size: ${image.fileSize}`);\r\n      // });\r\n\r\n    } catch (error) {\r\n      // console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n  const reloadData = useCallback(() => {\r\n    if (selectedImages.length > 0) {\r\n      // ... Logic to reload data using selectedImages and width\r\n\r\n      // Assuming your logic has updated selectedImages, you can directly use it here\r\n      const updatedSelectedImages = [...selectedImages];\r\n\r\n      // Dispatch the updatedSelectedImages array to the state\r\n      dispatch(setSelectedImages(updatedSelectedImages));\r\n    }\r\n\r\n  }, [widthState]);\r\n\r\n  useEffect(() => {\r\n    const handleWidthChange = ({ window }) => {\r\n      setWidthState(window.width);\r\n    };\r\n\r\n    Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n    return () => {\r\n      Dimensions.removeEventListener('change', handleWidthChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, [reloadData]);\r\n\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    setModalDeleteImagesVisible(false);\r\n    // dispatch(setSelectedImages([]));\r\n    // globalSelectedImages = [];\r\n    // dispatch(setIsAddPhotoVisible(true));\r\n    // dispatch(setAddAnotherImages(false));\r\n    // dispatch(setDeleteImageVisible(true));\r\n    handleClearImagesExtra();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const renderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleImageSelection = async () => {\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40,\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        // console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        // console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        // console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Remove duplicates from the selected images\r\n      const uniqueImages = response.assets.filter(\r\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\r\n      );\r\n\r\n      // Filter out images larger than 10MB\r\n      const filteredImages = [];\r\n      const imageOrder = [];\r\n      for (let index = 0; index < uniqueImages.length; index++) {\r\n        const image = uniqueImages[index];\r\n        const file = await fetch(image.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          filteredImages.push(image);\r\n          imageOrder.push(index);\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      }\r\n\r\n\r\n      // Sort the filtered images based on their original order\r\n      const sortedImages = filteredImages.sort((a, b) => {\r\n        const indexA = imageOrder[filteredImages.indexOf(a)];\r\n        const indexB = imageOrder[filteredImages.indexOf(b)];\r\n        return indexA - indexB;\r\n      });\r\n\r\n\r\n\r\n      // Limit the number of selected images to 40\r\n      const limitedImages = sortedImages.slice(0, 40);\r\n\r\n      globalSelectedImages = limitedImages;\r\n      if (limitedImages.length > 0) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(true));\r\n      }\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      dispatch(setSelectedImages(globalSelectedImages));\r\n\r\n    } catch (error) {\r\n      // console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleDeleteImagePress = useCallback((uri) => {\r\n\r\n    globalSelectedImages = globalSelectedImages.filter((item) => {\r\n      // Replace 'uriToDelete' with the URI you want to delete\r\n      return item.uri !== uri;\r\n    });\r\n\r\n    if (globalSelectedImages.length < 40) {\r\n      dispatch(setAddAnotherImages(true));\r\n    }\r\n\r\n    if (globalSelectedImages.length == 0) {\r\n      dispatch(setAddAnotherImages(false));\r\n      dispatch(setIsAddPhotoVisible(true));\r\n    }\r\n    dispatch(setSelectedImages(globalSelectedImages));\r\n    // dispatch(setSelectedImages((prevImages) => {\r\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\r\n\r\n    //   if (updatedImages.length < 40) {\r\n    //     dispatch(setAddAnotherImages(true));\r\n    //   }\r\n    //   if (updatedImages.length == 0) {\r\n    //    dispatch(setAddAnotherImages(false));\r\n    //     dispatch(setIsAddPhotoVisible(true));\r\n    //   }\r\n    //   return updatedImages;\r\n    // }));\r\n\r\n    // console.log(globalSelectedImages.map((item) => item.uri));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\r\n\r\n\r\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\r\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\r\n\r\n            <ClearImagesModal\r\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\r\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\r\n              handleClearImages={handleClearImages}\r\n              selectedImages={selectedImages}\r\n              isAddPhotoVisible={isAddPhotoVisible} />\r\n\r\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\r\n\r\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"#12293F\" />\r\n\r\n\r\n              <ScrollView\r\n                scrollEnabled={scrollEnabled}\r\n                flex={1}\r\n              >\r\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    delayLongPress={100}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onDragStart={useCallback(() => {\r\n                      if (!isEnterEdit) {\r\n                        setisEnterEdit(true);\r\n                        setscrollEnabled(false);\r\n                      } else {\r\n                        setscrollEnabled(false);\r\n                      }\r\n                    }, [])}\r\n                    onDragEnd={useCallback(() => {\r\n                      setscrollEnabled(true);\r\n                    }, [])}\r\n                    onDataChange={useCallback((data) => {\r\n\r\n                      if (data.length !== data) {\r\n                        dispatch(setSelectedImages(data));\r\n                        globalSelectedImages = data;\r\n                      }\r\n\r\n                    }, [])}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => renderItem(item, index), [])} />\r\n\r\n                  <Center>\r\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"#12293F\" />\r\n                  </Center>\r\n\r\n                </Box>\r\n\r\n\r\n\r\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    sortable={false}\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\r\n\r\n                </Box>\r\n              </ScrollView>\r\n\r\n\r\n\r\n\r\n            </Box>\r\n\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={0}\r\n              left={0}\r\n              borderRadius={3}\r\n              bgColor={'rgba(0, 0, 0, 0.5)'}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              display={isAddPhotoVisible ? 'none' : 'block'}>\r\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\r\n            </Box>\r\n          </Box>\r\n\r\n        </ScrollView>\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      {/* </Box> */}\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} useRNModal>\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Please select image(s) smaller than 10MB!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploadModal = ({ handleUploadImagesModalClose, screenWidth, dragSortableViewRef, handleClearImagesExtra, handleUploadImages }) => {\r\n\r\n  const uploadImagesModalVisible = useSelector((state) => state.uploadImagesModalVisible)\r\n  const uploadImagesButtonLoading = useSelector((state) => state.uploadImagesButtonLoading)\r\n  return (\r\n    <Modal isOpen={uploadImagesModalVisible} onClose={handleUploadImagesModalClose} size={'full'} useRNModal>\r\n      <Modal.Content bgColor={'white'} w={'90%'} h={'100%'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Upload Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n\r\n\r\n        <View style={{ flex: 1, height: '100%', width: '100%', alignItems: 'center', justifyContent: 'center' }}>\r\n\r\n          <View style={{ borderWidth: 1, borderColor: '#12293F', width: '95%', height: '95%' }}>\r\n\r\n            <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\r\n\r\n          </View>\r\n\r\n        </View>\r\n\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <TouchableOpacity\r\n            onPress={handleUploadImagesModalClose}\r\n            style={{\r\n              backgroundColor: '#525252',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Close</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ flex: 4 }} />\r\n\r\n          <TouchableOpacity\r\n            disabled={uploadImagesButtonLoading}\r\n            onPress={handleUploadImages}\r\n            style={{\r\n              backgroundColor: '#16A34A',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            {!uploadImagesButtonLoading ? (\r\n              <Text style={{ color: 'white' }}>Upload</Text>) : (\r\n              <Spinner color=\"white\" />\r\n            )}\r\n          </TouchableOpacity>\r\n\r\n\r\n        </View>\r\n\r\n\r\n\r\n      </Modal.Content>\r\n\r\n    </Modal>\r\n\r\n  );\r\n}\r\n\r\nconst UploadImagesModal = ({ fetchImageCounts }) => {\r\n\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const dragSortableViewRef = useRef();\r\n\r\n  const handleClearImagesExtra = () => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n    dispatch(setDeleteImageVisible(true));\r\n  };\r\n\r\n\r\n  const handleUploadImagesModalClose = () => {\r\n\r\n    dispatch(setUploadImagesModalVisible(false));\r\n    // globalCurrentStockID = '';\r\n    handleClearImagesExtra();\r\n    globalSelectedVehicle = '';\r\n  }\r\n\r\n  const uploadImages = useCallback(async () => {\r\n\r\n    const storageRef = ref(storage, `${globalCurrentStockID}`);\r\n    const ImageFormat = { jpg: 'jpg' };\r\n    const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n    const docRef = doc(collectionRef, globalCurrentStockID);\r\n\r\n\r\n\r\n    try {\r\n      // Get the names of the images to keep\r\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n      // Delete existing files in the folder that do not match the names of the images to keep\r\n      const listResult = await listAll(storageRef);\r\n      await Promise.all(\r\n        listResult.items\r\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n          .map((itemRef) => deleteObject(itemRef))\r\n      );\r\n\r\n      await Promise.all(\r\n        globalSelectedImages.map(async (asset, index) => {\r\n          const { uri } = asset;\r\n          const imagename = index.toString();\r\n\r\n          const response = await fetch(uri);\r\n          const blob = await response.blob();\r\n\r\n          // Create an offscreen canvas\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          // Create a new image object\r\n          const img = new Image();\r\n          img.src = URL.createObjectURL(blob);\r\n\r\n          // Draw the image on the canvas\r\n          img.onload = async () => {\r\n            // Create a canvas element\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            // Calculate the desired width and height for the resized image\r\n            const maxWidth = 800; // Set your desired maximum width\r\n            const maxHeight = 600; // Set your desired maximum height\r\n            let newWidth = img.width;\r\n            let newHeight = img.height;\r\n\r\n            // Check if the image needs resizing\r\n            if (img.width > maxWidth) {\r\n              newWidth = maxWidth;\r\n              newHeight = (img.height * maxWidth) / img.width;\r\n            }\r\n\r\n            if (newHeight > maxHeight) {\r\n              newWidth = (newWidth * maxHeight) / newHeight;\r\n              newHeight = maxHeight;\r\n            }\r\n\r\n            // Set the canvas dimensions to the new width and height\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n\r\n            // Draw the resized image onto the canvas\r\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n\r\n            // Calculate the font size as a percentage of the image width\r\n            const fontSizePercentage = 3;\r\n            const imageRes = img.height * img.width;\r\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\r\n\r\n            ctx.font = `bold ${fontSize}px Arial`;\r\n            ctx.fillStyle = '#fff';\r\n            ctx.shadowColor = 'transparent';\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.lineWidth = 2;\r\n\r\n            // Calculate the position for the watermark text\r\n            const watermarkText = `Real Motor Japan ${globalSelectedVehicleReferenceNumber}`;\r\n            const textWidth = ctx.measureText(watermarkText).width;\r\n            const textHeight = fontSize; // Font size determines the text height\r\n\r\n            // Set padding around the text (adjust as needed)\r\n            const paddingX = 10;\r\n            const paddingY = 5;\r\n\r\n            // Calculate the position for the text shadow\r\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\r\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\r\n\r\n            // Increase the shadow thickness by adjusting the shadow blur radius\r\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\r\n\r\n            // Draw the text shadow (black)\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(watermarkText, xShadow, yShadow);\r\n\r\n            // Reset the shadow blur radius for the actual text\r\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\r\n\r\n            // Calculate the position for the actual text\r\n            const x = (canvas.width - textWidth) / 2;\r\n            const y = canvas.height - 20;\r\n\r\n            // Draw the actual text (white)\r\n            ctx.fillStyle = '#fff';\r\n            ctx.fillText(watermarkText, x, y);\r\n\r\n            // Convert the canvas to a blob\r\n            const watermarkedImageBlob = await new Promise(resolve => {\r\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\r\n            });\r\n\r\n            // Upload the resized image to Firebase Storage\r\n            const imageRef = ref(storage, `${globalCurrentStockID}/${imagename}`);\r\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\r\n          };\r\n        })\r\n      );\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n      const year = moment(datetime).format('YYYY');\r\n      const month = moment(datetime).format('MM');\r\n      const monthWithDay = moment(datetime).format('MM/DD');\r\n      const date = moment(datetime).format('YYYY/MM/DD');\r\n      const day = moment(datetime).format('DD');\r\n      const time = moment(datetime).format('HH:mm');\r\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n      const imageCount = {\r\n        imageCount: globalSelectedImages.length,\r\n      };\r\n\r\n      await updateDoc(docRef, imageCount);\r\n\r\n      const logData = {\r\n        message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber}\" using Vehicle List`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber} using Vehicle List\"`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle Updated'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n\r\n      // console.log(`Images uploaded to folder ${globalCurrentStockID}`);\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleUploadImages = async () => {\r\n\r\n    dispatch(setUploadImagesButtonLoading(true));\r\n\r\n    if (globalSelectedImages.length > 0) {\r\n      toast.closeAll();\r\n      try {\r\n        await uploadImages();\r\n        dispatch(setUploadImagesButtonLoading(false));\r\n        fetchImageCounts();\r\n        handleUploadImagesModalClose();\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Uploaded Images successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        dispatch(setUploadImagesButtonLoading(false));\r\n        handleUploadImagesModalClose();\r\n\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Uploaded Error: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    else {\r\n      dispatch(setUploadImagesButtonLoading(false));\r\n    }\r\n\r\n\r\n\r\n  };\r\n\r\n  return (\r\n\r\n    <>\r\n      <ImageUploadModal\r\n        handleUploadImagesModalClose={handleUploadImagesModalClose}\r\n        screenWidth={screenWidth}\r\n        dragSortableViewRef={dragSortableViewRef}\r\n        handleClearImagesExtra={handleClearImagesExtra}\r\n        handleUploadImages={handleUploadImages} />\r\n    </>\r\n  );\r\n\r\n};\r\n\r\n\r\nconst SupplyChainsCosts = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsOpen = useCallback((data) => {\r\n    dispatch(setSupplyChainsCostsModalVisible(true));\r\n    dispatch(setVehicleListSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\r\n    globalSupplyChainCostsData = data.supplyChainsCostsData;\r\n    globalCurrentSupplyChainCostsData = data.supplyChainsCostsData;\r\n    globalCurrentStockID = data.stockID;\r\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\r\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\r\n    globalSelectedCarName = data.carName;\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <><TouchableOpacity\r\n      onPress={() => handleModalSupplyChainsCostsOpen(data)}\r\n      style={{\r\n        backgroundColor: '#12293F',\r\n        borderRadius: 5,\r\n        padding: 2,\r\n        // flex: 1,\r\n        width: '90%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}\r\n    >\r\n      {/* <Text style={{ textAlign: 'center', }}>Expense</Text> */}\r\n      <MaterialIcons name=\"payments\" size={22} color=\"white\" />\r\n    </TouchableOpacity>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n}\r\n\r\nconst AllSccModals = ({ supplyChainsCostsModalVisible, supplyChainsCostsData, expenseNameData, paidToData, currentDate, vehicleListSupplyChainsCostsData }) => {\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const toast = useToast();\r\n\r\n  const [sccData, setSccData] = useState([]);\r\n\r\n  // const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible);\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const [clearModalVisible, setClearModalVisible] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\r\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\r\n  const [paidToIsError, setPaidToIsError] = useState(false);\r\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\r\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\r\n  const selectExpenseNameRef = useRef(null);\r\n  const selectPaidToRef = useRef(null);\r\n  const expenseViewRef = useRef(null);\r\n\r\n  const textAreaAddExpenseName = useRef(null);\r\n  const textAreaAddPaidTo = useRef(null);\r\n  const inputExpenseAmount = useRef(null);\r\n  const handleInputExpenseAmountChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputExpenseAmount.current.value = formattedValue;\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsClose = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(false));\r\n    inputExpenseAmount.current?.clear();\r\n    globalSelectedExpenseName = '';\r\n    setSelectResetKey(nanoid());\r\n    globalSelectedPaidTo = '';\r\n    setSelectedDate(currentDate);\r\n    globalSPCSelectedDate = currentDate;\r\n    dispatch(setSelectedExpenseName(''));\r\n    dispatch(setSelectedPaidTo(''));\r\n    setInputAmountIsError(false);\r\n    setExpenseNameIsError(false);\r\n    setPaidToIsError(false);\r\n    globalSelectedVehicle = '';\r\n  };\r\n\r\n\r\n  const handleClearModalOpen = () => {\r\n    setClearModalVisible(true);\r\n  };\r\n\r\n  const handleClearModalClose = () => {\r\n    setClearModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const amounts = vehicleListSupplyChainsCostsData.map((item) => {\r\n      const expenseName = Object.keys(item)[0];\r\n      const expenseData = item[expenseName];\r\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n    });\r\n\r\n    // Use reduce to add up all the amounts\r\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n    const formattedTotalAmount = totalAmount.toLocaleString();\r\n    setTotalAmount(formattedTotalAmount);\r\n    globalSupplyChainCostsAmount = formattedTotalAmount;\r\n\r\n  }, [vehicleListSupplyChainsCostsData]);\r\n\r\n  const handleSave = useCallback(() => {\r\n\r\n\r\n\r\n    if (inputExpenseAmount.current?.value == ''\r\n      || inputExpenseAmount.current?.value == 0\r\n      || globalSelectedExpenseName == ''\r\n      || globalSelectedPaidTo == ''\r\n    ) {\r\n\r\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\r\n        setInputAmountIsError(true);\r\n      }\r\n\r\n      if (globalSelectedExpenseName == '') {\r\n        setExpenseNameIsError(true);\r\n      }\r\n\r\n      if (globalSelectedPaidTo == '') {\r\n        setPaidToIsError(true);\r\n      }\r\n    }\r\n\r\n    else {\r\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\r\n\r\n      if (existingIndex !== -1) {\r\n        // If an entry with the same expense name exists, update it\r\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\r\n        updatedData[existingIndex][globalSelectedExpenseName] = {\r\n          expenseName: globalSelectedExpenseName,\r\n          amount: inputExpenseAmount.current?.value,\r\n          date: globalSPCSelectedDate,\r\n          paidName: globalSelectedPaidTo,\r\n        };\r\n        globalSupplyChainCostsData = updatedData;\r\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n\r\n      } else {\r\n        setInputAmountIsError(false);\r\n        setExpenseNameIsError(false);\r\n        setPaidToIsError(false);\r\n        // If no entry with the same expense name exists, add a new entry\r\n        const newData = {\r\n          [globalSelectedExpenseName]: {\r\n            expenseName: globalSelectedExpenseName,\r\n            amount: inputExpenseAmount.current?.value,\r\n            date: globalSPCSelectedDate,\r\n            paidName: globalSelectedPaidTo,\r\n          },\r\n        };\r\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\r\n        // console.log(globalSupplyChainCostsData);\r\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\r\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\r\n        setSelectResetKey(nanoid());\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const handleEditPress = useCallback((item) => {\r\n    // console.log(item.amount);\r\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\r\n    dispatch(setSelectedExpenseName(item.expenseName));\r\n    globalSelectedExpenseName = item.expenseName;\r\n    dispatch(setSelectedPaidTo(item.paidName));\r\n    globalSelectedPaidTo = item.paidName;\r\n    globalSPCSelectedDate = item.date;\r\n    setSelectedDate(item.date);\r\n    expenseViewRef.current.scrollIntoView({ behavior: 'smooth' });\r\n\r\n  }, [])\r\n\r\n\r\n  const handleDeleteItem = (expenseName) => {\r\n    // Find the index of the item to be deleted\r\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\r\n\r\n    if (itemIndex !== -1) {\r\n      // Create a copy of the data array and remove the item at the found index\r\n      const newData = [...globalSupplyChainCostsData];\r\n      newData.splice(itemIndex, 1);\r\n\r\n      // Update the state with the new array\r\n      dispatch(setVehicleListSupplyChainsCostsData(newData));\r\n      globalSupplyChainCostsData = newData;\r\n    }\r\n  };\r\n\r\n  const handleFirstModalClose = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(false));\r\n\r\n  };\r\n  const handleFirstModalOpen = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(true));\r\n\r\n  }\r\n\r\n  const handleAddExpenseNameTextChange = () => {\r\n    const textAreaValue = textAreaAddExpenseName.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPaidToTextChange = () => {\r\n    const textAreaValue = textAreaAddPaidTo.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleSaveSupplyChainsCosts = async () => {\r\n\r\n    toast.closeAll();\r\n    if (globalCurrentSupplyChainCostsData == globalSupplyChainCostsData) {\r\n      // console.log('Same price, will not update')\r\n      dispatch(setSupplyChainsCostsModalVisible(false));\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), globalCurrentStockID);\r\n\r\n      try {\r\n        await updateDoc(vehicleProductRef, { supplyChainsCostsData: globalSupplyChainCostsData });\r\n        dispatch(setSupplyChainsCostsModalVisible(false));\r\n        // console.log('Supply Chains Costs updated successfully');\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n\r\n        dispatch(setSupplyChainsCostsModalVisible(false));\r\n        dispatch(setVehicleListSupplyChainsCostsData([]));\r\n        globalSupplyChainCostsData = [];\r\n        globalCurrentSupplyChainCostsData = [];\r\n        globalCurrentStockID = '';\r\n\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n  return (\r\n\r\n    <><Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 960 ? '90%' : '50%'} h={'auto'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 1380 ? 'column' : 'row'} alignItems={screenWidth <= 1380 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\r\n          <Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 1380 ? 'center' : ''}> {globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <View style={{ height: '100%' }}>\r\n            <View paddingBottom={5}>\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} ref={expenseViewRef}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\r\n                  <SupplyChainsCostsSortAndAddModal\r\n                    docName='ExpenseName'\r\n                    handleAddTextChange={handleAddExpenseNameTextChange}\r\n                    textAreaAdd={textAreaAddExpenseName}\r\n                    title='Expense Name'\r\n                    dataName={'expenseName'}\r\n                    databaseInit={projectExtensionFirestore}\r\n                    headerText=\"Rearrange/Add Expense Name\"\r\n                    data={expenseNameData}\r\n                    handleFirstModalClose={handleFirstModalClose}\r\n                    handleFirstModalOpen={handleFirstModalOpen} />\r\n                </View>\r\n                <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\r\n              </View>\r\n\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: screenWidth <= 960 ? 8 : 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={2}>Amount</Text>\r\n                </View>\r\n                <Input\r\n                  borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\r\n                  flex={3}\r\n                  ref={inputExpenseAmount}\r\n                  onChangeText={handleInputExpenseAmountChange}\r\n                  placeholder=\"Amount\"\r\n                  bgColor={'white'}\r\n                  placeholderTextColor={'muted.400'}\r\n                  InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\r\n              </View>\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\r\n                </View>\r\n                <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\r\n              </View>\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\r\n                  <SupplyChainsCostsSortAndAddModal\r\n                    docName='PaidTo'\r\n                    handleAddTextChange={handleAddPaidToTextChange}\r\n                    textAreaAdd={textAreaAddExpenseName}\r\n                    title='Paid To'\r\n                    dataName={'paidTo'}\r\n                    databaseInit={projectExtensionFirestore}\r\n                    headerText=\"Rearrange/Add Paid To\"\r\n                    data={paidToData}\r\n                    handleFirstModalClose={handleFirstModalClose}\r\n                    handleFirstModalOpen={handleFirstModalOpen} />\r\n                </View>\r\n                <SelectPaidTo paidToIsError={paidToIsError} />\r\n              </View>\r\n\r\n              <TouchableHighlight\r\n                onPress={handleSave}\r\n                underlayColor=\"lightgreen\"\r\n                style={{\r\n                  backgroundColor: '#16A34A',\r\n                  borderRadius: 5,\r\n                  margin: 1,\r\n                  flex: 1,\r\n                  width: screenWidth <= 960 ? '80%' : '40%',\r\n                  alignSelf: 'center',\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 10,\r\n                }}>\r\n                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                  <MaterialIcons name=\"add\" color=\"white\" size={20} />\r\n                  <Text style={{ color: 'white', marginLeft: 5 }}>ADD/EDIT</Text>\r\n                </View>\r\n              </TouchableHighlight>\r\n            </View>\r\n            {screenWidth >= 1360 ? (\r\n\r\n              <View>\r\n                <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#0642F4', }}\r\n                  flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\r\n                </View>\r\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n                  return (\r\n                    <View style={{ flexDirection: 'row', backgroundColor: '#D4D4D4', borderBottomColor: '#E4E4E7', borderBottomWidth: 1, justifyContent: 'center', alignItems: 'center', }} key={index}\r\n                      flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\r\n                      justifyContent={'center'} alignItems={'center'}>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      <View style={{ flex: 1, flexDirection: 'row', marginLeft: 1 }}\r\n                        flex={1} marginLeft={1} flexDir={'row'}>\r\n                        <TouchableHighlight\r\n                          onPress={() => handleEditPress(expenseData)}\r\n                          underlayColor={'#005691'}\r\n                          style={{\r\n                            flex: 1,\r\n                            margin: 1,\r\n                            borderRadius: 3,\r\n                          }}>\r\n                          <View\r\n                            style={{\r\n                              flex: 1,\r\n                              backgroundColor: '#06B6D4',\r\n                              borderRadius: 3,\r\n                              justifyContent: 'center',\r\n                              alignItems: 'center',\r\n                            }}>\r\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\r\n                          </View>\r\n                        </TouchableHighlight>\r\n                        <TouchableHighlight\r\n                          onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                          underlayColor={'#005691'}\r\n                          style={{\r\n                            flex: 1,\r\n                            margin: 1,\r\n                            borderRadius: 3,\r\n                          }}>\r\n                          <View\r\n                            style={{\r\n                              flex: 1,\r\n                              backgroundColor: '#EF4444',\r\n                              borderRadius: 3,\r\n                              justifyContent: 'center',\r\n                              alignItems: 'center',\r\n                            }}>\r\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                          </View>\r\n                        </TouchableHighlight>\r\n                        {/* <TouchableHighlight\r\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                        style={() => ({\r\n                          flex: 1,\r\n                          margin: 1,\r\n                          borderRadius: 3,\r\n                          backgroundColor: '#CD5C5C',\r\n                        })}>\r\n                        <View\r\n                          style={{\r\n                            flex: 1,\r\n                            borderRadius: 3,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            backgroundColor: '#CD5C5C',\r\n                          }}>\r\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                        </View>\r\n                      </TouchableHighlight> */}\r\n                      </View>\r\n                    </View>\r\n                  )\r\n                })}\r\n\r\n              </View>\r\n\r\n            ) : (\r\n\r\n              <View>\r\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n                  return (\r\n\r\n                    <View style={{ flexDirection: 'column', justifyContent: 'center', flex: 1, margin: 3, marginBottom: 10, }} key={index}>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Expense Name</Text>\r\n                        </View>\r\n\r\n                        <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Amount</Text>\r\n                        </View>\r\n\r\n                        <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Date</Text>\r\n                        </View>\r\n                        <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Paid To</Text>\r\n                        </View>\r\n                        <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Modify</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, flexDirection: 'row', }}\r\n                          flex={1} marginLeft={1} flexDir={'row'}>\r\n\r\n                          <TouchableHighlight\r\n                            onPress={() => handleEditPress(expenseData)}\r\n                            underlayColor={'#005691'}\r\n                            style={{\r\n                              flex: 1,\r\n                              margin: 1,\r\n                              borderRadius: 3,\r\n                            }}>\r\n                            <View\r\n                              style={{\r\n                                flex: 1,\r\n                                backgroundColor: '#06B6D4',\r\n                                borderRadius: 3,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                              }}>\r\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\r\n                            </View>\r\n                          </TouchableHighlight>\r\n                          <TouchableHighlight\r\n                            onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                            underlayColor={'#005691'}\r\n                            style={{\r\n                              flex: 1,\r\n                              margin: 1,\r\n                              borderRadius: 3,\r\n                            }}>\r\n                            <View\r\n                              style={{\r\n                                flex: 1,\r\n                                backgroundColor: '#EF4444',\r\n                                borderRadius: 3,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                              }}>\r\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                            </View>\r\n                          </TouchableHighlight>\r\n                          {/* <TouchableHighlight\r\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                        style={() => ({\r\n                          flex: 1,\r\n                          margin: 1,\r\n                          borderRadius: 3,\r\n                          backgroundColor: '#CD5C5C',\r\n                        })}>\r\n                        <View\r\n                          style={{\r\n                            flex: 1,\r\n                            borderRadius: 3,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            backgroundColor: '#CD5C5C',\r\n                          }}>\r\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                        </View>\r\n                      </TouchableHighlight> */}\r\n                        </View>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n\r\n                  )\r\n                })}\r\n\r\n              </View>\r\n\r\n\r\n            )}\r\n\r\n          </View>\r\n\r\n\r\n        </Modal.Body>\r\n        <View\r\n          style={{\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            width: '100%',\r\n          }}>\r\n          <TouchableOpacity\r\n            onPress={handleModalSupplyChainsCostsClose}\r\n            style={{\r\n              backgroundColor: '#525252',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Close</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ flex: 4 }} />\r\n          <TouchableOpacity\r\n            onPress={handleSaveSupplyChainsCosts}\r\n            style={{\r\n              backgroundColor: '#16A34A',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Save</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Modal.Content>\r\n    </Modal>\r\n      {/* <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n        <Modal.Content bgColor={'amber.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'amber.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'amber.600'}\r\n            margin={5}>\r\n            <View flex={1}>\r\n              <Text color={'amber.600'} bold>Warning!</Text>\r\n              <Text color={'amber.600'}>Are you sure you want to clear?</Text>\r\n            </View>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleClearModalClose}\r\n                colorScheme={'warmGray'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button\r\n                onPress={() => {\r\n                }}\r\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                Clear\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal> */}\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nconst SelectPaidTo = ({ paidToIsError, }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedPaidTo}\r\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedPaidTo = value\r\n      dispatch(setSelectedPaidTo(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Paid To\"\r\n    placeholder=\"Choose Paid To\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {paidToData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n    ;\r\n};\r\n\r\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  nameVariable.text = loginName;\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n    handleFirstModalClose();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n    handleFirstModalOpen();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        // console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'flex-end', marginRight: 1 }}>\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity onPress={handleSortModalOpen}>\r\n            <MaterialCommunityIcons name=\"playlist-edit\" size={25} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n      </View>\r\n\r\n      <Modal isOpen={modalSortOpen} onClose={handleSortModalClose} useRNModal>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <View style={{\r\n              width: '100%',\r\n              flexDirection: 'column',\r\n            }}>\r\n              <View style={{ alignItems: 'flex-end' }}>\r\n                <TouchableHighlight onPress={handleModalAddOpen}>\r\n                  <FontAwesome name=\"plus-circle\" size={25} color=\"#102A43\" />\r\n                </TouchableHighlight>\r\n              </View>\r\n\r\n              <View style={{\r\n                flex: 1,\r\n                borderWidth: 1,\r\n                borderColor: '#102A43',\r\n                borderRadius: 5,\r\n              }}>\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n                    <View\r\n                      style={{\r\n                        flex: 1,\r\n                        backgroundColor: 'rgba(16,42,67, 0.5)',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#D3D3D3', // You can use a specific color code here\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                      }}\r\n                    >\r\n                      <TouchableOpacity onPress={() => handleDeleteItemPress(item)}>\r\n                        <AntDesign name=\"minuscircle\" size={16} color=\"#102A43\" />\r\n                      </TouchableOpacity>\r\n                      <Text style={{ flex: 1, textAlign: 'center', color: 'white' }}>{item}</Text>\r\n                      <TouchableOpacity onPressIn={drag}>\r\n                        <Entypo name=\"menu\" size={16} color=\"#102A43\" />\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </View>\r\n            </View>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <View style={{ flexDirection: 'row', flex: 1 }}>\r\n              <TouchableOpacity\r\n                onPress={handleSortModalClose}\r\n                style={{\r\n                  flex: 1,\r\n                  borderRadius: 5,\r\n                  backgroundColor: '#525252',\r\n                  margin: 5,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 8,\r\n                }}\r\n              >\r\n                <Text style={{ color: 'white' }}>Close</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={handleModalSaveOpen}\r\n                style={{\r\n                  flex: 1,\r\n                  borderRadius: 5,\r\n                  backgroundColor: '#0891B2',\r\n                  margin: 5,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 8,\r\n                }}\r\n              >\r\n                <Text style={{ color: 'white' }}>Save</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} useRNModal>\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nconst SCC_Modals = () => {\r\n\r\n  const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible)\r\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const currentDate = useSelector((state) => state.currentDate);\r\n  const vehicleListSupplyChainsCostsData = useSelector((state) => state.vehicleListSupplyChainsCostsData);\r\n\r\n  return (\r\n    <AllSccModals\r\n      supplyChainsCostsModalVisible={supplyChainsCostsModalVisible}\r\n      supplyChainsCostsData={supplyChainsCostsData}\r\n      expenseNameData={expenseNameData}\r\n      paidToData={paidToData}\r\n      currentDate={currentDate}\r\n      vehicleListSupplyChainsCostsData={vehicleListSupplyChainsCostsData}\r\n    />\r\n  );\r\n}\r\n\r\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\r\n\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const handleModalCalendarOpen = () => {\r\n    setModalCalendarVisible(true);\r\n  };\r\n\r\n  const handleModalCalendarClose = () => {\r\n    setModalCalendarVisible(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <TouchableOpacity onPress={handleModalCalendarOpen} style={{ flex: 3 }}>\r\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n      </TouchableOpacity>\r\n\r\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n        <Modal.CloseButton />\r\n        <Modal.Content>\r\n          <Box height={'full'} flex={1}>\r\n\r\n            <Calendar\r\n              onDayPress={useCallback(day => {\r\n                setSelectedDate(day.dateString);\r\n                // console.log(day.dateString);\r\n                globalSPCSelectedDate = day.dateString;\r\n                handleModalCalendarClose();\r\n              }, [])}\r\n              markedDates={{\r\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n              }}\r\n              renderArrow={(direction) => (\r\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n              )}\r\n              enableSwipeMonths={true}\r\n              initialDate={selectedDate}\r\n              showSixWeeks />\r\n\r\n          </Box>\r\n\r\n        </Modal.Content>\r\n\r\n      </Modal></>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedExpenseName}\r\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedExpenseName = value\r\n      dispatch(setSelectedExpenseName(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Expense Name\"\r\n    placeholder=\"Choose Expense Name\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {expenseNameData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n\r\n\r\n};\r\n\r\nconst VehicleEditModal = ({ handleEditModalClose }) => {\r\n\r\n  const editVehicleModalVisible = useSelector((state) => state.editVehicleModalVisible);\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  return (\r\n    <Modal isOpen={editVehicleModalVisible} onClose={handleEditModalClose} size={'full'}>\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'100%'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Edit Vehicle </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n\r\n\r\n        <Modal.Body >\r\n          Sit nulla est ex deserunt exercitation anim occaecat.\r\n        </Modal.Body>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n\r\n  );\r\n};\r\n\r\nconst EditVehicleModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEditModalClose = () => {\r\n    dispatch(setEditVehicleModalVisible(false));\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = '';\r\n    globalSelectedVehicleReferenceNumber = '';\r\n    globalSelectedCarName = '';\r\n\r\n  }\r\n\r\n  return (\r\n    <VehicleEditModal handleEditModalClose={handleEditModalClose} />\r\n\r\n\r\n  );\r\n\r\n};\r\n\r\nconst EditVehicle = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleModalOpen = () => {\r\n\r\n    dispatch(setEditVehicleModalVisible(true));\r\n    globalCurrentStockID = data.stockID;\r\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\r\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\r\n    globalSelectedCarName = data.carName;\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        onPress={handleModalOpen}\r\n        style={{\r\n          backgroundColor: '#7B9CFF',\r\n          marginHorizontal: 5,\r\n          borderRadius: 5,\r\n          padding: 2,\r\n          flex: 1,\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        {/* <Text style={{ textAlign: 'center',  color: 'white', }}>Edit</Text> */}\r\n        <MaterialIcons name={\"edit\"} color='white' size={22} />\r\n      </TouchableOpacity>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst ViewImagesModal = ({ handleViewImagesModalClose }) => {\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const viewImagesModalVisible = useSelector((state) => state.viewImagesModalVisible);\r\n  const viewImagesData = useSelector((state) => state.viewImagesData);\r\n\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    const styles = StyleSheet.create({\r\n      dropdown: {\r\n        margin: 16,\r\n        height: 50,\r\n        borderBottomColor: 'gray',\r\n        borderBottomWidth: 0.5,\r\n      },\r\n      icon: {\r\n        marginRight: 5,\r\n      },\r\n      placeholderStyle: {\r\n        fontSize: 16,\r\n      },\r\n      selectedTextStyle: {\r\n        fontSize: 16,\r\n      },\r\n      iconStyle: {\r\n        width: 20,\r\n        height: 20,\r\n      },\r\n      inputSearchStyle: {\r\n        height: 40,\r\n        fontSize: 16,\r\n      },\r\n      container: {\r\n        flex: 1,\r\n        paddingTop: 20,\r\n\r\n      },\r\n      txt: {\r\n        fontSize: 18,\r\n        lineHeight: 24,\r\n        padding: 5\r\n      },\r\n      sort: {\r\n      },\r\n      item_children: {\r\n        width: 90,\r\n        height: 90,\r\n        backgroundColor: 'black',\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      },\r\n      item_delete_icon: {\r\n        width: 14,\r\n        height: 14,\r\n        position: \"absolute\",\r\n        right: 1,\r\n        top: 1\r\n      },\r\n      item_icon: {\r\n        width: 90,\r\n        height: 90,\r\n        resizeMode: \"contain\",\r\n        position: \"absolute\"\r\n      }\r\n    });\r\n\r\n    return (\r\n\r\n      <Box key={item.id} style={styles.item}>\r\n        <Box style={styles.item_children}>\r\n\r\n          <FastImage\r\n            style={styles.item_icon}\r\n            source={{\r\n              uri: item.uri,\r\n              priority: FastImage.priority.normal,\r\n            }}\r\n            resizeMode={FastImage.resizeMode.contain}\r\n\r\n          />\r\n\r\n        </Box>\r\n      </Box>\r\n    );\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <>\r\n      <Modal isOpen={viewImagesModalVisible} onClose={handleViewImagesModalClose} size={'full'} useRNModal>\r\n        <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '60%'} h={'100%'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n            <Text color={'white'} fontSize={20} bold>View Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n          </Modal.Header>\r\n\r\n\r\n          <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', margin: '5%', marginLeft: '10%' }}>\r\n\r\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n              <ScrollView style={{ height: '90%' }}>\r\n                <DragSortableView\r\n                  sortable={false}\r\n                  // ref={dragSortableViewRef}\r\n                  dataSource={viewImagesData}\r\n                  parentWidth={width * 0.33}\r\n                  childrenWidth={100}\r\n                  childrenHeight={100}\r\n                  marginChildrenTop={3}\r\n                  marginChildrenBottom={0}\r\n                  marginChildrenLeft={0}\r\n                  marginChildrenRight={0}\r\n                  onClickItem={(item, index) => {\r\n                    handleImagePress(index.uri);\r\n                  }}\r\n                  keyExtractor={(item) => item.uri}\r\n                  renderItem={useCallback((item, index) => getImagesRenderItem(item, index), [])}\r\n                />\r\n              </ScrollView>\r\n            </View>\r\n\r\n\r\n          </View>\r\n\r\n\r\n        </Modal.Content>\r\n\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\n\r\nconst FobPriceHistoryModal = ({ handleFobPriceHistoryClose }) => {\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const fobPriceHistoryModalVisible = useSelector((state) => state.fobPriceHistoryModalVisible);\r\n  const fobHistoryData = useSelector((state) => state.fobHistoryData);\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={fobPriceHistoryModalVisible}\r\n      onClose={handleFobPriceHistoryClose}\r\n      size={'full'}\r\n      useRNModal\r\n    >\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'auto'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} alignItems={screenWidth <= 960 ? 'center' : 'flex-start'}>\r\n          <Text color={'white'} fontSize={20} bold>FOB Price History </Text>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ScrollView style={{ width: '100%' }}>\r\n            {screenWidth >= 960 ? (\r\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\r\n                {/* Table Header */}\r\n                <View style={{\r\n                  borderRadius: 3,\r\n                  backgroundColor: '#0642F4',\r\n                  flexDirection: 'row',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#0642F4',\r\n                }}>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\r\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n\r\n                </View>\r\n\r\n                {/* Table Rows */}\r\n                {[...fobHistoryData]\r\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\r\n                  .map((data, index) => (\r\n                    <View\r\n                      key={index}\r\n                      style={{\r\n                        backgroundColor: '#BBF7D0',\r\n                        flexDirection: 'row',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#CCCCCC',\r\n                      }}\r\n                    >\r\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\r\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\r\n                      <Text style={{ width: '20%', fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\r\n                    </View>\r\n                  ))\r\n                }\r\n              </View>\r\n            ) : (\r\n              // Mobile View FOB Price History\r\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\r\n                {/* Table Header */}\r\n                {/* <View style={{\r\n                  borderRadius: 3,\r\n                  backgroundColor: '#0642F4',\r\n                  flexDirection: 'row',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#0642F4',\r\n                }}>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price</Text>\r\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n\r\n                </View> */}\r\n\r\n                {/* Table Rows */}\r\n                {[...fobHistoryData]\r\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\r\n                  .map((data, index) => (\r\n                    <View\r\n                      key={index}\r\n                      style={{\r\n                        backgroundColor: '#BBF7D0',\r\n                        flexDirection: 'column',\r\n                        borderWidth: 1,\r\n                        borderColor: '#E4E4E7',\r\n                        margin: 3,\r\n                      }}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                        </View>\r\n\r\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\r\n                        </View><Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n                        </View>\r\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\r\n                      </View>\r\n                    </View>\r\n                  ))\r\n                }\r\n              </View>\r\n            )}\r\n\r\n          </ScrollView>\r\n\r\n\r\n\r\n\r\n        </Modal.Body>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nconst FobPriceHistory = () => {\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleFobPriceHistoryClose = () => {\r\n\r\n    dispatch(setFobPriceHistoryModalVisible(false));\r\n    globalFobPriceHistoryData = [];\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = '';\r\n    globalSelectedVehicleReferenceNumber = '';\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <FobPriceHistoryModal handleFobPriceHistoryClose={handleFobPriceHistoryClose} />\r\n\r\n  );\r\n}\r\n\r\n\r\nconst ImageCountComponent = ({ item, handleViewImagesModalOpen, handleUploadImagesModalOpen }) => {\r\n  // State for the image count\r\n  const [imageCount, setImageCount] = useState(item.imageCount || 0);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        setImageCount(data.imageCount || 0); // Update the image count with the new value from Firestore\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, [item.stockID]); // useEffect will re-run if item.stockID changes\r\n\r\n  // Function placeholders\r\n  // const handleViewImagesModalOpen = (item) => {\r\n  //   console.log('View images', item);\r\n  // };\r\n\r\n  // const handleUploadImagesModalOpen = (item) => {\r\n  //   console.log('Upload images', item);\r\n  // };\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n      {imageCount > 0 ? (\r\n        <TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n          <Text style={{ textDecorationLine: 'underline' }}>\r\n            {imageCount} image/s\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ) : (\r\n        <Text>{imageCount} image/s</Text>\r\n      )}\r\n\r\n      <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n        {imageCount > 0 ? null : (\r\n          <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n        )}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst FobPriceInput = ({ item, index, }) => {\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const [fobPrice, setFobPrice] = useState(item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : '');\r\n  const inputFobJpy = useRef([]);\r\n\r\n  useEffect(() => {\r\n    // Assume you have a collection named 'stocks' and the document ID is `item.stockID`\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\r\n      // console.log(`Read ${doc.size} documents from VehicleProducts`);\r\n\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        // Update the fobPrice state with the new value from Firestore\r\n        setFobPrice(data.fobPrice ? parseFloat(data.fobPrice).toLocaleString() : '');\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // ... rest of your component\r\n  const formatValueWithCommas = (value) => {\r\n    const numericValue = value.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    return formattedValue;\r\n  };\r\n\r\n  const handleTextChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    const currentNumericValue = fobPrice.replace(/[^0-9]/g, '');\r\n\r\n    // Update state only if the numeric value has changed\r\n    if (numericValue !== currentNumericValue) {\r\n      setFobPrice(numericValue);\r\n    }\r\n  };\r\n\r\n  // This function will format the displayed text\r\n  const handleInputFobJpyChange = (text, stockID) => {\r\n    const formattedValue = formatValueWithCommas(text);\r\n\r\n    // Apply the formatted value to the input without resetting the state\r\n    if (inputFobJpy.current[stockID]) {\r\n      inputFobJpy.current[stockID].setNativeProps({ text: formattedValue });\r\n    }\r\n  };\r\n\r\n  const handleSaveFob = async (item, index,) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    toast.closeAll();\r\n    // if (item.fobPrice == fobValue || fobValue == '') {\r\n    //   dispatch(setLoadingModalVisible(false));\r\n\r\n    //   console.log('same');\r\n    //   console.log(item.fobPrice);\r\n\r\n    // }\r\n    // else {\r\n\r\n    const fobHistoryData = {\r\n      date: formattedTime,\r\n      fobPrice: fobValue,\r\n      changedBy: nameVariable.text,\r\n    };\r\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n    try {\r\n      await updateDoc(vehicleProductRef, {\r\n        fobPrice: fobValue,\r\n        fobHistory: arrayUnion(fobHistoryData)\r\n      });\r\n      const logData = {\r\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle FOB Price Updated'.toLowerCase(),\r\n          'Vehicle FOB Price'.toLowerCase(),\r\n          'Vehicle FOB'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'FOB Price Updated'.toLowerCase(),\r\n          'FOB Price'.toLowerCase(),\r\n          'FOB'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n      // console.log('FOB Price updated successfully');\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    // }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextInput\r\n        ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n        value={formatValueWithCommas(fobPrice)} // Display the formatted value\r\n        style={{ outlineStyle: 'none', flex: 1, padding: 5, borderRadius: 5, width: '90%' }}\r\n        key={item.id}\r\n        onChangeText={(text) => {\r\n          handleTextChange(text); // This sets the numeric value state\r\n          handleInputFobJpyChange(text, item.stockID); // This formats the display\r\n        }}\r\n        onSubmitEditing={() => handleSaveFob(item, index)} />\r\n      <TouchableHighlight\r\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n        onPress={() => handleSaveFob(item, index)}\r\n        style={{\r\n          backgroundColor: '#16A34A',\r\n          borderRadius: 5,\r\n          padding: 5,\r\n          margin: 2,\r\n          alignSelf: 'center',\r\n        }}>\r\n        {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n        <MaterialIcons name='update' color='white' size={22} />\r\n      </TouchableHighlight>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst VehicleListTable = () => {\r\n  const toast = useToast();\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const dispatch = useDispatch();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [data, setData] = useState([]);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const vehicleListData = useSelector((state) => state.vehicleListData);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const searchInputRef = useRef(null);\r\n\r\n\r\n  const [stockIDs, setStockIDs] = useState([]);\r\n  const [imageCounts, setImageCounts] = useState([]);\r\n\r\n  const inputExpenseAmount = useRef(null);\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const inputFobJpy = useRef([]);\r\n  const [pageClicked, setPageClicked] = useState('');\r\n  const [lastVisible, setLastVisible] = useState(null);\r\n  const [firstVisible, setFirstVisible] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [fobPrices, setFobPrices] = useState({});\r\n  // Memoize the filtered data using useMemo\r\n  const [sortField, setSortField] = useState('dateAdded'); // null when sorting is off\r\n  const [isSortActive, setIsSortActive] = useState(false);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  nameVariable.text = loginName;\r\n\r\n  const handleSortChange = (field) => {\r\n    setCurrentPage(1);\r\n    // If the field is the same as the current sortField, toggle sorting\r\n    setSearchText('');\r\n    searchInputRef.current.clear();\r\n    if (field === sortField) {\r\n      setIsSortActive(!isSortActive); // Toggle sorting for the same field\r\n      if (!isSortActive) {\r\n        // If it was off, we turn it on and keep the same field\r\n        setSortField(field);\r\n      } else {\r\n        // If it was on, we turn it off and reset to default 'dateAdded'\r\n        setSortField('dateAdded');\r\n      }\r\n    } else {\r\n      // If the field is different, turn sorting on and change the field\r\n      setSortField(field);\r\n      setIsSortActive(true); // Always turn on sorting when a new field is clicked\r\n    }\r\n    // You might want to dispatch setLoadingModalVisible(true) when you start a new query\r\n    dispatch(setLoadingModalVisible(true));\r\n  };\r\n\r\n\r\n  const fetchWithSort = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n    let q;\r\n\r\n    if (searchText === '') {\r\n      q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        limit(pageSize)\r\n      );\r\n    } else {\r\n      q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        limit(pageSize)\r\n      );\r\n    }\r\n\r\n    try {\r\n      const documents = await getDocs(q);\r\n      const vehicleProductData = [];\r\n      documents.forEach((document) => {\r\n        vehicleProductData.push({\r\n          id: document.id,\r\n          ...document.data(),\r\n        });\r\n      });\r\n      dispatch(setVehicleListData(vehicleProductData));\r\n      setLastVisible(documents.docs[documents.docs.length - 1]);\r\n      setFirstVisible(documents.docs[0]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching vehicle products:\", error);\r\n    } finally {\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchWithSort();\r\n  }, [sortField])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // Determine the field and direction to sort by\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n    // Define the query\r\n    const q = query(\r\n      collection(projectExtensionFirestore, 'VehicleProducts'),\r\n      orderBy(fieldToSortBy, sortDirection),\r\n      limit(pageSize)\r\n    );\r\n\r\n    // Fetch the data once\r\n    getDocs(q)\r\n      .then((documents) => {\r\n        const vehicleProductData = [];\r\n        documents.forEach((document) => {\r\n          vehicleProductData.push({\r\n            id: document.id,\r\n            ...document.data(),\r\n          });\r\n        });\r\n        dispatch(setVehicleListData(vehicleProductData));\r\n        setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        setFirstVisible(documents.docs[0]);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching vehicle products: \", error);\r\n        // Handle the error appropriately\r\n      });\r\n\r\n    // Since this effect does not subscribe to real-time updates, there's no need to return a cleanup function\r\n  }, [projectExtensionFirestore, pageSize, sortField, isSortActive]); // Add dependencies as necessary\r\n\r\n\r\n\r\n  const fetchNextData = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n\r\n    if (searchText === '') {\r\n\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        startAfter(lastVisible),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'next');\r\n\r\n\r\n\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n    }\r\n\r\n    else {\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        startAfter(lastVisible),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'next');\r\n\r\n\r\n\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const fetchPreviousData = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n    if (searchText === '') {\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        endBefore(firstVisible),\r\n        limitToLast(pageSize)\r\n      );\r\n\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'prev')\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n\r\n    else {\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        endBefore(firstVisible),\r\n        limitToLast(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'prev');\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  const fetchFirstPage = (documents) => {\r\n\r\n\r\n    const vehicleProductData = [];\r\n\r\n    documents.forEach((document) => {\r\n      vehicleProductData.push({\r\n        id: document.id,\r\n        ...document.data(),\r\n      });\r\n    });\r\n\r\n    dispatch(setVehicleListData(vehicleProductData));\r\n\r\n    if (documents?.docs[0]) {\r\n      setFirstVisible(documents.docs[0]);\r\n    }\r\n    if (documents?.docs[documents.docs.length - 1]) {\r\n      setLastVisible(documents.docs[documents.docs.length - 1]);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n    if (!documents.empty) {\r\n      const vehicleProductData = [];\r\n      documents.forEach((document) => {\r\n        vehicleProductData.push({\r\n          id: document.id,\r\n          ...document.data(),\r\n        });\r\n      });\r\n\r\n\r\n\r\n      if (documents?.docs[0]) {\r\n        setFirstVisible(documents.docs[0]);\r\n      }\r\n      if (documents?.docs[documents.docs.length - 1]) {\r\n        setLastVisible(documents.docs[documents.docs.length - 1]);\r\n      }\r\n\r\n      if (pageClicked == 'next') {\r\n        setCurrentPage(currentPage + 1);\r\n      }\r\n      if (pageClicked == 'prev') {\r\n        setCurrentPage(currentPage - 1);\r\n      }\r\n      if (vehicleProductData.length < 1) {\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n      }\r\n\r\n      dispatch(setVehicleListData(vehicleProductData));\r\n    }\r\n\r\n    else {\r\n      const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n      const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n      if (searchText == '') {\r\n        setCurrentPage(1);\r\n\r\n        const q = query(\r\n          collection(projectExtensionFirestore, 'VehicleProducts'),\r\n          orderBy(fieldToSortBy, sortDirection),\r\n          limit(pageSize)\r\n        );\r\n        const firstPageDocuments = await getDocs(q);\r\n        fetchFirstPage(firstPageDocuments);\r\n\r\n      }\r\n      else {\r\n\r\n        setCurrentPage(1);\r\n\r\n        const q = query(\r\n          collection(projectExtensionFirestore, 'VehicleProducts'),\r\n          where('keywords', 'array-contains', searchText.toUpperCase()),\r\n          orderBy(fieldToSortBy, sortDirection),\r\n          limit(pageSize)\r\n        );\r\n        const firstPageDocuments = await getDocs(q);\r\n        fetchFirstPage(firstPageDocuments);\r\n\r\n      }\r\n\r\n\r\n    }\r\n  };\r\n\r\n  const handleNextPage = async () => {\r\n    // setPageClicked('next');\r\n    dispatch(setLoadingModalVisible(true));\r\n    // setCurrentPage(currentPage + 1);\r\n    await fetchNextData();\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  const handlePreviousPage = async () => {\r\n    // setPageClicked('previous');\r\n    dispatch(setLoadingModalVisible(true));\r\n    // setCurrentPage(currentPage - 1);\r\n    await fetchPreviousData();\r\n\r\n\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    searchData();\r\n\r\n  }, [searchText])\r\n\r\n  const searchData = async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    if (searchText === '') {\r\n      setCurrentPage(1);\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const firstPageDocuments = await getDocs(q);\r\n      fetchFirstPage(firstPageDocuments);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n    }\r\n\r\n    else {\r\n      setCurrentPage(1);\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const firstPageDocuments = await getDocs(q);\r\n      fetchFirstPage(firstPageDocuments);\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const filteredData = useMemo(() => {\r\n    const sanitizedSearchQuery = searchQuery.trim().toLowerCase();\r\n\r\n    // Filter the data based on the sanitized searchQuery (removing whitespace from the beginning and end)\r\n    const filteredResults = vehicleListData.filter((item) => {\r\n      const carName = item.carName ? item.carName.trim().toLowerCase() : '';\r\n      const referenceNumber = item.referenceNumber ? item.referenceNumber.trim().toLowerCase() : '';\r\n      const chassisNumber = item.chassisNumber ? item.chassisNumber.trim().toLowerCase() : '';\r\n      const stockStatus = item.stockStatus ? item.stockStatus.trim().toLowerCase() : '';\r\n      const fobPrice = item.fobPrice ? item.fobPrice.toString().trim().toLowerCase() : '';\r\n\r\n      return (\r\n        carName.includes(sanitizedSearchQuery) ||\r\n        referenceNumber.includes(sanitizedSearchQuery) ||\r\n        chassisNumber.includes(sanitizedSearchQuery) ||\r\n        stockStatus.includes(sanitizedSearchQuery) ||\r\n        fobPrice.includes(sanitizedSearchQuery)\r\n      );\r\n    });\r\n\r\n    return filteredResults;\r\n  }, [searchQuery, vehicleListData]);\r\n\r\n\r\n\r\n  const formatValueWithCommas = (value) => {\r\n    const numericValue = value.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    return formattedValue;\r\n  };\r\n\r\n  // Function to handle input changes for each item\r\n  const handleInputFobJpyChange = (text, index) => {\r\n    const formattedValue = formatValueWithCommas(text);\r\n\r\n    if (inputFobJpy.current[index]) {\r\n      inputFobJpy.current[index].value = formattedValue;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const fetchImageCounts = async () => {\r\n\r\n    // Extract and store the stockIDs in the state\r\n    const ids = filteredData.map(item => item.stockID);\r\n    setStockIDs(ids);\r\n\r\n    // Fetch image counts\r\n    const counts = await Promise.all(\r\n      ids.map(async stockID => {\r\n        const count = await getImageCountInFolder(stockID);\r\n        return { stockID, count };\r\n      })\r\n    );\r\n\r\n    // Create an object where stockID is the index value\r\n    const imageCountsObject = counts.reduce((acc, { stockID, count }) => {\r\n      acc[stockID] = count;\r\n      return acc;\r\n    }, {});\r\n\r\n    setImageCounts(imageCountsObject);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImageCounts();\r\n  }, []);\r\n\r\n  const getImageCountInFolder = async (folderPath) => {\r\n    try {\r\n      const folderRef = ref(storage, folderPath);\r\n      const listResult = await listAll(folderRef);\r\n\r\n      return listResult.items.length;\r\n    } catch (error) {\r\n      console.error('Error getting image count:', error);\r\n      return -1; // Handle the error accordingly\r\n    }\r\n  };\r\n\r\n\r\n  const handleTextChange = (text) => {\r\n    setSearchQuery(text);\r\n  };\r\n\r\n  const handleFobPriceHistoryOpen = async (item) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n    dispatch(setFobPriceHistoryModalVisible(true));\r\n    if (item.stockID) {\r\n      const docRef = doc(projectExtensionFirestore, 'VehicleProducts', item.stockID);\r\n      try {\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n          // Assuming you have an action to set the FOB history like setFobHistory\r\n          dispatch(setFobHistoryData(docSnap.data().fobHistory || []));\r\n          dispatch(setLoadingModalVisible(false));\r\n\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching document: \", error);\r\n      }\r\n    }\r\n    // globalFobPriceHistoryData = item.fobHistory ? item.fobHistory : [];\r\n    globalCurrentStockID = item.stockID ? item.stockID : '';\r\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n\r\n  }\r\n\r\n  const handleSaveFob = async (item, index,) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    toast.closeAll();\r\n    // if (item.fobPrice == fobValue || fobValue == '') {\r\n    //   dispatch(setLoadingModalVisible(false));\r\n\r\n    // }\r\n    // else {\r\n\r\n    const fobHistoryData = {\r\n      date: formattedTime,\r\n      fobPrice: fobValue,\r\n      changedBy: nameVariable.text,\r\n    };\r\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n    try {\r\n      await updateDoc(vehicleProductRef, {\r\n        fobPrice: fobValue,\r\n        fobHistory: arrayUnion(fobHistoryData)\r\n      });\r\n      const logData = {\r\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle FOB Price Updated'.toLowerCase(),\r\n          'Vehicle FOB Price'.toLowerCase(),\r\n          'Vehicle FOB'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'FOB Price Updated'.toLowerCase(),\r\n          'FOB Price'.toLowerCase(),\r\n          'FOB'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n      // console.log('FOB Price updated successfully');\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    // }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n\r\n  const handleUploadImagesModalOpen = (item) => {\r\n    dispatch(setUploadImagesModalVisible(true));\r\n    globalCurrentStockID = item.stockID;\r\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n    globalSelectedCarName = item.carName;\r\n\r\n  }\r\n\r\n  const handleViewImagesModalOpen = async (item) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n    try {\r\n      await getImages(item.stockID);\r\n      globalCurrentStockID = item.stockID;\r\n      globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n      globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n      dispatch(setLoadingModalVisible(false));\r\n      dispatch(setViewImagesModalVisible(true));\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n  }\r\n\r\n  const handleViewImagesModalClose = () => {\r\n    dispatch(setViewImagesModalVisible(false));\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = ``;\r\n    globalSelectedVehicleReferenceNumber = '';\r\n    globalSelectedCarName = '';\r\n    dispatch(setViewImagesData([]));\r\n  };\r\n\r\n  const getImages = useCallback(async (folderName) => {\r\n    try {\r\n\r\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\r\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n\r\n      const urls = await Promise.all(\r\n        imageRefs.items.map(async (itemRef) => {\r\n          const uri = await getDownloadURL(itemRef);\r\n          return { uri, fileName: itemRef.name };\r\n        })\r\n      );\r\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\r\n      urls.sort((a, b) => {\r\n        const fileNameA = parseInt(a.fileName);\r\n        const fileNameB = parseInt(b.fileName);\r\n        return fileNameA - fileNameB;\r\n      });\r\n\r\n      if (urls.length > 0) {\r\n        dispatch(setViewImagesData(urls));\r\n\r\n      }\r\n\r\n      else {\r\n        dispatch(setViewImagesData([]));\r\n      }\r\n\r\n      // console.log(urls);\r\n\r\n    } catch (error) {\r\n      // Handle any errors that may occur during the Firebase operations\r\n      console.error('Error getting image URLs:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const addStockStatusToVehicleProducts = async () => {\r\n    const vehicleProductsRef = collection(projectExtensionFirestore, \"VehicleProducts\");\r\n\r\n    try {\r\n      const querySnapshot = await getDocs(vehicleProductsRef);\r\n      querySnapshot.forEach(async (doc) => {\r\n        const data = doc.data();\r\n\r\n        // Check if the imageCount field does not exist\r\n        if (data.stockStatus === undefined) {\r\n          try {\r\n            // If the imageCount field doesn't exist, initialize it to 0\r\n            await updateDoc(doc.ref, {\r\n              stockStatus: ''\r\n            });\r\n            console.log(`stockStatus initialized to 0 for document ID: ${doc.id}`);\r\n          } catch (error) {\r\n            console.error('Error initializing stockStatus field:', error);\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error reading VehicleProducts collection:\", error);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const handleSearchEnter = () => {\r\n    // setSortField('dateAdded');\r\n    // setIsSortActive(false)\r\n    if (searchInputRef.current?.value !== '') {\r\n      setSearchText(searchInputRef.current.value.trim());\r\n      setSortField('dateAdded');\r\n      setIsSortActive(false);\r\n    }\r\n    else {\r\n      setSearchText('');\r\n      setSortField('dateAdded');\r\n      setIsSortActive(false)\r\n      if (searchText == '') {\r\n\r\n        searchData();\r\n\r\n      }\r\n\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {screenWidth >= 1360 ?\r\n        (\r\n          <View style={{ flex: 1, }}>\r\n            <View>\r\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                returnKeyType='search'\r\n                autoCapitalize='none'\r\n\r\n              />\r\n            </View>\r\n            <View\r\n              style={{\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-between',\r\n                borderBottomWidth: 1,\r\n                borderBottomColor: '#E4E4E7',\r\n                backgroundColor: '#0642F4',\r\n                padding: 2,\r\n                borderRadius: 5,\r\n              }}>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Ref #</Text>\r\n              </View>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Car Name</Text>\r\n              </View>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Chassis #</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('imageCount')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'imageCount' ? '#FBBC04' : 'white', }} bold underline>Images</Text>\r\n                </TouchableOpacity></View>\r\n\r\n\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('stockStatus')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'stockStatus' ? '#FBBC04' : 'white', }} bold underline>Stock Status</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('fobPrice')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'fobPrice' ? '#FBBC04' : 'white', }} bold underline>FOB Price</Text>\r\n                </TouchableOpacity></View>\r\n\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', alignSelf: 'center', }} bold>Operate</Text>\r\n              </View>\r\n            </View>\r\n            {vehicleListData.map((item, index) => (\r\n              <View\r\n                key={item.id}\r\n                style={{\r\n                  flex: 1,\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'space-between',\r\n                  alignItems: 'center',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#E4E4E7',\r\n                  backgroundColor: '#BFDBFE',\r\n                  paddingVertical: 10,\r\n                }}>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.referenceNumber}</Text>\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', }}>{item.carName} </Text>\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', }}>{item.chassisNumber}</Text>\r\n                </View>\r\n                <ImageCountComponent item={item} handleViewImagesModalOpen={handleViewImagesModalOpen} handleUploadImagesModalOpen={handleUploadImagesModalOpen} />\r\n                {/* <View style={{ flex: 1, flexDirection: 'row' }}>\r\n\r\n                  {item.imageCount > 0 ?\r\n                    (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n                      <Text underline>\r\n                        {item.imageCount ? item.imageCount : 0} image/s\r\n                      </Text>\r\n                    </TouchableOpacity>) :\r\n                    (<Text>\r\n                      {item.imageCount ? item.imageCount : 0} image/s\r\n                    </Text>)\r\n                  }\r\n\r\n\r\n                  <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n                    {item.imageCount > 0 ? null : (\r\n                      <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n                    )}\r\n                  </TouchableOpacity>\r\n                </View> */}\r\n                <View style={{ flex: 1, }}>\r\n                  <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\r\n                  {/* <Text style={{ width: '90%', }}>{item.stockStatus}</Text> */}\r\n                </View>\r\n\r\n                <View style={{ width: '90%', flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, }}>\r\n                  <TouchableOpacity\r\n                    onPress={() => handleFobPriceHistoryOpen(item)}\r\n                    style={{\r\n                      margin: 5,\r\n                      alignSelf: 'center',\r\n                    }}>\r\n                    {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n                    <FontAwesome name='clock-o' color='black' size={22} />\r\n                  </TouchableOpacity>\r\n                  <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\r\n                  {/* <TextInput\r\n                    ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n                    defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\r\n                    style={{ flex: 1, padding: 5, borderRadius: 5, width: '90%', }}\r\n                    key={item.id}\r\n                    onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\r\n                    onSubmitEditing={() => handleSaveFob(item, index)} /> */}\r\n\r\n                </View>\r\n                <View style={{ flexDirection: 'row', flex: 1, alignItems: 'center', justifyContent: 'center', }}>\r\n                  <SupplyChainsCosts data={item} />\r\n                  {/* <EditVehicle data={item} /> */}\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={{\r\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\r\n              alignSelf: 'center',\r\n            }}>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <TouchableOpacity\r\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                  onPress={handlePreviousPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n\r\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={handleNextPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n\r\n\r\n\r\n\r\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\r\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\r\n\r\n            {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n              <TouchableOpacity\r\n                onPress={addStockStatusToVehicleProducts}>\r\n                <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                  <FontAwesome name='save' size={40} color={'white'} />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View> */}\r\n\r\n          </View>\r\n        ) :\r\n\r\n\r\n\r\n        (\r\n          <View style={{ flex: 1, }}>\r\n            <View >\r\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '98%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', alignSelf: 'center', marginTop: 5, }}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                returnKeyType='search'\r\n                autoCapitalize='none'\r\n              />\r\n            </View>\r\n\r\n            {vehicleListData.map((item, index) => (\r\n              <View\r\n                key={item.id}\r\n                style={{\r\n                  flex: 1,\r\n                  flexDirection: 'column',\r\n                  borderWidth: 1,\r\n                  borderColor: '#E4E4E7',\r\n                  backgroundColor: '#BFDBFE',\r\n                  margin: 10,\r\n                }}>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Ref #</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.referenceNumber}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Car Name</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.carName} </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Chassis #</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.chassisNumber}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Images</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    {item.imageCount > 0 ?\r\n                      (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n                        <Text underline style={{ marginLeft: 3 }}>\r\n                          {item.imageCount ? item.imageCount : 0} image/s\r\n                        </Text>\r\n                      </TouchableOpacity>) :\r\n                      (<Text style={{ marginLeft: 3 }}>\r\n                        {item.imageCount ? item.imageCount : 0} image/s\r\n                      </Text>)\r\n                    }\r\n\r\n\r\n                    <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n                      {item.imageCount > 0 ? null : (\r\n                        <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n                      )}\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>Stock Status</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, paddingVertical: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\r\n                  </View>\r\n                </View>\r\n\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>FOB Price ¥</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <TouchableOpacity\r\n                      onPress={() => handleFobPriceHistoryOpen(item)}\r\n                      style={{\r\n                        margin: 5,\r\n                        alignSelf: 'center',\r\n                      }}>\r\n                      {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n                      <FontAwesome name='clock-o' color='black' size={22} />\r\n                    </TouchableOpacity>\r\n                    <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\r\n\r\n                    {/* <TextInput\r\n                      ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n                      defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\r\n                      style={{ width: '90%', borderRadius: 5, }}\r\n                      key={item.id}\r\n                      onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\r\n                      onSubmitEditing={() => handleSaveFob(item, index)} /> */}\r\n                    {/* <TouchableHighlight\r\n                      underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                      onPress={() => handleSaveFob(item, index)}\r\n                      style={{\r\n                        backgroundColor: '#16A34A',\r\n                        margin: 2,\r\n                        marginLeft: 2,\r\n                        alignSelf: 'center',\r\n                        borderRadius: 5,\r\n                      }}>\r\n                      <MaterialIcons name='update' color='white' size={22} />\r\n                    </TouchableHighlight> */}\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                  </View>\r\n                  <View style={{ flexDirection: 'row', flex: 1, margin: 5, }}>\r\n                    <SupplyChainsCosts data={item} />\r\n                    {/* <EditVehicle data={item} /> */}\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={{\r\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\r\n              alignSelf: 'center',\r\n            }}>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <TouchableOpacity\r\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                  onPress={handlePreviousPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n\r\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={handleNextPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n            <TouchableOpacity\r\n              onPress={addKeywordsToVehicleProducts}>\r\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                <MaterialIcons name='save' size={40} color={'white'} />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View> */}\r\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={addImageCountToVehicleProducts}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <FontAwesome name='dollar' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View> */}\r\n            </View>\r\n\r\n\r\n\r\n\r\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\r\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\r\n\r\n          </View>\r\n\r\n        )}\r\n\r\n\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function VehicleList() {\r\n  const [email, setEmail] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n  const [isMobileView, setIsMobileView] = useState(false);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  // const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const [typeOfAccount, setTypeOfAccount] = useState('');\r\n\r\n\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [name, setName] = useState(loginName);\r\n  const [time, setTime] = useState('');\r\n\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\r\n\r\n  useEffect(() => {\r\n    const updateWidth = () => {\r\n      const newWidth = Dimensions.get('window').width;\r\n      setScreenWidth(newWidth); // Update the screenWidth state\r\n    };\r\n\r\n    // Add event listener for window resize\r\n    Dimensions.addEventListener('change', updateWidth);\r\n\r\n    // Clean up the event listener when the component unmounts or re-renders\r\n    return () => {\r\n      Dimensions.removeEventListener('change', updateWidth);\r\n    };\r\n  }, []);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const handleWidthChange = ({ window }) => {\r\n  //     setWidthState(window.width);\r\n  //   };\r\n\r\n  //   Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleWidthChange);\r\n  //   };\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   reloadData();\r\n  // }, [reloadData]);\r\n\r\n\r\n  // useEffect(() => {\r\n  // }, [typeOfAccount]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n      if (!user) {\r\n        // navigation.navigate(\"Login\")\r\n        navigate(\"/Login\");\r\n\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(projectControlAuth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(projectControlAuth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate(\"/Login\");\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = projectControlAuth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      // This will now always be a function\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n      listenForNameChange(documentId);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const listenForNameChange = (documentId) => {\r\n\r\n\r\n    // To stop listening for updates, you can call unsubscribe()\r\n    // unsubscribe();\r\n  };\r\n\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(projectControlAuth).then(() => {\r\n      // navigation.navigate('Login');\r\n      navigate(\"/Login\");\r\n\r\n      setEmail('');\r\n      setName('');\r\n    }).catch(() => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   const handleScreenResize = () => {\r\n  //     const screenWidth = Dimensions.get('window').width;\r\n  //     setIsMobileView(screenWidth < 1200);\r\n  //   };\r\n\r\n  //   // Initial check on component mount\r\n  //   handleScreenResize();\r\n\r\n  //   // Listen for screen dimension changes\r\n  //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n  //   // Cleanup event listener on component unmount\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleScreenResize);\r\n  //   };\r\n  // }, []);\r\n\r\n\r\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#0642F4'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#0642F4'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  const SuccessModal = ({ isOpen, onClose, bodyText, headerText }) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Modal isOpen={isOpen} onClose={onClose} useRNModal>\r\n          <Modal.Content bgColor={'green.100'}>\r\n            <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n              <Text textAlign={'center'} color={'#102A43'} bold>\r\n                😊😎 Success! 😎😊\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'green.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'green.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'green.600'} bold>\r\n                  {headerText}\r\n                  {/* Vehicle Added! */}\r\n                </Text>\r\n                <Text color={'green.600'}>\r\n                  {bodyText}\r\n                  {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n                  Ok\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <NativeBaseProvider>\r\n      <>\r\n\r\n        <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n          {/* Header */}\r\n          <Box\r\n            px=\"3\"\r\n            bgColor='#0642f4'\r\n            height={54}\r\n            position=\"sticky\"\r\n            top={0}\r\n            zIndex={999}\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            borderBottomWidth={0}\r\n            borderBottomColor={'cyan.500'}\r\n          >\r\n\r\n\r\n            <SideDrawer\r\n              selectedScreen={selectedScreen} />\r\n\r\n            <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n\r\n              <FastImage\r\n                source={{\r\n                  uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                  priority: FastImage.priority.high,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.stretch}\r\n                style={styles.image} />\r\n            </Box>\r\n\r\n            {screenWidth <= 960 && <MobileViewDrawer\r\n              selectedScreen={selectedScreen} />}\r\n\r\n            <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n              <FastImage\r\n                source={{\r\n                  uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                  priority: FastImage.priority.high,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.stretch}\r\n                style={styles.image} />\r\n            </Box>\r\n\r\n\r\n            <View style={{ alignItems: 'center', flex: 1 }}>\r\n              <QRCodeScanner />\r\n            </View>\r\n\r\n            <NamePopover name={name} handleSignOut={handleSignOut} />\r\n\r\n\r\n          </Box>\r\n\r\n          {/* Content */}\r\n          <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\r\n\r\n\r\n            {/* Main Content */}\r\n            {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n            {/* Main Content Content */}\r\n\r\n\r\n            {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n            <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\r\n              <ScrollView style={{ flex: 1, }} keyboardShouldPersistTaps='always'>\r\n                <View style={{ flex: 1, }}>\r\n                  <VehicleListTable />\r\n\r\n\r\n                </View>\r\n              </ScrollView>\r\n              <SCC_Modals />\r\n              <EditVehicleModal />\r\n              <FobPriceHistory />\r\n              {/* <SuccessModal /> */}\r\n\r\n            </View>\r\n\r\n\r\n            {/* </Box> */}\r\n\r\n            {/* </Box> */}\r\n          </View>\r\n\r\n        </View>\r\n        <LoadingModal />\r\n\r\n      </>\r\n\r\n\r\n\r\n\r\n\r\n    </NativeBaseProvider>\r\n\r\n\r\n\r\n\r\n  );\r\n\r\n};","import { useState, useEffect } from 'react';\r\nimport { collection, query, orderBy, startAfter, limit, onSnapshot } from 'firebase/firestore';\r\nimport { useSelector } from 'react-redux';\r\nimport { setVehicleListData } from '../redux/store';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const UsePagination = (projectExtensionFirestore) => {\r\n    const dispatch = useDispatch();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    // const [data, setData] = useState([]);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const handleNextPage = () => {\r\n        setCurrentPage(currentPage + 1);\r\n    };\r\n\r\n    const handlePreviousPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                let q;\r\n                if (lastVisible) {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n                        orderBy('dateAdded', 'desc'),\r\n                        startAfter(lastVisible),\r\n                        limit(pageSize)\r\n                    );\r\n                } else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n                        orderBy('dateAdded', 'desc'),\r\n                        limit(pageSize)\r\n                    );\r\n                }\r\n\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const vehicleProductData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        vehicleProductData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n                    if (!snapshot.empty) {\r\n                        setLastVisible(snapshot.docs[snapshot.docs.length - 1]);\r\n                    }\r\n\r\n                    // setData(vehicleProductData);\r\n                    dispatch(setVehicleListData(vehicleProductData));\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data: ', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [projectExtensionFirestore, currentPage, pageSize]);\r\n\r\n    return { handleNextPage, handlePreviousPage };\r\n};","import { configureStore, createSlice, } from '@reduxjs/toolkit'\r\nimport { useEffect, useMemo } from 'react';\r\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where, orderBy, limit } from 'firebase/firestore';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../../crossFirebase\";\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSelector } from 'react-redux';\r\n\r\nlet makeDataVariable = [];\r\nlet email = '';\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\n\r\nconst messageTextInputValueSlice = createSlice({\r\n  name: 'messageTextInputValue',\r\n  initialState: '',\r\n  reducers: {\r\n    setMessageTextInputValue: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst carImageUrlSlice = createSlice({\r\n  name: 'carImageUrl',\r\n  initialState: '',\r\n  reducers: {\r\n    setCarImageUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedFileUrlSlice = createSlice({\r\n  name: 'selectedFileUrl',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedFileUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst pdfViewerModalVisibleSlice = createSlice({\r\n  name: 'pdfViewerModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setPdfViewerModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst selectedVehicleDataSlice = createSlice({\r\n  name: 'selectedVehicleData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedVehicleData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst selectedCustomerDataSlice = createSlice({\r\n  name: 'selectedCustomerData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedCustomerData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst previewInvoiceVisibleSlice = createSlice({\r\n  name: 'previewInvoiceVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setPreviewInvoiceVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst customInvoiceVisibleSlice = createSlice({\r\n  name: 'customInvoiceVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setCustomInvoiceVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst transactionModalVisibleSlice = createSlice({\r\n  name: 'transactionModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setTransactionModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst invoiceDataSlice = createSlice({\r\n  name: 'invoiceData',\r\n  initialState: {},\r\n  reducers: {\r\n    setInvoiceData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst deleteMessageTemplateVisibleSlice = createSlice({\r\n  name: 'deleteMessageTemplateVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeleteMessageTemplateVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loadMoreMessagesLoadingSlice = createSlice({\r\n  name: 'loadMoreMessagesLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadMoreMessagesLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst noMoreMessagesDataSlice = createSlice({\r\n  name: 'noMoreMessagesData',\r\n  initialState: false,\r\n  reducers: {\r\n    setNoMoreMessagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst readByListModalVisibleSlice = createSlice({\r\n  name: 'readByListModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setReadByListModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedChatDataSlice = createSlice({\r\n  name: 'selectedChatData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedChatData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst chatMessageBoxLoadingSlice = createSlice({\r\n  name: 'chatMessageBoxLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setChatMessageBoxLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatMessagesDataSlice = createSlice({\r\n  name: 'chatMessagesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setChatMessagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst chatListSearchTextSlice = createSlice({\r\n  name: 'chatListSearchText',\r\n  initialState: '',\r\n  reducers: {\r\n    setChatListSearchText: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst activeChatIdSlice = createSlice({\r\n  name: 'activeChatId',\r\n  initialState: '',\r\n  reducers: {\r\n    setActiveChatId: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loadMoreLoadingSlice = createSlice({\r\n  name: 'loadMoreLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadMoreLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst noMoreDataSlice = createSlice({\r\n  name: 'noMoreData',\r\n  initialState: false,\r\n  reducers: {\r\n    setNoMoreData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListLastVisibleSlice = createSlice({\r\n  name: 'chatListLastVisible',\r\n  initialState: null,\r\n  reducers: {\r\n    setChatListLastVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListDataSlice = createSlice({\r\n  name: 'chatListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setChatListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListImageUrlSlice = createSlice({\r\n  name: 'chatListImageUrl',\r\n  initialState: null,\r\n  reducers: {\r\n    setChatListImageUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\n\r\n\r\n\r\n// =============================== Freight ========================================\r\n\r\n\r\nconst countryPortsDataSlice = createSlice({\r\n  name: 'countryPortsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setCountryPortsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst addPortsForCountriesModalVisibleSlice = createSlice({\r\n  name: 'addPortsForCountriesModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddPortsForCountriesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst methodDataSlice = createSlice({\r\n  name: 'methodData',\r\n  initialState: [],\r\n  reducers: {\r\n    setMethodData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst inspectionIsRequiredDataSlice = createSlice({\r\n  name: 'inspectionIsRequiredData',\r\n  initialState: [],\r\n  reducers: {\r\n    setInspectionIsRequiredData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst inspectionNameDataSlice = createSlice({\r\n  name: 'inspectionNameData',\r\n  initialState: [],\r\n  reducers: {\r\n    setInspectionNameData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst deletePortModalVisibleSlice = createSlice({\r\n  name: 'deletePortModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeletePortModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst deleteCountryModalVisibleSlice = createSlice({\r\n  name: 'deleteCountryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeleteCountryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst addPortModalVisibleSlice = createSlice({\r\n  name: 'addPortModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddPortModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst addCountryModalVisibleSlice = createSlice({\r\n  name: 'addCountryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddCountryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst selectedButtonSlice = createSlice({\r\n  name: 'selectedButton',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedButton: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst freightCountriesDataSlice = createSlice({\r\n  name: 'freightCountriesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFreightCountriesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst freightPortsDataSlice = createSlice({\r\n  name: 'freightPortsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFreightPortsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\nconst fobHistoryDataSlice = createSlice({\r\n  name: 'fobHistoryData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFobHistoryData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst inputFobSlice = createSlice({\r\n  name: 'inputFob',\r\n  initialState: '',\r\n  reducers: {\r\n    setInputFob: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst fobPriceHistoryModalVisibleSlice = createSlice({\r\n  name: 'fobPriceHistoryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setFobPriceHistoryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst editVehicleModalVisibleSlice = createSlice({\r\n  name: 'editVehicleModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setEditVehicleModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst vehicleListDataSlice = createSlice({\r\n  name: 'vehicleListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setVehicleListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst addVehicleListDataSlice = createSlice({\r\n  name: 'addVehicleListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setAddVehicleListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst supplyChainsCostsModalVisibleSlice = createSlice({\r\n  name: 'supplyChainsCostsModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setSupplyChainsCostsModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst uploadImagesModalVisibleSlice = createSlice({\r\n  name: 'uploadImagesModalVisibleVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setUploadImagesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst vehicleListSupplyChainsCostsDataSlice = createSlice({\r\n  name: 'vehicleListSupplyChainsCostsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setVehicleListSupplyChainsCostsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst uploadImagesButtonLoadingSlice = createSlice({\r\n  name: 'uploadImagesButtonLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setUploadImagesButtonLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst viewImagesModalVisibleSlice = createSlice({\r\n  name: 'viewImagesModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setViewImagesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst viewImagesDataSlice = createSlice({\r\n  name: 'viewImagesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setViewImagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst lastVisibleSlice = createSlice({\r\n  name: 'lastVisible',\r\n  initialState: '',\r\n  reducers: {\r\n    setLastVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Account List ========================================\r\nconst accountListDataSlice = createSlice({\r\n  name: 'accountListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setAccountListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\n// =============================== Account List ========================================\r\n\r\n// =============================== Logs ======================================== \r\n\r\n\r\nconst logsDataSlice = createSlice({\r\n  name: 'logsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setLogsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// =============================== Logs ======================================== \r\n\r\n\r\nconst stockStatusDataSlice = createSlice({\r\n  name: 'stockStatusData',\r\n  initialState: [\r\n    'On-Sale',\r\n    'Reserved',\r\n    'Sold',\r\n    'Hidden',],\r\n  reducers: {\r\n    setStockStatusData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isSuccessModalOpenSlice = createSlice({\r\n  name: 'isSuccessModalOpen',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsSuccessModalOpen: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isUpdateSuccessModalOpenSlice = createSlice({\r\n  name: 'isUpdateSuccessModalOpen',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsUpdateSuccessModalOpen: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loadingModalVisibleSlice = createSlice({\r\n  name: 'loadingModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadingModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedExpenseNameSlice = createSlice({\r\n  name: 'selectedExpenseName',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedExpenseName: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedPaidToSlice = createSlice({\r\n  name: 'selectedPaidTo',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedPaidTo: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst supplyChainsCostsDataSlice = createSlice({\r\n  name: 'supplyChainsCostsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSupplyChainsCostsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst currentDateSlice = createSlice({\r\n  name: 'currentDate',\r\n  initialState: '',\r\n  reducers: {\r\n    setCurrentDate: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loginEmailSlice = createSlice({\r\n  name: 'loginEmail',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoginEmail: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loginAccountTypeSlice = createSlice({\r\n  name: 'loginAccountType',\r\n  initialState: '',\r\n  reducers: {\r\n    setLoginAccountType: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loginNameSlice = createSlice({\r\n  name: 'loginName',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoginName: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst modalDeleteImagesVisibleSlice = createSlice({\r\n  name: 'modalDeleteImages',\r\n  initialState: false,\r\n  reducers: {\r\n    setModalDeleteImagesVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst addAnotherImagesSlice = createSlice({\r\n  name: 'addAnotherImagesVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddAnotherImages: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isAddPhotoVisibleSlice = createSlice({\r\n  name: 'isAddPhotoVisible',\r\n  initialState: true,\r\n  reducers: {\r\n    setIsAddPhotoVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst jpyToUsdSlice = createSlice({\r\n  name: 'jpyToUsd',\r\n  initialState: '',\r\n  reducers: {\r\n    setJpyToUsd: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst usdToJpySlice = createSlice({\r\n  name: 'usdToJpy',\r\n  initialState: '',\r\n  reducers: {\r\n    setUsdToJpy: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst modelDataSlice = createSlice({\r\n  name: 'modelData',\r\n  initialState: [],\r\n  reducers: {\r\n    setModelData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst makeDataSlice = createSlice({\r\n  name: 'makeData',\r\n  initialState: makeDataVariable,\r\n  reducers: {\r\n    setMakeData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst expenseNameDataSlice = createSlice({\r\n  name: 'expenseName',\r\n  initialState: [],\r\n  reducers: {\r\n    setExpenseNameData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst paidToDataSlice = createSlice({\r\n  name: 'paidTo',\r\n  initialState: [],\r\n  reducers: {\r\n    setPaidToData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedMakeSlice = createSlice({\r\n  name: 'selectedMake',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedMake: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isLoadingSlice = createSlice({\r\n  name: 'isLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedImagesSlice = createSlice({\r\n  name: 'selectedImages',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedImages: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst portDataSlice = createSlice({\r\n  name: 'portData',\r\n  initialState: [],\r\n  reducers: {\r\n    setPortData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst transmissionDataSlice = createSlice({\r\n  name: 'transmissionData',\r\n  initialState: [],\r\n  reducers: {\r\n    setTransmissionData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst fuelDataSlice = createSlice({\r\n  name: 'fuelData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFuelData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst buyerDataSlice = createSlice({\r\n  name: 'buyerData',\r\n  initialState: [],\r\n  reducers: {\r\n    setBuyerData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst salesDataSlice = createSlice({\r\n  name: 'salesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSalesData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst driveTypeDataSlice = createSlice({\r\n  name: 'driveTypeData',\r\n  initialState: [],\r\n  reducers: {\r\n    setDriveTypeData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst bodyTypeDataSlice = createSlice({\r\n  name: 'bodyTypeData',\r\n  initialState: [],\r\n  reducers: {\r\n    setBodyTypeData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst exteriorColorDataSlice = createSlice({\r\n  name: 'exteriorColorData',\r\n  initialState: [],\r\n  reducers: {\r\n    setExteriorColorData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst currentYearSlice = createSlice({\r\n  name: 'currentYear',\r\n  initialState: '',\r\n  reducers: {\r\n    setCurrentYear: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n\r\nconst deleteImageVisibleSlice = createSlice({\r\n  name: 'deleteImageVisible',\r\n  initialState: true,\r\n  reducers: {\r\n    setDeleteImageVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n});\r\n\r\n// =============================== Chat Messages ========================================\r\nexport const { setMessageTextInputValue } = messageTextInputValueSlice.actions\r\nexport const { setCustomInvoiceVisible } = customInvoiceVisibleSlice.actions\r\nexport const { setSelectedVehicleData } = selectedVehicleDataSlice.actions\r\nexport const { setCarImageUrl } = carImageUrlSlice.actions\r\nexport const { setSelectedFileUrl } = selectedFileUrlSlice.actions\r\nexport const { setPdfViewerModalVisible } = pdfViewerModalVisibleSlice.actions\r\nexport const { setSelectedCustomerData } = selectedCustomerDataSlice.actions\r\nexport const { setPreviewInvoiceVisible } = previewInvoiceVisibleSlice.actions\r\nexport const { setInvoiceData } = invoiceDataSlice.actions\r\nexport const { setTransactionModalVisible } = transactionModalVisibleSlice.actions\r\nexport const { setDeleteMessageTemplateVisible } = deleteMessageTemplateVisibleSlice.actions\r\nexport const { setLoadMoreMessagesLoading } = loadMoreMessagesLoadingSlice.actions\r\nexport const { setNoMoreMessagesData } = noMoreMessagesDataSlice.actions\r\nexport const { setReadByListModalVisible } = readByListModalVisibleSlice.actions\r\nexport const { setSelectedChatData } = selectedChatDataSlice.actions\r\nexport const { setChatMessageBoxLoading } = chatMessageBoxLoadingSlice.actions\r\nexport const { setChatMessagesData } = chatMessagesDataSlice.actions\r\nexport const { setActiveChatId } = activeChatIdSlice.actions\r\nexport const { setChatListSearchText } = chatListSearchTextSlice.actions\r\nexport const { setLoadMoreLoading } = loadMoreLoadingSlice.actions\r\nexport const { setNoMoreData } = noMoreDataSlice.actions\r\nexport const { setChatListLastVisible } = chatListLastVisibleSlice.actions\r\nexport const { setChatListData } = chatListDataSlice.actions\r\nexport const { setChatListImageUrl } = chatListImageUrlSlice.actions\r\n// =============================== Chat Messages ========================================\r\n\r\n// =============================== Freight ========================================\r\nexport const { setDeletePortModalVisible } = deletePortModalVisibleSlice.actions\r\nexport const { setDeleteCountryModalVisible } = deleteCountryModalVisibleSlice.actions\r\nexport const { setCountryPortsData } = countryPortsDataSlice.actions\r\nexport const { setAddPortsForCountriesModalVisible } = addPortsForCountriesModalVisibleSlice.actions\r\nexport const { setInspectionIsRequiredData } = inspectionIsRequiredDataSlice.actions\r\nexport const { setMethodData } = methodDataSlice.actions\r\nexport const { setInspectionNameData } = inspectionNameDataSlice.actions\r\nexport const { setSelectedButton } = selectedButtonSlice.actions\r\nexport const { setAddCountryModalVisible } = addCountryModalVisibleSlice.actions\r\nexport const { setAddPortModalVisible } = addPortModalVisibleSlice.actions\r\nexport const { setFreightPortsData } = freightPortsDataSlice.actions\r\nexport const { setFreightCountriesData } = freightCountriesDataSlice.actions\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Vehicle List ========================================\r\nexport const { setInputFob } = inputFobSlice.actions\r\nexport const { setFobHistoryData } = fobHistoryDataSlice.actions\r\nexport const { setFobPriceHistoryModalVisible } = fobPriceHistoryModalVisibleSlice.actions\r\nexport const { setEditVehicleModalVisible } = editVehicleModalVisibleSlice.actions\r\nexport const { setVehicleListData } = vehicleListDataSlice.actions\r\nexport const { setAddVehicleListData } = addVehicleListDataSlice.actions\r\nexport const { setSupplyChainsCostsModalVisible } = supplyChainsCostsModalVisibleSlice.actions\r\nexport const { setVehicleListSupplyChainsCostsData } = vehicleListSupplyChainsCostsDataSlice.actions\r\nexport const { setUploadImagesModalVisible } = uploadImagesModalVisibleSlice.actions\r\nexport const { setUploadImagesButtonLoading } = uploadImagesButtonLoadingSlice.actions\r\nexport const { setViewImagesModalVisible } = viewImagesModalVisibleSlice.actions\r\nexport const { setViewImagesData } = viewImagesDataSlice.actions\r\nexport const { setLastVisible } = lastVisibleSlice.actions\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Account List ========================================\r\nexport const { setAccountListData } = accountListDataSlice.actions\r\n\r\n// =============================== Account List ========================================\r\n\r\n// =============================== Logs ======================================== \r\nexport const { setLogsData } = logsDataSlice.actions\r\n// =============================== Logs ======================================== \r\n\r\nexport const { setStockStatusData } = stockStatusDataSlice.actions\r\nexport const { setIsSuccessModalOpen } = isSuccessModalOpenSlice.actions\r\nexport const { setIsUpdateSuccessModalOpen } = isUpdateSuccessModalOpenSlice.actions\r\nexport const { setLoadingModalVisible } = loadingModalVisibleSlice.actions\r\nexport const { setSelectedPaidTo } = selectedPaidToSlice.actions\r\nexport const { setSelectedExpenseName } = selectedExpenseNameSlice.actions\r\nexport const { setSupplyChainsCostsData } = supplyChainsCostsDataSlice.actions\r\nexport const { setCurrentDate } = currentDateSlice.actions\r\nexport const { setPaidToData } = paidToDataSlice.actions\r\nexport const { setDeleteImageVisible } = deleteImageVisibleSlice.actions\r\nexport const { setExpenseNameData } = expenseNameDataSlice.actions\r\nexport const { setLoginEmail } = loginEmailSlice.actions\r\nexport const { setLoginName } = loginNameSlice.actions\r\nexport const { setLoginAccountType } = loginAccountTypeSlice.actions\r\nexport const { setIsAddPhotoVisible } = isAddPhotoVisibleSlice.actions\r\nexport const { setAddAnotherImages } = addAnotherImagesSlice.actions\r\nexport const { setModalDeleteImagesVisible } = modalDeleteImagesVisibleSlice.actions\r\nexport const { setMakeData } = makeDataSlice.actions\r\nexport const { setSelectedMake } = selectedMakeSlice.actions\r\nexport const { setIsLoading } = isLoadingSlice.actions\r\nexport const { setSelectedImages } = selectedImagesSlice.actions\r\nexport const { setPortData } = portDataSlice.actions\r\nexport const { setTransmissionData } = transmissionDataSlice.actions;\r\nexport const { setFuelData } = fuelDataSlice.actions;\r\nexport const { setBuyerData } = buyerDataSlice.actions;\r\nexport const { setSalesData } = salesDataSlice.actions;\r\nexport const { setDriveTypeData } = driveTypeDataSlice.actions;\r\nexport const { setBodyTypeData } = bodyTypeDataSlice.actions;\r\nexport const { setExteriorColorData } = exteriorColorDataSlice.actions;\r\nexport const { setJpyToUsd } = jpyToUsdSlice.actions;\r\nexport const { setUsdToJpy } = usdToJpySlice.actions;\r\nexport const { setCurrentYear } = currentYearSlice.actions;\r\nexport const { setModelData } = modelDataSlice.actions\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n\r\n    // =============================== Chat Messages ======================================== \r\n    customInvoiceVisible: customInvoiceVisibleSlice.reducer,\r\n    messageTextInputValue: messageTextInputValueSlice.reducer,\r\n    selectedVehicleData: selectedVehicleDataSlice.reducer,\r\n    carImageUrl: carImageUrlSlice.reducer,\r\n    selectedFileUrl: selectedFileUrlSlice.reducer,\r\n    pdfViewerModalVisible: pdfViewerModalVisibleSlice.reducer,\r\n    selectedCustomerData: selectedCustomerDataSlice.reducer,\r\n    previewInvoiceVisible: previewInvoiceVisibleSlice.reducer,\r\n    invoiceData: invoiceDataSlice.reducer,\r\n    transactionModalVisible: transactionModalVisibleSlice.reducer,\r\n    deleteMessageTemplateVisible: deleteMessageTemplateVisibleSlice.reducer,\r\n    loadMoreMessagesLoading: loadMoreMessagesLoadingSlice.reducer,\r\n    noMoreMessagesData: noMoreMessagesDataSlice.reducer,\r\n    readByListModalVisible: readByListModalVisibleSlice.reducer,\r\n    selectedChatData: selectedChatDataSlice.reducer,\r\n    chatMessageBoxLoading: chatMessageBoxLoadingSlice.reducer,\r\n    chatMessagesData: chatMessagesDataSlice.reducer,\r\n    chatListSearchText: chatListSearchTextSlice.reducer,\r\n    activeChatId: activeChatIdSlice.reducer,\r\n    loadMoreLoading: loadMoreLoadingSlice.reducer,\r\n    noMoreData: noMoreDataSlice.reducer,\r\n    chatListLastVisible: chatListLastVisibleSlice.reducer,\r\n    chatListData: chatListDataSlice.reducer,\r\n    chatListImageUrl: chatListImageUrlSlice.reducer,\r\n    // =============================== Chat Messages ======================================== \r\n\r\n    // =============================== Freight ======================================== \r\n    deletePortModalVisible: deletePortModalVisibleSlice.reducer,\r\n    deleteCountryModalVisible: deleteCountryModalVisibleSlice.reducer,\r\n    countryPortsData: countryPortsDataSlice.reducer,\r\n    addPortsForCountriesModalVisible: addPortsForCountriesModalVisibleSlice.reducer,\r\n    inspectionIsRequiredData: inspectionIsRequiredDataSlice.reducer,\r\n    methodData: methodDataSlice.reducer,\r\n    freightPortsData: freightPortsDataSlice.reducer,\r\n    inspectionNameData: inspectionNameDataSlice.reducer,\r\n    addCountryModalVisible: addCountryModalVisibleSlice.reducer,\r\n    addPortModalVisible: addPortModalVisibleSlice.reducer,\r\n    freightCountriesData: freightCountriesDataSlice.reducer,\r\n    selectedButton: selectedButtonSlice.reducer,\r\n    // =============================== Freight ========================================\r\n\r\n    // =============================== Vehicle List ========================================\r\n    inputFob: inputFobSlice.reducer,\r\n    fobHistoryData: fobHistoryDataSlice.reducer,\r\n    fobPriceHistoryModalVisible: fobPriceHistoryModalVisibleSlice.reducer,\r\n    editVehicleModalVisible: editVehicleModalVisibleSlice.reducer,\r\n    vehicleListData: vehicleListDataSlice.reducer,\r\n    addVehicleListData: addVehicleListDataSlice.reducer,\r\n    supplyChainsCostsModalVisible: supplyChainsCostsModalVisibleSlice.reducer,\r\n    uploadImagesModalVisible: uploadImagesModalVisibleSlice.reducer,\r\n    uploadImagesButtonLoading: uploadImagesButtonLoadingSlice.reducer,\r\n    viewImagesModalVisible: viewImagesModalVisibleSlice.reducer,\r\n    viewImagesData: viewImagesDataSlice.reducer,\r\n    lastVisible: lastVisibleSlice.reducer,\r\n    // =============================== Vehicle List ========================================\r\n\r\n\r\n    // =============================== Account List ========================================\r\n    accountListData: accountListDataSlice.reducer,\r\n    // =============================== Account List ========================================\r\n\r\n\r\n    // =============================== Logs ======================================== \r\n    logsData: logsDataSlice.reducer,\r\n    // =============================== Logs ======================================== \r\n    stockStatusData: stockStatusDataSlice.reducer,\r\n    isUpdateSuccessModalOpen: isUpdateSuccessModalOpenSlice.reducer,\r\n    loadingModalVisible: loadingModalVisibleSlice.reducer,\r\n    selectedPaidTo: selectedPaidToSlice.reducer,\r\n    selectedExpenseName: selectedExpenseNameSlice.reducer,\r\n    supplyChainsCostsData: supplyChainsCostsDataSlice.reducer,\r\n    vehicleListSupplyChainsCostsData: vehicleListSupplyChainsCostsDataSlice.reducer,\r\n    currentDate: currentDateSlice.reducer,\r\n    paidToData: paidToDataSlice.reducer,\r\n    expenseNameData: expenseNameDataSlice.reducer,\r\n    modelData: modelDataSlice.reducer,\r\n    makeData: makeDataSlice.reducer,\r\n    selectedMake: selectedMakeSlice.reducer,\r\n    isLoading: isLoadingSlice.reducer,\r\n    selectedImages: selectedImagesSlice.reducer,\r\n    portData: portDataSlice.reducer,\r\n    transmissionData: transmissionDataSlice.reducer,\r\n    fuelData: fuelDataSlice.reducer,\r\n    buyerData: buyerDataSlice.reducer,\r\n    salesData: salesDataSlice.reducer,\r\n    driveTypeData: driveTypeDataSlice.reducer,\r\n    bodyTypeData: bodyTypeDataSlice.reducer,\r\n    exteriorColorData: exteriorColorDataSlice.reducer,\r\n    jpyToUsd: jpyToUsdSlice.reducer,\r\n    usdToJpy: usdToJpySlice.reducer,\r\n    currentYear: currentYearSlice.reducer,\r\n    isAddPhotoVisible: isAddPhotoVisibleSlice.reducer,\r\n    addAnotherImages: addAnotherImagesSlice.reducer,\r\n    modalDeleteImagesVisible: modalDeleteImagesVisibleSlice.reducer,\r\n    loginName: loginNameSlice.reducer,\r\n    loginAccountType: loginAccountTypeSlice.reducer,\r\n    loginEmail: loginEmailSlice.reducer,\r\n    deleteImageVisible: deleteImageVisibleSlice.reducer,\r\n  },\r\n\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: ['chatMessagesData/setChatMessagesData'],\r\n        ignoredPaths: ['chatMessagesData.somePathToTimestamp'],\r\n      },\r\n    }),\r\n});\r\n\r\n\r\nexport const fetchCurrency = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(projectControlFirestore, 'currency', 'currency');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const jpyToUsd = snapshot.data()?.jpyToUsd || [];\r\n        const usdToJpy = snapshot.data()?.usdToJpy || [];\r\n        dispatch(setJpyToUsd(jpyToUsd));\r\n        dispatch(setUsdToJpy(usdToJpy));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchExpenseNameData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'ExpenseName'), 'ExpenseName');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const expenseNameData = snapshot.data()?.expenseName || [];\r\n        dispatch(setExpenseNameData(expenseNameData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const fetchPaidToData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'PaidTo'), 'PaidTo');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const paidToData = snapshot.data()?.paidTo || [];\r\n        dispatch(setPaidToData(paidToData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const fetchMakeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Make'), 'Make');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const makeData = snapshot.data()?.make || [];\r\n        dispatch(setMakeData(makeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPortData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Port'), 'Port');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const portData = snapshot.data()?.port || [];\r\n        dispatch(setPortData(portData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// Dispatch the fetchMakeData action when your app starts or as needed\r\n\r\nexport const fetchTransmissionData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Transmission'), 'Transmission');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const transmissionData = snapshot.data()?.transmission || [];\r\n        dispatch(setTransmissionData(transmissionData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const fetchFuelData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Fuel'), 'Fuel');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const fuelData = snapshot.data()?.fuel || [];\r\n        dispatch(setFuelData(fuelData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBuyerData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Buyer'), 'Buyer');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const buyerData = snapshot.data()?.buyer || [];\r\n        dispatch(setBuyerData(buyerData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchSalesData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Sales'), 'Sales');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const salesData = snapshot.data()?.sales || [];\r\n        dispatch(setSalesData(salesData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchDriveTypeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'DriveType'), 'DriveType');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const driveTypeData = snapshot.data()?.driveType || [];\r\n        dispatch(setDriveTypeData(driveTypeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBodyTypeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'BodyType'), 'BodyType');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const bodyTypeData = snapshot.data()?.bodyType || [];\r\n        dispatch(setBodyTypeData(bodyTypeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchExteriorColorData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'ExteriorColor'), 'ExteriorColor');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const exteriorColorData = snapshot.data()?.exteriorColor || [];\r\n        dispatch(setExteriorColorData(exteriorColorData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchYear = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY');\r\n      dispatch(setCurrentYear(formattedTime));\r\n    } catch (error) {\r\n      console.error('Error fetching time:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchCurrentDate = () => {\r\n\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY-MM-DD');\r\n      dispatch(setCurrentDate(formattedTime));\r\n    } catch (error) {\r\n      console.error('Error fetching time:', error);\r\n    }\r\n  };\r\n};\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n\r\nexport const fetchVehicleListData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const queryRef = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n        const vehicleProductData = [];\r\n        snapshot.forEach((doc) => {\r\n          vehicleProductData.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(setVehicleListData(vehicleProductData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Logs ========================================\r\n// export const fetchLogsData = () => {\r\n//   return async (dispatch) => {\r\n//     try {\r\n\r\n//       const queryRef = query(\r\n//         collection(projectControlFirestore, 'logs'),\r\n//         orderBy('timestamp', 'desc'),\r\n//         limit(10)\r\n//       );\r\n\r\n//       const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n//         const logsDatabaseData = [];\r\n//         snapshot.forEach((doc) => {\r\n//           logsDatabaseData.push({\r\n//             id: doc.id,\r\n//             ...doc.data(),\r\n//           });\r\n//         });\r\n//         dispatch(setLogsData(logsDatabaseData));\r\n//       });\r\n\r\n//       // Return the unsubscribe function to stop listening when necessary\r\n//       return unsubscribe;\r\n//     } catch (error) {\r\n//       // Handle errors here\r\n//       console.error('Error fetching data from Firebase:', error);\r\n//     }\r\n//   };\r\n// };\r\n\r\n// =============================== Logs ========================================\r\n\r\n// =============================== Freight ========================================\r\n\r\nexport const fetchMethodData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'MethodDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const methodData = snapshot.data()?.methodData || [];\r\n        dispatch(setMethodData(methodData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchInspectionIsRequiredData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionIsRequiredDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const inspectionIsRequiredData = snapshot.data()?.inspectionIsRequiredData || [];\r\n        dispatch(setInspectionIsRequiredData(inspectionIsRequiredData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchInspectionNameData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionNameDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const inspectionNameData = snapshot.data()?.inspectionNameData || [];\r\n        dispatch(setInspectionNameData(inspectionNameData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\nexport const fetchChatListData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const queryRef = query(\r\n        collection(projectExtensionFirestore, 'chats'),\r\n        orderBy('lastMessageDate', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n        const chatsData = [];\r\n        snapshot.forEach((doc) => {\r\n          chatsData.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(setChatListData(chatsData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// =============================== Chat Messages ========================================\r\n// To stop listening for updates, you can call unsubscribe()\r\n// unsubscribe();\r\n\r\nstore.dispatch(fetchCurrentDate());\r\nstore.dispatch(fetchPaidToData());\r\nstore.dispatch(fetchExpenseNameData());\r\nstore.dispatch(fetchMakeData());\r\nstore.dispatch(fetchPortData());\r\nstore.dispatch(fetchTransmissionData());\r\nstore.dispatch(fetchFuelData());\r\nstore.dispatch(fetchBuyerData());\r\nstore.dispatch(fetchSalesData());\r\nstore.dispatch(fetchDriveTypeData());\r\nstore.dispatch(fetchBodyTypeData());\r\nstore.dispatch(fetchExteriorColorData());\r\nstore.dispatch(fetchCurrency());\r\nstore.dispatch(fetchYear());\r\n\r\n\r\n\r\n// store.dispatch(fetchVehicleListData());\r\n\r\nstore.dispatch(fetchMethodData());\r\nstore.dispatch(fetchInspectionIsRequiredData());\r\nstore.dispatch(fetchInspectionNameData());\r\n\r\n// store.dispatch(fetchChatListData());\r\n\r\n\r\nexport default store","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport {\r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID\r\n} from '@env';\r\n\r\nimport {\r\n  REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID\r\n} from '@env';\r\n\r\n// Configuration for Firebase project 1\r\nconst firebaseConfigControl = {\r\n  apiKey: REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain: REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL: REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId: REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket: REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId: REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId: REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// Configuration for Firebase project 2\r\nconst firebaseConfigExtension = {\r\n  // Replace with your project 2 configuration\r\n  apiKey: REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\r\n  authDomain: REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\r\n  projectId: REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\r\n  storageBucket: REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\r\n  appId: REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\r\n  measurementId: REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID,\r\n\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Initialize Firebase for project 1\r\nexport const projectControlFirebase = initializeApp(firebaseConfigControl);\r\nexport const projectControlAuth = getAuth(projectControlFirebase);\r\nexport const projectControlFirestore = getFirestore(projectControlFirebase);\r\n\r\n// Initialize Firebase for project 2\r\nexport const projectExtensionFirebase = initializeApp(firebaseConfigExtension, 'projectExtension');\r\nexport const projectExtensionAuth = getAuth(projectExtensionFirebase);\r\nexport const projectExtensionFirestore = getFirestore(projectExtensionFirebase);\r\n","\r\n\r\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc, getDocs, orderBy, deleteDoc, startAfter, limit } from 'firebase/firestore';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { \r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nconst firebaseControlConfig = {\r\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n  };\r\n\r\n// Initialize Firebase\r\n\r\nconst app = initializeApp(firebaseControlConfig);\r\nconst analytics = getAnalytics(app);\r\nconst auth = getAuth(app);\r\nrequire('firebase/auth');\r\n// export const auth = app.auth()\r\nconst db = getFirestore (app);\r\n// export default app\r\nexport {app, db, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, getAuth, signInWithEmailAndPassword, updateDoc, getDocs, orderBy, deleteDoc, limit, startAfter };","\r\n\r\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc } from 'firebase/firestore';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { \r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nconst firebaseControlCreateUserConfig = {\r\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n  };\r\n\r\n// Initialize Firebase\r\n\r\n\r\nrequire('firebase/auth');\r\n// export const auth = app.auth()\r\nconst firebaseAppForCreateUser = initializeApp(firebaseControlCreateUserConfig, 'Secondary' );\r\nconst authForCreateUser = getAuth(firebaseAppForCreateUser);\r\n// export default app\r\nexport {authForCreateUser};","// extracted by mini-css-extract-plugin\nexport default {};","var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 44707,\n\t\"./bs.js\": 44707,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 2553,\n\t\"./es-mx.js\": 2553,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"162\":\"da88e0a0\",\"245\":\"704124dc\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/samplecontrolhub/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [389], () => (__webpack_require__(19386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","_Dimensions$get","Dimensions","get","width","height","LoginPage","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","_useState5","_useState6","password","setPassword","_React$useState","React","_React$useState2","show","setShow","_React$useState3","_React$useState4","errorShow","setErrorShow","_React$useState5","_React$useState6","_React$useState7","_React$useState8","errorTitle","setErrorTitle","_React$useState9","_React$useState10","errorMessage","setErrorMessage","logo","require","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","isDisabled","setIsDisabled","navigate","useNavigate","useEffect","auth","onAuthStateChanged","user","ErrorLoginShow","_jsx","Box","w","alignItems","children","PresenceTransition","visible","initial","opacity","scale","animate","transition","duration","Alert","maxW","status","_jsxs","VStack","space","flexShrink","HStack","justifyContent","Icon","Text","fontSize","fontWeight","_dark","color","pl","_text","updateFieldData","_ref","_asyncToGenerator","documentId","fieldName","newValue","userRef","doc","db","updateDoc","_defineProperty","error","console","_x","_x2","_x3","apply","arguments","handleSignIn","setTimeout","signInWithEmailAndPassword","trim","then","re","catch","errorCode","message","log","length","NativeBaseProvider","bgColor","h","Center","flex","px","Image","source","uri","resizeMode","alt","style","Stack","Input","base","md","sm","value","onSubmitEditing","onChangeText","text","InputLeftElement","as","MaterialIcons","name","size","ml","placeholder","placeholderTextColor","type","InputRightElement","Pressable","onPress","mr","Button","_hover","_pressed","_focus","borderWidth","borderColor","disabled","Spinner","StyleSheet","create","container","paddingHorizontal","input","borderRadius","marginBottom","loginButton","backgroundColor","paddingVertical","loginButtonText","textAlign","Loading","loadingContainer","props","LazyComponent","lazy","importFunc","Suspense","fallback","_objectSpread","csvData","setCsvData","data","handleFileChange","event","file","target","files","reader","FileReader","onload","codes","Uint8Array","result","unicodeString","Encoding","Papa","header","dynamicTyping","complete","_complete","results","forEach","_ref2","row","response","fetch","method","headers","body","JSON","stringify","documentData","ok","readAsArrayBuffer","sendData","_ref5","_ref6","_x4","_ref7","action_cd","stock_id","reference_no","m_as_maker_id","m_as_model_id","grade_name","model_code","frame_number","model_number","devision_number","registration_year","registration_month","manufacture_year","manufacture_month","m_as_bodytype_id","m_bodystyle_sub_id","displacement","mileage_odometer_cd","mileage","m_as_fueltype_id","m_as_transmission_id","m_as_steering_id","m_as_drivetype_id","number_of_passengers","door_cnt","exterior_color_cd","interior_color_cd","option_cds","condition_cd","accident_flg","sales_person_charge_id","storage_yard_cd","site_sales_pr_text","fob_ask_flg","fob_regular_price","fob_price","display_site_cds","tcv_flg","m_tcv_maker_id","m_tcv_model_id","memo","stock_no","stock_price","car_condition_file","responseData","json","errorResponse","callApiR02","_ref8","json_data","msg","exec_time","parse","ret_text","replace","ret","_x5","_x6","_x7","jsonData","_ref9","View","accept","onChange","index","FlatList","keyExtractor","item","toString","renderItem","_ref10","columnName","createNativeStackNavigator","firestore","getFirestore","getEmailOfCurrentUser","currentUser","Top","navigation","setDrawerVisible","setType","dispatch","useSelector","state","loginAccountType","createDrawerNavigator","useDispatch","handleDocumentChange","snapshot","exists","active","signOut","unsubscribe","_auth$currentUser","userId","onSnapshot","subscribeToFieldChange","currentUserEmail","getFieldValueByEmail","accountDocRef","docSnapshot","fieldType","setLoginAccountType","setLoginName","Math","floor","random","document","createElement","textContent","head","append","Routes","Route","path","element","Navigate","to","ParseCSV","ChatMessages","LazyScreen","Checkpoint","loginEmail","loginName","delay","App","initializing","setInitializing","setUser","Provider","store","Router","selectedScreen","AccountList","_searchInput$current","setEmailError","logo2","_useState11","_useState12","_useState13","_useState14","setName","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","isSelectedLogs","_useState21","_useState22","isSelectedAddAccount","_useState23","_useState24","isSelectedAccountList","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","setAccountTypeSpAd","_useState31","_useState32","setAccountTypeDevAd","_useState33","_useState34","setAccountTypeAd","_useState35","_useState36","setAccountType3","_useState37","_useState38","setAccountType4","_useState39","_useState40","inputName","setInputName","_useState41","_useState42","_useState43","_useState44","inputEmail","setInputEmail","_useState45","_useState46","inputPassword","setInputPassword","_useState47","_useState48","setInputConfirmPassword","_useState49","_useState50","typeOfAccount","setTypeOfAccount","_useState51","_useState52","setTypeOfAccountDisplay","showSuccessModal","setShowSuccessModal","showDisableModal","setShowDisableModal","showEnableModal","setShowEnableModal","_React$useState11","_React$useState12","showDeleteModal","setShowDeleteModal","_React$useState13","_React$useState14","_useState53","useRef","_useState54","selectedItem","setSelectedItem","_useState55","_useState56","modalVisible","setModalVisible","_useState57","_useState58","_useState59","_useState60","setTime","_useState61","_useState62","selectedType","setSelectedType","_useState63","_useState64","selectedTypeDisplay","setSelectedTypeDisplay","_useState65","_useState66","selectedItemType","setSelectedItemType","_useState67","_useState68","isEmailDuplicate","setIsEmailDuplicate","_useState69","_useState70","authEmail","setAuthEmail","_useState71","_useState72","authPassword","setAuthPassword","_useState73","_useState74","isYesLoading","setIsYesLoading","_useState75","_useState76","isSaveLoading","setIsSaveLoading","inputEmailRef","inputNameRef","inputPassRef","_useState77","_useState78","page","setPage","optionsPerPage","_useState79","_useState80","itemsPerPage","setItemsPerPage","_useState81","_useState82","setData","_useState83","_useState84","searchQuery","setSearchQuery","_useState85","_useState86","filteredData","setFilteredData","_useState87","_useState88","_useState89","_useState90","ref0","ref1","ref2","ref3","searchInput","searchInputValue","current","_useState91","_useState92","pageSize","_useState93","_useState94","lastVisible","setLastVisible","_useState95","_useState96","firstVisible","setFirstVisible","_useState97","_useState98","searchText","_useState99","_useState100","currentPage","setCurrentPage","q","query","collection","orderBy","limit","documents","logsDatabaseData","push","setAccountListData","docs","fetchNextData","collectionGroup","projectControlFirestore","startAfter","getDocs","updateState","setLoadingModalVisible","where","toLowerCase","fetchPreviousData","endBefore","limitToLast","fetchFirstPage","accountListDatabaseData","_ref3","pageClicked","empty","firstPageDocuments","_ref4","searchData","handleToggleAccountTypeAd","useCallback","handleToggleAccountTypeDevAd","handleToggleAccountType3","handleToggleAccountType4","handleToggleAccountTypeSpAd","fetchData","updatedData","listenForNameChange","_auth$currentUser2","getEmailFromDocument","collectionPath","documentRef","documentSnapshot","getDoc","pass","accountDocSnapshot","validateEmail","test","handleEdit","find","typeDisplay","setNativeProps","handleInputEmailChange","debounce","handleInputNameChange","handleInputPassChange","handleCloseModal","handleCloseDisableModal","handleCloseDeleteModal","handleCloseEnableModal","addLogToCollection","logsCollectionRef","addDoc","handleEnable","_ref11","itemDocRef","datetime","axios","formattedTime","moment","format","year","month","monthWithDay","date","day","time","timeWithMinutesSeconds","applySearchFilter","logData","keywords","timestamp","colorScheme","deleteDocument","_ref12","customId","deleteDoc","_x8","_x9","handleDelete","_ref13","deleteUser","_x10","handleDisable","_ref14","_searchInput$current2","_x11","filter","includes","handleSave","_ref15","isPasswordLengthLabel","updatedFields","lastUpdatedDate","_searchInput$current3","updatePassword","userDocRef","dateOfCreation","setDoc","oldDocumentRef","newDocumentRef","createUserWithEmailAndPassword","updatedItem","fetchSignInMethodsForEmail","_x12","_ref16","filtered","useMemo","paginatedData","startIndex","endIndex","slice","handleSearch","min","styles","image","flexDirection","position","top","zIndex","borderBottomWidth","borderBottomColor","SideDrawer","marginTop","paddingLeft","FastImage","priority","high","stretch","marginLeft","QRCodeScanner","_ref17","handleSignOut","_useState101","_useState102","showNamePopover","setShowNamePopover","showPopover","Flex","direction","Popover","isOpen","trigger","triggerProps","marginRight","MaterialCommunityIcons","Ionicons","onClose","placement","trapFocus","Content","Body","leftIcon","flexGrow","minHeight","ref","ScrollView","contentContainerStyle","DataTable","margin","overflow","display","padding","paddingBottom","handleOpenDisableModal","handleOpenEnableModal","handleOpenDeleteModal","Pagination","numberOfPages","ceil","onPageChange","label","showFastPagination","optionsLabel","Modal","CloseButton","Header","defaultValue","bold","FontAwesome","Footer","borderTopWidth","maxWidth","variant","AddAccount","show2","setShow2","typeOfAccountDisplay","showModal","setShowModal","inputConfirmPassword","passwordMatch","setPasswordMatch","passwordMatchLabel","setPasswordMatchLabel","passwordLengthLabel","setPasswordLengthLabel","isNameEmpty","setIsNameEmpty","setIsIntervalActive","closeModal","handleAddAccount","_inputEmail$current","authForCreateUser","userCredential","_inputName$current","_inputName$current2","_inputEmail$current2","_inputName$current3","_inputPassword$curren","customID","docRef","handleClear","handlePasswordStatus","_inputPassword$curren3","_inputConfirmPassword2","inputPasswordValue","inputConfirmPasswordValue","inputPasswordValueLength","_inputEmail$current3","emailValue","handleEmailSubmit","_inputName$current4","AntDesign","_inputPassword$curren2","_inputConfirmPassword","wrap","flexDir","globalSupplyChainCostsData","globalSelectedExpenseName","globalSupplyChainCostsAmount","globalSelectedPaidTo","globalModelDataVariable","globalRegYearDataVariable","globalSelectedImages","globalVehicleFolderName","globalReferenceNumber","globalSPCSelectedDate","globalFobPrice","UpdateSuccessModal","bodyText","headerText","isUpdateSuccessModalOpen","borderLeftWidth","borderLeftColor","UploadSuccessModal","isSuccessModalOpen","LoadingModal","loadingModalVisible","bottom","left","right","selectable","SelectExpenseName","expenseNameIsError","selectExpenseNameRef","selectResetKey","expenseNameData","selectedExpenseName","nanoid","Select","selectedValue","onValueChange","setSelectedExpenseName","accessibilityLabel","_selectedItem","bg","endIcon","CheckIcon","Item","SelectPaidTo","paidToIsError","paidToData","selectedPaidTo","setSelectedPaidTo","ModalCalendar","selectedDate","setSelectedDate","modalCalendarVisible","setModalCalendarVisible","handleModalCalendarOpen","handleModalCalendarClose","_Fragment","onFocus","useRNModal","Calendar","onDayPress","dateString","markedDates","selected","disableTouchEvent","selectedDotColor","renderArrow","enableSwipeMonths","initialDate","showSixWeeks","SupplyChainsCosts","handleAddExpenseNameTextChange","textAreaAddExpenseName","inputExpenseAmount","handleInputExpenseAmountChange","handleAddPaidToTextChange","inputCarNotes","supplyChainsCostsData","currentDate","supplyChainsCostsModalVisible","setSupplyChainsCostsModalVisible","clearModalVisible","setClearModalVisible","inputAmountIsError","setInputAmountIsError","setExpenseNameIsError","setPaidToIsError","totalAmount","setTotalAmount","setSelectResetKey","handleModalSupplyChainsCostsClose","_inputExpenseAmount$c","clear","handleClearModalClose","formattedTotalAmount","expenseData","parseFloat","amount","reduce","accumulator","currentValue","toLocaleString","_inputExpenseAmount$c2","_inputExpenseAmount$c3","_inputExpenseAmount$c4","_inputExpenseAmount$c5","existingIndex","findIndex","_inputExpenseAmount$c6","cloneDeep","expenseName","paidName","setSupplyChainsCostsData","_inputExpenseAmount$c7","newData","concat","_toConsumableArray","handleEditPress","handleFirstModalClose","handleFirstModalOpen","alignSelf","SupplyChainsCostsSortAndAddModal","docName","handleAddTextChange","textAreaAdd","title","dataName","databaseInit","projectExtensionFirestore","isHovered","isFocused","isPressed","itemIndex","splice","handleDeleteItem","projectControlAuth","storage","getStorage","projectExtensionFirebase","ClearImagesModal","modalDeleteImagesVisible","setModalDeleteImagesVisible","handleClearImages","selectedImages","isAddPhotoVisible","handleModalDeleteClose","cursor","ImageUploader","dragSortableViewRef","handleClearImagesExtra","deleteImageVisible","boolean","addAnotherImages","scrollEnabled","setscrollEnabled","isEnterEdit","setisEnterEdit","widthState","setWidthState","setIsCursorLoading","modalImageUri","setModalImageUri","imageModalVisible","setImageModalVisible","isFileSizeLimitModal","setIsFileSizeLimitModal","handleImagePress","dropdown","icon","placeholderStyle","selectedTextStyle","iconStyle","inputSearchStyle","paddingTop","txt","lineHeight","sort","item_children","item_delete_icon","item_icon","handleImageAddToSelection","setDeleteImageVisible","options","mediaType","maxHeight","selectionLimit","storageOptions","skipBackup","launchImageLibrary","didCancel","assets","newImages","promises","asset","res","blob","some","Promise","all","limitedImages","setSelectedImages","setAddAnotherImages","reloadData","updatedSelectedImages","handleWidthChange","window","addEventListener","removeEventListener","normal","contain","handleDeleteImagePress","Entypo","getImagesRenderItem","handleImageSelection","uniqueImages","self","a","filteredImages","imageOrder","b","indexOf","setIsAddPhotoVisible","DragSortableView","dataSource","delayLongPress","parentWidth","childrenWidth","childrenHeight","marginChildrenTop","marginChildrenBottom","marginChildrenLeft","marginChildrenRight","onDragStart","onDragEnd","onDataChange","onClickItem","sortable","italic","alignContent","NativeImage","SuccessFailModal","isSuccessOpen","isFailedOpen","handleFailModalClose","inputStockIDNumber","handleSuccessModalClose","okSuccessButtonRef","okFailButtonRef","initialFocusRef","finalFocusRef","StockIDAndMakeAndModel","selectStockStatus","handleSetBordersWhite","inputFobUsd","handleClearIfError","monthNumbers","steeringData","selectPort","selectSales","selectBuyer","inputRefNum","inputChassis","inputModelCode","inputEngineCode","inputEngineDis","selectSteering","inputMileage","selectTransmission","selectExteriorColor","inputNumOfSeats","inputDoors","inputPurchasedPrice","selectFuel","inputDimensionLength","inputDimensionWidth","inputDimensionHeight","inputDimensionCubicMeters","selectDriveType","inputWeight","selectBodyType","inputCarName","inputCarDesc","inputFobJpy","selectRegYear","selectRegMonth","setRefNumFromSelects","stockIDNumError","selectMakeForModelRef","textAreaAddModel","selectMakeForAddModelRef","handleAddMakeTextChange","textAreaAddMake","makeError","modelError","selectMakeBoxRef","selectMakeRef","selectModelRef","selectModelBoxRef","setCarNameFromSelects","setCarNameFromSelectsModel","inputCarMemo","purchasedPriceError","handleInputPurchasedPriceChange","makeData","stockStatusData","portData","transmissionData","fuelData","buyerData","salesData","driveTypeData","bodyTypeData","exteriorColorData","jpyToUsd","modelData","setModelData","isSearchLoading","setIsSearchLoading","setIsSuccessOpen","setIsFailedOpen","getImages","_ref18","folderName","imageRefs","listAll","urls","items","_ref19","itemRef","getDownloadURL","fileName","parseInt","handleSearchPress","_inputStockIDNumber$c","_inputStockIDNumber$c2","querySnapshot","_ref21","_fetchDataAndSelectIndex","collectionRef","make","selectIndex","modelVariable","reset","modelsDataFromFirebase","model","fetchDataAndSelectIndex","stockStatus","regYear","regMonth","portID","salesID","buyerID","referenceNumber","chassisNumber","modelCode","engineCode","engineDisplacement","steering","transmission","exteriorColor","numberOfSeats","doors","purchasedPrice","fuel","dimensionLength","dimensionWidth","dimensionHeight","dimensionCubicMeters","driveType","weight","bodyType","carName","carDescription","fobPrice","numericValue","startsWith","truncatedValue","formattedValue","multipliedValue","isNaN","formattedMultipliedValue","toFixed","handleInputFobJpyChange","undefined","notes","featuresState","SafetySystemAnBrSy","SafetySystemDrAi","SafetySystemPaAi","SafetySystemSiAi","ComfortAiCoFr","ComfortAiCoRe","ComfortAMFMRa","ComfortAMFMSt","ComfortCDPl","ComfortCDCh","ComfortCrSpCo","ComfortDiSp","ComfortDVDPl","ComfortHDD","ComfortNaSyGPS","ComfortPoSt","ComfortPrAuSy","ComfortReKeSy","ComfortTiStWh","InteriorLeSe","InteriorPoDoLo","InteriorPoMi","InteriorPoSe","InteriorPoWi","InteriorReWiDe","InteriorReWiWi","InteriorThRoSe","InteriorTiGl","ExteriorAlWh","ExteriorPoSlDo","ExteriorSuRo","SellingPointsCuWh","SellingPointsFuLo","SellingPointsMaHiAv","SellingPointsBrNeTi","SellingPointsNoAcHi","SellingPointsNoSmPrOw","SellingPointsOnOwHi","SellingPointsPeRaTi","SellingPointsReBo","SellingPointsTuEn","SellingPointsUpAuSy","resetKey","stockStatusVariable","makeVariable","regYearVariable","regMonthVariable","portVariable","port","salesVariable","sales","buyerVariable","buyer","referenceNumberVariable","stockID","steeringVariable","transmissionVariable","exteriorColorVariable","fuelVariable","driveTypeVariable","bodyTypeVariable","handleModelChange","handleMakeChange","_ref22","handleInputStockIDNumberChange","handleModelOnFocus","isLoadingText","keyboardType","SortAndAddModal","SelectDropdown","buttonStyle","buttonTextStyle","dropdownStyle","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","rowStyle","rowTextStyle","onSelect","defaultButtonText","buttonTextAfterSelection","renderDropdownIcon","isOpened","rowTextForSelection","searchPlaceHolder","searchInputStyle","disableAutoScroll","search","ModelSortAndAddModal","_ref23","modalSortOpen","setModalSortOpen","modalAddOpen","setModalAddOpen","modalAddSuccess","setModalAddSuccess","modalSave","setModalSave","modalSaveLoading","setModalSaveLoading","modalData","setModalData","modalIsLoading","setModalIsLoading","handleDeleteItemPress","prevData","_ref24","_modalDocSnap$data","modalDocRef","modalDocSnap","nameVariable","handleModalSaveClose","handleSortModalOpen","handleSortModalClose","handleModalAddOpen","handleModalAddClose","_textAreaAdd$current","handleModalAddSuccessClose","handleModalAddSuccessOpen","handleModalSaveOpen","handleAddSubmit","_ref28","_textAreaAdd$current2","dataArray","split","modalCollectionRef","arrayUnion","merge","TouchableOpacity","focusable","DraggableFlatList","_ref29","drag","onPressIn","_ref30","TextArea","multiline","totalLines","_ref31","_ref32","_modalDocSnap$data2","_textAreaAdd$current3","_ref36","_textAreaAdd$current4","_ref37","_ref38","PSBSortAndAddModal","_ref39","textAreaAddCode","handleAddCodeTextChange","_ref40","_modalDocSnap$data3","_ref44","_textAreaAdd$current5","_textAreaAddCode$curr","dataCode","dataCodeArray","dataToUpdate","updateObject","_ref45","_ref46","_ref47","modalAddModel","setModalAddModel","_useState103","_useState104","modalSaveModel","setModalSaveModel","_useState105","_useState106","modalModel","setModalModel","_useState107","_useState108","modalAddModelSuccess","setModalAddModelSuccess","_useState109","_useState110","keySelectMakeForModel","setKeySelectMakeForModel","_useState111","_useState112","keySelectMakeForAddModel","setKeySelectMakeForAddModel","_useState113","_useState114","modelSortData","setModelSortData","_useState115","_useState116","isAddModelDisabled","setIsAddModelDisabled","_useState117","_useState118","modalSaveModelLoading","setModalSaveModelLoading","_useState119","_useState120","_useState121","_useState122","_useState123","_useState124","_useState125","_useState126","_useState127","_useState128","fetchModelSortData","_ref48","_selectMakeForModelRe","_selectMakeForModelRe2","_modelSortDocSnap$dat","modelSortDocRef","modelSortDocSnap","handleDeleteModelPress","prevModelData","_ref49","handleSaveModel","_selectMakeForModelRe3","_selectMakeForModelRe4","_selectMakeForModelRe5","_selectMakeForModelRe6","_selectMakeForModelRe7","handleModalSaveModelClose","handleMakeForModelChange","_selectMakeForAddMode","makeForAddModelVariable","handleMakeForAddModelChange","handleModalModelOpen","handleModalModelClose","prevKey","handleModalAddModelOpen","handleModalAddModelClose","handleModalAddModelSuccessOpen","handleModalAddModelSuccessClose","handleModalSaveModelOpen","_selectMakeForModelRe8","handleAddModelSubmit","_ref51","_textAreaAddModel$cur4","_selectMakeForAddMode2","_selectMakeForAddMode3","_selectMakeForAddMode4","makeCollectionRef","makeDocRef","_ref52","_ref53","_textAreaAddModel$cur","_textAreaAddModel$cur2","_textAreaAddModel$cur3","newText","toUpperCase","CheckBoxButton","_ref54","variable","_useState129","_useState130","checked","setChecked","noOfLines","AddVehicle","screenWidth","_useState131","_useState132","_useState133","_useState134","_useState135","_useState136","_useState137","_useState138","_useState139","_useState140","inputRegYear","inputRegMonth","inputFuel","inputDriveType","textAreaAddTransmission","textAreaAddExteriorColor","textAreaAddFuel","textAreaAddPort","textAreaAddPortCode","textAreaAddSales","textAreaAddBuyer","textAreaAddSalesCode","textAreaAddBuyerCode","textAreaAddDriveType","textAreaAddBodyType","textAreaAddPaidTo","currentYear","years","Array","from","_","_useState141","_useState142","isNoFeaturesSelected","setIsNoFeaturesSelected","_useState143","_useState144","carNameError","setCarNameError","_useState145","_useState146","setMakeError","_useState147","_useState148","setModelError","_useState149","_useState150","regYearError","setRegYearError","_useState151","_useState152","regMonthError","setRegMonthError","_useState153","_useState154","refNumError","setRefNumError","_useState155","_useState156","setStockIDNumError","_useState157","_useState158","chassisError","setChassisError","_useState159","_useState160","modelCodeError","setModelCodeError","_useState161","_useState162","engineDisError","setEngineDisError","_useState163","_useState164","steeringError","setSteeringError","_useState165","_useState166","mileageError","setMileageError","_useState167","_useState168","transmissionError","setTransmissionError","_useState169","_useState170","exteriorColoError","setExteriorColoError","_useState171","_useState172","numOfSeatsError","setNumOfSeatsError","_useState173","_useState174","doorsError","setDoorsError","_useState175","_useState176","setPurchasedPriceError","_useState177","_useState178","fuelError","setFuelError","_useState179","_useState180","portError","setPortError","_useState181","_useState182","buyerError","setBuyerError","_useState183","_useState184","salesError","setSalesError","_useState185","_useState186","dimensionLengthError","setDimensionLengthError","_useState187","_useState188","dimensionWidthError","setDimensionWidthError","_useState189","_useState190","dimensionHeightError","setDimensionHeightError","_useState191","_useState192","driveTypeError","setDriveTypeError","_useState193","_useState194","weightError","setWeightError","_useState195","_useState196","bodyTypeError","setBodyTypeError","_useState197","_useState198","stockStatusError","setStockStatusError","inputVehicleBoxRef","selectRegYearBoxRef","selectRegMonthBoxRef","selectSteeringBoxRef","selectTransmissionBoxRef","selectExteriorColorBoxRef","selectFuelBoxRef","selectPortBoxRef","selectBuyerBoxRef","selectSalesBoxRef","selectDriveTypeBoxRef","selectBodyTypeBoxRef","selectStockStatusBoxRef","property","_ref55","_inputCarName$current","_inputCarDesc$current","_inputFobJpy$current","_inputFobUsd$current","_inputRegYear$current","_inputRegMonth$curren","_inputRefNum$current","_inputChassis$current","_inputModelCode$curre","_inputEngineCode$curr","_inputEngineDis$curre","_inputMileage$current","_inputNumOfSeats$curr","_inputDoors$current","_inputPurchasedPrice$","_inputFuel$current","_inputDimensionLength","_inputDimensionWidth$","_inputDimensionHeight","_inputDriveType$curre","_inputWeight$current","handleClearToggleButton","clearSelect","uploadImages","storageRef","imageNamesToKeep","listResult","deleteObject","_ref57","imagename","img","getContext","src","URL","createObjectURL","canvas","ctx","newWidth","newHeight","drawImage","font","fillStyle","imageSmoothingEnabled","lineWidth","watermarkText","textWidth","measureText","xShadow","yShadow","shadowBlur","fillText","x","y","watermarkedImageBlob","toBlob","imageRef","uploadBytes","contentType","handleUpload","_inputStockIDNumber$c3","_inputRefNum$current2","_inputChassis$current2","_inputModelCode$curre2","_inputEngineDis$curre2","_inputEngineDis$curre3","_inputMileage$current2","_inputMileage$current3","_inputNumOfSeats$curr2","_inputDoors$current2","_inputNumOfSeats$curr3","_inputDoors$current3","_inputPurchasedPrice$2","_inputPurchasedPrice$3","_inputDimensionLength2","_inputDimensionWidth$2","_inputDimensionHeight2","_inputDimensionCubicM","_inputDimensionLength3","_inputDimensionWidth$3","_inputDimensionHeight3","_inputDimensionCubicM2","_inputWeight$current2","_inputWeight$current3","_inputCarName$current2","selectIsEmpty","inputIsEmpty","allValuesAreFalse","values","every","_inputCarName$current3","_inputWeight$current4","_inputWeight$current5","_inputDimensionHeight4","_inputDimensionHeight5","_inputDimensionWidth$4","_inputDimensionWidth$5","_inputDimensionLength4","_inputDimensionLength5","_inputDoors$current4","_inputDoors$current5","_inputPurchasedPrice$4","_inputPurchasedPrice$5","_inputNumOfSeats$curr4","_inputMileage$current4","_inputMileage$current5","_inputEngineDis$curre4","_inputEngineDis$curre5","_inputModelCode$curre3","_inputChassis$current3","_inputRefNum$current3","_inputStockIDNumber$c4","scrollIntoView","behavior","_inputStockIDNumber$c5","_inputRefNum$current4","_inputStockIDNumber$c6","_inputRefNum$current5","_inputCarName$current4","_inputStockIDNumber$c7","_inputChassis$current4","_inputFobJpy$current2","_inputStockIDNumber$c8","_inputRefNum$current6","_inputChassis$current5","_inputModelCode$curre4","_inputEngineCode$curr2","_inputNumOfSeats$curr5","_inputDoors$current6","_inputCarName$current5","_inputCarDesc$current2","_inputCarNotes$curren","_inputCarMemo$current","stockCollectionRef","docQuery","docSnap","fobHistoryValue","keywordsData","fobHistoryData","changedBy","inputFobValue","imageCount","fobHistory","photos","comfort","safetySystem","interior","exterior","sellingPoints","_inputCarName$current6","_inputRefNum$current7","_inputCarName$current7","_inputRefNum$current8","setIsUpdateSuccessModalOpen","dataDoc","updates","updatedDate","dateAdded","dataWithDateAdded","_inputCarName$current8","_inputRefNum$current9","_inputCarName$current9","_inputRefNum$current10","setIsSuccessModalOpen","_ref62","_x13","_inputStockIDNumber$c9","_inputCarName$current10","_inputCarDesc$current3","_inputFobJpy$current3","_inputFobUsd$current2","_inputRegYear$current2","_inputRegMonth$curren2","_inputRefNum$current11","_inputChassis$current6","_inputModelCode$curre5","_inputEngineCode$curr3","_inputEngineDis$curre6","_inputMileage$current6","_inputNumOfSeats$curr6","_inputDoors$current7","_inputPurchasedPrice$6","_inputFuel$current2","_inputDimensionLength6","_inputDimensionWidth$6","_inputDimensionHeight6","_inputDriveType$curre2","_inputWeight$current6","_inputCarNotes$curren2","_inputCarMemo$current2","_inputFobJpy$current4","calculateCubicMeters","_inputDimensionLength7","_inputDimensionLength8","_inputDimensionWidth$7","_inputDimensionWidth$8","_inputDimensionHeight7","_inputDimensionHeight8","resultFormatted","_inputStockIDNumber$c10","_useState199","_useState200","handleUpdateSuccessModalClose","_ref66","_useState211","_useState212","_textAreaAddMake$curr","_textAreaAddMake$curr2","_textAreaAddMake$curr3","Number","outlineStyle","_textAreaAddPort$curr","textAreaValue","line","charAt","join","_textAreaAddPortCode$","_textAreaAddPortCode$2","_textAreaAddPortCode$3","_textAreaAddSales$cur","_textAreaAddSalesCode","_textAreaAddSalesCode2","_textAreaAddSalesCode3","_textAreaAddBuyer$cur","_inputRefNum$current12","_inputRefNum$current13","_inputRefNum$current14","_inputChassis$current7","_inputChassis$current8","_inputChassis$current9","_inputModelCode$curre6","_inputModelCode$curre7","_inputModelCode$curre8","_inputEngineCode$curr4","_inputEngineCode$curr5","_inputEngineCode$curr6","InputGroup","InputRightAddon","_textAreaAddTransmiss","_textAreaAddExteriorC","_textAreaAddFuel$curr","dotIndex","editable","_textAreaAddDriveType","_textAreaAddBodyType$","borderTopColor","_textAreaAddExpenseNa","_textAreaAddPaidTo$cu","_useState203","_useState204","featuresModalVisible","setFeaturesModalVisible","_useState205","_useState206","featuresClearModalVisible","_useState207","_useState208","setKey","handleModalSelectFeaturesClose","pressDuration","InputLeftAddon","_ref63","_useState201","_useState202","modalClearVisible","setModalClearVisible","handleModalClearOpen","handleModalClearClose","_ref64","_useState209","_useState210","modalUploadVisible","setModalUploadVisible","handleModalUploadClose","globalLastVisible","globalMessagesLastVisible","globalSearchText","globalCustomerId","globalImageUrl","globalCustomerFirstName","globalCustomerLastName","globalAdditionalPriceArray","globalMessageTemplateSelectedTitle","formattedIssuingDate","formattedDueDate","transactionModalTitle","transactionModalContentValue","ip","ipCountry","globalInvoiceVariable","carData","selectedCurrencyExchange","cfs","placeOfDelivery","departureCountry","departurePort","salesPerson","discharge","country","consignee","sameAsBuyer","address","contactNumber","fax","notifyParty","sameAsConsignee","paymentDetails","incoterms","inspectionIsChecked","inspectionName","warrantyIsCheck","warrantyAmount","freightPrice","insurancePrice","inspectionPrice","additionalName","additionalPrice","bankInformations","dueDate","issuingDate","bankAccount","paymentTerms","salesAgreement","mobileViewBreakpoint","globalSelectedPDFUrl","globalSelectedFileType","encryptData","secretKey","AES","encrypt","decryptData","ciphertext","decrypt","enc","Utf8","TimelineStatus","selectedChatData","stepIndicator","Tooltip","tintColor","statusData","HeaderButton","isActive","headerCount","activeStyle","setIsHovered","onHoverIn","onHoverOut","marginVertical","FilterButton","iconActive","iconNotActive","SkeletonChatListLayout","subIndex","DeleteMessageTemplateYesNo","handleDeleteMessageTemplateClose","deleteMessageTemplateVisible","selectedTitle","isDeleteLoading","setIsDeleteLoading","handleClose","deleteMessageTemplate","titleToDelete","updatedTemplates","messageTemplate","template","Group","MessageTemplateItem","setOriginalTitle","titleInputRef","addVisible","valueInputRef","setAddVisible","textInputRef","setPopoverOpen","isTemplateItemHovered","setIsTemplateItemHovered","isTemplateMenuHovered","setIsTemplateMenuHovered","isTemplateEditHovered","setIsTemplateEditHovered","isTemplateDeleteHovered","setIsTemplateDeleteHovered","templateMenuOpen","setTemplateMenuOpen","setIsAddVisible","setMessageTextInputValue","numberOfLines","ellipsizeMode","focus","onEditPress","setDeleteMessageTemplateVisible","MessageTemplate","isTemplateHovered","setIsTemplateHovered","isAddHovered","setIsAddHovered","popoverOpen","setSearchText","isCancelHovered","setIsCancelHovered","isSaveHovered","setIsSaveHovered","originalTitle","saveLoading","setSaveLoading","templateData","setTemplateData","searchInputRef","saveMessageTemplate","_titleInputRef$curren","_valueInputRef$curren","messageTemplates","newTitle","handleCancelPressed","arrayFieldData","titleA","titleB","pressed","Arrow","TextInput","underlineColorAndroid","marginHorizontal","animating","textDecorationLine","borderBottomLeftRadius","FileDisplay","onRemove","cover","MessageTextInput","handleSendMessage","inputHeight","setInputHeight","messageTextInputValue","updatedHeight","max","scrollHeight","onContentSizeChange","_event$nativeEvent$co","nativeEvent","contentSize","onKeyPress","key","shiftKey","preventDefault","ChatInputText","activeChatId","isSendHovered","setIsSendHovered","selectedFile","setSelectedFile","selectedFilePreview","setSelectedFilePreview","selectedImage","setSelectedImage","imageUri","setImageUri","fileUri","setFileUri","setFileName","isSendImageHovered","setIsSendImageHovered","isSendAttachmentHovered","setIsSendAttachmentHovered","sendIsLoading","setSendIsLoading","removeImage","removeFile","selectFile","maxFileSize","Platform","OS","reject","onchange","alert","onerror","readAsDataURL","click","fileSize","selectedImageUri","selectImage","dataUrl","addFileMessage","_textInputRef$current","formattedTimeForFile","inputValue","fileUrl","fileRef","uploadResult","sender","url","lastMessageSender","lastMessage","lastMessageDate","customerRead","read","readBy","addImageMessage","_textInputRef$current2","imageUrl","resizedImage","File","lastModified","Date","now","addMessage","_ref20","CancelledView","ChatListItem","onPressNewTab","messageUnread","formattedDate","chatListData","setImageUrl","textFirst","setTextFirst","textLast","setTextLast","isUnreadHovered","setIsUnreadHovered","isOpenNewTabHovered","setIsOpenNewTabHovered","setCustomerData","vehicle","updateChatToUnread","setActiveChatId","setChatMessagesData","setSelectedChatData","carId","docId","participants","customer","loadingCondition","chatStepIconOn","chatStepIconOff","borderRightColor","borderRightWidth","setCarImageUrl","isCancelled","paddingRight","invoiceNumber","openDelay","ChatList","unreadButtonValue","activeButtonValue","selectedCustomerData","chatListLastVisible","loadMoreLoading","noMoreData","chatId","useParams","updateChatToRead","decodedChatId","decodeURIComponent","parts","stockIdPart","emailPart","_selectedChatData$par","docRefVehicle","unsubscribeVehicle","setSelectedVehicleData","setSelectedCustomerData","setChatMessageBoxLoading","messagesRef","messagesQuery","unsubscribeDoc","dataWithId","invoiceDocRef","unsubscribeInvoice","invoiceDocSnapshot","invoiceDataWithId","setInvoiceData","unsubscribeMessages","messages","fetchChatMessages","decryptedChatId","handleChatPress","_ref25","customerId","encryptedChatId","encodedChatId","encodeURIComponent","handleChatPressNewTab","_ref26","fullPath","location","origin","pathname","open","_ref27","formattedTimestamp","givenDate","currentFormattedDate","getFullYear","getMonth","getDate","getTime","startOfWeek","setDate","getDay","setHours","toLocaleDateString","weekday","formatDate","initialNumToRender","maxToRenderPerBatch","windowSize","onEndReachedThreshold","removeClippedSubviews","ListFooterComponent","onEndReached","nextQuery","setLoadMoreLoading","setNoMoreData","chatsData","setChatListData","SearchChat","clearVisible","setClearVisible","_searchInputRef$curre","_objectDestructuringEmpty","searchValue","setChatListSearchText","_searchInputRef$curre2","hovered","ModalAddBank","modalAddBankVisible","setModalAddBankVisible","setCancelHovered","setAddHovered","handleModalAddBankClose","bankNameRef","branchNameRef","swiftcodeRef","addressRef","accountHolderRef","accountNumberRef","addBankAccount","_bankNameRef$current","_branchNameRef$curren","_swiftcodeRef$current","_addressRef$current","_accountHolderRef$cur","_accountNumberRef$cur","bankNameValue","elementToAdd","bankName","branchName","swiftCode","accountHolder","accountNumberValue","BankInformation","invoiceData","selectedDueDate","setSelectedDueDate","bankAccountsData","setBankAccountsData","selectedBank","setSelectedBank","paymentTermsRef","_paymentTermsRef$curr","dayOfWeek","adjustedDate","toISOString","bankAccounts","entries","_ref33","_ref34","subscribeToBankAccounts","_ref35","selectedBankName","selectedBankObj","PaymentDetails","fobPriceInput","freightInput","inspectionInput","insuranceInput","totalAmountCalculated","setTotalAmountCalculated","insurance","selectedIncoterms","setSelectedIncoterms","setSelectedCurrencyExchange","inspection","setInspectionIsChecked","warranty","warrantyIsChecked","additionalNameRef","warrantyPrice","additionalPriceRef","safelyParseNumber","number","calculateTotalAmount","_fobPriceInput$curren","_freightInput$current","_inspectionInput$curr","_insuranceInput$curre","freight","additionalPricesTotal","sum","total","round","_fobPriceInput$curren2","_freightInput$current2","_insuranceInput$curre2","freightCalculation","m3","fobPriceDollars","currency","usdToJpy","Checkbox","isChecked","filteredText","lines","filteredLines","filteredLine","SelectPortOfDischarge","countriesDischarge","portsData","setPortsData","nearestPorts","setNearestPorts","selectedPortCountry","setSelectedPortCountry","selectedCountry","selectedPort","setSelectedPort","fetchPorts","sortedPorts","portName","sortOrder","fetchPortsData","selectedCountryData","SelectSalesPerson","selectedSales","setSelectedSales","SelectPortOfDeparture","NotifyPartyInput","accountData","setAccountData","setIsChecked","notifyPartyName","notifyPartyAddress","notifyPartyCity","notifyPartyCountry","notifyPartyContactNumber","notifyPartyFax","notifyPartyEmail","_notifyPartyName$curr","_notifyPartyAddress$c","_notifyPartyCity$curr","_notifyPartyCountry$c","_notifyPartyContactNu","_notifyPartyFax$curre","_notifyPartyEmail$cur","city","ConsigneeInput","consigneeName","consigneeAddress","consigneeCity","consigneeCountry","consigneeContactNumber","consigneeFax","consigneeEmail","fetchAccountData","textStreet","textZip","textPhoneNumber","textEmail","ConfirmPaymentModalContent","historyModalVisible","setHistoryModalVisible","isConfirmLoading","setIsConfirmLoading","totalAmountString","totalAmountNumber","inputAmountRef","fullPaymentMessage","_ref42","messageType","overBalanceMessage","_ref43","paymentMessage","transactionDate","confirmPayment","amountNeeded","totalValue","docRefCustomer","newPayments","newPaymentsAccount","vehicleRef","vehicleName","inputAmount","numericInputAmount","formattedInputAmount","ms","overBalance","increment","payments","paymentsHistory","setTransactionModalVisible","cleanedDateString","padStart","hours","getHours","ampm","getMinutes","payment","displayedAmount","fontWefight","Progress","shadow","_filledTrack","underline","handleHistoryModalClose","sortedPayments","dateA","IssueProformaInvoiceModalContent","isConfirmHovered","cfsInputRef","placeOfDeliveryInputRef","invoiceMessage","confirmInvoice","yearSuffix","maxNumber","substring","docRefChatId","hashedData","hash","HmacSHA256","Hex","createHmacSha256Hash","updateDocRef","customerEmail","cryptoNumber","_cfsInputRef$current","_placeOfDeliveryInput","ProfitCalculator","totalSCCAmount","setTotalSCCAmount","formattedTotalSCCAmount","setFormattedTotalSCCAmount","totalProfitAmountDollars","setTotalProfitAmountDollars","inputPriceRef","lastFetchedPort","setLastFetchedPort","currentPort","freightOrigPrice","_data$currentPort","kobePrice","nagoyaPrice","yokohamaPrice","kyushuPrice","fee","formattedPurchasedPrice","minimumFractionDigits","maximumFractionDigits","auctionFee","formattedAuctionFee","transportFee","formattedTransportFee","shippingAgentFee","formattedShippingAgentFee","cubicMeter","costPerCubicMeter","formattedCostPerCubicMeter","totalCubicMeterCostDollars","formattedTotalCubicMeterCostDollars","totalCubicMeterCostYen","formattedTotalCubicMeterCostYen","realTotalPriceYen","formattedRealTotalPriceYen","realTotalPriceDollars","formattedRealTotalPriceDollars","totalPriceCalculation","defaultInputPrice","_inputPriceRef$curren","inputPrice","totalAmountDollars","GenerateCustomInvoice","additionalPriceLocal","additionalNameLocal","invoiceNameExtension","divideInvoice","customInvoiceVisible","invoiceRef","qrCodeRef","capturedImageUri","setCapturedImageUri","setInvoiceNumber","invoiceViewKey","issuingDateRef","setIssuingDate","dueDateRef","setDueDate","shippedFromRef","shippedFrom","setShippedFrom","shippedToRef","shippedTo","setShippedTo","placeOfDeliveryRef","setPlaceOfDelivery","cfsRef","setCfs","consigneeNameRef","setConsigneeName","consigneeAddressRef","setConsigneeAddress","consigneeEmailRef","setConsigneeEmail","consigneeContactRef","consigneeContact","setConsigneeContact","consigneeFaxRef","setConsigneeFax","notifyPartyNameRef","setNotifyPartyName","notifyPartyAddressRef","setNotifyPartyAddress","notifyPartyEmailRef","setNotifyPartyEmail","notifyPartyContactRef","notifyPartyContact","setNotifyPartyContact","notifyPartyFaxRef","setNotifyPartyFax","carNameRef","setCarName","specificationsRef","specifications","setSpecifications","itemNoteRef","itemNote","setItemNote","fobTextRef","_useState213","_useState214","fobText","setFobText","fobPriceRef","_useState215","_useState216","setFobPrice","freightTextRef","_useState217","_useState218","freightText","setFreightText","freightPriceRef","_useState219","_useState220","setFreightPrice","inspectionTextRef","_useState221","_useState222","inspectionText","setInspectionText","inspectionPriceRef","_useState223","_useState224","setInspectionPrice","totalPriceRef","_useState225","_useState226","totalPrice","setTotalPrice","_useState227","_useState228","setAdditionalName","_useState229","_useState230","setAdditionalPrice","dividedByRef","_useState231","_useState232","dividedBy","setDividedBy","captureImage","_ref50","captureRef","quality","createPDF","imageData","html2canvas","toDataURL","pdf","jsPDF","orientation","unit","imgProps","getImageProperties","pdfHeightFit","addImage","imageCompression","imageQuality","save","handleCaptureAndCreatePDF","handleAdditionalNameTextChange","handleAdditionalPriceTextChange","i","issuingDateString","dueDateString","issuingDateObject","dueDateObject","handleFreightTextChange","handleInspectionTextChange","handleFobTextChange","handleDividedByTextChange","setCustomInvoiceVisible","setPreviewInvoiceVisible","QRCode","useGrouping","price","PreviewInvoice","previewInvoiceVisible","_useState233","_useState234","isPreviewHovered","setIsPreviewHovered","_useState235","_useState236","_useState237","_useState238","_useState239","_useState240","_useState241","_useState242","_useState243","_useState244","setFeaturesTrueCount","_useState245","_useState246","rerenderState","setRerenderState","_useState247","_useState248","imagePreviewKey","captureImageAsync","trueCount","count","field","countTrueValuesInCarData","_ref56","valueCurrency","convertedCurrency","baseValue","usdToEur","usdToAud","usdToGbp","usdToCad","write","RNImage","totalAdditionalPrice","numericPart","totalEur","totalAud","totalGbp","totalCad","totalPriceCalculated","ReopenTransaction","_useState249","_useState250","_useState251","_useState252","isModalVisible","setIsModalVisible","_useState253","_useState254","isYesHovered","setIsYesHovered","_useState255","_useState256","isNoHovered","setIsNoHovered","_useState257","_useState258","handleModalClose","reopenTransactionMessage","handleReopenTransaction","_ref58","CancelTransaction","_useState259","_useState260","_useState261","_useState262","_useState263","_useState264","_useState265","_useState266","_useState267","_useState268","sendEmail","_ref59","subject","htmlContent","cancelTransactionMessage","_ref60","handleCancelTransaction","_ref61","formattedTimeEmail","ExtendDueDateButton","_useState269","_useState270","_useState271","_useState272","setIsConfirmHovered","_useState273","_useState274","_useState275","_useState276","_useState277","_useState278","_useState279","_useState280","handleConfirm","confirmExtendDueDate","extendDueDateMessage","_ref65","_useState281","_useState282","TransactionModal","transactionModalVisible","TransactionButton","_ref67","buttonValue","transactionValue","colorHoverIn","colorHoverOut","_useState283","_useState284","TransactionList","_ref68","displayedTransactions","isArray","transactions","transaction","_useState285","_useState286","stockId","onMouseEnter","onMouseLeave","TransactionHistoryModal","_useState287","_useState288","transactionHistoryVisible","setTransactionHistoryVisible","_useState289","_useState290","setDisplayedTransactions","_useState291","_useState292","loadingMore","setLoadingMore","_useState293","_useState294","onScroll","_ref70","_ref69","layoutMeasurement","contentOffset","isCloseToBottom","nextItems","loadMorePayments","scrollEventThrottle","PaymentHistoryModal","_useState295","_useState296","paymentHistoryVisible","setPaymentHistoryVisible","_useState297","_useState298","displayedPayments","setDisplayedPayments","_useState299","_useState300","_ref72","_ref71","CustomerProfileModal","_useState301","_useState302","customerModalVisible","setCustomerModalVisible","totalPaymentValue","background","Hyperlink","linkDefault","linkStyle","ChatMessageHeader","chatMessagesData","selectedVehicleData","carImageUrl","_useState303","_useState304","reRenderKey","setReRenderKey","freightPriceYen","reservedTo","FontAwesome5","ReadByListModal","_ref73","userEmail","handleReadByListModalClose","readByListModalVisible","flexWrap","ImagePreviewModal","_ref74","isVisible","HoverablePressable","_ref75","_useState305","printComponent","_useState306","isHoveredDownload","setIsHoveredDownload","_useState307","_useState308","Linking","openURL","DocumentPreviewModal","selectedFileUrl","pdfViewerModalVisible","_useState309","_useState310","iframeKey","setIframeKey","_useState311","_useState312","setLoading","handleIframeLoad","printIframe","printWindow","print","timeout","setSelectedFileUrl","clearTimeout","setPdfViewerModalVisible","onLoad","ChatMessageBox","_ref77","loadMoreMessagesLoading","noMoreMessagesData","_useState313","_useState314","isEyeHovered","setIsEyeHovered","flatListRef","_useState315","_useState316","hoveredImageIndex","setHoveredImageIndex","_useState317","_useState318","selectedImageIndex","setSelectedImageIndex","_useState319","_useState320","isPreviewVisible","setIsPreviewVisible","useLocation","handlePopState","handleImageMessageMouseLeave","_useState321","_useState322","handleReadByListModalOpen","setReadByListModalVisible","animatedValue","Animated","Value","loop","sequence","timing","toValue","useNativeDriver","start","interpolate","inputRange","outputRange","handleLoadMoreMessages","_ref78","setLoadMoreMessagesLoading","setNoMoreMessagesData","_ref79","handlePreviewInvoiceModalOpen","match","formattedHours","amPm","substr","extractUsernameFromEmail","_email$split","renderItemText","isGlobalCustomerSender","urlPattern","RegExp","segments","segment","segmentWithBreaks","str","n","insertBreaks","isUrlForText","canOpenURL","supported","getFileIcon","iconSize","lowerFileName","endsWith","_ref80","isLastMessage","textFontSize","handleImageMessageMouseEnter","openPreview","absoluteFillObject","inverted","ReservedStatusViewForHeader","CancelledViewForHeader","_useState323","_useState324","chatMessageBoxLoading","chatListSearchText","_useState325","_useState326","_useState327","_useState328","activeButton","setActiveButton","_useState329","_useState330","setActiveButtonValue","_useState331","_useState332","activeFilterButton","setActiveFilterButton","_useState333","_useState334","setUnreadButtonValue","_useState335","_useState336","readButtonValue","setReadButtonValue","_useState337","_useState338","_useState339","_useState340","unreadCount","setUnreadCount","_useState341","_useState342","setScreenWidth","updateWidth","fetchIpAndCountry","_ref81","fetchedIp","fetchedIpCountry","country_name","unrepliedQuery","handlePress","buttonTitle","buttonTitleValue","queryRef","buildQuery","_projectControlAuth$c","_ref82","slideAnim","easing","Easing","bezier","_ref83","_useState343","_useState344","horizontal","minWidth","prevState","transform","translateX","defaultSelectedButton","selectedPortForCountry","SearchablePortDropdown","setQuery","isDropdownVisible","setIsDropdownVisible","searchRef","formattedData","ports","collectionName","FreightNavigation","selectedButtonState","setSelectedButtonState","button","setSelectedButton","SelectMethod","portCode","selectedMethod","setSelectedMethod","methodData","toast","useToast","updatePortMethod","methodField","render","formattedPortCode","TouchableHighlight","underlayColor","SelectInspectionIsRequired","countryCode","selectedInspectionIsRequired","setSelectedInspectionIsRequired","inspectionIsRequiredData","updateCountryInspection","inspectionIsRequiredField","formattedCountryCode","countryData","inspectionIsRequired","SelectInspectionName","selectedInspectionName","setSelectedInspectionName","inspectionNameData","updateCountryInspectionName","inspectionNameField","addPort","newCountryData","addCountry","countryName","_x14","AddCountryModal","handleAddCountryModalClose","addCountryModalVisible","inputCountryText","addButtonLoading","setAddButtonLoading","handleAddButton","_inputCountryText$cur","_inputCountryText$cur2","setAddCountryModalVisible","inputRef","filteredValue","filterInput","borderBottomRightRadius","NavigatePage","selectedButton","CountriesTable","PortsTable","AddPortsForCountriesModal","handleAddPortsForCountriesModalClose","addPortsForCountriesModalVisible","handleAddPortsForCountriesModalOpen","countryPortsData","setAddPortsForCountriesModalVisible","addPortForCountryField","nearestPortsField","_docSnap$data$formatt","_x15","updateCountryPortsField","_x16","DeleteCountryModal","handleDeleteCountryModalClose","deleteCountryModalVisible","buttonLoading","setButtonLoading","handleDeleteCountry","formattedFieldCode","deleteField","inputSearchRef","inputSortOrder","textAreaAddInspectionIsRequired","textAreaAddInspectionName","_inputSearchRef$curre","handleAddCountryModalOpen","setCountryPortsData","updateCountrySortOrder","sortOrderField","_x17","_x18","_x19","handleSortOrderTextChange","handleDeleteCountryModalOpen","setDeleteCountryModalVisible","handleUpdateInsurance","insuranceField","_x20","_x21","_x22","returnKeyType","autoCapitalize","_textAreaAddInspectio4","_textAreaAddInspectio3","borderTopLeftRadius","borderTopRightRadius","BouncyCheckbox","fillColor","unfillColor","innerIconStyle","textStyle","fontFamily","AddPortModal","handleAddPortModalClose","addPortModalVisible","inputPortText","_inputPortText$curren","_inputCountryText$cur3","_inputCountryText$cur4","_inputPortText$curren2","_inputCountryText$cur5","setAddPortModalVisible","DeletePortModal","handleDeletePortModalClose","deletePortModalVisible","handleDeletePort","textAreaAddMethod","inputProfitPrice","inputNagoyaPrice","inputYokohamaPrice","inputKyushuPrice","inputKobePrice","inputMemo","handleProfitPriceTextChange","updatePortsField","_x23","_x24","_x25","_x26","_x27","_inputSearchRef$curre2","profitPrice","handleAddPortModalOpen","handleDeletePortModalOpen","setDeletePortModalVisible","_textAreaAddMethod$cu","Freight","_x28","keyboardShouldPersistTaps","NamePopover","MobileViewDrawer","LogsTable","logsData","setLogsData","handleNextPage","handlePreviousPage","CurrencyConverterComponent","successModalVisible","setSuccessModalVisible","todayCurrency","setTodayCurrency","timestampCurrency","setTimestampCurrency","setExchangeRate","setLastUpdate","CurrencyConverter","rates","JPY","JpyToUsd","yenToDollar","dollarToYen","EUR","eurToUsd","GBP","gbpToUsd","AUD","audToUsd","CAD","cadToUsd","yenToEuro","euroToYen","yenToGbp","gbpToYen","yenToAud","audToYen","yenToCad","cadToYen","lastUpdateDate","formattedLastUpdate","hour","minute","second","timeZoneName","newTodayCurrency","currencyRef","jpyToEur","eurToJpy","jpyToGbp","gbpToJpy","jpyToAud","audToJpy","jpyToCad","cadToJpy","logDataCurrency","handleCloseCurrencyModal","handleCloseSuccessModal","MyBarChart","VictoryChart","theme","VictoryTheme","material","domainPadding","parent","VictoryAxis","axis","stroke","ticks","tickLabels","fill","dependentAxis","VictoryBar","datum","barRatio","Logs","cameraContainer","translateY","cameraView","webcamRef","qrCode","setQrCode","isScanning","setIsScanning","intervalId","setInterval","video","videoWidth","videoHeight","getImageData","jsQR","clearInterval","fetchInvoiceData","smallWidth","smallHeight","smallWidthScaleFactor","smallHeightScaleFactor","Webcam","videoConstraints","facingMode","setIsOpen","useNavigation","handleOpen","handleToggleLogs","handleToggleAddAccount","handleToggleAccountList","handleToggleAddVehicle","handleVehicleList","handleFreight","handleChatMessages","slideAnimation","inOut","ease","onPressOut","onHover","setOnHover","globalCurrentSupplyChainCostsData","globalCurrentStockID","globalSelectedVehicle","globalSelectedVehicleReferenceNumber","globalSelectedCarName","SelectStockStatus","selectedStockStatusValue","setSelectedStockStatusValue","handleSaveStockStatus","stockStatusHistoryData","vehicleProductRef","stockStatusHistory","ImageUploadModal","handleUploadImagesModalClose","handleUploadImages","uploadImagesModalVisible","uploadImagesButtonLoading","UploadImagesModal","fetchImageCounts","setUploadImagesModalVisible","setUploadImagesButtonLoading","closeAll","handleModalSupplyChainsCostsOpen","setVehicleListSupplyChainsCostsData","AllSccModals","vehicleListSupplyChainsCostsData","expenseViewRef","handleSaveSupplyChainsCosts","SCC_Modals","VehicleEditModal","handleEditModalClose","editVehicleModalVisible","EditVehicleModal","setEditVehicleModalVisible","ViewImagesModal","handleViewImagesModalClose","viewImagesModalVisible","viewImagesData","FobPriceHistoryModal","handleFobPriceHistoryClose","fobPriceHistoryModalVisible","FobPriceHistory","setFobPriceHistoryModalVisible","ImageCountComponent","handleViewImagesModalOpen","handleUploadImagesModalOpen","setImageCount","FobPriceInput","formatValueWithCommas","handleSaveFob","fobValue","handleTextChange","VehicleListTable","vehicleListData","setStockIDs","setImageCounts","sortField","setSortField","isSortActive","setIsSortActive","handleSortChange","fetchWithSort","fieldToSortBy","sortDirection","vehicleProductData","setVehicleListData","_ref41","sanitizedSearchQuery","ids","counts","getImageCountInFolder","imageCountsObject","acc","folderPath","folderRef","handleFobPriceHistoryOpen","setFobHistoryData","setViewImagesModalVisible","setViewImagesData","handleSearchEnter","vehicleProductsRef","VehicleList","UsePagination","messageTextInputValueSlice","createSlice","initialState","reducers","action","payload","carImageUrlSlice","selectedFileUrlSlice","pdfViewerModalVisibleSlice","selectedVehicleDataSlice","selectedCustomerDataSlice","previewInvoiceVisibleSlice","customInvoiceVisibleSlice","transactionModalVisibleSlice","invoiceDataSlice","deleteMessageTemplateVisibleSlice","loadMoreMessagesLoadingSlice","noMoreMessagesDataSlice","readByListModalVisibleSlice","selectedChatDataSlice","chatMessageBoxLoadingSlice","chatMessagesDataSlice","chatListSearchTextSlice","activeChatIdSlice","loadMoreLoadingSlice","noMoreDataSlice","chatListLastVisibleSlice","setChatListLastVisible","chatListDataSlice","chatListImageUrlSlice","setChatListImageUrl","countryPortsDataSlice","addPortsForCountriesModalVisibleSlice","methodDataSlice","setMethodData","inspectionIsRequiredDataSlice","setInspectionIsRequiredData","inspectionNameDataSlice","setInspectionNameData","deletePortModalVisibleSlice","deleteCountryModalVisibleSlice","addPortModalVisibleSlice","addCountryModalVisibleSlice","selectedButtonSlice","freightCountriesDataSlice","setFreightCountriesData","freightPortsDataSlice","setFreightPortsData","fobHistoryDataSlice","inputFobSlice","setInputFob","fobPriceHistoryModalVisibleSlice","editVehicleModalVisibleSlice","vehicleListDataSlice","addVehicleListDataSlice","setAddVehicleListData","supplyChainsCostsModalVisibleSlice","uploadImagesModalVisibleSlice","vehicleListSupplyChainsCostsDataSlice","uploadImagesButtonLoadingSlice","viewImagesModalVisibleSlice","viewImagesDataSlice","lastVisibleSlice","accountListDataSlice","logsDataSlice","stockStatusDataSlice","setStockStatusData","isSuccessModalOpenSlice","isUpdateSuccessModalOpenSlice","loadingModalVisibleSlice","selectedExpenseNameSlice","selectedPaidToSlice","supplyChainsCostsDataSlice","currentDateSlice","setCurrentDate","loginEmailSlice","setLoginEmail","loginAccountTypeSlice","loginNameSlice","modalDeleteImagesVisibleSlice","addAnotherImagesSlice","isAddPhotoVisibleSlice","jpyToUsdSlice","setJpyToUsd","usdToJpySlice","setUsdToJpy","modelDataSlice","makeDataSlice","setMakeData","expenseNameDataSlice","setExpenseNameData","paidToDataSlice","setPaidToData","selectedMakeSlice","setSelectedMake","isLoadingSlice","selectedImagesSlice","portDataSlice","setPortData","transmissionDataSlice","setTransmissionData","fuelDataSlice","setFuelData","buyerDataSlice","setBuyerData","salesDataSlice","setSalesData","driveTypeDataSlice","setDriveTypeData","bodyTypeDataSlice","setBodyTypeData","exteriorColorDataSlice","setExteriorColorData","currentYearSlice","setCurrentYear","deleteImageVisibleSlice","actions","configureStore","reducer","chatListImageUrl","freightPortsData","freightCountriesData","inputFob","addVehicleListData","accountListData","selectedMake","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","fetchCurrency","_snapshot$data","_snapshot$data2","fetchExpenseNameData","_snapshot$data3","fetchPaidToData","_snapshot$data4","paidTo","fetchMakeData","_snapshot$data5","fetchPortData","_snapshot$data6","fetchTransmissionData","_snapshot$data7","fetchFuelData","_snapshot$data8","fetchBuyerData","_snapshot$data9","fetchSalesData","_snapshot$data10","fetchDriveTypeData","_snapshot$data11","fetchBodyTypeData","_snapshot$data12","fetchExteriorColorData","_snapshot$data13","fetchYear","fetchCurrentDate","fetchVehicleListData","fetchMethodData","_snapshot$data14","fetchInspectionIsRequiredData","_snapshot$data15","fetchInspectionNameData","_snapshot$data16","fetchChatListData","projectControlFirebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","projectExtensionAuth","app","getAnalytics","firebaseAppForCreateUser","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","notFulfilled","Infinity","fulfilled","j","r","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","setAttribute","onScriptComplete","prev","doneFns","parentNode","removeChild","bind","appendChild","Symbol","toStringTag","nmd","paths","p","installedChunks","installedChunkData","promise","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}