{"version":3,"file":"static/js/main.7f0e8872.js","mappings":"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","sources":["components/LoginPage.js","components/DevAdminComponents/Lazy Screen/LazyScreen.js","components/DevAdmin.js","components/Admin.js","components/Checkpoint.js","components/ResetPassword.js","components/ResetPasswordSuccess.js","App.js","components/DevAdminComponents/AccountList.js","components/DevAdminComponents/AddAccount.js","components/DevAdminComponents/AddVehicle.js","components/DevAdminComponents/Header/StickyHeader.js","components/DevAdminComponents/Logs.js","components/DevAdminComponents/SideDrawer/MobileViewDrawer.js","components/DevAdminComponents/SideDrawer/SideDrawer.js","components/DevAdminComponents/VehicleList.js","components/DevAdminComponents/VehicleListComponent/UsePagination.js","components/DevAdminComponents/redux/store.js","crossFirebase.js","firebasecontrol.js","firebasecontrolCreateUser.js","webpack://web/./components/style.css?30b9","node_modules/moment/locale|sync|/^/.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/ensure chunk","webpack/runtime/get javascript chunk filename","webpack/runtime/get mini-css chunk filename","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/load script","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition,\r\n  Item,\r\n  Label\r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth, updateDoc } from '../firebasecontrol';\r\nimport { signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n      <PresenceTransition visible={errorShow} initial={{\r\n        opacity: 0,\r\n        scale: 0,\r\n      }} animate={{\r\n        opacity: 1,\r\n        scale: 1,\r\n        transition: {\r\n          duration: 200\r\n        }\r\n      }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n        <Alert maxW=\"400\" status=\"error\">\r\n          <VStack space={1} flexShrink={1} w=\"100%\">\r\n            <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                <Alert.Icon />\r\n                <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                  {errorTitle}\r\n                </Text>\r\n              </HStack>\r\n            </HStack>\r\n            <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n              {errorMessage}\r\n            </Box>\r\n          </VStack>\r\n        </Alert>\r\n        {/* </Collapse> */}\r\n      </PresenceTransition>\r\n\r\n    </Box>;\r\n\r\n  };\r\n\r\n  const updateFieldData = async (documentId, fieldName, newValue) => {\r\n    const userRef = doc(db, 'accounts', documentId);\r\n\r\n    try {\r\n      await updateDoc(userRef, {\r\n        [fieldName]: newValue\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating field data:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleSignIn = () => {\r\n    setIsLoading(true);\r\n    setIsDisabled(true);\r\n    setTimeout(() => {\r\n      // Reset loading and disabled state\r\n      setIsLoading(false);\r\n      setIsDisabled(false);\r\n    }, 2000); // Replace with your actual async operation\r\n    setErrorShow(false);\r\n    signInWithEmailAndPassword(auth, email.trim(), password)\r\n      .then((re) => {\r\n        const documentId = email;\r\n        const fieldName = 'pass';\r\n        const newValue = password;\r\n\r\n        updateFieldData(documentId, fieldName, newValue);\r\n        navigation.navigate('Checkpoint');\r\n\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log(errorCode, errorMessage);\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n        setErrorShow(true);\r\n        if (errorCode === 'auth/user-not-found') {\r\n          console.log('Please use a valid email or check for misspellings.☹️');\r\n          setErrorTitle('Email do not exist!');\r\n          setErrorMessage('Please use an existing email or check for misspellings.☹️');\r\n          <ErrorLoginShow />\r\n        } else if (errorCode === 'auth/wrong-password') {\r\n          console.log('Password is incorrect, please try again. ☹️');\r\n          setErrorTitle('Incorrect password');\r\n          setErrorMessage('Password is incorrect, please try again. ☹️');\r\n          <ErrorLoginShow />\r\n        } else if (errorCode === 'auth/missing-password') {\r\n          console.log('Please enter a password. ☹️');\r\n          setErrorTitle('Password is empty!');\r\n          setErrorMessage('Please enter a password. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n        else if (errorCode === 'auth/invalid-email') {\r\n          console.log('Email is invalid. ☹️');\r\n          setErrorTitle('Invalid email!');\r\n          setErrorMessage('Please enter a valid email. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n        else if (errorCode === 'auth/user-disabled') {\r\n          console.log('User is disabled. ☹️');\r\n          setErrorTitle('Account is disabled!');\r\n          setErrorMessage('Please contact the administrator. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n      })\r\n  };\r\n\r\n  const handleChange = text => setEmail(text);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (email.length > 1) {\r\n      setErrorShow(false)\r\n    }\r\n  }, [email])\r\n\r\n  const handleEmailOnChangeText = (text) => {\r\n    setEmail(text)\r\n    setErrorShow(false)\r\n  };\r\n\r\n  const handlePasswordOnChangeText = text => setPassword(text);\r\n\r\n  useEffect(() => {\r\n    if (password.length > 1) {\r\n      setErrorShow(false)\r\n    }\r\n  }, [password])\r\n\r\n\r\n  const handleReset = () => {\r\n    navigation.navigate('ResetPassword');\r\n  };\r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n        <ErrorLoginShow />\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n              <Input w={{\r\n                base: \"90%\",\r\n                md: \"90%\",\r\n                sm: \"90%\",\r\n              }} value={email} onSubmitEditing={handleSignIn} onChangeText={handleChange} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\r\n              <Input w={{\r\n                base: \"90%\",\r\n                md: \"90%\",\r\n                sm: \"90%\",\r\n              }} value={password} onSubmitEditing={handleSignIn} onChangeText={handlePasswordOnChangeText} fontSize='16' type={show ? \"text\" : \"password\"} InputRightElement={<Pressable onPress={() => setShow(!show)}>\r\n                <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n              </Pressable>} placeholder=\"Password\" placeholderTextColor='white' color='white' />\r\n              <HStack space={1} justifyContent=\"center\">\r\n                {/* <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                  base: 130,\r\n                  md: 130,\r\n                  sm: 130,\r\n                }} onPress={handleReset}><Text style={{ color: 'white', }}>Reset Password</Text></Button> */}\r\n                <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                  base: 130,\r\n                  md: 130,\r\n                  sm: 130,\r\n                }} onPress={handleSignIn} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Login</Text>}</Button>\r\n\r\n              </HStack>\r\n\r\n            </Stack>\r\n\r\n          </Center>\r\n\r\n\r\n        </Center>\r\n\r\n\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { lazy, Suspense } from 'react';\r\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\r\nimport { Box, Center, Stack, HStack, Spinner, Image } from 'native-base';\r\nconst logo = require('../../../assets/RMJ C-Hub 制御ハブ.png');\r\n// Create a loading component to display while the screen is loading\r\nconst Loading = () => (\r\n\r\n\r\n  <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n\r\n    <Center flex={1}>\r\n      <Center px=\"3\">\r\n        <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n          <Image source={{\r\n            uri: logo\r\n          }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n        </Box>\r\n        {/* <LoginForm /> */}\r\n\r\n        <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n          <HStack space={1} justifyContent=\"center\">\r\n            <Spinner color='white' size='lg' />\r\n          </HStack>\r\n        </Stack>\r\n\r\n      </Center>\r\n\r\n\r\n    </Center>\r\n\r\n\r\n  </Box>\r\n);\r\n\r\nconst LazyScreen = (props) => {\r\n  // Dynamically import the component using React.lazy\r\n  const LazyComponent = lazy(props.importFunc);\r\n\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <LazyComponent {...props} />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default LazyScreen;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  PresenceTransition,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Title,\r\n  Content,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  VStack,\r\n  ScrollView,\r\n  SectionList,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Modal,\r\n  Divider\r\n} from \"native-base\";\r\nimport {\r\n  FontAwesome,\r\n  Entypo,\r\n  MaterialIcons,\r\n  Ionicons,\r\n  Fontisto,\r\n  EvilIcons,\r\n  AntDesign,\r\n  MaterialCommunityIcons,\r\n  Feather,\r\n  FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './style.css';\r\nimport { debounce } from 'lodash';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\n\r\nimport LazyScreen from './DevAdminComponents/Lazy Screen/LazyScreen';\r\n\r\nimport AddAccount from './DevAdminComponents/AddAccount';\r\nimport Logs from './DevAdminComponents/Logs';\r\nimport AccountList from './DevAdminComponents/AccountList';\r\nimport AddVehicle from './DevAdminComponents/AddVehicle';\r\nimport VehicleList from './DevAdminComponents/VehicleList';\r\n\r\nconst StackNavigator = createNativeStackNavigator();\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nexport default function DevAdmin({ navigation }) {\r\n  const [drawerVisible, setDrawerVisible] = useState(false);\r\n\r\n  const Drawer = createDrawerNavigator();\r\n\r\n  const ChatMessagesComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\r\n  );\r\n\r\n  const LogsComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\r\n  );\r\n\r\n  const FreightComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\r\n  );\r\n\r\n  const VehicleListComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\r\n  );\r\n\r\n  const AccountListComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\r\n  );\r\n\r\n  const AddVehicleComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\r\n  );\r\n\r\n  const AddAccountComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\r\n  );\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = navigation.addListener('state', () => {\r\n      // Close the drawer on navigation change\r\n      setDrawerVisible(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [navigation]);\r\n\r\n  useEffect(() => {\r\n    // Initially hide the drawer\r\n    setDrawerVisible(false);\r\n  }, []);\r\n\r\n  return (\r\n\r\n\r\n    // <Drawer.Navigator\r\n    //   // useLegacyImplementation\r\n    //   screenOptions={{\r\n    //     headerShown: false,\r\n    //     drawerStyle: { backgroundColor: '#7B9CFF' },\r\n    //     drawerContentOptions: {\r\n    //       activeTintColor: '#7B9CFF',\r\n    //       inactiveTintColor: '#7B9CFF',\r\n    //       activeLabelStyle: { color: '#7B9CFF' },\r\n    //       inactiveLabelStyle: { color: '#7B9CFF' },\r\n    //     },\r\n    //   }}\r\n    // >\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"CHAT MESSAGES\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"LOGS\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"FREIGHT\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"VEHICLE LIST\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"ACCOUNT LIST\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"ADD NEW VEHICLE\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"ADD C-HUB ACCOUNT\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    // </Drawer.Navigator>\r\n\r\n    <StackNavigator.Navigator screenOptions={{ headerShown: false }}>\r\n\r\n      <StackNavigator.Screen name=\"CHAT MESSAGES\" component={ChatMessagesComponent} />\r\n      <StackNavigator.Screen name=\"FREIGHT\" component={FreightComponent} />\r\n      <StackNavigator.Screen name=\"ADD NEW VEHICLE\" component={AddVehicleComponent} />\r\n      <StackNavigator.Screen name=\"LOGS\" component={LogsComponent} />\r\n      <StackNavigator.Screen name=\"VEHICLE LIST\" component={VehicleListComponent} />\r\n      <StackNavigator.Screen name=\"ACCOUNT LIST\" component={AccountListComponent} />\r\n      <StackNavigator.Screen name=\"ADD C-HUB ACCOUNT\" component={AddAccountComponent} />\r\n\r\n    </StackNavigator.Navigator>\r\n\r\n    // <Drawer.Navigator useLegacyImplementation screenOptions={{\r\n    //   headerShown: false,\r\n    //   drawerStyle: { backgroundColor: '#D0DCFF' },\r\n    //   drawerContentOptions: {\r\n    //     activeTintColor: 'white',\r\n    //     inactiveTintColor: 'white',\r\n    //     activeLabelStyle: { color: 'white' },\r\n    //     inactiveLabelStyle: { color: 'white' }\r\n    //   }\r\n    // }} >  \r\n    //        <Drawer.Screen name=\"ADD NEW VEHICLE\" component={AddVehicle} />\r\n    //   <Drawer.Screen name=\"VEHICLE LIST\" component={VehicleList} />\r\n\r\n    //   <Drawer.Screen name=\"ACCOUNT LIST\" component={AccountList} />\r\n    //   <Drawer.Screen name=\"LOGS\" component={Logs} />\r\n    //   <Drawer.Screen name=\"ADD C-HUB ACCOUNT\" component={AddAccount} />\r\n\r\n\r\n    // </Drawer.Navigator>\r\n\r\n\r\n    //  <NativeBaseProvider>\r\n    //       <StackNavigator.Navigator options={{ headerShown: false }}>\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AccountList\" component={AccountList} />\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"Logs\" component={Logs} />\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AddAccount\" component={AddAccount} />\r\n\r\n    //       </StackNavigator.Navigator>\r\n\r\n    //     </NativeBaseProvider>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { Input, Icon, Stack, Pressable, Center, NativeBaseProvider, Button, Box, HStack, Image } from \"native-base\";\r\nimport { signOut  } from 'firebase/auth';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getDoc, auth } from '../firebasecontrol'\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useNavigation } from '@react-navigation/core'\r\n\r\n\r\n\r\nexport default function SuperAdmin() {\r\n\r\n  const [show, setShow] = React.useState(false);\r\n  const navigation = useNavigation()\r\n  \r\n  // const logo = require('./assets/RMJ C-Hub 制御ハブ.png');\r\n  const handleSignOut = () => {\r\n    signOut(auth).then(() => {\r\n        navigation.navigate('Login');\r\n    }).catch((error) => {\r\n      // An error happened.\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n        <Center flex={1}>\r\n\r\n          <Center px=\"3\"  >\r\n\r\n\r\n            <Button onPress={handleSignOut}>Signout</Button>\r\n\r\n            {/* <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1,}} />\r\n            </Box> */}\r\n            \r\n\r\n          </Center>\r\n\r\n        </Center>\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition\r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot } from '../firebasecontrol'\r\nimport { signOut, onAuthStateChanged, reload, getAuth } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  // setModelData,\r\n  setLoginEmail,\r\n  setLoginName\r\n} from './DevAdminComponents/redux/store'\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Checkpoint() {\r\n  const dispatch = useDispatch();\r\n  const loginEmail = useSelector((state) => state.loginEmail);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [emailCredential, setEmailCredential] = React.useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n\r\n  const navigation = useNavigation()\r\n\r\n\r\n  // const handleDocumentChange = (snapshot) => {\r\n  //   if (!snapshot.exists()) {\r\n  //     signOut(auth)\r\n  //       .then(() => {\r\n  //         navigation.navigate('Login');\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.error('Error signing out:', error);\r\n  //       });\r\n  //   }\r\n  // };\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            navigation.navigate('Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          navigation.navigate('Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const getRandomDelay = () => {\r\n    const minDelay = 100; // Minimum delay in milliseconds\r\n    const maxDelay = 200; // Maximum delay in milliseconds\r\n    return Math.floor(Math.random() * (maxDelay - minDelay + 1) + minDelay);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n\r\n      onSnapshot(accountDocRef, (docSnapshot) => {\r\n        if (docSnapshot.exists()) {\r\n          const data = docSnapshot.data();\r\n          const fieldType = data.type;\r\n          const fieldName = data.name;\r\n\r\n          if (data.active === true) {\r\n            setType(fieldType);\r\n            dispatch(setLoginName(fieldName));\r\n            const delay = getRandomDelay();\r\n            // setTimeout(() => {\r\n            navigation.replace(fieldType);\r\n            // }, delay);\r\n          }\r\n          else {\r\n            signOut(auth)\r\n              .then(() => {\r\n                navigation.navigate('Login');\r\n              })\r\n              .catch((error) => {\r\n                console.error('Error signing out:', error);\r\n              });\r\n          }\r\n        } else {\r\n          // Handle the case where the document does not exist\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n\r\n  };\r\n\r\n  // const getFieldValueByEmail = (email, navigation) => {\r\n\r\n\r\n  //   try {\r\n  //     const accountDocRef = doc(firestore, 'accounts', email);\r\n  //     const unsubscribe = onSnapshot(accountDocRef, (accountDocSnapshot) => {\r\n  //       if (accountDocSnapshot.exists()) {\r\n  //         const data = accountDocSnapshot.data();\r\n  //         const fieldType = data.type;\r\n  //         const fieldName = data.name;\r\n\r\n  //         if (data.active === true) {\r\n  //           dispatch(setLoginName(fieldName));\r\n  //           const delay = getRandomDelay();\r\n  //           setTimeout(() => {\r\n  //             navigation.replace(fieldType);\r\n  //           }, delay);\r\n  //         } else {\r\n  //           signOut(auth)\r\n  //             .then(() => {\r\n  //               navigation.navigate('Login');\r\n  //             })\r\n  //             .catch((error) => {\r\n  //               console.error('Error signing out:', error);\r\n  //             });\r\n  //         }\r\n  //       } else {\r\n  //         console.log('Document does not exist');\r\n  //       }\r\n  //     });\r\n\r\n  //     // Return the unsubscribe function to stop listening when necessary\r\n  //     return unsubscribe;\r\n  //   } catch (error) {\r\n  //     console.error('Error fetching field value:', error);\r\n  //   }\r\n  // };\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n              <HStack space={1} justifyContent=\"center\">\r\n                <Spinner color='white' size='lg' />\r\n              </HStack>\r\n            </Stack>\r\n\r\n          </Center>\r\n\r\n\r\n        </Center>\r\n\r\n\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { \r\n  Input,\r\n  Icon, \r\n  Stack, \r\n  Pressable, \r\n  Center, \r\n  NativeBaseProvider, \r\n  Button, \r\n  Box, \r\n  HStack, \r\n  Image, \r\n  VStack, \r\n  Alert, \r\n  IconButton, \r\n  CloseIcon, \r\n  Spinner, \r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition \r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\r\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail, confirmPasswordReset  } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ResetPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n      \r\n    })\r\n\r\n    return unsubscribe\r\n  }, []) \r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n            <PresenceTransition visible={errorShow} initial={{\r\n            opacity: 0,\r\n            scale: 0,\r\n          }} animate={{\r\n            opacity: 1,\r\n            scale: 1,\r\n            transition: {\r\n              duration: 200\r\n            }\r\n          }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n          <Alert maxW=\"400\" status=\"error\">\r\n            <VStack space={1} flexShrink={1} w=\"100%\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                  <Alert.Icon />\r\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                    {errorTitle}\r\n                  </Text>\r\n                </HStack>\r\n              </HStack>\r\n              <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n                {errorMessage}\r\n              </Box>\r\n            </VStack>\r\n          </Alert>\r\n        {/* </Collapse> */}\r\n        </PresenceTransition>\r\n \r\n      </Box>;\r\n  \r\n};\r\n\r\n\r\n\r\n  const handleReturnLogin = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n   const handleEmailOnChangeText = (text) => {\r\n    setEmail(text) \r\n    setErrorShow(false)\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setIsLoading(true);\r\n    setIsDisabled(true);\r\n    setErrorShow(false);\r\n    sendPasswordResetEmail(auth, email)\r\n    .then((re)=> {\r\n      console.log(re);\r\n      navigation.navigate('ResetPasswordSuccess');\r\n    \r\n    })\r\n    .catch((error) =>{\r\n      setIsLoading(false);\r\n      setIsDisabled(false);\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log(error);\r\n      setErrorShow(true);\r\n      if (errorCode === 'auth/missing-email') {\r\n        console.log('Please enter an email.☹️');\r\n        setErrorTitle('Email is empty!');\r\n        setErrorMessage('Please enter an email.☹️');\r\n        <ErrorLoginShow/>\r\n      }\r\n      else if (errorCode === 'auth/invalid-email') {\r\n        console.log('Email is invalid. ☹️');\r\n        setErrorTitle('Invalid email!');\r\n        setErrorMessage('Please enter a valid email. ☹️');\r\n         <ErrorLoginShow/>\r\n      } \r\n      else if (errorCode === 'auth/user-not-found') {\r\n        console.log('Please use an existing email. ☹️');\r\n        setErrorTitle('User not found!');\r\n        setErrorMessage('Please use an existing email. ☹️');\r\n         <ErrorLoginShow/>\r\n      }       else if (errorCode === 'auth/too-many-requests') {\r\n        console.log('Too many requests detected, please try again later. ☹️');\r\n        setErrorTitle('Too many requests!');\r\n        setErrorMessage('Too many requests detected, please try again later. ☹️');\r\n         <ErrorLoginShow/>\r\n      } \r\n    })\r\n  };\r\n  \r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n      <ErrorLoginShow/>\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n    <Input w={{\r\n      base: \"90%\",\r\n      md: \"90%\",\r\n      sm: \"90%\", \r\n    }} value={email} onSubmitEditing={handleReset} onChangeText={handleEmailOnChangeText} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\r\n\r\n    <HStack space={1} justifyContent=\"center\">\r\n      <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReset} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16}  />:<Text style={{color: 'white',}}>Reset Password</Text>}</Button>\r\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\r\n\r\n    </HStack>\r\n\r\n  </Stack>\r\n\r\n          </Center>  \r\n\r\n          \r\n        </Center>\r\n\r\n   \r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { \r\n  Input,\r\n  Icon, \r\n  Stack, \r\n  Pressable, \r\n  Center, \r\n  NativeBaseProvider, \r\n  Button, \r\n  Box, \r\n  HStack, \r\n  Image, \r\n  VStack, \r\n  Alert, \r\n  IconButton, \r\n  CloseIcon, \r\n  Spinner, \r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition \r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\r\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail  } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ResetPasswordSuccess() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(true);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n      \r\n    })\r\n\r\n    return unsubscribe\r\n  }, []) \r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n            <PresenceTransition visible={errorShow} initial={{\r\n            opacity: 0,\r\n            scale: 0,\r\n          }} animate={{\r\n            opacity: 1,\r\n            scale: 1,\r\n            transition: {\r\n              duration: 200\r\n            }\r\n          }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n          <Alert maxW=\"400\" status=\"Success\">\r\n            <VStack space={1} flexShrink={1} w=\"100%\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                  <Alert.Icon />\r\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                    Success!\r\n                  </Text>\r\n                </HStack>\r\n              </HStack>\r\n              <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n                Password reset link has been sent to your email! 😊\r\n              </Box>\r\n            </VStack>\r\n          </Alert>\r\n        {/* </Collapse> */}\r\n        </PresenceTransition>\r\n \r\n      </Box>;\r\n  \r\n};\r\n\r\n\r\n  \r\n  const handleReturnLogin = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n      <ErrorLoginShow/>\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n   \r\n\r\n    <HStack space={1} justifyContent=\"center\">\r\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\r\n\r\n    </HStack>\r\n\r\n  </Stack>\r\n\r\n          </Center>  \r\n\r\n          \r\n        </Center>\r\n\r\n   \r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect, StrictMode } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition\r\n} from \"native-base\";\r\nimport { getAuth, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, } from './firebasecontrol'\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport LoginPage from './components/LoginPage';\r\nimport DevAdmin from './components/DevAdmin';\r\nimport Admin from './components/Admin';\r\nimport Checkpoint from './components/Checkpoint';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport ResetPasswordSuccess from './components/ResetPasswordSuccess';\r\nimport './style.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './components/DevAdminComponents/redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nconst StackNavigator = createNativeStackNavigator();\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\nexport default function App() {\r\n  const [initializing, setInitializing] = useState(true);\r\n  const [user, setUser] = useState(null);\r\n\r\n  function onAuthStateChanged(user) {\r\n    setUser(user);\r\n    if (initializing) setInitializing(false);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const subscriber = auth.onAuthStateChanged(onAuthStateChanged)\r\n\r\n    return subscriber;\r\n  }, [])\r\n\r\n\r\n  if (initializing) {\r\n    return null; // or a loading screen if needed\r\n  }\r\n\r\n\r\n  const config = {\r\n    screens: {\r\n      Login: 'login',\r\n      Checkpoint: 'checkpoint',\r\n      devadmin: {\r\n        path: 'devadmin',\r\n        screens: {\r\n          'CHAT MESSAGES': 'ChatMessages',\r\n          'CHAT MESSAGES': 'ChatMessages/:chatId',\r\n          'FREIGHT': 'Freight',\r\n          'ADD NEW VEHICLE': 'AddNewVehicle',\r\n          'LOGS': 'Logs',\r\n          'VEHICLE LIST': 'VehicleList',\r\n          'ACCOUNT LIST': 'AccountList',\r\n          'ADD C-HUB ACCOUNT': 'AddCHubAccount',\r\n        },\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const linking = {\r\n    prefixes: ['https://lontokkayo.github.io/samplecontrolhub/'],\r\n    config,\r\n  };\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <Provider store={store}>\r\n        <NativeBaseProvider>\r\n          {/* <LoginPage/> */}\r\n          <NavigationContainer linking={linking}>\r\n            <StackNavigator.Navigator options={{ headerShown: false }}>\r\n              <StackNavigator.Screen options={{ headerShown: false, }} name=\"Login\" component={LoginPage} />\r\n              <StackNavigator.Screen options={{ headerShown: false, }} name=\"Checkpoint\" component={Checkpoint} />\r\n              <StackNavigator.Screen options={{ headerShown: false, unmountOnBlur: true }} name=\"devadmin\" component={DevAdmin} />\r\n              <StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />\r\n              <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPassword\" component={ResetPassword} />\r\n              <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPasswordSuccess\" component={ResetPasswordSuccess} />\r\n              {/* {user ? (<StackNavigator.Screen options={{ headerShown: false }} name=\"Checkpoint\" component={Checkpoint} /> ) : user ?\r\n          (<StackNavigator.Screen options={{ headerShown: false }} name=\"superadmin\" component={SuperAdmin} />) : user ?\r\n          (<StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />) :  (\r\n          <StackNavigator.Screen  options={{ headerShown: false }} name=\"Login\" component={LoginPage} />\r\n        )} */}\r\n            </StackNavigator.Navigator>\r\n          </NavigationContainer>\r\n        </NativeBaseProvider>\r\n      </Provider>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Alert } from 'react-native';\r\nimport {\r\n    Input,\r\n    Icon,\r\n    Stack,\r\n    Pressable,\r\n    Center,\r\n    PresenceTransition,\r\n    NativeBaseProvider,\r\n    Button,\r\n    Box,\r\n    HStack,\r\n    Image,\r\n    Container,\r\n    Header,\r\n    Left,\r\n    Body,\r\n    Title,\r\n    Content,\r\n    Text,\r\n    Heading,\r\n    Flex,\r\n    VStack,\r\n    ScrollView,\r\n    SectionList,\r\n    useBreakpointValue,\r\n    Spinner,\r\n    Modal,\r\n    Divider,\r\n    Popover\r\n} from \"native-base\";\r\nimport { DataTable } from 'react-native-paper';\r\nimport {\r\n    FontAwesome,\r\n    Entypo,\r\n    MaterialIcons,\r\n    Ionicons,\r\n    Fontisto,\r\n    EvilIcons,\r\n    AntDesign,\r\n    MaterialCommunityIcons,\r\n    Feather,\r\n    FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail, deleteUser, signInWithEmailAndPassword, updateEmail, updatePassword } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, deleteDoc, limit } from '../../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport './../style.css';\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { color } from 'react-native-reanimated';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport {\r\n    createDrawerNavigator,\r\n    DrawerContentScrollView,\r\n    DrawerItemList,\r\n    DrawerItem,\r\n} from '@react-navigation/drawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setAccountListData, setLoadingModalVisible, setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { collectionGroup, endBefore, limitToLast, startAfter, where } from 'firebase/firestore';\r\nimport { projectControlFirestore } from '../../crossFirebase';\r\nlet selectedScreen = 'ACCOUNT LIST'\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AccountList() {\r\n    const dispatch = useDispatch();\r\n    const loginName = useSelector((state) => state.loginName);\r\n    const [email, setEmail] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [showModal, setShowModal] = useState('');\r\n    const [type, setType] = useState('');\r\n    const logo = require('../../assets/C-Hub.png');\r\n    const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const [isMobileView, setIsMobileView] = useState(false);\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [show, setShow] = React.useState(false);\r\n    const [show2, setShow2] = React.useState(false);\r\n    const [isDisabled, setIsDisabled] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const navigation = useNavigation();\r\n\r\n    const [isSelectedLogs, setIsSelectedLogs] = useState(false);\r\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\r\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(true);\r\n    const [isSelected3, setIsSelected3] = useState(false);\r\n    const [isSelected4, setIsSelected4] = useState(false);\r\n\r\n    const [accountTypeSpAd, setAccountTypeSpAd] = useState(false);\r\n    const [accountTypeDevAd, setAccountTypeDevAd] = useState(false);\r\n    const [accountTypeAd, setAccountTypeAd] = useState(false);\r\n    const [accountType3, setAccountType3] = useState(false);\r\n    const [accountType4, setAccountType4] = useState(false);\r\n\r\n    const [inputName, setInputName] = useState('');\r\n    const [isInputNameBlank, setIsInputNameBlank] = useState(false);\r\n    const [inputEmail, setInputEmail] = useState('');\r\n    const [inputPassword, setInputPassword] = useState('');\r\n    const [inputConfirmPassword, setInputConfirmPassword] = useState('');\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n    const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\r\n    const [showSuccessModal, setShowSuccessModal] = React.useState(false);\r\n    const [showDisableModal, setShowDisableModal] = React.useState(false);\r\n    const [showEnableModal, setShowEnableModal] = React.useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = React.useState(false);\r\n    const [showSaveSuccessModal, setShowSaveSuccessModal] = React.useState(false);\r\n    const inputRefs = useRef([]);\r\n\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [isIntervalActive, setIsIntervalActive] = useState(true);\r\n    const [time, setTime] = useState('');\r\n    const [selectedType, setSelectedType] = useState('');\r\n    const [selectedTypeDisplay, setSelectedTypeDisplay] = useState('');\r\n    const [selectedItemType, setSelectedItemType] = useState('');\r\n    const [isEmailDuplicate, setIsEmailDuplicate] = useState('');\r\n    const [authEmail, setAuthEmail] = useState('');\r\n    const [authPassword, setAuthPassword] = useState('');\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n    const [isSaveLoading, setIsSaveLoading] = useState(false);\r\n    const inputEmailRef = useRef(null);\r\n    const inputNameRef = useRef(null);\r\n    const inputPassRef = useRef(null);\r\n\r\n    const [page, setPage] = useState(0);\r\n    const optionsPerPage = [13, 25, 50];\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const [documentListener, setDocumentListener] = useState(false);\r\n\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const ref0 = useRef(null);\r\n    const ref1 = useRef(null);\r\n    const ref2 = useRef(null);\r\n    const ref3 = useRef(null);\r\n    const searchInputRef = useRef(null);\r\n\r\n    const searchInput = useRef(null);\r\n    const searchInputValue = searchInput.current?.value;\r\n\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [firstVisible, setFirstVisible] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(db, 'accounts'),\r\n            orderBy('timestamp', 'desc'),\r\n            limit(pageSize)\r\n        );\r\n        const unsubscribe = onSnapshot(q, (documents) => {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n            dispatch(setAccountListData(logsDatabaseData));\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            setFirstVisible(documents.docs[0]);\r\n        });\r\n        return () => unsubscribe();\r\n\r\n    }, []);\r\n\r\n    const fetchNextData = async () => {\r\n\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collectionGroup(projectControlFirestore, 'accounts'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n        }\r\n\r\n        else {\r\n            const q = query(\r\n                collection(projectControlFirestore, 'accounts'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const fetchPreviousData = async () => {\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev')\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev');\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchFirstPage = (documents) => {\r\n\r\n\r\n        const accountListDatabaseData = [];\r\n\r\n        documents.forEach((document) => {\r\n            accountListDatabaseData.push({\r\n                id: document.id,\r\n                ...document.data(),\r\n            });\r\n        });\r\n\r\n        dispatch(setAccountListData(accountListDatabaseData));\r\n\r\n        if (documents?.docs[0]) {\r\n            setFirstVisible(documents.docs[0]);\r\n        }\r\n        if (documents?.docs[documents.docs.length - 1]) {\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n        if (!documents.empty) {\r\n            const accountListDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                accountListDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n\r\n\r\n\r\n            if (documents?.docs[0]) {\r\n                setFirstVisible(documents.docs[0]);\r\n            }\r\n            if (documents?.docs[documents.docs.length - 1]) {\r\n                setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            }\r\n\r\n            if (pageClicked == 'next') {\r\n                setCurrentPage(currentPage + 1);\r\n            }\r\n            if (pageClicked == 'prev') {\r\n                setCurrentPage(currentPage - 1);\r\n            }\r\n\r\n            dispatch(setAccountListData(accountListDatabaseData));\r\n        }\r\n\r\n        else {\r\n\r\n            if (searchText == '') {\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n            else {\r\n\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'accounts'),\r\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleNextPage = async () => {\r\n        // setPageClicked('next');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage + 1);\r\n        await fetchNextData();\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handlePreviousPage = async () => {\r\n        // setPageClicked('previous');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage - 1);\r\n        await fetchPreviousData();\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        searchData();\r\n\r\n    }, [searchText]);\r\n\r\n    const searchData = async () => {\r\n\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        if (searchText === '') {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'accounts'),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n    };\r\n\r\n    const handleSearchEnter = () => {\r\n\r\n        if (searchInputRef.current?.value !== '') {\r\n            setSearchText(searchInputRef.current.value.trim());\r\n        }\r\n        else {\r\n            setSearchText('');\r\n\r\n            if (searchText == '') {\r\n                searchData();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleToggleAccountTypeAd = useCallback(() => {\r\n        const text = 'admin';\r\n\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Admin');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountTypeDevAd = useCallback(() => {\r\n        const text = 'devadmin';\r\n\r\n        setSelectedTypeDisplay('Developer Admin');\r\n\r\n        setSelectedType(text);\r\n        setSelectedItemType(text);\r\n\r\n    }, []);\r\n\r\n    const handleToggleAccountType3 = useCallback(() => {\r\n        const text = 'staff';\r\n\r\n        setSelectedType(text);\r\n\r\n        setSelectedTypeDisplay('Staff');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountType4 = useCallback(() => {\r\n        const text = 'booking';\r\n\r\n\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Booking');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountTypeSpAd = useCallback(() => {\r\n        const text = 'superadmin';\r\n\r\n        setSelectedItemType(text);\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Super Admin');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // console.log(selectedType);\r\n        // console.log(selectedTypeDisplay);\r\n\r\n    }, [selectedType, selectedTypeDisplay])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')); // Replace 'your-collection' with the actual collection name and 'timestamp' with the timestamp field in your documents\r\n                const querySnapshot = await getDocs(q);\r\n                const docs = querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                setData(docs);\r\n                setFilteredData(docs);\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        const unsubscribe = onSnapshot(query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')), (snapshot) => {\r\n            const updatedData = snapshot.docs.map((doc) => doc.data());\r\n            setData(updatedData);\r\n            setFilteredData(updatedData);\r\n        });\r\n\r\n        fetchData();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n    }, [typeOfAccount]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n\r\n            if (!user) {\r\n                navigation.navigate(\"Login\")\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const firebaseFirestore = getFirestore();\r\n\r\n\r\n\r\n\r\n    // const handleUpdate = async () => {\r\n    //     setIsDisabled(true);\r\n    //     setIsLoading(true);\r\n\r\n    //     if (\r\n    //         validateEmail() === false ||\r\n    //         inputName === ''\r\n    //     ) {\r\n    //         setTimeout(() => {\r\n    //             // Reset loading and disabled state\r\n    //             setIsLoading(false);\r\n    //             setIsDisabled(false);\r\n    //         }, 500);\r\n    //     } else {\r\n    //         try {\r\n    //             const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\r\n    //             if (signInMethods.length > 0) {\r\n    //                 // Email already exists\r\n    //                 setIsEmailDuplicate(true);\r\n    //                 setEmailError(false);\r\n    //                 validateEmail(false);\r\n    //                 setIsLoading(false);\r\n    //                 setIsDisabled(false);\r\n    //                 return;\r\n    //             }\r\n\r\n    //             await createUserWithEmailAndPassword(authForCreateUser, inputEmail, inputPassword)\r\n    //                 .then((userCredential) => {\r\n\r\n    //                     const user = userCredential.user;\r\n    //                     try {\r\n    //                         const customID = inputEmail; // Replace 'your-custom-id' with your desired custom ID\r\n    //                         const docRef = doc(db, 'accounts', selectedItem.email); // Replace 'myCollection' with the name of your desired collection\r\n    //                         updateDoc(docRef, {\r\n    //                             // Specify the data you want to add to the document\r\n    //                             email: inputEmail,\r\n    //                             name: inputName,\r\n    //                             pass: inputPassword,\r\n    //                             type: typeOfAccount,\r\n    //                             // ...\r\n    //                         });\r\n\r\n    //                         addLogToCollection(logData);\r\n    //                         // console.log(logData);\r\n    //                         setIsLoading(false);\r\n    //                         setIsDisabled(false);\r\n    //                         handleClear();\r\n    //                         setShowModal(true);\r\n\r\n    //                         // console.log('Document added with custom ID: ', customID);\r\n    //                     } catch (error) {\r\n    //                         console.error('Error adding document: ', error);\r\n    //                     }\r\n\r\n\r\n    //                     // Reset loading and disabled state\r\n\r\n\r\n\r\n    //                 })\r\n    //                 .catch((error) => {\r\n    //                     // console.log('An error occurred during sign-up. Please try again later.');\r\n    //                     console.log(error);\r\n    //                     setIsLoading(false);\r\n    //                     setIsDisabled(false);\r\n    //                 });\r\n    //         } catch (error) {\r\n    //             const errorCode = error.code;\r\n    //             const errorMessage = error.message;\r\n    //             console.log('An error occurred while checking the email existence. Please try again later.');\r\n    //             // console.log(errorCode, errorMessage);\r\n    //             setIsLoading(false);\r\n    //             setIsDisabled(false);\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n    const handleClear = useCallback(() => {\r\n        const text = '';\r\n\r\n        ref0.current.value = \"\";\r\n        ref1.current.value = \"\";\r\n        ref2.current.value = \"\";\r\n        ref3.current.value = \"\";\r\n        setAccountTypeAd(false);\r\n        setAccountTypeSpAd(false);\r\n        setAccountTypeDevAd(false);\r\n        setAccountType3(false);\r\n        setAccountType4(false);\r\n        setEmailError(false);\r\n        setIsEmailDuplicate(false);\r\n\r\n\r\n        setInputConfirmPassword('');\r\n        setInputEmail('');\r\n        setInputName('');\r\n        setInputPassword('');\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    const handleToggleLogs = useCallback(() => {\r\n        // setIsSelectedLogs(true);\r\n\r\n        // setIsSelectedAddAccount(false);\r\n        // setIsSelectedAccountList(false);\r\n        // setIsSelected3(false);\r\n        // setIsSelected4(false);\r\n\r\n        navigation.navigate(\"LOGS\");\r\n    }, []);\r\n    const handleToggleAddAccount = useCallback(() => {\r\n        // setIsSelectedAddAccount(true);\r\n\r\n        // setIsSelectedLogs(false);\r\n        // setIsSelectedAccountList(false);\r\n        // setIsSelected3(false);\r\n        // setIsSelected4(false);\r\n\r\n        navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n    }, []);\r\n\r\n    const handleToggleAccountList = useCallback(() => {\r\n        // setIsSelectedAccountList(true);\r\n\r\n        // setIsSelectedAddAccount(false);\r\n        // setIsSelected3(false);\r\n        // setIsSelected4(false);\r\n        // setIsSelectedLogs(false);\r\n        navigation.navigate(\"ACCOUNT LIST\");\r\n    }, []);\r\n\r\n    const handleToggleAddVehicle = useCallback(() => {\r\n        // setIsSelected3(true);\r\n\r\n        // setIsSelectedAddAccount(false);\r\n        // setIsSelectedAccountList(false);\r\n        // setIsSelected4(false);\r\n        // setIsSelectedLogs(false);\r\n        navigation.navigate(\"ADD NEW VEHICLE\");\r\n    }, []);\r\n\r\n    const handleVehicleList = useCallback(() => {\r\n        navigation.navigate(\"VEHICLE LIST\");\r\n    }, []);\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n\r\n\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(auth)\r\n                    .then(() => {\r\n                        navigation.navigate('Login');\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(auth)\r\n                .then(() => {\r\n                    navigation.navigate('Login');\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n\r\n\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = auth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const listenForNameChange = (documentId) => {\r\n        const userRef = doc(db, 'accounts', documentId);\r\n\r\n        const unsubscribe = onSnapshot(userRef, (doc) => {\r\n            if (doc.exists()) {\r\n                const name = doc.data().name;\r\n                const type = doc.data().type;\r\n                setName(name);\r\n                setType(type);\r\n                // Perform any necessary actions with the name value\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        });\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n    useEffect(() => {\r\n        getEmailFromDocument('accounts', auth.currentUser?.email);\r\n        // console.log(authEmail, authPassword)\r\n    }, [authEmail, authPassword]);\r\n\r\n    const getEmailFromDocument = async (collectionPath, documentId) => {\r\n        const firestore = getFirestore();\r\n        const documentRef = doc(firestore, collectionPath, documentId);\r\n\r\n        try {\r\n            const documentSnapshot = await getDoc(documentRef);\r\n            if (documentSnapshot.exists()) {\r\n                const email = documentSnapshot.data().email;\r\n                const pass = documentSnapshot.data().pass;\r\n\r\n                setAuthEmail(email);\r\n                setAuthPassword(pass);\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error retrieving email:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const validateEmail = () => {\r\n        // Regular expression for email validation\r\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n        const isValid = emailRegex.test(inputEmail);\r\n\r\n        return isValid;\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(auth).then(() => {\r\n            navigation.navigate('Login');\r\n            setEmail('');\r\n            setName('');\r\n        }).catch((error) => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     const handleScreenResize = () => {\r\n    //         const screenWidth = Dimensions.get('window').width;\r\n    //         setIsMobileView(screenWidth < 1200);\r\n    //     };\r\n\r\n    //     // Initial check on component mount\r\n    //     handleScreenResize();\r\n\r\n    //     // Listen for screen dimension changes\r\n    //     Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n    //     // Cleanup event listener on component unmount\r\n    //     return () => {\r\n    //         Dimensions.removeEventListener('change', handleScreenResize);\r\n    //     };\r\n    // }, []);\r\n\r\n\r\n\r\n    const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleEdit = useCallback((id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputPassword(selectedItem.pass);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setModalVisible(true);\r\n        setSelectedItemType(selectedItem.type);\r\n        setSelectedType(selectedItem.type);\r\n        setSelectedTypeDisplay(selectedItem.typeDisplay);\r\n        setIsEmailDuplicate(false);\r\n        // console.log(selectedItem);\r\n\r\n        if (inputEmailRef.current) {\r\n            inputEmailRef.current.setNativeProps({ text: selectedItem.email });\r\n        }\r\n\r\n        if (inputNameRef.current) {\r\n            inputNameRef.current.setNativeProps({ text: selectedItem.name });\r\n        }\r\n        if (inputPassRef.current) {\r\n            inputPassRef.current.setNativeProps({ text: selectedItem.pass });\r\n        }\r\n    }, [data]);\r\n\r\n\r\n\r\n    const handleInputEmailChange = debounce((value) => {\r\n        setInputEmail(value);\r\n    }, 50);\r\n\r\n    const handleInputNameChange = debounce((value) => {\r\n        setInputName(value);\r\n    }, 50);\r\n\r\n    const handleInputPassChange = debounce((value) => {\r\n        setInputPassword(value);\r\n    }, 50);\r\n\r\n\r\n    const handleOpenDisableModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowDisableModal(true);\r\n    };\r\n\r\n    const handleOpenEnableModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowEnableModal(true);\r\n    };\r\n\r\n    const handleOpenDeleteModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowDeleteModal(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setModalVisible(false);\r\n        setShow(false);\r\n    };\r\n\r\n    const handleCloseDisableModal = () => {\r\n        setShowDisableModal(false);\r\n    };\r\n\r\n    const handleOpenSaveSuccessModal = () => {\r\n        setShowDisableModal(false);\r\n    };\r\n\r\n\r\n    const handleCloseDeleteModal = () => {\r\n        setShowDeleteModal(false);\r\n    };\r\n    const handleCloseEnableModal = () => {\r\n        setShowEnableModal(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [selectedItem]);\r\n    const addLogToCollection = async (data) => {\r\n        try {\r\n            const firestore = getFirestore();\r\n            const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n            // Add a new document to the \"logs\" collection\r\n            await addDoc(logsCollectionRef, data);\r\n\r\n        } catch (error) {\r\n            console.error('Error adding document:', error);\r\n        }\r\n    };\r\n    // useEffect(() => {\r\n    //     const fetchTime = async () => {\r\n    //         try {\r\n    //             const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    //             const { datetime } = response.data;\r\n    //             const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    //             setTime(formattedTime);\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching time:', error);\r\n    //         }\r\n    //     };\r\n\r\n    //     const interval = setInterval(() => {\r\n    //         if (isIntervalActive) {\r\n    //             fetchTime();\r\n    //         }\r\n    //     }, 1000);\r\n\r\n    //     return () => {\r\n    //         clearInterval(interval);\r\n    //     };\r\n    // }, [isIntervalActive]);\r\n\r\n    const openSuccessModal = () => {\r\n        setShowSuccessModal(true);\r\n\r\n    };\r\n\r\n    const closeSuccessModal = () => {\r\n        setShowSuccessModal(false);\r\n        setIsDisabled(false);\r\n        setIsYesLoading(false);\r\n    };\r\n\r\n\r\n    // async function disableUserByUid(uid) {\r\n    //     try {\r\n    //         await updateDisabled(auth, uid, true);\r\n    //         console.log('User account disabled successfully');\r\n    //     } catch (error) {\r\n    //         console.error('Error disabling user account:', error);\r\n    //     }\r\n    // }\r\n\r\n    const handleEnable = useCallback(async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n        try {\r\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n            const updates = {\r\n                active: true,\r\n            };\r\n\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            await updateDoc(itemDocRef, updates);\r\n\r\n            const updatedData = data.map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, active: true };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            setData(updatedData);\r\n            const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            // console.log('Field updated successfully.');\r\n\r\n            const logData = {\r\n                message: `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`.toLowerCase(),\r\n                    'Account Enabled'.toLowerCase(),\r\n                    'Enabled'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n            };\r\n            addLogToCollection(logData);\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n            handleCloseEnableModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n        }\r\n    }, [data]);\r\n\r\n    const deleteDocument = async (collectionPath, customId) => {\r\n        const firestore = getFirestore();\r\n        const documentRef = doc(firestore, collectionPath, customId);\r\n\r\n        try {\r\n            await deleteDoc(documentRef);\r\n            console.log('Document deleted successfully.');\r\n        } catch (error) {\r\n            console.error('Error deleting document:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleDelete = useCallback(async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n\r\n\r\n        try {\r\n\r\n            const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n            const user = userCredential.user;\r\n\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            await deleteUser(user);\r\n            const logData = {\r\n                message: `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`,\r\n                timestamp: formattedTime,\r\n                colorScheme: false,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`.toLowerCase(),\r\n                    'Account Deleted'.toLowerCase(),\r\n                    'Deleted'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n            };\r\n            addLogToCollection(logData);\r\n\r\n\r\n            console.log('Account deleted successfully');\r\n\r\n            const signInCredential = await signInWithEmailAndPassword(\r\n                auth,\r\n                authEmail,\r\n                authPassword\r\n            );\r\n            const signedInUser = signInCredential.user;\r\n            signedInUser\r\n            deleteDocument('accounts', selectedItem.email);\r\n            // setData(updatedData);\r\n            // const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            navigation.navigate('AccountList')\r\n            // console.log('Field updated successfully.');\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n\r\n            handleCloseDeleteModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n        }\r\n    }, [data]);\r\n\r\n    const handleDisable = useCallback(async (id) => {\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n\r\n        try {\r\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n            const updates = {\r\n                active: false,\r\n            };\r\n\r\n            await updateDoc(itemDocRef, updates);\r\n\r\n            const updatedData = data.map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, active: false };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            setData(updatedData);\r\n            const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            // console.log('Field updated successfully.');\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            const logData = {\r\n                message: `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`,\r\n                timestamp: formattedTime,\r\n                colorScheme: false,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`.toLowerCase(),\r\n                    'Account Disabled'.toLowerCase(),\r\n                    'Disabled'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n\r\n            };\r\n            addLogToCollection(logData);\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n            handleCloseDisableModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n            setIsDisabled(false);\r\n            setIsSaveLoading(false);\r\n        }\r\n    }, [data]);\r\n\r\n    // Apply search filter to the data\r\n    const applySearchFilter = (data, searchInputValue) => {\r\n        if (!searchInputValue) {\r\n            return data;\r\n        }\r\n        const filteredData = data.filter((item) =>\r\n            item.email.toLowerCase().includes(searchInputValue.toLowerCase()) ||\r\n            item.name.toLowerCase().includes(searchInputValue.toLowerCase()) ||\r\n            item.typeDisplay.toLowerCase().includes(searchInputValue.toLowerCase())\r\n        );\r\n        return filteredData;\r\n    };\r\n\r\n\r\n\r\n    const handleSave = async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setIsDisabled(true);\r\n        setIsSaveLoading(true);\r\n        if (\r\n            isPasswordLengthLabel() === false ||\r\n            validateEmail() === false ||\r\n            inputName === ''\r\n        ) {\r\n            setTimeout(() => {\r\n                // Reset loading and disabled state\r\n                setIsLoading(false);\r\n                setIsDisabled(false);\r\n            }, 500);\r\n        } else {\r\n\r\n            if (inputEmail === selectedItem.email && inputPassword === selectedItem.pass) {\r\n\r\n\r\n                const documentRef = doc(db, 'accounts', selectedItem.id);\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime(formattedTime);\r\n\r\n                const updatedFields = {\r\n                    name: inputName,\r\n                    type: selectedType,\r\n                    typeDisplay: selectedTypeDisplay,\r\n                    lastUpdatedDate: formattedTime,\r\n                    // Add more fields as needed\r\n\r\n                };\r\n\r\n                try {\r\n\r\n                    await updateDoc(documentRef, updatedFields);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n\r\n\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime(formattedTime);\r\n\r\n                    const logData = {\r\n                        message: `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            selectedItem.email.toLowerCase(),\r\n                            selectedItem.name.toLowerCase(),\r\n                            inputName.toLowerCase(),\r\n                            name.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n                    }\r\n\r\n                    addLogToCollection(logData);\r\n\r\n                    const updatedData = data.map((item) => {\r\n                        if (item.id === id) {\r\n                            item.name = inputName;\r\n                            item.type = selectedType;\r\n                            item.typeDisplay = selectedTypeDisplay;\r\n                            item.lastUpdatedDate = formattedTime;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setData(updatedData);\r\n                    const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n                    setFilteredData(filteredData);\r\n                    // console.log('Field updated successfully.');\r\n                    // console.log('Document successfully updated!');\r\n                    handleCloseModal();\r\n                    setShowSuccessModal(true);\r\n                } catch (error) {\r\n                    console.error('Error updating document:', error);\r\n                }\r\n\r\n            }\r\n\r\n            else if (inputEmail === selectedItem.email && inputPassword !== selectedItem.pass) {\r\n\r\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n                const user = userCredential.user;\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime();\r\n\r\n                try {\r\n                    await updatePassword(user, inputPassword);\r\n\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime();\r\n                    // console.log('Password changed successfully');\r\n                    const userDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n\r\n\r\n                    const updatedFields = {\r\n                        email: inputEmail,\r\n                        name: inputName,\r\n                        type: selectedType,\r\n                        typeDisplay: selectedTypeDisplay,\r\n                        dateOfCreation: selectedItem.dateOfCreation,\r\n                        lastUpdatedDate: formattedTime,\r\n                        pass: inputPassword,\r\n                        active: true,\r\n\r\n                        // Add more fields as needed\r\n                    };\r\n                    // Perform setDoc operation\r\n                    await setDoc(userDocRef, updatedFields);\r\n\r\n                    const signInCredential = await signInWithEmailAndPassword(\r\n                        auth,\r\n                        authEmail,\r\n                        authPassword\r\n                    );\r\n\r\n                    const signedInUser = signInCredential.user;\r\n                    signedInUser\r\n\r\n\r\n                    // console.log(authEmail, authPassword);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n\r\n                    setTime(formattedTime);\r\n\r\n                    const logData = {\r\n                        message: `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`.toLowerCase(),\r\n                            'Password Changed'.toLowerCase(),\r\n                            'Password'.toLowerCase(),\r\n                            selectedItem.email.toLowerCase(),\r\n                            selectedItem.name.toLowerCase(),\r\n                            name.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n\r\n                    const updatedItem = {\r\n                        ...selectedItem,\r\n                        email: inputEmail,\r\n                        name: inputName,\r\n                        type: selectedType,\r\n                        typeDisplay: selectedTypeDisplay,\r\n                        lastUpdatedDate: formattedTime,\r\n                    };\r\n\r\n                    const updatedData = data.map((item) => {\r\n                        if (item.id === id) {\r\n                            item.name = inputName;\r\n                            item.type = selectedType;\r\n                            item.typeDisplay = selectedTypeDisplay;\r\n                            item.lastUpdatedDate = formattedTime;\r\n                            item.pass = inputPassword;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setData(updatedData);\r\n                    const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\r\n                    setFilteredData(filteredData);\r\n                    // console.log('Document set successfully');\r\n                    handleCloseModal();\r\n                    setShowSuccessModal(true);\r\n                } catch (error) {\r\n                    console.error('Error:', error);\r\n                }\r\n\r\n            }\r\n\r\n            else if (inputEmail !== selectedItem.email) {\r\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n                const user = userCredential.user;\r\n\r\n\r\n                // updateEmail(user, inputEmail)\r\n                //     .then(async () => {\r\n                //         // Email change successful\r\n                //         setIsDisabled(false);\r\n                //         setIsSaveLoading(false);\r\n                //         const documentRef = doc(db, 'accounts', selectedItem.email);\r\n\r\n                const oldDocumentRef = doc(db, 'accounts', selectedItem.email);\r\n                const newDocumentRef = doc(db, 'accounts', inputEmail);\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime(formattedTime);\r\n\r\n                try {\r\n                    // Get the data from the old document\r\n                    const documentSnapshot = await getDoc(oldDocumentRef);\r\n                    if (documentSnapshot.exists()) {\r\n                        const documentData = documentSnapshot.data();\r\n\r\n                        // Merge the updated fields with the existing document data\r\n\r\n                        // Create the new document with the desired ID and copy the merged data\r\n\r\n                        const updatedFields = {\r\n                            email: inputEmail,\r\n                            name: inputName,\r\n                            type: selectedType,\r\n                            typeDisplay: selectedTypeDisplay,\r\n                            dateOfCreation: selectedItem.dateOfCreation,\r\n                            lastUpdatedDate: formattedTime,\r\n                            pass: inputPassword,\r\n                            active: true,\r\n\r\n                            // Add more fields as needed\r\n                        };\r\n\r\n                        await setDoc(newDocumentRef, updatedFields);\r\n                        await deleteDoc(oldDocumentRef);\r\n                        // Optionally, delete the old document\r\n\r\n                        try {\r\n                            const userCredential = await createUserWithEmailAndPassword(auth, inputEmail, inputPassword);\r\n                            // console.log('User created successfully:', userCredential.user);\r\n\r\n                            setIsDisabled(false);\r\n                            setIsSaveLoading(false);\r\n\r\n                            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                            const { datetime } = response.data;\r\n                            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                            const year = moment(datetime).format('YYYY');\r\n                            const month = moment(datetime).format('MM');\r\n                            const monthWithDay = moment(datetime).format('MM/DD');\r\n                            const date = moment(datetime).format('YYYY/MM/DD');\r\n                            const day = moment(datetime).format('DD');\r\n                            const time = moment(datetime).format('HH:mm');\r\n                            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                            setTime(formattedTime);\r\n\r\n                            const logData = {\r\n                                message: `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`,\r\n                                timestamp: formattedTime,\r\n                                colorScheme: true,\r\n                                keywords: [\r\n                                    formattedTime.toLowerCase(),\r\n                                    `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`.toLowerCase(),\r\n                                    'Updated'.toLowerCase(),\r\n                                    'Email'.toLowerCase(),\r\n                                    selectedItem.email.toLowerCase(),\r\n                                    selectedItem.name.toLowerCase(),\r\n                                    inputEmail.toLowerCase(),\r\n                                    monthWithDay.toLowerCase(),\r\n                                    name.toLowerCase(),\r\n                                    year.toLowerCase(),\r\n                                    month.toLowerCase(),\r\n                                    day.toLowerCase(),\r\n                                    date.toLowerCase(),\r\n                                    time.toLowerCase(),\r\n                                    timeWithMinutesSeconds.toLowerCase(),\r\n                                ],\r\n                            }\r\n                            try {\r\n                                await deleteUser(user);\r\n                                // console.log('User authentication record deleted successfully.');\r\n\r\n\r\n\r\n                                setIsDisabled(false);\r\n                                setIsSaveLoading(false);\r\n\r\n                                const signInCredential = await signInWithEmailAndPassword(\r\n                                    auth,\r\n                                    authEmail,\r\n                                    authPassword\r\n                                );\r\n\r\n                                const signedInUser = signInCredential.user;\r\n                                signedInUser\r\n\r\n                                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                                const { datetime } = response.data;\r\n                                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                                setTime(formattedTime);\r\n\r\n                                const updatedItem = {\r\n                                    ...selectedItem,\r\n                                    email: inputEmail,\r\n                                    name: inputName,\r\n                                    type: selectedType,\r\n                                    typeDisplay: selectedTypeDisplay,\r\n                                    lastUpdatedDate: formattedTime,\r\n                                };\r\n\r\n                                const updatedData = data.map((item) =>\r\n                                    item.id === id ? updatedItem : item\r\n                                );\r\n                                setData(updatedData);\r\n                                const filteredData = applySearchFilter(updatedData, searchInputValue);\r\n                                setFilteredData(filteredData);\r\n                                // console.log(authEmail, authPassword);\r\n\r\n\r\n                            } catch (error) {\r\n                                console.error('Error deleting user authentication record:', error);\r\n                            }\r\n\r\n                            addLogToCollection(logData);\r\n                            handleCloseModal();\r\n                            setShowSuccessModal(true);\r\n\r\n                            // console.log('Document ID successfully changed!');\r\n                        } catch (error) {\r\n                            console.error('Error creating user:', error);\r\n                        }\r\n                    } else {\r\n                        console.error('Old document does not exist!');\r\n                    }\r\n\r\n                } catch (error) {\r\n                    console.error('Error changing document ID:', error);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n                }\r\n\r\n\r\n                // })\r\n                // .catch((error) => {\r\n                //     console.error('Error changing email:', error);\r\n                // });\r\n            }\r\n\r\n\r\n\r\n\r\n            else {\r\n                try {\r\n                    const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\r\n                    if (signInMethods.length > 0) {\r\n                        // Email already exists                        \r\n                        setIsDisabled(false);\r\n                        setIsSaveLoading(false);\r\n                        setIsEmailDuplicate(true);\r\n                        setEmailError(false);\r\n                        validateEmail(false);\r\n\r\n                        return;\r\n                    }\r\n\r\n\r\n                } catch (error) {\r\n                    const errorCode = error.code;\r\n                    const errorMessage = error.message;\r\n                    console.log('An error occurred while checking the email existence. Please try again later.');\r\n                    // console.log(errorCode, errorMessage);\r\n                    setIsLoading(false);\r\n                    setIsDisabled(false);\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n    };\r\n\r\n    const handleChangeEmailText = (text) => {\r\n        setInputEmail(text);\r\n    };\r\n\r\n\r\n\r\n    const isPasswordLengthLabel = () => {\r\n        return inputPassword.length >= 6;\r\n    };\r\n    // const handlePasswordChange = _.debounce((value) => {\r\n    //     setInputPassword(value);\r\n    // }, 50);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc'));\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                    setData(documents);\r\n                });\r\n\r\n                return () => unsubscribe();\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter(\r\n            (item) =>\r\n                item.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                item.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                item.typeDisplay.toLowerCase().includes(searchQuery.toLowerCase())\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce((text) => {\r\n        setSearchQuery(text);\r\n    }, 300);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    const showPopover = () => {\r\n        setShowNamePopover(true);\r\n    };\r\n\r\n    // Function to hide the Popover\r\n    const hidePopover = () => {\r\n        setShowNamePopover(false);\r\n    };\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n    return (\r\n        <NativeBaseProvider>\r\n\r\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#7b9cff'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={2}\r\n                    borderBottomColor={'cyan.500'}\r\n\r\n                >\r\n\r\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: logo,\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    {showDrawerIcon && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    />}\r\n\r\n\r\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: logo2,\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n                    {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                        <Flex direction=\"row-reverse\">\r\n                            <Popover isOpen={showNamePopover} trigger={triggerProps => {\r\n                                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                    <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                                </Text>;\r\n                            }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\r\n                                <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                                    <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                        <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                            Logout\r\n                                        </Button>\r\n                                    </Popover.Body>\r\n                                </Popover.Content>\r\n                            </Popover>\r\n                        </Flex>\r\n                    </Box> */}\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <Box flex={[1]} flexDirection=\"row\" >\r\n                    {/* Sidebar */}\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    />\r\n\r\n                    {/* Main Content */}\r\n                    <Box flex={1} flexGrow={1} minHeight={0}>\r\n                        {/* Main Content Content */}\r\n                        <Input ref={searchInput} onChangeText={handleSearch} placeholder=\"Search\" bgColor={'white'} />\r\n                        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n                            <Box height={'100%'}>\r\n\r\n                                <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                                    <Box borderWidth={1} borderColor=\"gray.200\" borderRadius={4} overflow=\"hidden\" display={['none', 'none', 'none', '', '', '']}>\r\n                                        <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor={'#0642F4'} >\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Email</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Name</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Type of Account</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Date of Creation</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Last Updated</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Status</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Operate</Text>\r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <PresenceTransition visible={true} initial={{\r\n                                        opacity: 0\r\n                                    }} animate={{\r\n                                        opacity: 1,\r\n                                        transition: {\r\n                                            duration: 250\r\n                                        }\r\n                                    }}>\r\n                                        {paginatedData.map((item) => (\r\n                                            <Box key={item.id} margin={[2, 2, 2, 0, 0, 0]} flexDirection={['column', 'column', 'column', 'row', 'row', 'row']} bgColor={item.active ? 'blue.200' : 'amber.500'} borderColor={'gray.200'} borderWidth={[2, 2, 2, 1, 1, 1]} paddingBottom={1} marginRight={0}>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Email</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.email}</Text>\r\n\r\n\r\n                                                    </Box>\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Name</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.name}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}  > Type of Account</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.typeDisplay}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Date of Creation</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.dateOfCreation}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Last Updated</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.lastUpdatedDate}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Status</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.active ? 'Enabled' : 'Disabled'}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Operate</Text>\r\n                                                        </Box>\r\n                                                        <HStack space={1} flex={[5, 5, 5, 1, 1, 1]}>\r\n                                                            <Button\r\n                                                                onPress={() => handleEdit(item.id)}\r\n                                                                flex={[1, 1, 1, 2, 2, 2]}\r\n                                                                padding={1}\r\n                                                                justifyContent='center'\r\n                                                                alignItems='center'\r\n                                                                flexDirection='row'>\r\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Edit</Text>\r\n                                                                <Icon as={<MaterialIcons name={\"edit\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                            </Button>\r\n                                                            {item.active ? (\r\n                                                                <Button onPress={() => handleOpenDisableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'amber'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Disable</Text>\r\n                                                                    <Icon as={<MaterialIcons name={\"block\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                                </Button>\r\n                                                            ) : (\r\n                                                                <Button onPress={() => handleOpenEnableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'success'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Enable</Text>\r\n                                                                    <Icon as={<MaterialIcons name={\"check-circle\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                                </Button>\r\n                                                            )}\r\n                                                            <Button onPress={() => handleOpenDeleteModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'error'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Delete</Text>\r\n                                                                <Icon as={<MaterialIcons name={\"delete\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                            </Button>\r\n                                                        </HStack>\r\n                                                    </Box>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n\r\n                                        ))}\r\n                                    </PresenceTransition>\r\n                                    <DataTable.Pagination\r\n                                        page={page}\r\n                                        numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                        onPageChange={(page) => setPage(page)}\r\n                                        label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                        optionsPerPage={optionsPerPage}\r\n                                        itemsPerPage={itemsPerPage}\r\n                                        setItemsPerPage={setItemsPerPage}\r\n                                        showFastPagination\r\n                                        optionsLabel={'Rows per page'}\r\n                                    />\r\n                                </DataTable>\r\n                            </Box>\r\n                            <Modal isOpen={modalVisible} onClose={handleCloseModal}>\r\n                                <Modal.Content>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header borderBottomWidth={0}>Edit Acccount</Modal.Header>\r\n                                    <Modal.Body>\r\n\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <VStack><Text>Email: </Text> <Input color={!isEmailDuplicate ? 'black' : 'red.500'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputEmail} ref={inputEmailRef} onChangeText={handleInputEmailChange} /></VStack>\r\n                                                {!validateEmail() && (\r\n                                                    <Text color={'#D22730'} bold>Invalid Email!</Text>\r\n                                                )}\r\n                                                {isEmailDuplicate && (\r\n                                                    <Text color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\r\n                                                )}\r\n                                                <VStack><Text>Name: </Text> <Input borderBottomColor={inputName !== '' ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputName} ref={inputNameRef} onChangeText={handleInputNameChange} /></VStack>\r\n                                                {inputName === '' && (\r\n                                                    <Text color={'#D22730'} bold>Empty Name!</Text>\r\n                                                )}\r\n                                                <VStack><Text>Password: </Text>\r\n                                                    <Input borderBottomColor={isPasswordLengthLabel() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputPassword} ref={inputPassRef} onChangeText={handleInputPassChange} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\r\n                                                        <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" />\r\n                                                    </Pressable>} />\r\n                                                </VStack>\r\n\r\n                                                <VStack><Text>Type of Account:</Text>\r\n                                                    <HStack space={1} justifyContent=\"center\" >\r\n                                                        <Button _hover={{ bgColor: 'booking' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountType4} bgColor={'booking' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Booking</Text></Button>\r\n\r\n                                                        <Button _hover={{ bgColor: 'staff' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountType3} bgColor={'staff' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Staff</Text></Button>\r\n\r\n                                                        <Button _hover={{ bgColor: 'admin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeAd} bgColor={'admin' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Admin</Text></Button>\r\n\r\n\r\n\r\n                                                    </HStack>\r\n                                                    <HStack space={1} justifyContent=\"center\" marginTop={1}>\r\n                                                        <Button _hover={{ bgColor: 'superadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeSpAd} bgColor={'superadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Super Admin</Text></Button>\r\n                                                        <Button _hover={{ bgColor: 'devadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeDevAd} bgColor={'devadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Dev Admin</Text></Button>\r\n                                                    </HStack>\r\n                                                </VStack>\r\n\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseModal} flex={1} padding={1} margin={1}>Close</Button>\r\n                                        <Button onPress={() => handleSave(selectedItem.id)} disabled={isDisabled} flex={1} padding={1} colorScheme={'success'} margin={1}>{isSaveLoading ? <Spinner color=\"white\" size={21} /> : 'Save'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={showDisableModal} onClose={handleCloseDisableModal}>\r\n                                <Modal.Content bgColor={'amber.500'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'amber.500'} borderBottomWidth={0} _text={{ color: 'white', }}>Disable Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'amber.500'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text color={'white'}>Email: {selectedItem.email}</Text>\r\n                                                <Text color={'white'}>Name: {selectedItem.name}</Text>\r\n                                                <Text color={'white'}>Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'amber.500'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleDisable(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={showDeleteModal} onClose={handleCloseDeleteModal}>\r\n                                <Modal.Content bgColor={'error.300'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'error.300'} borderBottomWidth={0} >Delete Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'error.300'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text >Email: {selectedItem.email}</Text>\r\n                                                <Text >Name: {selectedItem.name}</Text>\r\n                                                <Text >Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'error.300'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleDelete(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n\r\n                            <Modal isOpen={showEnableModal} onClose={handleCloseEnableModal}>\r\n                                <Modal.Content bgColor={'success.200'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'success.200'} borderBottomWidth={0}>Enable Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'success.200'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text>Email: {selectedItem.email}</Text>\r\n                                                <Text>Name: {selectedItem.name}</Text>\r\n                                                <Text>Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'success.200'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseEnableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleEnable(selectedItem.id)} colorScheme={'success'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                            <Modal isOpen={showSuccessModal} onClose={() => setShowSuccessModal(false)} size=\"lg\"  >\r\n                                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n                                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n                                    <Modal.Body >\r\n                                        <Text color=\"white\" textAlign={'center'}>The account update was successful.</Text>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n                                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowSuccessModal(false)}>\r\n                                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                        </ScrollView>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  PresenceTransition,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Title,\r\n  Content,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  VStack,\r\n  ScrollView,\r\n  SectionList,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Modal,\r\n  Divider,\r\n  Popover\r\n} from \"native-base\";\r\nimport {\r\n  FontAwesome,\r\n  Entypo,\r\n  MaterialIcons,\r\n  Ionicons,\r\n  Fontisto,\r\n  EvilIcons,\r\n  AntDesign,\r\n  MaterialCommunityIcons,\r\n  Feather,\r\n  FontAwesome5Brands,\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './../style.css';\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport { setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nlet selectedScreen = 'ADD C-HUB ACCOUNT'\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AddAccount() {\r\n  const dispatch = useDispatch();\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const [isMobileView, setIsMobileView] = useState(false);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [show2, setShow2] = React.useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n  const [isSelectedLogs, setIsSelectedLogs] = useState(false);\r\n  const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(true);\r\n  const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\r\n  const [isSelected3, setIsSelected3] = useState(false);\r\n  const [isSelected4, setIsSelected4] = useState(false);\r\n\r\n  const [accountTypeSpAd, setAccountTypeSpAd] = useState(false);\r\n  const [accountTypeDevAd, setAccountTypeDevAd] = useState(false);\r\n  const [accountTypeAd, setAccountTypeAd] = useState(false);\r\n  const [accountType3, setAccountType3] = useState(false);\r\n  const [accountType4, setAccountType4] = useState(false);\r\n\r\n\r\n  const [nameVerify, setNameVerify] = useState(false);\r\n  const [emailVerify, setEmailVerify] = useState(false);\r\n  const [passwordVerify, setPasswordVerify] = useState(false);\r\n  const [confirmPasswordVerify, setConfirmPasswordVerify] = useState(false);\r\n  const [accountTypeVerify, setAccountTypeVerify] = useState(false);\r\n  const [isEmailDuplicate, setIsEmailDuplicate] = useState(false);\r\n  const [emailError, setEmailError] = useState(false);\r\n  // const [inputName, setInputName] = useState('');\r\n  // const [inputEmail, setInputEmail] = useState('');\r\n  // const [inputPassword, setInputPassword] = useState('');\r\n  // const [inputConfirmPassword, setInputConfirmPassword] = useState('');\r\n  const [typeOfAccount, setTypeOfAccount] = useState('');\r\n  const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const inputRefs = useRef([]);\r\n\r\n\r\n  const inputName = useRef(null);\r\n  const inputEmail = useRef(null);\r\n  const inputPassword = useRef(null);\r\n  const inputConfirmPassword = useRef(null);\r\n\r\n  const [passwordMatch, setPasswordMatch] = useState(false);\r\n  const [passwordMatchLabel, setPasswordMatchLabel] = useState(true);\r\n  const [passwordLengthLabel, setPasswordLengthLabel] = useState(false);\r\n  const [isNameEmpty, setIsNameEmpty] = useState(true);\r\n\r\n  const [formattedTime, setFormattedTime] = useState('');\r\n\r\n  const [time, setTime] = useState('');\r\n  const fetchTimeRef = useRef();\r\n  const [isIntervalActive, setIsIntervalActive] = useState(true);\r\n\r\n  const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n  }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\r\n\r\n\r\n\r\n\r\n  const SuccessModal = () => {\r\n    return <Center>\r\n      <Modal isOpen={showModal} onClose={closeModal} size=\"lg\"  >\r\n        <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n          <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n          <Modal.Body >\r\n\r\n            <Text textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\r\n          </Modal.Body>\r\n          <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n            <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={closeModal} _text={{ color: 'black', }}>\r\n              Ok\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </Center>;\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n  }, [typeOfAccount]);\r\n\r\n  const handleToggleAccountTypeSpAd = () => {\r\n    const text = 'superadmin';\r\n    setAccountTypeSpAd(true);\r\n\r\n    setAccountTypeDevAd(false);\r\n    setAccountTypeAd(false);\r\n    setAccountType3(false);\r\n    setAccountType4(false);\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Super Admin');\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (!user) {\r\n        navigation.navigate(\"Login\")\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const firebaseFirestore = getFirestore();\r\n\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const firestore = getFirestore();\r\n      const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const fetchTime = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n  //       const { datetime } = response.data;\r\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n  //       setTime(formattedTime);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching time:', error);\r\n  //     }\r\n  //   };\r\n  //   const interval = setInterval(fetchTime, 1000);\r\n  //   return () => clearInterval(interval);\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   const fetchTime = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n  //       const { datetime } = response.data;\r\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n  //       setTime(formattedTime);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching time:', error);\r\n  //     }\r\n  //   };\r\n\r\n  //   const interval = setInterval(() => {\r\n  //     if (isIntervalActive) {\r\n  //       fetchTime();\r\n  //     }\r\n  //   }, 1000);\r\n\r\n  //   return () => {\r\n  //     clearInterval(interval);\r\n  //   };\r\n  // }, [isIntervalActive]);\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n    setIsIntervalActive(false); // Pause the interval when the modal is opened\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setIsIntervalActive(true); // Resume the interval when the modal is closed\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleAddAccount = async () => {\r\n    setIsDisabled(true);\r\n    setIsLoading(true);\r\n    if (\r\n      passwordLengthLabel === false ||\r\n      passwordMatch === false ||\r\n      passwordMatchLabel === false ||\r\n      validateEmail() === false ||\r\n      isNameEmpty === true ||\r\n      isAccountType() === false\r\n    ) {\r\n      setTimeout(() => {\r\n        // Reset loading and disabled state\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n      }, 500);\r\n    } else {\r\n      try {\r\n        const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail.current?.value);\r\n        if (signInMethods.length > 0) {\r\n          // Email already exists\r\n          setIsEmailDuplicate(true);\r\n          setEmailError(false);\r\n          validateEmail(false);\r\n          setIsLoading(false);\r\n          setIsDisabled(false);\r\n          return;\r\n        }\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        await createUserWithEmailAndPassword(authForCreateUser, inputEmail.current.value, inputPassword.current.value)\r\n          .then((userCredential) => {\r\n\r\n            const user = userCredential.user;\r\n\r\n\r\n\r\n            try {\r\n\r\n              // setTime(formattedTime);\r\n\r\n              const customID = inputEmail.current.value; // Replace 'your-custom-id' with your desired custom ID\r\n              const docRef = doc(db, 'accounts', customID); // Replace 'myCollection' with the name of your desired collection\r\n              const logData = {\r\n                message: `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`,\r\n                timestamp: formattedTime,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`.toLowerCase(),\r\n                  'Account Added'.toLowerCase(),\r\n                  'Added'.toLowerCase(),\r\n                  inputName.current.value.toLowerCase(),\r\n                  typeOfAccountDisplay.toLowerCase(),\r\n                  name.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n                colorScheme: true,\r\n              };\r\n\r\n              setDoc(docRef, {\r\n                // Specify the data you want to add to the document\r\n                email: inputEmail.current?.value,\r\n                name: inputName.current?.value,\r\n                pass: inputPassword.current?.value,\r\n                type: typeOfAccount,\r\n                typeDisplay: typeOfAccountDisplay,\r\n                dateOfCreation: formattedTime,\r\n                lastUpdatedDate: formattedTime,\r\n                active: true,\r\n                // ...\r\n              });\r\n\r\n              addLogToCollection(logData);\r\n              console.log(logData);\r\n              console.log(formattedTime);\r\n              setIsLoading(false);\r\n              setIsDisabled(false);\r\n              handleClear();\r\n              openModal();\r\n\r\n              console.log('Document added with custom ID: ', customID);\r\n            } catch (error) {\r\n              console.error('Error adding document: ', error);\r\n            }\r\n\r\n\r\n\r\n\r\n            // Reset loading and disabled state\r\n\r\n\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.log('An error occurred during sign-up. Please try again later.');\r\n            console.log(error);\r\n            setIsLoading(false);\r\n            setIsDisabled(false);\r\n          });\r\n      } catch (error) {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log('An error occurred while checking the email existence. Please try again later.');\r\n        // console.log(errorCode, errorMessage);\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    const text = '';\r\n\r\n    inputName.current.value = \"\";\r\n    inputEmail.current.value = \"\";\r\n    inputPassword.current.value = \"\";\r\n    inputConfirmPassword.current.value = \"\";\r\n    setAccountTypeAd(false);\r\n    setAccountTypeSpAd(false);\r\n    setAccountTypeDevAd(false);\r\n    setAccountType3(false);\r\n    setAccountType4(false);\r\n    setEmailError(false);\r\n    setIsEmailDuplicate(false);\r\n    setIsNameEmpty(true);\r\n\r\n    setPasswordLengthLabel(false);\r\n    setPasswordMatch(false);\r\n    setPasswordMatchLabel(true);\r\n\r\n\r\n    // setInputConfirmPassword('');\r\n    // setInputEmail('');\r\n    // setInputName('');\r\n    // setInputPassword('');\r\n\r\n\r\n  };\r\n\r\n  const registerInputRef = (index) => (ref) => {\r\n    inputRefs.current[index] = ref;\r\n  };\r\n\r\n  const handleToggleAccountTypeAd = () => {\r\n    const text = 'admin';\r\n    setAccountTypeAd(true);\r\n    setAccountTypeSpAd(false);\r\n    setAccountTypeDevAd(false);\r\n    setAccountType3(false);\r\n    setAccountType4(false);\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Admin');\r\n  };\r\n\r\n  const handleToggleAccountTypeDevAd = () => {\r\n    const text = 'devadmin';\r\n    setAccountTypeDevAd(true);\r\n\r\n    setAccountTypeAd(false);\r\n    setAccountTypeSpAd(false);\r\n    setAccountType3(false);\r\n    setAccountType4(false);\r\n    setTypeOfAccountDisplay('Developer Admin');\r\n\r\n    setTypeOfAccount(text);\r\n\r\n  };\r\n\r\n  const handleToggleAccountType3 = () => {\r\n    const text = 'staff';\r\n    setAccountType3(true);\r\n    setAccountTypeDevAd(false);\r\n    setAccountTypeAd(false);\r\n    setAccountTypeSpAd(false);\r\n    setAccountType4(false);\r\n\r\n    setTypeOfAccount(text);\r\n\r\n    setTypeOfAccountDisplay('Staff');\r\n  };\r\n\r\n  const handleToggleAccountType4 = () => {\r\n    const text = 'booking';\r\n    setAccountType4(true);\r\n    setAccountType3(false);\r\n    setAccountTypeDevAd(false);\r\n    setAccountTypeAd(false);\r\n    setAccountTypeSpAd(false);\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Booking');\r\n  };\r\n\r\n  const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"LOGS\");\r\n  }, []);\r\n\r\n  const handleToggleAddAccount = useCallback(() => {\r\n\r\n    navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  }, []);\r\n\r\n  const handleToggleAccountList = useCallback(() => {\r\n\r\n    navigation.navigate(\"ACCOUNT LIST\");\r\n  }, []);\r\n\r\n  const handleToggleAddVehicle = useCallback(() => {\r\n\r\n    navigation.navigate(\"ADD NEW VEHICLE\");\r\n  }, []);\r\n\r\n  const handleVehicleList = useCallback(() => {\r\n    navigation.navigate(\"VEHICLE LIST\");\r\n  }, []);\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            navigation.navigate('Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          navigation.navigate('Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n      listenForNameChange(documentId);\r\n    }\r\n  }, []);\r\n\r\n  const listenForNameChange = (documentId) => {\r\n    const userRef = doc(db, 'accounts', documentId);\r\n\r\n    const unsubscribe = onSnapshot(userRef, (doc) => {\r\n      if (doc.exists()) {\r\n        const name = doc.data().name;\r\n        const type = doc.data().type;\r\n        setName(name);\r\n        setType(type);\r\n        // Perform any necessary actions with the name value\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    });\r\n\r\n    // To stop listening for updates, you can call unsubscribe()\r\n    // unsubscribe();\r\n  };\r\n\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handlePasswordChange = () => {\r\n    // const inputPasswordValue = inputPassword.current?.value;\r\n    // const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    // const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    // setPasswordMatch(\r\n    //   inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    // );\r\n    // setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n    // setPasswordLengthLabel(inputPasswordValueLength >= 6);\r\n    handlePasswordStatus();\r\n  };\r\n\r\n  const handleConfirmPasswordChange = () => {\r\n    const inputPasswordValue = inputPassword.current?.value;\r\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    setPasswordMatch(\r\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    );\r\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n  };\r\n\r\n\r\n  const handlePasswordStatus = () => {\r\n    const inputPasswordValue = inputPassword.current?.value;\r\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    setPasswordMatch(\r\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    );\r\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n    setPasswordLengthLabel(inputPasswordValueLength >= 6);\r\n\r\n  };\r\n\r\n  // const isPasswordMatch = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n  //   return (\r\n  //     inputPasswordValue === inputConfirmPasswordValue &&\r\n  //     inputPasswordValueLength >= 6\r\n  //   );\r\n  // };\r\n\r\n  const isAccountType = () => {\r\n    return accountTypeDevAd || accountTypeSpAd || accountTypeAd || accountType3 || accountType4 === true;\r\n  };\r\n\r\n  // const isPasswordMatchLabel = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n  //   return inputPassword.current?.value === inputConfirmPassword.current?.value;\r\n  // };\r\n\r\n  // const isPasswordLengthLabel = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n  //   return inputPasswordValueLength >= 6;\r\n  // };\r\n\r\n\r\n  const handleEmailChange = () => {\r\n    setIsEmailDuplicate(false);\r\n    handleEmailSubmit();\r\n  };\r\n\r\n  const handleNameChange = () => {\r\n    setIsNameEmpty(inputName.current?.value === '')\r\n  };\r\n\r\n\r\n  const validateEmail = () => {\r\n    const emailValue = inputEmail.current?.value;\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    const isValid = emailRegex.test(emailValue);\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleEmailSubmit = (value) => {\r\n    setEmailError(validateEmail(value));\r\n\r\n    if (emailError) {\r\n      // console.log(emailError);\r\n      // setEmailError(validateEmail());\r\n    } else {\r\n\r\n    }\r\n  };\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(auth).then(() => {\r\n      navigation.navigate('Login');\r\n      setEmail('');\r\n      setName('');\r\n    }).catch((error) => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const handleScreenResize = () => {\r\n  //     const screenWidth = Dimensions.get('window').width;\r\n  //     setIsMobileView(screenWidth < 1200);\r\n  //   };\r\n\r\n  //   // Initial check on component mount\r\n  //   handleScreenResize();\r\n\r\n  //   // Listen for screen dimension changes\r\n  //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n  //   // Cleanup event listener on component unmount\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleScreenResize);\r\n  //   };\r\n  // }, []);\r\n\r\n  const sidebarListData = [{\r\n    title: \"VEHICLE INFORMATION INPUT\",\r\n    data: [\"Add New Vehicle\", \"Vehicle List\",]\r\n  },];\r\n\r\n  const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n  const showPopover = () => {\r\n    setShowNamePopover(true);\r\n  };\r\n\r\n  // Function to hide the Popover\r\n  const hidePopover = () => {\r\n    setShowNamePopover(false);\r\n  };\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#7B9CFF'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n  return (\r\n    <NativeBaseProvider>\r\n      <SuccessModal />\r\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#7b9cff'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={2}\r\n          borderBottomColor={'cyan.500'}\r\n\r\n        >\r\n\r\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          {showDrawerIcon && <MobileViewDrawer\r\n            selectedScreen={selectedScreen}\r\n          />}\r\n\r\n\r\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n            <FastImage\r\n              source={{\r\n                uri: logo2,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <Box flex={[1]} flexDirection=\"row\" >\r\n          {/* Sidebar */}\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen}\r\n          />\r\n\r\n          {/* Main Content */}\r\n          <Box flex={1} flexGrow={1} minHeight={0}>\r\n            {/* Main Content Content */}\r\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n\r\n              {/* <AddAccount/> */}\r\n\r\n              <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" >\r\n\r\n\r\n                <Box bgColor='#A6BCFE' w='100%' h='100%' margin={1}>\r\n                  <Center flex={1}>\r\n                    <Center px=\"3\">\r\n\r\n\r\n                      <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n                        <Text marginTop={5} marginBottom={1} fontSize={[12, 14, 16]} color={'white'} bold={'center'}>ADD ACCOUNT FOR REAL MOTOR JAPAN CONTROL HUB</Text>\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputName} onSubmitEditing={handleAddAccount} onChangeText={handleNameChange} borderColor={'white'} borderBottomColor={!isNameEmpty ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<AntDesign name=\"idcard\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Name\" placeholderTextColor='white' color='white' />\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputEmail} onChangeText={handleEmailChange} onSubmitEditing={handleAddAccount} color={!isEmailDuplicate ? 'white' : 'red.500'} borderColor={'white'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' />\r\n\r\n\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordLengthLabel ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handlePasswordChange} fontSize='16' borderColor={'white'} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\r\n                          <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n                        </Pressable>} placeholder=\"Password\" placeholderTextColor='gray' color='white' />\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputConfirmPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordMatch ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handleConfirmPasswordChange} fontSize='16' borderColor={'white'} type={show2 ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show2 ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow2(!show2)}>\r\n                          <Icon as={<MaterialIcons name={show2 ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n                        </Pressable>} placeholder=\"Confirm Password\" placeholderTextColor='white' color='white' />\r\n                        {!validateEmail() && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Invalid Email!</Text>\r\n                        )}\r\n                        {isEmailDuplicate && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\r\n                        )}\r\n                        {!passwordLengthLabel && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Password must be at least 6 characters or above!</Text>\r\n                        )}\r\n                        {!passwordMatchLabel && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Passwords do not match!</Text>\r\n                        )}\r\n\r\n                        <Text fontSize={16} color={'white'} bold>ACCOUNT TYPE:                                                             </Text>\r\n                        <Box borderColor={isAccountType() ? 'green.300' : 'red.500'} borderWidth={2}>\r\n                          <HStack space={1} justifyContent=\"center\" >\r\n                            <Button _hover={{ bgColor: accountType4 ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                              base: 90,\r\n                              md: 90,\r\n                              sm: 90,\r\n                            }} onPress={handleToggleAccountType4} bgColor={accountType4 ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Booking</Text></Button>\r\n                            <Button _hover={{ bgColor: accountType3 ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                              base: 90,\r\n                              md: 90,\r\n                              sm: 90,\r\n                            }} onPress={handleToggleAccountType3} bgColor={accountType3 ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Staff</Text></Button>\r\n                            <Button _hover={{ bgColor: accountTypeAd ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                              base: 90,\r\n                              md: 90,\r\n                              sm: 90,\r\n                            }} onPress={handleToggleAccountTypeAd} bgColor={accountTypeAd ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Admin</Text></Button>\r\n                            <Button _hover={{ bgColor: accountTypeSpAd ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                              base: 90,\r\n                              md: 90,\r\n                              sm: 90,\r\n                            }} onPress={handleToggleAccountTypeSpAd} bgColor={accountTypeSpAd ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Super Admin</Text></Button>\r\n\r\n                          </HStack>\r\n                          <HStack space={1} justifyContent=\"center\" marginTop={1}>\r\n                            <Button _hover={{ bgColor: accountTypeDevAd ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                              base: 90,\r\n                              md: 90,\r\n                              sm: 90,\r\n                            }} onPress={handleToggleAccountTypeDevAd} bgColor={accountTypeDevAd ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Dev Admin</Text></Button>\r\n                          </HStack>\r\n                        </Box>\r\n                        <HStack space={1} justifyContent=\"center\" marginBottom={5}>\r\n                          <Button _hover={{ bgColor: '#D9D9D9', }} _pressed={{ bgColor: '#D9D9D9', }} _focus={{ bgColor: '#D9D9D9', }} bgColor='warmGray.200' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                            base: 130,\r\n                            md: 130,\r\n                            sm: 130,\r\n                          }} onPress={handleClear} ><Text style={{ color: 'gray', }}>Clear</Text></Button>\r\n                          <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                            base: 130,\r\n                            md: 130,\r\n                            sm: 130,\r\n                          }} onPress={handleAddAccount} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Add Acccount</Text>}</Button>\r\n\r\n                        </HStack>\r\n\r\n\r\n                      </Stack>\r\n\r\n                    </Center>\r\n\r\n\r\n                  </Center>\r\n\r\n\r\n                </Box>\r\n\r\n              </Box>\r\n\r\n            </ScrollView>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </NativeBaseProvider>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  Image as NativeImage,\r\n  Input,\r\n  Modal,\r\n  NativeBaseProvider,\r\n  Popover,\r\n  Pressable,\r\n  Spinner,\r\n  Text,\r\n  VStack,\r\n  useBreakpointValue,\r\n  TextArea,\r\n  InputRightAddon,\r\n  InputGroup,\r\n  Select,\r\n  CheckIcon,\r\n  ScrollView,\r\n  PresenceTransition,\r\n  Drawer,\r\n  InputLeftAddon,\r\n  Heading,\r\n  FormControl,\r\n  WarningOutlineIcon\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useCallback, useMemo, useLayoutEffect } from 'react';\r\nimport { Dimensions, TouchableOpacity, StyleSheet, Platform } from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject, } from 'firebase/storage';\r\nimport { DragSortableView } from \"react-native-drag-sort\";\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport SelectDropdown from 'react-native-select-dropdown';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { cloneDeep } from 'lodash';\r\nimport ImageMarker, { Position } from \"react-native-image-marker\";\r\n\r\n\r\n\r\nimport {\r\n  // setModelData,\r\n  setMakeData,\r\n  setIsLoading,\r\n  setSelectedImages,\r\n  setIsAddPhotoVisible,\r\n  setAddAnotherImages,\r\n  setLoginName,\r\n  setDeleteImageVisible,\r\n  setExpenseNameData,\r\n  setPaidToData,\r\n  setCurrentDate,\r\n  setSupplyChainsCostsData,\r\n  setSelectedExpenseName,\r\n  setSelectedPaidTo,\r\n  setLoadingModalVisible,\r\n  setIsSuccessModalOpen,\r\n  setIsUpdateSuccessModalOpen\r\n\r\n} from './redux/store'\r\n\r\n\r\nimport \"setimmediate\";\r\n\r\n\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css'; // Import a CSS effect for the lazy loading transition\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\n\r\nimport { AutocompleteDropdown, AutocompleteDropdownContextProvider } from 'react-native-autocomplete-dropdown';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst { width } = Dimensions.get('window');\r\n\r\n\r\nconst childrenWidth = 76;\r\nconst childrenHeight = 76;\r\nconst marginChildrenTop = 7;\r\nconst marginChildrenBottom = 0;\r\n\r\nlet globalJpyToUsd = '';\r\nlet globalUsdToJpy = '';\r\n\r\nlet globalSupplyChainCostsData = [];\r\nlet globalSelectedExpenseName = '';\r\nlet globalSupplyChainCostsAmount = 0;\r\nlet globalSelectedPaidTo = '';\r\nlet globalModelDataVariable = [];\r\nlet globalMakeDataVariable = [];\r\nlet globalRegYearDataVariable = [];\r\nlet globalPortDataVariable = [];\r\nlet globalSalesDataVariable = [];\r\nlet globalBuyerDataVariable = [];\r\nlet globalTransmissionDataVariable = [];\r\nlet globalExteriorColorDataVariable = [];\r\nlet globalFuelDataVariable = [];\r\nlet globalDriveTypeDataVariable = [];\r\nlet globalBodyTypeDataVariable = [];\r\nlet globalSelectedImages = [];\r\nlet globalVehicleFolderName = '';\r\nlet selectedScreen = 'ADD NEW VEHICLE'\r\nlet globalReferenceNumber = '';\r\nlet globalSPCSelectedDate = '';\r\nlet globalFobPrice = '';\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst UpdateSuccessModal = ({ onClose, bodyText, headerText }) => {\r\n\r\n  const isUpdateSuccessModalOpen = useSelector((state) => state.isUpdateSuccessModalOpen);\r\n\r\n  return (\r\n    <Modal isOpen={isUpdateSuccessModalOpen} onClose={onClose} >\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text textAlign={'center'} color={'#102A43'} bold>\r\n            😊😎 Success! 😎😊\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          justifyContent={'center'}\r\n          alignItems={'center'}\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              {headerText}\r\n              {/* Vehicle Added! */}\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              {bodyText}\r\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UploadSuccessModal = ({ onClose, bodyText, headerText }) => {\r\n\r\n  const isSuccessModalOpen = useSelector((state) => state.isSuccessModalOpen);\r\n\r\n  return (\r\n    <Modal isOpen={isSuccessModalOpen} onClose={onClose} >\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text textAlign={'center'} color={'#102A43'} bold>\r\n            😊😎 Success! 😎😊\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          justifyContent={'center'}\r\n          alignItems={'center'}\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              {headerText}\r\n              {/* Vehicle Added! */}\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              {bodyText}\r\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst LoadingModal = () => {\r\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n  return (\r\n\r\n    <Box\r\n      position=\"absolute\"\r\n      top={0}\r\n      bottom={0}\r\n      left={0}\r\n      right={0}\r\n      backgroundColor=\"rgba(0, 0, 0, 0.5)\"\r\n      flex={1}\r\n      display={loadingModalVisible ? '' : 'none'}\r\n    >\r\n      {/* Content within the modal */}\r\n      <Center flex={1}>\r\n        <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n          <Spinner size=\"lg\" color=\"white\" />\r\n          <Text color={'white'}>Loading, please wait!</Text>\r\n        </Box>\r\n      </Center>\r\n    </Box>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedExpenseName}\r\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedExpenseName = value\r\n      dispatch(setSelectedExpenseName(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Expense Name\"\r\n    placeholder=\"Choose Expense Name\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {expenseNameData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n\r\n\r\n};\r\nconst SelectPaidTo = ({ paidToIsError, }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedPaidTo}\r\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedPaidTo = value\r\n      dispatch(setSelectedPaidTo(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Paid To\"\r\n    placeholder=\"Choose Paid To\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {paidToData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n    ;\r\n};\r\n\r\n\r\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\r\n\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const handleModalCalendarOpen = () => {\r\n    setModalCalendarVisible(true);\r\n  };\r\n\r\n  const handleModalCalendarClose = () => {\r\n    setModalCalendarVisible(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <Pressable onPress={handleModalCalendarOpen} flex={3}>\r\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n      </Pressable>\r\n\r\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n        <Modal.CloseButton />\r\n        <Modal.Content>\r\n          <Box height={'full'} flex={1}>\r\n\r\n            <Calendar\r\n              onDayPress={useCallback(day => {\r\n                setSelectedDate(day.dateString);\r\n                // console.log(day.dateString);\r\n                globalSPCSelectedDate = day.dateString;\r\n                handleModalCalendarClose();\r\n              }, [])}\r\n              markedDates={{\r\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n              }}\r\n              renderArrow={(direction) => (\r\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n              )}\r\n              enableSwipeMonths={true}\r\n              initialDate={selectedDate}\r\n              showSixWeeks />\r\n\r\n          </Box>\r\n\r\n        </Modal.Content>\r\n\r\n      </Modal></>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst SupplyChainsCosts = ({\r\n  handleAddExpenseNameTextChange,\r\n  textAreaAddExpenseName,\r\n  inputExpenseAmount,\r\n  handleInputExpenseAmountChange,\r\n  handleAddPaidToTextChange,\r\n  paidToData,\r\n  inputCarNotes,\r\n\r\n}) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const [sccData, setSccData] = useState([]);\r\n  const currentDate = useSelector((state) => state.currentDate);\r\n  const [supplyChainsCostsModalVisible, setSupplyChainsCostsModalVisible] = useState(false);\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n\r\n  const [clearModalVisible, setClearModalVisible] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\r\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\r\n  const [paidToIsError, setPaidToIsError] = useState(false);\r\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\r\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\r\n  const selectExpenseNameRef = useRef(null);\r\n  const selectPaidToRef = useRef(null);\r\n\r\n\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsOpen = () => {\r\n    setSupplyChainsCostsModalVisible(true);\r\n  };\r\n\r\n  const handleModalSupplyChainsCostsClose = () => {\r\n    setSupplyChainsCostsModalVisible(false);\r\n    inputExpenseAmount.current?.clear();\r\n    globalSelectedExpenseName = '';\r\n    setSelectResetKey(nanoid());\r\n    globalSelectedPaidTo = '';\r\n    setSelectedDate(currentDate);\r\n    globalSPCSelectedDate = currentDate;\r\n    dispatch(setSelectedExpenseName(''));\r\n    dispatch(setSelectedPaidTo(''));\r\n    setInputAmountIsError(false);\r\n    setExpenseNameIsError(false);\r\n    setPaidToIsError(false);\r\n  };\r\n\r\n  const handleClearModalOpen = () => {\r\n    setClearModalVisible(true);\r\n  };\r\n\r\n  const handleClearModalClose = () => {\r\n    setClearModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const amounts = supplyChainsCostsData.map((item) => {\r\n      const expenseName = Object.keys(item)[0];\r\n      const expenseData = item[expenseName];\r\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n    });\r\n\r\n    // Use reduce to add up all the amounts\r\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n    const formattedTotalAmount = totalAmount.toLocaleString();\r\n    setTotalAmount(formattedTotalAmount);\r\n    globalSupplyChainCostsAmount = formattedTotalAmount;\r\n\r\n  }, [supplyChainsCostsData]);\r\n\r\n  const handleSave = useCallback(() => {\r\n\r\n\r\n\r\n    if (inputExpenseAmount.current?.value == ''\r\n      || inputExpenseAmount.current?.value == 0\r\n      || globalSelectedExpenseName == ''\r\n      || globalSelectedPaidTo == ''\r\n    ) {\r\n\r\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\r\n        setInputAmountIsError(true);\r\n      }\r\n\r\n      if (globalSelectedExpenseName == '') {\r\n        setExpenseNameIsError(true);\r\n      }\r\n\r\n      if (globalSelectedPaidTo == '') {\r\n        setPaidToIsError(true);\r\n      }\r\n    }\r\n\r\n    else {\r\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\r\n\r\n      if (existingIndex !== -1) {\r\n        // If an entry with the same expense name exists, update it\r\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\r\n        updatedData[existingIndex][globalSelectedExpenseName] = {\r\n          expenseName: globalSelectedExpenseName,\r\n          amount: inputExpenseAmount.current?.value,\r\n          date: globalSPCSelectedDate,\r\n          paidName: globalSelectedPaidTo,\r\n        };\r\n        globalSupplyChainCostsData = updatedData;\r\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n\r\n      } else {\r\n        setInputAmountIsError(false);\r\n        setExpenseNameIsError(false);\r\n        setPaidToIsError(false);\r\n        // If no entry with the same expense name exists, add a new entry\r\n        const newData = {\r\n          [globalSelectedExpenseName]: {\r\n            expenseName: globalSelectedExpenseName,\r\n            amount: inputExpenseAmount.current?.value,\r\n            date: globalSPCSelectedDate,\r\n            paidName: globalSelectedPaidTo,\r\n          },\r\n        };\r\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\r\n        console.log(globalSupplyChainCostsData);\r\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\r\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\r\n        setSelectResetKey(nanoid());\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const handleEditPress = useCallback((item) => {\r\n    console.log(item.amount);\r\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\r\n    dispatch(setSelectedExpenseName(item.expenseName));\r\n    globalSelectedExpenseName = item.expenseName;\r\n    dispatch(setSelectedPaidTo(item.paidName));\r\n    globalSelectedPaidTo = item.paidName;\r\n    globalSPCSelectedDate = item.date;\r\n    setSelectedDate(item.date);\r\n  }, [])\r\n\r\n\r\n  const handleDeleteItem = (expenseName) => {\r\n    // Find the index of the item to be deleted\r\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\r\n\r\n    if (itemIndex !== -1) {\r\n      // Create a copy of the data array and remove the item at the found index\r\n      const newData = [...globalSupplyChainCostsData];\r\n      newData.splice(itemIndex, 1);\r\n\r\n      // Update the state with the new array\r\n      dispatch(setSupplyChainsCostsData(newData));\r\n      globalSupplyChainCostsData = newData;\r\n    }\r\n  };\r\n\r\n  const handleFirstModalClose = () => {\r\n    setSupplyChainsCostsModalVisible(false);\r\n\r\n  };\r\n  const handleFirstModalOpen = () => {\r\n    setSupplyChainsCostsModalVisible(true);\r\n\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        borderRadius={3}\r\n        flex={1}\r\n        onPress={handleModalSupplyChainsCostsOpen}\r\n        variant={'outline'}\r\n        _text={{ color: 'black', }}\r\n        leftIcon={<MaterialIcons name=\"payments\" size={20} color=\"black\" />}>\r\n        <Text>Supply Chains Costs: ¥{totalAmount}</Text>\r\n      </Button>\r\n\r\n      <Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\r\n        <Modal.Content bgColor={'white'} w={'50%'} h={'auto'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header bgColor={'#7B9CFF'}>\r\n            <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\r\n\r\n\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Box height={'full'}>\r\n              <Box paddingBottom={5}>\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\r\n\r\n                    <SupplyChainsCostsSortAndAddModal\r\n                      docName='ExpenseName'\r\n                      handleAddTextChange={handleAddExpenseNameTextChange}\r\n                      textAreaAdd={textAreaAddExpenseName}\r\n                      title='Expense Name'\r\n                      dataName={'expenseName'}\r\n                      databaseInit={projectExtensionFirestore}\r\n                      headerText=\"Rearrange/Add Expense Name\"\r\n                      data={expenseNameData}\r\n                      handleFirstModalClose={handleFirstModalClose}\r\n                      handleFirstModalOpen={handleFirstModalOpen}\r\n                    />\r\n                  </Box>\r\n\r\n                  <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\r\n                  {/* <Select\r\n                    // ref={selectExpenseNameRef}\r\n                    key={`expenseName${resetKey}`}\r\n                    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n                    flex={3}\r\n                    onValueChange={(value) => {\r\n                      globalSelectedExpenseName = value\r\n                    }}\r\n                    accessibilityLabel=\"Choose Expense Name\"\r\n                    placeholder=\"Choose Expense Name\"\r\n                    _selectedItem={{\r\n                      bg: \"teal.600\",\r\n                      endIcon: <CheckIcon size=\"5\" />\r\n                    }}>\r\n                    {expenseNameData.map((item) => (\r\n\r\n                      <Select.Item key={item} label={item} value={item} />\r\n\r\n                    ))}\r\n                  </Select> */}\r\n\r\n\r\n                </Box>\r\n\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1} >Amount</Text>\r\n                  </Box>\r\n                  <Input\r\n                    borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\r\n                    flex={3}\r\n                    ref={inputExpenseAmount}\r\n                    onChangeText={handleInputExpenseAmountChange}\r\n                    placeholder=\"Amount\"\r\n                    bgColor={'white'}\r\n                    placeholderTextColor={'muted.400'}\r\n                    InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\r\n                </Box>\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\r\n                  </Box>\r\n\r\n                  <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\r\n                </Box>\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\r\n\r\n\r\n                    <SupplyChainsCostsSortAndAddModal\r\n                      docName='PaidTo'\r\n                      handleAddTextChange={handleAddPaidToTextChange}\r\n                      textAreaAdd={textAreaAddExpenseName}\r\n                      title='Paid To'\r\n                      dataName={'paidTo'}\r\n                      databaseInit={projectExtensionFirestore}\r\n                      headerText=\"Rearrange/Add Paid To\"\r\n                      data={paidToData}\r\n                      handleFirstModalClose={handleFirstModalClose}\r\n                      handleFirstModalOpen={handleFirstModalOpen}\r\n                    />\r\n\r\n                  </Box>\r\n\r\n                  <SelectPaidTo paidToIsError={paidToIsError} />\r\n                </Box>\r\n\r\n                <Button\r\n                  onPress={handleSave}\r\n                  colorScheme={'success'}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                  margin={1}\r\n                  flex={1}\r\n                  width={'40%'}\r\n                  alignSelf={'center'}\r\n                  leftIcon={<MaterialIcons name='add' color='white' size={20} />}\r\n                >\r\n                  ADD\r\n                </Button>\r\n              </Box>\r\n\r\n              <Box>\r\n                <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\r\n                </Box>\r\n                {supplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n\r\n                  return (\r\n                    <Box key={index} flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\r\n                      justifyContent={'center'} alignItems={'center'}>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      <Box flex={1} marginLeft={1} flexDir={'row'}>\r\n\r\n                        <Pressable flex={1} margin={1} onPress={() => handleEditPress(expenseData)}>\r\n                          {({\r\n                            isHovered,\r\n                            isFocused,\r\n                            isPressed\r\n                          }) => {\r\n                            return <Box flex={1} bgColor={isHovered ? 'primary.700' : 'primary.500'} borderRadius={3}>\r\n                              <Text flex={1} textAlign={'center'} color={'white'}>Edit</Text>\r\n                            </Box>\r\n                          }}\r\n                        </Pressable>\r\n\r\n                        <Pressable flex={1} margin={1} onPress={() => handleDeleteItem(expenseData.expenseName)}>\r\n                          {({\r\n                            isHovered,\r\n                            isFocused,\r\n                            isPressed\r\n                          }) => {\r\n                            return <Box flex={1} bgColor={isHovered ? 'error.800' : 'error.500'} borderRadius={3}>\r\n                              <Text flex={1} textAlign={'center'} color={'white'}>Delete</Text>\r\n                            </Box>\r\n                          }}\r\n                        </Pressable>\r\n                      </Box>\r\n                    </Box>\r\n                  );\r\n                })}\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n\r\n          </Modal.Body>\r\n\r\n\r\n          <HStack space={5} width={'full'} justifyContent={'space-between'}>\r\n            <Box flex={4} />\r\n            <Button\r\n              onPress={handleModalSupplyChainsCostsClose}\r\n              colorScheme={'gray'}\r\n              size={'sm'}\r\n              borderRadius={5}\r\n              margin={1}\r\n              flex={1}\r\n            >\r\n              Close\r\n            </Button>\r\n          </HStack>\r\n\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n        <Modal.Content bgColor={'amber.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'amber.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'amber.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'amber.600'} bold>\r\n                Warning!\r\n              </Text>\r\n              <Text color={'amber.600'}>\r\n                Are you sure you want to clear?\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleClearModalClose}\r\n                colorScheme={'warmGray'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button\r\n                onPress={() => {\r\n\r\n                }}\r\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                Clear\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = projectControlAuth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nconst storage = getStorage(projectExtensionFirebase);\r\n\r\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\r\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n\r\n  const handleModalDeleteOpen = () => {\r\n    setModalDeleteImagesVisible(true);\r\n  };\r\n\r\n  const handleModalDeleteClose = () => {\r\n    setModalDeleteImagesVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        position=\"absolute\"\r\n        top={0}\r\n        right={0}\r\n        bg=\"error.500\"\r\n        borderRadius={3}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        display={isAddPhotoVisible ? 'none' : 'block'}\r\n      >\r\n        <Pressable onPress={handleModalDeleteOpen} flex={1}>\r\n          <Icon as={<Ionicons name=\"trash-sharp\" />} size={5} color=\"white\" cursor={'pointer'} />\r\n        </Pressable>\r\n      </Box>\r\n\r\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\r\n        <Modal.Content bgColor={'error.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear Images\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'error.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.400'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.500'} bold>\r\n                Alert!\r\n              </Text>\r\n              <Text color={'danger.500'}>\r\n                Are you sure you want to clear <Text color={'danger.500'} bold>{selectedImages.length} </Text>selected image(s)?\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalDeleteClose} colorScheme={'warmGray'} flex={1} size={'sm'} borderRadius={5}>\r\n                No\r\n              </Button>\r\n              <Button onPress={handleClearImages} flex={1} size={'sm'} colorScheme={'error'} borderRadius={5}>\r\n                Clear Images\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\r\n  const dispatch = useDispatch();\r\n  const { width } = Dimensions.get('window');\r\n\r\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  const [boolean, setBoolean] = useState(true);\r\n  const selectedImages = useSelector((state) => state.selectedImages);\r\n  // const [selectedImages, setSelectedImages] = useState([]);\r\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\r\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\r\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\r\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\r\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n  const [scrollEnabled, setscrollEnabled] = useState(true);\r\n  const [isEnterEdit, setisEnterEdit] = useState(false);\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setIsCursorLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    dropdown: {\r\n      margin: 16,\r\n      height: 50,\r\n      borderBottomColor: 'gray',\r\n      borderBottomWidth: 0.5,\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n      fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n      height: 40,\r\n      fontSize: 16,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 20,\r\n\r\n    },\r\n    txt: {\r\n      fontSize: 18,\r\n      lineHeight: 24,\r\n      padding: 5\r\n    },\r\n    sort: {\r\n    },\r\n    item_children: {\r\n      width: 90,\r\n      height: 90,\r\n      backgroundColor: 'black',\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    item_delete_icon: {\r\n      width: 14,\r\n      height: 14,\r\n      position: \"absolute\",\r\n      right: 1,\r\n      top: 1\r\n    },\r\n    item_icon: {\r\n      width: 90,\r\n      height: 90,\r\n      resizeMode: \"contain\",\r\n      position: \"absolute\"\r\n    }\r\n  });\r\n\r\n  const handleImageAddToSelection = async () => {\r\n    dispatch(setDeleteImageVisible(true));\r\n    if (selectedImages.length === 40) {\r\n      return; // Limit reached, do not add a new image\r\n    }\r\n\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Filter out images larger than 10MB\r\n      const newImages = [...selectedImages];\r\n      const promises = response.assets.map(async (asset) => {\r\n        const file = await fetch(asset.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          const exists = newImages.some((image) => image.uri === asset.uri);\r\n          if (!exists) {\r\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\r\n          }\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      });\r\n\r\n      await Promise.all(promises);\r\n\r\n      const limitedImages = newImages.slice(0, 40);\r\n      dispatch(setSelectedImages(limitedImages));\r\n      globalSelectedImages = limitedImages;\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      // limitedImages.forEach((image) => {\r\n      //   console.log(`File size: ${image.fileSize}`);\r\n      // });\r\n\r\n    } catch (error) {\r\n      console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n  const reloadData = useCallback(() => {\r\n    if (selectedImages.length > 0) {\r\n      // ... Logic to reload data using selectedImages and width\r\n\r\n      // Assuming your logic has updated selectedImages, you can directly use it here\r\n      const updatedSelectedImages = [...selectedImages];\r\n\r\n      // Dispatch the updatedSelectedImages array to the state\r\n      dispatch(setSelectedImages(updatedSelectedImages));\r\n    }\r\n\r\n  }, [widthState]);\r\n\r\n  useEffect(() => {\r\n    const handleWidthChange = ({ window }) => {\r\n      setWidthState(window.width);\r\n    };\r\n\r\n    Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n    return () => {\r\n      Dimensions.removeEventListener('change', handleWidthChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, [reloadData]);\r\n\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    setModalDeleteImagesVisible(false);\r\n    // dispatch(setSelectedImages([]));\r\n    // globalSelectedImages = [];\r\n    // dispatch(setIsAddPhotoVisible(true));\r\n    // dispatch(setAddAnotherImages(false));\r\n    // dispatch(setDeleteImageVisible(true));\r\n    handleClearImagesExtra();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const renderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleImageSelection = async () => {\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40,\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Remove duplicates from the selected images\r\n      const uniqueImages = response.assets.filter(\r\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\r\n      );\r\n\r\n      // Filter out images larger than 10MB\r\n      const filteredImages = [];\r\n      const imageOrder = [];\r\n      for (let index = 0; index < uniqueImages.length; index++) {\r\n        const image = uniqueImages[index];\r\n        const file = await fetch(image.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          filteredImages.push(image);\r\n          imageOrder.push(index);\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      }\r\n\r\n\r\n      // Sort the filtered images based on their original order\r\n      const sortedImages = filteredImages.sort((a, b) => {\r\n        const indexA = imageOrder[filteredImages.indexOf(a)];\r\n        const indexB = imageOrder[filteredImages.indexOf(b)];\r\n        return indexA - indexB;\r\n      });\r\n\r\n\r\n\r\n      // Limit the number of selected images to 40\r\n      const limitedImages = sortedImages.slice(0, 40);\r\n\r\n      globalSelectedImages = limitedImages;\r\n      if (limitedImages.length > 0) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(true));\r\n      }\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      dispatch(setSelectedImages(globalSelectedImages));\r\n\r\n    } catch (error) {\r\n      console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleDeleteImagePress = useCallback((uri) => {\r\n\r\n    globalSelectedImages = globalSelectedImages.filter((item) => {\r\n      // Replace 'uriToDelete' with the URI you want to delete\r\n      return item.uri !== uri;\r\n    });\r\n\r\n    if (globalSelectedImages.length < 40) {\r\n      dispatch(setAddAnotherImages(true));\r\n    }\r\n\r\n    if (globalSelectedImages.length == 0) {\r\n      dispatch(setAddAnotherImages(false));\r\n      dispatch(setIsAddPhotoVisible(true));\r\n    }\r\n    dispatch(setSelectedImages(globalSelectedImages));\r\n    // dispatch(setSelectedImages((prevImages) => {\r\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\r\n\r\n    //   if (updatedImages.length < 40) {\r\n    //     dispatch(setAddAnotherImages(true));\r\n    //   }\r\n    //   if (updatedImages.length == 0) {\r\n    //    dispatch(setAddAnotherImages(false));\r\n    //     dispatch(setIsAddPhotoVisible(true));\r\n    //   }\r\n    //   return updatedImages;\r\n    // }));\r\n\r\n    // console.log(globalSelectedImages.map((item) => item.uri));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\r\n\r\n\r\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\r\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\r\n\r\n            <ClearImagesModal\r\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\r\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\r\n              handleClearImages={handleClearImages}\r\n              selectedImages={selectedImages}\r\n              isAddPhotoVisible={isAddPhotoVisible} />\r\n\r\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\r\n\r\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"white\" />\r\n\r\n\r\n              <ScrollView\r\n                scrollEnabled={scrollEnabled}\r\n                flex={1}\r\n              >\r\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\r\n\r\n\r\n                  <DragSortableView\r\n\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    delayLongPress={100}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onDragStart={useCallback(() => {\r\n                      if (!isEnterEdit) {\r\n                        setisEnterEdit(true);\r\n                        setscrollEnabled(false);\r\n                      } else {\r\n                        setscrollEnabled(false);\r\n                      }\r\n                    }, [])}\r\n                    onDragEnd={useCallback(() => {\r\n                      setscrollEnabled(true);\r\n                    }, [])}\r\n                    onDataChange={useCallback((data) => {\r\n\r\n                      if (data.length !== data) {\r\n                        dispatch(setSelectedImages(data));\r\n                        globalSelectedImages = data;\r\n                      }\r\n\r\n                    }, [])}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => renderItem(item, index), [])} />\r\n\r\n                  <Center>\r\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"white\" />\r\n                  </Center>\r\n\r\n                </Box>\r\n\r\n\r\n\r\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    sortable={false}\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\r\n\r\n                </Box>\r\n              </ScrollView>\r\n\r\n\r\n\r\n\r\n            </Box>\r\n\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={0}\r\n              left={0}\r\n              borderRadius={3}\r\n              bgColor={'rgba(0, 0, 0, 0.5)'}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              display={isAddPhotoVisible ? 'none' : 'block'}>\r\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\r\n            </Box>\r\n          </Box>\r\n\r\n        </ScrollView>\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      {/* </Box> */}\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'}>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} >\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Please select image(s) smaller than 10MB!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst SuccessFailModal = ({ isSuccessOpen, isFailedOpen, handleFailModalClose, inputStockIDNumber, handleSuccessModalClose }) => {\r\n  const okSuccessButtonRef = useRef(null);\r\n  const okFailButtonRef = useRef(null);\r\n\r\n  return (\r\n    <><Modal isOpen={isSuccessOpen} onClose={handleSuccessModalClose} initialFocusRef={okSuccessButtonRef} finalFocusRef={inputStockIDNumber}>\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text color={'#102A43'} bold>\r\n            Success!\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              Success!\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              Stock ID Exist!\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button ref={okSuccessButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleSuccessModalClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n      <Modal isOpen={isFailedOpen} onClose={handleFailModalClose} initialFocusRef={okFailButtonRef} finalFocusRef={inputStockIDNumber} >\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Stock ID Do Not Exist!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button ref={okFailButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleFailModalClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal></>\r\n  );\r\n}\r\n\r\n\r\nconst StockIDAndMakeAndModel = ({\r\n  selectStockStatus,\r\n  handleSetBordersWhite,\r\n  inputFobUsd,\r\n  handleClearIfError,\r\n  monthNumbers,\r\n  steeringData,\r\n  selectPort,\r\n  selectSales,\r\n  selectBuyer,\r\n  inputRefNum,\r\n  inputChassis,\r\n  inputModelCode,\r\n  inputEngineCode,\r\n  inputEngineDis,\r\n  selectSteering,\r\n  inputMileage,\r\n  selectTransmission,\r\n  selectExteriorColor,\r\n  inputNumOfSeats,\r\n  inputDoors,\r\n  inputPurchasedPrice,\r\n  selectFuel,\r\n  inputDimensionLength,\r\n  inputDimensionWidth,\r\n  inputDimensionHeight,\r\n  inputDimensionCubicMeters,\r\n  selectDriveType,\r\n  inputWeight,\r\n  selectBodyType,\r\n  inputCarName,\r\n  inputCarDesc,\r\n  inputFobJpy,\r\n  selectRegYear,\r\n  selectRegMonth,\r\n  setRefNumFromSelects,\r\n  inputStockIDNumber,\r\n  stockIDNumError,\r\n  selectMakeForModelRef,\r\n  textAreaAddModel,\r\n  selectMakeForAddModelRef,\r\n  handleAddMakeTextChange,\r\n  textAreaAddMake,\r\n  makeError,\r\n  modelError,\r\n  selectMakeBoxRef,\r\n  selectMakeRef,\r\n  selectModelRef,\r\n  selectModelBoxRef,\r\n  setCarNameFromSelects,\r\n  setCarNameFromSelectsModel,\r\n  inputCarNotes,\r\n  inputCarMemo,\r\n  purchasedPriceError,\r\n  handleInputPurchasedPriceChange }) => {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  // const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const makeData = useSelector((state) => state.makeData);\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const portData = useSelector((state) => state.portData);\r\n  // const isLoading = useSelector((state) => state.isLoading);\r\n  const transmissionData = useSelector((state) => state.transmissionData);\r\n  const fuelData = useSelector((state) => state.fuelData);\r\n  const buyerData = useSelector((state) => state.buyerData);\r\n  const salesData = useSelector((state) => state.salesData);\r\n  const driveTypeData = useSelector((state) => state.driveTypeData);\r\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\r\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\r\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\r\n  // const usdToJpy = useSelector((state) => state.usdToJpy);\r\n\r\n\r\n  const [modelData, setModelData] = useState([]);\r\n  const [isSearchLoading, setIsSearchLoading] = useState(false);\r\n  const [isSuccessOpen, setIsSuccessOpen] = useState(false);\r\n  const [isFailedOpen, setIsFailedOpen] = useState(false);\r\n  const [fetchedData, setFetchedData] = useState([]);\r\n  const [model, setModel] = useState('');\r\n  const [key, setKey] = useState(0);\r\n  // useEffect(() => {\r\n\r\n  //   selectModelRef.current.selectIndex(modelData.indexOf(model));\r\n  //   console.log(model);\r\n  // }, [modelData]);\r\n\r\n  // const exportFunction = () => {\r\n  //   const clearModelData = () =>{\r\n  //       setModelData([]);\r\n  //   };\r\n\r\n  //   return clearModelData;\r\n  // }\r\n\r\n  const handleInputFobJpyChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    // console.log(globalJpyToUsd);\r\n    // Check if the numeric value starts with 0\r\n    if (numericValue.startsWith('0')) {\r\n      // Handle the case when the value starts with 0\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n      return;\r\n    }\r\n\r\n    // Truncate the numeric value to a maximum of 9 digits\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n    if (formattedValue !== '') {\r\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\r\n\r\n      if (!isNaN(multipliedValue)) {\r\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\r\n      } else {\r\n        // Handle the case when the multipliedValue is NaN\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: '' });\r\n      }\r\n    } else {\r\n      // Handle the case when formattedValue is empty\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n    }\r\n  };\r\n\r\n\r\n  const getImages = useCallback(async (folderName) => {\r\n    // const dispatch = useDispatch();\r\n    dispatch(setLoadingModalVisible(true));\r\n    try {\r\n\r\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\r\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n\r\n      const urls = await Promise.all(\r\n        imageRefs.items.map(async (itemRef) => {\r\n          const uri = await getDownloadURL(itemRef);\r\n          return { uri, fileName: itemRef.name };\r\n        })\r\n      );\r\n\r\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\r\n      urls.sort((a, b) => {\r\n        const fileNameA = parseInt(a.fileName);\r\n        const fileNameB = parseInt(b.fileName);\r\n        return fileNameA - fileNameB;\r\n      });\r\n\r\n      if (urls.length > 0) {\r\n        dispatch(setDeleteImageVisible(false));\r\n        dispatch(setSelectedImages(urls));\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n        globalSelectedImages = urls;\r\n\r\n      }\r\n\r\n      else {\r\n        dispatch(setDeleteImageVisible(true));\r\n        dispatch(setIsAddPhotoVisible(true));\r\n        dispatch(setAddAnotherImages(false));\r\n        dispatch(setSelectedImages([]));\r\n        dispatch(setDeleteImageVisible(true));\r\n        globalSelectedImages = [];\r\n      }\r\n\r\n\r\n      console.log(urls);\r\n\r\n    } catch (error) {\r\n      // Handle any errors that may occur during the Firebase operations\r\n      console.error('Error getting image URLs:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleSearchPress = useCallback(async () => {\r\n\r\n\r\n    if (inputStockIDNumber.current?.value !== '') {\r\n      dispatch(setLoadingModalVisible(true));\r\n      setIsSearchLoading(true);\r\n      setIsSuccessOpen(false);\r\n      setIsFailedOpen(false);\r\n\r\n      const q = query(collection(projectExtensionFirestore, 'VehicleProducts'), where('stockID', '==', inputStockIDNumber.current?.value));\r\n\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      if (querySnapshot.empty) {\r\n        console.log('No documents found');\r\n        // setIsLoading(false);\r\n        dispatch(setDeleteImageVisible(true));\r\n        setIsSearchLoading(false);\r\n        setIsFailedOpen(true);\r\n        dispatch(setIsAddPhotoVisible(true));\r\n        dispatch(setAddAnotherImages(false));\r\n        dispatch(setSelectedImages([]));\r\n        globalSelectedImages = [];\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n      }\r\n\r\n\r\n      else {\r\n\r\n        // dispatch(setSelectedImages([]));\r\n        // globalSelectedImages = [];\r\n\r\n        querySnapshot.forEach(async (item) => {\r\n          const data = item.data();\r\n          selectModelRef.current.reset();\r\n          // console.log(item.id, \" => \", item.data().make);\r\n          setIsSearchLoading(false);\r\n          // setIsSuccessOpen(true);\r\n\r\n          // fetchModelData();\r\n          // setModel(data.model);\r\n\r\n          // console.log(portData);    \r\n          async function fetchDataAndSelectIndex() {\r\n            try {\r\n              const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\r\n              const docSnapshot = await getDoc(collectionRef);\r\n              if (docSnapshot.exists()) {\r\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n              }\r\n            } catch (error) {\r\n              console.error('Error fetching models data from Firebase: ', error);\r\n            }\r\n          }\r\n\r\n          try {\r\n            const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\r\n            const docSnapshot = await getDoc(collectionRef);\r\n            if (docSnapshot.exists()) {\r\n              const modelsDataFromFirebase = docSnapshot.data().model;\r\n              setModelData(modelsDataFromFirebase);\r\n              globalModelDataVariable = modelsDataFromFirebase;\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching models data from Firebase: ', error);\r\n          }\r\n\r\n          handleSetBordersWhite();\r\n          fetchDataAndSelectIndex();\r\n          selectStockStatus.current.selectIndex(stockStatusData.indexOf(data.stockStatus));\r\n          selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\r\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\r\n          selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(parseInt(data.regYear, 10)));\r\n          selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\r\n          selectPort.current.selectIndex(portData.findIndex(item => item.id === data.portID));\r\n          selectSales.current.selectIndex(salesData.findIndex(item => item.id === data.salesID));\r\n          selectBuyer.current.selectIndex(buyerData.findIndex(item => item.id === data.buyerID));\r\n          inputRefNum.current.setNativeProps({ text: data.referenceNumber || '' });\r\n          inputChassis.current.setNativeProps({ text: data.chassisNumber || '' });\r\n          inputModelCode.current.setNativeProps({ text: data.modelCode || '' });\r\n          inputEngineCode.current.setNativeProps({ text: data.engineCode || '' });\r\n          inputEngineDis.current.setNativeProps({ text: data.engineDisplacement ? data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\r\n          inputMileage.current.setNativeProps({ text: data.mileage ? data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\r\n          selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\r\n          inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats || '' });\r\n          inputDoors.current.setNativeProps({ text: data.doors || '' });\r\n          inputPurchasedPrice.current.setNativeProps({ text: data.purchasedPrice ? data.purchasedPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\").toString() : '' });\r\n          selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\r\n          inputDimensionLength.current.setNativeProps({ text: data.dimensionLength ? data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth ? data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight ? data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters || '' });\r\n          selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\r\n          inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\r\n          selectBodyType.current.selectIndex(bodyTypeData.findIndex(item => item.toLowerCase() === data.bodyType.toLowerCase()));\r\n          inputCarName.current.setNativeProps({ text: data.carName || '' });\r\n          inputCarDesc.current.setNativeProps({ text: data.carDescription || '' });\r\n          inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          globalFobPrice = data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '';\r\n          handleInputFobJpyChange(data.fobPrice ? data.fobPrice : \"0\");\r\n          // selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\r\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\r\n          // selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\r\n          // selectPort.current.selectIndex(portData.findIndex(item => item.name === data.port));\r\n          // selectSales.current.selectIndex(salesData.findIndex(item => item.name === data.sales));\r\n          // selectBuyer.current.selectIndex(buyerData.findIndex(item => item.name === data.buyer));\r\n          // inputRefNum.current.setNativeProps({ text: data.referenceNumber });\r\n          // inputChassis.current.setNativeProps({ text: data.chassisNumber });\r\n          // inputModelCode.current.setNativeProps({ text: data.modelCode });\r\n          // inputEngineCode.current.setNativeProps({ text: data.engineCode });\r\n          // inputEngineDis.current.setNativeProps({ text: data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\r\n          // inputMileage.current.setNativeProps({ text: data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\r\n          // selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\r\n          // inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats });\r\n          // inputDoors.current.setNativeProps({ text: data.doors });\r\n          // selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\r\n          // inputDimensionLength.current.setNativeProps({ text: data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters });\r\n          // selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\r\n          // inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});          \r\n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\r\n          // inputCarName.current.setNativeProps({ text: data.carName });\r\n          // inputCarDesc.current.setNativeProps({ text: data.carDescription });\r\n          // inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});\r\n          // handleInputFobJpyChange(data.fobPrice);\r\n\r\n          if (data.notes == undefined) {\r\n            inputCarNotes.current.setNativeProps({ text: '' });\r\n          }\r\n          else {\r\n            inputCarNotes.current.setNativeProps({ text: data.notes });\r\n          }\r\n\r\n          if (data.memo == undefined) {\r\n            inputCarMemo.current.setNativeProps({ text: '' });\r\n\r\n          }\r\n          else {\r\n            inputCarMemo.current.setNativeProps({ text: data.memo });\r\n\r\n          }\r\n\r\n          featuresState.SafetySystemAnBrSy = data.SafetySystemAnBrSy;\r\n          featuresState.SafetySystemDrAi = data.SafetySystemDrAi;\r\n          featuresState.SafetySystemPaAi = data.SafetySystemPaAi;\r\n          featuresState.SafetySystemSiAi = data.SafetySystemSiAi;\r\n          featuresState.ComfortAiCoFr = data.ComfortAiCoFr;\r\n          featuresState.ComfortAiCoRe = data.ComfortAiCoRe;\r\n          featuresState.ComfortAMFMRa = data.ComfortAMFMRa;\r\n          featuresState.ComfortAMFMSt = data.ComfortAMFMSt;\r\n          featuresState.ComfortCDPl = data.ComfortCDPl;\r\n          featuresState.ComfortCDCh = data.ComfortCDCh;\r\n          featuresState.ComfortCrSpCo = data.ComfortCrSpCo;\r\n          featuresState.ComfortDiSp = data.ComfortDiSp;\r\n          featuresState.ComfortDVDPl = data.ComfortDVDPl;\r\n          featuresState.ComfortHDD = data.ComfortHDD;\r\n          featuresState.ComfortNaSyGPS = data.ComfortNaSyGPS;\r\n          featuresState.ComfortPoSt = data.ComfortPoSt;\r\n          featuresState.ComfortPrAuSy = data.ComfortPrAuSy;\r\n          featuresState.ComfortReKeSy = data.ComfortReKeSy;\r\n          featuresState.ComfortTiStWh = data.ComfortTiStWh;\r\n          featuresState.InteriorLeSe = data.InteriorLeSe;\r\n          featuresState.InteriorPoDoLo = data.InteriorPoDoLo;\r\n          featuresState.InteriorPoMi = data.InteriorPoMi;\r\n          featuresState.InteriorPoSe = data.InteriorPoSe;\r\n          featuresState.InteriorPoWi = data.InteriorPoWi;\r\n          featuresState.InteriorReWiDe = data.InteriorReWiDe;\r\n          featuresState.InteriorReWiWi = data.InteriorReWiWi;\r\n          featuresState.InteriorThRoSe = data.InteriorThRoSe;\r\n          featuresState.InteriorTiGl = data.InteriorTiGl;\r\n          featuresState.ExteriorAlWh = data.ExteriorAlWh;\r\n          featuresState.ExteriorPoSlDo = data.ExteriorPoSlDo;\r\n          featuresState.ExteriorSuRo = data.ExteriorSuRo;\r\n          featuresState.SellingPointsCuWh = data.SellingPointsCuWh;\r\n          featuresState.SellingPointsFuLo = data.SellingPointsFuLo;\r\n          featuresState.SellingPointsMaHiAv = data.SellingPointsMaHiAv;\r\n          featuresState.SellingPointsBrNeTi = data.SellingPointsBrNeTi;\r\n          featuresState.SellingPointsNoAcHi = data.SellingPointsNoAcHi;\r\n          featuresState.SellingPointsNoSmPrOw = data.SellingPointsNoSmPrOw;\r\n          featuresState.SellingPointsOnOwHi = data.SellingPointsOnOwHi;\r\n          featuresState.SellingPointsPeRaTi = data.SellingPointsPeRaTi;\r\n          featuresState.SellingPointsReBo = data.SellingPointsReBo;\r\n          featuresState.SellingPointsTuEn = data.SellingPointsTuEn;\r\n          featuresState.SellingPointsUpAuSy = data.SellingPointsUpAuSy;\r\n\r\n          resetKey++;\r\n\r\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\r\n          makeVariable.text = data.make ? data.make : \"\";\r\n          modelVariable.text = data.model ? data.model : \"\";\r\n          regYearVariable.text = data.regYear ? data.regYear : \"\";\r\n          regMonthVariable.text = data.regMonth ? data.regMonth : \"\";\r\n          portVariable.text = data.port ? data.port : \"\";\r\n          salesVariable.text = data.sales ? data.sales : \"\";\r\n          buyerVariable.text = data.buyer ? data.buyer : \"\";\r\n          portVariable.id = data.portID ? data.portID : \"\";\r\n          salesVariable.id = data.salesID ? data.salesID : \"\";\r\n          buyerVariable.id = data.buyerID ? data.buyerID : \"\";\r\n          referenceNumberVariable.text = data.referenceNumber ? data.referenceNumber : \"\";\r\n          globalVehicleFolderName = data.stockID ? data.stockID : \"\";\r\n          steeringVariable.text = data.steering ? data.steering : \"\";\r\n          transmissionVariable.text = data.transmission ? data.transmission : \"\";\r\n          exteriorColorVariable.text = data.exteriorColor ? data.exteriorColor : \"\";\r\n          fuelVariable.text = data.fuel ? data.fuel : \"\";\r\n          driveTypeVariable.text = data.driveType ? data.driveType : \"\";\r\n          bodyTypeVariable.text = data.bodyType ? data.bodyType : \"\";\r\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\r\n          globalSupplyChainCostsData = data.supplyChainsCostsData ? data.supplyChainsCostsData : [];\r\n          dispatch(setSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\r\n\r\n          await getImages(globalVehicleFolderName);\r\n\r\n          dispatch(setLoadingModalVisible(false));\r\n\r\n          // const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), makeVariable.text), (snapshot) => {\r\n          //   setModelData(snapshot.data()?.model || []);\r\n          //   selectModelRef.current.selectIndex(modelData.indexOf(data.model));\r\n\r\n          //   return () => unsubscribe();\r\n          // });\r\n\r\n\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);;\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (isFailedOpen == false) {\r\n  //     handleClearIfError();\r\n  //   }\r\n\r\n\r\n  // }, [isFailedOpen])\r\n  const handleFailModalClose = useCallback(() => {\r\n    setIsFailedOpen(false);\r\n\r\n    handleClearIfError();\r\n\r\n\r\n  }, []);\r\n\r\n  const handleSuccessModalClose = useCallback(() => {\r\n    setIsSuccessOpen(false);\r\n\r\n    selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n    // console.log(globalModelDataVariable.indexOf(makeVariable.text));\r\n\r\n\r\n  }, []);\r\n\r\n  const handleModelChange = useCallback(() => {\r\n    // console.log('Selected make:', value);\r\n    setCarNameFromSelectsModel();\r\n\r\n  }, []);\r\n\r\n\r\n  const handleMakeChange = useCallback(async (item) => {\r\n    setCarNameFromSelects();\r\n    // dispatch(setSelectedMake(item));\r\n    // fetchModelData();\r\n    //  dispatch(setIsLoading(true));\r\n    try {\r\n      if (makeVariable.text !== '') {\r\n\r\n        try {\r\n\r\n          const collectionRef = doc(projectExtensionFirestore, 'Model', item);\r\n\r\n          const docSnapshot = await getDoc(collectionRef);\r\n          if (docSnapshot.exists()) {\r\n            const modelsDataFromFirebase = docSnapshot.data().model;\r\n            setModelData(modelsDataFromFirebase);\r\n            globalModelDataVariable = modelsDataFromFirebase;\r\n            // console.log(globalModelVariable);\r\n\r\n            // modelKey++;\r\n            // console.log(modelKey);\r\n            // dispatch(setIsLoading(false));\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching models data from Firebase: ', error);\r\n        }\r\n\r\n      }\r\n\r\n      else {\r\n        //  dispatch(setModelData([]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching models data from Firebase: ', error);\r\n    }\r\n\r\n  }, [projectExtensionFirestore, modelData, makeData]);\r\n\r\n  const handleInputStockIDNumberChange = useCallback((text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 10);\r\n    inputStockIDNumber.current.value = truncatedValue;\r\n    globalVehicleFolderName = truncatedValue;\r\n    setRefNumFromSelects();\r\n    // // Limit the numeric value to a maximum of 4 characters\r\n    // const truncatedValue = numericValue.slice(5);\r\n\r\n    // // Format the truncated numeric value with comma separator\r\n    // const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    // // Remove comma separator from the formatted value\r\n    // const valueWithoutCommas = formattedValue.replace(/,/g, '');\r\n\r\n    // inputStockIDNumber.current.value = valueWithoutCommas;\r\n  }, []);\r\n\r\n  const handleModelOnFocus = useCallback(() => {\r\n    // console.log(globalModelVariable.length);\r\n    const condition = makeVariable.text === '' && globalModelDataVariable.length > 0;\r\n\r\n    if (condition) {\r\n      globalModelDataVariable = [];\r\n      setModelData([]);\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n        <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={handleSearchPress} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\r\n          InputRightElement={\r\n            <Button isLoading={isSearchLoading} isLoadingText=\"Search\" size={'xs'} colorScheme={'primary'}\r\n              leftIcon={<Icon as={<MaterialIcons name=\"search\" />} size={5} color=\"white\" />}\r\n              onPress={() => {\r\n                handleSearchPress()\r\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n              }}>Search</Button>\r\n          }\r\n        />\r\n        </Box>\r\n        <SuccessFailModal inputStockIDNumber={inputStockIDNumber} isSuccessOpen={isSuccessOpen} setIsSuccessOpen={setIsSuccessOpen} isFailedOpen={isFailedOpen} setIsFailedOpen={setIsFailedOpen} handleSuccessModalClose={handleSuccessModalClose} handleFailModalClose={handleFailModalClose} />\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Purchase Price</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n        <Box bgColor={'white'} flex={1} borderColor={purchasedPriceError} borderWidth={1}>\r\n          <Input keyboardType=\"numeric\" flex={1} ref={inputPurchasedPrice} onChangeText={handleInputPurchasedPriceChange} bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"Purchase Price\" placeholderTextColor={'muted.400'} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Make</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n          <SortAndAddModal docName='Make' handleAddTextChange={handleAddMakeTextChange} textAreaAdd={textAreaAddMake} title='Make' dataName={'make'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Make\" data={makeData} />\r\n        </Box>\r\n\r\n        <Box ref={selectMakeBoxRef} bgColor={'white'} flex={1} borderColor={makeError} borderWidth={1}>\r\n\r\n\r\n          <SelectDropdown\r\n            ref={selectMakeRef}\r\n            buttonStyle={{\r\n              flex: 1,\r\n              width: '100%',\r\n              backgroundColor: 'white',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              padding: 4,\r\n            }}\r\n            buttonTextStyle={{\r\n              textAlign: 'left',\r\n              color: '#424242',\r\n              fontSize: 12,\r\n            }}\r\n            dropdownStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              shadowColor: '#000000',\r\n              shadowOffset: { width: 0, height: 2 },\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 4,\r\n              elevation: 2,\r\n            }}\r\n            rowStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 15,\r\n            }}\r\n            rowTextStyle={{\r\n              color: '#424242',\r\n              fontSize: 16,\r\n            }}\r\n            data={makeData}\r\n            onSelect={useCallback((selectedItem) => {\r\n              makeVariable.text = selectedItem;\r\n              selectModelRef.current.reset();\r\n              modelVariable.text = '';\r\n              handleMakeChange(selectedItem);\r\n\r\n\r\n            }, [])}\r\n            defaultButtonText=\"-- Choose Make --\"\r\n            buttonTextAfterSelection={(selectedItem) => {\r\n              return selectedItem;\r\n            }} SelectDropdown\r\n            renderDropdownIcon={(isOpened) => {\r\n              return (\r\n                <Ionicons\r\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                  color={'#424242'}\r\n                  size={18}\r\n                />\r\n              );\r\n            }}\r\n            rowTextForSelection={(item) => {\r\n              return item;\r\n            }}\r\n            searchPlaceHolder=\"Search for Make\"\r\n            searchInputStyle={{ marginTop: 2, }}\r\n            disableAutoScroll\r\n            search />\r\n\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} >\r\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Model</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n          <ModelSortAndAddModal\r\n            selectMakeForAddModelRef={selectMakeForAddModelRef}\r\n            selectMakeForModelRef={selectMakeForModelRef}\r\n            textAreaAddModel={textAreaAddModel}\r\n            makeData={makeData} />\r\n        </Box>\r\n        <Box ref={selectModelBoxRef} bgColor={'white'} flex={1} borderColor={modelError} borderWidth={1}>\r\n\r\n\r\n          <SelectDropdown\r\n\r\n            onFocus={handleModelOnFocus}\r\n            ref={selectModelRef}\r\n            // disabled={makeVariable.text === '' ? true : false}\r\n            // key={`make${key}`}\r\n            buttonStyle={{\r\n              flex: 1,\r\n              width: '100%',\r\n              backgroundColor: 'white',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              padding: 4,\r\n            }}\r\n            buttonTextStyle={{\r\n              textAlign: 'left',\r\n              color: '#424242',\r\n              fontSize: 12,\r\n            }}\r\n            dropdownStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              shadowColor: '#000000',\r\n              shadowOffset: { width: 0, height: 2 },\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 4,\r\n              elevation: 2,\r\n            }}\r\n            rowStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 15,\r\n            }}\r\n            rowTextStyle={{\r\n              color: '#424242',\r\n              fontSize: 16,\r\n            }}\r\n            // data={modelData.map((item) => item)}\r\n            data={modelData}\r\n            onSelect={useCallback((selectedItem) => {\r\n              modelVariable.text = selectedItem;\r\n              // console.log(modelVariable.text);\r\n\r\n\r\n              handleModelChange()\r\n            }, [])}\r\n            defaultButtonText=\"-- Choose Model --\"\r\n            buttonTextAfterSelection={(selectedItem) => {\r\n              return selectedItem;\r\n            }}\r\n            renderDropdownIcon={(isOpened) => {\r\n              return (\r\n                <Ionicons\r\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                  color={'#424242'}\r\n                  size={18}\r\n                />\r\n              );\r\n            }}\r\n            rowTextForSelection={(item) => {\r\n              return item;\r\n            }}\r\n            searchPlaceHolder=\"Search for Model\"\r\n            searchInputStyle={{ marginTop: 2, width: '100%', }}\r\n            disableAutoScroll\r\n            search\r\n\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n    handleFirstModalClose();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    handleFirstModalOpen();\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n\r\n  }, [modalSortOpen, modalIsLoading]);\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose} useRNModal>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        useRNModal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nconst SortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nconst PSBSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAddCode, textAreaAdd, handleAddTextChange, handleAddCodeTextChange, docName }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n  }, []);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n  }, []);\r\n\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    textAreaAdd.current.clear();\r\n    textAreaAddCode.current.clear();\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n\r\n  }, [])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, []);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataCode = textAreaAddCode.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n    const dataCodeArray = dataCode.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n\r\n    if (data !== '' && dataCode !== '') {\r\n      setModalSaveLoading(true);\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n\r\n        const dataToUpdate = dataArray.map((data, index) => ({\r\n          id: dataCodeArray[index],\r\n          name: data,\r\n        }));\r\n\r\n        const updateObject = {};\r\n        updateObject[dataName] = arrayUnion(...dataToUpdate);\r\n\r\n        await setDoc(modalDocRef, updateObject, { merge: true });\r\n        // const updateData = {\r\n        //   [dataName]: arrayUnion({ id: arrayUnion(...dataCodeArray), name: arrayUnion(...dataArray) })\r\n        // };\r\n\r\n        // await setDoc(modalDocRef, updateData, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity onPress={handleSortModalOpen} focusable={false}>\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item.id}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item.name}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAddCode}\r\n        size={'lg'}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          {/* <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} w={'full'}> */}\r\n          <HStack space={5} flex={1} margin={2}>\r\n            <VStack space={1} flex={1}>\r\n              <Text textAlign={'center'}>Code</Text>\r\n              <TextArea\r\n                flex={2}\r\n                textAlign={'center'}\r\n                w={'full'}\r\n                ref={textAreaAddCode}\r\n                multiline\r\n                onChangeText={handleAddCodeTextChange}\r\n                totalLines={8}\r\n                placeholder=\"Enter your data, separated by new lines\"\r\n              />\r\n            </VStack>\r\n            <VStack space={1} flex={1}>\r\n              <Text textAlign={'center'}>Name</Text>\r\n              <TextArea\r\n                flex={2}\r\n                textAlign={'center'}\r\n                w={'full'}\r\n                ref={textAreaAdd}\r\n                multiline\r\n                onChangeText={handleAddTextChange}\r\n                totalLines={8}\r\n                placeholder=\"Enter your data, separated by new lines\"\r\n              />\r\n            </VStack>\r\n          </HStack>\r\n          {/* </Modal.Body> */}\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleModalAddClose}\r\n                colorScheme={'muted'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}>\r\n                Close\r\n              </Button>\r\n              <Button\r\n                onPress={handleAddSubmit}\r\n                isLoading={modalSaveLoading ? true : false}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}>\r\n                Add\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nconst ModelSortAndAddModal = ({ selectMakeForAddModelRef, selectMakeForModelRef, textAreaAddModel, makeData }) => {\r\n\r\n  const [modalAddModel, setModalAddModel] = useState(false);\r\n  const [modalSaveModel, setModalSaveModel] = useState(false);\r\n  const [modalModel, setModalModel] = useState(false);\r\n  const [modalAddModelSuccess, setModalAddModelSuccess] = useState(false);\r\n  const [keySelectMakeForModel, setKeySelectMakeForModel] = useState(1);\r\n  const [keySelectMakeForAddModel, setKeySelectMakeForAddModel] = useState(1);\r\n  const [modelSortData, setModelSortData] = useState([]);\r\n  const [isAddModelDisabled, setIsAddModelDisabled] = useState(false);\r\n  const [modalSaveModelLoading, setModalSaveModelLoading] = useState(false);\r\n  const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n\r\n  const fetchModelSortData = async () => {\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n\r\n      const modelSortDocRef = doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value);\r\n      const modelSortDocSnap = await getDoc(modelSortDocRef);\r\n      if (modelSortDocSnap.exists()) {\r\n        setModelSortData(modelSortDocSnap.data()?.model || []);\r\n\r\n      }\r\n      else {\r\n        setModelSortData([]);\r\n      }\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n\r\n  //     const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), (snapshot) => {\r\n  //       setModelSortData(snapshot.data()?.model || []);\r\n  //       return () => unsubscribe();\r\n  //     });\r\n\r\n  //   }\r\n\r\n  // }, []);\r\n\r\n  const handleDeleteModelPress = useCallback(\r\n    (item) => {\r\n      setModelSortData((prevModelData) => {\r\n        const updatedModelData = prevModelData.filter((model) => model !== item);\r\n        return updatedModelData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const handleSaveModel = useCallback(async () => {\r\n    setModalSaveModelLoading(true);\r\n    console.log(selectMakeForModelRef.current?.value);\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n      try {\r\n        await updateDoc(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), { model: modelSortData });\r\n        setModalSaveModelLoading(false);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const logData = {\r\n          message: `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`.toLowerCase(),\r\n            'Model Update'.toLowerCase(),\r\n            'Model'.toLowerCase(),\r\n            'Update'.toLowerCase(),\r\n            selectMakeForModelRef.current.value.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n\r\n        addLogToCollection(logData);\r\n\r\n        handleModalSaveModelClose();\r\n      } catch (error) {\r\n        console.error(error);\r\n        setModalSaveModelLoading(false);\r\n        handleModalSaveModelClose();\r\n      }\r\n\r\n    }\r\n    else {\r\n      setModalSaveModelLoading(false);\r\n    }\r\n\r\n\r\n\r\n\r\n  }, [projectExtensionFirestore, modelSortData]);\r\n\r\n  const handleAddModelTextChange = () => {\r\n    const newText = textAreaAddModel.current?.value?.toUpperCase();\r\n    textAreaAddModel.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n  const handleMakeForModelChange = useCallback(() => {\r\n    makeForAddModelVariable.text = selectMakeForAddModelRef.current?.value;\r\n    fetchModelSortData();\r\n\r\n    // console.log(selectMakeForModelRef.current?.value);\r\n  }, []);\r\n\r\n  const handleMakeForAddModelChange = useCallback(() => {\r\n    setIsAddModelDisabled(false);\r\n\r\n  }, []);\r\n\r\n\r\n  const handleModalModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalModel(true);\r\n    fetchModelSortData();\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  const handleModalModelClose = useCallback(() => {\r\n    setModalIsLoading(false);\r\n\r\n    setModalModel(false);\r\n    setIsLoading(false);\r\n    setKeySelectMakeForModel(prevKey => prevKey + 1);\r\n    setModelSortData([]);\r\n  }, []);\r\n\r\n  const handleModalAddModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalAddModel(true);\r\n    // handleModalModelClose();\r\n    setModalModel(false);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleModalAddModelClose = useCallback(() => {\r\n    handleModalModelOpen();\r\n    setModalAddModel(false);\r\n    textAreaAddModel.current.clear();\r\n    setIsAddModelDisabled(true);\r\n    setIsLoading(false);\r\n    setKeySelectMakeForAddModel(prevKey => prevKey + 1);\r\n\r\n  }, []);\r\n\r\n  const handleModalAddModelSuccessOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalAddModel(false);\r\n    setModalModel(false);\r\n    textAreaAddModel.current.clear();\r\n    setModalAddModelSuccess(true);\r\n\r\n\r\n  }, []);\r\n\r\n  const handleModalAddModelSuccessClose = useCallback(() => {\r\n    setModalAddModelSuccess(false);\r\n    handleModalModelOpen();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleModalSaveModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n      setModalSaveModel(true);\r\n      // handleModalModelClose();\r\n      setModalModel(false);\r\n      setIsLoading(false);\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleModalSaveModelClose = useCallback(() => {\r\n    setModalSaveModel(false);\r\n    handleModalModelOpen();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleAddModelSubmit = async () => {\r\n    const data = textAreaAddModel.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n      setModalSaveLoading(true);\r\n      try {\r\n\r\n        const makeCollectionRef = collection(projectExtensionFirestore, 'Model');\r\n        const makeDocRef = doc(makeCollectionRef, selectMakeForAddModelRef.current?.value);\r\n        await setDoc(makeDocRef, { model: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`.toLowerCase(),\r\n            'Model Added'.toLowerCase(),\r\n            'Model'.toLowerCase(),\r\n            'Added'.toLowerCase(),\r\n            selectMakeForAddModelRef.current.value.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        setModalSaveLoading(false);\r\n        addLogToCollection(logData);\r\n\r\n        handleModalAddModelSuccessOpen();\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleModalModelOpen}>\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) :\r\n          (<Spinner color=\"white\" />)\r\n        }\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalModel}\r\n        onClose={handleModalModelClose} >\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Rearrange/Add Model</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n            <Box w={'full'} flexDir={'column'} height={'f'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddModelOpen}><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n              <Box>\r\n                <Select key={keySelectMakeForModel} ref={selectMakeForModelRef} onValueChange={handleMakeForModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\r\n                  bg: \"teal.600\",\r\n                  endIcon: <CheckIcon size=\"5\" />\r\n                }}>\r\n                  {makeData.map((item) => (\r\n\r\n                    <Select.Item key={item} label={item} value={item} />\r\n\r\n                  ))}\r\n                </Select>\r\n              </Box>\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modelSortData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16, 42, 67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteModelPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModelSortData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveModelOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n\r\n\r\n\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddModel}\r\n        onClose={handleModalAddModelClose}\r\n        initialFocusRef={selectMakeForAddModelRef}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add Model</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n            <Select key={keySelectMakeForAddModel} ref={selectMakeForAddModelRef} onValueChange={handleMakeForAddModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\r\n              bg: \"teal.600\",\r\n              endIcon: <CheckIcon size=\"5\" />\r\n            }}>\r\n              {makeData.map((item) => (\r\n\r\n                <Select.Item key={item} label={item} value={item} />\r\n\r\n              ))}\r\n            </Select>\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAddModel}\r\n              multiline\r\n              onChangeText={handleAddModelTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\"\r\n              isDisabled={isAddModelDisabled ? true : false}\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddModelSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSaveModel}\r\n        onClose={handleModalSaveModelClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Model Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSaveModel} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveModelLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalAddModelSuccess} onClose={handleModalAddModelSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Model Added!\r\n                {/* Vehicle Added! */}\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Model was successfully added! You can view it in the model list.\r\n                {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddModelSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nconst referenceNumberVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nconst nameVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nconst makeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst makeForAddModelVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\n\r\nconst modelVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst regYearVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst regMonthVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst steeringVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst transmissionVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst exteriorColorVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst fuelVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst portVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst salesVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst buyerVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst driveTypeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst bodyTypeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst stockStatusVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nlet resetKey = 0;\r\nconst featuresState = {\r\n  SafetySystemAnBrSy: false,\r\n  SafetySystemDrAi: false,\r\n  SafetySystemPaAi: false,\r\n  SafetySystemSiAi: false,\r\n  ComfortAiCoFr: false,\r\n  ComfortAiCoRe: false,\r\n  ComfortAMFMRa: false,\r\n  ComfortAMFMSt: false,\r\n  ComfortCDPl: false,\r\n  ComfortCDCh: false,\r\n  ComfortCrSpCo: false,\r\n  ComfortDiSp: false,\r\n  ComfortDVDPl: false,\r\n  ComfortHDD: false,\r\n  ComfortNaSyGPS: false,\r\n  ComfortPoSt: false,\r\n  ComfortPrAuSy: false,\r\n  ComfortReKeSy: false,\r\n  ComfortTiStWh: false,\r\n  InteriorLeSe: false,\r\n  InteriorPoDoLo: false,\r\n  InteriorPoMi: false,\r\n  InteriorPoSe: false,\r\n  InteriorPoWi: false,\r\n  InteriorReWiDe: false,\r\n  InteriorReWiWi: false,\r\n  InteriorThRoSe: false,\r\n  InteriorTiGl: false,\r\n  ExteriorAlWh: false,\r\n  ExteriorPoSlDo: false,\r\n  ExteriorSuRo: false,\r\n  SellingPointsCuWh: false,\r\n  SellingPointsFuLo: false,\r\n  SellingPointsMaHiAv: false,\r\n  SellingPointsBrNeTi: false,\r\n  SellingPointsNoAcHi: false,\r\n  SellingPointsNoSmPrOw: false,\r\n  SellingPointsOnOwHi: false,\r\n  SellingPointsPeRaTi: false,\r\n  SellingPointsReBo: false,\r\n  SellingPointsTuEn: false,\r\n  SellingPointsUpAuSy: false,\r\n};\r\n\r\nconst CheckBoxButton = ({ label, onChange, variable }) => {\r\n  const [checked, setChecked] = useState(variable);\r\n\r\n  // useEffect(() => {console.log(checked)}, [checked])\r\n\r\n  const handlePress = () => {\r\n\r\n    setChecked(!checked);\r\n    onChange(!checked);\r\n\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={{ flex: 1, justifyContent: 'center', }}\r\n      onPress={handlePress}\r\n    >\r\n      <Box\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        borderRadius={3}\r\n        bgColor={checked ? '#7b9cff' : 'white'}\r\n        margin={1}\r\n        overflow={'hidden'}\r\n        // h={50}\r\n        // w={180}\r\n        padding={2}\r\n        borderWidth={1}\r\n        borderColor={checked ? 'white' : 'muted.400'}\r\n      >\r\n        <Text\r\n          // fontSize={[9, 11, 12, 11, 12, 13]}\r\n          // maxW={[85, 100, 180, 100, 130, 180]}\r\n          textAlign={'center'}\r\n          noOfLines={3}\r\n          color={checked ? 'white' : 'muted.400'}\r\n        >\r\n          {label}\r\n        </Text>\r\n      </Box>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default function AddVehicle() {\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const loginName = useSelector((state) => state.loginName);\r\n\r\n  const [renderLoading, setRenderLoading] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n\r\n  const [name, setName] = useState(loginName);\r\n  const navigation = useNavigation();\r\n\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n  const dragSortableViewRef = useRef();\r\n\r\n  nameVariable.text = loginName;\r\n\r\n  const inputCarNotes = useRef(null);\r\n  const inputCarMemo = useRef(null);\r\n  const inputCarName = useRef(null);\r\n  const inputCarDesc = useRef(null);\r\n  const inputFobJpy = useRef(null);\r\n  const inputFobUsd = useRef(null);\r\n  const inputRegYear = useRef(null);\r\n  const selectRegYear = useRef(null);\r\n  const selectRegMonth = useRef(null);\r\n  const inputRegMonth = useRef(null);\r\n  const inputRefNum = useRef(null);\r\n  const inputStockIDNumber = useRef(null);\r\n  const inputChassis = useRef(null);\r\n  const inputModelCode = useRef(null);\r\n  const inputEngineCode = useRef(null);\r\n  const inputEngineDis = useRef(null);\r\n  const selectSteering = useRef(null);\r\n  const inputMileage = useRef(null);\r\n  const selectTransmission = useRef(null);\r\n  const selectExteriorColor = useRef(null);\r\n  const inputNumOfSeats = useRef(null);\r\n  const inputDoors = useRef(null);\r\n  const inputPurchasedPrice = useRef(null);\r\n  const inputFuel = useRef(null);\r\n  const selectFuel = useRef(null);\r\n  const selectPort = useRef(null);\r\n  const selectSales = useRef(null);\r\n  const selectBuyer = useRef(null);\r\n  const selectDriveType = useRef(null);\r\n  const inputDimensionLength = useRef(null);\r\n  const inputDimensionWidth = useRef(null);\r\n  const inputDimensionHeight = useRef(null);\r\n  const inputDimensionCubicMeters = useRef(null);\r\n  const inputDriveType = useRef(null);\r\n  const inputWeight = useRef(null);\r\n  const selectBodyType = useRef(null);\r\n  const selectStockStatus = useRef(null);\r\n  const textAreaAddMake = useRef(null);\r\n  const textAreaAddModel = useRef(null);\r\n  const textAreaAddTransmission = useRef(null);\r\n  const textAreaAddExteriorColor = useRef(null);\r\n  const textAreaAddFuel = useRef(null);\r\n  const textAreaAddPort = useRef(null);\r\n  const textAreaAddPortCode = useRef(null);\r\n  const textAreaAddSales = useRef(null);\r\n  const textAreaAddBuyer = useRef(null);\r\n  const textAreaAddSalesCode = useRef(null);\r\n  const textAreaAddBuyerCode = useRef(null);\r\n  const textAreaAddDriveType = useRef(null);\r\n  const textAreaAddBodyType = useRef(null);\r\n  const textAreaAddExpenseName = useRef(null);\r\n  const textAreaAddPaidTo = useRef(null);\r\n  const inputExpenseAmount = useRef(null);\r\n\r\n  // const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  // const selectedImages = useSelector((state) => state.selectedImages);\r\n  const portData = useSelector((state) => state.portData);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const transmissionData = useSelector((state) => state.transmissionData);\r\n  const fuelData = useSelector((state) => state.fuelData);\r\n  const buyerData = useSelector((state) => state.buyerData);\r\n  const salesData = useSelector((state) => state.salesData);\r\n  const driveTypeData = useSelector((state) => state.driveTypeData);\r\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\r\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\r\n  const currentYear = useSelector((state) => state.currentYear);\r\n\r\n  const minYear = 1970;\r\n  const years = Array.from({ length: currentYear - minYear + 1 }, (_, index) => currentYear - index);\r\n  globalRegYearDataVariable = years;\r\n\r\n\r\n\r\n\r\n  const steeringData = ['Left', 'Right'];\r\n\r\n\r\n  const selectMakeRef = useRef(null);\r\n  const selectModelRef = useRef(null);\r\n\r\n  const selectMakeForModelRef = useRef(null);\r\n  const selectMakeForAddModelRef = useRef(null);\r\n\r\n\r\n  const [isNoFeaturesSelected, setIsNoFeaturesSelected] = useState('white');\r\n\r\n\r\n  const [carNameError, setCarNameError] = useState('muted.500');\r\n  const [makeError, setMakeError] = useState('white');\r\n  const [modelError, setModelError] = useState('white');\r\n  const [regYearError, setRegYearError] = useState('white');\r\n  const [regMonthError, setRegMonthError] = useState('white');\r\n  const [refNumError, setRefNumError] = useState('white');\r\n  const [stockIDNumError, setStockIDNumError] = useState('white');\r\n  const [chassisError, setChassisError] = useState('white');\r\n  const [modelCodeError, setModelCodeError] = useState('white');\r\n  const [engineDisError, setEngineDisError] = useState('white');\r\n  const [steeringError, setSteeringError] = useState('white');\r\n  const [mileageError, setMileageError] = useState('white');\r\n  const [transmissionError, setTransmissionError] = useState('white');\r\n  const [exteriorColoError, setExteriorColoError] = useState('white');\r\n  const [numOfSeatsError, setNumOfSeatsError] = useState('white');\r\n  const [doorsError, setDoorsError] = useState('white');\r\n  const [purchasedPriceError, setPurchasedPriceError] = useState('white');\r\n  const [fuelError, setFuelError] = useState('white');\r\n  const [portError, setPortError] = useState('white');\r\n  const [buyerError, setBuyerError] = useState('white');\r\n  const [salesError, setSalesError] = useState('white');\r\n  const [dimensionLengthError, setDimensionLengthError] = useState('white');\r\n  const [dimensionWidthError, setDimensionWidthError] = useState('white');\r\n  const [dimensionHeightError, setDimensionHeightError] = useState('white');\r\n  const [driveTypeError, setDriveTypeError] = useState('white');\r\n  const [weightError, setWeightError] = useState('white');\r\n  const [bodyTypeError, setBodyTypeError] = useState('white');\r\n  const [stockStatusError, setStockStatusError] = useState('white');\r\n\r\n\r\n\r\n  const inputVehicleBoxRef = useRef(null);\r\n\r\n\r\n  const selectMakeBoxRef = useRef(null);\r\n  const selectModelBoxRef = useRef(null);\r\n  const selectRegYearBoxRef = useRef(null);\r\n  const selectRegMonthBoxRef = useRef(null);\r\n  const selectSteeringBoxRef = useRef(null);\r\n  const selectTransmissionBoxRef = useRef(null);\r\n  const selectExteriorColorBoxRef = useRef(null);\r\n  const selectFuelBoxRef = useRef(null);\r\n  const selectPortBoxRef = useRef(null);\r\n  const selectBuyerBoxRef = useRef(null);\r\n  const selectSalesBoxRef = useRef(null);\r\n  const selectDriveTypeBoxRef = useRef(null);\r\n  const selectBodyTypeBoxRef = useRef(null);\r\n  const selectStockStatusBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n\r\n    handleClearImages();\r\n\r\n    dispatch(setSupplyChainsCostsData([]));\r\n    dispatch(setDeleteImageVisible(true));\r\n    portVariable.id = '';\r\n    portVariable.text = '';\r\n    salesVariable.id = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.id = '';\r\n    buyerVariable.text = '';\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n    Object.keys(featuresState).forEach(property => {\r\n      featuresState[property] = false;\r\n    });\r\n\r\n    console.log('Sample');\r\n\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n  }, []);\r\n\r\n\r\n  const handleClearIfError = useCallback(() => {\r\n\r\n\r\n    handleClearToggleButton();\r\n    clearSelect();\r\n\r\n    inputCarName.current?.clear();\r\n    inputCarDesc.current?.clear();\r\n    inputFobJpy.current?.clear();\r\n    inputFobUsd.current?.clear();\r\n\r\n    inputRegYear.current?.clear();\r\n    inputRegMonth.current?.clear();\r\n    inputRefNum.current?.clear();\r\n    inputChassis.current?.clear();\r\n    inputModelCode.current?.clear();\r\n    inputEngineCode.current?.clear();\r\n    inputEngineDis.current?.clear();\r\n    inputMileage.current?.clear();\r\n    inputNumOfSeats.current?.clear();\r\n    inputDoors.current?.clear();\r\n    inputPurchasedPrice.current?.clear();\r\n    inputFuel.current?.clear();\r\n    inputDimensionLength.current?.clear();\r\n    inputDimensionWidth.current?.clear();\r\n    inputDimensionHeight.current?.clear();\r\n    inputDimensionCubicMeters.current.value = \"0.00\";\r\n    inputDriveType.current?.clear();\r\n    inputWeight.current?.clear();\r\n\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    portVariable.text = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.text = '';\r\n    portVariable.id = '';\r\n    salesVariable.id = '';\r\n    buyerVariable.id = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n  }, []);\r\n\r\n  // const uploadImages = useCallback(async () => {\r\n  //   const storageRef = ref(storage, `${globalVehicleFolderName}`);\r\n  //   const ImageFormat = { jpg: 'jpg' };\r\n\r\n  //   try {\r\n  //     // Get the names of the images to keep\r\n  //     const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n  //     // Delete existing files in the folder that do not match the names of the images to keep\r\n  //     const listResult = await listAll(storageRef);\r\n  //     await Promise.all(\r\n  //       listResult.items\r\n  //         .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n  //         .map((itemRef) => deleteObject(itemRef))\r\n  //     );\r\n\r\n  //     // Upload new images with or without watermarks based on the platform\r\n  //     function blobToArrayBuffer(blob) {\r\n  //       return new Promise((resolve, reject) => {\r\n  //         const reader = new FileReader();\r\n  //         reader.onload = () => resolve(reader.result);\r\n  //         reader.onerror = reject;\r\n  //         reader.readAsArrayBuffer(blob);\r\n  //       });\r\n  //     }\r\n\r\n  //     // ...\r\n\r\n  //     await Promise.all(\r\n  //       globalSelectedImages.map(async (asset, index) => {\r\n  //         const { uri } = asset;\r\n  //         const imageName = index.toString();\r\n\r\n  //         const response = await fetch(uri);\r\n  //         const blob = await response.blob();\r\n\r\n  //         const imageRef = ref(storage, `${globalVehicleFolderName}/${imageName}`);\r\n\r\n  //         // Define your watermark options\r\n  //         const watermarkOptions = {\r\n  //           text: 'Real Motor Japan',\r\n  //           color: '#FFFFFF', // Text color\r\n  //           fontSize: 20,\r\n  //           opacity: 50, // Set opacity if needed\r\n  //         };\r\n\r\n  //         // Convert the blob to an ArrayBuffer\r\n  //         const arrayBuffer = await blobToArrayBuffer(blob);\r\n\r\n  //         // Use watermark.js to add the watermark\r\n  //         const watermarkedArrayBuffer = await watermark([arrayBuffer, watermarkOptions])\r\n  //           .image(watermark.image.bottomCenter())\r\n  //           .then((img) => img.arrayBuffer());\r\n\r\n  //         // Convert the ArrayBuffer back to a Blob\r\n  //         const watermarkedBlob = new Blob([watermarkedArrayBuffer]);\r\n\r\n  //         await uploadBytes(imageRef, watermarkedBlob, { contentType: 'image/jpeg' });\r\n  //       })\r\n  //     );\r\n\r\n  //     console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\r\n  //   } catch (error) {\r\n  //     console.error('Error uploading images:', error);\r\n  //   }\r\n  // }, []);\r\n\r\n  const uploadImages = useCallback(async () => {\r\n\r\n    const storageRef = ref(storage, `${globalVehicleFolderName}`);\r\n    const ImageFormat = { jpg: 'jpg' };\r\n\r\n\r\n\r\n    try {\r\n      // Get the names of the images to keep\r\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n      // Delete existing files in the folder that do not match the names of the images to keep\r\n      const listResult = await listAll(storageRef);\r\n      await Promise.all(\r\n        listResult.items\r\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n          .map((itemRef) => deleteObject(itemRef))\r\n      );\r\n\r\n      await Promise.all(\r\n        globalSelectedImages.map(async (asset, index) => {\r\n          const { uri } = asset;\r\n          const imagename = index.toString();\r\n\r\n          const response = await fetch(uri);\r\n          const blob = await response.blob();\r\n\r\n          // Create an offscreen canvas\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          // Create a new image object\r\n          const img = new Image();\r\n          img.src = URL.createObjectURL(blob);\r\n\r\n          // Draw the image on the canvas\r\n          img.onload = async () => {\r\n            // Create a canvas element\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            // Calculate the desired width and height for the resized image\r\n            const maxWidth = 800; // Set your desired maximum width\r\n            const maxHeight = 600; // Set your desired maximum height\r\n            let newWidth = img.width;\r\n            let newHeight = img.height;\r\n\r\n            // Check if the image needs resizing\r\n            if (img.width > maxWidth) {\r\n              newWidth = maxWidth;\r\n              newHeight = (img.height * maxWidth) / img.width;\r\n            }\r\n\r\n            if (newHeight > maxHeight) {\r\n              newWidth = (newWidth * maxHeight) / newHeight;\r\n              newHeight = maxHeight;\r\n            }\r\n\r\n            // Set the canvas dimensions to the new width and height\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n\r\n            // Draw the resized image onto the canvas\r\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n\r\n            // Calculate the font size as a percentage of the image width\r\n            const fontSizePercentage = 3;\r\n            const imageRes = img.height * img.width;\r\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\r\n\r\n            ctx.font = `bold ${fontSize}px Arial`;\r\n            ctx.fillStyle = '#fff';\r\n            ctx.shadowColor = 'transparent';\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.lineWidth = 2;\r\n\r\n            // Calculate the position for the watermark text\r\n            const watermarkText = `Real Motor Japan ${globalReferenceNumber}`;\r\n            const textWidth = ctx.measureText(watermarkText).width;\r\n            const textHeight = fontSize; // Font size determines the text height\r\n\r\n            // Set padding around the text (adjust as needed)\r\n            const paddingX = 10;\r\n            const paddingY = 5;\r\n\r\n            // Calculate the position for the text shadow\r\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\r\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\r\n\r\n            // Increase the shadow thickness by adjusting the shadow blur radius\r\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\r\n\r\n            // Draw the text shadow (black)\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(watermarkText, xShadow, yShadow);\r\n\r\n            // Reset the shadow blur radius for the actual text\r\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\r\n\r\n            // Calculate the position for the actual text\r\n            const x = (canvas.width - textWidth) / 2;\r\n            const y = canvas.height - 20;\r\n\r\n            // Draw the actual text (white)\r\n            ctx.fillStyle = '#fff';\r\n            ctx.fillText(watermarkText, x, y);\r\n\r\n            // Convert the canvas to a blob\r\n            const watermarkedImageBlob = await new Promise(resolve => {\r\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\r\n            });\r\n\r\n            // Upload the resized image to Firebase Storage\r\n            const imageRef = ref(storage, `${globalVehicleFolderName}/${imagename}`);\r\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\r\n          };\r\n\r\n        })\r\n\r\n      );\r\n\r\n\r\n      console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleUpload = useCallback(async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    setCarNameError('muted.500');\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setBuyerError('white');\r\n    setSalesError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    const selectIsEmpty = makeVariable.text == \"\" ||\r\n      modelVariable.text == \"\" ||\r\n      regYearVariable.text == \"\" ||\r\n      regMonthVariable.text == \"\" ||\r\n      steeringVariable.text == \"\" ||\r\n      transmissionVariable.text == \"\" ||\r\n      exteriorColorVariable.text == \"\" ||\r\n      fuelVariable.text == \"\" ||\r\n      portVariable.text == \"\" ||\r\n      buyerVariable.text == \"\" ||\r\n      salesVariable.text == \"\" ||\r\n      driveTypeVariable.text == \"\" ||\r\n      bodyTypeVariable.text == \"\" ||\r\n      stockStatusVariable.text == \"\";\r\n\r\n    const inputIsEmpty = inputStockIDNumber.current?.value == \"\" || inputRefNum.current?.value == \"\" ||\r\n      inputChassis.current?.value == \"\" ||\r\n      inputModelCode.current?.value == \"\" ||\r\n      inputEngineDis.current?.value == \"\" ||\r\n      inputEngineDis.current?.value == 0 ||\r\n      inputMileage.current?.value == \"\" ||\r\n      inputMileage.current?.value == 0 ||\r\n      inputNumOfSeats.current?.value == \"\" ||\r\n      inputDoors.current?.value == \"\" ||\r\n      inputNumOfSeats.current?.value == 0 ||\r\n      inputDoors.current?.value == 0 ||\r\n      inputPurchasedPrice.current?.value == 0 ||\r\n      inputPurchasedPrice.current?.value == \"\" ||\r\n      inputDimensionLength.current?.value == \"\" ||\r\n      inputDimensionWidth.current?.value == \"\" ||\r\n      inputDimensionHeight.current?.value == \"\" ||\r\n      inputDimensionCubicMeters.current?.value == \"\" ||\r\n      inputDimensionLength.current?.value == 0 ||\r\n      inputDimensionWidth.current?.value == 0 ||\r\n      inputDimensionHeight.current?.value == 0 ||\r\n      inputDimensionCubicMeters.current?.value == 0 ||\r\n      inputWeight.current?.value == \"\" ||\r\n      inputWeight.current?.value == 0 ||\r\n      inputCarName.current?.value == \"\";\r\n\r\n    // const inputExceedLength = input;\r\n    const allValuesAreFalse = Object.values(featuresState).every((value) => value === false);\r\n\r\n    console.log(inputIsEmpty || selectIsEmpty);\r\n\r\n    if (inputIsEmpty || selectIsEmpty || allValuesAreFalse) {\r\n      dispatch(setLoadingModalVisible(false));\r\n      inputVehicleBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n      if (allValuesAreFalse) {\r\n        // All features are false\r\n        console.log('All features are false');\r\n        setIsNoFeaturesSelected('danger.400');\r\n        // featureBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        // handleModalUploadClose();\r\n      } else {\r\n        // At least one feature is true\r\n        console.log('At least one feature is true.');\r\n        // handleModalUploadClose();\r\n      }\r\n\r\n      if (inputCarName.current?.value == \"\") {\r\n        inputCarName.current.scrollIntoView({ behavior: 'smooth' });\r\n        setCarNameError('danger.400');\r\n      }\r\n\r\n      if (bodyTypeVariable.text == \"\") {\r\n        selectBodyTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setBodyTypeError('danger.400');\r\n      }\r\n\r\n      if (stockStatusVariable.text == \"\") {\r\n        selectStockStatusBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setStockStatusError('danger.400');\r\n      }\r\n\r\n      if (inputWeight.current?.value == \"\" || inputWeight.current?.value == 0) {\r\n        inputWeight.current.scrollIntoView({ behavior: 'smooth' });\r\n        setWeightError('danger.400');\r\n      }\r\n\r\n      if (driveTypeVariable.text == \"\") {\r\n        selectDriveTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDriveTypeError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionHeight.current?.value == \"\" || inputDimensionHeight.current?.value == 0) {\r\n        inputDimensionHeight.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionHeightError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionWidth.current?.value == \"\" || inputDimensionWidth.current?.value == 0) {\r\n        inputDimensionWidth.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionWidthError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionLength.current?.value == \"\" || inputDimensionLength.current?.value == 0) {\r\n        inputDimensionLength.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionLengthError('danger.400');\r\n      }\r\n\r\n      if (fuelVariable.text == \"\") {\r\n        selectFuelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setFuelError('danger.400');\r\n      }\r\n\r\n      if (inputDoors.current?.value == \"\" || inputDoors.current?.value == 0) {\r\n        inputDoors.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDoorsError('danger.400');\r\n      }\r\n      if (inputPurchasedPrice.current?.value == \"\" || inputPurchasedPrice.current?.value == 0) {\r\n        inputPurchasedPrice.current.scrollIntoView({ behavior: 'smooth' });\r\n        setPurchasedPriceError('danger.400');\r\n      }\r\n\r\n      if (inputNumOfSeats.current?.value == \"\") {\r\n        inputNumOfSeats.current.scrollIntoView({ behavior: 'smooth' });\r\n        setNumOfSeatsError('danger.400');\r\n      }\r\n\r\n      if (exteriorColorVariable.text == \"\") {\r\n        selectExteriorColorBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setExteriorColoError('danger.400');\r\n      }\r\n\r\n      if (transmissionVariable.text == \"\") {\r\n        selectTransmissionBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setTransmissionError('danger.400');\r\n      }\r\n\r\n      if (inputMileage.current?.value == \"\" || inputMileage.current?.value == 0) {\r\n        inputMileage.current.scrollIntoView({ behavior: 'smooth' });\r\n        setMileageError('danger.400');\r\n      }\r\n\r\n      if (steeringVariable.text == \"\") {\r\n        selectSteeringBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setSteeringError('danger.400');\r\n      }\r\n\r\n      if (inputEngineDis.current?.value == \"\" || inputEngineDis.current?.value == 0) {\r\n        inputEngineDis.current.scrollIntoView({ behavior: 'smooth' });\r\n        setEngineDisError('danger.400');\r\n      }\r\n\r\n      if (inputModelCode.current?.value == \"\") {\r\n        inputModelCode.current.scrollIntoView({ behavior: 'smooth' });\r\n        setModelCodeError('danger.400');\r\n      }\r\n\r\n      if (inputChassis.current?.value == \"\") {\r\n        inputChassis.current.scrollIntoView({ behavior: 'smooth' });\r\n        setChassisError('danger.400');\r\n      }\r\n\r\n      if (inputRefNum.current?.value == \"\") {\r\n        inputRefNum.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRefNumError('danger.400');\r\n      }\r\n      if (buyerVariable.text == \"\") {\r\n        selectBuyerBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setBuyerError('danger.400');\r\n      }\r\n\r\n      if (salesVariable.text == \"\") {\r\n        selectSalesBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setSalesError('danger.400');\r\n      }\r\n\r\n\r\n      if (portVariable.text == \"\") {\r\n        selectPortBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setPortError('danger.400');\r\n      }\r\n\r\n\r\n      if (regMonthVariable.text == \"\") {\r\n        selectRegMonthBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRegMonthError('danger.400');\r\n      }\r\n\r\n      if (regYearVariable.text == \"\") {\r\n        selectRegYearBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRegYearError('danger.400');\r\n      }\r\n\r\n      if (modelVariable.text == \"\") {\r\n        selectModelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setModelError('danger.400');\r\n      }\r\n\r\n      if (makeVariable.text == \"\") {\r\n        selectMakeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setMakeError('danger.400');\r\n      }\r\n\r\n      if (inputStockIDNumber.current?.value == \"\") {\r\n        inputStockIDNumber.current.scrollIntoView({ behavior: 'smooth' });\r\n        setStockIDNumError('danger.400');\r\n      }\r\n\r\n    }\r\n    else {\r\n      const stockCollectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n      const stockID = inputStockIDNumber.current?.value;\r\n      const docQuery = doc(stockCollectionRef, stockID);\r\n      const docSnap = await getDoc(docQuery);\r\n\r\n      dispatch(setLoadingModalVisible(true));\r\n      globalReferenceNumber = inputRefNum.current?.value;\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const timestampForID = moment(datetime).format('YYYYMMDDHHmmss');\r\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n      const year = moment(datetime).format('YYYY');\r\n      const month = moment(datetime).format('MM');\r\n      const monthWithDay = moment(datetime).format('MM/DD');\r\n      const date = moment(datetime).format('YYYY/MM/DD');\r\n      const day = moment(datetime).format('DD');\r\n      const time = moment(datetime).format('HH:mm');\r\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n      // console.log(`${timestampForID}${inputRefNum.current?.value}`);\r\n\r\n      const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n      const docRef = doc(collectionRef, inputStockIDNumber.current?.value);\r\n\r\n      const docData = docSnap.data();\r\n      // Your data object to be added\r\n      const docSnapshot = await getDoc(docRef);\r\n\r\n\r\n\r\n\r\n      const keywordsData = [\r\n        inputRefNum.current?.value,\r\n        inputCarName.current?.value,\r\n        inputStockIDNumber.current?.value,\r\n        regYearVariable.text,\r\n        makeVariable.text,\r\n        modelVariable.text,\r\n        inputChassis.current?.value,\r\n        `${makeVariable.text} ${modelVariable.text}`,\r\n        `${regYearVariable.text} ${makeVariable.text}`,\r\n      ]\r\n      const fobHistoryData = {\r\n        date: formattedTime,\r\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\r\n        changedBy: nameVariable.text,\r\n      };\r\n\r\n      let fobHistoryValue;\r\n      const inputFobValue = inputFobJpy.current?.value;\r\n      if (globalFobPrice !== inputFobValue && inputFobValue !== '') {\r\n        fobHistoryValue = arrayUnion(fobHistoryData);\r\n      }\r\n\r\n      const data = {\r\n        keywords: keywordsData,\r\n        imageCount: globalSelectedImages.length,\r\n        supplyChainsCostsData: globalSupplyChainCostsData,\r\n        ...(fobHistoryValue && { fobHistory: fobHistoryValue }),\r\n        // ...(docSnap.exists() || docData.inputStockIDNumber.current?.value.hasOwnProperty('dateAdded')\r\n        // ? { updatedDate: formattedTime }\r\n        // : { dateAdded: formattedTime }),\r\n        // dateAdded: formattedTime, \r\n        display: false,\r\n        photos: false,\r\n        stockID: inputStockIDNumber.current?.value,\r\n        make: makeVariable.text,\r\n        model: modelVariable.text,\r\n        regYear: regYearVariable.text,\r\n        regMonth: regMonthVariable.text,\r\n        referenceNumber: inputRefNum.current?.value,\r\n        chassisNumber: inputChassis.current?.value,\r\n        modelCode: inputModelCode.current?.value,\r\n        engineCode: inputEngineCode.current?.value,\r\n        engineDisplacement: inputEngineDis.current.value.replace(/,/g, ''),\r\n        steering: steeringVariable.text,\r\n        mileage: inputMileage.current.value.replace(/,/g, ''),\r\n        transmission: transmissionVariable.text,\r\n        exteriorColor: exteriorColorVariable.text,\r\n        numberOfSeats: inputNumOfSeats.current?.value,\r\n        doors: inputDoors.current?.value,\r\n        purchasedPrice: inputPurchasedPrice.current.value.replace(/,/g, ''),\r\n        fuel: fuelVariable.text,\r\n        port: portVariable.text,\r\n        sales: salesVariable.text,\r\n        buyer: buyerVariable.text,\r\n        portID: portVariable.id,\r\n        salesID: salesVariable.id,\r\n        buyerID: buyerVariable.id,\r\n        dimensionLength: inputDimensionLength.current.value.replace(/,/g, ''),\r\n        dimensionWidth: inputDimensionWidth.current.value.replace(/,/g, ''),\r\n        dimensionHeight: inputDimensionHeight.current.value.replace(/,/g, ''),\r\n        dimensionCubicMeters: inputDimensionCubicMeters.current.value.replace(/,/g, ''),\r\n        driveType: driveTypeVariable.text,\r\n        weight: inputWeight.current.value.replace(/,/g, ''),\r\n        bodyType: bodyTypeVariable.text,\r\n        stockStatus: stockStatusVariable.text,\r\n        carName: inputCarName.current?.value,\r\n        carDescription: inputCarDesc.current?.value,\r\n        notes: inputCarNotes.current?.value,\r\n        memo: inputCarMemo.current?.value,\r\n\r\n        comfort: {\r\n          ComfortAiCoFr: featuresState.ComfortAiCoFr,\r\n          ComfortAiCoRe: featuresState.ComfortAiCoRe,\r\n          ComfortAMFMRa: featuresState.ComfortAMFMRa,\r\n          ComfortAMFMSt: featuresState.ComfortAMFMSt,\r\n          ComfortCDPl: featuresState.ComfortCDPl,\r\n          ComfortCDCh: featuresState.ComfortCDCh,\r\n          ComfortCrSpCo: featuresState.ComfortCrSpCo,\r\n          ComfortDiSp: featuresState.ComfortDiSp,\r\n          ComfortDVDPl: featuresState.ComfortDVDPl,\r\n          ComfortHDD: featuresState.ComfortHDD,\r\n          ComfortNaSyGPS: featuresState.ComfortNaSyGPS,\r\n          ComfortPoSt: featuresState.ComfortPoSt,\r\n          ComfortPrAuSy: featuresState.ComfortPrAuSy,\r\n          ComfortReKeSy: featuresState.ComfortReKeSy,\r\n          ComfortTiStWh: featuresState.ComfortTiStWh,\r\n        },\r\n\r\n        ComfortAiCoFr: featuresState.ComfortAiCoFr,\r\n        ComfortAiCoRe: featuresState.ComfortAiCoRe,\r\n        ComfortAMFMRa: featuresState.ComfortAMFMRa,\r\n        ComfortAMFMSt: featuresState.ComfortAMFMSt,\r\n        ComfortCDPl: featuresState.ComfortCDPl,\r\n        ComfortCDCh: featuresState.ComfortCDCh,\r\n        ComfortCrSpCo: featuresState.ComfortCrSpCo,\r\n        ComfortDiSp: featuresState.ComfortDiSp,\r\n        ComfortDVDPl: featuresState.ComfortDVDPl,\r\n        ComfortHDD: featuresState.ComfortHDD,\r\n        ComfortNaSyGPS: featuresState.ComfortNaSyGPS,\r\n        ComfortPoSt: featuresState.ComfortPoSt,\r\n        ComfortPrAuSy: featuresState.ComfortPrAuSy,\r\n        ComfortReKeSy: featuresState.ComfortReKeSy,\r\n        ComfortTiStWh: featuresState.ComfortTiStWh,\r\n\r\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\r\n\r\n        safetySystem: {\r\n          SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy,\r\n          SafetySystemDrAi: featuresState.SafetySystemDrAi,\r\n          SafetySystemPaAi: featuresState.SafetySystemPaAi,\r\n          SafetySystemSiAi: featuresState.SafetySystemSiAi,\r\n\r\n        },\r\n\r\n        SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy,\r\n        SafetySystemDrAi: featuresState.SafetySystemDrAi,\r\n        SafetySystemPaAi: featuresState.SafetySystemPaAi,\r\n        SafetySystemSiAi: featuresState.SafetySystemSiAi,\r\n\r\n        interior: {\r\n          InteriorLeSe: featuresState.InteriorLeSe,\r\n          InteriorPoDoLo: featuresState.InteriorPoDoLo,\r\n          InteriorPoMi: featuresState.InteriorPoMi,\r\n          InteriorPoSe: featuresState.InteriorPoSe,\r\n          InteriorPoWi: featuresState.InteriorPoWi,\r\n          InteriorReWiDe: featuresState.InteriorReWiDe,\r\n          InteriorReWiWi: featuresState.InteriorReWiWi,\r\n          InteriorThRoSe: featuresState.InteriorThRoSe,\r\n          InteriorTiGl: featuresState.InteriorTiGl,\r\n        },\r\n\r\n        InteriorLeSe: featuresState.InteriorLeSe,\r\n        InteriorPoDoLo: featuresState.InteriorPoDoLo,\r\n        InteriorPoMi: featuresState.InteriorPoMi,\r\n        InteriorPoSe: featuresState.InteriorPoSe,\r\n        InteriorPoWi: featuresState.InteriorPoWi,\r\n        InteriorReWiDe: featuresState.InteriorReWiDe,\r\n        InteriorReWiWi: featuresState.InteriorReWiWi,\r\n        InteriorThRoSe: featuresState.InteriorThRoSe,\r\n        InteriorTiGl: featuresState.InteriorTiGl,\r\n\r\n        exterior: {\r\n          ExteriorAlWh: featuresState.ExteriorAlWh,\r\n          ExteriorPoSlDo: featuresState.ExteriorPoSlDo,\r\n          ExteriorSuRo: featuresState.ExteriorSuRo,\r\n        },\r\n        ExteriorAlWh: featuresState.ExteriorAlWh,\r\n        ExteriorPoSlDo: featuresState.ExteriorPoSlDo,\r\n        ExteriorSuRo: featuresState.ExteriorSuRo,\r\n\r\n        sellingPoints: {\r\n          SellingPointsCuWh: featuresState.SellingPointsCuWh,\r\n          SellingPointsFuLo: featuresState.SellingPointsFuLo,\r\n          SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv,\r\n          SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi,\r\n          SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi,\r\n          SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw,\r\n          SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi,\r\n          SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi,\r\n          SellingPointsReBo: featuresState.SellingPointsReBo,\r\n          SellingPointsTuEn: featuresState.SellingPointsTuEn,\r\n          SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy,\r\n        },\r\n\r\n        SellingPointsCuWh: featuresState.SellingPointsCuWh,\r\n        SellingPointsFuLo: featuresState.SellingPointsFuLo,\r\n        SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv,\r\n        SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi,\r\n        SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi,\r\n        SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw,\r\n        SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi,\r\n        SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi,\r\n        SellingPointsReBo: featuresState.SellingPointsReBo,\r\n        SellingPointsTuEn: featuresState.SellingPointsTuEn,\r\n        SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy,\r\n\r\n\r\n        // Add more fields as needed\r\n      };\r\n\r\n      // Get a reference to the document with the given stock ID\r\n\r\n\r\n      // Get the document\r\n\r\n\r\n      // Check if the document exists\r\n      if (docSnap.exists()) {\r\n        updateDoc(docRef, data)\r\n          .then(async () => {\r\n            try {\r\n\r\n              await uploadImages();\r\n              dispatch(setLoadingModalVisible(false));\r\n              dispatch(setIsUpdateSuccessModalOpen(true));\r\n\r\n              try {\r\n                // Check if the document exists\r\n                const docSnapshot = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                  const dataDoc = docSnap.data();\r\n                  if (dataDoc) {\r\n                    if ('dateAdded' in dataDoc) {\r\n                      // The document exists and has a 'dateAdded' field\r\n                      console.log('Date Update');\r\n                      // Update the 'updatedDate' field without removing 'dateAdded'\r\n                      const updates = {\r\n                        updatedDate: formattedTime, // Replace 'formattedTime' with the updated date value\r\n                      };\r\n\r\n                      // Use updateDoc to only update the 'updatedDate' field in the document\r\n                      await updateDoc(docRef, updates);\r\n                    } else {\r\n                      // The document exists, but it doesn't have a 'dateAdded' field\r\n                      console.log('Date Added');\r\n                      // Update the 'dateAdded' field without removing other fields\r\n                      const updates = {\r\n                        dateAdded: formattedTime, // Replace 'formattedTime' with the date value\r\n                      };\r\n\r\n                      // Use updateDoc to only update the 'dateAdded' field in the document\r\n                      await updateDoc(docRef, updates);\r\n                    }\r\n                  } else {\r\n                    // The document exists, but it doesn't have a 'dateAdded' field\r\n                    console.log('Date Added');\r\n                    // Update the 'dateAdded' field without removing other fields\r\n                    const updates = {\r\n                      dateAdded: formattedTime, // Replace 'formattedTime' with the date value\r\n                    };\r\n\r\n                    // Use updateDoc to only update the 'dateAdded' field in the document\r\n                    await updateDoc(docRef, updates);\r\n                  }\r\n                } else {\r\n                  // The document does not exist\r\n                  console.log('Date Added');\r\n                }\r\n              } catch (error) {\r\n                console.error('Error checking document:', error);\r\n              }\r\n\r\n              const logData = {\r\n                message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  inputStockIDNumber.current.value.toLowerCase(),\r\n                  `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\r\n                  'Vehicle Updated'.toLowerCase(),\r\n                  'Vehicle'.toLowerCase(),\r\n                  'Updated'.toLowerCase(),\r\n                  inputCarName.current.value.toLowerCase(),\r\n                  inputRefNum.current.value.toLowerCase(),\r\n                  nameVariable.text.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n              };\r\n              dispatch(setLoadingModalVisible(false));\r\n              handleClearImages();\r\n              addLogToCollection(logData);\r\n              handleClear();\r\n              console.log('Document updated successfully!');\r\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\r\n            } catch (error) {\r\n              // Handle errors that may occur during the update process\r\n              console.error('Error updating document:', error);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.error('Error updating document: ', error);\r\n          });\r\n      }\r\n      else {\r\n        const dataWithDateAdded = {\r\n          ...data,\r\n          dateAdded: formattedTime,\r\n        };\r\n\r\n        setDoc(docRef, dataWithDateAdded)\r\n          .then(async () => {\r\n\r\n            try {\r\n              await uploadImages();\r\n              dispatch(setLoadingModalVisible(false));\r\n              dispatch(setIsSuccessModalOpen(true));\r\n\r\n              // try {\r\n              //   // Check if the document exists\r\n              //   const docSnapshot = await getDoc(docRef);\r\n\r\n              //   if (docSnapshot.exists()) {\r\n              //     const data = docSnapshot.data();\r\n              //     if (data) {\r\n              //       if ('dateAdded' in data) {\r\n              //         // The document exists and has a 'dateAdded' field\r\n              //         console.log('Date Update');\r\n              //         // Update the 'updatedDate' field in the document\r\n              //         const updates = {\r\n              //           updatedDate: formattedTime, // Replace 'newFieldValue' with the updated date value\r\n              //         };\r\n\r\n              //         // Use setDoc to update the 'updatedDate' field in the document\r\n              //         await setDoc(docRef, updates, { merge: true });\r\n              //       } else {\r\n              //         // The document exists, but it doesn't have a 'dateAdded' field\r\n              //         console.log('Date Added');\r\n              //         // Update the 'dateAdded' field in the document\r\n              //         const updates = {\r\n              //           dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\r\n              //         };\r\n\r\n              //         // Use setDoc to update the 'dateAdded' field in the document\r\n              //         await setDoc(docRef, updates, { merge: true });\r\n              //       }\r\n              //     } else {\r\n              //       // The document exists, but it doesn't have a 'dateAdded' field\r\n              //       console.log('Date Added');\r\n              //       // Update the 'dateAdded' field in the document\r\n              //       const updates = {\r\n              //         dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\r\n              //       };\r\n\r\n              //       // Use setDoc to update the 'dateAdded' field in the document\r\n              //       await setDoc(docRef, updates, { merge: true });\r\n              //     }\r\n              //   } else {\r\n              //     // The document does not exist\r\n              //     console.log('Date Added');\r\n              //   }\r\n              // } catch (error) {\r\n              //   console.error('Error checking document:', error);\r\n              // }\r\n\r\n              const logData = {\r\n                message: `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  inputStockIDNumber.current.value.toLowerCase(),\r\n                  `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\r\n                  'Vehicle Added'.toLowerCase(),\r\n                  'Vehicle'.toLowerCase(),\r\n                  'Added'.toLowerCase(),\r\n                  inputCarName.current.value.toLowerCase(),\r\n                  inputRefNum.current.value.toLowerCase(),\r\n                  nameVariable.text.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n              };\r\n\r\n              handleClearImages();\r\n              addLogToCollection(logData);\r\n              handleClear();\r\n              console.log('Document added successfully!');\r\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n          })\r\n          .catch((error) => {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.error('Error adding document: ', error);\r\n          });\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleClearToggleButton = () => {\r\n    resetKey++;\r\n\r\n    featuresState.SafetySystemAnBrSy = false;\r\n    featuresState.SafetySystemDrAi = false;\r\n    featuresState.SafetySystemPaAi = false;\r\n    featuresState.SafetySystemSiAi = false;\r\n    featuresState.ComfortAiCoFr = false;\r\n    featuresState.ComfortAiCoRe = false;\r\n    featuresState.ComfortAMFMRa = false;\r\n    featuresState.ComfortAMFMSt = false;\r\n    featuresState.ComfortCDPl = false;\r\n    featuresState.ComfortCDCh = false;\r\n    featuresState.ComfortCrSpCo = false;\r\n    featuresState.ComfortDiSp = false;\r\n    featuresState.ComfortDVDPl = false;\r\n    featuresState.ComfortHDD = false;\r\n    featuresState.ComfortNaSyGPS = false;\r\n    featuresState.ComfortPoSt = false;\r\n    featuresState.ComfortPrAuSy = false;\r\n    featuresState.ComfortReKeSy = false;\r\n    featuresState.ComfortTiStWh = false;\r\n    featuresState.InteriorLeSe = false;\r\n    featuresState.InteriorPoDoLo = false;\r\n    featuresState.InteriorPoMi = false;\r\n    featuresState.InteriorPoSe = false;\r\n    featuresState.InteriorPoWi = false;\r\n    featuresState.InteriorReWiDe = false;\r\n    featuresState.InteriorReWiWi = false;\r\n    featuresState.InteriorThRoSe = false;\r\n    featuresState.InteriorTiGl = false;\r\n    featuresState.ExteriorAlWh = false;\r\n    featuresState.ExteriorPoSlDo = false;\r\n    featuresState.ExteriorSuRo = false;\r\n    featuresState.SellingPointsCuWh = false;\r\n    featuresState.SellingPointsFuLo = false;\r\n    featuresState.SellingPointsMaHiAv = false;\r\n    featuresState.SellingPointsBrNeTi = false;\r\n    featuresState.SellingPointsNoAcHi = false;\r\n    featuresState.SellingPointsNoSmPrOw = false;\r\n    featuresState.SellingPointsOnOwHi = false;\r\n    featuresState.SellingPointsPeRaTi = false;\r\n    featuresState.SellingPointsReBo = false;\r\n    featuresState.SellingPointsTuEn = false;\r\n    featuresState.SellingPointsUpAuSy = false;\r\n  };\r\n\r\n  const handleClear = useCallback(() => {\r\n\r\n    handleClearToggleButton();\r\n    handleClearImages();\r\n    clearSelect();\r\n\r\n\r\n    dispatch(setSupplyChainsCostsData([]));\r\n    globalSupplyChainCostsData = [];\r\n    globalSupplyChainCostsAmount = '';\r\n    globalFobPrice = '';\r\n\r\n    inputStockIDNumber.current?.clear();\r\n    inputCarName.current?.clear();\r\n    inputCarDesc.current?.clear();\r\n    inputFobJpy.current?.clear();\r\n    inputFobUsd.current?.clear();\r\n\r\n    inputRegYear.current?.clear();\r\n    inputRegMonth.current?.clear();\r\n    inputRefNum.current?.clear();\r\n    inputChassis.current?.clear();\r\n    inputModelCode.current?.clear();\r\n    inputEngineCode.current?.clear();\r\n    inputEngineDis.current?.clear();\r\n    inputMileage.current?.clear();\r\n    inputNumOfSeats.current?.clear();\r\n    inputDoors.current?.clear();\r\n    inputPurchasedPrice.current?.clear();\r\n    inputFuel.current?.clear();\r\n    inputDimensionLength.current?.clear();\r\n    inputDimensionWidth.current?.clear();\r\n    inputDimensionHeight.current?.clear();\r\n    inputDimensionCubicMeters.current.value = \"0.00\";\r\n    inputDriveType.current?.clear();\r\n    inputWeight.current?.clear();\r\n    inputCarNotes.current?.clear();\r\n    inputCarMemo.current?.clear();\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    portVariable.text = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.text = '';\r\n    portVariable.id = '';\r\n    salesVariable.id = '';\r\n    buyerVariable.id = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    // handleModalClearClose();\r\n\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"LOGS\");\r\n  }, []);\r\n  const handleToggleAddAccount = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  }, []);\r\n\r\n  const handleToggleAccountList = useCallback(() => {\r\n\r\n    navigation.navigate(\"ACCOUNT LIST\");\r\n  }, []);\r\n\r\n  const handleToggleAddVehicle = useCallback(() => {\r\n\r\n    navigation.navigate(\"ADD NEW VEHICLE\");\r\n  }, []);\r\n\r\n\r\n  const handleVehicleList = useCallback(() => {\r\n    navigation.navigate(\"VEHICLE LIST\");\r\n  }, []);\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(projectControlAuth)\r\n          .then(() => {\r\n            navigation.navigate('Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(projectControlAuth)\r\n        .then(() => {\r\n          navigation.navigate('Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = projectControlAuth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(projectControlAuth).then(() => {\r\n      navigation.navigate('Login');\r\n      setEmail('');\r\n      setName('');\r\n    }).catch(() => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n  const { width } = Dimensions.get('window');\r\n\r\n\r\n  const handleInputPurchasedPriceChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputPurchasedPrice.current.value = formattedValue;\r\n\r\n  };\r\n\r\n\r\n  const handleInputFobJpyChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Check if the numeric value starts with 0\r\n    if (numericValue.startsWith('0')) {\r\n      // Handle the case when the value starts with 0\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n      return;\r\n    }\r\n\r\n    // Truncate the numeric value to a maximum of 9 digits\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n    if (formattedValue !== '') {\r\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\r\n\r\n      if (!isNaN(multipliedValue)) {\r\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\r\n      } else {\r\n        // Handle the case when the multipliedValue is NaN\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: '' });\r\n      }\r\n    } else {\r\n      // Handle the case when formattedValue is empty\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleInputFobJpyChange(inputFobJpy.current?.value);\r\n  }, [jpyToUsd]);\r\n\r\n\r\n\r\n  const handleAddMakeTextChange = () => {\r\n    const newText = textAreaAddMake.current?.value?.toUpperCase();\r\n    textAreaAddMake.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n\r\n  const handleAddTransmissionTextChange = () => {\r\n    const textAreaValue = textAreaAddTransmission.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddTransmission.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddFuelTextChange = () => {\r\n    const textAreaValue = textAreaAddFuel.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddFuel.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddPortTextChange = () => {\r\n    const textAreaValue = textAreaAddPort.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPort.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPortCodeTextChange = () => {\r\n    const newText = textAreaAddPortCode.current?.value?.toUpperCase();\r\n    textAreaAddPortCode.current?.setNativeProps({ text: newText });\r\n    // Remove any non-numeric characters\r\n\r\n\r\n  };\r\n\r\n  const handleAddSalesTextChange = () => {\r\n    const textAreaValue = textAreaAddSales.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddSales.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddSalesCodeTextChange = () => {\r\n    const newText = textAreaAddSalesCode.current?.value?.toUpperCase();\r\n    textAreaAddSalesCode.current?.setNativeProps({ text: newText });\r\n  };\r\n\r\n  const handleAddBuyerTextChange = () => {\r\n    const textAreaValue = textAreaAddBuyer.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddBuyer.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddBuyerCodeTextChange = (text) => {\r\n\r\n    const numericValue = text.replace(/[^0-9\\n]/g, '');\r\n\r\n    // Update the value of the textarea while preventing new lines\r\n    textAreaAddBuyerCode.current.value = numericValue;\r\n  };\r\n\r\n  const handleAddDriveTypeTextChange = () => {\r\n    const textAreaValue = textAreaAddDriveType.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddDriveType.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddBodyTypeTextChange = () => {\r\n    const textAreaValue = textAreaAddBodyType.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddBodyType.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddExteriorColorTextChange = () => {\r\n    const textAreaValue = textAreaAddExteriorColor.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExteriorColor.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddExpenseNameTextChange = () => {\r\n    const textAreaValue = textAreaAddExpenseName.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPaidToTextChange = () => {\r\n    const textAreaValue = textAreaAddPaidTo.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleInputRefNumChange = () => {\r\n    const newText = inputRefNum.current?.value?.toUpperCase();\r\n    inputRefNum.current?.setNativeProps({ text: newText });\r\n\r\n    setRefNumFromSelects();\r\n  };\r\n\r\n  const handleInputChassisChange = () => {\r\n    const newText = inputChassis.current?.value?.toUpperCase();\r\n    inputChassis.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n  const handleInputModelCodeChange = () => {\r\n    const newText = inputModelCode.current?.value?.toUpperCase();\r\n    inputModelCode.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n  const handleInputEngineCodeChange = () => {\r\n    const newText = inputEngineCode.current?.value?.toUpperCase();\r\n    inputEngineCode.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n\r\n\r\n  const handleInputEngineDisChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 5);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputEngineDis.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputExpenseAmountChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputExpenseAmount.current.value = formattedValue;\r\n  };\r\n\r\n\r\n  const handleInputMileageChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputMileage.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputNumOfSeatsChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 3);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputNumOfSeats.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputDoorsChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 2);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputDoors.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputDimensionLengthChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionLength.current.value = formattedValue;\r\n\r\n    calculateCubicMeters();\r\n  };\r\n\r\n\r\n  const handleInputDimensionWidthChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionWidth.current.value = formattedValue;\r\n\r\n    calculateCubicMeters();\r\n  };\r\n\r\n  const handleInputDimensionHeightChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionHeight.current.value = formattedValue;\r\n    calculateCubicMeters();\r\n\r\n  };\r\n\r\n  const handleInputDimensionCubicMetersChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputDimensionCubicMeters.current.value = formattedValue;\r\n    calculateCubicMeters();\r\n  };\r\n\r\n  const handleInputWeightChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 5);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputWeight.current.value = formattedValue;\r\n  };\r\n\r\n  const monthNumbers = [\r\n    '01',\r\n    '02',\r\n    '03',\r\n    '04',\r\n    '05',\r\n    '06',\r\n    '07',\r\n    '08',\r\n    '09',\r\n    '10',\r\n    '11',\r\n    '12'\r\n  ];\r\n\r\n  const calculateCubicMeters = () => {\r\n    const length = parseFloat(inputDimensionLength.current?.value?.replace(/,/g, '')) || 0;\r\n    const width = parseFloat(inputDimensionWidth.current?.value?.replace(/,/g, '')) || 0;\r\n    const height = parseFloat(inputDimensionHeight.current?.value?.replace(/,/g, '')) || 0;\r\n\r\n    const result = (length * width * height) / 1000000;\r\n    const resultFormatted = result.toFixed(2);\r\n\r\n    // setCubicMeters(resultFormatted);\r\n    inputDimensionCubicMeters.current.setNativeProps({ text: resultFormatted });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   let makeValue = makeVariable.text;\r\n\r\n  //   if (makeValue !== '') {\r\n  //     setCarNameFromSelects();\r\n  //   }\r\n\r\n  // }, [modelData]);\r\n\r\n\r\n  const setRefNumFromSelects = () => {\r\n    let portValue = portVariable.id;\r\n    let stockIDValue = inputStockIDNumber.current?.value;\r\n    let salesValue = salesVariable.id;\r\n    let buyerValue = buyerVariable.id;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${portValue}${stockIDValue}${salesValue}-${buyerValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    // inputCarName.current.setNativeProps({ text: carName });\r\n    inputRefNum.current.setNativeProps({ text: carName });\r\n    referenceNumberVariable.text = carName;\r\n    // console.log(carName);\r\n  };\r\n\r\n\r\n  const setCarNameFromSelects = () => {\r\n    let regYearValue = regYearVariable.text;\r\n    let makeValue = makeVariable.text;\r\n    let modelValue = modelVariable.text;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    inputCarName.current.setNativeProps({ text: carName });\r\n\r\n  };\r\n\r\n  const setCarNameFromSelectsModel = () => {\r\n    let regYearValue = regYearVariable.text;\r\n    let makeValue = makeVariable.text;\r\n    let modelValue = modelVariable.text;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    inputCarName.current.setNativeProps({ text: carName });\r\n\r\n\r\n  };\r\n  // const [selectedMake, setSelectedMake] = useState();\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n\r\n\r\n  // }, []);\r\n\r\n  const clearSelect = () => {\r\n    // setModelData([]);\r\n\r\n    // if (makeVariable.text !== '') {\r\n    //   dispatch(setModelData([]));\r\n    // }\r\n\r\n\r\n\r\n    selectMakeRef.current.reset();\r\n    selectModelRef.current.reset();\r\n    selectRegYear.current.reset();\r\n    selectRegMonth.current.reset();\r\n    selectSteering.current.reset();\r\n    selectTransmission.current.reset();\r\n    selectExteriorColor.current.reset();\r\n    selectFuel.current.reset();\r\n    selectPort.current.reset();\r\n    selectSales.current.reset();\r\n    selectBuyer.current.reset();\r\n    selectDriveType.current.reset();\r\n    selectBodyType.current.reset();\r\n    selectStockStatus.current.reset();\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n\r\n\r\n  const ClearModalButton = ({ handleClear }) => {\r\n    const [modalClearVisible, setModalClearVisible] = useState(false);\r\n\r\n    const handleModalClearOpen = useCallback(() => {\r\n      setModalClearVisible(true);\r\n\r\n\r\n      // selectMakeRef.current.selectIndex(makeData.indexOf('TOYOTA'));\r\n    }, []);\r\n\r\n    const handleModalClearClose = useCallback(() => {\r\n      setModalClearVisible(false);\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          bgColor={'#D9D9D9'}\r\n          onPress={handleModalClearOpen}\r\n          _text={{ color: 'muted.500' }}\r\n          _hover={{ bgColor: '#f0eded' }}\r\n        >\r\n          Clear\r\n        </Button>\r\n\r\n        <Modal isOpen={modalClearVisible} onClose={handleModalClearClose}>\r\n          <Modal.Content bgColor={'amber.100'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n              <Text color={'#102A43'} bold>\r\n                Clear\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'amber.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'amber.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'amber.600'} bold>\r\n                  Warning!\r\n                </Text>\r\n                <Text color={'amber.600'}>\r\n                  Are you sure you want to clear all inputs? This action will clear all the fields and cannot be undone!\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalClearClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  onPress={() => {\r\n                    handleModalClearClose();\r\n                    handleClear();\r\n                  }}\r\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                  Clear\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  const SelectFeaturesButton = () => {\r\n    const [featuresModalVisible, setFeaturesModalVisible] = useState(false);\r\n    const [featuresClearModalVisible, setClearModalVisible] = useState(false);\r\n\r\n    const [key, setKey] = useState(resetKey);\r\n\r\n\r\n    const handleModalSelectFeaturesOpen = () => {\r\n      setFeaturesModalVisible(true);\r\n    };\r\n\r\n    const handleModalSelectFeaturesClose = () => {\r\n      setFeaturesModalVisible(false);\r\n    };\r\n\r\n    const handleClearModalOpen = () => {\r\n      setClearModalVisible(true);\r\n    };\r\n\r\n    const handleClearModalClose = () => {\r\n      setClearModalVisible(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          onPress={handleModalSelectFeaturesOpen}\r\n          variant={'outline'}\r\n          _text={{ color: 'black', }}\r\n          leftIcon={<MaterialCommunityIcons name=\"car-info\" size={20} color=\"black\" />}>\r\n\r\n          Select Features\r\n        </Button>\r\n\r\n        <Modal\r\n          isOpen={featuresModalVisible}\r\n          onClose={handleModalSelectFeaturesClose} size={'full'} useRNModal>\r\n          <Modal.Content bgColor={'white'} w={'80%'} h={'80%'}>\r\n            <Modal.CloseButton />\r\n            {/* <Modal.Header borderBottomWidth={0} bgColor={'white'}>\r\n              <Text color={'#102A43'} bold>\r\n                Features\r\n              </Text>\r\n            </Modal.Header> */}\r\n            {/* <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'white'}\r\n              flex={1}\r\n              h={'100%'}\r\n            > */}\r\n            <ScrollView flex={1} flexDirection={'column'} margin={10}>\r\n\r\n              {/* <Box bgColor={'#7b9cff'} borderColor={isNoFeaturesSelected} borderWidth={'1'} marginTop={1} ref={featureBoxRef}>\r\n                  <Text color={'white'} bold fontSize={20} width={'full'}> Features</Text>\r\n                </Box> */}\r\n\r\n              <Box>\r\n                <Text color={'black'} bold fontSize={16} width={'full'}> Safety System</Text>\r\n              </Box>\r\n\r\n\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SafetySystemAnBrSy} key={`SafetySystemAnBrSy-${resetKey}`} label=\"Anti-Lock Braking System (ABS)\" onChange={(checked) => featuresState.SafetySystemAnBrSy = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemDrAi} key={`SafetySystemDrAi-${resetKey}`} label=\"Driver Airbag\" onChange={(checked) => featuresState.SafetySystemDrAi = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemPaAi} key={`SafetySystemPaAi-${resetKey}`} label=\"Passenger Airbag\" onChange={(checked) => featuresState.SafetySystemPaAi = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemSiAi} key={`SafetySystemSiAi-${resetKey}`} label=\"Side Airbag\" onChange={(checked) => featuresState.SafetySystemSiAi = checked} />\r\n              </Box>\r\n\r\n              <Box>\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Comfort</Text>\r\n              </Box>\r\n\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortAiCoFr} key={`ComfortAiCoFr-${resetKey}`} label=\"Air Conditioner (Front)\" onChange={(checked) => featuresState.ComfortAiCoFr = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAiCoRe} key={`ComfortAiCoRe-${resetKey}`} label=\"Air Conditioner (Rear)\" onChange={(checked) => featuresState.ComfortAiCoRe = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAMFMRa} key={`ComfortAMFMRa-${resetKey}`} label=\"AM/FM Radio\" onChange={(checked) => featuresState.ComfortAMFMRa = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAMFMSt} key={`ComfortAMFMSt-${resetKey}`} label=\"AM/FM Stereo\" onChange={(checked) => featuresState.ComfortAMFMSt = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortCDPl} key={`ComfortCDPl-${resetKey}`} label=\"CD Player\" onChange={(checked) => featuresState.ComfortCDPl = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortCDCh} key={`ComfortCDCh-${resetKey}`} label=\"CD Changer\" onChange={(checked) => featuresState.ComfortCDCh = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortCrSpCo} key={`ComfortCrSpCo-${resetKey}`} label=\"Cruise Speed Control\" onChange={(checked) => featuresState.ComfortCrSpCo = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortDiSp} key={`ComfortDiSp-${resetKey}`} label=\"Digital Speedometer\" onChange={(checked) => featuresState.ComfortDiSp = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortDVDPl} key={`ComfortDVDPl-${resetKey}`} label=\"DVD Player\" onChange={(checked) => featuresState.ComfortDVDPl = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortHDD} key={`ComfortHDD-${resetKey}`} label=\"Hard Disk Drive\" onChange={(checked) => featuresState.ComfortHDD = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortNaSyGPS} key={`ComfortNaSyGPS-${resetKey}`} label=\"Navigation System (GPS)\" onChange={(checked) => featuresState.ComfortNaSyGPS = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortPoSt} key={`ComfortPoSt-${resetKey}`} label=\"Power Steering\" onChange={(checked) => featuresState.ComfortPoSt = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortPrAuSy} key={`ComfortPrAuSy-${resetKey}`} label=\"Premium Audio System\" onChange={(checked) => featuresState.ComfortPrAuSy = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortReKeSy} key={`ComfortReKeSy-${resetKey}`} label=\"Remote Keyless System\" onChange={(checked) => featuresState.ComfortReKeSy = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortTiStWh} key={`ComfortTiStWh-${resetKey}`} label=\"Tilt Steering Wheel\" onChange={(checked) => featuresState.ComfortTiStWh = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n\r\n              <Box>\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Interior</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorLeSe} key={`InteriorLeSe-${resetKey}`} label=\"Leather Seats\" onChange={(checked) => featuresState.InteriorLeSe = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoDoLo} key={`InteriorPoDoLo-${resetKey}`} label=\"Power Door Locks\" onChange={(checked) => featuresState.InteriorPoDoLo = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoMi} key={`InteriorPoMi-${resetKey}`} label=\"Power Mirrors\" onChange={(checked) => featuresState.InteriorPoMi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoSe} key={`InteriorPoSe-${resetKey}`} label=\"Power Seats\" onChange={(checked) => featuresState.InteriorPoSe = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorPoWi} key={`InteriorPoWi-${resetKey}`} label=\"Power Windows\" onChange={(checked) => featuresState.InteriorPoWi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorReWiDe} key={`InteriorReWiDe-${resetKey}`} label=\"Rear Window Defroster\" onChange={(checked) => featuresState.InteriorReWiDe = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorReWiWi} key={`InteriorReWiWi-${resetKey}`} label=\"Rear Window Wiper\" onChange={(checked) => featuresState.InteriorReWiWi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorThRoSe} key={`InteriorThRoSe-${resetKey}`} label=\"Third Row Seats\" onChange={(checked) => featuresState.InteriorThRoSe = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorTiGl} key={`InteriorTiGl-${resetKey}`} label=\"Tinted Glasses\" onChange={(checked) => featuresState.InteriorTiGl = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n              <Box >\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Exterior</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ExteriorAlWh} key={`ExteriorAlWh-${resetKey}`} label=\"Alloy Wheels\" onChange={(checked) => featuresState.ExteriorAlWh = checked} />\r\n                <CheckBoxButton variable={featuresState.ExteriorPoSlDo} key={`ExteriorPoSlDo-${resetKey}`} label=\"Power Sliding Door\" onChange={(checked) => featuresState.ExteriorPoSlDo = checked} />\r\n                <CheckBoxButton variable={featuresState.ExteriorSuRo} key={`ExteriorSuRo-${resetKey}`} label=\"Sunroof\" onChange={(checked) => featuresState.ExteriorSuRo = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n              <Box >\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Selling Points</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsCuWh} key={`SellingPointsCuWh-${resetKey}`} label=\"Customized Wheels\" onChange={(checked) => featuresState.SellingPointsCuWh = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsFuLo} key={`SellingPointsFuLo-${resetKey}`} label=\"Fully Loaded\" onChange={(checked) => featuresState.SellingPointsFuLo = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsMaHiAv} key={`SellingPointsMaHiAv-${resetKey}`} label=\"Maintenance History Available\" onChange={(checked) => featuresState.SellingPointsMaHiAv = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsBrNeTi} key={`SellingPointsBrNeTi-${resetKey}`} label=\"Brand New Tires\" onChange={(checked) => featuresState.SellingPointsBrNeTi = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsNoAcHi} key={`SellingPointsNoAcHi-${resetKey}`} label=\"No Accident History\" onChange={(checked) => featuresState.SellingPointsNoAcHi = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsNoSmPrOw} key={`SellingPointsNoSmPrOw-${resetKey}`} label=\"Non-Smoking Previous Owner\" onChange={(checked) => featuresState.SellingPointsNoSmPrOw = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsOnOwHi} key={`SellingPointsOnOwHi-${resetKey}`} label=\"One Owner History\" onChange={(checked) => featuresState.SellingPointsOnOwHi = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsPeRaTi} key={`SellingPointsPeRaTi-${resetKey}`} label=\"Performance-rated Tires\" onChange={(checked) => featuresState.SellingPointsPeRaTi = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsReBo} key={`SellingPointsReBo-${resetKey}`} label=\"Repainted Body\" onChange={(checked) => featuresState.SellingPointsReBo = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsTuEn} key={`SellingPointsTuEn-${resetKey}`} label=\"Turbo Engine\" onChange={(checked) => featuresState.SellingPointsTuEn = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsUpAuSy} key={`SellingPointsUpAuSy-${resetKey}`} label=\"Upgraded Audio System\" onChange={(checked) => featuresState.SellingPointsUpAuSy = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n            </ScrollView>\r\n            <HStack space={5} width={'full'} justifyContent={'space-between'}>\r\n              <Button\r\n                onPress={() => {\r\n                  handleClearModalOpen();\r\n                }}\r\n                colorScheme={'gray'}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n                margin={1}\r\n                flex={1}\r\n              >\r\n                Clear\r\n              </Button>\r\n              <Box flex={2} />\r\n              <Button\r\n                onPress={handleModalSelectFeaturesClose}\r\n                colorScheme={'primary'}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n                margin={1}\r\n                flex={1}\r\n              >\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n            {/* </Modal.Body> */}\r\n            {/* <Modal.Footer borderTopWidth={0} bgColor={'white'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalSelectFeaturesClose}\r\n                  colorScheme={'warmGray'}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer> */}\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n        <Modal isOpen={featuresClearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n          <Modal.Content bgColor={'amber.100'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n              <Text color={'#102A43'} bold>\r\n                Clear\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'amber.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'amber.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'amber.600'} bold>\r\n                  Warning!\r\n                </Text>\r\n                <Text color={'amber.600'}>\r\n                  Are you sure you want to clear?\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleClearModalClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  onPress={() => {\r\n                    handleClearToggleButton();\r\n                    setKey(resetKey++);\r\n                    handleClearModalClose();\r\n                  }}\r\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                  Clear\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleClearImagesExtra = () => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n    dispatch(setDeleteImageVisible(true));\r\n  };\r\n\r\n  const UploadModalButton = ({ handleUpload }) => {\r\n    const [modalUploadVisible, setModalUploadVisible] = useState(false);\r\n    const handleModalUploadOpen = () => {\r\n      setModalUploadVisible(true);\r\n    };\r\n\r\n    const handleModalUploadClose = () => {\r\n      setModalUploadVisible(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          onPress={handleModalUploadOpen}\r\n          bgColor={'#7B9CFF'}\r\n          _hover={{ bgColor: '#517cfc', }}>\r\n          Upload/Save\r\n        </Button>\r\n\r\n        <Modal isOpen={modalUploadVisible} onClose={handleModalUploadClose}>\r\n          <Modal.Content bgColor={'white'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'white'}>\r\n              <Text color={'#102A43'} bold>\r\n                Upload/Save\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'gray.300'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'black'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'black'} bold>\r\n                  Attention!\r\n                </Text>\r\n                <Text color={'black'}>\r\n                  Are you sure you want to upload/save? This action will upload a new vehicle to the list and can be edited later.\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'white'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalUploadClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button isLoading={isLoading} onPress={async () => {\r\n                  await handleUpload();\r\n                  handleModalUploadClose()\r\n                }}\r\n                  flex={1} size={'sm'} colorScheme={'primary'} borderRadius={5}>\r\n                  Upload/Save\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#7B9CFF'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const handleSuccessModalClose = useCallback(() => {\r\n    dispatch(setIsSuccessModalOpen(false));\r\n  }, []);\r\n\r\n  const handleUpdateSuccessModalClose = useCallback(() => {\r\n    dispatch(setIsUpdateSuccessModalOpen(false));\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  const handleSetBordersWhite = () => {\r\n\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n\r\n  };\r\n  return (\r\n\r\n\r\n\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#7b9cff'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={2}\r\n          borderBottomColor={'cyan.500'} >\r\n\r\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          {showDrawerIcon && <MobileViewDrawer\r\n            selectedScreen={selectedScreen}\r\n          />}\r\n\r\n\r\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo2,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n          {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n            <Flex direction=\"row-reverse\">\r\n              <Popover isOpen={showNamePopover} trigger={triggerProps => {\r\n                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                  <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                </Text>;\r\n              }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\r\n                <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                 \r\n                  <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                    <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                      Logout\r\n                    </Button>\r\n                  </Popover.Body>\r\n                </Popover.Content>\r\n              </Popover>\r\n            </Flex>\r\n          </Box> */}\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <Box flex={[1]} flexDirection=\"row\" >\r\n          {/* Sidebar */}\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen}\r\n          />\r\n\r\n          {/* Main Content */}\r\n\r\n          <Box flex={1} flexGrow={1} minHeight={0}>\r\n            {/* Main Content Content */}\r\n\r\n\r\n\r\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n              <PresenceTransition visible={true} initial={{\r\n                opacity: 0,\r\n              }} animate={{\r\n                opacity: 1,\r\n                transition: {\r\n                  duration: 250\r\n                }\r\n              }}>\r\n\r\n\r\n                <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" flexDir={'column'}>\r\n\r\n\r\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\r\n\r\n                  </Box>\r\n\r\n\r\n\r\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} >\r\n\r\n\r\n                    <Box flexDir={['column', 'column', 'column', 'column', 'row', 'row']} height={'full'} flex={1} display={screenWidth < 1280 ? 'none' : 'flex'}>\r\n                      <Box flexDir={'row'} flex={1}>\r\n                        <Box margin={2} flex={1} flexDir={['column']} >\r\n\r\n\r\n                          <Box borderColor={'white'} borderWidth={1} ref={inputVehicleBoxRef}>\r\n\r\n                            <Box flex={1} bgColor={'#7b9cff'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Text color={'white'} marginLeft={1} bold fontSize={20} width={'full'}>Input Vehicle Specification</Text>\r\n                            </Box>\r\n\r\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                            <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                            <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={() => buttonSearchRef.current?.handlePress()} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\r\n                              InputRightElement={\r\n                                <StockIDNumber />\r\n                              }\r\n                            />\r\n                            </Box>\r\n\r\n\r\n                          </Box> */}\r\n\r\n                            <StockIDAndMakeAndModel\r\n                              selectStockStatus={selectStockStatus}\r\n                              handleSetBordersWhite={handleSetBordersWhite}\r\n                              handleClearIfError={handleClearIfError}\r\n                              handleClearToggleButton={handleClearToggleButton}\r\n                              inputFobUsd={inputFobUsd}\r\n                              years={years}\r\n                              monthNumbers={monthNumbers}\r\n                              portData={portData}\r\n                              salesData={salesData}\r\n                              buyerData={buyerData}\r\n                              steeringData={steeringData}\r\n                              transmissionData={transmissionData}\r\n                              exteriorColorData={exteriorColorData}\r\n                              fuelData={fuelData}\r\n                              driveTypeData={driveTypeData}\r\n                              bodyTypeData={bodyTypeData}\r\n                              selectPort={selectPort}\r\n                              selectSales={selectSales}\r\n                              selectBuyer={selectBuyer}\r\n                              inputRefNum={inputRefNum}\r\n                              inputChassis={inputChassis}\r\n                              inputModelCode={inputModelCode}\r\n                              inputEngineCode={inputEngineCode}\r\n                              inputEngineDis={inputEngineDis}\r\n                              selectSteering={selectSteering}\r\n                              inputMileage={inputMileage}\r\n                              selectTransmission={selectTransmission}\r\n                              selectExteriorColor={selectExteriorColor}\r\n                              inputNumOfSeats={inputNumOfSeats}\r\n                              inputDoors={inputDoors}\r\n                              inputPurchasedPrice={inputPurchasedPrice}\r\n                              selectFuel={selectFuel}\r\n                              inputDimensionLength={inputDimensionLength}\r\n                              inputDimensionWidth={inputDimensionWidth}\r\n                              inputDimensionHeight={inputDimensionHeight}\r\n                              inputDimensionCubicMeters={inputDimensionCubicMeters}\r\n                              selectDriveType={selectDriveType}\r\n                              inputWeight={inputWeight}\r\n                              selectBodyType={selectBodyType}\r\n                              inputCarName={inputCarName}\r\n                              inputCarDesc={inputCarDesc}\r\n                              inputFobJpy={inputFobJpy}\r\n                              selectRegYear={selectRegYear}\r\n                              selectRegMonth={selectRegMonth}\r\n                              setRefNumFromSelects={setRefNumFromSelects}\r\n                              inputStockIDNumber={inputStockIDNumber}\r\n                              stockIDNumError={stockIDNumError}\r\n                              selectMakeForModelRef={selectMakeForModelRef}\r\n                              textAreaAddModel={textAreaAddModel}\r\n                              selectMakeForAddModelRef={selectMakeForAddModelRef}\r\n                              handleAddMakeTextChange={handleAddMakeTextChange}\r\n                              textAreaAddMake={textAreaAddMake}\r\n                              modelError={modelError}\r\n                              // makeData={makeData}\r\n                              makeError={makeError}\r\n                              selectMakeBoxRef={selectMakeBoxRef}\r\n                              selectMakeRef={selectMakeRef}\r\n                              selectModelRef={selectModelRef}\r\n                              selectModelBoxRef={selectModelBoxRef}\r\n                              setCarNameFromSelects={setCarNameFromSelects}\r\n                              setCarNameFromSelectsModel={setCarNameFromSelectsModel}\r\n                              inputCarNotes={inputCarNotes}\r\n                              inputCarMemo={inputCarMemo}\r\n                              purchasedPriceError={purchasedPriceError}\r\n                              handleInputPurchasedPriceChange={handleInputPurchasedPriceChange}\r\n                            />\r\n\r\n\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={2} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Year & Month</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box ref={selectRegYearBoxRef} bgColor={'white'} flex={1} borderColor={regYearError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectRegYear}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={years}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    regYearVariable.text = selectedItem;\r\n                                    // console.log(regYearVariable.text);\r\n                                    setCarNameFromSelects()\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Year --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\"Year\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n\r\n                              </Box>\r\n                              <Box ref={selectRegMonthBoxRef} bgColor={'white'} flex={1} borderColor={regMonthError} borderWidth={1}>\r\n\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectRegMonth}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={monthNumbers}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    regMonthVariable.text = selectedItem;\r\n                                    // console.log(regMonthVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"--Choose Month--\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\"Month\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    outlineStyle: 'none',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Port</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Port'}\r\n                                  handleAddTextChange={handleAddPortTextChange}\r\n                                  handleAddCodeTextChange={handleAddPortCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddPortCode}\r\n                                  textAreaAdd={textAreaAddPort}\r\n                                  title='Port'\r\n                                  dataName={'port'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Port\"\r\n                                  data={portData} />\r\n                              </Box>\r\n                              <Box ref={selectPortBoxRef} bgColor={'white'} flex={1} borderColor={portError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectPort}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={portData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    portVariable.text = selectedItem.name;\r\n                                    portVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Port --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Port\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Sales In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Sales'}\r\n                                  handleAddTextChange={handleAddSalesTextChange}\r\n                                  handleAddCodeTextChange={handleAddSalesCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddSalesCode}\r\n                                  textAreaAdd={textAreaAddSales}\r\n                                  title='Sales'\r\n                                  dataName={'sales'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Sales\"\r\n                                  data={salesData} />\r\n                              </Box>\r\n                              <Box ref={selectSalesBoxRef} bgColor={'white'} flex={1} borderColor={salesError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectSales}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={salesData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    salesVariable.text = selectedItem.name;\r\n                                    salesVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Sales --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Sales\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Buyer In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalBuyerOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Buyer'}\r\n                                  handleAddTextChange={handleAddBuyerTextChange}\r\n                                  handleAddCodeTextChange={handleAddBuyerCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddBuyerCode}\r\n                                  textAreaAdd={textAreaAddBuyer}\r\n                                  title='Buyer'\r\n                                  dataName={'buyer'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add buyer\"\r\n                                  data={buyerData} />\r\n                              </Box>\r\n                              <Box ref={selectBuyerBoxRef} bgColor={'white'} flex={1} borderColor={buyerError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectBuyer}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={buyerData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    buyerVariable.text = selectedItem.name;\r\n                                    buyerVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Buyer --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Buyer\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n\r\n\r\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                            <Box bgColor={'#8096D7'} flex={1} justifyContent=\"center\" alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Month</Text></Box>\r\n                            <Box bgColor={'white'} flex={1}><Input placeholder=\"Registration Month\" /></Box>\r\n                          </Box> */}\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Reference Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={refNumError} borderWidth={1}><Input defaultValue=\"\" ref={inputRefNum} onChangeText={handleInputRefNumChange} placeholder=\" Reference Number\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Chassis / Frame Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={chassisError} borderWidth={1}><Input defaultValue=\"\" ref={inputChassis} onChangeText={handleInputChassisChange} placeholder=\" Chassis / Frame Number\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Model Code</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={modelCodeError} borderWidth={1}><Input defaultValue=\"\" ref={inputModelCode} onChangeText={handleInputModelCodeChange} placeholder=\" Model Code\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Code</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}><Input defaultValue=\"\" ref={inputEngineCode} onChangeText={handleInputEngineCodeChange} placeholder=\" Engine Code\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Displacement</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={engineDisError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputEngineDis} onChangeText={handleInputEngineDisChange} flex={1} placeholder=\" Engine Displacement\" /><InputRightAddon children={\"cc\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Steering</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}></Box>\r\n                              </Box>\r\n                              <Box ref={selectSteeringBoxRef} bgColor={'white'} flex={1} borderColor={steeringError} borderWidth={1}>\r\n                                {/* <Select key={keySelectSteering} ref={selectSteering} accessibilityLabel=\"Choose Steering\" placeholder=\"Choose Steering\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                <Select.Item key={'Left'} label={'Left'} value={'Left'} />\r\n                                <Select.Item key={'Right'} label={'Right'} value={'Right'} />\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectSteering}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={steeringData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    steeringVariable.text = selectedItem;\r\n                                    // console.log(steeringVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Steering --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Steering\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} bgColor={'#8096D7'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Mileage</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={mileageError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputMileage} onChangeText={handleInputMileageChange} flex={1} placeholder=\" Mileage\" /><InputRightAddon children={\"km\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={1} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Transmission</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalTransmissionOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal docName={'Transmission'} handleAddTextChange={handleAddTransmissionTextChange} textAreaAdd={textAreaAddTransmission} title='Transmission' dataName={'transmission'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Transmission\" data={transmissionData} />\r\n                              </Box>\r\n                              <Box ref={selectTransmissionBoxRef} bgColor={'white'} flex={1} borderColor={transmissionError} borderWidth={1}>\r\n                                {/* <Select key={keySelectTransmission} accessibilityLabel=\"Choose Transmission\" placeholder=\"Choose Transmission\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {transmissionData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectTransmission}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={transmissionData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    transmissionVariable.text = selectedItem;\r\n                                    // console.log(transmissionVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Transmission --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Transmission\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Exterior Color</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalExteriorColorOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='ExteriorColor'\r\n                                  handleAddTextChange={handleAddExteriorColorTextChange}\r\n                                  textAreaAdd={textAreaAddExteriorColor}\r\n                                  title='Exterior Color'\r\n                                  dataName={'exteriorColor'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Transmission\"\r\n                                  data={transmissionData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectExteriorColorBoxRef} bgColor={'white'} flex={1} borderColor={exteriorColoError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectExteriorColor}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={exteriorColorData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    exteriorColorVariable.text = selectedItem;\r\n                                    // console.log(exteriorColorVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Exterior Color --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Exterior Color\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Number of Seats</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={numOfSeatsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputNumOfSeats} onChangeText={handleInputNumOfSeatsChange} placeholder=\" Number of Seats\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Doors</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={doorsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDoors} onChangeText={handleInputDoorsChange} placeholder=\" Doors\" /></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Fuel</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalFuelOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='Fuel'\r\n                                  handleAddTextChange={handleAddFuelTextChange}\r\n                                  textAreaAdd={textAreaAddFuel}\r\n                                  title='Fuel'\r\n                                  dataName={'fuel'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Fuel\"\r\n                                  data={fuelData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectFuelBoxRef} bgColor={'white'} flex={1} borderColor={fuelError} borderWidth={1}>\r\n                                {/* <Select key={keySelectFuel} accessibilityLabel=\"Choose Fuel\" placeholder=\"Choose Fuel\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {fuelData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectFuel}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={fuelData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    fuelVariable.text = selectedItem;\r\n                                    // console.log(fuelVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Fuel --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Fuel\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} alignSelf={'center'} flex={[1, 1, 1, 1, 2, 2]} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Dimension</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionLengthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionLength} onChangeText={handleInputDimensionLengthChange} flex={1} placeholder=\"Length\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionWidthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionWidth} onChangeText={handleInputDimensionWidthChange} flex={1} placeholder=\"Width\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionHeightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionHeight} onChangeText={handleInputDimensionHeightChange} flex={1} placeholder=\"Height\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1}><InputGroup><Input keyboardType=\"numeric\" ref={inputDimensionCubicMeters} defaultValue=\"0.00\" onChangeText={handleInputDimensionCubicMetersChange} bgColor={'muted.100'} disabled editable={false} flex={1} placeholder=\"Cubic Meters\" /><InputRightAddon children={\"m³\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Drive Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalDriveTypeOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='DriveType'\r\n                                  handleAddTextChange={handleAddDriveTypeTextChange}\r\n                                  textAreaAdd={textAreaAddDriveType}\r\n                                  title='Drive Type'\r\n                                  dataName={'driveType'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Drive Type\"\r\n                                  data={driveTypeData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectDriveTypeBoxRef} bgColor={'white'} flex={1} borderColor={driveTypeError} borderWidth={1}>\r\n                                {/* <Select key={keySelectDriveType} accessibilityLabel=\"Choose Drive Type\" placeholder=\"Choose Drive Type\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {driveTypeData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectDriveType}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={driveTypeData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    driveTypeVariable.text = selectedItem;\r\n                                    // console.log(driveTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Drive Type --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Drive Type\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Weight</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={weightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" ref={inputWeight} keyboardType=\"numeric\" onChangeText={handleInputWeightChange} flex={1} placeholder=\" Weight\" /><InputRightAddon children={\"kg\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'0'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Body Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n                                <SortAndAddModal\r\n                                  docName='BodyType'\r\n                                  handleAddTextChange={handleAddBodyTypeTextChange}\r\n                                  textAreaAdd={textAreaAddBodyType}\r\n                                  title='Body Type'\r\n                                  dataName={'bodyType'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Body Type\"\r\n                                  data={bodyTypeData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectBodyTypeBoxRef} bgColor={'white'} flex={1} borderColor={bodyTypeError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectBodyType}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={bodyTypeData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    bodyTypeVariable.text = selectedItem;\r\n                                    // console.log(bodyTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Body Type --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Body Type\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Supply Chains Costs</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}>\r\n                                <SupplyChainsCosts\r\n                                  handleAddExpenseNameTextChange={handleAddExpenseNameTextChange}\r\n                                  textAreaAddExpenseName={textAreaAddExpenseName}\r\n                                  inputExpenseAmount={inputExpenseAmount}\r\n                                  handleInputExpenseAmountChange={handleInputExpenseAmountChange}\r\n                                  handleAddPaidToTextChange={handleAddPaidToTextChange}\r\n                                  paidToData={paidToData}\r\n                                  inputCarNotes={inputCarNotes}\r\n                                /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Select Features</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={isNoFeaturesSelected} borderWidth={1}><SelectFeaturesButton /></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock Status</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n                              </Box>\r\n                              <Box ref={selectStockStatusBoxRef} bgColor={'white'} flex={1} borderColor={stockStatusError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectStockStatus}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={stockStatusData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    stockStatusVariable.text = selectedItem;\r\n                                    // console.log(bodyTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Stock Status --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Stock Status\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n\r\n\r\n                          </Box>\r\n\r\n\r\n                        </Box>\r\n\r\n                      </Box>\r\n\r\n                      <br /> <br /> <br /> <br />\r\n\r\n                      <Box flex={1} bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\r\n                        {/*=============================================================== Add Image(s)===============================================================*/}\r\n                        <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\r\n\r\n                      </Box>\r\n\r\n                    </Box>\r\n\r\n                  </Box>\r\n\r\n                  <Box flex={1} margin={1} flexDirection={'column'} h={'full'} display={['none', 'none', 'none', 'none', 'flex', 'flex']}>\r\n                    <Box h={'full'} w={'full'}>\r\n\r\n                      <HStack flex={1}>\r\n                        <Input\r\n                          ref={inputCarName}\r\n                          borderColor={carNameError}\r\n                          placeholder=\"Car Name\" margin={1} bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} flex={1} />\r\n                        <HStack flex={1}>\r\n                          <InputGroup flex={1}>\r\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} children={\"Notes \"} />\r\n                            <Input flex={1} ref={inputCarNotes} borderColor={carNameError} placeholder=\"Note\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                          </InputGroup>\r\n                        </HStack>\r\n                      </HStack>\r\n\r\n                      <HStack flex={2}>\r\n                        <TextArea flex={1} ref={inputCarDesc} borderColor='muted.500' bgColor={'white'} placeholder=\"Car Description / Salespoint\" borderWidth={1} placeholderTextColor={'muted.400'} margin={1} />\r\n                        <HStack marginTop={1} flex={1}>\r\n                          <InputGroup flex={1}>\r\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} color={'white'} children={\"Memo\"} />\r\n                            <Input multiline flex={1} ref={inputCarMemo} borderColor={carNameError} placeholder=\"Memo\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                          </InputGroup>\r\n                        </HStack>\r\n                      </HStack>\r\n\r\n\r\n                      <HStack>\r\n                        <Input keyboardType=\"numeric\" flex={1} ref={inputFobJpy} onChangeText={handleInputFobJpyChange} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"FOB Price\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                        <Input disabled ref={inputFobUsd} flex={1} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"dollar\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"0\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                      </HStack>\r\n\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  <Box w={'full'} flexDir={'row'} margin={1} paddingBottom={10} paddingTop={10} display={screenWidth < 1280 ? 'none' : 'flex'}>\r\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#D9D9D9'} onPress={handleModalClearOpen} _text={{ color: 'muted.500', }} _hover={{ bgColor: '#f0eded', }}>Clear</Button> */}\r\n                    <ClearModalButton handleClear={handleClear} />\r\n                    <Button borderRadius={3} flex={1} bgColor={'#A6BCFE'} disabled></Button> <Button flex={1} bgColor={'#A6BCFE'} disabled></Button>\r\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#7B9CFF'} _hover={{ bgColor: '#517cfc', }}>Upload</Button> */}\r\n                    <UploadModalButton handleUpload={handleUpload} />\r\n\r\n                  </Box>\r\n\r\n                </Box>\r\n              </PresenceTransition>\r\n            </ScrollView>\r\n\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n\r\n      <LoadingModal />\r\n      {/* <Box\r\n        position=\"absolute\"\r\n        top={0}\r\n        bottom={0}\r\n        left={0}\r\n        right={0}\r\n        backgroundColor=\"rgba(0, 0, 0, 0.5)\"\r\n        flex={1}\r\n        display={isLoading ? '' : 'none'}\r\n      >\r\n        <Center flex={1}>\r\n          <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Spinner size=\"lg\" color=\"white\" />\r\n            <Text color={'white'}>Loading, please wait!</Text>\r\n          </Box>\r\n        </Center>\r\n      </Box> */}\r\n\r\n      <UpdateSuccessModal onClose={handleUpdateSuccessModalClose} headerText={'Vehicle Updated!'} bodyText={'Vehicle was successfully updated!'} />\r\n      <UploadSuccessModal onClose={handleSuccessModalClose} headerText={'Vehicle Added!'} bodyText={'Vehicle was successfully added! You can view it in the vehicle list.'} />\r\n    </NativeBaseProvider>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import { useState } from \"react\";\r\nimport { View, Dimensions, StyleSheet, Image } from \"react-native\";\r\nimport { Box, Flex, Popover, Button, Text } from \"native-base\";\r\nimport FastImage from \"react-native-fast-image-web-support\";\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo,\r\n  FontAwesome5,\r\n  EvilIcons\r\n} from 'react-native-vector-icons';\r\n\r\nimport MobileViewDrawer from \"../SideDrawer/MobileViewDrawer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst NamePopover = ({ name, handleSignOut }) => {\r\n  const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n  const showPopover = () => {\r\n    setShowNamePopover(!showNamePopover);\r\n  };\r\n\r\n  return (\r\n    <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n      <Flex direction=\"row-reverse\">\r\n        <Popover\r\n          isOpen={showNamePopover}\r\n          trigger={(triggerProps) => (\r\n            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n              <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n            </Text>\r\n          )}\r\n          onClose={() => setShowNamePopover(!showNamePopover)}\r\n          placement='bottom right'\r\n          trapFocus={false}\r\n        >\r\n          <Popover.Content backgroundColor={'#7B9CFF'}>\r\n            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n              <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                Logout\r\n              </Button>\r\n            </Popover.Body>\r\n          </Popover.Content>\r\n        </Popover>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst StickyHeader = ({ selectedScreen, handleSignOut }) => {\r\n  const loginName = useSelector((state) => state.loginName);\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  // const logo = require('https://i.imgur.com/V98nKSK.png');\r\n  // const logo2 = require('https://i.imgur.com/NGCIoSV.png');\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  return (\r\n\r\n    <Box\r\n      px=\"3\"\r\n      bgColor='#7b9cff'\r\n      height={54}\r\n      position=\"sticky\"\r\n      top={0}\r\n      zIndex={999}\r\n      flexDirection=\"row\"\r\n      alignItems=\"center\"\r\n      borderBottomWidth={2}\r\n      borderBottomColor={'cyan.500'} >\r\n\r\n      <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n        <Image\r\n          source={{ uri: 'https://i.imgur.com/V98nKSK.png' }}\r\n          style={styles.image}\r\n          resizeMode=\"stretch\"\r\n        />\r\n      </Box>\r\n\r\n      {screenWidth <= 960 && <MobileViewDrawer\r\n        selectedScreen={selectedScreen}\r\n      />}\r\n\r\n\r\n      <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n      <Image\r\n          source={{ uri: 'https://i.imgur.com/NGCIoSV.png' }}\r\n          style={styles.image}\r\n          resizeMode=\"stretch\"\r\n        />\r\n      </Box>\r\n\r\n      <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n    </Box>\r\n\r\n  );\r\n}\r\n\r\nexport default StickyHeader;","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Keyboard } from 'react-native';\r\nimport {\r\n    Input,\r\n    Icon,\r\n    Stack,\r\n    Pressable,\r\n    Center,\r\n    PresenceTransition,\r\n    NativeBaseProvider,\r\n    Button,\r\n    Box,\r\n    HStack,\r\n    Image,\r\n    Container,\r\n    Header,\r\n    Left,\r\n    Body,\r\n    Title,\r\n    Content,\r\n    Text,\r\n    Heading,\r\n    Flex,\r\n    VStack,\r\n    ScrollView,\r\n    SectionList,\r\n    useBreakpointValue,\r\n    Spinner,\r\n    Modal,\r\n    Divider,\r\n    IconButton,\r\n    Popover\r\n} from \"native-base\";\r\nimport { DataTable } from 'react-native-paper';\r\nimport {\r\n    FontAwesome,\r\n    Entypo,\r\n    MaterialIcons,\r\n    Ionicons,\r\n    Fontisto,\r\n    EvilIcons,\r\n    AntDesign,\r\n    MaterialCommunityIcons,\r\n    Feather,\r\n    FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, limit } from '../../firebasecontrol'\r\nimport { arrayUnion, where, startAfter, endBefore, limitToLast, collectionGroup } from 'firebase/firestore';\r\nimport { projectExtensionFirestore, projectControlFirestore } from '../../crossFirebase';\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './../style.css';\r\nimport { debounce, set, throttle } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { bg } from 'date-fns/locale';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { LineChart, BarChart } from 'react-native-chart-kit';\r\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from 'victory';\r\nimport {\r\n    OPEN_EXCHANGE_API_KEY\r\n} from '@env';\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\nimport {\r\n    setLogsData,\r\n    setLoadingModalVisible,\r\n} from './redux/store';\r\nlet selectedScreen = 'LOGS'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const addKeywordsToLogs = async () =>{\r\n//     const logsRef = collection(projectControlFirestore, \"logs\");\r\n\r\n//     try {\r\n//       const querySnapshot = await getDocs(logsRef);\r\n\r\n//       querySnapshot.forEach((doc) => {\r\n//         const data = doc.data();\r\n//         const keywords = [\r\n//           data.timestamp,\r\n//           data.message,\r\n//         ];\r\n\r\n//         updateDoc(doc.ref, {\r\n//           keywords: arrayUnion(...keywords)\r\n//         });\r\n//       });\r\n\r\n//       console.log(\"Keywords added successfully to logs collection.\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding keywords to logs collection:\", error);\r\n//     }\r\n//   }\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nconst LogsTable = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [firstVisible, setFirstVisible] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const searchInputRef = useRef(null);\r\n    const logsData = useSelector((state) => state.logsData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(projectControlFirestore, 'logs'),\r\n            orderBy('timestamp', 'desc'),\r\n            limit(pageSize)\r\n        );\r\n        const unsubscribe = onSnapshot(q, (documents) => {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n            dispatch(setLogsData(logsDatabaseData));\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            setFirstVisible(documents.docs[0]);\r\n        });\r\n        return () => unsubscribe();\r\n\r\n    }, []);\r\n\r\n    const fetchNextData = async () => {\r\n\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collectionGroup(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n        }\r\n\r\n        else {\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const fetchPreviousData = async () => {\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev')\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev');\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchFirstPage = (documents) => {\r\n\r\n\r\n        const logsDatabaseData = [];\r\n\r\n        documents.forEach((document) => {\r\n            logsDatabaseData.push({\r\n                id: document.id,\r\n                ...document.data(),\r\n            });\r\n        });\r\n\r\n        dispatch(setLogsData(logsDatabaseData));\r\n\r\n        if (documents?.docs[0]) {\r\n            setFirstVisible(documents.docs[0]);\r\n        }\r\n        if (documents?.docs[documents.docs.length - 1]) {\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n        if (!documents.empty) {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n\r\n\r\n\r\n            if (documents?.docs[0]) {\r\n                setFirstVisible(documents.docs[0]);\r\n            }\r\n            if (documents?.docs[documents.docs.length - 1]) {\r\n                setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            }\r\n\r\n            if (pageClicked == 'next') {\r\n                setCurrentPage(currentPage + 1);\r\n            }\r\n            if (pageClicked == 'prev') {\r\n                setCurrentPage(currentPage - 1);\r\n            }\r\n\r\n            dispatch(setLogsData(logsDatabaseData));\r\n        }\r\n\r\n        else {\r\n\r\n            if (searchText == '') {\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n            else {\r\n\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleNextPage = async () => {\r\n        // setPageClicked('next');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage + 1);\r\n        await fetchNextData();\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handlePreviousPage = async () => {\r\n        // setPageClicked('previous');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage - 1);\r\n        await fetchPreviousData();\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        searchData();\r\n\r\n    }, [searchText]);\r\n\r\n    const searchData = async () => {\r\n\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        if (searchText === '') {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n    };\r\n\r\n    const handleSearchEnter = () => {\r\n\r\n        if (searchInputRef.current?.value !== '') {\r\n            setSearchText(searchInputRef.current.value.trim());\r\n        }\r\n        else {\r\n            setSearchText('');\r\n\r\n            if (searchText == '') {\r\n                searchData();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={{ flex: 1, }}>\r\n            <View>\r\n                <TextInput ref={searchInputRef} style={{ width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\r\n                    onSubmitEditing={handleSearchEnter}\r\n                    placeholder='Search'\r\n                    returnKeyType='search'\r\n                    keyboardType='default'\r\n                    autoCapitalize='none'\r\n                />\r\n            </View>\r\n            <View\r\n                style={{\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between',\r\n                    borderBottomWidth: 1,\r\n                    borderBottomColor: '#E4E4E7',\r\n                    backgroundColor: '#0642F4',\r\n                    padding: 2,\r\n                    borderRadius: 5,\r\n                }}>\r\n                <View style={{ flex: 1, padding: 2 }}>\r\n                    <Text style={{ color: 'white', }} bold>Timestamp</Text>\r\n                </View>\r\n                <View style={{ flex: 1, padding: 2 }}>\r\n                    <Text style={{ color: 'white', }} bold>Action</Text>\r\n                </View>\r\n            </View>\r\n            {logsData.map((item) => (\r\n                <View\r\n                    key={item.id}\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#E4E4E7',\r\n                        backgroundColor: item.colorScheme ? '#BBF7D0' : '#EAC7D6',\r\n                        paddingVertical: 10,\r\n                        flexGrow: 1,\r\n                    }}>\r\n                    <View style={{ flex: 1, }}>\r\n                        <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.timestamp}</Text>\r\n                    </View>\r\n                    <View style={{ flex: 1 }}>\r\n                        <Text selectable style={{ width: '90%', }}>{item.message} </Text>\r\n                    </View>\r\n                </View>\r\n            ))}\r\n\r\n            <View style={{ flexDirection: 'row', width: screenWidth < 960 ? '90%' : '30%', alignSelf: 'center', }}>\r\n\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <TouchableOpacity\r\n                        style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                        onPress={handlePreviousPage}>\r\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                            <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n                <View style={{ flex: 1, backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n                </View>\r\n\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                    <TouchableOpacity\r\n                        onPress={handleNextPage}>\r\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                            <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n            <TouchableOpacity\r\n              onPress={addKeywordsToVehicleProducts}>\r\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                <MaterialIcons name='save' size={40} color={'white'} />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View> */}\r\n\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n\r\n};\r\n\r\nconst addLogToCollection = async (data) => {\r\n    try {\r\n        const firestore = getFirestore();\r\n        const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n        // Add a new document to the \"logs\" collection\r\n        await addDoc(logsCollectionRef, data);\r\n\r\n        // console.log('Document added successfully!');\r\n    } catch (error) {\r\n        console.error('Error adding document:', error);\r\n    }\r\n};\r\n\r\nconst CurrencyConverterComponent = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n    const [successModalVisible, setSuccessModalVisible] = useState(false);\r\n    const [todayCurrency, setTodayCurrency] = useState([]);\r\n    const [timestampCurrency, setTimestampCurrency] = useState([]);\r\n    const [exchangeRate, setExchangeRate] = useState('');\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [time, setTime] = useState('');\r\n    const [lastUpdate, setLastUpdate] = useState(null);\r\n    const loginName = useSelector((state) => state.loginName);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onSnapshot(\r\n            doc(projectExtensionFirestore, 'currency', 'currency'),\r\n            (snapshot) => {\r\n                const data = snapshot.data();\r\n                setTodayCurrency(data?.todayCurrency);\r\n                setTimestampCurrency(data?.timestampCurrency);\r\n            }\r\n        );\r\n\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const CurrencyConverter = async () => {\r\n\r\n        setIsLoading(true);\r\n        setIsYesLoading(true);\r\n        try {\r\n            const response = await axios.get(\r\n                `https://openexchangerates.org/api/latest.json?app_id=${OPEN_EXCHANGE_API_KEY}`\r\n            );\r\n\r\n            // Replace 'YOUR_APP_ID' with your actual API key obtained from Open Exchange Rates\r\n\r\n\r\n            const rates = response.data.rates;\r\n            const usdToJpy = 1 / rates.JPY; // Invert the rate to convert USD to JPY\r\n            const JpyToUsd = rates.JPY / 1;\r\n\r\n\r\n\r\n            const yenToDollar = Number(usdToJpy.toFixed(4)); // Move the toFixed here\r\n            const dollarToYen = Number(JpyToUsd.toFixed(4));\r\n\r\n            const usdToEur = 1 / rates.EUR;\r\n            const eurToUsd = rates.EUR;\r\n\r\n            const usdToGbp = 1 / rates.GBP;\r\n            const gbpToUsd = rates.GBP;\r\n\r\n            const usdToAud = 1 / rates.AUD;\r\n            const audToUsd = rates.AUD;\r\n\r\n\r\n            const usdToCad = 1 / rates.CAD;\r\n            const cadToUsd = rates.CAD;\r\n\r\n            // Calculate Yen to Euro and Euro to Yen\r\n            const yenToEuro = yenToDollar * eurToUsd; // Convert Yen to USD first, then to Euro\r\n            const euroToYen = dollarToYen * usdToEur; // Convert Euro to USD first, then to Yen\r\n\r\n            const yenToGbp = yenToDollar * gbpToUsd; // Convert Yen to USD first, then to Pound Sterling\r\n            const gbpToYen = dollarToYen * usdToGbp; // Convert Pound Sterling to USD first, then to Yen\r\n\r\n            const yenToAud = yenToDollar * audToUsd; // Convert Yen to USD first, then to Australian Dollars\r\n            const audToYen = dollarToYen * usdToAud; // Convert Australian Dollars to USD first, then to Yen\r\n\r\n            const yenToCad = yenToDollar * cadToUsd; // Convert Yen to USD first, then to Canadian Dollars\r\n            const cadToYen = dollarToYen * usdToCad; // Convert Canadian Dollars to USD first, then to Yen\r\n\r\n            // Format the new rates\r\n\r\n\r\n\r\n            setExchangeRate(yenToDollar);\r\n\r\n            const timestamp = response.data.timestamp;\r\n            const lastUpdateDate = new Date(timestamp * 1000);\r\n            setLastUpdate(lastUpdateDate);\r\n\r\n            const formattedLastUpdate = lastUpdateDate.toLocaleString('en-US', {\r\n                month: 'long',\r\n                day: 'numeric',\r\n                year: 'numeric',\r\n                hour: 'numeric',\r\n                minute: 'numeric',\r\n                second: 'numeric',\r\n                timeZoneName: 'short',\r\n            });\r\n\r\n            const newTodayCurrency = `1 JPY = ${yenToDollar} USD / 1 USD = ${dollarToYen} JPY\\n1 JPY = ${yenToEuro.toFixed(4)} EUR / 1 EUR = ${euroToYen.toFixed(4)} JPY\\n1 JPY = ${yenToAud.toFixed(4)} AUD / 1 AUD = ${audToYen.toFixed(4)} JPY\\n1 JPY = ${yenToGbp.toFixed(4)} GBP / 1 GBP = ${gbpToYen.toFixed(4)} JPY\\n1 JPY = ${yenToCad.toFixed(4)} CAD / 1 CAD = ${cadToYen.toFixed(4)} JPY\\n`;\r\n            const currencyRef = doc(projectExtensionFirestore, 'currency', 'currency');\r\n\r\n            try {\r\n                await setDoc(currencyRef, {\r\n                    jpyToUsd: Number(usdToJpy),\r\n                    usdToJpy: Number(JpyToUsd),\r\n                    jpyToEur: yenToEuro,\r\n                    eurToJpy: euroToYen,\r\n                    jpyToGbp: yenToGbp,\r\n                    gbpToJpy: gbpToYen,\r\n                    jpyToAud: yenToAud,\r\n                    audToJpy: audToYen,\r\n                    usdToEur: eurToUsd,\r\n                    eurToUsd: usdToEur,\r\n                    usdToGbp: gbpToUsd,\r\n                    gbpToUsd: usdToGbp,\r\n                    usdToAud: audToUsd,\r\n                    audToUsd: usdToAud,\r\n                    cadToUsd: usdToCad,\r\n                    usdToCad: cadToUsd,\r\n                    jpyToCad: cadToYen,\r\n                    cadToJpy: yenToCad,\r\n                    todayCurrency: newTodayCurrency,\r\n                    timestampCurrency: 'Updated Last: ' + formattedLastUpdate,\r\n                }, { merge: true });\r\n                // console.log('Currency data updated successfully!');\r\n                setSuccessModalVisible(true);\r\n                setModalVisible(false);\r\n                setIsLoading(false);\r\n                setIsYesLoading(false);\r\n                try {\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime(formattedTime);\r\n\r\n                    const logDataCurrency = {\r\n                        message: `Currency Update: \"${loginName}\" updated the currency exchange.\\n¥JPY → $USD = ${Number(usdToJpy).toFixed(4)} / $USD → ¥JPY = ${Number(JpyToUsd).toFixed(4)}\\n¥JPY → €EUR = ${yenToEuro.toFixed(4)} / €EUR → ¥JPY = ${euroToYen.toFixed(4)}\\n¥JPY → A$AUD = ${yenToAud.toFixed(4)} / A$AUD → ¥JPY = ${audToYen.toFixed(4)}\\n¥JPY → £GBP = ${yenToGbp.toFixed(4)} / £GBP → ¥JPY = ${gbpToYen.toFixed(4)}\\n¥JPY → C$CAD = ${yenToCad.toFixed(4)} / C$CAD → ¥JPY = ${cadToYen.toFixed(4)}`,\r\n                        timestamp: formattedTime, // Use the formatted time here\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            loginName.toLowerCase(),\r\n                            '$'.toLowerCase(),\r\n                            '¥'.toLowerCase(),\r\n                            `Currency Update: \"${loginName}\" updated the currency exchange.`.toLowerCase(),\r\n                            'Update'.toLowerCase(),\r\n                            'Currency'.toLowerCase(),\r\n                            formattedTime.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n\r\n                    };\r\n\r\n                    addLogToCollection(logDataCurrency);\r\n                }\r\n                catch (error) {\r\n                    console.error('Error fetching time:', error);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Error updating currency data:', error);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching exchange rate:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleCloseCurrencyModal = () => {\r\n        setModalVisible(false);\r\n        setIsLoading(false);\r\n    };\r\n    const handleOpenCurrencyModal = () => {\r\n        setModalVisible(true);\r\n        setIsLoading(true);\r\n    };\r\n\r\n    const handleCloseSuccessModal = () => {\r\n        setSuccessModalVisible(false);\r\n        setIsLoading(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                flex={1}\r\n                borderWidth={1}\r\n                borderColor=\"gray.200\"\r\n                borderRadius={4}\r\n                overflow=\"hidden\"\r\n                margin={1}\r\n                alignItems={'center'}\r\n                bg=\"#F5F5F5\">\r\n                <Image\r\n                    source={require('../../assets/currency_background.jpg')}\r\n                    alt=\"Background Image\"\r\n                    resizeMode=\"stretch\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    position={'absolute'}\r\n\r\n                />\r\n\r\n                <Center height=\"100%\">\r\n\r\n                    <Box alignItems=\"center\" backgroundColor={\"rgba(0, 0, 0, 0.7)\"} borderRadius={5} paddingBottom={1}>\r\n\r\n                        <Text bold color=\"#39ff14\" margin={1} textAlign={'center'} fontSize={screenWidth > 960 ? '' : 12} >{todayCurrency}</Text>\r\n                        <Text textAlign=\"center\" color=\"#39ff14\" margin={1} fontSize={screenWidth > 960 ? '' : 12}>{timestampCurrency}</Text>\r\n                        <Button alignSelf={'center'} w={'95%'} _hover={{ bgColor: \"green.800\" }} bgColor={'transparent'} variant={'outline'} borderColor={\"#39ff14\"} _text={{ color: \"#39ff14\", }} onPress={handleOpenCurrencyModal}>{isLoading ? <Spinner color=\"#39ff14\" size={21} /> : 'Update'}</Button>\r\n\r\n                    </Box>\r\n\r\n                </Center>\r\n\r\n            </Box>\r\n\r\n            <Modal isOpen={modalVisible} onClose={handleCloseCurrencyModal}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>Update currency</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to update to the latest currency?\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <Button onPress={handleCloseCurrencyModal} flex={1} margin={1} colorScheme={'danger'}>No</Button>\r\n                        <Button onPress={CurrencyConverter} colorScheme={'success'} flex={1} margin={1}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal><Modal isOpen={successModalVisible} onClose={handleCloseSuccessModal}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header bgColor={'green.200'} borderBottomWidth={0}>Update success!</Modal.Header>\r\n                    <Modal.Body bgColor={'green.200'}>\r\n                        <Text bold margin={1}>{todayCurrency}</Text>\r\n                        <Text margin={1}>{timestampCurrency}</Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer bgColor={'green.200'} borderTopWidth={0}>\r\n                        <Button onPress={handleCloseSuccessModal} flex={1} margin={1}>Ok</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nconst MyBarChart = () => {\r\n    const dataValues = [\r\n        { day: 1, value: 30 },\r\n        { day: 2, value: 45 },\r\n        // ... add data for each day of the month\r\n        { day: 31, value: 60 }\r\n    ];\r\n\r\n    return (\r\n        <ScrollView style={{ flex: 1, margin: 5, borderRadius: 5, }}>\r\n            <VictoryChart\r\n                theme={VictoryTheme.material}\r\n                domainPadding={10}\r\n                style={{\r\n                    parent: {\r\n                        backgroundColor: \"#FFF\", // White background\r\n                    }\r\n                }}\r\n            >\r\n                <VictoryAxis\r\n                    style={{\r\n                        axis: { stroke: \"#757575\" }, // Style for the axis itself\r\n                        ticks: { stroke: \"grey\", size: 5 }, // Style for axis ticks\r\n                        tickLabels: { fontSize: 10, padding: 5, fill: \"grey\" } // Style for the labels\r\n                    }}\r\n                />\r\n                <VictoryAxis\r\n                    dependentAxis\r\n                    style={{\r\n                        axis: { stroke: \"#757575\" },\r\n                        ticks: { stroke: \"grey\", size: 5 },\r\n                        tickLabels: { fontSize: 10, padding: 5, fill: \"grey\" }\r\n                    }}\r\n                />\r\n                <VictoryBar\r\n                    data={dataValues}\r\n                    x=\"day\"\r\n                    y=\"value\"\r\n                    style={{\r\n                        data: {\r\n                            fill: ({ datum }) => datum.value > 50 ? \"#4178BE\" : \"#5AA9E6\", // Blue shades for bars\r\n                            width: 8 // Width of each bar\r\n                        }\r\n                    }}\r\n                    barRatio={0.8} // Adjusts the width of the bars\r\n                />\r\n            </VictoryChart>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\n\r\nexport default function Logs() {\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const loginName = useSelector((state) => state.loginName);\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const [isSelectedLogs, setIsSelectedLogs] = useState(true);\r\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\r\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    const [remainingTime, setRemainingTime] = useState(0);\r\n    const [todayCurrency, setTodayCurrency] = useState('')\r\n    const [timestampCurrency, setTimestampCurrency] = useState('');\r\n    const [exchangeRate, setExchangeRate] = useState(null);\r\n    const [lastUpdate, setLastUpdate] = useState(null);\r\n\r\n    const [time, setTime] = useState('');\r\n    const optionsPerPage = [13, 26, 52];\r\n    const [page, setPage] = useState(0);\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    const searchInput = useRef(null);\r\n    const searchInputValue = searchInput.current?.value;\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'logs'), orderBy('timestamp', 'desc'));\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                    setData(documents);\r\n                });\r\n\r\n                return () => unsubscribe();\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // const delayedSearch = (text) => {\r\n    //     clearTimeout(timeoutId);\r\n    //     timeoutId = setTimeout(() => {\r\n    //         handleSearch(text);\r\n    //     }, 300); // Set the delay to 300 milliseconds\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n    // const handleChange = text => {\r\n    //     setEmail(text)\r\n    //     setErrorShow(false)\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const SuccessModal = () => {\r\n        return <Center>\r\n            <Modal isOpen={showModal} onClose={() => setShowModal(false)} size=\"lg\"  >\r\n                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n                    <Modal.Body >\r\n                        <Text color=\"white\" textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowModal(false)}>\r\n                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </Center>;\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                navigation.navigate(\"Login\")\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(auth)\r\n                    .then(() => {\r\n                        navigation.navigate('Login');\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(auth)\r\n                .then(() => {\r\n                    navigation.navigate('Login');\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = auth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n    const listenForNameChange = (documentId) => {\r\n        const userRef = doc(db, 'accounts', documentId);\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(auth).then(() => {\r\n            navigation.navigate('Login');\r\n            setEmail('');\r\n            setName('');\r\n        }).catch(() => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n    // Function to hide the Popover\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n    return (\r\n        <NativeBaseProvider>\r\n            <SuccessModal />\r\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#7b9cff'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={2}\r\n                    borderBottomColor={'cyan.500'} >\r\n\r\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n\r\n                    {showDrawerIcon && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen} />}\r\n\r\n\r\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n\r\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <Box flex={[1]} flexDirection=\"row\" >\r\n                    {/* Sidebar */}\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    />\r\n\r\n                    {/* Main Content */}\r\n                    <Box flex={1} flexGrow={1} minHeight={0} flexDirection={screenWidth <= 960 ? 'column' : 'row'}>\r\n                        {/* Main Content Content */}\r\n\r\n\r\n\r\n                        <Box flex={1}>\r\n                            <CurrencyConverterComponent />\r\n                            <MyBarChart />\r\n                        </Box>\r\n\r\n\r\n\r\n                        <Box flex={1} height={'100%'}>\r\n                            <ScrollView flex={1}>\r\n                                <LogsTable />\r\n                            </ScrollView>\r\n\r\n\r\n                        </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <LoadingModal />\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","\r\nimport {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  HStack,\r\n  Modal,\r\n  Text,\r\n  VStack,\r\n  ScrollView,\r\n\r\n} from 'native-base';\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo\r\n} from 'react-native-vector-icons';\r\nimport { View, TouchableOpacity, Easing, Image, Dimensions, Animated } from 'react-native';\r\nimport { TouchableHighlight } from 'react-native-gesture-handler';\r\nimport { useNavigation } from '@react-navigation/core';\r\n\r\n\r\n\r\nconst MobileViewDrawer = ({ selectedScreen }) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const logo2 = require('../../../assets/C-Hub Logo Only.png');\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const handleOpen = () => {\r\n\r\n    setIsOpen(true);\r\n\r\n  }\r\n  const handleClose = () => {\r\n\r\n    setIsOpen(false);\r\n\r\n  }\r\n\r\n  const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"LOGS\");\r\n  }, []);\r\n\r\n  const handleToggleAddAccount = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  }, []);\r\n\r\n  const handleToggleAccountList = useCallback(() => {\r\n\r\n    navigation.navigate(\"ACCOUNT LIST\");\r\n  }, []);\r\n\r\n  const handleToggleAddVehicle = useCallback(() => {\r\n\r\n    navigation.navigate(\"ADD NEW VEHICLE\");\r\n  }, []);\r\n\r\n\r\n  const handleVehicleList = useCallback(() => {\r\n    navigation.navigate(\"VEHICLE LIST\");\r\n  }, []);\r\n\r\n\r\n  const handleFreight = useCallback(() => {\r\n    navigation.navigate(\"FREIGHT\");\r\n  }, []);\r\n\r\n  const handleChatMessages = useCallback(() => {\r\n    navigation.navigate(\"CHAT MESSAGES\");\r\n  }, []);\r\n\r\n\r\n  const slideAnimation = useRef(new Animated.Value(0)).current;\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      Animated.timing(slideAnimation, {\r\n        toValue: 1,\r\n        duration: 500,\r\n        easing: Easing.inOut(Easing.ease),\r\n        useNativeDriver: true,\r\n      }).start();\r\n    } else {\r\n      Animated.timing(slideAnimation, {\r\n        toValue: 0,\r\n        duration: 500,\r\n        easing: Easing.inOut(Easing.ease),\r\n        useNativeDriver: true,\r\n      }).start();\r\n    }\r\n  }, [isOpen, slideAnimation]);\r\n\r\n  return (\r\n\r\n    <>\r\n      <TouchableHighlight onPress={() => handleOpen()} onPressOut={() => handleOpen()} underlayColor=\"#5a7bc9\" style={{ borderRadius: 5, flex: 1 }}>\r\n        <FontAwesome name=\"navicon\" size={30} color=\"white\" style={{ margin: 2 }} />\r\n      </TouchableHighlight>\r\n\r\n\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onClose={handleClose}\r\n        useRNModal\r\n        style={{\r\n          alignItems: 'flex-start',\r\n          justifyContent: 'flex-start',\r\n          height: '100%',\r\n\r\n        }}\r\n      >\r\n        <Modal.Content\r\n          maxWidth={255}\r\n          borderRadius={0}\r\n          maxHeight=\"100%\"\r\n          height=\"full\"\r\n          bgColor={'transparent'}\r\n        >\r\n          <Animated.View\r\n            style={{\r\n              flex: 1,\r\n              transform: [\r\n                {\r\n                  translateX: slideAnimation.interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [-255, 0],\r\n                  }),\r\n                },\r\n              ],\r\n            }}\r\n          >\r\n            <View style={{ backgroundColor: '#7b9cff', flex: 1, borderRightWidth: 2, borderColor: 'cyan' }}>\r\n              <View style={{ flex: 1, }}>\r\n\r\n                <View style={{ flexDirection: 'row', margin: 3, justifyContent: 'space-between' }}>\r\n                  <View style={{ width: '80%', alignItems: 'center', justifyContent: 'center' }}>\r\n                    <Image\r\n                      source={{\r\n                        uri: logo2,\r\n                      }}\r\n                      resizeMode=\"stretch\"\r\n                      style={{ width: 170, height: 30 }}\r\n                    />\r\n                  </View>\r\n                  <TouchableOpacity\r\n                    style={{ flexDirection: 'row', alignItems: 'flex-end', marginVertical: 1.5, marginHorizontal: 1.5 }}\r\n                  >\r\n                    <MaterialIcons\r\n                      name=\"arrow-back\"\r\n                      size={30}\r\n                      color=\"white\"\r\n                      onPress={handleClose}\r\n                    />\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* Sidebar Content */}\r\n                <View style={{ paddingHorizontal: 1, backgroundColor: '#7b9cff', flex: 1 }}>\r\n                  <ScrollView>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderTopWidth: 1,\r\n                        borderColor: 'white',\r\n                        backgroundColor: selectedScreen == 'LOGS' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleLogs}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <MaterialCommunityIcons name=\"history\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          LOGS\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n\r\n                    {/* ACCOUNT MANAGEMENT */}\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAddAccount}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n\r\n                        <MaterialIcons name=\"person-add\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          ADD C-HUB ACCOUNT\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAccountList}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <MaterialCommunityIcons name=\"account-details\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          ACCOUNT LIST\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n                    {/* VEHICLE INFORMATION INPUT */}\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAddVehicle}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 4, }}>\r\n                          <FontAwesome name=\"automobile\" size={15} color=\"white\" />\r\n                          <FontAwesome\r\n                            name=\"plus\"\r\n                            size={10}\r\n                            color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          UPDATE / ADD NEW VEHICLE\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleVehicleList}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <FontAwesome\r\n                            name=\"automobile\"\r\n                            size={15}\r\n                            color=\"white\" />\r\n\r\n                          <MaterialCommunityIcons name=\"format-list-bulleted\" size={10} color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          VEHICLE LIST\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'FREIGHT' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleFreight}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <MaterialIcons\r\n                            name=\"public\"\r\n                            size={20}\r\n                            color=\"white\" />\r\n\r\n                          <MaterialIcons name=\"sync\" size={12} color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          FREIGHT\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleChatMessages}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <Entypo\r\n                            name=\"chat\"\r\n                            size={20}\r\n                            color=\"white\" />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          CHAT MESSAGES\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    {/* Footer Content */}\r\n                    {/* <TouchableOpacity\r\n              style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\r\n              onPress={handleSignOut}\r\n            >\r\n              <Text style={{ color: 'white', textAlign: 'center' }}>\r\n                Logout\r\n              </Text>\r\n            </TouchableOpacity> */}\r\n                  </ScrollView>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </Animated.View>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default MobileViewDrawer;","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    HStack,\r\n    Modal,\r\n    Text,\r\n    VStack,\r\n    ScrollView,\r\n\r\n} from 'native-base';\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo\r\n} from 'react-native-vector-icons';\r\nimport { View, TouchableOpacity, Easing, Image, Dimensions, Animated, Pressable } from 'react-native';\r\nimport { TouchableHighlight } from 'react-native-gesture-handler';\r\nimport { useNavigation } from '@react-navigation/core';\r\n\r\n\r\n\r\nconst SideDrawer = ({ selectedScreen }) => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const logo2 = require('../../../assets/C-Hub Logo Only.png');\r\n    const [onHover, setOnHover] = useState(false);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const handleOpen = () => {\r\n\r\n        setIsOpen(true);\r\n\r\n    }\r\n    const handleClose = () => {\r\n\r\n        setIsOpen(false);\r\n\r\n    }\r\n\r\n    const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n        navigation.navigate(\"LOGS\");\r\n    }, []);\r\n\r\n    const handleToggleAddAccount = useCallback(() => {\r\n\r\n\r\n        navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n    }, []);\r\n\r\n    const handleToggleAccountList = useCallback(() => {\r\n\r\n        navigation.navigate(\"ACCOUNT LIST\");\r\n    }, []);\r\n\r\n    const handleToggleAddVehicle = useCallback(() => {\r\n\r\n        navigation.navigate(\"ADD NEW VEHICLE\");\r\n    }, []);\r\n\r\n\r\n    const handleVehicleList = useCallback(() => {\r\n        navigation.navigate(\"VEHICLE LIST\");\r\n    }, []);\r\n\r\n\r\n    const handleFreight = useCallback(() => {\r\n        navigation.navigate(\"FREIGHT\");\r\n    }, []);\r\n\r\n    const handleChatMessages = useCallback(() => {\r\n        navigation.navigate(\"CHAT MESSAGES\");\r\n    }, []);\r\n\r\n\r\n    const slideAnimation = useRef(new Animated.Value(0)).current;\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            Animated.timing(slideAnimation, {\r\n                toValue: 1,\r\n                duration: 500,\r\n                easing: Easing.inOut(Easing.ease),\r\n                useNativeDriver: true,\r\n            }).start();\r\n        } else {\r\n            Animated.timing(slideAnimation, {\r\n                toValue: 0,\r\n                duration: 500,\r\n                easing: Easing.inOut(Easing.ease),\r\n                useNativeDriver: true,\r\n            }).start();\r\n        }\r\n    }, [isOpen, slideAnimation]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable\r\n                onHoverIn={() => {\r\n                    handleOpen()\r\n                    setOnHover(true);\r\n                }}\r\n                onHoverOut={() =>\r\n                    setTimeout(() => setOnHover(false), [100])\r\n                }\r\n                onPress={() => handleOpen()} onPressOut={() => handleOpen()} underlayColor=\"#5a7bc9\" style={{\r\n                    backgroundColor: onHover ? '#5a7bc9' : 'transparent',\r\n                    borderRadius: 5,\r\n                }}>\r\n                <FontAwesome name=\"navicon\" size={30} color=\"white\" style={{ margin: 2 }} />\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={handleClose}\r\n                useRNModal\r\n                style={{\r\n                    alignItems: 'flex-start',\r\n                    justifyContent: 'flex-start',\r\n                    height: '100%',\r\n                }}\r\n            >\r\n                <Modal.Content\r\n                    maxWidth={255}\r\n                    borderRadius={0}\r\n                    maxHeight=\"100%\"\r\n                    height=\"full\"\r\n                    bgColor={'transparent'}\r\n                >\r\n                    <Animated.View\r\n                        style={{\r\n                            flex: 1,\r\n                            transform: [\r\n                                {\r\n                                    translateX: slideAnimation.interpolate({\r\n                                        inputRange: [0, 1],\r\n                                        outputRange: [-255, 0],\r\n                                    }),\r\n                                },\r\n                            ],\r\n                        }}\r\n                    >\r\n\r\n                        <View style={{ backgroundColor: '#7b9cff', flex: 1, borderRightWidth: 2, borderColor: 'cyan' }}>\r\n                            <View style={{ flex: 1, }}>\r\n\r\n                                <View style={{ flexDirection: 'row', margin: 3, justifyContent: 'space-between' }}>\r\n                                    <View style={{ width: '80%', alignItems: 'center', justifyContent: 'center' }}>\r\n                                        <Image\r\n                                            source={{\r\n                                                uri: logo2,\r\n                                            }}\r\n                                            resizeMode=\"stretch\"\r\n                                            style={{ width: 170, height: 30 }}\r\n                                        />\r\n                                    </View>\r\n                                    <TouchableOpacity\r\n                                        style={{ flexDirection: 'row', alignItems: 'flex-end', marginVertical: 1.5, marginHorizontal: 1.5 }}\r\n                                    >\r\n                                        <MaterialIcons\r\n                                            name=\"arrow-back\"\r\n                                            size={30}\r\n                                            color=\"white\"\r\n                                            onPress={handleClose}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n\r\n                                {/* Sidebar Content */}\r\n                                <View style={{ paddingHorizontal: 1, backgroundColor: '#7b9cff', height: '100%' }}>\r\n                                    <ScrollView style={{ width: 245 }}>\r\n                                        <View style={{ height: 20 }}>\r\n                                            {/* Sidebar Content Items */}\r\n                                            <Button\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'LOGS' ? '#0642F4' : '#5a7bc9', }}\r\n                                                marginTop={0}\r\n                                                w={'full'}\r\n                                                onPress={() => selectedScreen == 'LOGS' ? null : handleToggleLogs(navigation)}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'LOGS' ? '#0642F4' : '#7b9cff'}\r\n                                                leftIcon={<MaterialCommunityIcons name=\"history\" size={20} color=\"white\" />}\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >\r\n                                                LOGS\r\n                                            </Button>\r\n\r\n                                            {/* ACCOUNT MANAGEMENT */}\r\n                                            <Button\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : '#5a7bc9', }}\r\n                                                marginTop={0} w={'full'}\r\n                                                onPress={() => selectedScreen == 'ADD C-HUB ACCOUNT' ? null : handleToggleAddAccount(navigation)}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : '#7b9cff'}\r\n                                                leftIcon={<MaterialIcons name=\"person-add\" size={20} color=\"white\" />}\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >ADD C-HUB ACCOUNT</Button>\r\n\r\n                                            <Button\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : '#5a7bc9', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => selectedScreen == 'ACCOUNT LIST' ? null : handleToggleAccountList(navigation)}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : '#7b9cff'}\r\n                                                leftIcon={\r\n                                                    <MaterialCommunityIcons name=\"account-details\" size={20} color=\"white\" />\r\n\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >ACCOUNT LIST</Button>\r\n                                            {/* VEHICLE INFORMATION INPUT */}\r\n                                            <Button\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : '#5a7bc9', }}\r\n                                                marginTop={0} w={'full'}\r\n                                                onPress={() =>  selectedScreen == 'ADD NEW VEHICLE' ? null : handleToggleAddVehicle(navigation)}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : '#7b9cff'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <FontAwesome name=\"automobile\" size={15} color=\"white\" />\r\n                                                            <FontAwesome\r\n                                                                name=\"plus\"\r\n                                                                size={10}\r\n                                                                color=\"white\"\r\n                                                                style={{\r\n                                                                    position: 'absolute', // Position it absolutely...\r\n                                                                    top: -3, // ...at the top...\r\n                                                                    left: -5 // ...and left.\r\n                                                                }}\r\n                                                            />\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >UPDATE / ADD NEW VEHICLE</Button>\r\n\r\n                                            <Button\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : '#5a7bc9', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => selectedScreen == 'VEHICLE LIST' ? null : handleVehicleList(navigation)}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'VEHICLE LIST' ? '#0642F4' : '#7b9cff'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <FontAwesome\r\n                                                                name=\"automobile\"\r\n                                                                size={15}\r\n                                                                color=\"white\" />\r\n\r\n                                                            <MaterialCommunityIcons name=\"format-list-bulleted\" size={10} color=\"white\"\r\n                                                                style={{\r\n                                                                    position: 'absolute', // Position it absolutely...\r\n                                                                    top: -3, // ...at the top...\r\n                                                                    left: -5 // ...and left.\r\n                                                                }}\r\n                                                            />\r\n\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                            >VEHICLE LIST</Button>\r\n\r\n                                            <Button\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'FREIGHT' ? '#0642F4' : '#5a7bc9', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => selectedScreen == 'FREIGHT' ? null : handleFreight(navigation)}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'FREIGHT' ? '#0642F4' : '#7b9cff'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <MaterialIcons\r\n                                                                name=\"public\"\r\n                                                                size={20}\r\n                                                                color=\"white\" />\r\n\r\n                                                            <MaterialIcons name=\"sync\" size={12} color=\"white\"\r\n                                                                style={{\r\n                                                                    position: 'absolute', // Position it absolutely...\r\n                                                                    top: -3, // ...at the top...\r\n                                                                    left: -5 // ...and left.\r\n                                                                }}\r\n                                                            />\r\n\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                            >FREIGHT</Button>\r\n\r\n                                            <Button\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : '#5a7bc9', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => { selectedScreen == 'CHAT MESSAGES' ? null : handleChatMessages(navigation) }}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : '#7b9cff'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <Entypo\r\n                                                                name=\"chat\"\r\n                                                                size={20}\r\n                                                                color=\"white\" />\r\n\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                            >CHAT MESSAGES</Button>\r\n                                        </View>\r\n                                        {/* Footer Content */}\r\n                                        {/* <TouchableOpacity\r\n            style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\r\n            onPress={handleSignOut}\r\n          >\r\n            <Text style={{ color: 'white', textAlign: 'center' }}>\r\n              Logout\r\n            </Text>\r\n          </TouchableOpacity> */}\r\n                                    </ScrollView>\r\n                                    <View style={{ borderTopWidth: 0, backgroundColor: '#7b9cff', position: 'absolute', bottom: 0, left: 0, right: 0, borderTopColor: 'gray', paddingTop: 3 }}>\r\n                                        {/* Footer Content */}\r\n                                        {/* <Center marginBottom={1.5}>\r\n            <Button w={100} colorScheme=\"error\" onPress={handleSignOut}>\r\n              <MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" /> Logout\r\n            </Button>\r\n          </Center> */}\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n\r\n                    </Animated.View>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default SideDrawer;","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  Image as NativeImage,\r\n  Input,\r\n  Modal,\r\n  NativeBaseProvider,\r\n  Popover,\r\n  Pressable,\r\n  Spinner,\r\n  Stack,\r\n  Text,\r\n  VStack,\r\n  useBreakpointValue,\r\n  TextArea,\r\n  InputRightAddon,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  Select,\r\n  CheckIcon,\r\n  PresenceTransition,\r\n  CloseIcon,\r\n  ScrollView as ScrollViewNative,\r\n  Divider,\r\n  useDisclosure,\r\n  useDisclose,\r\n  FormControl,\r\n  Checkbox,\r\n  useToast\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n  Dimensions,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  StyleSheet,\r\n  View,\r\n  PanResponder,\r\n  Animated,\r\n  InputAccessoryView,\r\n  FlatList,\r\n  ScrollView,\r\n  TouchableHighlight,\r\n  TextInput,\r\n  Image as RNImage\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo,\r\n  FontAwesome5,\r\n  EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n  setVehicleListData,\r\n  setSupplyChainsCostsData,\r\n  setSelectedPaidTo,\r\n  setSelectedExpenseName,\r\n  setSupplyChainsCostsModalVisible,\r\n  setVehicleListSupplyChainsCostsData,\r\n  setDeleteImageVisible,\r\n  setSelectedImages,\r\n  setAddAnotherImages,\r\n  setIsAddPhotoVisible,\r\n  setUploadImagesModalVisible,\r\n  setUploadImagesButtonLoading,\r\n  setViewImagesModalVisible,\r\n  setViewImagesData,\r\n  setLoadingModalVisible,\r\n  setAddVehicleListData,\r\n  setEditVehicleModalVisible,\r\n  setFobPriceHistoryModalVisible,\r\n  setFobHistoryData,\r\n  setLoginName\r\n} from './redux/store';\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'VEHICLE LIST'\r\n\r\nlet globalSupplyChainCostsData = [];\r\nlet globalCurrentSupplyChainCostsData = [];\r\nlet globalFobPriceHistoryData = [];\r\nlet globalCurrentStockID = '';\r\nlet globalSelectedPaidTo = '';\r\nlet globalSPCSelectedDate = '';\r\nlet globalSelectedExpenseName = '';\r\nlet globalSupplyChainCostsAmount = 0;\r\nlet globalSelectedImages = [];\r\nlet globalSelectedVehicle = '';\r\nlet globalSelectedVehicleReferenceNumber = '';\r\nlet globalSelectedCarName = '';\r\nconst nameVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = projectControlAuth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    // console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nconst storage = getStorage(projectExtensionFirebase);\r\n\r\nconst SelectStockStatus = ({ selectedValue, id, item }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n  const [selectedStockStatusValue, setSelectedStockStatusValue] = useState(selectedValue);\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', id), (doc) => {\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        // Handle the data from the document\r\n        setSelectedStockStatusValue(data.stockStatus);\r\n        // console.log(`Read ${doc.size} documents from VehicleProducts`);\r\n\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleSaveStockStatus = async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n    if (item.stockStatus == selectedStockStatusValue || selectedStockStatusValue == '' || selectedStockStatusValue == '__NativeBasePlaceHolder__') {\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n    else {\r\n\r\n      const stockStatusHistoryData = {\r\n        date: formattedTime,\r\n        stockStatus: selectedStockStatusValue,\r\n        changedBy: nameVariable.text,\r\n      };\r\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n      try {\r\n        await updateDoc(vehicleProductRef, {\r\n          stockStatus: selectedStockStatusValue,\r\n          stockStatusHistory: arrayUnion(stockStatusHistoryData)\r\n        });\r\n        const logData = {\r\n          message: `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to \"${selectedStockStatusValue}\" with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            globalCurrentStockID.toLowerCase(),\r\n            `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to ${selectedStockStatusValue} with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n            'Stock Status'.toLowerCase(),\r\n            'Stock Status Updated'.toLowerCase(),\r\n            'Stock'.toLowerCase(),\r\n            'Status Updated'.toLowerCase(),\r\n            'Updated'.toLowerCase(),\r\n            globalSelectedCarName.toLowerCase(),\r\n            globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n        // console.log('FOB Price updated successfully');\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Stock Status updated successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n      <View style={{ width: screenWidth >= 1360 ? '70%' : '88%', backgroundColor: 'white', }}>\r\n        <Select\r\n          selectedValue={selectedStockStatusValue}\r\n          onValueChange={(value) => {\r\n            setSelectedStockStatusValue(value);\r\n          }}\r\n          flex={3}\r\n          accessibilityLabel=\"---\"\r\n          placeholder=\"---\"\r\n          _selectedItem={{\r\n            bg: \"teal.600\",\r\n            endIcon: <CheckIcon size=\"5\" />\r\n          }}\r\n        >\r\n          {stockStatusData.map((item) => (\r\n            <Select.Item key={item} label={item} value={item} />\r\n          ))}\r\n        </Select>\r\n      </View>\r\n\r\n      <TouchableHighlight\r\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n        onPress={handleSaveStockStatus}\r\n        style={{\r\n          backgroundColor: '#16A34A',\r\n          borderRadius: 5,\r\n          padding: 3,\r\n          margin: 2,\r\n          alignSelf: 'center',\r\n        }}>\r\n        <MaterialIcons name='update' color='white' size={22} />\r\n      </TouchableHighlight>\r\n    </View>\r\n\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nconst addLogToCollection = async (data) => {\r\n  try {\r\n    const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n    // Add a new document to the \"logs\" collection\r\n    await addDoc(logsCollectionRef, data);\r\n\r\n    // console.log('Document added successfully!');\r\n  } catch (error) {\r\n    console.error('Error adding document:', error);\r\n  }\r\n};\r\n\r\nconst LoadingModal = () => {\r\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        flex: 1,\r\n        display: loadingModalVisible ? 'flex' : 'none',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      {/* Content within the modal */}\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Spinner size=\"lg\" color=\"white\" />\r\n        <Text style={{ color: 'white' }}>Loading, please wait!</Text>\r\n      </View>\r\n    </View>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\r\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n\r\n  const handleModalDeleteOpen = () => {\r\n    setModalDeleteImagesVisible(true);\r\n  };\r\n\r\n  const handleModalDeleteClose = () => {\r\n    setModalDeleteImagesVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          right: 0,\r\n          backgroundColor: '#FF4136',\r\n          borderRadius: 3,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          display: isAddPhotoVisible ? 'none' : 'flex',\r\n        }}\r\n      >\r\n        <TouchableHighlight onPress={handleModalDeleteOpen} style={{ flex: 1 }}>\r\n          <Ionicons name=\"trash-sharp\" size={20} color=\"white\" />\r\n        </TouchableHighlight>\r\n      </View>\r\n\r\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\r\n        <Modal.Content bgColor={'error.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear Images\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'error.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.400'}\r\n            margin={5}\r\n          >\r\n            <View style={{ flex: 1 }}>\r\n              <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>Alert!</Text>\r\n              <Text style={{ color: '#FF4136' }}>\r\n                Are you sure you want to clear{' '}\r\n                <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>\r\n                  {selectedImages.length}\r\n                </Text>{' '}\r\n                selected image(s)?\r\n              </Text>\r\n            </View>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\r\n            <View style={{ flexDirection: 'row', flex: 1 }}>\r\n              <TouchableOpacity\r\n                onPress={handleModalDeleteClose}\r\n                style={{\r\n                  flex: 1,\r\n                  backgroundColor: '#57534E', // Replace with your desired color\r\n                  borderRadius: 5,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  margin: 5,\r\n                  padding: 5,\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 14, color: 'white' }}>No</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={handleClearImages}\r\n                style={{\r\n                  flex: 1,\r\n                  backgroundColor: '#DC2626', // Replace with your desired color\r\n                  borderRadius: 5,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  margin: 5,\r\n                  padding: 5,\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 14, color: 'white' }}>Clear Images</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\r\n  const dispatch = useDispatch();\r\n  const { width } = Dimensions.get('window');\r\n\r\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  const [boolean, setBoolean] = useState(true);\r\n  const selectedImages = useSelector((state) => state.selectedImages);\r\n  // const [selectedImages, setSelectedImages] = useState([]);\r\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\r\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\r\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\r\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\r\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n  const [scrollEnabled, setscrollEnabled] = useState(true);\r\n  const [isEnterEdit, setisEnterEdit] = useState(false);\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setIsCursorLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    dropdown: {\r\n      margin: 16,\r\n      height: 50,\r\n      borderBottomColor: 'gray',\r\n      borderBottomWidth: 0.5,\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n      fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n      height: 40,\r\n      fontSize: 16,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 20,\r\n\r\n    },\r\n    txt: {\r\n      fontSize: 18,\r\n      lineHeight: 24,\r\n      padding: 5\r\n    },\r\n    sort: {\r\n    },\r\n    item_children: {\r\n      width: 90,\r\n      height: 90,\r\n      backgroundColor: 'black',\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    item_delete_icon: {\r\n      width: 14,\r\n      height: 14,\r\n      position: \"absolute\",\r\n      right: 1,\r\n      top: 1\r\n    },\r\n    item_icon: {\r\n      width: 90,\r\n      height: 90,\r\n      resizeMode: \"contain\",\r\n      position: \"absolute\"\r\n    }\r\n  });\r\n\r\n  const handleImageAddToSelection = async () => {\r\n    dispatch(setDeleteImageVisible(true));\r\n    if (selectedImages.length === 40) {\r\n      return; // Limit reached, do not add a new image\r\n    }\r\n\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        // console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        // console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        // console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Filter out images larger than 10MB\r\n      const newImages = [...selectedImages];\r\n      const promises = response.assets.map(async (asset) => {\r\n        const file = await fetch(asset.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          const exists = newImages.some((image) => image.uri === asset.uri);\r\n          if (!exists) {\r\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\r\n          }\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      });\r\n\r\n      await Promise.all(promises);\r\n\r\n      const limitedImages = newImages.slice(0, 40);\r\n      dispatch(setSelectedImages(limitedImages));\r\n      globalSelectedImages = limitedImages;\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      // limitedImages.forEach((image) => {\r\n      //   console.log(`File size: ${image.fileSize}`);\r\n      // });\r\n\r\n    } catch (error) {\r\n      // console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n  const reloadData = useCallback(() => {\r\n    if (selectedImages.length > 0) {\r\n      // ... Logic to reload data using selectedImages and width\r\n\r\n      // Assuming your logic has updated selectedImages, you can directly use it here\r\n      const updatedSelectedImages = [...selectedImages];\r\n\r\n      // Dispatch the updatedSelectedImages array to the state\r\n      dispatch(setSelectedImages(updatedSelectedImages));\r\n    }\r\n\r\n  }, [widthState]);\r\n\r\n  useEffect(() => {\r\n    const handleWidthChange = ({ window }) => {\r\n      setWidthState(window.width);\r\n    };\r\n\r\n    Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n    return () => {\r\n      Dimensions.removeEventListener('change', handleWidthChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, [reloadData]);\r\n\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    setModalDeleteImagesVisible(false);\r\n    // dispatch(setSelectedImages([]));\r\n    // globalSelectedImages = [];\r\n    // dispatch(setIsAddPhotoVisible(true));\r\n    // dispatch(setAddAnotherImages(false));\r\n    // dispatch(setDeleteImageVisible(true));\r\n    handleClearImagesExtra();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const renderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleImageSelection = async () => {\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40,\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        // console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        // console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        // console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Remove duplicates from the selected images\r\n      const uniqueImages = response.assets.filter(\r\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\r\n      );\r\n\r\n      // Filter out images larger than 10MB\r\n      const filteredImages = [];\r\n      const imageOrder = [];\r\n      for (let index = 0; index < uniqueImages.length; index++) {\r\n        const image = uniqueImages[index];\r\n        const file = await fetch(image.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          filteredImages.push(image);\r\n          imageOrder.push(index);\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      }\r\n\r\n\r\n      // Sort the filtered images based on their original order\r\n      const sortedImages = filteredImages.sort((a, b) => {\r\n        const indexA = imageOrder[filteredImages.indexOf(a)];\r\n        const indexB = imageOrder[filteredImages.indexOf(b)];\r\n        return indexA - indexB;\r\n      });\r\n\r\n\r\n\r\n      // Limit the number of selected images to 40\r\n      const limitedImages = sortedImages.slice(0, 40);\r\n\r\n      globalSelectedImages = limitedImages;\r\n      if (limitedImages.length > 0) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(true));\r\n      }\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      dispatch(setSelectedImages(globalSelectedImages));\r\n\r\n    } catch (error) {\r\n      // console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleDeleteImagePress = useCallback((uri) => {\r\n\r\n    globalSelectedImages = globalSelectedImages.filter((item) => {\r\n      // Replace 'uriToDelete' with the URI you want to delete\r\n      return item.uri !== uri;\r\n    });\r\n\r\n    if (globalSelectedImages.length < 40) {\r\n      dispatch(setAddAnotherImages(true));\r\n    }\r\n\r\n    if (globalSelectedImages.length == 0) {\r\n      dispatch(setAddAnotherImages(false));\r\n      dispatch(setIsAddPhotoVisible(true));\r\n    }\r\n    dispatch(setSelectedImages(globalSelectedImages));\r\n    // dispatch(setSelectedImages((prevImages) => {\r\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\r\n\r\n    //   if (updatedImages.length < 40) {\r\n    //     dispatch(setAddAnotherImages(true));\r\n    //   }\r\n    //   if (updatedImages.length == 0) {\r\n    //    dispatch(setAddAnotherImages(false));\r\n    //     dispatch(setIsAddPhotoVisible(true));\r\n    //   }\r\n    //   return updatedImages;\r\n    // }));\r\n\r\n    // console.log(globalSelectedImages.map((item) => item.uri));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\r\n\r\n\r\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\r\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\r\n\r\n            <ClearImagesModal\r\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\r\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\r\n              handleClearImages={handleClearImages}\r\n              selectedImages={selectedImages}\r\n              isAddPhotoVisible={isAddPhotoVisible} />\r\n\r\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\r\n\r\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"#12293F\" />\r\n\r\n\r\n              <ScrollView\r\n                scrollEnabled={scrollEnabled}\r\n                flex={1}\r\n              >\r\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    delayLongPress={100}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onDragStart={useCallback(() => {\r\n                      if (!isEnterEdit) {\r\n                        setisEnterEdit(true);\r\n                        setscrollEnabled(false);\r\n                      } else {\r\n                        setscrollEnabled(false);\r\n                      }\r\n                    }, [])}\r\n                    onDragEnd={useCallback(() => {\r\n                      setscrollEnabled(true);\r\n                    }, [])}\r\n                    onDataChange={useCallback((data) => {\r\n\r\n                      if (data.length !== data) {\r\n                        dispatch(setSelectedImages(data));\r\n                        globalSelectedImages = data;\r\n                      }\r\n\r\n                    }, [])}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => renderItem(item, index), [])} />\r\n\r\n                  <Center>\r\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"#12293F\" />\r\n                  </Center>\r\n\r\n                </Box>\r\n\r\n\r\n\r\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    sortable={false}\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\r\n\r\n                </Box>\r\n              </ScrollView>\r\n\r\n\r\n\r\n\r\n            </Box>\r\n\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={0}\r\n              left={0}\r\n              borderRadius={3}\r\n              bgColor={'rgba(0, 0, 0, 0.5)'}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              display={isAddPhotoVisible ? 'none' : 'block'}>\r\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\r\n            </Box>\r\n          </Box>\r\n\r\n        </ScrollView>\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      {/* </Box> */}\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} useRNModal>\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Please select image(s) smaller than 10MB!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploadModal = ({ handleUploadImagesModalClose, screenWidth, dragSortableViewRef, handleClearImagesExtra, handleUploadImages }) => {\r\n\r\n  const uploadImagesModalVisible = useSelector((state) => state.uploadImagesModalVisible)\r\n  const uploadImagesButtonLoading = useSelector((state) => state.uploadImagesButtonLoading)\r\n  return (\r\n    <Modal isOpen={uploadImagesModalVisible} onClose={handleUploadImagesModalClose} size={'full'} useRNModal>\r\n      <Modal.Content bgColor={'white'} w={'90%'} h={'100%'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Upload Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n\r\n\r\n        <View style={{ flex: 1, height: '100%', width: '100%', alignItems: 'center', justifyContent: 'center' }}>\r\n\r\n          <View style={{ borderWidth: 1, borderColor: '#12293F', width: '95%', height: '95%' }}>\r\n\r\n            <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\r\n\r\n          </View>\r\n\r\n        </View>\r\n\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <TouchableOpacity\r\n            onPress={handleUploadImagesModalClose}\r\n            style={{\r\n              backgroundColor: '#525252',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Close</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ flex: 4 }} />\r\n\r\n          <TouchableOpacity\r\n            disabled={uploadImagesButtonLoading}\r\n            onPress={handleUploadImages}\r\n            style={{\r\n              backgroundColor: '#16A34A',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            {!uploadImagesButtonLoading ? (\r\n              <Text style={{ color: 'white' }}>Upload</Text>) : (\r\n              <Spinner color=\"white\" />\r\n            )}\r\n          </TouchableOpacity>\r\n\r\n\r\n        </View>\r\n\r\n\r\n\r\n      </Modal.Content>\r\n\r\n    </Modal>\r\n\r\n  );\r\n}\r\n\r\nconst UploadImagesModal = ({ fetchImageCounts }) => {\r\n\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const dragSortableViewRef = useRef();\r\n\r\n  const handleClearImagesExtra = () => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n    dispatch(setDeleteImageVisible(true));\r\n  };\r\n\r\n\r\n  const handleUploadImagesModalClose = () => {\r\n\r\n    dispatch(setUploadImagesModalVisible(false));\r\n    // globalCurrentStockID = '';\r\n    handleClearImagesExtra();\r\n    globalSelectedVehicle = '';\r\n  }\r\n\r\n  const uploadImages = useCallback(async () => {\r\n\r\n    const storageRef = ref(storage, `${globalCurrentStockID}`);\r\n    const ImageFormat = { jpg: 'jpg' };\r\n    const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n    const docRef = doc(collectionRef, globalCurrentStockID);\r\n\r\n\r\n\r\n    try {\r\n      // Get the names of the images to keep\r\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n      // Delete existing files in the folder that do not match the names of the images to keep\r\n      const listResult = await listAll(storageRef);\r\n      await Promise.all(\r\n        listResult.items\r\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n          .map((itemRef) => deleteObject(itemRef))\r\n      );\r\n\r\n      await Promise.all(\r\n        globalSelectedImages.map(async (asset, index) => {\r\n          const { uri } = asset;\r\n          const imagename = index.toString();\r\n\r\n          const response = await fetch(uri);\r\n          const blob = await response.blob();\r\n\r\n          // Create an offscreen canvas\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          // Create a new image object\r\n          const img = new Image();\r\n          img.src = URL.createObjectURL(blob);\r\n\r\n          // Draw the image on the canvas\r\n          img.onload = async () => {\r\n            // Create a canvas element\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            // Calculate the desired width and height for the resized image\r\n            const maxWidth = 800; // Set your desired maximum width\r\n            const maxHeight = 600; // Set your desired maximum height\r\n            let newWidth = img.width;\r\n            let newHeight = img.height;\r\n\r\n            // Check if the image needs resizing\r\n            if (img.width > maxWidth) {\r\n              newWidth = maxWidth;\r\n              newHeight = (img.height * maxWidth) / img.width;\r\n            }\r\n\r\n            if (newHeight > maxHeight) {\r\n              newWidth = (newWidth * maxHeight) / newHeight;\r\n              newHeight = maxHeight;\r\n            }\r\n\r\n            // Set the canvas dimensions to the new width and height\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n\r\n            // Draw the resized image onto the canvas\r\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n\r\n            // Calculate the font size as a percentage of the image width\r\n            const fontSizePercentage = 3;\r\n            const imageRes = img.height * img.width;\r\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\r\n\r\n            ctx.font = `bold ${fontSize}px Arial`;\r\n            ctx.fillStyle = '#fff';\r\n            ctx.shadowColor = 'transparent';\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.lineWidth = 2;\r\n\r\n            // Calculate the position for the watermark text\r\n            const watermarkText = `Real Motor Japan ${globalSelectedVehicleReferenceNumber}`;\r\n            const textWidth = ctx.measureText(watermarkText).width;\r\n            const textHeight = fontSize; // Font size determines the text height\r\n\r\n            // Set padding around the text (adjust as needed)\r\n            const paddingX = 10;\r\n            const paddingY = 5;\r\n\r\n            // Calculate the position for the text shadow\r\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\r\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\r\n\r\n            // Increase the shadow thickness by adjusting the shadow blur radius\r\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\r\n\r\n            // Draw the text shadow (black)\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(watermarkText, xShadow, yShadow);\r\n\r\n            // Reset the shadow blur radius for the actual text\r\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\r\n\r\n            // Calculate the position for the actual text\r\n            const x = (canvas.width - textWidth) / 2;\r\n            const y = canvas.height - 20;\r\n\r\n            // Draw the actual text (white)\r\n            ctx.fillStyle = '#fff';\r\n            ctx.fillText(watermarkText, x, y);\r\n\r\n            // Convert the canvas to a blob\r\n            const watermarkedImageBlob = await new Promise(resolve => {\r\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\r\n            });\r\n\r\n            // Upload the resized image to Firebase Storage\r\n            const imageRef = ref(storage, `${globalCurrentStockID}/${imagename}`);\r\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\r\n          };\r\n        })\r\n      );\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n      const year = moment(datetime).format('YYYY');\r\n      const month = moment(datetime).format('MM');\r\n      const monthWithDay = moment(datetime).format('MM/DD');\r\n      const date = moment(datetime).format('YYYY/MM/DD');\r\n      const day = moment(datetime).format('DD');\r\n      const time = moment(datetime).format('HH:mm');\r\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n      const imageCount = {\r\n        imageCount: globalSelectedImages.length,\r\n      };\r\n\r\n      await updateDoc(docRef, imageCount);\r\n\r\n      const logData = {\r\n        message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber}\" using Vehicle List`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber} using Vehicle List\"`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle Updated'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n\r\n      // console.log(`Images uploaded to folder ${globalCurrentStockID}`);\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleUploadImages = async () => {\r\n\r\n    dispatch(setUploadImagesButtonLoading(true));\r\n\r\n    if (globalSelectedImages.length > 0) {\r\n      toast.closeAll();\r\n      try {\r\n        await uploadImages();\r\n        dispatch(setUploadImagesButtonLoading(false));\r\n        fetchImageCounts();\r\n        handleUploadImagesModalClose();\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Uploaded Images successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        dispatch(setUploadImagesButtonLoading(false));\r\n        handleUploadImagesModalClose();\r\n\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Uploaded Error: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    else {\r\n      dispatch(setUploadImagesButtonLoading(false));\r\n    }\r\n\r\n\r\n\r\n  };\r\n\r\n  return (\r\n\r\n    <>\r\n      <ImageUploadModal\r\n        handleUploadImagesModalClose={handleUploadImagesModalClose}\r\n        screenWidth={screenWidth}\r\n        dragSortableViewRef={dragSortableViewRef}\r\n        handleClearImagesExtra={handleClearImagesExtra}\r\n        handleUploadImages={handleUploadImages} />\r\n    </>\r\n  );\r\n\r\n};\r\n\r\n\r\nconst SupplyChainsCosts = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsOpen = useCallback((data) => {\r\n    dispatch(setSupplyChainsCostsModalVisible(true));\r\n    dispatch(setVehicleListSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\r\n    globalSupplyChainCostsData = data.supplyChainsCostsData;\r\n    globalCurrentSupplyChainCostsData = data.supplyChainsCostsData;\r\n    globalCurrentStockID = data.stockID;\r\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\r\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\r\n    globalSelectedCarName = data.carName;\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <><TouchableOpacity\r\n      onPress={() => handleModalSupplyChainsCostsOpen(data)}\r\n      style={{\r\n        backgroundColor: '#12293F',\r\n        borderRadius: 5,\r\n        padding: 2,\r\n        // flex: 1,\r\n        width: '90%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}\r\n    >\r\n      {/* <Text style={{ textAlign: 'center', }}>Expense</Text> */}\r\n      <MaterialIcons name=\"payments\" size={22} color=\"white\" />\r\n    </TouchableOpacity>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n}\r\n\r\nconst AllSccModals = ({ supplyChainsCostsModalVisible, supplyChainsCostsData, expenseNameData, paidToData, currentDate, vehicleListSupplyChainsCostsData }) => {\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const toast = useToast();\r\n\r\n  const [sccData, setSccData] = useState([]);\r\n\r\n  // const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible);\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const [clearModalVisible, setClearModalVisible] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\r\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\r\n  const [paidToIsError, setPaidToIsError] = useState(false);\r\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\r\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\r\n  const selectExpenseNameRef = useRef(null);\r\n  const selectPaidToRef = useRef(null);\r\n  const expenseViewRef = useRef(null);\r\n\r\n  const textAreaAddExpenseName = useRef(null);\r\n  const textAreaAddPaidTo = useRef(null);\r\n  const inputExpenseAmount = useRef(null);\r\n  const handleInputExpenseAmountChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputExpenseAmount.current.value = formattedValue;\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsClose = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(false));\r\n    inputExpenseAmount.current?.clear();\r\n    globalSelectedExpenseName = '';\r\n    setSelectResetKey(nanoid());\r\n    globalSelectedPaidTo = '';\r\n    setSelectedDate(currentDate);\r\n    globalSPCSelectedDate = currentDate;\r\n    dispatch(setSelectedExpenseName(''));\r\n    dispatch(setSelectedPaidTo(''));\r\n    setInputAmountIsError(false);\r\n    setExpenseNameIsError(false);\r\n    setPaidToIsError(false);\r\n    globalSelectedVehicle = '';\r\n  };\r\n\r\n\r\n  const handleClearModalOpen = () => {\r\n    setClearModalVisible(true);\r\n  };\r\n\r\n  const handleClearModalClose = () => {\r\n    setClearModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const amounts = vehicleListSupplyChainsCostsData.map((item) => {\r\n      const expenseName = Object.keys(item)[0];\r\n      const expenseData = item[expenseName];\r\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n    });\r\n\r\n    // Use reduce to add up all the amounts\r\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n    const formattedTotalAmount = totalAmount.toLocaleString();\r\n    setTotalAmount(formattedTotalAmount);\r\n    globalSupplyChainCostsAmount = formattedTotalAmount;\r\n\r\n  }, [vehicleListSupplyChainsCostsData]);\r\n\r\n  const handleSave = useCallback(() => {\r\n\r\n\r\n\r\n    if (inputExpenseAmount.current?.value == ''\r\n      || inputExpenseAmount.current?.value == 0\r\n      || globalSelectedExpenseName == ''\r\n      || globalSelectedPaidTo == ''\r\n    ) {\r\n\r\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\r\n        setInputAmountIsError(true);\r\n      }\r\n\r\n      if (globalSelectedExpenseName == '') {\r\n        setExpenseNameIsError(true);\r\n      }\r\n\r\n      if (globalSelectedPaidTo == '') {\r\n        setPaidToIsError(true);\r\n      }\r\n    }\r\n\r\n    else {\r\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\r\n\r\n      if (existingIndex !== -1) {\r\n        // If an entry with the same expense name exists, update it\r\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\r\n        updatedData[existingIndex][globalSelectedExpenseName] = {\r\n          expenseName: globalSelectedExpenseName,\r\n          amount: inputExpenseAmount.current?.value,\r\n          date: globalSPCSelectedDate,\r\n          paidName: globalSelectedPaidTo,\r\n        };\r\n        globalSupplyChainCostsData = updatedData;\r\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n\r\n      } else {\r\n        setInputAmountIsError(false);\r\n        setExpenseNameIsError(false);\r\n        setPaidToIsError(false);\r\n        // If no entry with the same expense name exists, add a new entry\r\n        const newData = {\r\n          [globalSelectedExpenseName]: {\r\n            expenseName: globalSelectedExpenseName,\r\n            amount: inputExpenseAmount.current?.value,\r\n            date: globalSPCSelectedDate,\r\n            paidName: globalSelectedPaidTo,\r\n          },\r\n        };\r\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\r\n        // console.log(globalSupplyChainCostsData);\r\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\r\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\r\n        setSelectResetKey(nanoid());\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const handleEditPress = useCallback((item) => {\r\n    // console.log(item.amount);\r\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\r\n    dispatch(setSelectedExpenseName(item.expenseName));\r\n    globalSelectedExpenseName = item.expenseName;\r\n    dispatch(setSelectedPaidTo(item.paidName));\r\n    globalSelectedPaidTo = item.paidName;\r\n    globalSPCSelectedDate = item.date;\r\n    setSelectedDate(item.date);\r\n    expenseViewRef.current.scrollIntoView({ behavior: 'smooth' });\r\n\r\n  }, [])\r\n\r\n\r\n  const handleDeleteItem = (expenseName) => {\r\n    // Find the index of the item to be deleted\r\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\r\n\r\n    if (itemIndex !== -1) {\r\n      // Create a copy of the data array and remove the item at the found index\r\n      const newData = [...globalSupplyChainCostsData];\r\n      newData.splice(itemIndex, 1);\r\n\r\n      // Update the state with the new array\r\n      dispatch(setVehicleListSupplyChainsCostsData(newData));\r\n      globalSupplyChainCostsData = newData;\r\n    }\r\n  };\r\n\r\n  const handleFirstModalClose = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(false));\r\n\r\n  };\r\n  const handleFirstModalOpen = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(true));\r\n\r\n  }\r\n\r\n  const handleAddExpenseNameTextChange = () => {\r\n    const textAreaValue = textAreaAddExpenseName.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPaidToTextChange = () => {\r\n    const textAreaValue = textAreaAddPaidTo.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleSaveSupplyChainsCosts = async () => {\r\n\r\n    toast.closeAll();\r\n    if (globalCurrentSupplyChainCostsData == globalSupplyChainCostsData) {\r\n      // console.log('Same price, will not update')\r\n      dispatch(setSupplyChainsCostsModalVisible(false));\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), globalCurrentStockID);\r\n\r\n      try {\r\n        await updateDoc(vehicleProductRef, { supplyChainsCostsData: globalSupplyChainCostsData });\r\n        dispatch(setSupplyChainsCostsModalVisible(false));\r\n        // console.log('Supply Chains Costs updated successfully');\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n\r\n        dispatch(setSupplyChainsCostsModalVisible(false));\r\n        dispatch(setVehicleListSupplyChainsCostsData([]));\r\n        globalSupplyChainCostsData = [];\r\n        globalCurrentSupplyChainCostsData = [];\r\n        globalCurrentStockID = '';\r\n\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n  return (\r\n\r\n    <><Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 960 ? '90%' : '50%'} h={'auto'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 1380 ? 'column' : 'row'} alignItems={screenWidth <= 1380 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\r\n          <Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 1380 ? 'center' : ''}> {globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <View style={{ height: '100%' }}>\r\n            <View paddingBottom={5}>\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} ref={expenseViewRef}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\r\n                  <SupplyChainsCostsSortAndAddModal\r\n                    docName='ExpenseName'\r\n                    handleAddTextChange={handleAddExpenseNameTextChange}\r\n                    textAreaAdd={textAreaAddExpenseName}\r\n                    title='Expense Name'\r\n                    dataName={'expenseName'}\r\n                    databaseInit={projectExtensionFirestore}\r\n                    headerText=\"Rearrange/Add Expense Name\"\r\n                    data={expenseNameData}\r\n                    handleFirstModalClose={handleFirstModalClose}\r\n                    handleFirstModalOpen={handleFirstModalOpen} />\r\n                </View>\r\n                <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\r\n              </View>\r\n\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: screenWidth <= 960 ? 8 : 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={2}>Amount</Text>\r\n                </View>\r\n                <Input\r\n                  borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\r\n                  flex={3}\r\n                  ref={inputExpenseAmount}\r\n                  onChangeText={handleInputExpenseAmountChange}\r\n                  placeholder=\"Amount\"\r\n                  bgColor={'white'}\r\n                  placeholderTextColor={'muted.400'}\r\n                  InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\r\n              </View>\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\r\n                </View>\r\n                <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\r\n              </View>\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\r\n                  <SupplyChainsCostsSortAndAddModal\r\n                    docName='PaidTo'\r\n                    handleAddTextChange={handleAddPaidToTextChange}\r\n                    textAreaAdd={textAreaAddExpenseName}\r\n                    title='Paid To'\r\n                    dataName={'paidTo'}\r\n                    databaseInit={projectExtensionFirestore}\r\n                    headerText=\"Rearrange/Add Paid To\"\r\n                    data={paidToData}\r\n                    handleFirstModalClose={handleFirstModalClose}\r\n                    handleFirstModalOpen={handleFirstModalOpen} />\r\n                </View>\r\n                <SelectPaidTo paidToIsError={paidToIsError} />\r\n              </View>\r\n\r\n              <TouchableHighlight\r\n                onPress={handleSave}\r\n                underlayColor=\"lightgreen\"\r\n                style={{\r\n                  backgroundColor: '#16A34A',\r\n                  borderRadius: 5,\r\n                  margin: 1,\r\n                  flex: 1,\r\n                  width: screenWidth <= 960 ? '80%' : '40%',\r\n                  alignSelf: 'center',\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 10,\r\n                }}>\r\n                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                  <MaterialIcons name=\"add\" color=\"white\" size={20} />\r\n                  <Text style={{ color: 'white', marginLeft: 5 }}>ADD/EDIT</Text>\r\n                </View>\r\n              </TouchableHighlight>\r\n            </View>\r\n            {screenWidth >= 1360 ? (\r\n\r\n              <View>\r\n                <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#0642F4', }}\r\n                  flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\r\n                </View>\r\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n                  return (\r\n                    <View style={{ flexDirection: 'row', backgroundColor: '#D4D4D4', borderBottomColor: '#E4E4E7', borderBottomWidth: 1, justifyContent: 'center', alignItems: 'center', }} key={index}\r\n                      flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\r\n                      justifyContent={'center'} alignItems={'center'}>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      <View style={{ flex: 1, flexDirection: 'row', marginLeft: 1 }}\r\n                        flex={1} marginLeft={1} flexDir={'row'}>\r\n                        <TouchableHighlight\r\n                          onPress={() => handleEditPress(expenseData)}\r\n                          underlayColor={'#005691'}\r\n                          style={{\r\n                            flex: 1,\r\n                            margin: 1,\r\n                            borderRadius: 3,\r\n                          }}>\r\n                          <View\r\n                            style={{\r\n                              flex: 1,\r\n                              backgroundColor: '#06B6D4',\r\n                              borderRadius: 3,\r\n                              justifyContent: 'center',\r\n                              alignItems: 'center',\r\n                            }}>\r\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\r\n                          </View>\r\n                        </TouchableHighlight>\r\n                        <TouchableHighlight\r\n                          onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                          underlayColor={'#005691'}\r\n                          style={{\r\n                            flex: 1,\r\n                            margin: 1,\r\n                            borderRadius: 3,\r\n                          }}>\r\n                          <View\r\n                            style={{\r\n                              flex: 1,\r\n                              backgroundColor: '#EF4444',\r\n                              borderRadius: 3,\r\n                              justifyContent: 'center',\r\n                              alignItems: 'center',\r\n                            }}>\r\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                          </View>\r\n                        </TouchableHighlight>\r\n                        {/* <TouchableHighlight\r\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                        style={() => ({\r\n                          flex: 1,\r\n                          margin: 1,\r\n                          borderRadius: 3,\r\n                          backgroundColor: '#CD5C5C',\r\n                        })}>\r\n                        <View\r\n                          style={{\r\n                            flex: 1,\r\n                            borderRadius: 3,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            backgroundColor: '#CD5C5C',\r\n                          }}>\r\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                        </View>\r\n                      </TouchableHighlight> */}\r\n                      </View>\r\n                    </View>\r\n                  )\r\n                })}\r\n\r\n              </View>\r\n\r\n            ) : (\r\n\r\n              <View>\r\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n                  return (\r\n\r\n                    <View style={{ flexDirection: 'column', justifyContent: 'center', flex: 1, margin: 3, marginBottom: 10, }} key={index}>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Expense Name</Text>\r\n                        </View>\r\n\r\n                        <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Amount</Text>\r\n                        </View>\r\n\r\n                        <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Date</Text>\r\n                        </View>\r\n                        <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Paid To</Text>\r\n                        </View>\r\n                        <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Modify</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, flexDirection: 'row', }}\r\n                          flex={1} marginLeft={1} flexDir={'row'}>\r\n\r\n                          <TouchableHighlight\r\n                            onPress={() => handleEditPress(expenseData)}\r\n                            underlayColor={'#005691'}\r\n                            style={{\r\n                              flex: 1,\r\n                              margin: 1,\r\n                              borderRadius: 3,\r\n                            }}>\r\n                            <View\r\n                              style={{\r\n                                flex: 1,\r\n                                backgroundColor: '#06B6D4',\r\n                                borderRadius: 3,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                              }}>\r\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\r\n                            </View>\r\n                          </TouchableHighlight>\r\n                          <TouchableHighlight\r\n                            onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                            underlayColor={'#005691'}\r\n                            style={{\r\n                              flex: 1,\r\n                              margin: 1,\r\n                              borderRadius: 3,\r\n                            }}>\r\n                            <View\r\n                              style={{\r\n                                flex: 1,\r\n                                backgroundColor: '#EF4444',\r\n                                borderRadius: 3,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                              }}>\r\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                            </View>\r\n                          </TouchableHighlight>\r\n                          {/* <TouchableHighlight\r\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                        style={() => ({\r\n                          flex: 1,\r\n                          margin: 1,\r\n                          borderRadius: 3,\r\n                          backgroundColor: '#CD5C5C',\r\n                        })}>\r\n                        <View\r\n                          style={{\r\n                            flex: 1,\r\n                            borderRadius: 3,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            backgroundColor: '#CD5C5C',\r\n                          }}>\r\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                        </View>\r\n                      </TouchableHighlight> */}\r\n                        </View>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n\r\n                  )\r\n                })}\r\n\r\n              </View>\r\n\r\n\r\n            )}\r\n\r\n          </View>\r\n\r\n\r\n        </Modal.Body>\r\n        <View\r\n          style={{\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            width: '100%',\r\n          }}>\r\n          <TouchableOpacity\r\n            onPress={handleModalSupplyChainsCostsClose}\r\n            style={{\r\n              backgroundColor: '#525252',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Close</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ flex: 4 }} />\r\n          <TouchableOpacity\r\n            onPress={handleSaveSupplyChainsCosts}\r\n            style={{\r\n              backgroundColor: '#16A34A',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Save</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Modal.Content>\r\n    </Modal>\r\n      {/* <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n        <Modal.Content bgColor={'amber.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'amber.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'amber.600'}\r\n            margin={5}>\r\n            <View flex={1}>\r\n              <Text color={'amber.600'} bold>Warning!</Text>\r\n              <Text color={'amber.600'}>Are you sure you want to clear?</Text>\r\n            </View>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleClearModalClose}\r\n                colorScheme={'warmGray'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button\r\n                onPress={() => {\r\n                }}\r\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                Clear\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal> */}\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nconst SelectPaidTo = ({ paidToIsError, }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedPaidTo}\r\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedPaidTo = value\r\n      dispatch(setSelectedPaidTo(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Paid To\"\r\n    placeholder=\"Choose Paid To\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {paidToData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n    ;\r\n};\r\n\r\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  nameVariable.text = loginName;\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n    handleFirstModalClose();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n    handleFirstModalOpen();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        // console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'flex-end', marginRight: 1 }}>\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity onPress={handleSortModalOpen}>\r\n            <MaterialCommunityIcons name=\"playlist-edit\" size={25} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n      </View>\r\n\r\n      <Modal isOpen={modalSortOpen} onClose={handleSortModalClose} useRNModal>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <View style={{\r\n              width: '100%',\r\n              flexDirection: 'column',\r\n            }}>\r\n              <View style={{ alignItems: 'flex-end' }}>\r\n                <TouchableHighlight onPress={handleModalAddOpen}>\r\n                  <FontAwesome name=\"plus-circle\" size={25} color=\"#102A43\" />\r\n                </TouchableHighlight>\r\n              </View>\r\n\r\n              <View style={{\r\n                flex: 1,\r\n                borderWidth: 1,\r\n                borderColor: '#102A43',\r\n                borderRadius: 5,\r\n              }}>\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n                    <View\r\n                      style={{\r\n                        flex: 1,\r\n                        backgroundColor: 'rgba(16,42,67, 0.5)',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#D3D3D3', // You can use a specific color code here\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                      }}\r\n                    >\r\n                      <TouchableOpacity onPress={() => handleDeleteItemPress(item)}>\r\n                        <AntDesign name=\"minuscircle\" size={16} color=\"#102A43\" />\r\n                      </TouchableOpacity>\r\n                      <Text style={{ flex: 1, textAlign: 'center', color: 'white' }}>{item}</Text>\r\n                      <TouchableOpacity onPressIn={drag}>\r\n                        <Entypo name=\"menu\" size={16} color=\"#102A43\" />\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </View>\r\n            </View>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <View style={{ flexDirection: 'row', flex: 1 }}>\r\n              <TouchableOpacity\r\n                onPress={handleSortModalClose}\r\n                style={{\r\n                  flex: 1,\r\n                  borderRadius: 5,\r\n                  backgroundColor: '#525252',\r\n                  margin: 5,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 8,\r\n                }}\r\n              >\r\n                <Text style={{ color: 'white' }}>Close</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={handleModalSaveOpen}\r\n                style={{\r\n                  flex: 1,\r\n                  borderRadius: 5,\r\n                  backgroundColor: '#0891B2',\r\n                  margin: 5,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 8,\r\n                }}\r\n              >\r\n                <Text style={{ color: 'white' }}>Save</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} useRNModal>\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nconst SCC_Modals = () => {\r\n\r\n  const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible)\r\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const currentDate = useSelector((state) => state.currentDate);\r\n  const vehicleListSupplyChainsCostsData = useSelector((state) => state.vehicleListSupplyChainsCostsData);\r\n\r\n  return (\r\n    <AllSccModals\r\n      supplyChainsCostsModalVisible={supplyChainsCostsModalVisible}\r\n      supplyChainsCostsData={supplyChainsCostsData}\r\n      expenseNameData={expenseNameData}\r\n      paidToData={paidToData}\r\n      currentDate={currentDate}\r\n      vehicleListSupplyChainsCostsData={vehicleListSupplyChainsCostsData}\r\n    />\r\n  );\r\n}\r\n\r\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\r\n\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const handleModalCalendarOpen = () => {\r\n    setModalCalendarVisible(true);\r\n  };\r\n\r\n  const handleModalCalendarClose = () => {\r\n    setModalCalendarVisible(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <TouchableOpacity onPress={handleModalCalendarOpen} style={{ flex: 3 }}>\r\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n      </TouchableOpacity>\r\n\r\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n        <Modal.CloseButton />\r\n        <Modal.Content>\r\n          <Box height={'full'} flex={1}>\r\n\r\n            <Calendar\r\n              onDayPress={useCallback(day => {\r\n                setSelectedDate(day.dateString);\r\n                // console.log(day.dateString);\r\n                globalSPCSelectedDate = day.dateString;\r\n                handleModalCalendarClose();\r\n              }, [])}\r\n              markedDates={{\r\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n              }}\r\n              renderArrow={(direction) => (\r\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n              )}\r\n              enableSwipeMonths={true}\r\n              initialDate={selectedDate}\r\n              showSixWeeks />\r\n\r\n          </Box>\r\n\r\n        </Modal.Content>\r\n\r\n      </Modal></>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedExpenseName}\r\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedExpenseName = value\r\n      dispatch(setSelectedExpenseName(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Expense Name\"\r\n    placeholder=\"Choose Expense Name\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {expenseNameData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n\r\n\r\n};\r\n\r\nconst VehicleEditModal = ({ handleEditModalClose }) => {\r\n\r\n  const editVehicleModalVisible = useSelector((state) => state.editVehicleModalVisible);\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  return (\r\n    <Modal isOpen={editVehicleModalVisible} onClose={handleEditModalClose} size={'full'}>\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'100%'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Edit Vehicle </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n\r\n\r\n        <Modal.Body >\r\n          Sit nulla est ex deserunt exercitation anim occaecat.\r\n        </Modal.Body>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n\r\n  );\r\n};\r\n\r\nconst EditVehicleModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEditModalClose = () => {\r\n    dispatch(setEditVehicleModalVisible(false));\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = '';\r\n    globalSelectedVehicleReferenceNumber = '';\r\n    globalSelectedCarName = '';\r\n\r\n  }\r\n\r\n  return (\r\n    <VehicleEditModal handleEditModalClose={handleEditModalClose} />\r\n\r\n\r\n  );\r\n\r\n};\r\n\r\nconst EditVehicle = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleModalOpen = () => {\r\n\r\n    dispatch(setEditVehicleModalVisible(true));\r\n    globalCurrentStockID = data.stockID;\r\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\r\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\r\n    globalSelectedCarName = data.carName;\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        onPress={handleModalOpen}\r\n        style={{\r\n          backgroundColor: '#7B9CFF',\r\n          marginHorizontal: 5,\r\n          borderRadius: 5,\r\n          padding: 2,\r\n          flex: 1,\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        {/* <Text style={{ textAlign: 'center',  color: 'white', }}>Edit</Text> */}\r\n        <MaterialIcons name={\"edit\"} color='white' size={22} />\r\n      </TouchableOpacity>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst ViewImagesModal = ({ handleViewImagesModalClose }) => {\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const viewImagesModalVisible = useSelector((state) => state.viewImagesModalVisible);\r\n  const viewImagesData = useSelector((state) => state.viewImagesData);\r\n\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    const styles = StyleSheet.create({\r\n      dropdown: {\r\n        margin: 16,\r\n        height: 50,\r\n        borderBottomColor: 'gray',\r\n        borderBottomWidth: 0.5,\r\n      },\r\n      icon: {\r\n        marginRight: 5,\r\n      },\r\n      placeholderStyle: {\r\n        fontSize: 16,\r\n      },\r\n      selectedTextStyle: {\r\n        fontSize: 16,\r\n      },\r\n      iconStyle: {\r\n        width: 20,\r\n        height: 20,\r\n      },\r\n      inputSearchStyle: {\r\n        height: 40,\r\n        fontSize: 16,\r\n      },\r\n      container: {\r\n        flex: 1,\r\n        paddingTop: 20,\r\n\r\n      },\r\n      txt: {\r\n        fontSize: 18,\r\n        lineHeight: 24,\r\n        padding: 5\r\n      },\r\n      sort: {\r\n      },\r\n      item_children: {\r\n        width: 90,\r\n        height: 90,\r\n        backgroundColor: 'black',\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      },\r\n      item_delete_icon: {\r\n        width: 14,\r\n        height: 14,\r\n        position: \"absolute\",\r\n        right: 1,\r\n        top: 1\r\n      },\r\n      item_icon: {\r\n        width: 90,\r\n        height: 90,\r\n        resizeMode: \"contain\",\r\n        position: \"absolute\"\r\n      }\r\n    });\r\n\r\n    return (\r\n\r\n      <Box key={item.id} style={styles.item}>\r\n        <Box style={styles.item_children}>\r\n\r\n          <FastImage\r\n            style={styles.item_icon}\r\n            source={{\r\n              uri: item.uri,\r\n              priority: FastImage.priority.normal,\r\n            }}\r\n            resizeMode={FastImage.resizeMode.contain}\r\n\r\n          />\r\n\r\n        </Box>\r\n      </Box>\r\n    );\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <>\r\n      <Modal isOpen={viewImagesModalVisible} onClose={handleViewImagesModalClose} size={'full'} useRNModal>\r\n        <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '60%'} h={'100%'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n            <Text color={'white'} fontSize={20} bold>View Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n          </Modal.Header>\r\n\r\n\r\n          <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', margin: '5%', marginLeft: '10%' }}>\r\n\r\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n              <ScrollView style={{ height: '90%' }}>\r\n                <DragSortableView\r\n                  sortable={false}\r\n                  // ref={dragSortableViewRef}\r\n                  dataSource={viewImagesData}\r\n                  parentWidth={width * 0.33}\r\n                  childrenWidth={100}\r\n                  childrenHeight={100}\r\n                  marginChildrenTop={3}\r\n                  marginChildrenBottom={0}\r\n                  marginChildrenLeft={0}\r\n                  marginChildrenRight={0}\r\n                  onClickItem={(item, index) => {\r\n                    handleImagePress(index.uri);\r\n                  }}\r\n                  keyExtractor={(item) => item.uri}\r\n                  renderItem={useCallback((item, index) => getImagesRenderItem(item, index), [])}\r\n                />\r\n              </ScrollView>\r\n            </View>\r\n\r\n\r\n          </View>\r\n\r\n\r\n        </Modal.Content>\r\n\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\n\r\nconst FobPriceHistoryModal = ({ handleFobPriceHistoryClose }) => {\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const fobPriceHistoryModalVisible = useSelector((state) => state.fobPriceHistoryModalVisible);\r\n  const fobHistoryData = useSelector((state) => state.fobHistoryData);\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={fobPriceHistoryModalVisible}\r\n      onClose={handleFobPriceHistoryClose}\r\n      size={'full'}\r\n      useRNModal\r\n    >\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'auto'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} alignItems={screenWidth <= 960 ? 'center' : 'flex-start'}>\r\n          <Text color={'white'} fontSize={20} bold>FOB Price History </Text>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ScrollView style={{ width: '100%' }}>\r\n            {screenWidth >= 960 ? (\r\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\r\n                {/* Table Header */}\r\n                <View style={{\r\n                  borderRadius: 3,\r\n                  backgroundColor: '#0642F4',\r\n                  flexDirection: 'row',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#0642F4',\r\n                }}>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\r\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n\r\n                </View>\r\n\r\n                {/* Table Rows */}\r\n                {[...fobHistoryData]\r\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\r\n                  .map((data, index) => (\r\n                    <View\r\n                      key={index}\r\n                      style={{\r\n                        backgroundColor: '#BBF7D0',\r\n                        flexDirection: 'row',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#CCCCCC',\r\n                      }}\r\n                    >\r\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\r\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\r\n                      <Text style={{ width: '20%', fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\r\n                    </View>\r\n                  ))\r\n                }\r\n              </View>\r\n            ) : (\r\n              // Mobile View FOB Price History\r\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\r\n                {/* Table Header */}\r\n                {/* <View style={{\r\n                  borderRadius: 3,\r\n                  backgroundColor: '#0642F4',\r\n                  flexDirection: 'row',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#0642F4',\r\n                }}>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price</Text>\r\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n\r\n                </View> */}\r\n\r\n                {/* Table Rows */}\r\n                {[...fobHistoryData]\r\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\r\n                  .map((data, index) => (\r\n                    <View\r\n                      key={index}\r\n                      style={{\r\n                        backgroundColor: '#BBF7D0',\r\n                        flexDirection: 'column',\r\n                        borderWidth: 1,\r\n                        borderColor: '#E4E4E7',\r\n                        margin: 3,\r\n                      }}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                        </View>\r\n\r\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\r\n                        </View><Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n                        </View>\r\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\r\n                      </View>\r\n                    </View>\r\n                  ))\r\n                }\r\n              </View>\r\n            )}\r\n\r\n          </ScrollView>\r\n\r\n\r\n\r\n\r\n        </Modal.Body>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nconst FobPriceHistory = () => {\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleFobPriceHistoryClose = () => {\r\n\r\n    dispatch(setFobPriceHistoryModalVisible(false));\r\n    globalFobPriceHistoryData = [];\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = '';\r\n    globalSelectedVehicleReferenceNumber = '';\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <FobPriceHistoryModal handleFobPriceHistoryClose={handleFobPriceHistoryClose} />\r\n\r\n  );\r\n}\r\n\r\n\r\nconst ImageCountComponent = ({ item, handleViewImagesModalOpen, handleUploadImagesModalOpen }) => {\r\n  // State for the image count\r\n  const [imageCount, setImageCount] = useState(item.imageCount || 0);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        setImageCount(data.imageCount || 0); // Update the image count with the new value from Firestore\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, [item.stockID]); // useEffect will re-run if item.stockID changes\r\n\r\n  // Function placeholders\r\n  // const handleViewImagesModalOpen = (item) => {\r\n  //   console.log('View images', item);\r\n  // };\r\n\r\n  // const handleUploadImagesModalOpen = (item) => {\r\n  //   console.log('Upload images', item);\r\n  // };\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n      {imageCount > 0 ? (\r\n        <TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n          <Text style={{ textDecorationLine: 'underline' }}>\r\n            {imageCount} image/s\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ) : (\r\n        <Text>{imageCount} image/s</Text>\r\n      )}\r\n\r\n      <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n        {imageCount > 0 ? null : (\r\n          <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n        )}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst FobPriceInput = ({ item, index, }) => {\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const [fobPrice, setFobPrice] = useState(item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : '');\r\n  const inputFobJpy = useRef([]);\r\n\r\n  useEffect(() => {\r\n    // Assume you have a collection named 'stocks' and the document ID is `item.stockID`\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\r\n      // console.log(`Read ${doc.size} documents from VehicleProducts`);\r\n\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        // Update the fobPrice state with the new value from Firestore\r\n        setFobPrice(data.fobPrice ? parseFloat(data.fobPrice).toLocaleString() : '');\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // ... rest of your component\r\n  const formatValueWithCommas = (value) => {\r\n    const numericValue = value.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    return formattedValue;\r\n  };\r\n\r\n  const handleTextChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    const currentNumericValue = fobPrice.replace(/[^0-9]/g, '');\r\n\r\n    // Update state only if the numeric value has changed\r\n    if (numericValue !== currentNumericValue) {\r\n      setFobPrice(numericValue);\r\n    }\r\n  };\r\n\r\n  // This function will format the displayed text\r\n  const handleInputFobJpyChange = (text, stockID) => {\r\n    const formattedValue = formatValueWithCommas(text);\r\n\r\n    // Apply the formatted value to the input without resetting the state\r\n    if (inputFobJpy.current[stockID]) {\r\n      inputFobJpy.current[stockID].setNativeProps({ text: formattedValue });\r\n    }\r\n  };\r\n\r\n  const handleSaveFob = async (item, index,) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    toast.closeAll();\r\n    // if (item.fobPrice == fobValue || fobValue == '') {\r\n    //   dispatch(setLoadingModalVisible(false));\r\n\r\n    //   console.log('same');\r\n    //   console.log(item.fobPrice);\r\n\r\n    // }\r\n    // else {\r\n\r\n    const fobHistoryData = {\r\n      date: formattedTime,\r\n      fobPrice: fobValue,\r\n      changedBy: nameVariable.text,\r\n    };\r\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n    try {\r\n      await updateDoc(vehicleProductRef, {\r\n        fobPrice: fobValue,\r\n        fobHistory: arrayUnion(fobHistoryData)\r\n      });\r\n      const logData = {\r\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle FOB Price Updated'.toLowerCase(),\r\n          'Vehicle FOB Price'.toLowerCase(),\r\n          'Vehicle FOB'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'FOB Price Updated'.toLowerCase(),\r\n          'FOB Price'.toLowerCase(),\r\n          'FOB'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n      // console.log('FOB Price updated successfully');\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    // }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextInput\r\n        ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n        value={formatValueWithCommas(fobPrice)} // Display the formatted value\r\n        style={{ outlineStyle: 'none', flex: 1, padding: 5, borderRadius: 5, width: '90%' }}\r\n        key={item.id}\r\n        onChangeText={(text) => {\r\n          handleTextChange(text); // This sets the numeric value state\r\n          handleInputFobJpyChange(text, item.stockID); // This formats the display\r\n        }}\r\n        onSubmitEditing={() => handleSaveFob(item, index)} />\r\n      <TouchableHighlight\r\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n        onPress={() => handleSaveFob(item, index)}\r\n        style={{\r\n          backgroundColor: '#16A34A',\r\n          borderRadius: 5,\r\n          padding: 5,\r\n          margin: 2,\r\n          alignSelf: 'center',\r\n        }}>\r\n        {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n        <MaterialIcons name='update' color='white' size={22} />\r\n      </TouchableHighlight>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst VehicleListTable = () => {\r\n  const toast = useToast();\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const dispatch = useDispatch();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [data, setData] = useState([]);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const vehicleListData = useSelector((state) => state.vehicleListData);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const searchInputRef = useRef(null);\r\n\r\n\r\n  const [stockIDs, setStockIDs] = useState([]);\r\n  const [imageCounts, setImageCounts] = useState([]);\r\n\r\n  const inputExpenseAmount = useRef(null);\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const inputFobJpy = useRef([]);\r\n  const [pageClicked, setPageClicked] = useState('');\r\n  const [lastVisible, setLastVisible] = useState(null);\r\n  const [firstVisible, setFirstVisible] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [fobPrices, setFobPrices] = useState({});\r\n  // Memoize the filtered data using useMemo\r\n  const [sortField, setSortField] = useState('dateAdded'); // null when sorting is off\r\n  const [isSortActive, setIsSortActive] = useState(false);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  nameVariable.text = loginName;\r\n\r\n  const handleSortChange = (field) => {\r\n    setCurrentPage(1);\r\n    // If the field is the same as the current sortField, toggle sorting\r\n    setSearchText('');\r\n    searchInputRef.current.clear();\r\n    if (field === sortField) {\r\n      setIsSortActive(!isSortActive); // Toggle sorting for the same field\r\n      if (!isSortActive) {\r\n        // If it was off, we turn it on and keep the same field\r\n        setSortField(field);\r\n      } else {\r\n        // If it was on, we turn it off and reset to default 'dateAdded'\r\n        setSortField('dateAdded');\r\n      }\r\n    } else {\r\n      // If the field is different, turn sorting on and change the field\r\n      setSortField(field);\r\n      setIsSortActive(true); // Always turn on sorting when a new field is clicked\r\n    }\r\n    // You might want to dispatch setLoadingModalVisible(true) when you start a new query\r\n    dispatch(setLoadingModalVisible(true));\r\n  };\r\n\r\n\r\n  const fetchWithSort = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n    let q;\r\n\r\n    if (searchText === '') {\r\n      q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        limit(pageSize)\r\n      );\r\n    } else {\r\n      q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        limit(pageSize)\r\n      );\r\n    }\r\n\r\n    try {\r\n      const documents = await getDocs(q);\r\n      const vehicleProductData = [];\r\n      documents.forEach((document) => {\r\n        vehicleProductData.push({\r\n          id: document.id,\r\n          ...document.data(),\r\n        });\r\n      });\r\n      dispatch(setVehicleListData(vehicleProductData));\r\n      setLastVisible(documents.docs[documents.docs.length - 1]);\r\n      setFirstVisible(documents.docs[0]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching vehicle products:\", error);\r\n    } finally {\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchWithSort();\r\n  }, [sortField])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // Determine the field and direction to sort by\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n    // Define the query\r\n    const q = query(\r\n      collection(projectExtensionFirestore, 'VehicleProducts'),\r\n      orderBy(fieldToSortBy, sortDirection),\r\n      limit(pageSize)\r\n    );\r\n\r\n    // Fetch the data once\r\n    getDocs(q)\r\n      .then((documents) => {\r\n        const vehicleProductData = [];\r\n        documents.forEach((document) => {\r\n          vehicleProductData.push({\r\n            id: document.id,\r\n            ...document.data(),\r\n          });\r\n        });\r\n        dispatch(setVehicleListData(vehicleProductData));\r\n        setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        setFirstVisible(documents.docs[0]);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching vehicle products: \", error);\r\n        // Handle the error appropriately\r\n      });\r\n\r\n    // Since this effect does not subscribe to real-time updates, there's no need to return a cleanup function\r\n  }, [projectExtensionFirestore, pageSize, sortField, isSortActive]); // Add dependencies as necessary\r\n\r\n\r\n\r\n  const fetchNextData = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n\r\n    if (searchText === '') {\r\n\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        startAfter(lastVisible),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'next');\r\n\r\n\r\n\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n    }\r\n\r\n    else {\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        startAfter(lastVisible),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'next');\r\n\r\n\r\n\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const fetchPreviousData = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n    if (searchText === '') {\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        endBefore(firstVisible),\r\n        limitToLast(pageSize)\r\n      );\r\n\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'prev')\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n\r\n    else {\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        endBefore(firstVisible),\r\n        limitToLast(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'prev');\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  const fetchFirstPage = (documents) => {\r\n\r\n\r\n    const vehicleProductData = [];\r\n\r\n    documents.forEach((document) => {\r\n      vehicleProductData.push({\r\n        id: document.id,\r\n        ...document.data(),\r\n      });\r\n    });\r\n\r\n    dispatch(setVehicleListData(vehicleProductData));\r\n\r\n    if (documents?.docs[0]) {\r\n      setFirstVisible(documents.docs[0]);\r\n    }\r\n    if (documents?.docs[documents.docs.length - 1]) {\r\n      setLastVisible(documents.docs[documents.docs.length - 1]);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n    if (!documents.empty) {\r\n      const vehicleProductData = [];\r\n      documents.forEach((document) => {\r\n        vehicleProductData.push({\r\n          id: document.id,\r\n          ...document.data(),\r\n        });\r\n      });\r\n\r\n\r\n\r\n      if (documents?.docs[0]) {\r\n        setFirstVisible(documents.docs[0]);\r\n      }\r\n      if (documents?.docs[documents.docs.length - 1]) {\r\n        setLastVisible(documents.docs[documents.docs.length - 1]);\r\n      }\r\n\r\n      if (pageClicked == 'next') {\r\n        setCurrentPage(currentPage + 1);\r\n      }\r\n      if (pageClicked == 'prev') {\r\n        setCurrentPage(currentPage - 1);\r\n      }\r\n      if (vehicleProductData.length < 1) {\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n      }\r\n\r\n      dispatch(setVehicleListData(vehicleProductData));\r\n    }\r\n\r\n    else {\r\n      const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n      const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n      if (searchText == '') {\r\n        setCurrentPage(1);\r\n\r\n        const q = query(\r\n          collection(projectExtensionFirestore, 'VehicleProducts'),\r\n          orderBy(fieldToSortBy, sortDirection),\r\n          limit(pageSize)\r\n        );\r\n        const firstPageDocuments = await getDocs(q);\r\n        fetchFirstPage(firstPageDocuments);\r\n\r\n      }\r\n      else {\r\n\r\n        setCurrentPage(1);\r\n\r\n        const q = query(\r\n          collection(projectExtensionFirestore, 'VehicleProducts'),\r\n          where('keywords', 'array-contains', searchText.toUpperCase()),\r\n          orderBy(fieldToSortBy, sortDirection),\r\n          limit(pageSize)\r\n        );\r\n        const firstPageDocuments = await getDocs(q);\r\n        fetchFirstPage(firstPageDocuments);\r\n\r\n      }\r\n\r\n\r\n    }\r\n  };\r\n\r\n  const handleNextPage = async () => {\r\n    // setPageClicked('next');\r\n    dispatch(setLoadingModalVisible(true));\r\n    // setCurrentPage(currentPage + 1);\r\n    await fetchNextData();\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  const handlePreviousPage = async () => {\r\n    // setPageClicked('previous');\r\n    dispatch(setLoadingModalVisible(true));\r\n    // setCurrentPage(currentPage - 1);\r\n    await fetchPreviousData();\r\n\r\n\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    searchData();\r\n\r\n  }, [searchText])\r\n\r\n  const searchData = async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    if (searchText === '') {\r\n      setCurrentPage(1);\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const firstPageDocuments = await getDocs(q);\r\n      fetchFirstPage(firstPageDocuments);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n    }\r\n\r\n    else {\r\n      setCurrentPage(1);\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const firstPageDocuments = await getDocs(q);\r\n      fetchFirstPage(firstPageDocuments);\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const filteredData = useMemo(() => {\r\n    const sanitizedSearchQuery = searchQuery.trim().toLowerCase();\r\n\r\n    // Filter the data based on the sanitized searchQuery (removing whitespace from the beginning and end)\r\n    const filteredResults = vehicleListData.filter((item) => {\r\n      const carName = item.carName ? item.carName.trim().toLowerCase() : '';\r\n      const referenceNumber = item.referenceNumber ? item.referenceNumber.trim().toLowerCase() : '';\r\n      const chassisNumber = item.chassisNumber ? item.chassisNumber.trim().toLowerCase() : '';\r\n      const stockStatus = item.stockStatus ? item.stockStatus.trim().toLowerCase() : '';\r\n      const fobPrice = item.fobPrice ? item.fobPrice.toString().trim().toLowerCase() : '';\r\n\r\n      return (\r\n        carName.includes(sanitizedSearchQuery) ||\r\n        referenceNumber.includes(sanitizedSearchQuery) ||\r\n        chassisNumber.includes(sanitizedSearchQuery) ||\r\n        stockStatus.includes(sanitizedSearchQuery) ||\r\n        fobPrice.includes(sanitizedSearchQuery)\r\n      );\r\n    });\r\n\r\n    return filteredResults;\r\n  }, [searchQuery, vehicleListData]);\r\n\r\n\r\n\r\n  const formatValueWithCommas = (value) => {\r\n    const numericValue = value.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    return formattedValue;\r\n  };\r\n\r\n  // Function to handle input changes for each item\r\n  const handleInputFobJpyChange = (text, index) => {\r\n    const formattedValue = formatValueWithCommas(text);\r\n\r\n    if (inputFobJpy.current[index]) {\r\n      inputFobJpy.current[index].value = formattedValue;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const fetchImageCounts = async () => {\r\n\r\n    // Extract and store the stockIDs in the state\r\n    const ids = filteredData.map(item => item.stockID);\r\n    setStockIDs(ids);\r\n\r\n    // Fetch image counts\r\n    const counts = await Promise.all(\r\n      ids.map(async stockID => {\r\n        const count = await getImageCountInFolder(stockID);\r\n        return { stockID, count };\r\n      })\r\n    );\r\n\r\n    // Create an object where stockID is the index value\r\n    const imageCountsObject = counts.reduce((acc, { stockID, count }) => {\r\n      acc[stockID] = count;\r\n      return acc;\r\n    }, {});\r\n\r\n    setImageCounts(imageCountsObject);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImageCounts();\r\n  }, []);\r\n\r\n  const getImageCountInFolder = async (folderPath) => {\r\n    try {\r\n      const folderRef = ref(storage, folderPath);\r\n      const listResult = await listAll(folderRef);\r\n\r\n      return listResult.items.length;\r\n    } catch (error) {\r\n      console.error('Error getting image count:', error);\r\n      return -1; // Handle the error accordingly\r\n    }\r\n  };\r\n\r\n\r\n  const handleTextChange = (text) => {\r\n    setSearchQuery(text);\r\n  };\r\n\r\n  const handleFobPriceHistoryOpen = async (item) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n    dispatch(setFobPriceHistoryModalVisible(true));\r\n    if (item.stockID) {\r\n      const docRef = doc(projectExtensionFirestore, 'VehicleProducts', item.stockID);\r\n      try {\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n          // Assuming you have an action to set the FOB history like setFobHistory\r\n          dispatch(setFobHistoryData(docSnap.data().fobHistory || []));\r\n          dispatch(setLoadingModalVisible(false));\r\n\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching document: \", error);\r\n      }\r\n    }\r\n    // globalFobPriceHistoryData = item.fobHistory ? item.fobHistory : [];\r\n    globalCurrentStockID = item.stockID ? item.stockID : '';\r\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n\r\n  }\r\n\r\n  const handleSaveFob = async (item, index,) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    toast.closeAll();\r\n    // if (item.fobPrice == fobValue || fobValue == '') {\r\n    //   dispatch(setLoadingModalVisible(false));\r\n\r\n    // }\r\n    // else {\r\n\r\n    const fobHistoryData = {\r\n      date: formattedTime,\r\n      fobPrice: fobValue,\r\n      changedBy: nameVariable.text,\r\n    };\r\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n    try {\r\n      await updateDoc(vehicleProductRef, {\r\n        fobPrice: fobValue,\r\n        fobHistory: arrayUnion(fobHistoryData)\r\n      });\r\n      const logData = {\r\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle FOB Price Updated'.toLowerCase(),\r\n          'Vehicle FOB Price'.toLowerCase(),\r\n          'Vehicle FOB'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'FOB Price Updated'.toLowerCase(),\r\n          'FOB Price'.toLowerCase(),\r\n          'FOB'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n      // console.log('FOB Price updated successfully');\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    // }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n\r\n  const handleUploadImagesModalOpen = (item) => {\r\n    dispatch(setUploadImagesModalVisible(true));\r\n    globalCurrentStockID = item.stockID;\r\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n    globalSelectedCarName = item.carName;\r\n\r\n  }\r\n\r\n  const handleViewImagesModalOpen = async (item) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n    try {\r\n      await getImages(item.stockID);\r\n      globalCurrentStockID = item.stockID;\r\n      globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n      globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n      dispatch(setLoadingModalVisible(false));\r\n      dispatch(setViewImagesModalVisible(true));\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n  }\r\n\r\n  const handleViewImagesModalClose = () => {\r\n    dispatch(setViewImagesModalVisible(false));\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = ``;\r\n    globalSelectedVehicleReferenceNumber = '';\r\n    globalSelectedCarName = '';\r\n    dispatch(setViewImagesData([]));\r\n  };\r\n\r\n  const getImages = useCallback(async (folderName) => {\r\n    try {\r\n\r\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\r\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n\r\n      const urls = await Promise.all(\r\n        imageRefs.items.map(async (itemRef) => {\r\n          const uri = await getDownloadURL(itemRef);\r\n          return { uri, fileName: itemRef.name };\r\n        })\r\n      );\r\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\r\n      urls.sort((a, b) => {\r\n        const fileNameA = parseInt(a.fileName);\r\n        const fileNameB = parseInt(b.fileName);\r\n        return fileNameA - fileNameB;\r\n      });\r\n\r\n      if (urls.length > 0) {\r\n        dispatch(setViewImagesData(urls));\r\n\r\n      }\r\n\r\n      else {\r\n        dispatch(setViewImagesData([]));\r\n      }\r\n\r\n      // console.log(urls);\r\n\r\n    } catch (error) {\r\n      // Handle any errors that may occur during the Firebase operations\r\n      console.error('Error getting image URLs:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const addStockStatusToVehicleProducts = async () => {\r\n    const vehicleProductsRef = collection(projectExtensionFirestore, \"VehicleProducts\");\r\n\r\n    try {\r\n      const querySnapshot = await getDocs(vehicleProductsRef);\r\n      querySnapshot.forEach(async (doc) => {\r\n        const data = doc.data();\r\n\r\n        // Check if the imageCount field does not exist\r\n        if (data.stockStatus === undefined) {\r\n          try {\r\n            // If the imageCount field doesn't exist, initialize it to 0\r\n            await updateDoc(doc.ref, {\r\n              stockStatus: ''\r\n            });\r\n            console.log(`stockStatus initialized to 0 for document ID: ${doc.id}`);\r\n          } catch (error) {\r\n            console.error('Error initializing stockStatus field:', error);\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error reading VehicleProducts collection:\", error);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const handleSearchEnter = () => {\r\n    // setSortField('dateAdded');\r\n    // setIsSortActive(false)\r\n    if (searchInputRef.current?.value !== '') {\r\n      setSearchText(searchInputRef.current.value.trim());\r\n      setSortField('dateAdded');\r\n      setIsSortActive(false);\r\n    }\r\n    else {\r\n      setSearchText('');\r\n      setSortField('dateAdded');\r\n      setIsSortActive(false)\r\n      if (searchText == '') {\r\n\r\n        searchData();\r\n\r\n      }\r\n\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {screenWidth >= 1360 ?\r\n        (\r\n          <View style={{ flex: 1, }}>\r\n            <View>\r\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                returnKeyType='search'\r\n                autoCapitalize='none'\r\n\r\n              />\r\n            </View>\r\n            <View\r\n              style={{\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-between',\r\n                borderBottomWidth: 1,\r\n                borderBottomColor: '#E4E4E7',\r\n                backgroundColor: '#0642F4',\r\n                padding: 2,\r\n                borderRadius: 5,\r\n              }}>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Ref #</Text>\r\n              </View>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Car Name</Text>\r\n              </View>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Chassis #</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('imageCount')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'imageCount' ? '#FBBC04' : 'white', }} bold underline>Images</Text>\r\n                </TouchableOpacity></View>\r\n\r\n\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('stockStatus')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'stockStatus' ? '#FBBC04' : 'white', }} bold underline>Stock Status</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('fobPrice')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'fobPrice' ? '#FBBC04' : 'white', }} bold underline>FOB Price</Text>\r\n                </TouchableOpacity></View>\r\n\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', alignSelf: 'center', }} bold>Operate</Text>\r\n              </View>\r\n            </View>\r\n            {vehicleListData.map((item, index) => (\r\n              <View\r\n                key={item.id}\r\n                style={{\r\n                  flex: 1,\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'space-between',\r\n                  alignItems: 'center',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#E4E4E7',\r\n                  backgroundColor: '#BFDBFE',\r\n                  paddingVertical: 10,\r\n                }}>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.referenceNumber}</Text>\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', }}>{item.carName} </Text>\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', }}>{item.chassisNumber}</Text>\r\n                </View>\r\n                <ImageCountComponent item={item} handleViewImagesModalOpen={handleViewImagesModalOpen} handleUploadImagesModalOpen={handleUploadImagesModalOpen} />\r\n                {/* <View style={{ flex: 1, flexDirection: 'row' }}>\r\n\r\n                  {item.imageCount > 0 ?\r\n                    (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n                      <Text underline>\r\n                        {item.imageCount ? item.imageCount : 0} image/s\r\n                      </Text>\r\n                    </TouchableOpacity>) :\r\n                    (<Text>\r\n                      {item.imageCount ? item.imageCount : 0} image/s\r\n                    </Text>)\r\n                  }\r\n\r\n\r\n                  <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n                    {item.imageCount > 0 ? null : (\r\n                      <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n                    )}\r\n                  </TouchableOpacity>\r\n                </View> */}\r\n                <View style={{ flex: 1, }}>\r\n                  <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\r\n                  {/* <Text style={{ width: '90%', }}>{item.stockStatus}</Text> */}\r\n                </View>\r\n\r\n                <View style={{ width: '90%', flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, }}>\r\n                  <TouchableOpacity\r\n                    onPress={() => handleFobPriceHistoryOpen(item)}\r\n                    style={{\r\n                      margin: 5,\r\n                      alignSelf: 'center',\r\n                    }}>\r\n                    {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n                    <FontAwesome name='clock-o' color='black' size={22} />\r\n                  </TouchableOpacity>\r\n                  <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\r\n                  {/* <TextInput\r\n                    ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n                    defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\r\n                    style={{ flex: 1, padding: 5, borderRadius: 5, width: '90%', }}\r\n                    key={item.id}\r\n                    onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\r\n                    onSubmitEditing={() => handleSaveFob(item, index)} /> */}\r\n\r\n                </View>\r\n                <View style={{ flexDirection: 'row', flex: 1, alignItems: 'center', justifyContent: 'center', }}>\r\n                  <SupplyChainsCosts data={item} />\r\n                  {/* <EditVehicle data={item} /> */}\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={{\r\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\r\n              alignSelf: 'center',\r\n            }}>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <TouchableOpacity\r\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                  onPress={handlePreviousPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n\r\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={handleNextPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n\r\n\r\n\r\n\r\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\r\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\r\n\r\n            {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n              <TouchableOpacity\r\n                onPress={addStockStatusToVehicleProducts}>\r\n                <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                  <FontAwesome name='save' size={40} color={'white'} />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View> */}\r\n\r\n          </View>\r\n        ) :\r\n\r\n\r\n\r\n        (\r\n          <View style={{ flex: 1, }}>\r\n            <View >\r\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '98%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', alignSelf: 'center', marginTop: 5, }}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                returnKeyType='search'\r\n                autoCapitalize='none'\r\n              />\r\n            </View>\r\n\r\n            {vehicleListData.map((item, index) => (\r\n              <View\r\n                key={item.id}\r\n                style={{\r\n                  flex: 1,\r\n                  flexDirection: 'column',\r\n                  borderWidth: 1,\r\n                  borderColor: '#E4E4E7',\r\n                  backgroundColor: '#BFDBFE',\r\n                  margin: 10,\r\n                }}>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Ref #</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.referenceNumber}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Car Name</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.carName} </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Chassis #</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.chassisNumber}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Images</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    {item.imageCount > 0 ?\r\n                      (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n                        <Text underline style={{ marginLeft: 3 }}>\r\n                          {item.imageCount ? item.imageCount : 0} image/s\r\n                        </Text>\r\n                      </TouchableOpacity>) :\r\n                      (<Text style={{ marginLeft: 3 }}>\r\n                        {item.imageCount ? item.imageCount : 0} image/s\r\n                      </Text>)\r\n                    }\r\n\r\n\r\n                    <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n                      {item.imageCount > 0 ? null : (\r\n                        <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n                      )}\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>Stock Status</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, paddingVertical: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\r\n                  </View>\r\n                </View>\r\n\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>FOB Price ¥</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <TouchableOpacity\r\n                      onPress={() => handleFobPriceHistoryOpen(item)}\r\n                      style={{\r\n                        margin: 5,\r\n                        alignSelf: 'center',\r\n                      }}>\r\n                      {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n                      <FontAwesome name='clock-o' color='black' size={22} />\r\n                    </TouchableOpacity>\r\n                    <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\r\n\r\n                    {/* <TextInput\r\n                      ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n                      defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\r\n                      style={{ width: '90%', borderRadius: 5, }}\r\n                      key={item.id}\r\n                      onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\r\n                      onSubmitEditing={() => handleSaveFob(item, index)} /> */}\r\n                    {/* <TouchableHighlight\r\n                      underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                      onPress={() => handleSaveFob(item, index)}\r\n                      style={{\r\n                        backgroundColor: '#16A34A',\r\n                        margin: 2,\r\n                        marginLeft: 2,\r\n                        alignSelf: 'center',\r\n                        borderRadius: 5,\r\n                      }}>\r\n                      <MaterialIcons name='update' color='white' size={22} />\r\n                    </TouchableHighlight> */}\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                  </View>\r\n                  <View style={{ flexDirection: 'row', flex: 1, margin: 5, }}>\r\n                    <SupplyChainsCosts data={item} />\r\n                    {/* <EditVehicle data={item} /> */}\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={{\r\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\r\n              alignSelf: 'center',\r\n            }}>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <TouchableOpacity\r\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                  onPress={handlePreviousPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n\r\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={handleNextPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n            <TouchableOpacity\r\n              onPress={addKeywordsToVehicleProducts}>\r\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                <MaterialIcons name='save' size={40} color={'white'} />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View> */}\r\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={addImageCountToVehicleProducts}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <FontAwesome name='dollar' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View> */}\r\n            </View>\r\n\r\n\r\n\r\n\r\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\r\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\r\n\r\n          </View>\r\n\r\n        )}\r\n\r\n\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function VehicleList() {\r\n  const [email, setEmail] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n  const [isMobileView, setIsMobileView] = useState(false);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n\r\n\r\n  const [typeOfAccount, setTypeOfAccount] = useState('');\r\n\r\n\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [name, setName] = useState(loginName);\r\n  const [time, setTime] = useState('');\r\n\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const handleWidthChange = ({ window }) => {\r\n  //     setWidthState(window.width);\r\n  //   };\r\n\r\n  //   Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleWidthChange);\r\n  //   };\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   reloadData();\r\n  // }, [reloadData]);\r\n\r\n\r\n  // useEffect(() => {\r\n  // }, [typeOfAccount]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n      if (!user) {\r\n        navigation.navigate(\"Login\")\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(projectControlAuth)\r\n          .then(() => {\r\n            navigation.navigate('Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(projectControlAuth)\r\n        .then(() => {\r\n          navigation.navigate('Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = projectControlAuth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n      listenForNameChange(documentId);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const listenForNameChange = (documentId) => {\r\n\r\n\r\n    // To stop listening for updates, you can call unsubscribe()\r\n    // unsubscribe();\r\n  };\r\n\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(projectControlAuth).then(() => {\r\n      navigation.navigate('Login');\r\n      setEmail('');\r\n      setName('');\r\n    }).catch(() => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   const handleScreenResize = () => {\r\n  //     const screenWidth = Dimensions.get('window').width;\r\n  //     setIsMobileView(screenWidth < 1200);\r\n  //   };\r\n\r\n  //   // Initial check on component mount\r\n  //   handleScreenResize();\r\n\r\n  //   // Listen for screen dimension changes\r\n  //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n  //   // Cleanup event listener on component unmount\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleScreenResize);\r\n  //   };\r\n  // }, []);\r\n\r\n\r\n  const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#7B9CFF'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  const SuccessModal = ({ isOpen, onClose, bodyText, headerText }) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Modal isOpen={isOpen} onClose={onClose} useRNModal>\r\n          <Modal.Content bgColor={'green.100'}>\r\n            <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n              <Text textAlign={'center'} color={'#102A43'} bold>\r\n                😊😎 Success! 😎😊\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'green.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'green.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'green.600'} bold>\r\n                  {headerText}\r\n                  {/* Vehicle Added! */}\r\n                </Text>\r\n                <Text color={'green.600'}>\r\n                  {bodyText}\r\n                  {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n                  Ok\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    // <NativeBaseProvider>\r\n    <>\r\n\r\n      <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#7b9cff'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={2}\r\n          borderBottomColor={'cyan.500'}\r\n        >\r\n\r\n          <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n\r\n            <FastImage\r\n              source={{\r\n                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image} />\r\n          </Box>\r\n\r\n          {screenWidth <= 960 && <MobileViewDrawer\r\n            selectedScreen={selectedScreen} />}\r\n\r\n\r\n          <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n            <FastImage\r\n              source={{\r\n                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image} />\r\n          </Box>\r\n          <NamePopover name={name} handleSignOut={handleSignOut} />\r\n\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\r\n          {/* Sidebar */}\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen} />\r\n\r\n          {/* Main Content */}\r\n          {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n          {/* Main Content Content */}\r\n\r\n\r\n          {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n          <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\r\n            <ScrollView style={{ flex: 1, }} keyboardShouldPersistTaps='always'>\r\n              <View style={{ flex: 1, }}>\r\n                <VehicleListTable />\r\n\r\n\r\n              </View>\r\n            </ScrollView>\r\n            <SCC_Modals />\r\n            <EditVehicleModal />\r\n            <FobPriceHistory />\r\n            {/* <SuccessModal /> */}\r\n\r\n          </View>\r\n\r\n\r\n          {/* </Box> */}\r\n\r\n          {/* </Box> */}\r\n        </View>\r\n\r\n      </View>\r\n      <LoadingModal />\r\n\r\n    </>\r\n\r\n\r\n\r\n\r\n\r\n    // </NativeBaseProvider>\r\n\r\n\r\n\r\n\r\n  );\r\n\r\n};","import { useState, useEffect } from 'react';\r\nimport { collection, query, orderBy, startAfter, limit, onSnapshot } from 'firebase/firestore';\r\nimport { useSelector } from 'react-redux';\r\nimport { setVehicleListData } from '../redux/store';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const UsePagination = (projectExtensionFirestore) => {\r\n    const dispatch = useDispatch();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    // const [data, setData] = useState([]);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const handleNextPage = () => {\r\n        setCurrentPage(currentPage + 1);\r\n    };\r\n\r\n    const handlePreviousPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                let q;\r\n                if (lastVisible) {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n                        orderBy('dateAdded', 'desc'),\r\n                        startAfter(lastVisible),\r\n                        limit(pageSize)\r\n                    );\r\n                } else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n                        orderBy('dateAdded', 'desc'),\r\n                        limit(pageSize)\r\n                    );\r\n                }\r\n\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const vehicleProductData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        vehicleProductData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n                    if (!snapshot.empty) {\r\n                        setLastVisible(snapshot.docs[snapshot.docs.length - 1]);\r\n                    }\r\n\r\n                    // setData(vehicleProductData);\r\n                    dispatch(setVehicleListData(vehicleProductData));\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data: ', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [projectExtensionFirestore, currentPage, pageSize]);\r\n\r\n    return { handleNextPage, handlePreviousPage };\r\n};","import { configureStore, createSlice, } from '@reduxjs/toolkit'\r\nimport { useEffect, useMemo } from 'react';\r\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where, orderBy, limit } from 'firebase/firestore';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../../crossFirebase\";\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSelector } from 'react-redux';\r\n\r\nlet makeDataVariable = [];\r\nlet email = '';\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\n\r\nconst selectedFileUrlSlice = createSlice({\r\n  name: 'selectedFileUrl',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedFileUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst pdfViewerModalVisibleSlice = createSlice({\r\n  name: 'pdfViewerModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setPdfViewerModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedCustomerDataSlice = createSlice({\r\n  name: 'selectedCustomerData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedCustomerData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst previewInvoiceVisibleSlice = createSlice({\r\n  name: 'previewInvoiceVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setPreviewInvoiceVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst transactionModalVisibleSlice = createSlice({\r\n  name: 'transactionModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setTransactionModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst invoiceDataSlice = createSlice({\r\n  name: 'invoiceData',\r\n  initialState: {},\r\n  reducers: {\r\n    setInvoiceData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst deleteMessageTemplateVisibleSlice = createSlice({\r\n  name: 'deleteMessageTemplateVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeleteMessageTemplateVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loadMoreMessagesLoadingSlice = createSlice({\r\n  name: 'loadMoreMessagesLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadMoreMessagesLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst noMoreMessagesDataSlice = createSlice({\r\n  name: 'noMoreMessagesData',\r\n  initialState: false,\r\n  reducers: {\r\n    setNoMoreMessagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst readByListModalVisibleSlice = createSlice({\r\n  name: 'readByListModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setReadByListModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedChatDataSlice = createSlice({\r\n  name: 'selectedChatData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedChatData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst chatMessageBoxLoadingSlice = createSlice({\r\n  name: 'chatMessageBoxLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setChatMessageBoxLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatMessagesDataSlice = createSlice({\r\n  name: 'chatMessagesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setChatMessagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst chatListSearchTextSlice = createSlice({\r\n  name: 'chatListSearchText',\r\n  initialState: '',\r\n  reducers: {\r\n    setChatListSearchText: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst activeChatIdSlice = createSlice({\r\n  name: 'activeChatId',\r\n  initialState: '',\r\n  reducers: {\r\n    setActiveChatId: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loadMoreLoadingSlice = createSlice({\r\n  name: 'loadMoreLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadMoreLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst noMoreDataSlice = createSlice({\r\n  name: 'noMoreData',\r\n  initialState: false,\r\n  reducers: {\r\n    setNoMoreData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListLastVisibleSlice = createSlice({\r\n  name: 'chatListLastVisible',\r\n  initialState: null,\r\n  reducers: {\r\n    setChatListLastVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListDataSlice = createSlice({\r\n  name: 'chatListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setChatListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListImageUrlSlice = createSlice({\r\n  name: 'chatListImageUrl',\r\n  initialState: null,\r\n  reducers: {\r\n    setChatListImageUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\n\r\n\r\n\r\n// =============================== Freight ========================================\r\n\r\n\r\nconst countryPortsDataSlice = createSlice({\r\n  name: 'countryPortsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setCountryPortsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst addPortsForCountriesModalVisibleSlice = createSlice({\r\n  name: 'addPortsForCountriesModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddPortsForCountriesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst methodDataSlice = createSlice({\r\n  name: 'methodData',\r\n  initialState: [],\r\n  reducers: {\r\n    setMethodData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst inspectionIsRequiredDataSlice = createSlice({\r\n  name: 'inspectionIsRequiredData',\r\n  initialState: [],\r\n  reducers: {\r\n    setInspectionIsRequiredData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst inspectionNameDataSlice = createSlice({\r\n  name: 'inspectionNameData',\r\n  initialState: [],\r\n  reducers: {\r\n    setInspectionNameData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst deletePortModalVisibleSlice = createSlice({\r\n  name: 'deletePortModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeletePortModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst deleteCountryModalVisibleSlice = createSlice({\r\n  name: 'deleteCountryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeleteCountryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst addPortModalVisibleSlice = createSlice({\r\n  name: 'addPortModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddPortModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst addCountryModalVisibleSlice = createSlice({\r\n  name: 'addCountryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddCountryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst selectedButtonSlice = createSlice({\r\n  name: 'selectedButton',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedButton: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst freightCountriesDataSlice = createSlice({\r\n  name: 'freightCountriesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFreightCountriesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst freightPortsDataSlice = createSlice({\r\n  name: 'freightPortsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFreightPortsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\nconst fobHistoryDataSlice = createSlice({\r\n  name: 'fobHistoryData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFobHistoryData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst inputFobSlice = createSlice({\r\n  name: 'inputFob',\r\n  initialState: '',\r\n  reducers: {\r\n    setInputFob: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst fobPriceHistoryModalVisibleSlice = createSlice({\r\n  name: 'fobPriceHistoryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setFobPriceHistoryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst editVehicleModalVisibleSlice = createSlice({\r\n  name: 'editVehicleModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setEditVehicleModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst vehicleListDataSlice = createSlice({\r\n  name: 'vehicleListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setVehicleListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst addVehicleListDataSlice = createSlice({\r\n  name: 'addVehicleListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setAddVehicleListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst supplyChainsCostsModalVisibleSlice = createSlice({\r\n  name: 'supplyChainsCostsModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setSupplyChainsCostsModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst uploadImagesModalVisibleSlice = createSlice({\r\n  name: 'uploadImagesModalVisibleVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setUploadImagesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst vehicleListSupplyChainsCostsDataSlice = createSlice({\r\n  name: 'vehicleListSupplyChainsCostsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setVehicleListSupplyChainsCostsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst uploadImagesButtonLoadingSlice = createSlice({\r\n  name: 'uploadImagesButtonLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setUploadImagesButtonLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst viewImagesModalVisibleSlice = createSlice({\r\n  name: 'viewImagesModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setViewImagesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst viewImagesDataSlice = createSlice({\r\n  name: 'viewImagesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setViewImagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst lastVisibleSlice = createSlice({\r\n  name: 'lastVisible',\r\n  initialState: '',\r\n  reducers: {\r\n    setLastVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Account List ========================================\r\nconst accountListDataSlice = createSlice({\r\n  name: 'accountListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setAccountListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\n// =============================== Account List ========================================\r\n\r\n// =============================== Logs ======================================== \r\n\r\n\r\nconst logsDataSlice = createSlice({\r\n  name: 'logsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setLogsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// =============================== Logs ======================================== \r\n\r\n\r\nconst stockStatusDataSlice = createSlice({\r\n  name: 'stockStatusData',\r\n  initialState: [\r\n    'On-Sale',\r\n    'Reserved',\r\n    'Sold',\r\n    'Hidden',],\r\n  reducers: {\r\n    setStockStatusData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isSuccessModalOpenSlice = createSlice({\r\n  name: 'isSuccessModalOpen',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsSuccessModalOpen: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isUpdateSuccessModalOpenSlice = createSlice({\r\n  name: 'isUpdateSuccessModalOpen',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsUpdateSuccessModalOpen: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loadingModalVisibleSlice = createSlice({\r\n  name: 'loadingModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadingModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedExpenseNameSlice = createSlice({\r\n  name: 'selectedExpenseName',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedExpenseName: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedPaidToSlice = createSlice({\r\n  name: 'selectedPaidTo',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedPaidTo: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst supplyChainsCostsDataSlice = createSlice({\r\n  name: 'supplyChainsCostsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSupplyChainsCostsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst currentDateSlice = createSlice({\r\n  name: 'currentDate',\r\n  initialState: '',\r\n  reducers: {\r\n    setCurrentDate: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loginEmailSlice = createSlice({\r\n  name: 'loginEmail',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoginEmail: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loginNameSlice = createSlice({\r\n  name: 'loginName',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoginName: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst modalDeleteImagesVisibleSlice = createSlice({\r\n  name: 'modalDeleteImages',\r\n  initialState: false,\r\n  reducers: {\r\n    setModalDeleteImagesVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst addAnotherImagesSlice = createSlice({\r\n  name: 'addAnotherImagesVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddAnotherImages: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isAddPhotoVisibleSlice = createSlice({\r\n  name: 'isAddPhotoVisible',\r\n  initialState: true,\r\n  reducers: {\r\n    setIsAddPhotoVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst jpyToUsdSlice = createSlice({\r\n  name: 'jpyToUsd',\r\n  initialState: '',\r\n  reducers: {\r\n    setJpyToUsd: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst usdToJpySlice = createSlice({\r\n  name: 'usdToJpy',\r\n  initialState: '',\r\n  reducers: {\r\n    setUsdToJpy: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst modelDataSlice = createSlice({\r\n  name: 'modelData',\r\n  initialState: [],\r\n  reducers: {\r\n    setModelData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst makeDataSlice = createSlice({\r\n  name: 'makeData',\r\n  initialState: makeDataVariable,\r\n  reducers: {\r\n    setMakeData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst expenseNameDataSlice = createSlice({\r\n  name: 'expenseName',\r\n  initialState: [],\r\n  reducers: {\r\n    setExpenseNameData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst paidToDataSlice = createSlice({\r\n  name: 'paidTo',\r\n  initialState: [],\r\n  reducers: {\r\n    setPaidToData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedMakeSlice = createSlice({\r\n  name: 'selectedMake',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedMake: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isLoadingSlice = createSlice({\r\n  name: 'isLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedImagesSlice = createSlice({\r\n  name: 'selectedImages',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedImages: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst portDataSlice = createSlice({\r\n  name: 'portData',\r\n  initialState: [],\r\n  reducers: {\r\n    setPortData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst transmissionDataSlice = createSlice({\r\n  name: 'transmissionData',\r\n  initialState: [],\r\n  reducers: {\r\n    setTransmissionData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst fuelDataSlice = createSlice({\r\n  name: 'fuelData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFuelData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst buyerDataSlice = createSlice({\r\n  name: 'buyerData',\r\n  initialState: [],\r\n  reducers: {\r\n    setBuyerData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst salesDataSlice = createSlice({\r\n  name: 'salesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSalesData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst driveTypeDataSlice = createSlice({\r\n  name: 'driveTypeData',\r\n  initialState: [],\r\n  reducers: {\r\n    setDriveTypeData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst bodyTypeDataSlice = createSlice({\r\n  name: 'bodyTypeData',\r\n  initialState: [],\r\n  reducers: {\r\n    setBodyTypeData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst exteriorColorDataSlice = createSlice({\r\n  name: 'exteriorColorData',\r\n  initialState: [],\r\n  reducers: {\r\n    setExteriorColorData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst currentYearSlice = createSlice({\r\n  name: 'currentYear',\r\n  initialState: '',\r\n  reducers: {\r\n    setCurrentYear: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n\r\nconst deleteImageVisibleSlice = createSlice({\r\n  name: 'deleteImageVisible',\r\n  initialState: true,\r\n  reducers: {\r\n    setDeleteImageVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n});\r\n\r\n// =============================== Chat Messages ========================================\r\nexport const { setSelectedFileUrl } = selectedFileUrlSlice.actions\r\nexport const { setPdfViewerModalVisible } = pdfViewerModalVisibleSlice.actions\r\nexport const { setSelectedCustomerData } = selectedCustomerDataSlice.actions\r\nexport const { setPreviewInvoiceVisible } = previewInvoiceVisibleSlice.actions\r\nexport const { setInvoiceData } = invoiceDataSlice.actions\r\nexport const { setTransactionModalVisible } = transactionModalVisibleSlice.actions\r\nexport const { setDeleteMessageTemplateVisible } = deleteMessageTemplateVisibleSlice.actions\r\nexport const { setLoadMoreMessagesLoading } = loadMoreMessagesLoadingSlice.actions\r\nexport const { setNoMoreMessagesData } = noMoreMessagesDataSlice.actions\r\nexport const { setReadByListModalVisible } = readByListModalVisibleSlice.actions\r\nexport const { setSelectedChatData } = selectedChatDataSlice.actions\r\nexport const { setChatMessageBoxLoading } = chatMessageBoxLoadingSlice.actions\r\nexport const { setChatMessagesData } = chatMessagesDataSlice.actions\r\nexport const { setActiveChatId } = activeChatIdSlice.actions\r\nexport const { setChatListSearchText } = chatListSearchTextSlice.actions\r\nexport const { setLoadMoreLoading } = loadMoreLoadingSlice.actions\r\nexport const { setNoMoreData } = noMoreDataSlice.actions\r\nexport const { setChatListLastVisible } = chatListLastVisibleSlice.actions\r\nexport const { setChatListData } = chatListDataSlice.actions\r\nexport const { setChatListImageUrl } = chatListImageUrlSlice.actions\r\n// =============================== Chat Messages ========================================\r\n\r\n// =============================== Freight ========================================\r\nexport const { setDeletePortModalVisible } = deletePortModalVisibleSlice.actions\r\nexport const { setDeleteCountryModalVisible } = deleteCountryModalVisibleSlice.actions\r\nexport const { setCountryPortsData } = countryPortsDataSlice.actions\r\nexport const { setAddPortsForCountriesModalVisible } = addPortsForCountriesModalVisibleSlice.actions\r\nexport const { setInspectionIsRequiredData } = inspectionIsRequiredDataSlice.actions\r\nexport const { setMethodData } = methodDataSlice.actions\r\nexport const { setInspectionNameData } = inspectionNameDataSlice.actions\r\nexport const { setSelectedButton } = selectedButtonSlice.actions\r\nexport const { setAddCountryModalVisible } = addCountryModalVisibleSlice.actions\r\nexport const { setAddPortModalVisible } = addPortModalVisibleSlice.actions\r\nexport const { setFreightPortsData } = freightPortsDataSlice.actions\r\nexport const { setFreightCountriesData } = freightCountriesDataSlice.actions\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Vehicle List ========================================\r\nexport const { setInputFob } = inputFobSlice.actions\r\nexport const { setFobHistoryData } = fobHistoryDataSlice.actions\r\nexport const { setFobPriceHistoryModalVisible } = fobPriceHistoryModalVisibleSlice.actions\r\nexport const { setEditVehicleModalVisible } = editVehicleModalVisibleSlice.actions\r\nexport const { setVehicleListData } = vehicleListDataSlice.actions\r\nexport const { setAddVehicleListData } = addVehicleListDataSlice.actions\r\nexport const { setSupplyChainsCostsModalVisible } = supplyChainsCostsModalVisibleSlice.actions\r\nexport const { setVehicleListSupplyChainsCostsData } = vehicleListSupplyChainsCostsDataSlice.actions\r\nexport const { setUploadImagesModalVisible } = uploadImagesModalVisibleSlice.actions\r\nexport const { setUploadImagesButtonLoading } = uploadImagesButtonLoadingSlice.actions\r\nexport const { setViewImagesModalVisible } = viewImagesModalVisibleSlice.actions\r\nexport const { setViewImagesData } = viewImagesDataSlice.actions\r\nexport const { setLastVisible } = lastVisibleSlice.actions\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Account List ========================================\r\nexport const { setAccountListData } = accountListDataSlice.actions\r\n\r\n// =============================== Account List ========================================\r\n\r\n// =============================== Logs ======================================== \r\nexport const { setLogsData } = logsDataSlice.actions\r\n// =============================== Logs ======================================== \r\n\r\nexport const { setStockStatusData } = stockStatusDataSlice.actions\r\nexport const { setIsSuccessModalOpen } = isSuccessModalOpenSlice.actions\r\nexport const { setIsUpdateSuccessModalOpen } = isUpdateSuccessModalOpenSlice.actions\r\nexport const { setLoadingModalVisible } = loadingModalVisibleSlice.actions\r\nexport const { setSelectedPaidTo } = selectedPaidToSlice.actions\r\nexport const { setSelectedExpenseName } = selectedExpenseNameSlice.actions\r\nexport const { setSupplyChainsCostsData } = supplyChainsCostsDataSlice.actions\r\nexport const { setCurrentDate } = currentDateSlice.actions\r\nexport const { setPaidToData } = paidToDataSlice.actions\r\nexport const { setDeleteImageVisible } = deleteImageVisibleSlice.actions\r\nexport const { setExpenseNameData } = expenseNameDataSlice.actions\r\nexport const { setLoginEmail } = loginEmailSlice.actions\r\nexport const { setLoginName } = loginNameSlice.actions\r\nexport const { setIsAddPhotoVisible } = isAddPhotoVisibleSlice.actions\r\nexport const { setAddAnotherImages } = addAnotherImagesSlice.actions\r\nexport const { setModalDeleteImagesVisible } = modalDeleteImagesVisibleSlice.actions\r\nexport const { setMakeData } = makeDataSlice.actions\r\nexport const { setSelectedMake } = selectedMakeSlice.actions\r\nexport const { setIsLoading } = isLoadingSlice.actions\r\nexport const { setSelectedImages } = selectedImagesSlice.actions\r\nexport const { setPortData } = portDataSlice.actions\r\nexport const { setTransmissionData } = transmissionDataSlice.actions;\r\nexport const { setFuelData } = fuelDataSlice.actions;\r\nexport const { setBuyerData } = buyerDataSlice.actions;\r\nexport const { setSalesData } = salesDataSlice.actions;\r\nexport const { setDriveTypeData } = driveTypeDataSlice.actions;\r\nexport const { setBodyTypeData } = bodyTypeDataSlice.actions;\r\nexport const { setExteriorColorData } = exteriorColorDataSlice.actions;\r\nexport const { setJpyToUsd } = jpyToUsdSlice.actions;\r\nexport const { setUsdToJpy } = usdToJpySlice.actions;\r\nexport const { setCurrentYear } = currentYearSlice.actions;\r\nexport const { setModelData } = modelDataSlice.actions\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n\r\n    // =============================== Chat Messages ========================================    \r\n    selectedFileUrl: selectedFileUrlSlice.reducer,\r\n    pdfViewerModalVisible: pdfViewerModalVisibleSlice.reducer,\r\n    selectedCustomerData: selectedCustomerDataSlice.reducer,\r\n    previewInvoiceVisible: previewInvoiceVisibleSlice.reducer,\r\n    invoiceData: invoiceDataSlice.reducer,\r\n    transactionModalVisible: transactionModalVisibleSlice.reducer,\r\n    deleteMessageTemplateVisible: deleteMessageTemplateVisibleSlice.reducer,\r\n    loadMoreMessagesLoading: loadMoreMessagesLoadingSlice.reducer,\r\n    noMoreMessagesData: noMoreMessagesDataSlice.reducer,\r\n    readByListModalVisible: readByListModalVisibleSlice.reducer,\r\n    selectedChatData: selectedChatDataSlice.reducer,\r\n    chatMessageBoxLoading: chatMessageBoxLoadingSlice.reducer,\r\n    chatMessagesData: chatMessagesDataSlice.reducer,\r\n    chatListSearchText: chatListSearchTextSlice.reducer,\r\n    activeChatId: activeChatIdSlice.reducer,\r\n    loadMoreLoading: loadMoreLoadingSlice.reducer,\r\n    noMoreData: noMoreDataSlice.reducer,\r\n    chatListLastVisible: chatListLastVisibleSlice.reducer,\r\n    chatListData: chatListDataSlice.reducer,\r\n    chatListImageUrl: chatListImageUrlSlice.reducer,\r\n    // =============================== Chat Messages ======================================== \r\n\r\n    // =============================== Freight ======================================== \r\n    deletePortModalVisible: deletePortModalVisibleSlice.reducer,\r\n    deleteCountryModalVisible: deleteCountryModalVisibleSlice.reducer,\r\n    countryPortsData: countryPortsDataSlice.reducer,\r\n    addPortsForCountriesModalVisible: addPortsForCountriesModalVisibleSlice.reducer,\r\n    inspectionIsRequiredData: inspectionIsRequiredDataSlice.reducer,\r\n    methodData: methodDataSlice.reducer,\r\n    freightPortsData: freightPortsDataSlice.reducer,\r\n    inspectionNameData: inspectionNameDataSlice.reducer,\r\n    addCountryModalVisible: addCountryModalVisibleSlice.reducer,\r\n    addPortModalVisible: addPortModalVisibleSlice.reducer,\r\n    freightCountriesData: freightCountriesDataSlice.reducer,\r\n    selectedButton: selectedButtonSlice.reducer,\r\n    // =============================== Freight ========================================\r\n\r\n    // =============================== Vehicle List ========================================\r\n    inputFob: inputFobSlice.reducer,\r\n    fobHistoryData: fobHistoryDataSlice.reducer,\r\n    fobPriceHistoryModalVisible: fobPriceHistoryModalVisibleSlice.reducer,\r\n    editVehicleModalVisible: editVehicleModalVisibleSlice.reducer,\r\n    vehicleListData: vehicleListDataSlice.reducer,\r\n    addVehicleListData: addVehicleListDataSlice.reducer,\r\n    supplyChainsCostsModalVisible: supplyChainsCostsModalVisibleSlice.reducer,\r\n    uploadImagesModalVisible: uploadImagesModalVisibleSlice.reducer,\r\n    uploadImagesButtonLoading: uploadImagesButtonLoadingSlice.reducer,\r\n    viewImagesModalVisible: viewImagesModalVisibleSlice.reducer,\r\n    viewImagesData: viewImagesDataSlice.reducer,\r\n    lastVisible: lastVisibleSlice.reducer,\r\n    // =============================== Vehicle List ========================================\r\n\r\n\r\n    // =============================== Account List ========================================\r\n    accountListData: accountListDataSlice.reducer,\r\n    // =============================== Account List ========================================\r\n\r\n\r\n    // =============================== Logs ======================================== \r\n    logsData: logsDataSlice.reducer,\r\n    // =============================== Logs ======================================== \r\n    stockStatusData: stockStatusDataSlice.reducer,\r\n    isUpdateSuccessModalOpen: isUpdateSuccessModalOpenSlice.reducer,\r\n    loadingModalVisible: loadingModalVisibleSlice.reducer,\r\n    selectedPaidTo: selectedPaidToSlice.reducer,\r\n    selectedExpenseName: selectedExpenseNameSlice.reducer,\r\n    supplyChainsCostsData: supplyChainsCostsDataSlice.reducer,\r\n    vehicleListSupplyChainsCostsData: vehicleListSupplyChainsCostsDataSlice.reducer,\r\n    currentDate: currentDateSlice.reducer,\r\n    paidToData: paidToDataSlice.reducer,\r\n    expenseNameData: expenseNameDataSlice.reducer,\r\n    modelData: modelDataSlice.reducer,\r\n    makeData: makeDataSlice.reducer,\r\n    selectedMake: selectedMakeSlice.reducer,\r\n    isLoading: isLoadingSlice.reducer,\r\n    selectedImages: selectedImagesSlice.reducer,\r\n    portData: portDataSlice.reducer,\r\n    transmissionData: transmissionDataSlice.reducer,\r\n    fuelData: fuelDataSlice.reducer,\r\n    buyerData: buyerDataSlice.reducer,\r\n    salesData: salesDataSlice.reducer,\r\n    driveTypeData: driveTypeDataSlice.reducer,\r\n    bodyTypeData: bodyTypeDataSlice.reducer,\r\n    exteriorColorData: exteriorColorDataSlice.reducer,\r\n    jpyToUsd: jpyToUsdSlice.reducer,\r\n    usdToJpy: usdToJpySlice.reducer,\r\n    currentYear: currentYearSlice.reducer,\r\n    isAddPhotoVisible: isAddPhotoVisibleSlice.reducer,\r\n    addAnotherImages: addAnotherImagesSlice.reducer,\r\n    modalDeleteImagesVisible: modalDeleteImagesVisibleSlice.reducer,\r\n    loginName: loginNameSlice.reducer,\r\n    loginEmail: loginEmailSlice.reducer,\r\n    deleteImageVisible: deleteImageVisibleSlice.reducer,\r\n  },\r\n\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: ['chatMessagesData/setChatMessagesData'],\r\n        ignoredPaths: ['chatMessagesData.somePathToTimestamp'],\r\n      },\r\n    }),\r\n});\r\n\r\n\r\nexport const fetchCurrency = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(projectControlFirestore, 'currency', 'currency');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const jpyToUsd = snapshot.data()?.jpyToUsd || [];\r\n        const usdToJpy = snapshot.data()?.usdToJpy || [];\r\n        dispatch(setJpyToUsd(jpyToUsd));\r\n        dispatch(setUsdToJpy(usdToJpy));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchExpenseNameData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'ExpenseName'), 'ExpenseName');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const expenseNameData = snapshot.data()?.expenseName || [];\r\n        dispatch(setExpenseNameData(expenseNameData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const fetchPaidToData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'PaidTo'), 'PaidTo');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const paidToData = snapshot.data()?.paidTo || [];\r\n        dispatch(setPaidToData(paidToData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const fetchMakeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Make'), 'Make');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const makeData = snapshot.data()?.make || [];\r\n        dispatch(setMakeData(makeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPortData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Port'), 'Port');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const portData = snapshot.data()?.port || [];\r\n        dispatch(setPortData(portData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// Dispatch the fetchMakeData action when your app starts or as needed\r\n\r\nexport const fetchTransmissionData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Transmission'), 'Transmission');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const transmissionData = snapshot.data()?.transmission || [];\r\n        dispatch(setTransmissionData(transmissionData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const fetchFuelData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Fuel'), 'Fuel');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const fuelData = snapshot.data()?.fuel || [];\r\n        dispatch(setFuelData(fuelData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBuyerData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Buyer'), 'Buyer');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const buyerData = snapshot.data()?.buyer || [];\r\n        dispatch(setBuyerData(buyerData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchSalesData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Sales'), 'Sales');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const salesData = snapshot.data()?.sales || [];\r\n        dispatch(setSalesData(salesData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchDriveTypeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'DriveType'), 'DriveType');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const driveTypeData = snapshot.data()?.driveType || [];\r\n        dispatch(setDriveTypeData(driveTypeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBodyTypeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'BodyType'), 'BodyType');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const bodyTypeData = snapshot.data()?.bodyType || [];\r\n        dispatch(setBodyTypeData(bodyTypeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchExteriorColorData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'ExteriorColor'), 'ExteriorColor');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const exteriorColorData = snapshot.data()?.exteriorColor || [];\r\n        dispatch(setExteriorColorData(exteriorColorData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchYear = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY');\r\n      dispatch(setCurrentYear(formattedTime));\r\n    } catch (error) {\r\n      console.error('Error fetching time:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchCurrentDate = () => {\r\n\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY-MM-DD');\r\n      dispatch(setCurrentDate(formattedTime));\r\n    } catch (error) {\r\n      console.error('Error fetching time:', error);\r\n    }\r\n  };\r\n};\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n\r\nexport const fetchVehicleListData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const queryRef = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n        const vehicleProductData = [];\r\n        snapshot.forEach((doc) => {\r\n          vehicleProductData.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(setVehicleListData(vehicleProductData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Logs ========================================\r\n// export const fetchLogsData = () => {\r\n//   return async (dispatch) => {\r\n//     try {\r\n\r\n//       const queryRef = query(\r\n//         collection(projectControlFirestore, 'logs'),\r\n//         orderBy('timestamp', 'desc'),\r\n//         limit(10)\r\n//       );\r\n\r\n//       const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n//         const logsDatabaseData = [];\r\n//         snapshot.forEach((doc) => {\r\n//           logsDatabaseData.push({\r\n//             id: doc.id,\r\n//             ...doc.data(),\r\n//           });\r\n//         });\r\n//         dispatch(setLogsData(logsDatabaseData));\r\n//       });\r\n\r\n//       // Return the unsubscribe function to stop listening when necessary\r\n//       return unsubscribe;\r\n//     } catch (error) {\r\n//       // Handle errors here\r\n//       console.error('Error fetching data from Firebase:', error);\r\n//     }\r\n//   };\r\n// };\r\n\r\n// =============================== Logs ========================================\r\n\r\n// =============================== Freight ========================================\r\n\r\nexport const fetchMethodData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'MethodDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const methodData = snapshot.data()?.methodData || [];\r\n        dispatch(setMethodData(methodData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchInspectionIsRequiredData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionIsRequiredDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const inspectionIsRequiredData = snapshot.data()?.inspectionIsRequiredData || [];\r\n        dispatch(setInspectionIsRequiredData(inspectionIsRequiredData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchInspectionNameData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionNameDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const inspectionNameData = snapshot.data()?.inspectionNameData || [];\r\n        dispatch(setInspectionNameData(inspectionNameData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\nexport const fetchChatListData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const queryRef = query(\r\n        collection(projectExtensionFirestore, 'chats'),\r\n        orderBy('lastMessageDate', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n        const chatsData = [];\r\n        snapshot.forEach((doc) => {\r\n          chatsData.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(setChatListData(chatsData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// =============================== Chat Messages ========================================\r\n// To stop listening for updates, you can call unsubscribe()\r\n// unsubscribe();\r\n\r\nstore.dispatch(fetchCurrentDate());\r\nstore.dispatch(fetchPaidToData());\r\nstore.dispatch(fetchExpenseNameData());\r\nstore.dispatch(fetchMakeData());\r\nstore.dispatch(fetchPortData());\r\nstore.dispatch(fetchTransmissionData());\r\nstore.dispatch(fetchFuelData());\r\nstore.dispatch(fetchBuyerData());\r\nstore.dispatch(fetchSalesData());\r\nstore.dispatch(fetchDriveTypeData());\r\nstore.dispatch(fetchBodyTypeData());\r\nstore.dispatch(fetchExteriorColorData());\r\nstore.dispatch(fetchCurrency());\r\nstore.dispatch(fetchYear());\r\n\r\n\r\n\r\n// store.dispatch(fetchVehicleListData());\r\n\r\nstore.dispatch(fetchMethodData());\r\nstore.dispatch(fetchInspectionIsRequiredData());\r\nstore.dispatch(fetchInspectionNameData());\r\n\r\n// store.dispatch(fetchChatListData());\r\n\r\n\r\nexport default store","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport {\r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID\r\n} from '@env';\r\n\r\nimport {\r\n  REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID\r\n} from '@env';\r\n\r\n// Configuration for Firebase project 1\r\nconst firebaseConfigControl = {\r\n  apiKey: REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain: REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL: REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId: REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket: REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId: REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId: REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// Configuration for Firebase project 2\r\nconst firebaseConfigExtension = {\r\n  // Replace with your project 2 configuration\r\n  apiKey: REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\r\n  authDomain: REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\r\n  projectId: REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\r\n  storageBucket: REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\r\n  appId: REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\r\n  measurementId: REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID,\r\n\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Initialize Firebase for project 1\r\nexport const projectControlFirebase = initializeApp(firebaseConfigControl);\r\nexport const projectControlAuth = getAuth(projectControlFirebase);\r\nexport const projectControlFirestore = getFirestore(projectControlFirebase);\r\n\r\n// Initialize Firebase for project 2\r\nexport const projectExtensionFirebase = initializeApp(firebaseConfigExtension, 'projectExtension');\r\nexport const projectExtensionAuth = getAuth(projectExtensionFirebase);\r\nexport const projectExtensionFirestore = getFirestore(projectExtensionFirebase);\r\n","\r\n\r\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc, getDocs, orderBy, deleteDoc, startAfter, limit } from 'firebase/firestore';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { \r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nconst firebaseControlConfig = {\r\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n  };\r\n\r\n// Initialize Firebase\r\n\r\nconst app = initializeApp(firebaseControlConfig);\r\nconst analytics = getAnalytics(app);\r\nconst auth = getAuth(app);\r\nrequire('firebase/auth');\r\n// export const auth = app.auth()\r\nconst db = getFirestore (app);\r\n// export default app\r\nexport {app, db, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, getAuth, signInWithEmailAndPassword, updateDoc, getDocs, orderBy, deleteDoc, limit, startAfter };","\r\n\r\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc } from 'firebase/firestore';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { \r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nconst firebaseControlCreateUserConfig = {\r\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n  };\r\n\r\n// Initialize Firebase\r\n\r\n\r\nrequire('firebase/auth');\r\n// export const auth = app.auth()\r\nconst firebaseAppForCreateUser = initializeApp(firebaseControlCreateUserConfig, 'Secondary' );\r\nconst authForCreateUser = getAuth(firebaseAppForCreateUser);\r\n// export default app\r\nexport {authForCreateUser};","// extracted by mini-css-extract-plugin\nexport default {};","var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 44707,\n\t\"./bs.js\": 44707,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 2553,\n\t\"./es-mx.js\": 2553,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"73\":\"b11dd4bc\",\"160\":\"2db21d5f\",\"162\":\"da88e0a0\",\"245\":\"704124dc\",\"379\":\"c10ffe6d\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/samplecontrolhub/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [446], () => (__webpack_require__(19386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_Dimensions$get","Dimensions","get","width","height","LoginPage","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","_useState5","_useState6","password","setPassword","_React$useState","React","_React$useState2","show","setShow","_React$useState3","_React$useState4","errorShow","setErrorShow","_React$useState5","_React$useState6","_React$useState7","_React$useState8","errorTitle","setErrorTitle","_React$useState9","_React$useState10","errorMessage","setErrorMessage","logo","require","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","isDisabled","setIsDisabled","navigation","useNavigation","useEffect","auth","onAuthStateChanged","user","replace","ErrorLoginShow","_jsx","Box","w","alignItems","children","PresenceTransition","visible","initial","opacity","scale","animate","transition","duration","Alert","maxW","status","_jsxs","VStack","space","flexShrink","HStack","justifyContent","Icon","Text","fontSize","fontWeight","_dark","color","pl","_text","updateFieldData","_ref","_asyncToGenerator","documentId","fieldName","newValue","userRef","doc","db","updateDoc","_defineProperty","error","console","_x","_x2","_x3","apply","arguments","handleSignIn","setTimeout","signInWithEmailAndPassword","trim","then","re","navigate","catch","errorCode","code","message","log","length","NativeBaseProvider","bgColor","h","Center","flex","px","Image","source","uri","resizeMode","alt","style","Stack","Input","base","md","sm","value","onSubmitEditing","onChangeText","text","InputLeftElement","as","MaterialIcons","name","size","ml","placeholder","placeholderTextColor","type","InputRightElement","Pressable","onPress","mr","Button","_hover","_pressed","_focus","borderWidth","borderColor","disabled","Spinner","StyleSheet","create","container","paddingHorizontal","input","borderRadius","marginBottom","loginButton","backgroundColor","paddingVertical","loginButtonText","textAlign","Loading","loadingContainer","props","LazyComponent","lazy","importFunc","Suspense","fallback","_objectSpread","StackNavigator","createNativeStackNavigator","getFirestore","DevAdmin","setDrawerVisible","createDrawerNavigator","addListener","Navigator","screenOptions","headerShown","Screen","component","LazyScreen","SuperAdmin","signOut","firestore","getEmailOfCurrentUser","currentUser","Checkpoint","dispatch","useDispatch","useSelector","state","loginEmail","loginName","setType","handleDocumentChange","snapshot","exists","data","active","unsubscribe","_auth$currentUser","userId","onSnapshot","subscribeToFieldChange","currentUserEmail","getFieldValueByEmail","accountDocRef","docSnapshot","fieldType","setLoginName","Math","floor","random","ResetPassword","handleReset","sendPasswordResetEmail","ResetPasswordSuccess","App","initializing","setInitializing","setUser","linking","prefixes","config","screens","Login","devadmin","path","Router","Provider","store","NavigationContainer","options","unmountOnBlur","Admin","selectedScreen","AccountList","_searchInput$current","setEmailError","logo2","_useState11","_useState12","_useState13","_useState14","setName","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","isSelectedLogs","_useState21","_useState22","isSelectedAddAccount","_useState23","_useState24","isSelectedAccountList","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","setAccountTypeSpAd","_useState31","_useState32","setAccountTypeDevAd","_useState33","_useState34","setAccountTypeAd","_useState35","_useState36","setAccountType3","_useState37","_useState38","setAccountType4","_useState39","_useState40","inputName","setInputName","_useState41","_useState42","_useState43","_useState44","inputEmail","setInputEmail","_useState45","_useState46","inputPassword","setInputPassword","_useState47","_useState48","setInputConfirmPassword","_useState49","_useState50","typeOfAccount","setTypeOfAccount","_useState51","_useState52","setTypeOfAccountDisplay","showSuccessModal","setShowSuccessModal","showDisableModal","setShowDisableModal","showEnableModal","setShowEnableModal","_React$useState11","_React$useState12","showDeleteModal","setShowDeleteModal","_React$useState13","_React$useState14","_useState53","useRef","_useState54","selectedItem","setSelectedItem","_useState55","_useState56","modalVisible","setModalVisible","_useState57","_useState58","_useState59","_useState60","setTime","_useState61","_useState62","selectedType","setSelectedType","_useState63","_useState64","selectedTypeDisplay","setSelectedTypeDisplay","_useState65","_useState66","selectedItemType","setSelectedItemType","_useState67","_useState68","isEmailDuplicate","setIsEmailDuplicate","_useState69","_useState70","authEmail","setAuthEmail","_useState71","_useState72","authPassword","setAuthPassword","_useState73","_useState74","isYesLoading","setIsYesLoading","_useState75","_useState76","isSaveLoading","setIsSaveLoading","inputEmailRef","inputNameRef","inputPassRef","_useState77","_useState78","page","setPage","optionsPerPage","_useState79","_useState80","itemsPerPage","setItemsPerPage","_useState81","_useState82","setData","_useState83","_useState84","searchQuery","setSearchQuery","_useState85","_useState86","filteredData","setFilteredData","_useState87","_useState88","_useState89","_useState90","ref0","ref1","ref2","ref3","searchInput","searchInputValue","current","_useState91","_useState92","pageSize","_useState93","_useState94","lastVisible","setLastVisible","_useState95","_useState96","firstVisible","setFirstVisible","_useState97","_useState98","searchText","_useState99","_useState100","currentPage","setCurrentPage","q","query","collection","orderBy","limit","documents","logsDatabaseData","forEach","document","push","id","setAccountListData","docs","fetchNextData","collectionGroup","projectControlFirestore","startAfter","getDocs","updateState","setLoadingModalVisible","where","toLowerCase","fetchPreviousData","_ref2","endBefore","limitToLast","fetchFirstPage","accountListDatabaseData","_ref3","pageClicked","empty","firstPageDocuments","_ref4","_ref5","searchData","_ref6","handleToggleAccountTypeAd","useCallback","handleToggleAccountTypeDevAd","handleToggleAccountType3","handleToggleAccountType4","handleToggleAccountTypeSpAd","fetchData","_ref7","map","updatedData","listenForNameChange","_auth$currentUser2","getEmailFromDocument","_ref8","collectionPath","documentRef","documentSnapshot","getDoc","pass","_x4","_ref9","accountDocSnapshot","_x5","validateEmail","test","showDrawerIcon","useBreakpointValue","handleEdit","find","item","typeDisplay","setNativeProps","handleInputEmailChange","debounce","handleInputNameChange","handleInputPassChange","handleCloseModal","handleCloseDisableModal","handleCloseDeleteModal","handleCloseEnableModal","addLogToCollection","_ref10","logsCollectionRef","addDoc","_x6","handleEnable","_ref11","itemDocRef","datetime","axios","formattedTime","moment","format","year","month","monthWithDay","date","day","time","timeWithMinutesSeconds","applySearchFilter","logData","keywords","timestamp","colorScheme","_x7","deleteDocument","_ref12","customId","deleteDoc","_x8","_x9","handleDelete","_ref13","deleteUser","_x10","handleDisable","_ref14","_searchInput$current2","_x11","filter","includes","handleSave","_ref15","isPasswordLengthLabel","updatedFields","lastUpdatedDate","_searchInput$current3","updatePassword","userDocRef","dateOfCreation","setDoc","oldDocumentRef","newDocumentRef","createUserWithEmailAndPassword","updatedItem","fetchSignInMethodsForEmail","_x12","_ref16","filtered","useMemo","paginatedData","startIndex","endIndex","slice","handleSearch","min","styles","image","flexDirection","position","top","zIndex","borderBottomWidth","borderBottomColor","marginTop","FastImage","priority","high","stretch","MobileViewDrawer","marginLeft","_ref17","handleSignOut","_useState101","_useState102","showNamePopover","setShowNamePopover","showPopover","Flex","direction","Popover","isOpen","trigger","triggerProps","marginRight","MaterialCommunityIcons","Ionicons","onClose","placement","trapFocus","Content","Body","leftIcon","SideDrawer","flexGrow","minHeight","ref","ScrollView","contentContainerStyle","DataTable","margin","overflow","display","padding","paddingBottom","handleOpenDisableModal","handleOpenEnableModal","handleOpenDeleteModal","Pagination","numberOfPages","ceil","onPageChange","label","showFastPagination","optionsLabel","Modal","CloseButton","Header","defaultValue","bold","FontAwesome","Footer","borderTopWidth","maxWidth","variant","AddAccount","show2","setShow2","accountTypeSpAd","accountTypeDevAd","accountTypeAd","accountType3","accountType4","typeOfAccountDisplay","showModal","setShowModal","inputConfirmPassword","passwordMatch","setPasswordMatch","passwordMatchLabel","setPasswordMatchLabel","passwordLengthLabel","setPasswordLengthLabel","isNameEmpty","setIsNameEmpty","setIsIntervalActive","closeModal","handleAddAccount","isAccountType","_inputEmail$current","authForCreateUser","userCredential","_inputName$current","_inputName$current2","_inputEmail$current2","_inputName$current3","_inputPassword$curren","customID","docRef","handleClear","handlePasswordStatus","_inputPassword$curren3","_inputConfirmPassword2","inputPasswordValue","inputConfirmPasswordValue","inputPasswordValueLength","_inputEmail$current3","emailValue","handleEmailSubmit","_inputName$current4","AntDesign","_inputPassword$curren2","_inputConfirmPassword","globalSupplyChainCostsData","globalSelectedExpenseName","globalSupplyChainCostsAmount","globalSelectedPaidTo","globalModelDataVariable","globalRegYearDataVariable","globalSelectedImages","globalVehicleFolderName","globalReferenceNumber","globalSPCSelectedDate","globalFobPrice","UpdateSuccessModal","bodyText","headerText","isUpdateSuccessModalOpen","borderLeftWidth","borderLeftColor","UploadSuccessModal","isSuccessModalOpen","LoadingModal","loadingModalVisible","bottom","left","right","SelectExpenseName","expenseNameIsError","selectExpenseNameRef","selectResetKey","expenseNameData","selectedExpenseName","nanoid","Select","selectedValue","onValueChange","setSelectedExpenseName","accessibilityLabel","_selectedItem","bg","endIcon","CheckIcon","Item","SelectPaidTo","paidToIsError","paidToData","selectedPaidTo","setSelectedPaidTo","ModalCalendar","selectedDate","setSelectedDate","modalCalendarVisible","setModalCalendarVisible","handleModalCalendarOpen","handleModalCalendarClose","_Fragment","onFocus","useRNModal","Calendar","onDayPress","dateString","markedDates","selected","disableTouchEvent","selectedDotColor","renderArrow","enableSwipeMonths","initialDate","showSixWeeks","SupplyChainsCosts","handleAddExpenseNameTextChange","textAreaAddExpenseName","inputExpenseAmount","handleInputExpenseAmountChange","handleAddPaidToTextChange","inputCarNotes","supplyChainsCostsData","currentDate","supplyChainsCostsModalVisible","setSupplyChainsCostsModalVisible","clearModalVisible","setClearModalVisible","inputAmountIsError","setInputAmountIsError","setExpenseNameIsError","setPaidToIsError","totalAmount","setTotalAmount","setSelectResetKey","handleModalSupplyChainsCostsClose","_inputExpenseAmount$c","clear","handleClearModalClose","formattedTotalAmount","expenseData","Object","keys","parseFloat","amount","reduce","accumulator","currentValue","toLocaleString","_inputExpenseAmount$c2","_inputExpenseAmount$c3","_inputExpenseAmount$c4","_inputExpenseAmount$c5","existingIndex","findIndex","_inputExpenseAmount$c6","cloneDeep","expenseName","paidName","setSupplyChainsCostsData","_inputExpenseAmount$c7","newData","concat","_toConsumableArray","handleEditPress","handleFirstModalClose","handleFirstModalOpen","flexDir","alignSelf","SupplyChainsCostsSortAndAddModal","docName","handleAddTextChange","textAreaAdd","title","dataName","databaseInit","projectExtensionFirestore","index","isHovered","isFocused","isPressed","itemIndex","splice","handleDeleteItem","projectControlAuth","storage","getStorage","projectExtensionFirebase","ClearImagesModal","modalDeleteImagesVisible","setModalDeleteImagesVisible","handleClearImages","selectedImages","isAddPhotoVisible","handleModalDeleteClose","cursor","ImageUploader","dragSortableViewRef","handleClearImagesExtra","deleteImageVisible","boolean","addAnotherImages","scrollEnabled","setscrollEnabled","isEnterEdit","setisEnterEdit","widthState","setWidthState","setIsCursorLoading","modalImageUri","setModalImageUri","imageModalVisible","setImageModalVisible","isFileSizeLimitModal","setIsFileSizeLimitModal","handleImagePress","dropdown","icon","placeholderStyle","selectedTextStyle","iconStyle","inputSearchStyle","paddingTop","txt","lineHeight","sort","item_children","item_delete_icon","item_icon","handleImageAddToSelection","setDeleteImageVisible","mediaType","maxHeight","selectionLimit","storageOptions","skipBackup","response","launchImageLibrary","didCancel","assets","newImages","promises","asset","fetch","res","blob","some","Promise","all","limitedImages","setSelectedImages","setAddAnotherImages","reloadData","updatedSelectedImages","handleWidthChange","window","addEventListener","removeEventListener","renderItem","normal","contain","handleDeleteImagePress","Entypo","getImagesRenderItem","handleImageSelection","uniqueImages","self","a","filteredImages","imageOrder","b","indexOf","setIsAddPhotoVisible","DragSortableView","dataSource","delayLongPress","parentWidth","childrenWidth","childrenHeight","marginChildrenTop","marginChildrenBottom","marginChildrenLeft","marginChildrenRight","onDragStart","onDragEnd","onDataChange","onClickItem","keyExtractor","sortable","italic","alignContent","NativeImage","SuccessFailModal","isSuccessOpen","isFailedOpen","handleFailModalClose","inputStockIDNumber","handleSuccessModalClose","okSuccessButtonRef","okFailButtonRef","initialFocusRef","finalFocusRef","StockIDAndMakeAndModel","selectStockStatus","handleSetBordersWhite","inputFobUsd","handleClearIfError","monthNumbers","steeringData","selectPort","selectSales","selectBuyer","inputRefNum","inputChassis","inputModelCode","inputEngineCode","inputEngineDis","selectSteering","inputMileage","selectTransmission","selectExteriorColor","inputNumOfSeats","inputDoors","inputPurchasedPrice","selectFuel","inputDimensionLength","inputDimensionWidth","inputDimensionHeight","inputDimensionCubicMeters","selectDriveType","inputWeight","selectBodyType","inputCarName","inputCarDesc","inputFobJpy","selectRegYear","selectRegMonth","setRefNumFromSelects","stockIDNumError","selectMakeForModelRef","textAreaAddModel","selectMakeForAddModelRef","handleAddMakeTextChange","textAreaAddMake","makeError","modelError","selectMakeBoxRef","selectMakeRef","selectModelRef","selectModelBoxRef","setCarNameFromSelects","setCarNameFromSelectsModel","inputCarMemo","purchasedPriceError","handleInputPurchasedPriceChange","makeData","stockStatusData","portData","transmissionData","fuelData","buyerData","salesData","driveTypeData","bodyTypeData","exteriorColorData","jpyToUsd","modelData","setModelData","isSearchLoading","setIsSearchLoading","setIsSuccessOpen","setIsFailedOpen","getImages","_ref18","folderName","imageRefs","listAll","urls","items","_ref19","itemRef","getDownloadURL","fileName","parseInt","handleSearchPress","_inputStockIDNumber$c","_inputStockIDNumber$c2","querySnapshot","_ref21","_fetchDataAndSelectIndex","collectionRef","make","selectIndex","modelVariable","reset","modelsDataFromFirebase","model","fetchDataAndSelectIndex","stockStatus","regYear","regMonth","portID","salesID","buyerID","referenceNumber","chassisNumber","modelCode","engineCode","engineDisplacement","steering","mileage","transmission","exteriorColor","numberOfSeats","doors","purchasedPrice","toString","fuel","dimensionLength","dimensionWidth","dimensionHeight","dimensionCubicMeters","driveType","weight","bodyType","carName","carDescription","fobPrice","numericValue","startsWith","truncatedValue","formattedValue","multipliedValue","isNaN","formattedMultipliedValue","toFixed","handleInputFobJpyChange","undefined","notes","memo","featuresState","SafetySystemAnBrSy","SafetySystemDrAi","SafetySystemPaAi","SafetySystemSiAi","ComfortAiCoFr","ComfortAiCoRe","ComfortAMFMRa","ComfortAMFMSt","ComfortCDPl","ComfortCDCh","ComfortCrSpCo","ComfortDiSp","ComfortDVDPl","ComfortHDD","ComfortNaSyGPS","ComfortPoSt","ComfortPrAuSy","ComfortReKeSy","ComfortTiStWh","InteriorLeSe","InteriorPoDoLo","InteriorPoMi","InteriorPoSe","InteriorPoWi","InteriorReWiDe","InteriorReWiWi","InteriorThRoSe","InteriorTiGl","ExteriorAlWh","ExteriorPoSlDo","ExteriorSuRo","SellingPointsCuWh","SellingPointsFuLo","SellingPointsMaHiAv","SellingPointsBrNeTi","SellingPointsNoAcHi","SellingPointsNoSmPrOw","SellingPointsOnOwHi","SellingPointsPeRaTi","SellingPointsReBo","SellingPointsTuEn","SellingPointsUpAuSy","resetKey","stockStatusVariable","makeVariable","regYearVariable","regMonthVariable","portVariable","port","salesVariable","sales","buyerVariable","buyer","referenceNumberVariable","stockID","steeringVariable","transmissionVariable","exteriorColorVariable","fuelVariable","driveTypeVariable","bodyTypeVariable","handleModelChange","handleMakeChange","_ref22","handleInputStockIDNumberChange","handleModelOnFocus","isLoadingText","keyboardType","SortAndAddModal","SelectDropdown","buttonStyle","buttonTextStyle","dropdownStyle","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","rowStyle","rowTextStyle","onSelect","defaultButtonText","buttonTextAfterSelection","renderDropdownIcon","isOpened","rowTextForSelection","searchPlaceHolder","searchInputStyle","disableAutoScroll","search","ModelSortAndAddModal","_ref23","modalSortOpen","setModalSortOpen","modalAddOpen","setModalAddOpen","modalAddSuccess","setModalAddSuccess","modalSave","setModalSave","modalSaveLoading","setModalSaveLoading","modalData","setModalData","modalIsLoading","setModalIsLoading","handleDeleteItemPress","prevData","_ref24","_modalDocSnap$data","modalDocRef","modalDocSnap","nameVariable","handleModalSaveClose","handleSortModalOpen","handleSortModalClose","handleModalAddOpen","handleModalAddClose","_textAreaAdd$current","handleModalAddSuccessClose","handleModalAddSuccessOpen","handleModalSaveOpen","handleAddSubmit","_ref28","_textAreaAdd$current2","dataArray","split","modalCollectionRef","arrayUnion","merge","TouchableOpacity","focusable","DraggableFlatList","_ref29","drag","onPressIn","_ref30","TextArea","multiline","totalLines","_ref31","_ref32","_modalDocSnap$data2","_textAreaAdd$current3","_ref36","_textAreaAdd$current4","_ref37","_ref38","PSBSortAndAddModal","_ref39","textAreaAddCode","handleAddCodeTextChange","_ref40","_modalDocSnap$data3","_ref44","_textAreaAdd$current5","_textAreaAddCode$curr","dataCode","dataCodeArray","dataToUpdate","updateObject","_ref45","_ref46","_ref47","modalAddModel","setModalAddModel","_useState103","_useState104","modalSaveModel","setModalSaveModel","_useState105","_useState106","modalModel","setModalModel","_useState107","_useState108","modalAddModelSuccess","setModalAddModelSuccess","_useState109","_useState110","keySelectMakeForModel","setKeySelectMakeForModel","_useState111","_useState112","keySelectMakeForAddModel","setKeySelectMakeForAddModel","_useState113","_useState114","modelSortData","setModelSortData","_useState115","_useState116","isAddModelDisabled","setIsAddModelDisabled","_useState117","_useState118","modalSaveModelLoading","setModalSaveModelLoading","_useState119","_useState120","_useState121","_useState122","_useState123","_useState124","_useState125","_useState126","_useState127","_useState128","fetchModelSortData","_ref48","_selectMakeForModelRe","_selectMakeForModelRe2","_modelSortDocSnap$dat","modelSortDocRef","modelSortDocSnap","handleDeleteModelPress","prevModelData","_ref49","handleSaveModel","_selectMakeForModelRe3","_selectMakeForModelRe4","_selectMakeForModelRe5","_selectMakeForModelRe6","_selectMakeForModelRe7","handleModalSaveModelClose","handleMakeForModelChange","_selectMakeForAddMode","makeForAddModelVariable","handleMakeForAddModelChange","handleModalModelOpen","handleModalModelClose","prevKey","handleModalAddModelOpen","handleModalAddModelClose","handleModalAddModelSuccessOpen","handleModalAddModelSuccessClose","handleModalSaveModelOpen","_selectMakeForModelRe8","handleAddModelSubmit","_ref51","_textAreaAddModel$cur4","_selectMakeForAddMode2","_selectMakeForAddMode3","_selectMakeForAddMode4","makeCollectionRef","makeDocRef","_ref52","_ref53","_textAreaAddModel$cur","_textAreaAddModel$cur2","_textAreaAddModel$cur3","newText","toUpperCase","CheckBoxButton","_ref54","onChange","variable","_useState129","_useState130","checked","setChecked","noOfLines","AddVehicle","screenWidth","_useState131","_useState132","_useState133","_useState134","_useState135","_useState136","_useState137","_useState138","_useState139","_useState140","inputRegYear","inputRegMonth","inputFuel","inputDriveType","textAreaAddTransmission","textAreaAddExteriorColor","textAreaAddFuel","textAreaAddPort","textAreaAddPortCode","textAreaAddSales","textAreaAddBuyer","textAreaAddSalesCode","textAreaAddBuyerCode","textAreaAddDriveType","textAreaAddBodyType","textAreaAddPaidTo","currentYear","years","Array","from","_","_useState141","_useState142","isNoFeaturesSelected","setIsNoFeaturesSelected","_useState143","_useState144","carNameError","setCarNameError","_useState145","_useState146","setMakeError","_useState147","_useState148","setModelError","_useState149","_useState150","regYearError","setRegYearError","_useState151","_useState152","regMonthError","setRegMonthError","_useState153","_useState154","refNumError","setRefNumError","_useState155","_useState156","setStockIDNumError","_useState157","_useState158","chassisError","setChassisError","_useState159","_useState160","modelCodeError","setModelCodeError","_useState161","_useState162","engineDisError","setEngineDisError","_useState163","_useState164","steeringError","setSteeringError","_useState165","_useState166","mileageError","setMileageError","_useState167","_useState168","transmissionError","setTransmissionError","_useState169","_useState170","exteriorColoError","setExteriorColoError","_useState171","_useState172","numOfSeatsError","setNumOfSeatsError","_useState173","_useState174","doorsError","setDoorsError","_useState175","_useState176","setPurchasedPriceError","_useState177","_useState178","fuelError","setFuelError","_useState179","_useState180","portError","setPortError","_useState181","_useState182","buyerError","setBuyerError","_useState183","_useState184","salesError","setSalesError","_useState185","_useState186","dimensionLengthError","setDimensionLengthError","_useState187","_useState188","dimensionWidthError","setDimensionWidthError","_useState189","_useState190","dimensionHeightError","setDimensionHeightError","_useState191","_useState192","driveTypeError","setDriveTypeError","_useState193","_useState194","weightError","setWeightError","_useState195","_useState196","bodyTypeError","setBodyTypeError","_useState197","_useState198","stockStatusError","setStockStatusError","inputVehicleBoxRef","selectRegYearBoxRef","selectRegMonthBoxRef","selectSteeringBoxRef","selectTransmissionBoxRef","selectExteriorColorBoxRef","selectFuelBoxRef","selectPortBoxRef","selectBuyerBoxRef","selectSalesBoxRef","selectDriveTypeBoxRef","selectBodyTypeBoxRef","selectStockStatusBoxRef","property","_ref55","_inputCarName$current","_inputCarDesc$current","_inputFobJpy$current","_inputFobUsd$current","_inputRegYear$current","_inputRegMonth$curren","_inputRefNum$current","_inputChassis$current","_inputModelCode$curre","_inputEngineCode$curr","_inputEngineDis$curre","_inputMileage$current","_inputNumOfSeats$curr","_inputDoors$current","_inputPurchasedPrice$","_inputFuel$current","_inputDimensionLength","_inputDimensionWidth$","_inputDimensionHeight","_inputDriveType$curre","_inputWeight$current","handleClearToggleButton","clearSelect","uploadImages","storageRef","imageNamesToKeep","listResult","deleteObject","_ref57","imagename","img","createElement","getContext","src","URL","createObjectURL","onload","canvas","ctx","newWidth","newHeight","drawImage","font","fillStyle","imageSmoothingEnabled","lineWidth","watermarkText","textWidth","measureText","xShadow","yShadow","shadowBlur","fillText","x","y","watermarkedImageBlob","resolve","toBlob","imageRef","uploadBytes","contentType","handleUpload","_inputStockIDNumber$c3","_inputRefNum$current2","_inputChassis$current2","_inputModelCode$curre2","_inputEngineDis$curre2","_inputEngineDis$curre3","_inputMileage$current2","_inputMileage$current3","_inputNumOfSeats$curr2","_inputDoors$current2","_inputNumOfSeats$curr3","_inputDoors$current3","_inputPurchasedPrice$2","_inputPurchasedPrice$3","_inputDimensionLength2","_inputDimensionWidth$2","_inputDimensionHeight2","_inputDimensionCubicM","_inputDimensionLength3","_inputDimensionWidth$3","_inputDimensionHeight3","_inputDimensionCubicM2","_inputWeight$current2","_inputWeight$current3","_inputCarName$current2","selectIsEmpty","inputIsEmpty","allValuesAreFalse","values","every","_inputCarName$current3","_inputWeight$current4","_inputWeight$current5","_inputDimensionHeight4","_inputDimensionHeight5","_inputDimensionWidth$4","_inputDimensionWidth$5","_inputDimensionLength4","_inputDimensionLength5","_inputDoors$current4","_inputDoors$current5","_inputPurchasedPrice$4","_inputPurchasedPrice$5","_inputNumOfSeats$curr4","_inputMileage$current4","_inputMileage$current5","_inputEngineDis$curre4","_inputEngineDis$curre5","_inputModelCode$curre3","_inputChassis$current3","_inputRefNum$current3","_inputStockIDNumber$c4","scrollIntoView","behavior","_inputStockIDNumber$c5","_inputRefNum$current4","_inputStockIDNumber$c6","_inputRefNum$current5","_inputCarName$current4","_inputStockIDNumber$c7","_inputChassis$current4","_inputFobJpy$current2","_inputStockIDNumber$c8","_inputRefNum$current6","_inputChassis$current5","_inputModelCode$curre4","_inputEngineCode$curr2","_inputNumOfSeats$curr5","_inputDoors$current6","_inputCarName$current5","_inputCarDesc$current2","_inputCarNotes$curren","_inputCarMemo$current","stockCollectionRef","docQuery","docSnap","fobHistoryValue","keywordsData","fobHistoryData","changedBy","inputFobValue","imageCount","fobHistory","photos","comfort","safetySystem","interior","exterior","sellingPoints","_inputCarName$current6","_inputRefNum$current7","_inputCarName$current7","_inputRefNum$current8","setIsUpdateSuccessModalOpen","dataDoc","updates","updatedDate","dateAdded","dataWithDateAdded","_inputCarName$current8","_inputRefNum$current9","_inputCarName$current9","_inputRefNum$current10","setIsSuccessModalOpen","_ref62","_x13","_inputStockIDNumber$c9","_inputCarName$current10","_inputCarDesc$current3","_inputFobJpy$current3","_inputFobUsd$current2","_inputRegYear$current2","_inputRegMonth$curren2","_inputRefNum$current11","_inputChassis$current6","_inputModelCode$curre5","_inputEngineCode$curr3","_inputEngineDis$curre6","_inputMileage$current6","_inputNumOfSeats$curr6","_inputDoors$current7","_inputPurchasedPrice$6","_inputFuel$current2","_inputDimensionLength6","_inputDimensionWidth$6","_inputDimensionHeight6","_inputDriveType$curre2","_inputWeight$current6","_inputCarNotes$curren2","_inputCarMemo$current2","_inputFobJpy$current4","calculateCubicMeters","_inputDimensionLength7","_inputDimensionLength8","_inputDimensionWidth$7","_inputDimensionWidth$8","_inputDimensionHeight7","_inputDimensionHeight8","resultFormatted","_inputStockIDNumber$c10","_useState199","_useState200","handleUpdateSuccessModalClose","_ref66","_useState211","_useState212","_textAreaAddMake$curr","_textAreaAddMake$curr2","_textAreaAddMake$curr3","Number","outlineStyle","_textAreaAddPort$curr","textAreaValue","line","charAt","join","_textAreaAddPortCode$","_textAreaAddPortCode$2","_textAreaAddPortCode$3","_textAreaAddSales$cur","_textAreaAddSalesCode","_textAreaAddSalesCode2","_textAreaAddSalesCode3","_textAreaAddBuyer$cur","_inputRefNum$current12","_inputRefNum$current13","_inputRefNum$current14","_inputChassis$current7","_inputChassis$current8","_inputChassis$current9","_inputModelCode$curre6","_inputModelCode$curre7","_inputModelCode$curre8","_inputEngineCode$curr4","_inputEngineCode$curr5","_inputEngineCode$curr6","InputGroup","InputRightAddon","_textAreaAddTransmiss","_textAreaAddExteriorC","_textAreaAddFuel$curr","dotIndex","editable","_textAreaAddDriveType","_textAreaAddBodyType$","borderTopColor","_textAreaAddExpenseNa","_textAreaAddPaidTo$cu","_useState203","_useState204","featuresModalVisible","setFeaturesModalVisible","_useState205","_useState206","featuresClearModalVisible","_useState207","_useState208","setKey","handleModalSelectFeaturesClose","pressDuration","InputLeftAddon","_ref63","_useState201","_useState202","modalClearVisible","setModalClearVisible","handleModalClearOpen","handleModalClearClose","_ref64","_useState209","_useState210","modalUploadVisible","setModalUploadVisible","handleModalUploadClose","NamePopover","View","LogsTable","setSearchText","searchInputRef","logsData","setLogsData","handleNextPage","handlePreviousPage","TextInput","_searchInputRef$curre","returnKeyType","autoCapitalize","selectable","CurrencyConverterComponent","successModalVisible","setSuccessModalVisible","todayCurrency","setTodayCurrency","timestampCurrency","setTimestampCurrency","setExchangeRate","setLastUpdate","CurrencyConverter","rates","usdToJpy","JPY","JpyToUsd","yenToDollar","dollarToYen","usdToEur","EUR","eurToUsd","usdToGbp","GBP","gbpToUsd","usdToAud","AUD","audToUsd","usdToCad","CAD","cadToUsd","yenToEuro","euroToYen","yenToGbp","gbpToYen","yenToAud","audToYen","yenToCad","cadToYen","lastUpdateDate","Date","formattedLastUpdate","hour","minute","second","timeZoneName","newTodayCurrency","currencyRef","jpyToEur","eurToJpy","jpyToGbp","gbpToJpy","jpyToAud","audToJpy","jpyToCad","cadToJpy","logDataCurrency","handleCloseCurrencyModal","handleCloseSuccessModal","MyBarChart","VictoryChart","theme","VictoryTheme","material","domainPadding","parent","VictoryAxis","axis","stroke","ticks","tickLabels","fill","dependentAxis","VictoryBar","datum","barRatio","Logs","setIsOpen","handleOpen","handleClose","handleToggleLogs","handleToggleAddAccount","handleToggleAccountList","handleToggleAddVehicle","handleVehicleList","handleFreight","handleChatMessages","slideAnimation","Animated","Value","timing","toValue","easing","Easing","inOut","ease","useNativeDriver","start","TouchableHighlight","onPressOut","underlayColor","transform","translateX","interpolate","inputRange","outputRange","borderRightWidth","marginVertical","marginHorizontal","paddingLeft","onHover","setOnHover","onHoverIn","onHoverOut","globalCurrentSupplyChainCostsData","globalCurrentStockID","globalSelectedVehicle","globalSelectedVehicleReferenceNumber","globalSelectedCarName","SelectStockStatus","toast","useToast","selectedStockStatusValue","setSelectedStockStatusValue","handleSaveStockStatus","stockStatusHistoryData","vehicleProductRef","stockStatusHistory","render","ImageUploadModal","handleUploadImagesModalClose","handleUploadImages","uploadImagesModalVisible","uploadImagesButtonLoading","UploadImagesModal","fetchImageCounts","setUploadImagesModalVisible","setUploadImagesButtonLoading","closeAll","handleModalSupplyChainsCostsOpen","setVehicleListSupplyChainsCostsData","AllSccModals","vehicleListSupplyChainsCostsData","expenseViewRef","handleSaveSupplyChainsCosts","_ref20","_ref25","_ref26","SCC_Modals","_ref27","VehicleEditModal","handleEditModalClose","editVehicleModalVisible","EditVehicleModal","setEditVehicleModalVisible","ViewImagesModal","handleViewImagesModalClose","viewImagesModalVisible","viewImagesData","FobPriceHistoryModal","_ref33","handleFobPriceHistoryClose","fobPriceHistoryModalVisible","FobPriceHistory","setFobPriceHistoryModalVisible","ImageCountComponent","_ref34","handleViewImagesModalOpen","handleUploadImagesModalOpen","setImageCount","textDecorationLine","FobPriceInput","_ref35","setFobPrice","formatValueWithCommas","handleSaveFob","fobValue","handleTextChange","VehicleListTable","vehicleListData","setStockIDs","setImageCounts","sortField","setSortField","isSortActive","setIsSortActive","handleSortChange","field","fetchWithSort","fieldToSortBy","sortDirection","vehicleProductData","setVehicleListData","_ref41","_ref42","_ref43","sanitizedSearchQuery","ids","counts","count","getImageCountInFolder","imageCountsObject","acc","folderPath","folderRef","handleFobPriceHistoryOpen","setFobHistoryData","_ref50","setViewImagesModalVisible","_x14","setViewImagesData","_x16","_x15","handleSearchEnter","vehicleProductsRef","_x17","underline","VehicleList","_projectControlAuth$c","_ref56","_x18","keyboardShouldPersistTaps","UsePagination","selectedFileUrlSlice","createSlice","initialState","reducers","setSelectedFileUrl","action","payload","pdfViewerModalVisibleSlice","setPdfViewerModalVisible","selectedCustomerDataSlice","setSelectedCustomerData","previewInvoiceVisibleSlice","setPreviewInvoiceVisible","transactionModalVisibleSlice","setTransactionModalVisible","invoiceDataSlice","setInvoiceData","deleteMessageTemplateVisibleSlice","setDeleteMessageTemplateVisible","loadMoreMessagesLoadingSlice","setLoadMoreMessagesLoading","noMoreMessagesDataSlice","setNoMoreMessagesData","readByListModalVisibleSlice","setReadByListModalVisible","selectedChatDataSlice","setSelectedChatData","chatMessageBoxLoadingSlice","setChatMessageBoxLoading","chatMessagesDataSlice","setChatMessagesData","chatListSearchTextSlice","setChatListSearchText","activeChatIdSlice","setActiveChatId","loadMoreLoadingSlice","setLoadMoreLoading","noMoreDataSlice","setNoMoreData","chatListLastVisibleSlice","setChatListLastVisible","chatListDataSlice","setChatListData","chatListImageUrlSlice","setChatListImageUrl","countryPortsDataSlice","setCountryPortsData","addPortsForCountriesModalVisibleSlice","setAddPortsForCountriesModalVisible","methodDataSlice","setMethodData","inspectionIsRequiredDataSlice","setInspectionIsRequiredData","inspectionNameDataSlice","setInspectionNameData","deletePortModalVisibleSlice","setDeletePortModalVisible","deleteCountryModalVisibleSlice","setDeleteCountryModalVisible","addPortModalVisibleSlice","setAddPortModalVisible","addCountryModalVisibleSlice","setAddCountryModalVisible","selectedButtonSlice","setSelectedButton","freightCountriesDataSlice","setFreightCountriesData","freightPortsDataSlice","setFreightPortsData","fobHistoryDataSlice","inputFobSlice","setInputFob","fobPriceHistoryModalVisibleSlice","editVehicleModalVisibleSlice","vehicleListDataSlice","addVehicleListDataSlice","setAddVehicleListData","supplyChainsCostsModalVisibleSlice","uploadImagesModalVisibleSlice","vehicleListSupplyChainsCostsDataSlice","uploadImagesButtonLoadingSlice","viewImagesModalVisibleSlice","viewImagesDataSlice","lastVisibleSlice","accountListDataSlice","logsDataSlice","stockStatusDataSlice","setStockStatusData","isSuccessModalOpenSlice","isUpdateSuccessModalOpenSlice","loadingModalVisibleSlice","selectedExpenseNameSlice","selectedPaidToSlice","supplyChainsCostsDataSlice","currentDateSlice","setCurrentDate","loginEmailSlice","setLoginEmail","loginNameSlice","modalDeleteImagesVisibleSlice","addAnotherImagesSlice","isAddPhotoVisibleSlice","jpyToUsdSlice","setJpyToUsd","usdToJpySlice","setUsdToJpy","modelDataSlice","makeDataSlice","setMakeData","expenseNameDataSlice","setExpenseNameData","paidToDataSlice","setPaidToData","selectedMakeSlice","setSelectedMake","isLoadingSlice","selectedImagesSlice","portDataSlice","setPortData","transmissionDataSlice","setTransmissionData","fuelDataSlice","setFuelData","buyerDataSlice","setBuyerData","salesDataSlice","setSalesData","driveTypeDataSlice","setDriveTypeData","bodyTypeDataSlice","setBodyTypeData","exteriorColorDataSlice","setExteriorColorData","currentYearSlice","setCurrentYear","deleteImageVisibleSlice","actions","configureStore","reducer","selectedFileUrl","pdfViewerModalVisible","selectedCustomerData","previewInvoiceVisible","invoiceData","transactionModalVisible","deleteMessageTemplateVisible","loadMoreMessagesLoading","noMoreMessagesData","readByListModalVisible","selectedChatData","chatMessageBoxLoading","chatMessagesData","chatListSearchText","activeChatId","loadMoreLoading","noMoreData","chatListLastVisible","chatListData","chatListImageUrl","deletePortModalVisible","deleteCountryModalVisible","countryPortsData","addPortsForCountriesModalVisible","inspectionIsRequiredData","methodData","freightPortsData","inspectionNameData","addCountryModalVisible","addPortModalVisible","freightCountriesData","selectedButton","inputFob","addVehicleListData","accountListData","selectedMake","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","fetchCurrency","_snapshot$data","_snapshot$data2","fetchExpenseNameData","_snapshot$data3","fetchPaidToData","_snapshot$data4","paidTo","fetchMakeData","_snapshot$data5","fetchPortData","_snapshot$data6","fetchTransmissionData","_snapshot$data7","fetchFuelData","_snapshot$data8","fetchBuyerData","_snapshot$data9","fetchSalesData","_snapshot$data10","fetchDriveTypeData","_snapshot$data11","fetchBodyTypeData","_snapshot$data12","fetchExteriorColorData","_snapshot$data13","fetchYear","fetchCurrentDate","fetchVehicleListData","queryRef","fetchMethodData","_snapshot$data14","fetchInspectionIsRequiredData","_snapshot$data15","fetchInspectionNameData","_snapshot$data16","fetchChatListData","chatsData","_x19","projectControlFirebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","projectExtensionAuth","app","getAnalytics","firebaseAppForCreateUser","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","notFulfilled","Infinity","i","fulfilled","j","key","r","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","setAttribute","onScriptComplete","prev","event","onerror","clearTimeout","doneFns","parentNode","removeChild","bind","target","head","appendChild","Symbol","toStringTag","nmd","paths","p","installedChunks","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}