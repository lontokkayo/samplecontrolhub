{"version":3,"file":"static/js/main.262b2aab.js","mappings":"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","sources":["assets/chat_step|sync|/^/chat_step_.*_off/.png$","assets/chat_step|sync|/^/chat_step_.*_on/.png$","components/LoginPage.js","components/DevAdminComponents/Lazy Screen/LazyScreen.js","components/Top.js","components/Checkpoint.js","components/ResetPassword.js","components/ResetPasswordSuccess.js","App.js","components/DevAdminComponents/AccountList.js","components/DevAdminComponents/AddAccount.js","components/DevAdminComponents/AddVehicle.js","components/DevAdminComponents/ChatMessages.js","components/DevAdminComponents/Freight.js","components/DevAdminComponents/Header/StickyHeader.js","components/DevAdminComponents/Logs.js","components/DevAdminComponents/SideDrawer/MobileViewDrawer.js","components/DevAdminComponents/SideDrawer/SideDrawer.js","components/DevAdminComponents/VehicleList.js","components/DevAdminComponents/VehicleListComponent/UsePagination.js","components/DevAdminComponents/redux/store.js","crossFirebase.js","firebasecontrol.js","firebasecontrolCreateUser.js","webpack://web/./components/style.css?30b9","node_modules/moment/locale|sync|/^/.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/ensure chunk","webpack/runtime/get javascript chunk filename","webpack/runtime/get mini-css chunk filename","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/load script","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["var map = {\n\t\"./chat_step_1_off.png\": 29413,\n\t\"./chat_step_2_off.png\": 35290,\n\t\"./chat_step_3_off.png\": 38715,\n\t\"./chat_step_4_off.png\": 65256,\n\t\"./chat_step_5_off.png\": 58038,\n\t\"./chat_step_6_off.png\": 49232,\n\t\"./chat_step_7_off.png\": 88618\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 66516;","var map = {\n\t\"./chat_step_1_on.png\": 40027,\n\t\"./chat_step_2_on.png\": 22558,\n\t\"./chat_step_3_on.png\": 80851,\n\t\"./chat_step_4_on.png\": 14740,\n\t\"./chat_step_5_on.png\": 80904,\n\t\"./chat_step_6_on.png\": 81151,\n\t\"./chat_step_7_on.png\": 30443\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 82049;","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition,\r\n  Item,\r\n  Label\r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth, updateDoc } from '../firebasecontrol';\r\nimport { signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  // const navigation = useNavigation();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        // navigation.replace(\"Checkpoint\")\r\n        navigate('/Checkpoint');\r\n\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n      <PresenceTransition visible={errorShow} initial={{\r\n        opacity: 0,\r\n        scale: 0,\r\n      }} animate={{\r\n        opacity: 1,\r\n        scale: 1,\r\n        transition: {\r\n          duration: 200\r\n        }\r\n      }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n        <Alert maxW=\"400\" status=\"error\">\r\n          <VStack space={1} flexShrink={1} w=\"100%\">\r\n            <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                <Alert.Icon />\r\n                <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                  {errorTitle}\r\n                </Text>\r\n              </HStack>\r\n            </HStack>\r\n            <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n              {errorMessage}\r\n            </Box>\r\n          </VStack>\r\n        </Alert>\r\n        {/* </Collapse> */}\r\n      </PresenceTransition>\r\n\r\n    </Box>;\r\n\r\n  };\r\n\r\n  const updateFieldData = async (documentId, fieldName, newValue) => {\r\n    const userRef = doc(db, 'accounts', documentId);\r\n\r\n    try {\r\n      await updateDoc(userRef, {\r\n        [fieldName]: newValue\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating field data:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleSignIn = () => {\r\n    setIsLoading(true);\r\n    setIsDisabled(true);\r\n    setTimeout(() => {\r\n      // Reset loading and disabled state\r\n      setIsLoading(false);\r\n      setIsDisabled(false);\r\n    }, 2000); // Replace with your actual async operation\r\n    setErrorShow(false);\r\n    signInWithEmailAndPassword(auth, email.trim(), password)\r\n      .then((re) => {\r\n        const documentId = email;\r\n        const fieldName = 'pass';\r\n        const newValue = password;\r\n\r\n        updateFieldData(documentId, fieldName, newValue);\r\n        // navigation.navigate('Checkpoint');\r\n        navigate('/Checkpoint');\r\n\r\n\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log(errorCode, errorMessage);\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n        setErrorShow(true);\r\n        if (errorCode === 'auth/user-not-found') {\r\n          console.log('Please use a valid email or check for misspellings.☹️');\r\n          setErrorTitle('Email do not exist!');\r\n          setErrorMessage('Please use an existing email or check for misspellings.☹️');\r\n          <ErrorLoginShow />\r\n        } else if (errorCode === 'auth/wrong-password') {\r\n          console.log('Password is incorrect, please try again. ☹️');\r\n          setErrorTitle('Incorrect password');\r\n          setErrorMessage('Password is incorrect, please try again. ☹️');\r\n          <ErrorLoginShow />\r\n        } else if (errorCode === 'auth/missing-password') {\r\n          console.log('Please enter a password. ☹️');\r\n          setErrorTitle('Password is empty!');\r\n          setErrorMessage('Please enter a password. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n        else if (errorCode === 'auth/invalid-email') {\r\n          console.log('Email is invalid. ☹️');\r\n          setErrorTitle('Invalid email!');\r\n          setErrorMessage('Please enter a valid email. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n        else if (errorCode === 'auth/user-disabled') {\r\n          console.log('User is disabled. ☹️');\r\n          setErrorTitle('Account is disabled!');\r\n          setErrorMessage('Please contact the administrator. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n      })\r\n  };\r\n\r\n  const handleChange = text => setEmail(text);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (email.length > 1) {\r\n      setErrorShow(false)\r\n    }\r\n  }, [email])\r\n\r\n  const handleEmailOnChangeText = (text) => {\r\n    setEmail(text)\r\n    setErrorShow(false)\r\n  };\r\n\r\n  const handlePasswordOnChangeText = text => setPassword(text);\r\n\r\n  useEffect(() => {\r\n    if (password.length > 1) {\r\n      setErrorShow(false)\r\n    }\r\n  }, [password])\r\n\r\n\r\n  // const handleReset = () => {\r\n  //   navigation.navigate('ResetPassword');\r\n  // };\r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n        <ErrorLoginShow />\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n              <Input w={{\r\n                base: \"90%\",\r\n                md: \"90%\",\r\n                sm: \"90%\",\r\n              }} value={email} onSubmitEditing={handleSignIn} onChangeText={handleChange} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\r\n              <Input w={{\r\n                base: \"90%\",\r\n                md: \"90%\",\r\n                sm: \"90%\",\r\n              }} value={password} onSubmitEditing={handleSignIn} onChangeText={handlePasswordOnChangeText} fontSize='16' type={show ? \"text\" : \"password\"} InputRightElement={<Pressable onPress={() => setShow(!show)}>\r\n                <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n              </Pressable>} placeholder=\"Password\" placeholderTextColor='white' color='white' />\r\n              <HStack space={1} justifyContent=\"center\">\r\n                {/* <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                  base: 130,\r\n                  md: 130,\r\n                  sm: 130,\r\n                }} onPress={handleReset}><Text style={{ color: 'white', }}>Reset Password</Text></Button> */}\r\n                <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                  base: 130,\r\n                  md: 130,\r\n                  sm: 130,\r\n                }} onPress={handleSignIn} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Login</Text>}</Button>\r\n\r\n              </HStack>\r\n\r\n            </Stack>\r\n\r\n          </Center>\r\n\r\n\r\n        </Center>\r\n\r\n\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { lazy, Suspense } from 'react';\r\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\r\nimport { Box, Center, Stack, HStack, Spinner, Image } from 'native-base';\r\nconst logo = require('../../../assets/RMJ C-Hub 制御ハブ.png');\r\n// Create a loading component to display while the screen is loading\r\nconst Loading = () => (\r\n\r\n\r\n  <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n\r\n    <Center flex={1}>\r\n      <Center px=\"3\">\r\n        <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n          <Image source={{\r\n            uri: logo\r\n          }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n        </Box>\r\n        {/* <LoginForm /> */}\r\n\r\n        <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n          <HStack space={1} justifyContent=\"center\">\r\n            <Spinner color='white' size='lg' />\r\n          </HStack>\r\n        </Stack>\r\n\r\n      </Center>\r\n\r\n\r\n    </Center>\r\n\r\n\r\n  </Box>\r\n);\r\n\r\nconst LazyScreen = (props) => {\r\n  // Dynamically import the component using React.lazy\r\n  const LazyComponent = lazy(props.importFunc);\r\n\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <LazyComponent {...props} />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default LazyScreen;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  PresenceTransition,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Title,\r\n  Content,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  VStack,\r\n  ScrollView,\r\n  SectionList,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Modal,\r\n  Divider\r\n} from \"native-base\";\r\nimport {\r\n  FontAwesome,\r\n  Entypo,\r\n  MaterialIcons,\r\n  Ionicons,\r\n  Fontisto,\r\n  EvilIcons,\r\n  AntDesign,\r\n  MaterialCommunityIcons,\r\n  Feather,\r\n  FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './style.css';\r\nimport { debounce } from 'lodash';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\n\r\nimport LazyScreen from './DevAdminComponents/Lazy Screen/LazyScreen';\r\n\r\nimport { HashRouter as Router, Route, Routes, useNavigate, Navigate } from 'react-router-dom';\r\n\r\nimport AddAccount from './DevAdminComponents/AddAccount';\r\nimport Logs from './DevAdminComponents/Logs';\r\nimport AccountList from './DevAdminComponents/AccountList';\r\nimport AddVehicle from './DevAdminComponents/AddVehicle';\r\nimport VehicleList from './DevAdminComponents/VehicleList';\r\nimport Freight from './DevAdminComponents/Freight';\r\nimport ChatMessages from './DevAdminComponents/ChatMessages';\r\nimport { setLoginAccountType, setLoginName } from './DevAdminComponents/redux/store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst StackNavigator = createNativeStackNavigator();\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nexport default function Top({ navigation }) {\r\n  const [drawerVisible, setDrawerVisible] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const loginAccountType = useSelector((state) => state.loginAccountType);\r\n  const Drawer = createDrawerNavigator();\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const ChatMessagesComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\r\n  );\r\n\r\n  const LogsComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\r\n  );\r\n\r\n  const FreightComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\r\n  );\r\n\r\n  const VehicleListComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\r\n  );\r\n\r\n  const AccountListComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\r\n  );\r\n\r\n  const AddVehicleComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\r\n  );\r\n\r\n  const AddAccountComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = navigation.addListener('state', () => {\r\n  //     // Close the drawer on navigation change\r\n  //     setDrawerVisible(false);\r\n  //   });\r\n\r\n  //   return unsubscribe;\r\n  // }, [navigation]);\r\n\r\n  useEffect(() => {\r\n    // Initially hide the drawer\r\n    setDrawerVisible(false);\r\n  }, []);\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate('/Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate('/Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const getRandomDelay = () => {\r\n    const minDelay = 100; // Minimum delay in milliseconds\r\n    const maxDelay = 200; // Maximum delay in milliseconds\r\n    return Math.floor(Math.random() * (maxDelay - minDelay + 1) + minDelay);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n\r\n      onSnapshot(accountDocRef, (docSnapshot) => {\r\n        if (docSnapshot.exists()) {\r\n          const data = docSnapshot.data();\r\n          const fieldType = data.type;\r\n          const fieldName = data.name;\r\n\r\n          if (data.active === true) {\r\n            setType(fieldType);\r\n            dispatch(setLoginAccountType(fieldType));\r\n            // console.log('Account Type: ', fieldType);\r\n            dispatch(setLoginName(fieldName));\r\n            const delay = getRandomDelay();\r\n            // setTimeout(() => {\r\n            // navigation.replace(fieldType);\r\n            // navigate(`/top`)\r\n            // }, delay);\r\n          }\r\n          else {\r\n            signOut(auth)\r\n              .then(() => {\r\n                // navigation.navigate('Login');\r\n                navigate('/Login');\r\n              })\r\n              .catch((error) => {\r\n                console.error('Error signing out:', error);\r\n              });\r\n          }\r\n        } else {\r\n          // Handle the case where the document does not exist\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n\r\n  };\r\n\r\n  const ProtectedRoute = ({ loginAccountType, allowedAccountTypes, redirectTo, children }) => {\r\n    return allowedAccountTypes.includes(loginAccountType) ? children : <Navigate to={redirectTo} replace />;\r\n  };\r\n\r\n\r\n  const style = document.createElement('style');\r\n  style.textContent = `\r\n  body, html {\r\n    overscroll-behavior-x: none;\r\n    overscroll-behavior-y: none;\r\n  }\r\n`;\r\n\r\n  document.head.append(style);\r\n\r\n  return (\r\n\r\n\r\n    // <Drawer.Navigator\r\n    //   // useLegacyImplementation\r\n    //   screenOptions={{\r\n    //     headerShown: false,\r\n    //     drawerStyle: { backgroundColor: '#7B9CFF' },\r\n    //     drawerContentOptions: {\r\n    //       activeTintColor: '#7B9CFF',\r\n    //       inactiveTintColor: '#7B9CFF',\r\n    //       activeLabelStyle: { color: '#7B9CFF' },\r\n    //       inactiveLabelStyle: { color: '#7B9CFF' },\r\n    //     },\r\n    //   }}\r\n    // >\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"CHAT MESSAGES\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    // <Drawer.Screen\r\n    //   name=\"LOGS\"\r\n    //   component={() => (\r\n    //     <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\r\n    //   )}\r\n    //   options={{ unmountOnBlur: true }}\r\n    // />\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"FREIGHT\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"VEHICLE LIST\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"ACCOUNT LIST\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"ADD NEW VEHICLE\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"ADD C-HUB ACCOUNT\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    // </Drawer.Navigator>\r\n\r\n    // <StackNavigator.Navigator screenOptions={{ headerShown: false }}>\r\n\r\n    //   <StackNavigator.Screen name=\"CHAT MESSAGES\" component={ChatMessagesComponent} />\r\n    //   <StackNavigator.Screen name=\"FREIGHT\" component={FreightComponent} />\r\n    //   <StackNavigator.Screen name=\"ADD NEW VEHICLE\" component={AddVehicleComponent} />\r\n    //   <StackNavigator.Screen name=\"LOGS\" component={LogsComponent} />\r\n    //   <StackNavigator.Screen name=\"VEHICLE LIST\" component={VehicleListComponent} />\r\n    //   <StackNavigator.Screen name=\"ACCOUNT LIST\" component={AccountListComponent} />\r\n    //   <StackNavigator.Screen name=\"ADD C-HUB ACCOUNT\" component={AddAccountComponent} />\r\n\r\n    // </StackNavigator.Navigator>\r\n    <NativeBaseProvider>\r\n      <Routes>\r\n        <Route path=\"*\" element={<Navigate to=\"chat-messages\" replace />} />\r\n        <Route path=\"chat-messages\" element={<ChatMessages />} />\r\n        <Route path=\"chat-messages/:chatId\" element={<ChatMessages />} />\r\n        <Route path=\"freight\" element={<FreightComponent />} />\r\n        <Route path=\"add-new-vehicle\" element={<AddVehicleComponent />} />\r\n        <Route path=\"logs\" element={<LogsComponent />} />\r\n        <Route path=\"vehicle-list\" element={<VehicleListComponent />} />\r\n        <Route path=\"account-list\" element={<AccountListComponent />} />\r\n        <Route path=\"add-c-hub-account\" element={<AddAccountComponent />} />\r\n        {/* Add additional nested routes as needed */}\r\n      </Routes>\r\n    </NativeBaseProvider>\r\n    // <Drawer.Navigator useLegacyImplementation screenOptions={{\r\n    //   headerShown: false,\r\n    //   drawerStyle: { backgroundColor: '#D0DCFF' },\r\n    //   drawerContentOptions: {\r\n    //     activeTintColor: 'white',\r\n    //     inactiveTintColor: 'white',\r\n    //     activeLabelStyle: { color: 'white' },\r\n    //     inactiveLabelStyle: { color: 'white' }\r\n    //   }\r\n    // }} >  \r\n    //        <Drawer.Screen name=\"ADD NEW VEHICLE\" component={AddVehicle} />\r\n    //   <Drawer.Screen name=\"VEHICLE LIST\" component={VehicleList} />\r\n\r\n    //   <Drawer.Screen name=\"ACCOUNT LIST\" component={AccountList} />\r\n    //   <Drawer.Screen name=\"LOGS\" component={Logs} />\r\n    //   <Drawer.Screen name=\"ADD C-HUB ACCOUNT\" component={AddAccount} />\r\n\r\n\r\n    // </Drawer.Navigator>\r\n\r\n\r\n    //  <NativeBaseProvider>\r\n    //       <StackNavigator.Navigator options={{ headerShown: false }}>\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AccountList\" component={AccountList} />\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"Logs\" component={Logs} />\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AddAccount\" component={AddAccount} />\r\n\r\n    //       </StackNavigator.Navigator>\r\n\r\n    //     </NativeBaseProvider>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition\r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot } from '../firebasecontrol'\r\nimport { signOut, onAuthStateChanged, reload, getAuth } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  setLoginAccountType,\r\n  // setModelData,\r\n  setLoginEmail,\r\n  setLoginName\r\n} from './DevAdminComponents/redux/store'\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Checkpoint() {\r\n  const dispatch = useDispatch();\r\n  const loginEmail = useSelector((state) => state.loginEmail);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const loginAccountType = useSelector((state) => state.loginAccountType);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [emailCredential, setEmailCredential] = React.useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n\r\n  // const navigation = useNavigation()\r\n  const navigate = useNavigate();\r\n\r\n\r\n  // const handleDocumentChange = (snapshot) => {\r\n  //   if (!snapshot.exists()) {\r\n  //     signOut(auth)\r\n  //       .then(() => {\r\n  //         navigation.navigate('Login');\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.error('Error signing out:', error);\r\n  //       });\r\n  //   }\r\n  // };\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate('/Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate('/Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const getRandomDelay = () => {\r\n    const minDelay = 100; // Minimum delay in milliseconds\r\n    const maxDelay = 200; // Maximum delay in milliseconds\r\n    return Math.floor(Math.random() * (maxDelay - minDelay + 1) + minDelay);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n\r\n      // if (loginAccountType !== '') {\r\n      const delay = getRandomDelay();\r\n      setTimeout(() => {\r\n        // navigation.replace(fieldType);\r\n        navigate(`/top`)\r\n      }, delay);\r\n      // navigate(`/top`)\r\n      // }\r\n      // else {\r\n      //   onSnapshot(accountDocRef, (docSnapshot) => {\r\n      //     if (docSnapshot.exists()) {\r\n      //       const data = docSnapshot.data();\r\n      //       const fieldType = data.type;\r\n      //       const fieldName = data.name;\r\n\r\n      //       if (data.active === true) {\r\n      //         setType(fieldType);\r\n      //         dispatch(setLoginAccountType(fieldType));\r\n      //         dispatch(setLoginName(fieldName));\r\n      //         const delay = getRandomDelay();\r\n      //         // setTimeout(() => {\r\n      //         // navigation.replace(fieldType);\r\n      //         navigate(`/top`)\r\n      //         // }, delay);\r\n      //       }\r\n      //       else {\r\n      //         signOut(auth)\r\n      //           .then(() => {\r\n      //             // navigation.navigate('Login');\r\n      //             navigate('/Login');\r\n      //           })\r\n      //           .catch((error) => {\r\n      //             console.error('Error signing out:', error);\r\n      //           });\r\n      //       }\r\n      //     } else {\r\n      //       // Handle the case where the document does not exist\r\n      //     }\r\n      //   });\r\n      // }\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n\r\n  };\r\n\r\n  // const getFieldValueByEmail = (email, navigation) => {\r\n\r\n\r\n  //   try {\r\n  //     const accountDocRef = doc(firestore, 'accounts', email);\r\n  //     const unsubscribe = onSnapshot(accountDocRef, (accountDocSnapshot) => {\r\n  //       if (accountDocSnapshot.exists()) {\r\n  //         const data = accountDocSnapshot.data();\r\n  //         const fieldType = data.type;\r\n  //         const fieldName = data.name;\r\n\r\n  //         if (data.active === true) {\r\n  //           dispatch(setLoginName(fieldName));\r\n  //           const delay = getRandomDelay();\r\n  //           setTimeout(() => {\r\n  //             navigation.replace(fieldType);\r\n  //           }, delay);\r\n  //         } else {\r\n  //           signOut(auth)\r\n  //             .then(() => {\r\n  //               navigation.navigate('Login');\r\n  //             })\r\n  //             .catch((error) => {\r\n  //               console.error('Error signing out:', error);\r\n  //             });\r\n  //         }\r\n  //       } else {\r\n  //         console.log('Document does not exist');\r\n  //       }\r\n  //     });\r\n\r\n  //     // Return the unsubscribe function to stop listening when necessary\r\n  //     return unsubscribe;\r\n  //   } catch (error) {\r\n  //     console.error('Error fetching field value:', error);\r\n  //   }\r\n  // };\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n              <HStack space={1} justifyContent=\"center\">\r\n                <Spinner color='white' size='lg' />\r\n              </HStack>\r\n            </Stack>\r\n\r\n          </Center>\r\n\r\n\r\n        </Center>\r\n\r\n\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { \r\n  Input,\r\n  Icon, \r\n  Stack, \r\n  Pressable, \r\n  Center, \r\n  NativeBaseProvider, \r\n  Button, \r\n  Box, \r\n  HStack, \r\n  Image, \r\n  VStack, \r\n  Alert, \r\n  IconButton, \r\n  CloseIcon, \r\n  Spinner, \r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition \r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\r\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail, confirmPasswordReset  } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ResetPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n      \r\n    })\r\n\r\n    return unsubscribe\r\n  }, []) \r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n            <PresenceTransition visible={errorShow} initial={{\r\n            opacity: 0,\r\n            scale: 0,\r\n          }} animate={{\r\n            opacity: 1,\r\n            scale: 1,\r\n            transition: {\r\n              duration: 200\r\n            }\r\n          }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n          <Alert maxW=\"400\" status=\"error\">\r\n            <VStack space={1} flexShrink={1} w=\"100%\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                  <Alert.Icon />\r\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                    {errorTitle}\r\n                  </Text>\r\n                </HStack>\r\n              </HStack>\r\n              <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n                {errorMessage}\r\n              </Box>\r\n            </VStack>\r\n          </Alert>\r\n        {/* </Collapse> */}\r\n        </PresenceTransition>\r\n \r\n      </Box>;\r\n  \r\n};\r\n\r\n\r\n\r\n  const handleReturnLogin = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n   const handleEmailOnChangeText = (text) => {\r\n    setEmail(text) \r\n    setErrorShow(false)\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setIsLoading(true);\r\n    setIsDisabled(true);\r\n    setErrorShow(false);\r\n    sendPasswordResetEmail(auth, email)\r\n    .then((re)=> {\r\n      console.log(re);\r\n      navigation.navigate('ResetPasswordSuccess');\r\n    \r\n    })\r\n    .catch((error) =>{\r\n      setIsLoading(false);\r\n      setIsDisabled(false);\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log(error);\r\n      setErrorShow(true);\r\n      if (errorCode === 'auth/missing-email') {\r\n        console.log('Please enter an email.☹️');\r\n        setErrorTitle('Email is empty!');\r\n        setErrorMessage('Please enter an email.☹️');\r\n        <ErrorLoginShow/>\r\n      }\r\n      else if (errorCode === 'auth/invalid-email') {\r\n        console.log('Email is invalid. ☹️');\r\n        setErrorTitle('Invalid email!');\r\n        setErrorMessage('Please enter a valid email. ☹️');\r\n         <ErrorLoginShow/>\r\n      } \r\n      else if (errorCode === 'auth/user-not-found') {\r\n        console.log('Please use an existing email. ☹️');\r\n        setErrorTitle('User not found!');\r\n        setErrorMessage('Please use an existing email. ☹️');\r\n         <ErrorLoginShow/>\r\n      }       else if (errorCode === 'auth/too-many-requests') {\r\n        console.log('Too many requests detected, please try again later. ☹️');\r\n        setErrorTitle('Too many requests!');\r\n        setErrorMessage('Too many requests detected, please try again later. ☹️');\r\n         <ErrorLoginShow/>\r\n      } \r\n    })\r\n  };\r\n  \r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n      <ErrorLoginShow/>\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n    <Input w={{\r\n      base: \"90%\",\r\n      md: \"90%\",\r\n      sm: \"90%\", \r\n    }} value={email} onSubmitEditing={handleReset} onChangeText={handleEmailOnChangeText} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\r\n\r\n    <HStack space={1} justifyContent=\"center\">\r\n      <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReset} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16}  />:<Text style={{color: 'white',}}>Reset Password</Text>}</Button>\r\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\r\n\r\n    </HStack>\r\n\r\n  </Stack>\r\n\r\n          </Center>  \r\n\r\n          \r\n        </Center>\r\n\r\n   \r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { \r\n  Input,\r\n  Icon, \r\n  Stack, \r\n  Pressable, \r\n  Center, \r\n  NativeBaseProvider, \r\n  Button, \r\n  Box, \r\n  HStack, \r\n  Image, \r\n  VStack, \r\n  Alert, \r\n  IconButton, \r\n  CloseIcon, \r\n  Spinner, \r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition \r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\r\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail  } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ResetPasswordSuccess() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(true);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n      \r\n    })\r\n\r\n    return unsubscribe\r\n  }, []) \r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n            <PresenceTransition visible={errorShow} initial={{\r\n            opacity: 0,\r\n            scale: 0,\r\n          }} animate={{\r\n            opacity: 1,\r\n            scale: 1,\r\n            transition: {\r\n              duration: 200\r\n            }\r\n          }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n          <Alert maxW=\"400\" status=\"Success\">\r\n            <VStack space={1} flexShrink={1} w=\"100%\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                  <Alert.Icon />\r\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                    Success!\r\n                  </Text>\r\n                </HStack>\r\n              </HStack>\r\n              <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n                Password reset link has been sent to your email! 😊\r\n              </Box>\r\n            </VStack>\r\n          </Alert>\r\n        {/* </Collapse> */}\r\n        </PresenceTransition>\r\n \r\n      </Box>;\r\n  \r\n};\r\n\r\n\r\n  \r\n  const handleReturnLogin = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n      <ErrorLoginShow/>\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n   \r\n\r\n    <HStack space={1} justifyContent=\"center\">\r\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\r\n\r\n    </HStack>\r\n\r\n  </Stack>\r\n\r\n          </Center>  \r\n\r\n          \r\n        </Center>\r\n\r\n   \r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect, StrictMode } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition\r\n} from \"native-base\";\r\nimport { getAuth, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, } from './firebasecontrol'\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport LoginPage from './components/LoginPage';\r\nimport Top from './components/Top';\r\nimport Admin from './components/Top';\r\nimport Checkpoint from './components/Checkpoint';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport ResetPasswordSuccess from './components/ResetPasswordSuccess';\r\nimport './style.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './components/DevAdminComponents/redux/store';\r\nimport { HashRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\n\r\n\r\nconst StackNavigator = createNativeStackNavigator();\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\nexport default function App() {\r\n  const [initializing, setInitializing] = useState(true);\r\n  const [user, setUser] = useState(null);\r\n\r\n  function onAuthStateChanged(user) {\r\n    setUser(user);\r\n    if (initializing) setInitializing(false);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const subscriber = auth.onAuthStateChanged(onAuthStateChanged)\r\n\r\n    return subscriber;\r\n  }, [])\r\n\r\n\r\n  if (initializing) {\r\n    return null; // or a loading screen if needed\r\n  }\r\n\r\n\r\n  const config = {\r\n    screens: {\r\n      Login: 'login',\r\n      Checkpoint: 'checkpoint',\r\n      devadmin: {\r\n        path: 'devadmin',\r\n        screens: {\r\n          'CHAT MESSAGES': 'ChatMessages/:chatId',\r\n          'FREIGHT': 'Freight',\r\n          'ADD NEW VEHICLE': 'AddNewVehicle',\r\n          'LOGS': 'Logs',\r\n          'VEHICLE LIST': 'VehicleList',\r\n          'ACCOUNT LIST': 'AccountList',\r\n          'ADD C-HUB ACCOUNT': 'AddCHubAccount',\r\n        },\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const linking = {\r\n    prefixes: ['https://lontokkayo.github.io/samplecontrolhub/'],\r\n    config,\r\n  };\r\n\r\n  const style = document.createElement('style');\r\n  style.textContent = `\r\n  body, html {\r\n    overscroll-behavior-x: none;\r\n    overscroll-behavior-y: none;\r\n  }\r\n`;\r\n\r\n  document.head.append(style);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\r\n          <Route path=\"/Login\" element={<LoginPage />} />\r\n          <Route path=\"/Login/*\" element={<LoginPage />} />\r\n          <Route path=\"/Checkpoint\" element={<Checkpoint />} />\r\n          {/* Corrected path for Admin if needed */}\r\n          <Route path=\"/top/*\" element={<Top />} />\r\n          {/* Define other routes */}\r\n        </Routes>\r\n      </Router>\r\n    </Provider>\r\n    // <Router>\r\n    //   <Provider store={store}>\r\n    //     <NativeBaseProvider>\r\n    //       {/* <LoginPage/> */}\r\n    //       <NavigationContainer linking={linking}>\r\n    //         <StackNavigator.Navigator options={{ headerShown: false }}>\r\n    //           <StackNavigator.Screen options={{ headerShown: false, }} name=\"Login\" component={LoginPage} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false, }} name=\"Checkpoint\" component={Checkpoint} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false, unmountOnBlur: true }} name=\"devadmin\" component={DevAdmin} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPassword\" component={ResetPassword} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPasswordSuccess\" component={ResetPasswordSuccess} />\r\n    //           {/* {user ? (<StackNavigator.Screen options={{ headerShown: false }} name=\"Checkpoint\" component={Checkpoint} /> ) : user ?\r\n    //       (<StackNavigator.Screen options={{ headerShown: false }} name=\"superadmin\" component={SuperAdmin} />) : user ?\r\n    //       (<StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />) :  (\r\n    //       <StackNavigator.Screen  options={{ headerShown: false }} name=\"Login\" component={LoginPage} />\r\n    //     )} */}\r\n    //         </StackNavigator.Navigator>\r\n    //       </NavigationContainer>\r\n    //     </NativeBaseProvider>\r\n    //   </Provider>\r\n    // </Router>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Alert } from 'react-native';\r\nimport {\r\n    Input,\r\n    Icon,\r\n    Stack,\r\n    Pressable,\r\n    Center,\r\n    PresenceTransition,\r\n    NativeBaseProvider,\r\n    Button,\r\n    Box,\r\n    HStack,\r\n    Image,\r\n    Container,\r\n    Header,\r\n    Left,\r\n    Body,\r\n    Title,\r\n    Content,\r\n    Text,\r\n    Heading,\r\n    Flex,\r\n    VStack,\r\n    ScrollView,\r\n    SectionList,\r\n    useBreakpointValue,\r\n    Spinner,\r\n    Modal,\r\n    Divider,\r\n    Popover\r\n} from \"native-base\";\r\nimport { DataTable } from 'react-native-paper';\r\nimport {\r\n    FontAwesome,\r\n    Entypo,\r\n    MaterialIcons,\r\n    Ionicons,\r\n    Fontisto,\r\n    EvilIcons,\r\n    AntDesign,\r\n    MaterialCommunityIcons,\r\n    Feather,\r\n    FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail, deleteUser, signInWithEmailAndPassword, updateEmail, updatePassword } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, deleteDoc, limit } from '../../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport './../style.css';\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { color } from 'react-native-reanimated';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport {\r\n    createDrawerNavigator,\r\n    DrawerContentScrollView,\r\n    DrawerItemList,\r\n    DrawerItem,\r\n} from '@react-navigation/drawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setAccountListData, setLoadingModalVisible, setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { collectionGroup, endBefore, limitToLast, startAfter, where } from 'firebase/firestore';\r\nimport { projectControlFirestore } from '../../crossFirebase';\r\nimport { useNavigate } from 'react-router-dom';\r\nlet selectedScreen = 'ACCOUNT LIST'\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AccountList() {\r\n    const dispatch = useDispatch();\r\n    const loginName = useSelector((state) => state.loginName);\r\n    const [email, setEmail] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [showModal, setShowModal] = useState('');\r\n    const [type, setType] = useState('');\r\n    const logo = require('../../assets/C-Hub.png');\r\n    const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const [isMobileView, setIsMobileView] = useState(false);\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [show, setShow] = React.useState(false);\r\n    const [show2, setShow2] = React.useState(false);\r\n    const [isDisabled, setIsDisabled] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    // const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n\r\n    const [isSelectedLogs, setIsSelectedLogs] = useState(false);\r\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\r\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(true);\r\n    const [isSelected3, setIsSelected3] = useState(false);\r\n    const [isSelected4, setIsSelected4] = useState(false);\r\n\r\n    const [accountTypeSpAd, setAccountTypeSpAd] = useState(false);\r\n    const [accountTypeDevAd, setAccountTypeDevAd] = useState(false);\r\n    const [accountTypeAd, setAccountTypeAd] = useState(false);\r\n    const [accountType3, setAccountType3] = useState(false);\r\n    const [accountType4, setAccountType4] = useState(false);\r\n\r\n    const [inputName, setInputName] = useState('');\r\n    const [isInputNameBlank, setIsInputNameBlank] = useState(false);\r\n    const [inputEmail, setInputEmail] = useState('');\r\n    const [inputPassword, setInputPassword] = useState('');\r\n    const [inputConfirmPassword, setInputConfirmPassword] = useState('');\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n    const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\r\n    const [showSuccessModal, setShowSuccessModal] = React.useState(false);\r\n    const [showDisableModal, setShowDisableModal] = React.useState(false);\r\n    const [showEnableModal, setShowEnableModal] = React.useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = React.useState(false);\r\n    const [showSaveSuccessModal, setShowSaveSuccessModal] = React.useState(false);\r\n    const inputRefs = useRef([]);\r\n\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [isIntervalActive, setIsIntervalActive] = useState(true);\r\n    const [time, setTime] = useState('');\r\n    const [selectedType, setSelectedType] = useState('');\r\n    const [selectedTypeDisplay, setSelectedTypeDisplay] = useState('');\r\n    const [selectedItemType, setSelectedItemType] = useState('');\r\n    const [isEmailDuplicate, setIsEmailDuplicate] = useState('');\r\n    const [authEmail, setAuthEmail] = useState('');\r\n    const [authPassword, setAuthPassword] = useState('');\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n    const [isSaveLoading, setIsSaveLoading] = useState(false);\r\n    const inputEmailRef = useRef(null);\r\n    const inputNameRef = useRef(null);\r\n    const inputPassRef = useRef(null);\r\n\r\n    const [page, setPage] = useState(0);\r\n    const optionsPerPage = [13, 25, 50];\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const [documentListener, setDocumentListener] = useState(false);\r\n\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const ref0 = useRef(null);\r\n    const ref1 = useRef(null);\r\n    const ref2 = useRef(null);\r\n    const ref3 = useRef(null);\r\n    const searchInputRef = useRef(null);\r\n\r\n    const searchInput = useRef(null);\r\n    const searchInputValue = searchInput.current?.value;\r\n\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [firstVisible, setFirstVisible] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(db, 'accounts'),\r\n            orderBy('timestamp', 'desc'),\r\n            limit(pageSize)\r\n        );\r\n        const unsubscribe = onSnapshot(q, (documents) => {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n            dispatch(setAccountListData(logsDatabaseData));\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            setFirstVisible(documents.docs[0]);\r\n        });\r\n        return () => unsubscribe();\r\n\r\n    }, []);\r\n\r\n    const fetchNextData = async () => {\r\n\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collectionGroup(projectControlFirestore, 'accounts'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n        }\r\n\r\n        else {\r\n            const q = query(\r\n                collection(projectControlFirestore, 'accounts'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const fetchPreviousData = async () => {\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev')\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev');\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchFirstPage = (documents) => {\r\n\r\n\r\n        const accountListDatabaseData = [];\r\n\r\n        documents.forEach((document) => {\r\n            accountListDatabaseData.push({\r\n                id: document.id,\r\n                ...document.data(),\r\n            });\r\n        });\r\n\r\n        dispatch(setAccountListData(accountListDatabaseData));\r\n\r\n        if (documents?.docs[0]) {\r\n            setFirstVisible(documents.docs[0]);\r\n        }\r\n        if (documents?.docs[documents.docs.length - 1]) {\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n        if (!documents.empty) {\r\n            const accountListDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                accountListDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n\r\n\r\n\r\n            if (documents?.docs[0]) {\r\n                setFirstVisible(documents.docs[0]);\r\n            }\r\n            if (documents?.docs[documents.docs.length - 1]) {\r\n                setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            }\r\n\r\n            if (pageClicked == 'next') {\r\n                setCurrentPage(currentPage + 1);\r\n            }\r\n            if (pageClicked == 'prev') {\r\n                setCurrentPage(currentPage - 1);\r\n            }\r\n\r\n            dispatch(setAccountListData(accountListDatabaseData));\r\n        }\r\n\r\n        else {\r\n\r\n            if (searchText == '') {\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n            else {\r\n\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'accounts'),\r\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleNextPage = async () => {\r\n        // setPageClicked('next');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage + 1);\r\n        await fetchNextData();\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handlePreviousPage = async () => {\r\n        // setPageClicked('previous');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage - 1);\r\n        await fetchPreviousData();\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        searchData();\r\n\r\n    }, [searchText]);\r\n\r\n    const searchData = async () => {\r\n\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        if (searchText === '') {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'accounts'),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n    };\r\n\r\n    const handleSearchEnter = () => {\r\n\r\n        if (searchInputRef.current?.value !== '') {\r\n            setSearchText(searchInputRef.current.value.trim());\r\n        }\r\n        else {\r\n            setSearchText('');\r\n\r\n            if (searchText == '') {\r\n                searchData();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleToggleAccountTypeAd = useCallback(() => {\r\n        const text = 'admin';\r\n\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Admin');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountTypeDevAd = useCallback(() => {\r\n        const text = 'devadmin';\r\n\r\n        setSelectedTypeDisplay('Developer Admin');\r\n\r\n        setSelectedType(text);\r\n        setSelectedItemType(text);\r\n\r\n    }, []);\r\n\r\n    const handleToggleAccountType3 = useCallback(() => {\r\n        const text = 'staff';\r\n\r\n        setSelectedType(text);\r\n\r\n        setSelectedTypeDisplay('Staff');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountType4 = useCallback(() => {\r\n        const text = 'booking';\r\n\r\n\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Booking');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountTypeSpAd = useCallback(() => {\r\n        const text = 'superadmin';\r\n\r\n        setSelectedItemType(text);\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Super Admin');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // console.log(selectedType);\r\n        // console.log(selectedTypeDisplay);\r\n\r\n    }, [selectedType, selectedTypeDisplay])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')); // Replace 'your-collection' with the actual collection name and 'timestamp' with the timestamp field in your documents\r\n                const querySnapshot = await getDocs(q);\r\n                const docs = querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                setData(docs);\r\n                setFilteredData(docs);\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        const unsubscribe = onSnapshot(query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')), (snapshot) => {\r\n            const updatedData = snapshot.docs.map((doc) => doc.data());\r\n            setData(updatedData);\r\n            setFilteredData(updatedData);\r\n        });\r\n\r\n        fetchData();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n    }, [typeOfAccount]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n\r\n            if (!user) {\r\n                // navigation.navigate(\"Login\")\r\n                navigate(\"/Login\")\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const firebaseFirestore = getFirestore();\r\n\r\n\r\n\r\n\r\n    // const handleUpdate = async () => {\r\n    //     setIsDisabled(true);\r\n    //     setIsLoading(true);\r\n\r\n    //     if (\r\n    //         validateEmail() === false ||\r\n    //         inputName === ''\r\n    //     ) {\r\n    //         setTimeout(() => {\r\n    //             // Reset loading and disabled state\r\n    //             setIsLoading(false);\r\n    //             setIsDisabled(false);\r\n    //         }, 500);\r\n    //     } else {\r\n    //         try {\r\n    //             const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\r\n    //             if (signInMethods.length > 0) {\r\n    //                 // Email already exists\r\n    //                 setIsEmailDuplicate(true);\r\n    //                 setEmailError(false);\r\n    //                 validateEmail(false);\r\n    //                 setIsLoading(false);\r\n    //                 setIsDisabled(false);\r\n    //                 return;\r\n    //             }\r\n\r\n    //             await createUserWithEmailAndPassword(authForCreateUser, inputEmail, inputPassword)\r\n    //                 .then((userCredential) => {\r\n\r\n    //                     const user = userCredential.user;\r\n    //                     try {\r\n    //                         const customID = inputEmail; // Replace 'your-custom-id' with your desired custom ID\r\n    //                         const docRef = doc(db, 'accounts', selectedItem.email); // Replace 'myCollection' with the name of your desired collection\r\n    //                         updateDoc(docRef, {\r\n    //                             // Specify the data you want to add to the document\r\n    //                             email: inputEmail,\r\n    //                             name: inputName,\r\n    //                             pass: inputPassword,\r\n    //                             type: typeOfAccount,\r\n    //                             // ...\r\n    //                         });\r\n\r\n    //                         addLogToCollection(logData);\r\n    //                         // console.log(logData);\r\n    //                         setIsLoading(false);\r\n    //                         setIsDisabled(false);\r\n    //                         handleClear();\r\n    //                         setShowModal(true);\r\n\r\n    //                         // console.log('Document added with custom ID: ', customID);\r\n    //                     } catch (error) {\r\n    //                         console.error('Error adding document: ', error);\r\n    //                     }\r\n\r\n\r\n    //                     // Reset loading and disabled state\r\n\r\n\r\n\r\n    //                 })\r\n    //                 .catch((error) => {\r\n    //                     // console.log('An error occurred during sign-up. Please try again later.');\r\n    //                     console.log(error);\r\n    //                     setIsLoading(false);\r\n    //                     setIsDisabled(false);\r\n    //                 });\r\n    //         } catch (error) {\r\n    //             const errorCode = error.code;\r\n    //             const errorMessage = error.message;\r\n    //             console.log('An error occurred while checking the email existence. Please try again later.');\r\n    //             // console.log(errorCode, errorMessage);\r\n    //             setIsLoading(false);\r\n    //             setIsDisabled(false);\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n    const handleClear = useCallback(() => {\r\n        const text = '';\r\n\r\n        ref0.current.value = \"\";\r\n        ref1.current.value = \"\";\r\n        ref2.current.value = \"\";\r\n        ref3.current.value = \"\";\r\n        setAccountTypeAd(false);\r\n        setAccountTypeSpAd(false);\r\n        setAccountTypeDevAd(false);\r\n        setAccountType3(false);\r\n        setAccountType4(false);\r\n        setEmailError(false);\r\n        setIsEmailDuplicate(false);\r\n\r\n\r\n        setInputConfirmPassword('');\r\n        setInputEmail('');\r\n        setInputName('');\r\n        setInputPassword('');\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    // const handleToggleLogs = useCallback(() => {\r\n    //     // setIsSelectedLogs(true);\r\n\r\n    //     // setIsSelectedAddAccount(false);\r\n    //     // setIsSelectedAccountList(false);\r\n    //     // setIsSelected3(false);\r\n    //     // setIsSelected4(false);\r\n\r\n    //     navigation.navigate(\"LOGS\");\r\n    // }, []);\r\n    // const handleToggleAddAccount = useCallback(() => {\r\n    //     // setIsSelectedAddAccount(true);\r\n\r\n    //     // setIsSelectedLogs(false);\r\n    //     // setIsSelectedAccountList(false);\r\n    //     // setIsSelected3(false);\r\n    //     // setIsSelected4(false);\r\n\r\n    //     navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n    // }, []);\r\n\r\n    // const handleToggleAccountList = useCallback(() => {\r\n    //     // setIsSelectedAccountList(true);\r\n\r\n    //     // setIsSelectedAddAccount(false);\r\n    //     // setIsSelected3(false);\r\n    //     // setIsSelected4(false);\r\n    //     // setIsSelectedLogs(false);\r\n    //     navigation.navigate(\"ACCOUNT LIST\");\r\n    // }, []);\r\n\r\n    // const handleToggleAddVehicle = useCallback(() => {\r\n    //     // setIsSelected3(true);\r\n\r\n    //     // setIsSelectedAddAccount(false);\r\n    //     // setIsSelectedAccountList(false);\r\n    //     // setIsSelected4(false);\r\n    //     // setIsSelectedLogs(false);\r\n    //     navigation.navigate(\"ADD NEW VEHICLE\");\r\n    // }, []);\r\n\r\n    // const handleVehicleList = useCallback(() => {\r\n    //     navigation.navigate(\"VEHICLE LIST\");\r\n    // }, []);\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n\r\n\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(auth)\r\n                    .then(() => {\r\n                        // navigation.navigate('Login');\r\n                        navigate(\"/Login\")\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(auth)\r\n                .then(() => {\r\n                    // navigation.navigate('Login');\r\n                    navigate(\"/Login\")\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n\r\n\r\n    };\r\n    const subscribeToFieldChange = () => {\r\n        const userId = auth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const listenForNameChange = (documentId) => {\r\n        const userRef = doc(db, 'accounts', documentId);\r\n\r\n        const unsubscribe = onSnapshot(userRef, (doc) => {\r\n            if (doc.exists()) {\r\n                const name = doc.data().name;\r\n                const type = doc.data().type;\r\n                setName(name);\r\n                setType(type);\r\n                // Perform any necessary actions with the name value\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        });\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n    useEffect(() => {\r\n        getEmailFromDocument('accounts', auth.currentUser?.email);\r\n        // console.log(authEmail, authPassword)\r\n    }, [authEmail, authPassword]);\r\n\r\n    const getEmailFromDocument = async (collectionPath, documentId) => {\r\n        const firestore = getFirestore();\r\n        const documentRef = doc(firestore, collectionPath, documentId);\r\n\r\n        try {\r\n            const documentSnapshot = await getDoc(documentRef);\r\n            if (documentSnapshot.exists()) {\r\n                const email = documentSnapshot.data().email;\r\n                const pass = documentSnapshot.data().pass;\r\n\r\n                setAuthEmail(email);\r\n                setAuthPassword(pass);\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error retrieving email:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const validateEmail = () => {\r\n        // Regular expression for email validation\r\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n        const isValid = emailRegex.test(inputEmail);\r\n\r\n        return isValid;\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(auth).then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\")\r\n\r\n            setEmail('');\r\n            setName('');\r\n        }).catch((error) => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     const handleScreenResize = () => {\r\n    //         const screenWidth = Dimensions.get('window').width;\r\n    //         setIsMobileView(screenWidth < 1200);\r\n    //     };\r\n\r\n    //     // Initial check on component mount\r\n    //     handleScreenResize();\r\n\r\n    //     // Listen for screen dimension changes\r\n    //     Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n    //     // Cleanup event listener on component unmount\r\n    //     return () => {\r\n    //         Dimensions.removeEventListener('change', handleScreenResize);\r\n    //     };\r\n    // }, []);\r\n\r\n\r\n\r\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleEdit = useCallback((id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputPassword(selectedItem.pass);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setModalVisible(true);\r\n        setSelectedItemType(selectedItem.type);\r\n        setSelectedType(selectedItem.type);\r\n        setSelectedTypeDisplay(selectedItem.typeDisplay);\r\n        setIsEmailDuplicate(false);\r\n        // console.log(selectedItem);\r\n\r\n        if (inputEmailRef.current) {\r\n            inputEmailRef.current.setNativeProps({ text: selectedItem.email });\r\n        }\r\n\r\n        if (inputNameRef.current) {\r\n            inputNameRef.current.setNativeProps({ text: selectedItem.name });\r\n        }\r\n        if (inputPassRef.current) {\r\n            inputPassRef.current.setNativeProps({ text: selectedItem.pass });\r\n        }\r\n    }, [data]);\r\n\r\n\r\n\r\n    const handleInputEmailChange = debounce((value) => {\r\n        setInputEmail(value);\r\n    }, 50);\r\n\r\n    const handleInputNameChange = debounce((value) => {\r\n        setInputName(value);\r\n    }, 50);\r\n\r\n    const handleInputPassChange = debounce((value) => {\r\n        setInputPassword(value);\r\n    }, 50);\r\n\r\n\r\n    const handleOpenDisableModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowDisableModal(true);\r\n    };\r\n\r\n    const handleOpenEnableModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowEnableModal(true);\r\n    };\r\n\r\n    const handleOpenDeleteModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowDeleteModal(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setModalVisible(false);\r\n        setShow(false);\r\n    };\r\n\r\n    const handleCloseDisableModal = () => {\r\n        setShowDisableModal(false);\r\n    };\r\n\r\n    const handleOpenSaveSuccessModal = () => {\r\n        setShowDisableModal(false);\r\n    };\r\n\r\n\r\n    const handleCloseDeleteModal = () => {\r\n        setShowDeleteModal(false);\r\n    };\r\n    const handleCloseEnableModal = () => {\r\n        setShowEnableModal(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [selectedItem]);\r\n    const addLogToCollection = async (data) => {\r\n        try {\r\n            const firestore = getFirestore();\r\n            const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n            // Add a new document to the \"logs\" collection\r\n            await addDoc(logsCollectionRef, data);\r\n\r\n        } catch (error) {\r\n            console.error('Error adding document:', error);\r\n        }\r\n    };\r\n    // useEffect(() => {\r\n    //     const fetchTime = async () => {\r\n    //         try {\r\n    //             const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    //             const { datetime } = response.data;\r\n    //             const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    //             setTime(formattedTime);\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching time:', error);\r\n    //         }\r\n    //     };\r\n\r\n    //     const interval = setInterval(() => {\r\n    //         if (isIntervalActive) {\r\n    //             fetchTime();\r\n    //         }\r\n    //     }, 1000);\r\n\r\n    //     return () => {\r\n    //         clearInterval(interval);\r\n    //     };\r\n    // }, [isIntervalActive]);\r\n\r\n    const openSuccessModal = () => {\r\n        setShowSuccessModal(true);\r\n\r\n    };\r\n\r\n    const closeSuccessModal = () => {\r\n        setShowSuccessModal(false);\r\n        setIsDisabled(false);\r\n        setIsYesLoading(false);\r\n    };\r\n\r\n\r\n    // async function disableUserByUid(uid) {\r\n    //     try {\r\n    //         await updateDisabled(auth, uid, true);\r\n    //         console.log('User account disabled successfully');\r\n    //     } catch (error) {\r\n    //         console.error('Error disabling user account:', error);\r\n    //     }\r\n    // }\r\n\r\n    const handleEnable = useCallback(async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n        try {\r\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n            const updates = {\r\n                active: true,\r\n            };\r\n\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            await updateDoc(itemDocRef, updates);\r\n\r\n            const updatedData = data.map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, active: true };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            setData(updatedData);\r\n            const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            // console.log('Field updated successfully.');\r\n\r\n            const logData = {\r\n                message: `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`.toLowerCase(),\r\n                    'Account Enabled'.toLowerCase(),\r\n                    'Enabled'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n            };\r\n            addLogToCollection(logData);\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n            handleCloseEnableModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n        }\r\n    }, [data]);\r\n\r\n    const deleteDocument = async (collectionPath, customId) => {\r\n        const firestore = getFirestore();\r\n        const documentRef = doc(firestore, collectionPath, customId);\r\n\r\n        try {\r\n            await deleteDoc(documentRef);\r\n            console.log('Document deleted successfully.');\r\n        } catch (error) {\r\n            console.error('Error deleting document:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleDelete = useCallback(async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n\r\n\r\n        try {\r\n\r\n            const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n            const user = userCredential.user;\r\n\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            await deleteUser(user);\r\n            const logData = {\r\n                message: `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`,\r\n                timestamp: formattedTime,\r\n                colorScheme: false,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`.toLowerCase(),\r\n                    'Account Deleted'.toLowerCase(),\r\n                    'Deleted'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n            };\r\n            addLogToCollection(logData);\r\n\r\n\r\n            console.log('Account deleted successfully');\r\n\r\n            const signInCredential = await signInWithEmailAndPassword(\r\n                auth,\r\n                authEmail,\r\n                authPassword\r\n            );\r\n            const signedInUser = signInCredential.user;\r\n            signedInUser\r\n            deleteDocument('accounts', selectedItem.email);\r\n            // setData(updatedData);\r\n            // const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            navigate('/account-list')\r\n            // console.log('Field updated successfully.');\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n\r\n            handleCloseDeleteModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n        }\r\n    }, [data]);\r\n\r\n    const handleDisable = useCallback(async (id) => {\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n\r\n        try {\r\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n            const updates = {\r\n                active: false,\r\n            };\r\n\r\n            await updateDoc(itemDocRef, updates);\r\n\r\n            const updatedData = data.map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, active: false };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            setData(updatedData);\r\n            const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            // console.log('Field updated successfully.');\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            const logData = {\r\n                message: `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`,\r\n                timestamp: formattedTime,\r\n                colorScheme: false,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`.toLowerCase(),\r\n                    'Account Disabled'.toLowerCase(),\r\n                    'Disabled'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n\r\n            };\r\n            addLogToCollection(logData);\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n            handleCloseDisableModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n            setIsDisabled(false);\r\n            setIsSaveLoading(false);\r\n        }\r\n    }, [data]);\r\n\r\n    // Apply search filter to the data\r\n    const applySearchFilter = (data, searchInputValue) => {\r\n        if (!searchInputValue) {\r\n            return data;\r\n        }\r\n        const filteredData = data.filter((item) =>\r\n            item.email.toLowerCase().includes(searchInputValue.toLowerCase()) ||\r\n            item.name.toLowerCase().includes(searchInputValue.toLowerCase()) ||\r\n            item.typeDisplay.toLowerCase().includes(searchInputValue.toLowerCase())\r\n        );\r\n        return filteredData;\r\n    };\r\n\r\n\r\n\r\n    const handleSave = async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setIsDisabled(true);\r\n        setIsSaveLoading(true);\r\n        if (\r\n            isPasswordLengthLabel() === false ||\r\n            validateEmail() === false ||\r\n            inputName === ''\r\n        ) {\r\n            setTimeout(() => {\r\n                // Reset loading and disabled state\r\n                setIsLoading(false);\r\n                setIsDisabled(false);\r\n            }, 500);\r\n        } else {\r\n\r\n            if (inputEmail === selectedItem.email && inputPassword === selectedItem.pass) {\r\n\r\n\r\n                const documentRef = doc(db, 'accounts', selectedItem.id);\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime(formattedTime);\r\n\r\n                const updatedFields = {\r\n                    name: inputName,\r\n                    type: selectedType,\r\n                    typeDisplay: selectedTypeDisplay,\r\n                    lastUpdatedDate: formattedTime,\r\n                    // Add more fields as needed\r\n\r\n                };\r\n\r\n                try {\r\n\r\n                    await updateDoc(documentRef, updatedFields);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n\r\n\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime(formattedTime);\r\n\r\n                    const logData = {\r\n                        message: `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            selectedItem.email.toLowerCase(),\r\n                            selectedItem.name.toLowerCase(),\r\n                            inputName.toLowerCase(),\r\n                            name.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n                    }\r\n\r\n                    addLogToCollection(logData);\r\n\r\n                    const updatedData = data.map((item) => {\r\n                        if (item.id === id) {\r\n                            item.name = inputName;\r\n                            item.type = selectedType;\r\n                            item.typeDisplay = selectedTypeDisplay;\r\n                            item.lastUpdatedDate = formattedTime;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setData(updatedData);\r\n                    const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n                    setFilteredData(filteredData);\r\n                    // console.log('Field updated successfully.');\r\n                    // console.log('Document successfully updated!');\r\n                    handleCloseModal();\r\n                    setShowSuccessModal(true);\r\n                } catch (error) {\r\n                    console.error('Error updating document:', error);\r\n                }\r\n\r\n            }\r\n\r\n            else if (inputEmail === selectedItem.email && inputPassword !== selectedItem.pass) {\r\n\r\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n                const user = userCredential.user;\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime();\r\n\r\n                try {\r\n                    await updatePassword(user, inputPassword);\r\n\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime();\r\n                    // console.log('Password changed successfully');\r\n                    const userDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n\r\n\r\n                    const updatedFields = {\r\n                        email: inputEmail,\r\n                        name: inputName,\r\n                        type: selectedType,\r\n                        typeDisplay: selectedTypeDisplay,\r\n                        dateOfCreation: selectedItem.dateOfCreation,\r\n                        lastUpdatedDate: formattedTime,\r\n                        pass: inputPassword,\r\n                        active: true,\r\n\r\n                        // Add more fields as needed\r\n                    };\r\n                    // Perform setDoc operation\r\n                    await setDoc(userDocRef, updatedFields);\r\n\r\n                    const signInCredential = await signInWithEmailAndPassword(\r\n                        auth,\r\n                        authEmail,\r\n                        authPassword\r\n                    );\r\n\r\n                    const signedInUser = signInCredential.user;\r\n                    signedInUser\r\n\r\n\r\n                    // console.log(authEmail, authPassword);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n\r\n                    setTime(formattedTime);\r\n\r\n                    const logData = {\r\n                        message: `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`.toLowerCase(),\r\n                            'Password Changed'.toLowerCase(),\r\n                            'Password'.toLowerCase(),\r\n                            selectedItem.email.toLowerCase(),\r\n                            selectedItem.name.toLowerCase(),\r\n                            name.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n\r\n                    const updatedItem = {\r\n                        ...selectedItem,\r\n                        email: inputEmail,\r\n                        name: inputName,\r\n                        type: selectedType,\r\n                        typeDisplay: selectedTypeDisplay,\r\n                        lastUpdatedDate: formattedTime,\r\n                    };\r\n\r\n                    const updatedData = data.map((item) => {\r\n                        if (item.id === id) {\r\n                            item.name = inputName;\r\n                            item.type = selectedType;\r\n                            item.typeDisplay = selectedTypeDisplay;\r\n                            item.lastUpdatedDate = formattedTime;\r\n                            item.pass = inputPassword;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setData(updatedData);\r\n                    const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\r\n                    setFilteredData(filteredData);\r\n                    // console.log('Document set successfully');\r\n                    handleCloseModal();\r\n                    setShowSuccessModal(true);\r\n                } catch (error) {\r\n                    console.error('Error:', error);\r\n                }\r\n\r\n            }\r\n\r\n            else if (inputEmail !== selectedItem.email) {\r\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n                const user = userCredential.user;\r\n\r\n\r\n                // updateEmail(user, inputEmail)\r\n                //     .then(async () => {\r\n                //         // Email change successful\r\n                //         setIsDisabled(false);\r\n                //         setIsSaveLoading(false);\r\n                //         const documentRef = doc(db, 'accounts', selectedItem.email);\r\n\r\n                const oldDocumentRef = doc(db, 'accounts', selectedItem.email);\r\n                const newDocumentRef = doc(db, 'accounts', inputEmail);\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime(formattedTime);\r\n\r\n                try {\r\n                    // Get the data from the old document\r\n                    const documentSnapshot = await getDoc(oldDocumentRef);\r\n                    if (documentSnapshot.exists()) {\r\n                        const documentData = documentSnapshot.data();\r\n\r\n                        // Merge the updated fields with the existing document data\r\n\r\n                        // Create the new document with the desired ID and copy the merged data\r\n\r\n                        const updatedFields = {\r\n                            email: inputEmail,\r\n                            name: inputName,\r\n                            type: selectedType,\r\n                            typeDisplay: selectedTypeDisplay,\r\n                            dateOfCreation: selectedItem.dateOfCreation,\r\n                            lastUpdatedDate: formattedTime,\r\n                            pass: inputPassword,\r\n                            active: true,\r\n\r\n                            // Add more fields as needed\r\n                        };\r\n\r\n                        await setDoc(newDocumentRef, updatedFields);\r\n                        await deleteDoc(oldDocumentRef);\r\n                        // Optionally, delete the old document\r\n\r\n                        try {\r\n                            const userCredential = await createUserWithEmailAndPassword(auth, inputEmail, inputPassword);\r\n                            // console.log('User created successfully:', userCredential.user);\r\n\r\n                            setIsDisabled(false);\r\n                            setIsSaveLoading(false);\r\n\r\n                            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                            const { datetime } = response.data;\r\n                            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                            const year = moment(datetime).format('YYYY');\r\n                            const month = moment(datetime).format('MM');\r\n                            const monthWithDay = moment(datetime).format('MM/DD');\r\n                            const date = moment(datetime).format('YYYY/MM/DD');\r\n                            const day = moment(datetime).format('DD');\r\n                            const time = moment(datetime).format('HH:mm');\r\n                            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                            setTime(formattedTime);\r\n\r\n                            const logData = {\r\n                                message: `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`,\r\n                                timestamp: formattedTime,\r\n                                colorScheme: true,\r\n                                keywords: [\r\n                                    formattedTime.toLowerCase(),\r\n                                    `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`.toLowerCase(),\r\n                                    'Updated'.toLowerCase(),\r\n                                    'Email'.toLowerCase(),\r\n                                    selectedItem.email.toLowerCase(),\r\n                                    selectedItem.name.toLowerCase(),\r\n                                    inputEmail.toLowerCase(),\r\n                                    monthWithDay.toLowerCase(),\r\n                                    name.toLowerCase(),\r\n                                    year.toLowerCase(),\r\n                                    month.toLowerCase(),\r\n                                    day.toLowerCase(),\r\n                                    date.toLowerCase(),\r\n                                    time.toLowerCase(),\r\n                                    timeWithMinutesSeconds.toLowerCase(),\r\n                                ],\r\n                            }\r\n                            try {\r\n                                await deleteUser(user);\r\n                                // console.log('User authentication record deleted successfully.');\r\n\r\n\r\n\r\n                                setIsDisabled(false);\r\n                                setIsSaveLoading(false);\r\n\r\n                                const signInCredential = await signInWithEmailAndPassword(\r\n                                    auth,\r\n                                    authEmail,\r\n                                    authPassword\r\n                                );\r\n\r\n                                const signedInUser = signInCredential.user;\r\n                                signedInUser\r\n\r\n                                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                                const { datetime } = response.data;\r\n                                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                                setTime(formattedTime);\r\n\r\n                                const updatedItem = {\r\n                                    ...selectedItem,\r\n                                    email: inputEmail,\r\n                                    name: inputName,\r\n                                    type: selectedType,\r\n                                    typeDisplay: selectedTypeDisplay,\r\n                                    lastUpdatedDate: formattedTime,\r\n                                };\r\n\r\n                                const updatedData = data.map((item) =>\r\n                                    item.id === id ? updatedItem : item\r\n                                );\r\n                                setData(updatedData);\r\n                                const filteredData = applySearchFilter(updatedData, searchInputValue);\r\n                                setFilteredData(filteredData);\r\n                                // console.log(authEmail, authPassword);\r\n\r\n\r\n                            } catch (error) {\r\n                                console.error('Error deleting user authentication record:', error);\r\n                            }\r\n\r\n                            addLogToCollection(logData);\r\n                            handleCloseModal();\r\n                            setShowSuccessModal(true);\r\n\r\n                            // console.log('Document ID successfully changed!');\r\n                        } catch (error) {\r\n                            console.error('Error creating user:', error);\r\n                        }\r\n                    } else {\r\n                        console.error('Old document does not exist!');\r\n                    }\r\n\r\n                } catch (error) {\r\n                    console.error('Error changing document ID:', error);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n                }\r\n\r\n\r\n                // })\r\n                // .catch((error) => {\r\n                //     console.error('Error changing email:', error);\r\n                // });\r\n            }\r\n\r\n\r\n\r\n\r\n            else {\r\n                try {\r\n                    const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\r\n                    if (signInMethods.length > 0) {\r\n                        // Email already exists                        \r\n                        setIsDisabled(false);\r\n                        setIsSaveLoading(false);\r\n                        setIsEmailDuplicate(true);\r\n                        setEmailError(false);\r\n                        validateEmail(false);\r\n\r\n                        return;\r\n                    }\r\n\r\n\r\n                } catch (error) {\r\n                    const errorCode = error.code;\r\n                    const errorMessage = error.message;\r\n                    console.log('An error occurred while checking the email existence. Please try again later.');\r\n                    // console.log(errorCode, errorMessage);\r\n                    setIsLoading(false);\r\n                    setIsDisabled(false);\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n    };\r\n\r\n    const handleChangeEmailText = (text) => {\r\n        setInputEmail(text);\r\n    };\r\n\r\n\r\n\r\n    const isPasswordLengthLabel = () => {\r\n        return inputPassword.length >= 6;\r\n    };\r\n    // const handlePasswordChange = _.debounce((value) => {\r\n    //     setInputPassword(value);\r\n    // }, 50);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc'));\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                    setData(documents);\r\n                });\r\n\r\n                return () => unsubscribe();\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter(\r\n            (item) =>\r\n                item.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                item.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                item.typeDisplay.toLowerCase().includes(searchQuery.toLowerCase())\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce((text) => {\r\n        setSearchQuery(text);\r\n    }, 300);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    const showPopover = () => {\r\n        setShowNamePopover(true);\r\n    };\r\n\r\n    // Function to hide the Popover\r\n    const hidePopover = () => {\r\n        setShowNamePopover(false);\r\n    };\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#0642F4'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#0642F4'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n    return (\r\n        <NativeBaseProvider>\r\n\r\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#0642f4'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={0}\r\n                    borderBottomColor={'cyan.500'}\r\n\r\n                >\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen} />\r\n\r\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: logo,\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    {/* {showDrawerIcon && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    />} */}\r\n\r\n\r\n\r\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: logo2,\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n                    {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                        <Flex direction=\"row-reverse\">\r\n                            <Popover isOpen={showNamePopover} trigger={triggerProps => {\r\n                                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                    <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                                </Text>;\r\n                            }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\r\n                                <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                                    <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                        <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                            Logout\r\n                                        </Button>\r\n                                    </Popover.Body>\r\n                                </Popover.Content>\r\n                            </Popover>\r\n                        </Flex>\r\n                    </Box> */}\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <Box flex={[1]} flexDirection=\"row\" >\r\n                    {/* Sidebar */}\r\n                    {/* <SideDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    /> */}\r\n\r\n                    {/* Main Content */}\r\n                    <Box flex={1} flexGrow={1} minHeight={0}>\r\n                        {/* Main Content Content */}\r\n                        <Input ref={searchInput} onChangeText={handleSearch} placeholder=\"Search\" bgColor={'white'} />\r\n                        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n                            <Box height={'100%'}>\r\n\r\n                                <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                                    <Box borderWidth={1} borderColor=\"gray.200\" borderRadius={4} overflow=\"hidden\" display={['none', 'none', 'none', '', '', '']}>\r\n                                        <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor={'#0642F4'} >\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Email</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Name</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Type of Account</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Date of Creation</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Last Updated</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Status</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Operate</Text>\r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <PresenceTransition visible={true} initial={{\r\n                                        opacity: 0\r\n                                    }} animate={{\r\n                                        opacity: 1,\r\n                                        transition: {\r\n                                            duration: 250\r\n                                        }\r\n                                    }}>\r\n                                        {paginatedData.map((item) => (\r\n                                            <Box key={item.id} margin={[2, 2, 2, 0, 0, 0]} flexDirection={['column', 'column', 'column', 'row', 'row', 'row']} bgColor={item.active ? 'blue.200' : 'amber.500'} borderColor={'gray.200'} borderWidth={[2, 2, 2, 1, 1, 1]} paddingBottom={1} marginRight={0}>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Email</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.email}</Text>\r\n\r\n\r\n                                                    </Box>\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Name</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.name}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}  > Type of Account</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.typeDisplay}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Date of Creation</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.dateOfCreation}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Last Updated</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.lastUpdatedDate}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Status</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.active ? 'Enabled' : 'Disabled'}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Operate</Text>\r\n                                                        </Box>\r\n                                                        <HStack space={1} flex={[5, 5, 5, 1, 1, 1]}>\r\n                                                            <Button\r\n                                                                onPress={() => handleEdit(item.id)}\r\n                                                                flex={[1, 1, 1, 2, 2, 2]}\r\n                                                                padding={1}\r\n                                                                justifyContent='center'\r\n                                                                alignItems='center'\r\n                                                                flexDirection='row'>\r\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Edit</Text>\r\n                                                                <Icon as={<MaterialIcons name={\"edit\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                            </Button>\r\n                                                            {item.active ? (\r\n                                                                <Button onPress={() => handleOpenDisableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'amber'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Disable</Text>\r\n                                                                    <Icon as={<MaterialIcons name={\"block\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                                </Button>\r\n                                                            ) : (\r\n                                                                <Button onPress={() => handleOpenEnableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'success'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Enable</Text>\r\n                                                                    <Icon as={<MaterialIcons name={\"check-circle\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                                </Button>\r\n                                                            )}\r\n                                                            <Button onPress={() => handleOpenDeleteModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'error'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Delete</Text>\r\n                                                                <Icon as={<MaterialIcons name={\"delete\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                            </Button>\r\n                                                        </HStack>\r\n                                                    </Box>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n\r\n                                        ))}\r\n                                    </PresenceTransition>\r\n                                    <DataTable.Pagination\r\n                                        page={page}\r\n                                        numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                        onPageChange={(page) => setPage(page)}\r\n                                        label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                        optionsPerPage={optionsPerPage}\r\n                                        itemsPerPage={itemsPerPage}\r\n                                        setItemsPerPage={setItemsPerPage}\r\n                                        showFastPagination\r\n                                        optionsLabel={'Rows per page'}\r\n                                    />\r\n                                </DataTable>\r\n                            </Box>\r\n                            <Modal isOpen={modalVisible} onClose={handleCloseModal}>\r\n                                <Modal.Content>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header borderBottomWidth={0}>Edit Acccount</Modal.Header>\r\n                                    <Modal.Body>\r\n\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <VStack><Text>Email: </Text> <Input color={!isEmailDuplicate ? 'black' : 'red.500'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputEmail} ref={inputEmailRef} onChangeText={handleInputEmailChange} /></VStack>\r\n                                                {!validateEmail() && (\r\n                                                    <Text color={'#D22730'} bold>Invalid Email!</Text>\r\n                                                )}\r\n                                                {isEmailDuplicate && (\r\n                                                    <Text color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\r\n                                                )}\r\n                                                <VStack><Text>Name: </Text> <Input borderBottomColor={inputName !== '' ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputName} ref={inputNameRef} onChangeText={handleInputNameChange} /></VStack>\r\n                                                {inputName === '' && (\r\n                                                    <Text color={'#D22730'} bold>Empty Name!</Text>\r\n                                                )}\r\n                                                <VStack><Text>Password: </Text>\r\n                                                    <Input borderBottomColor={isPasswordLengthLabel() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputPassword} ref={inputPassRef} onChangeText={handleInputPassChange} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\r\n                                                        <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" />\r\n                                                    </Pressable>} />\r\n                                                </VStack>\r\n\r\n                                                <VStack><Text>Type of Account:</Text>\r\n                                                    <HStack space={1} justifyContent=\"center\" >\r\n                                                        <Button _hover={{ bgColor: 'booking' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountType4} bgColor={'booking' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Booking</Text></Button>\r\n\r\n                                                        <Button _hover={{ bgColor: 'staff' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountType3} bgColor={'staff' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Staff</Text></Button>\r\n\r\n                                                        <Button _hover={{ bgColor: 'admin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeAd} bgColor={'admin' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Admin</Text></Button>\r\n\r\n\r\n\r\n                                                    </HStack>\r\n                                                    <HStack space={1} justifyContent=\"center\" marginTop={1}>\r\n                                                        <Button _hover={{ bgColor: 'superadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeSpAd} bgColor={'superadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Super Admin</Text></Button>\r\n                                                        <Button _hover={{ bgColor: 'devadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeDevAd} bgColor={'devadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Dev Admin</Text></Button>\r\n                                                    </HStack>\r\n                                                </VStack>\r\n\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseModal} flex={1} padding={1} margin={1}>Close</Button>\r\n                                        <Button onPress={() => handleSave(selectedItem.id)} disabled={isDisabled} flex={1} padding={1} colorScheme={'success'} margin={1}>{isSaveLoading ? <Spinner color=\"white\" size={21} /> : 'Save'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={showDisableModal} onClose={handleCloseDisableModal}>\r\n                                <Modal.Content bgColor={'amber.500'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'amber.500'} borderBottomWidth={0} _text={{ color: 'white', }}>Disable Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'amber.500'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text color={'white'}>Email: {selectedItem.email}</Text>\r\n                                                <Text color={'white'}>Name: {selectedItem.name}</Text>\r\n                                                <Text color={'white'}>Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'amber.500'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleDisable(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={showDeleteModal} onClose={handleCloseDeleteModal}>\r\n                                <Modal.Content bgColor={'error.300'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'error.300'} borderBottomWidth={0} >Delete Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'error.300'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text >Email: {selectedItem.email}</Text>\r\n                                                <Text >Name: {selectedItem.name}</Text>\r\n                                                <Text >Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'error.300'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleDelete(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n\r\n                            <Modal isOpen={showEnableModal} onClose={handleCloseEnableModal}>\r\n                                <Modal.Content bgColor={'success.200'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'success.200'} borderBottomWidth={0}>Enable Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'success.200'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text>Email: {selectedItem.email}</Text>\r\n                                                <Text>Name: {selectedItem.name}</Text>\r\n                                                <Text>Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'success.200'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseEnableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleEnable(selectedItem.id)} colorScheme={'success'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                            <Modal isOpen={showSuccessModal} onClose={() => setShowSuccessModal(false)} size=\"lg\"  >\r\n                                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n                                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n                                    <Modal.Body >\r\n                                        <Text color=\"white\" textAlign={'center'}>The account update was successful.</Text>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n                                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowSuccessModal(false)}>\r\n                                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                        </ScrollView>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  PresenceTransition,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Title,\r\n  Content,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  VStack,\r\n  ScrollView,\r\n  SectionList,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Modal,\r\n  Divider,\r\n  Popover\r\n} from \"native-base\";\r\nimport {\r\n  FontAwesome,\r\n  Entypo,\r\n  MaterialIcons,\r\n  Ionicons,\r\n  Fontisto,\r\n  EvilIcons,\r\n  AntDesign,\r\n  MaterialCommunityIcons,\r\n  Feather,\r\n  FontAwesome5Brands,\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './../style.css';\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport { setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useNavigate } from 'react-router-dom';\r\nlet selectedScreen = 'ADD C-HUB ACCOUNT'\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AddAccount() {\r\n  const dispatch = useDispatch();\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const [isMobileView, setIsMobileView] = useState(false);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [show2, setShow2] = React.useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n  const [isSelectedLogs, setIsSelectedLogs] = useState(false);\r\n  const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(true);\r\n  const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\r\n  const [isSelected3, setIsSelected3] = useState(false);\r\n  const [isSelected4, setIsSelected4] = useState(false);\r\n\r\n  const [accountTypeAdmin, setAccountTypeAdmin] = useState(false);\r\n  const [accountTypeBooking, setAccountTypeBooking] = useState(false);\r\n  const [accountTypeSales, setAccountTypeSales] = useState(false);\r\n  const [accountTypeHamanasu, setAccountTypeHamanasu] = useState(false);\r\n  const [accountTypeApi, setAccountTypeApi] = useState(false);\r\n\r\n\r\n  const [nameVerify, setNameVerify] = useState(false);\r\n  const [emailVerify, setEmailVerify] = useState(false);\r\n  const [passwordVerify, setPasswordVerify] = useState(false);\r\n  const [confirmPasswordVerify, setConfirmPasswordVerify] = useState(false);\r\n  const [accountTypeVerify, setAccountTypeVerify] = useState(false);\r\n  const [isEmailDuplicate, setIsEmailDuplicate] = useState(false);\r\n  const [emailError, setEmailError] = useState(false);\r\n  // const [inputName, setInputName] = useState('');\r\n  // const [inputEmail, setInputEmail] = useState('');\r\n  // const [inputPassword, setInputPassword] = useState('');\r\n  // const [inputConfirmPassword, setInputConfirmPassword] = useState('');\r\n  const [typeOfAccount, setTypeOfAccount] = useState('');\r\n  const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const inputRefs = useRef([]);\r\n\r\n\r\n  const inputName = useRef(null);\r\n  const inputEmail = useRef(null);\r\n  const inputPassword = useRef(null);\r\n  const inputConfirmPassword = useRef(null);\r\n\r\n  const [passwordMatch, setPasswordMatch] = useState(false);\r\n  const [passwordMatchLabel, setPasswordMatchLabel] = useState(true);\r\n  const [passwordLengthLabel, setPasswordLengthLabel] = useState(false);\r\n  const [isNameEmpty, setIsNameEmpty] = useState(true);\r\n\r\n  const [formattedTime, setFormattedTime] = useState('');\r\n\r\n  const [time, setTime] = useState('');\r\n  const fetchTimeRef = useRef();\r\n  const [isIntervalActive, setIsIntervalActive] = useState(true);\r\n\r\n  const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n  }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\r\n\r\n\r\n\r\n\r\n  const SuccessModal = () => {\r\n    return <Center>\r\n      <Modal isOpen={showModal} onClose={closeModal} size=\"lg\"  >\r\n        <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n          <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n          <Modal.Body >\r\n\r\n            <Text textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\r\n          </Modal.Body>\r\n          <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n            <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={closeModal} _text={{ color: 'black', }}>\r\n              Ok\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </Center>;\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n  }, [typeOfAccount]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (!user) {\r\n        // navigation.navigate(\"Login\")\r\n        navigate(\"/Login\")\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const firebaseFirestore = getFirestore();\r\n\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const firestore = getFirestore();\r\n      const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const fetchTime = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n  //       const { datetime } = response.data;\r\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n  //       setTime(formattedTime);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching time:', error);\r\n  //     }\r\n  //   };\r\n  //   const interval = setInterval(fetchTime, 1000);\r\n  //   return () => clearInterval(interval);\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   const fetchTime = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n  //       const { datetime } = response.data;\r\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n  //       setTime(formattedTime);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching time:', error);\r\n  //     }\r\n  //   };\r\n\r\n  //   const interval = setInterval(() => {\r\n  //     if (isIntervalActive) {\r\n  //       fetchTime();\r\n  //     }\r\n  //   }, 1000);\r\n\r\n  //   return () => {\r\n  //     clearInterval(interval);\r\n  //   };\r\n  // }, [isIntervalActive]);\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n    setIsIntervalActive(false); // Pause the interval when the modal is opened\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setIsIntervalActive(true); // Resume the interval when the modal is closed\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleAddAccount = async () => {\r\n    setIsDisabled(true);\r\n    setIsLoading(true);\r\n    if (\r\n      passwordLengthLabel === false ||\r\n      passwordMatch === false ||\r\n      passwordMatchLabel === false ||\r\n      validateEmail() === false ||\r\n      isNameEmpty === true ||\r\n      typeOfAccount === ''\r\n    ) {\r\n      setTimeout(() => {\r\n        // Reset loading and disabled state\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n      }, 500);\r\n    } else {\r\n      try {\r\n        const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail.current?.value);\r\n        if (signInMethods.length > 0) {\r\n          // Email already exists\r\n          setIsEmailDuplicate(true);\r\n          setEmailError(false);\r\n          validateEmail(false);\r\n          setIsLoading(false);\r\n          setIsDisabled(false);\r\n          return;\r\n        }\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        await createUserWithEmailAndPassword(authForCreateUser, inputEmail.current.value, inputPassword.current.value)\r\n          .then((userCredential) => {\r\n\r\n            const user = userCredential.user;\r\n\r\n\r\n\r\n            try {\r\n\r\n              // setTime(formattedTime);\r\n\r\n              const customID = inputEmail.current.value; // Replace 'your-custom-id' with your desired custom ID\r\n              const docRef = doc(db, 'accounts', customID); // Replace 'myCollection' with the name of your desired collection\r\n              const logData = {\r\n                message: `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`,\r\n                timestamp: formattedTime,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`.toLowerCase(),\r\n                  'Account Added'.toLowerCase(),\r\n                  'Added'.toLowerCase(),\r\n                  inputName.current.value.toLowerCase(),\r\n                  typeOfAccountDisplay.toLowerCase(),\r\n                  name.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n                colorScheme: true,\r\n              };\r\n\r\n              setDoc(docRef, {\r\n                // Specify the data you want to add to the document\r\n                email: inputEmail.current?.value,\r\n                name: inputName.current?.value,\r\n                pass: inputPassword.current?.value,\r\n                type: typeOfAccount,\r\n                typeDisplay: typeOfAccountDisplay,\r\n                dateOfCreation: formattedTime,\r\n                lastUpdatedDate: formattedTime,\r\n                active: true,\r\n                // ...\r\n              });\r\n\r\n              addLogToCollection(logData);\r\n              console.log(logData);\r\n              console.log(formattedTime);\r\n              setIsLoading(false);\r\n              setIsDisabled(false);\r\n              handleClear();\r\n              openModal();\r\n\r\n              console.log('Document added with custom ID: ', customID);\r\n            } catch (error) {\r\n              console.error('Error adding document: ', error);\r\n            }\r\n\r\n\r\n\r\n\r\n            // Reset loading and disabled state\r\n\r\n\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.log('An error occurred during sign-up. Please try again later.');\r\n            console.log(error);\r\n            setIsLoading(false);\r\n            setIsDisabled(false);\r\n          });\r\n      } catch (error) {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log('An error occurred while checking the email existence. Please try again later.');\r\n        // console.log(errorCode, errorMessage);\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    const text = '';\r\n\r\n    inputName.current.value = \"\";\r\n    inputEmail.current.value = \"\";\r\n    inputPassword.current.value = \"\";\r\n    inputConfirmPassword.current.value = \"\";\r\n\r\n    setEmailError(false);\r\n    setIsEmailDuplicate(false);\r\n    setIsNameEmpty(true);\r\n\r\n    setPasswordLengthLabel(false);\r\n    setPasswordMatch(false);\r\n    setPasswordMatchLabel(true);\r\n\r\n    setTypeOfAccount('');\r\n    setTypeOfAccountDisplay('');\r\n    // setInputConfirmPassword('');\r\n    // setInputEmail('');\r\n    // setInputName('');\r\n    // setInputPassword('');\r\n\r\n\r\n  };\r\n\r\n  const registerInputRef = (index) => (ref) => {\r\n    inputRefs.current[index] = ref;\r\n  };\r\n\r\n  const handleToggleAccountTypeAdmin = () => {\r\n    const text = 'admin';\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Admin');\r\n  };\r\n\r\n  const handleToggleAccountTypeBooking = () => {\r\n    const text = 'booking';\r\n\r\n\r\n    setTypeOfAccount(text);\r\n\r\n    setTypeOfAccountDisplay('Booking');\r\n  };\r\n\r\n\r\n  const handleToggleAccountTypeSales = () => {\r\n    const text = 'sales';\r\n\r\n\r\n    setTypeOfAccount(text);\r\n\r\n    setTypeOfAccountDisplay('Sales');\r\n  };\r\n\r\n  const handleToggleAccountTypeHamanasu = () => {\r\n    const text = 'hamanasu';\r\n\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Hamanasu');\r\n  };\r\n\r\n\r\n  const handleToggleAccountTypeApi = () => {\r\n    const text = 'api';\r\n\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Api');\r\n  };\r\n\r\n  // const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n  //   navigation.navigate(\"LOGS\");\r\n  // }, []);\r\n\r\n  // const handleToggleAddAccount = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  // }, []);\r\n\r\n  // const handleToggleAccountList = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ACCOUNT LIST\");\r\n  // }, []);\r\n\r\n  // const handleToggleAddVehicle = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ADD NEW VEHICLE\");\r\n  // }, []);\r\n\r\n  // const handleVehicleList = useCallback(() => {\r\n  //   navigation.navigate(\"VEHICLE LIST\");\r\n  // }, []);\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\")\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate(\"/Login\")\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      // This will now always be a function\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n      listenForNameChange(documentId);\r\n    }\r\n  }, []);\r\n\r\n  const listenForNameChange = (documentId) => {\r\n    const userRef = doc(db, 'accounts', documentId);\r\n\r\n    const unsubscribe = onSnapshot(userRef, (doc) => {\r\n      if (doc.exists()) {\r\n        const name = doc.data().name;\r\n        const type = doc.data().type;\r\n        setName(name);\r\n        setType(type);\r\n        // Perform any necessary actions with the name value\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    });\r\n\r\n    // To stop listening for updates, you can call unsubscribe()\r\n    // unsubscribe();\r\n  };\r\n\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handlePasswordChange = () => {\r\n    // const inputPasswordValue = inputPassword.current?.value;\r\n    // const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    // const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    // setPasswordMatch(\r\n    //   inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    // );\r\n    // setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n    // setPasswordLengthLabel(inputPasswordValueLength >= 6);\r\n    handlePasswordStatus();\r\n  };\r\n\r\n  const handleConfirmPasswordChange = () => {\r\n    const inputPasswordValue = inputPassword.current?.value;\r\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    setPasswordMatch(\r\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    );\r\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n  };\r\n\r\n\r\n  const handlePasswordStatus = () => {\r\n    const inputPasswordValue = inputPassword.current?.value;\r\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    setPasswordMatch(\r\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    );\r\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n    setPasswordLengthLabel(inputPasswordValueLength >= 6);\r\n\r\n  };\r\n\r\n  // const isPasswordMatch = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n  //   return (\r\n  //     inputPasswordValue === inputConfirmPasswordValue &&\r\n  //     inputPasswordValueLength >= 6\r\n  //   );\r\n  // };\r\n\r\n  // const isAccountType = () => {\r\n  //   return accountTypeDevAd || accountTypeSpAd || accountTypeAd || accountType3 || accountType4 === true;\r\n  // };\r\n\r\n  // const isPasswordMatchLabel = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n  //   return inputPassword.current?.value === inputConfirmPassword.current?.value;\r\n  // };\r\n\r\n  // const isPasswordLengthLabel = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n  //   return inputPasswordValueLength >= 6;\r\n  // };\r\n\r\n\r\n  const handleEmailChange = () => {\r\n    setIsEmailDuplicate(false);\r\n    handleEmailSubmit();\r\n  };\r\n\r\n  const handleNameChange = () => {\r\n    setIsNameEmpty(inputName.current?.value === '')\r\n  };\r\n\r\n\r\n  const validateEmail = () => {\r\n    const emailValue = inputEmail.current?.value;\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    const isValid = emailRegex.test(emailValue);\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleEmailSubmit = (value) => {\r\n    setEmailError(validateEmail(value));\r\n\r\n    if (emailError) {\r\n      // console.log(emailError);\r\n      // setEmailError(validateEmail());\r\n    } else {\r\n\r\n    }\r\n  };\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(auth).then(() => {\r\n      // navigation.navigate('Login');\r\n      navigate(\"/Login\")\r\n      setEmail('');\r\n      setName('');\r\n    }).catch((error) => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const handleScreenResize = () => {\r\n  //     const screenWidth = Dimensions.get('window').width;\r\n  //     setIsMobileView(screenWidth < 1200);\r\n  //   };\r\n\r\n  //   // Initial check on component mount\r\n  //   handleScreenResize();\r\n\r\n  //   // Listen for screen dimension changes\r\n  //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n  //   // Cleanup event listener on component unmount\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleScreenResize);\r\n  //   };\r\n  // }, []);\r\n\r\n  const sidebarListData = [{\r\n    title: \"VEHICLE INFORMATION INPUT\",\r\n    data: [\"Add New Vehicle\", \"Vehicle List\",]\r\n  },];\r\n\r\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n  const showPopover = () => {\r\n    setShowNamePopover(true);\r\n  };\r\n\r\n  // Function to hide the Popover\r\n  const hidePopover = () => {\r\n    setShowNamePopover(false);\r\n  };\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#0642F4'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#0642F4'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n  return (\r\n    <NativeBaseProvider>\r\n      <SuccessModal />\r\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#0642f4'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={0}\r\n          borderBottomColor={'cyan.500'}\r\n\r\n        >\r\n\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen} />\r\n\r\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          {/* {showDrawerIcon && <MobileViewDrawer\r\n            selectedScreen={selectedScreen}\r\n          />} */}\r\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n            <FastImage\r\n              source={{\r\n                uri: logo2,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <Box flex={[1]} flexDirection=\"row\" >\r\n\r\n\r\n          {/* Main Content */}\r\n          <Box flex={1} flexGrow={1} minHeight={0}>\r\n            {/* Main Content Content */}\r\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n\r\n              {/* <AddAccount/> */}\r\n\r\n              <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" >\r\n\r\n\r\n                <Box bgColor='#A6BCFE' w='100%' h='100%' margin={1}>\r\n                  <Center flex={1}>\r\n                    <Center px=\"3\">\r\n\r\n\r\n                      <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n                        <Text marginTop={5} marginBottom={1} fontSize={[12, 14, 16]} color={'white'} bold={'center'}>ADD ACCOUNT FOR REAL MOTOR JAPAN CONTROL HUB</Text>\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputName} onSubmitEditing={handleAddAccount} onChangeText={handleNameChange} borderColor={'white'} borderBottomColor={!isNameEmpty ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<AntDesign name=\"idcard\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Name\" placeholderTextColor='white' color='white' />\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputEmail} onChangeText={handleEmailChange} onSubmitEditing={handleAddAccount} color={!isEmailDuplicate ? 'white' : 'red.500'} borderColor={'white'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' />\r\n\r\n\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordLengthLabel ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handlePasswordChange} fontSize='16' borderColor={'white'} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\r\n                          <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n                        </Pressable>} placeholder=\"Password\" placeholderTextColor='gray' color='white' />\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputConfirmPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordMatch ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handleConfirmPasswordChange} fontSize='16' borderColor={'white'} type={show2 ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show2 ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow2(!show2)}>\r\n                          <Icon as={<MaterialIcons name={show2 ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n                        </Pressable>} placeholder=\"Confirm Password\" placeholderTextColor='white' color='white' />\r\n                        {!validateEmail() && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Invalid Email!</Text>\r\n                        )}\r\n                        {isEmailDuplicate && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\r\n                        )}\r\n                        {!passwordLengthLabel && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Password must be at least 6 characters or above!</Text>\r\n                        )}\r\n                        {!passwordMatchLabel && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Passwords do not match!</Text>\r\n                        )}\r\n\r\n                        <Text fontSize={16} color={'white'} bold>ACCOUNT TYPE:                                                             </Text>\r\n                        <Box borderColor={typeOfAccount !== '' ? 'green.300' : 'red.500'} borderWidth={2}>\r\n                          <Flex wrap=\"wrap\" flexDir={'row'} justifyContent=\"center\" space={1}>\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'hamanasu' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeHamanasu}\r\n                              bgColor={typeOfAccount == 'hamanasu' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Hamanasu</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'booking' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeBooking}\r\n                              bgColor={typeOfAccount == 'booking' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Booking</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'sales' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeSales}\r\n                              bgColor={typeOfAccount == 'sales' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Sales</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'admin' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeAdmin}\r\n                              bgColor={typeOfAccount == 'admin' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Admin</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'api' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeApi}\r\n                              bgColor={typeOfAccount == 'api' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>API</Text>\r\n                            </Button>\r\n                          </Flex>\r\n                        </Box>\r\n                        <HStack space={1} justifyContent=\"center\" marginBottom={5}>\r\n                          <Button _hover={{ bgColor: '#D9D9D9', }} _pressed={{ bgColor: '#D9D9D9', }} _focus={{ bgColor: '#D9D9D9', }} bgColor='warmGray.200' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                            base: 130,\r\n                            md: 130,\r\n                            sm: 130,\r\n                          }} onPress={handleClear} ><Text style={{ color: 'gray', }}>Clear</Text></Button>\r\n                          <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                            base: 130,\r\n                            md: 130,\r\n                            sm: 130,\r\n                          }} onPress={handleAddAccount} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Add Acccount</Text>}</Button>\r\n\r\n                        </HStack>\r\n\r\n\r\n                      </Stack>\r\n\r\n                    </Center>\r\n\r\n\r\n                  </Center>\r\n\r\n\r\n                </Box>\r\n\r\n              </Box>\r\n\r\n            </ScrollView>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </NativeBaseProvider>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  Image as NativeImage,\r\n  Input,\r\n  Modal,\r\n  NativeBaseProvider,\r\n  Popover,\r\n  Pressable,\r\n  Spinner,\r\n  Text,\r\n  VStack,\r\n  useBreakpointValue,\r\n  TextArea,\r\n  InputRightAddon,\r\n  InputGroup,\r\n  Select,\r\n  CheckIcon,\r\n  ScrollView,\r\n  PresenceTransition,\r\n  Drawer,\r\n  InputLeftAddon,\r\n  Heading,\r\n  FormControl,\r\n  WarningOutlineIcon\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useCallback, useMemo, useLayoutEffect } from 'react';\r\nimport { Dimensions, TouchableOpacity, StyleSheet, Platform } from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject, } from 'firebase/storage';\r\nimport { DragSortableView } from \"react-native-drag-sort\";\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport SelectDropdown from 'react-native-select-dropdown';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { cloneDeep } from 'lodash';\r\nimport ImageMarker, { Position } from \"react-native-image-marker\";\r\n\r\n\r\n\r\nimport {\r\n  // setModelData,\r\n  setMakeData,\r\n  setIsLoading,\r\n  setSelectedImages,\r\n  setIsAddPhotoVisible,\r\n  setAddAnotherImages,\r\n  setLoginName,\r\n  setDeleteImageVisible,\r\n  setExpenseNameData,\r\n  setPaidToData,\r\n  setCurrentDate,\r\n  setSupplyChainsCostsData,\r\n  setSelectedExpenseName,\r\n  setSelectedPaidTo,\r\n  setLoadingModalVisible,\r\n  setIsSuccessModalOpen,\r\n  setIsUpdateSuccessModalOpen\r\n\r\n} from './redux/store'\r\n\r\n\r\nimport \"setimmediate\";\r\n\r\n\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css'; // Import a CSS effect for the lazy loading transition\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\n\r\nimport { AutocompleteDropdown, AutocompleteDropdownContextProvider } from 'react-native-autocomplete-dropdown';\r\nimport { nanoid } from 'nanoid';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst { width } = Dimensions.get('window');\r\n\r\n\r\nconst childrenWidth = 76;\r\nconst childrenHeight = 76;\r\nconst marginChildrenTop = 7;\r\nconst marginChildrenBottom = 0;\r\n\r\nlet globalJpyToUsd = '';\r\nlet globalUsdToJpy = '';\r\n\r\nlet globalSupplyChainCostsData = [];\r\nlet globalSelectedExpenseName = '';\r\nlet globalSupplyChainCostsAmount = 0;\r\nlet globalSelectedPaidTo = '';\r\nlet globalModelDataVariable = [];\r\nlet globalMakeDataVariable = [];\r\nlet globalRegYearDataVariable = [];\r\nlet globalPortDataVariable = [];\r\nlet globalSalesDataVariable = [];\r\nlet globalBuyerDataVariable = [];\r\nlet globalTransmissionDataVariable = [];\r\nlet globalExteriorColorDataVariable = [];\r\nlet globalFuelDataVariable = [];\r\nlet globalDriveTypeDataVariable = [];\r\nlet globalBodyTypeDataVariable = [];\r\nlet globalSelectedImages = [];\r\nlet globalVehicleFolderName = '';\r\nlet selectedScreen = 'ADD NEW VEHICLE'\r\nlet globalReferenceNumber = '';\r\nlet globalSPCSelectedDate = '';\r\nlet globalFobPrice = '';\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst UpdateSuccessModal = ({ onClose, bodyText, headerText }) => {\r\n\r\n  const isUpdateSuccessModalOpen = useSelector((state) => state.isUpdateSuccessModalOpen);\r\n\r\n  return (\r\n    <Modal isOpen={isUpdateSuccessModalOpen} onClose={onClose} >\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text textAlign={'center'} color={'#102A43'} bold>\r\n            😊😎 Success! 😎😊\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          justifyContent={'center'}\r\n          alignItems={'center'}\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              {headerText}\r\n              {/* Vehicle Added! */}\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              {bodyText}\r\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UploadSuccessModal = ({ onClose, bodyText, headerText }) => {\r\n\r\n  const isSuccessModalOpen = useSelector((state) => state.isSuccessModalOpen);\r\n\r\n  return (\r\n    <Modal isOpen={isSuccessModalOpen} onClose={onClose} >\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text textAlign={'center'} color={'#102A43'} bold>\r\n            😊😎 Success! 😎😊\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          justifyContent={'center'}\r\n          alignItems={'center'}\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              {headerText}\r\n              {/* Vehicle Added! */}\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              {bodyText}\r\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst LoadingModal = () => {\r\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n  return (\r\n\r\n    <Box\r\n      position=\"absolute\"\r\n      top={0}\r\n      bottom={0}\r\n      left={0}\r\n      right={0}\r\n      backgroundColor=\"rgba(0, 0, 0, 0.5)\"\r\n      flex={1}\r\n      display={loadingModalVisible ? '' : 'none'}\r\n    >\r\n      {/* Content within the modal */}\r\n      <Center flex={1}>\r\n        <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n          <Spinner size=\"lg\" color=\"white\" />\r\n          <Text color={'white'}>Loading, please wait!</Text>\r\n        </Box>\r\n      </Center>\r\n    </Box>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedExpenseName}\r\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedExpenseName = value\r\n      dispatch(setSelectedExpenseName(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Expense Name\"\r\n    placeholder=\"Choose Expense Name\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {expenseNameData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n\r\n\r\n};\r\nconst SelectPaidTo = ({ paidToIsError, }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedPaidTo}\r\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedPaidTo = value\r\n      dispatch(setSelectedPaidTo(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Paid To\"\r\n    placeholder=\"Choose Paid To\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {paidToData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n    ;\r\n};\r\n\r\n\r\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\r\n\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const handleModalCalendarOpen = () => {\r\n    setModalCalendarVisible(true);\r\n  };\r\n\r\n  const handleModalCalendarClose = () => {\r\n    setModalCalendarVisible(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <Pressable onPress={handleModalCalendarOpen} flex={3}>\r\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n      </Pressable>\r\n\r\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n        <Modal.CloseButton />\r\n        <Modal.Content>\r\n          <Box height={'full'} flex={1}>\r\n\r\n            <Calendar\r\n              onDayPress={useCallback(day => {\r\n                setSelectedDate(day.dateString);\r\n                // console.log(day.dateString);\r\n                globalSPCSelectedDate = day.dateString;\r\n                handleModalCalendarClose();\r\n              }, [])}\r\n              markedDates={{\r\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n              }}\r\n              renderArrow={(direction) => (\r\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n              )}\r\n              enableSwipeMonths={true}\r\n              initialDate={selectedDate}\r\n              showSixWeeks />\r\n\r\n          </Box>\r\n\r\n        </Modal.Content>\r\n\r\n      </Modal></>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst SupplyChainsCosts = ({\r\n  handleAddExpenseNameTextChange,\r\n  textAreaAddExpenseName,\r\n  inputExpenseAmount,\r\n  handleInputExpenseAmountChange,\r\n  handleAddPaidToTextChange,\r\n  paidToData,\r\n  inputCarNotes,\r\n\r\n}) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const [sccData, setSccData] = useState([]);\r\n  const currentDate = useSelector((state) => state.currentDate);\r\n  const [supplyChainsCostsModalVisible, setSupplyChainsCostsModalVisible] = useState(false);\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n\r\n  const [clearModalVisible, setClearModalVisible] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\r\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\r\n  const [paidToIsError, setPaidToIsError] = useState(false);\r\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\r\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\r\n  const selectExpenseNameRef = useRef(null);\r\n  const selectPaidToRef = useRef(null);\r\n\r\n\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsOpen = () => {\r\n    setSupplyChainsCostsModalVisible(true);\r\n  };\r\n\r\n  const handleModalSupplyChainsCostsClose = () => {\r\n    setSupplyChainsCostsModalVisible(false);\r\n    inputExpenseAmount.current?.clear();\r\n    globalSelectedExpenseName = '';\r\n    setSelectResetKey(nanoid());\r\n    globalSelectedPaidTo = '';\r\n    setSelectedDate(currentDate);\r\n    globalSPCSelectedDate = currentDate;\r\n    dispatch(setSelectedExpenseName(''));\r\n    dispatch(setSelectedPaidTo(''));\r\n    setInputAmountIsError(false);\r\n    setExpenseNameIsError(false);\r\n    setPaidToIsError(false);\r\n  };\r\n\r\n  const handleClearModalOpen = () => {\r\n    setClearModalVisible(true);\r\n  };\r\n\r\n  const handleClearModalClose = () => {\r\n    setClearModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const amounts = supplyChainsCostsData.map((item) => {\r\n      const expenseName = Object.keys(item)[0];\r\n      const expenseData = item[expenseName];\r\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n    });\r\n\r\n    // Use reduce to add up all the amounts\r\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n    const formattedTotalAmount = totalAmount.toLocaleString();\r\n    setTotalAmount(formattedTotalAmount);\r\n    globalSupplyChainCostsAmount = formattedTotalAmount;\r\n\r\n  }, [supplyChainsCostsData]);\r\n\r\n  const handleSave = useCallback(() => {\r\n\r\n\r\n\r\n    if (inputExpenseAmount.current?.value == ''\r\n      || inputExpenseAmount.current?.value == 0\r\n      || globalSelectedExpenseName == ''\r\n      || globalSelectedPaidTo == ''\r\n    ) {\r\n\r\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\r\n        setInputAmountIsError(true);\r\n      }\r\n\r\n      if (globalSelectedExpenseName == '') {\r\n        setExpenseNameIsError(true);\r\n      }\r\n\r\n      if (globalSelectedPaidTo == '') {\r\n        setPaidToIsError(true);\r\n      }\r\n    }\r\n\r\n    else {\r\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\r\n\r\n      if (existingIndex !== -1) {\r\n        // If an entry with the same expense name exists, update it\r\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\r\n        updatedData[existingIndex][globalSelectedExpenseName] = {\r\n          expenseName: globalSelectedExpenseName,\r\n          amount: inputExpenseAmount.current?.value,\r\n          date: globalSPCSelectedDate,\r\n          paidName: globalSelectedPaidTo,\r\n        };\r\n        globalSupplyChainCostsData = updatedData;\r\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n\r\n      } else {\r\n        setInputAmountIsError(false);\r\n        setExpenseNameIsError(false);\r\n        setPaidToIsError(false);\r\n        // If no entry with the same expense name exists, add a new entry\r\n        const newData = {\r\n          [globalSelectedExpenseName]: {\r\n            expenseName: globalSelectedExpenseName,\r\n            amount: inputExpenseAmount.current?.value,\r\n            date: globalSPCSelectedDate,\r\n            paidName: globalSelectedPaidTo,\r\n          },\r\n        };\r\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\r\n        console.log(globalSupplyChainCostsData);\r\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\r\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\r\n        setSelectResetKey(nanoid());\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const handleEditPress = useCallback((item) => {\r\n    console.log(item.amount);\r\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\r\n    dispatch(setSelectedExpenseName(item.expenseName));\r\n    globalSelectedExpenseName = item.expenseName;\r\n    dispatch(setSelectedPaidTo(item.paidName));\r\n    globalSelectedPaidTo = item.paidName;\r\n    globalSPCSelectedDate = item.date;\r\n    setSelectedDate(item.date);\r\n  }, [])\r\n\r\n\r\n  const handleDeleteItem = (expenseName) => {\r\n    // Find the index of the item to be deleted\r\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\r\n\r\n    if (itemIndex !== -1) {\r\n      // Create a copy of the data array and remove the item at the found index\r\n      const newData = [...globalSupplyChainCostsData];\r\n      newData.splice(itemIndex, 1);\r\n\r\n      // Update the state with the new array\r\n      dispatch(setSupplyChainsCostsData(newData));\r\n      globalSupplyChainCostsData = newData;\r\n    }\r\n  };\r\n\r\n  const handleFirstModalClose = () => {\r\n    setSupplyChainsCostsModalVisible(false);\r\n\r\n  };\r\n  const handleFirstModalOpen = () => {\r\n    setSupplyChainsCostsModalVisible(true);\r\n\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        borderRadius={3}\r\n        flex={1}\r\n        onPress={handleModalSupplyChainsCostsOpen}\r\n        variant={'outline'}\r\n        _text={{ color: 'black', }}\r\n        leftIcon={<MaterialIcons name=\"payments\" size={20} color=\"black\" />}>\r\n        <Text>Supply Chains Costs: ¥{totalAmount}</Text>\r\n      </Button>\r\n\r\n      <Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\r\n        <Modal.Content bgColor={'white'} w={'50%'} h={'auto'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header bgColor={'#7B9CFF'}>\r\n            <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\r\n\r\n\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Box height={'full'}>\r\n              <Box paddingBottom={5}>\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\r\n\r\n                    <SupplyChainsCostsSortAndAddModal\r\n                      docName='ExpenseName'\r\n                      handleAddTextChange={handleAddExpenseNameTextChange}\r\n                      textAreaAdd={textAreaAddExpenseName}\r\n                      title='Expense Name'\r\n                      dataName={'expenseName'}\r\n                      databaseInit={projectExtensionFirestore}\r\n                      headerText=\"Rearrange/Add Expense Name\"\r\n                      data={expenseNameData}\r\n                      handleFirstModalClose={handleFirstModalClose}\r\n                      handleFirstModalOpen={handleFirstModalOpen}\r\n                    />\r\n                  </Box>\r\n\r\n                  <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\r\n                  {/* <Select\r\n                    // ref={selectExpenseNameRef}\r\n                    key={`expenseName${resetKey}`}\r\n                    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n                    flex={3}\r\n                    onValueChange={(value) => {\r\n                      globalSelectedExpenseName = value\r\n                    }}\r\n                    accessibilityLabel=\"Choose Expense Name\"\r\n                    placeholder=\"Choose Expense Name\"\r\n                    _selectedItem={{\r\n                      bg: \"teal.600\",\r\n                      endIcon: <CheckIcon size=\"5\" />\r\n                    }}>\r\n                    {expenseNameData.map((item) => (\r\n\r\n                      <Select.Item key={item} label={item} value={item} />\r\n\r\n                    ))}\r\n                  </Select> */}\r\n\r\n\r\n                </Box>\r\n\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1} >Amount</Text>\r\n                  </Box>\r\n                  <Input\r\n                    borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\r\n                    flex={3}\r\n                    ref={inputExpenseAmount}\r\n                    onChangeText={handleInputExpenseAmountChange}\r\n                    placeholder=\"Amount\"\r\n                    bgColor={'white'}\r\n                    placeholderTextColor={'muted.400'}\r\n                    InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\r\n                </Box>\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\r\n                  </Box>\r\n\r\n                  <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\r\n                </Box>\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\r\n\r\n\r\n                    <SupplyChainsCostsSortAndAddModal\r\n                      docName='PaidTo'\r\n                      handleAddTextChange={handleAddPaidToTextChange}\r\n                      textAreaAdd={textAreaAddExpenseName}\r\n                      title='Paid To'\r\n                      dataName={'paidTo'}\r\n                      databaseInit={projectExtensionFirestore}\r\n                      headerText=\"Rearrange/Add Paid To\"\r\n                      data={paidToData}\r\n                      handleFirstModalClose={handleFirstModalClose}\r\n                      handleFirstModalOpen={handleFirstModalOpen}\r\n                    />\r\n\r\n                  </Box>\r\n\r\n                  <SelectPaidTo paidToIsError={paidToIsError} />\r\n                </Box>\r\n\r\n                <Button\r\n                  onPress={handleSave}\r\n                  colorScheme={'success'}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                  margin={1}\r\n                  flex={1}\r\n                  width={'40%'}\r\n                  alignSelf={'center'}\r\n                  leftIcon={<MaterialIcons name='add' color='white' size={20} />}\r\n                >\r\n                  ADD\r\n                </Button>\r\n              </Box>\r\n\r\n              <Box>\r\n                <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\r\n                </Box>\r\n                {supplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n\r\n                  return (\r\n                    <Box key={index} flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\r\n                      justifyContent={'center'} alignItems={'center'}>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      <Box flex={1} marginLeft={1} flexDir={'row'}>\r\n\r\n                        <Pressable flex={1} margin={1} onPress={() => handleEditPress(expenseData)}>\r\n                          {({\r\n                            isHovered,\r\n                            isFocused,\r\n                            isPressed\r\n                          }) => {\r\n                            return <Box flex={1} bgColor={isHovered ? 'primary.700' : 'primary.500'} borderRadius={3}>\r\n                              <Text flex={1} textAlign={'center'} color={'white'}>Edit</Text>\r\n                            </Box>\r\n                          }}\r\n                        </Pressable>\r\n\r\n                        <Pressable flex={1} margin={1} onPress={() => handleDeleteItem(expenseData.expenseName)}>\r\n                          {({\r\n                            isHovered,\r\n                            isFocused,\r\n                            isPressed\r\n                          }) => {\r\n                            return <Box flex={1} bgColor={isHovered ? 'error.800' : 'error.500'} borderRadius={3}>\r\n                              <Text flex={1} textAlign={'center'} color={'white'}>Delete</Text>\r\n                            </Box>\r\n                          }}\r\n                        </Pressable>\r\n                      </Box>\r\n                    </Box>\r\n                  );\r\n                })}\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n\r\n          </Modal.Body>\r\n\r\n\r\n          <HStack space={5} width={'full'} justifyContent={'space-between'}>\r\n            <Box flex={4} />\r\n            <Button\r\n              onPress={handleModalSupplyChainsCostsClose}\r\n              colorScheme={'gray'}\r\n              size={'sm'}\r\n              borderRadius={5}\r\n              margin={1}\r\n              flex={1}\r\n            >\r\n              Close\r\n            </Button>\r\n          </HStack>\r\n\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n        <Modal.Content bgColor={'amber.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'amber.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'amber.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'amber.600'} bold>\r\n                Warning!\r\n              </Text>\r\n              <Text color={'amber.600'}>\r\n                Are you sure you want to clear?\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleClearModalClose}\r\n                colorScheme={'warmGray'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button\r\n                onPress={() => {\r\n\r\n                }}\r\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                Clear\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = projectControlAuth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nconst storage = getStorage(projectExtensionFirebase);\r\n\r\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\r\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n\r\n  const handleModalDeleteOpen = () => {\r\n    setModalDeleteImagesVisible(true);\r\n  };\r\n\r\n  const handleModalDeleteClose = () => {\r\n    setModalDeleteImagesVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        position=\"absolute\"\r\n        top={0}\r\n        right={0}\r\n        bg=\"error.500\"\r\n        borderRadius={3}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        display={isAddPhotoVisible ? 'none' : 'block'}\r\n      >\r\n        <Pressable onPress={handleModalDeleteOpen} flex={1}>\r\n          <Icon as={<Ionicons name=\"trash-sharp\" />} size={5} color=\"white\" cursor={'pointer'} />\r\n        </Pressable>\r\n      </Box>\r\n\r\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\r\n        <Modal.Content bgColor={'error.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear Images\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'error.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.400'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.500'} bold>\r\n                Alert!\r\n              </Text>\r\n              <Text color={'danger.500'}>\r\n                Are you sure you want to clear <Text color={'danger.500'} bold>{selectedImages.length} </Text>selected image(s)?\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalDeleteClose} colorScheme={'warmGray'} flex={1} size={'sm'} borderRadius={5}>\r\n                No\r\n              </Button>\r\n              <Button onPress={handleClearImages} flex={1} size={'sm'} colorScheme={'error'} borderRadius={5}>\r\n                Clear Images\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\r\n  const dispatch = useDispatch();\r\n  const { width } = Dimensions.get('window');\r\n\r\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  const [boolean, setBoolean] = useState(true);\r\n  const selectedImages = useSelector((state) => state.selectedImages);\r\n  // const [selectedImages, setSelectedImages] = useState([]);\r\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\r\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\r\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\r\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\r\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n  const [scrollEnabled, setscrollEnabled] = useState(true);\r\n  const [isEnterEdit, setisEnterEdit] = useState(false);\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setIsCursorLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    dropdown: {\r\n      margin: 16,\r\n      height: 50,\r\n      borderBottomColor: 'gray',\r\n      borderBottomWidth: 0.5,\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n      fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n      height: 40,\r\n      fontSize: 16,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 20,\r\n\r\n    },\r\n    txt: {\r\n      fontSize: 18,\r\n      lineHeight: 24,\r\n      padding: 5\r\n    },\r\n    sort: {\r\n    },\r\n    item_children: {\r\n      width: 90,\r\n      height: 90,\r\n      backgroundColor: 'black',\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    item_delete_icon: {\r\n      width: 14,\r\n      height: 14,\r\n      position: \"absolute\",\r\n      right: 1,\r\n      top: 1\r\n    },\r\n    item_icon: {\r\n      width: 90,\r\n      height: 90,\r\n      resizeMode: \"contain\",\r\n      position: \"absolute\"\r\n    }\r\n  });\r\n\r\n  const handleImageAddToSelection = async () => {\r\n    dispatch(setDeleteImageVisible(true));\r\n    if (selectedImages.length === 40) {\r\n      return; // Limit reached, do not add a new image\r\n    }\r\n\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Filter out images larger than 10MB\r\n      const newImages = [...selectedImages];\r\n      const promises = response.assets.map(async (asset) => {\r\n        const file = await fetch(asset.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          const exists = newImages.some((image) => image.uri === asset.uri);\r\n          if (!exists) {\r\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\r\n          }\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      });\r\n\r\n      await Promise.all(promises);\r\n\r\n      const limitedImages = newImages.slice(0, 40);\r\n      dispatch(setSelectedImages(limitedImages));\r\n      globalSelectedImages = limitedImages;\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      // limitedImages.forEach((image) => {\r\n      //   console.log(`File size: ${image.fileSize}`);\r\n      // });\r\n\r\n    } catch (error) {\r\n      console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n  const reloadData = useCallback(() => {\r\n    if (selectedImages.length > 0) {\r\n      // ... Logic to reload data using selectedImages and width\r\n\r\n      // Assuming your logic has updated selectedImages, you can directly use it here\r\n      const updatedSelectedImages = [...selectedImages];\r\n\r\n      // Dispatch the updatedSelectedImages array to the state\r\n      dispatch(setSelectedImages(updatedSelectedImages));\r\n    }\r\n\r\n  }, [widthState]);\r\n\r\n  useEffect(() => {\r\n    const handleWidthChange = ({ window }) => {\r\n      setWidthState(window.width);\r\n    };\r\n\r\n    Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n    return () => {\r\n      Dimensions.removeEventListener('change', handleWidthChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, [reloadData]);\r\n\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    setModalDeleteImagesVisible(false);\r\n    // dispatch(setSelectedImages([]));\r\n    // globalSelectedImages = [];\r\n    // dispatch(setIsAddPhotoVisible(true));\r\n    // dispatch(setAddAnotherImages(false));\r\n    // dispatch(setDeleteImageVisible(true));\r\n    handleClearImagesExtra();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const renderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleImageSelection = async () => {\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40,\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Remove duplicates from the selected images\r\n      const uniqueImages = response.assets.filter(\r\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\r\n      );\r\n\r\n      // Filter out images larger than 10MB\r\n      const filteredImages = [];\r\n      const imageOrder = [];\r\n      for (let index = 0; index < uniqueImages.length; index++) {\r\n        const image = uniqueImages[index];\r\n        const file = await fetch(image.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          filteredImages.push(image);\r\n          imageOrder.push(index);\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      }\r\n\r\n\r\n      // Sort the filtered images based on their original order\r\n      const sortedImages = filteredImages.sort((a, b) => {\r\n        const indexA = imageOrder[filteredImages.indexOf(a)];\r\n        const indexB = imageOrder[filteredImages.indexOf(b)];\r\n        return indexA - indexB;\r\n      });\r\n\r\n\r\n\r\n      // Limit the number of selected images to 40\r\n      const limitedImages = sortedImages.slice(0, 40);\r\n\r\n      globalSelectedImages = limitedImages;\r\n      if (limitedImages.length > 0) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(true));\r\n      }\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      dispatch(setSelectedImages(globalSelectedImages));\r\n\r\n    } catch (error) {\r\n      console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleDeleteImagePress = useCallback((uri) => {\r\n\r\n    globalSelectedImages = globalSelectedImages.filter((item) => {\r\n      // Replace 'uriToDelete' with the URI you want to delete\r\n      return item.uri !== uri;\r\n    });\r\n\r\n    if (globalSelectedImages.length < 40) {\r\n      dispatch(setAddAnotherImages(true));\r\n    }\r\n\r\n    if (globalSelectedImages.length == 0) {\r\n      dispatch(setAddAnotherImages(false));\r\n      dispatch(setIsAddPhotoVisible(true));\r\n    }\r\n    dispatch(setSelectedImages(globalSelectedImages));\r\n    // dispatch(setSelectedImages((prevImages) => {\r\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\r\n\r\n    //   if (updatedImages.length < 40) {\r\n    //     dispatch(setAddAnotherImages(true));\r\n    //   }\r\n    //   if (updatedImages.length == 0) {\r\n    //    dispatch(setAddAnotherImages(false));\r\n    //     dispatch(setIsAddPhotoVisible(true));\r\n    //   }\r\n    //   return updatedImages;\r\n    // }));\r\n\r\n    // console.log(globalSelectedImages.map((item) => item.uri));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\r\n\r\n\r\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\r\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\r\n\r\n            <ClearImagesModal\r\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\r\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\r\n              handleClearImages={handleClearImages}\r\n              selectedImages={selectedImages}\r\n              isAddPhotoVisible={isAddPhotoVisible} />\r\n\r\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\r\n\r\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"white\" />\r\n\r\n\r\n              <ScrollView\r\n                scrollEnabled={scrollEnabled}\r\n                flex={1}\r\n              >\r\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\r\n\r\n\r\n                  <DragSortableView\r\n\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    delayLongPress={100}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onDragStart={useCallback(() => {\r\n                      if (!isEnterEdit) {\r\n                        setisEnterEdit(true);\r\n                        setscrollEnabled(false);\r\n                      } else {\r\n                        setscrollEnabled(false);\r\n                      }\r\n                    }, [])}\r\n                    onDragEnd={useCallback(() => {\r\n                      setscrollEnabled(true);\r\n                    }, [])}\r\n                    onDataChange={useCallback((data) => {\r\n\r\n                      if (data.length !== data) {\r\n                        dispatch(setSelectedImages(data));\r\n                        globalSelectedImages = data;\r\n                      }\r\n\r\n                    }, [])}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => renderItem(item, index), [])} />\r\n\r\n                  <Center>\r\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"white\" />\r\n                  </Center>\r\n\r\n                </Box>\r\n\r\n\r\n\r\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    sortable={false}\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\r\n\r\n                </Box>\r\n              </ScrollView>\r\n\r\n\r\n\r\n\r\n            </Box>\r\n\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={0}\r\n              left={0}\r\n              borderRadius={3}\r\n              bgColor={'rgba(0, 0, 0, 0.5)'}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              display={isAddPhotoVisible ? 'none' : 'block'}>\r\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\r\n            </Box>\r\n          </Box>\r\n\r\n        </ScrollView>\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      {/* </Box> */}\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'}>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} >\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Please select image(s) smaller than 10MB!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst SuccessFailModal = ({ isSuccessOpen, isFailedOpen, handleFailModalClose, inputStockIDNumber, handleSuccessModalClose }) => {\r\n  const okSuccessButtonRef = useRef(null);\r\n  const okFailButtonRef = useRef(null);\r\n\r\n  return (\r\n    <><Modal isOpen={isSuccessOpen} onClose={handleSuccessModalClose} initialFocusRef={okSuccessButtonRef} finalFocusRef={inputStockIDNumber}>\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text color={'#102A43'} bold>\r\n            Success!\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              Success!\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              Stock ID Exist!\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button ref={okSuccessButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleSuccessModalClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n      <Modal isOpen={isFailedOpen} onClose={handleFailModalClose} initialFocusRef={okFailButtonRef} finalFocusRef={inputStockIDNumber} >\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Stock ID Do Not Exist!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button ref={okFailButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleFailModalClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal></>\r\n  );\r\n}\r\n\r\n\r\nconst StockIDAndMakeAndModel = ({\r\n  selectStockStatus,\r\n  handleSetBordersWhite,\r\n  inputFobUsd,\r\n  handleClearIfError,\r\n  monthNumbers,\r\n  steeringData,\r\n  selectPort,\r\n  selectSales,\r\n  selectBuyer,\r\n  inputRefNum,\r\n  inputChassis,\r\n  inputModelCode,\r\n  inputEngineCode,\r\n  inputEngineDis,\r\n  selectSteering,\r\n  inputMileage,\r\n  selectTransmission,\r\n  selectExteriorColor,\r\n  inputNumOfSeats,\r\n  inputDoors,\r\n  inputPurchasedPrice,\r\n  selectFuel,\r\n  inputDimensionLength,\r\n  inputDimensionWidth,\r\n  inputDimensionHeight,\r\n  inputDimensionCubicMeters,\r\n  selectDriveType,\r\n  inputWeight,\r\n  selectBodyType,\r\n  inputCarName,\r\n  inputCarDesc,\r\n  inputFobJpy,\r\n  selectRegYear,\r\n  selectRegMonth,\r\n  setRefNumFromSelects,\r\n  inputStockIDNumber,\r\n  stockIDNumError,\r\n  selectMakeForModelRef,\r\n  textAreaAddModel,\r\n  selectMakeForAddModelRef,\r\n  handleAddMakeTextChange,\r\n  textAreaAddMake,\r\n  makeError,\r\n  modelError,\r\n  selectMakeBoxRef,\r\n  selectMakeRef,\r\n  selectModelRef,\r\n  selectModelBoxRef,\r\n  setCarNameFromSelects,\r\n  setCarNameFromSelectsModel,\r\n  inputCarNotes,\r\n  inputCarMemo,\r\n  purchasedPriceError,\r\n  handleInputPurchasedPriceChange }) => {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  // const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const makeData = useSelector((state) => state.makeData);\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const portData = useSelector((state) => state.portData);\r\n  // const isLoading = useSelector((state) => state.isLoading);\r\n  const transmissionData = useSelector((state) => state.transmissionData);\r\n  const fuelData = useSelector((state) => state.fuelData);\r\n  const buyerData = useSelector((state) => state.buyerData);\r\n  const salesData = useSelector((state) => state.salesData);\r\n  const driveTypeData = useSelector((state) => state.driveTypeData);\r\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\r\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\r\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\r\n  // const usdToJpy = useSelector((state) => state.usdToJpy);\r\n\r\n\r\n  const [modelData, setModelData] = useState([]);\r\n  const [isSearchLoading, setIsSearchLoading] = useState(false);\r\n  const [isSuccessOpen, setIsSuccessOpen] = useState(false);\r\n  const [isFailedOpen, setIsFailedOpen] = useState(false);\r\n  const [fetchedData, setFetchedData] = useState([]);\r\n  const [model, setModel] = useState('');\r\n  const [key, setKey] = useState(0);\r\n  // useEffect(() => {\r\n\r\n  //   selectModelRef.current.selectIndex(modelData.indexOf(model));\r\n  //   console.log(model);\r\n  // }, [modelData]);\r\n\r\n  // const exportFunction = () => {\r\n  //   const clearModelData = () =>{\r\n  //       setModelData([]);\r\n  //   };\r\n\r\n  //   return clearModelData;\r\n  // }\r\n\r\n  const handleInputFobJpyChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    // console.log(globalJpyToUsd);\r\n    // Check if the numeric value starts with 0\r\n    if (numericValue.startsWith('0')) {\r\n      // Handle the case when the value starts with 0\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n      return;\r\n    }\r\n\r\n    // Truncate the numeric value to a maximum of 9 digits\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n    if (formattedValue !== '') {\r\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\r\n\r\n      if (!isNaN(multipliedValue)) {\r\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\r\n      } else {\r\n        // Handle the case when the multipliedValue is NaN\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: '' });\r\n      }\r\n    } else {\r\n      // Handle the case when formattedValue is empty\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n    }\r\n  };\r\n\r\n\r\n  const getImages = useCallback(async (folderName) => {\r\n    // const dispatch = useDispatch();\r\n    dispatch(setLoadingModalVisible(true));\r\n    try {\r\n\r\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\r\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n\r\n      const urls = await Promise.all(\r\n        imageRefs.items.map(async (itemRef) => {\r\n          const uri = await getDownloadURL(itemRef);\r\n          return { uri, fileName: itemRef.name };\r\n        })\r\n      );\r\n\r\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\r\n      urls.sort((a, b) => {\r\n        const fileNameA = parseInt(a.fileName);\r\n        const fileNameB = parseInt(b.fileName);\r\n        return fileNameA - fileNameB;\r\n      });\r\n\r\n      if (urls.length > 0) {\r\n        dispatch(setDeleteImageVisible(false));\r\n        dispatch(setSelectedImages(urls));\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n        globalSelectedImages = urls;\r\n\r\n      }\r\n\r\n      else {\r\n        dispatch(setDeleteImageVisible(true));\r\n        dispatch(setIsAddPhotoVisible(true));\r\n        dispatch(setAddAnotherImages(false));\r\n        dispatch(setSelectedImages([]));\r\n        dispatch(setDeleteImageVisible(true));\r\n        globalSelectedImages = [];\r\n      }\r\n\r\n\r\n      console.log(urls);\r\n\r\n    } catch (error) {\r\n      // Handle any errors that may occur during the Firebase operations\r\n      console.error('Error getting image URLs:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleSearchPress = useCallback(async () => {\r\n\r\n\r\n    if (inputStockIDNumber.current?.value !== '') {\r\n      dispatch(setLoadingModalVisible(true));\r\n      setIsSearchLoading(true);\r\n      setIsSuccessOpen(false);\r\n      setIsFailedOpen(false);\r\n\r\n      const q = query(collection(projectExtensionFirestore, 'VehicleProducts'), where('stockID', '==', inputStockIDNumber.current?.value));\r\n\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      if (querySnapshot.empty) {\r\n        console.log('No documents found');\r\n        // setIsLoading(false);\r\n        dispatch(setDeleteImageVisible(true));\r\n        setIsSearchLoading(false);\r\n        setIsFailedOpen(true);\r\n        dispatch(setIsAddPhotoVisible(true));\r\n        dispatch(setAddAnotherImages(false));\r\n        dispatch(setSelectedImages([]));\r\n        globalSelectedImages = [];\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n      }\r\n\r\n\r\n      else {\r\n\r\n        // dispatch(setSelectedImages([]));\r\n        // globalSelectedImages = [];\r\n\r\n        querySnapshot.forEach(async (item) => {\r\n          const data = item.data();\r\n          selectModelRef.current.reset();\r\n          // console.log(item.id, \" => \", item.data().make);\r\n          setIsSearchLoading(false);\r\n          // setIsSuccessOpen(true);\r\n\r\n          // fetchModelData();\r\n          // setModel(data.model);\r\n\r\n          // console.log(portData);    \r\n          async function fetchDataAndSelectIndex() {\r\n            try {\r\n              const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\r\n              const docSnapshot = await getDoc(collectionRef);\r\n              if (docSnapshot.exists()) {\r\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n              }\r\n            } catch (error) {\r\n              console.error('Error fetching models data from Firebase: ', error);\r\n            }\r\n          }\r\n\r\n          try {\r\n            const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\r\n            const docSnapshot = await getDoc(collectionRef);\r\n            if (docSnapshot.exists()) {\r\n              const modelsDataFromFirebase = docSnapshot.data().model;\r\n              setModelData(modelsDataFromFirebase);\r\n              globalModelDataVariable = modelsDataFromFirebase;\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching models data from Firebase: ', error);\r\n          }\r\n\r\n          handleSetBordersWhite();\r\n          fetchDataAndSelectIndex();\r\n          selectStockStatus.current.selectIndex(stockStatusData.indexOf(data.stockStatus));\r\n          selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\r\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\r\n          selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(parseInt(data.regYear, 10)));\r\n          selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\r\n          selectPort.current.selectIndex(portData.findIndex(item => item.id === data.portID));\r\n          selectSales.current.selectIndex(salesData.findIndex(item => item.id === data.salesID));\r\n          selectBuyer.current.selectIndex(buyerData.findIndex(item => item.id === data.buyerID));\r\n          inputRefNum.current.setNativeProps({ text: data.referenceNumber || '' });\r\n          inputChassis.current.setNativeProps({ text: data.chassisNumber || '' });\r\n          inputModelCode.current.setNativeProps({ text: data.modelCode || '' });\r\n          inputEngineCode.current.setNativeProps({ text: data.engineCode || '' });\r\n          inputEngineDis.current.setNativeProps({ text: data.engineDisplacement ? data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\r\n          inputMileage.current.setNativeProps({ text: data.mileage ? data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\r\n          selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\r\n          inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats || '' });\r\n          inputDoors.current.setNativeProps({ text: data.doors || '' });\r\n          inputPurchasedPrice.current.setNativeProps({ text: data.purchasedPrice ? data.purchasedPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\").toString() : '' });\r\n          selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\r\n          inputDimensionLength.current.setNativeProps({ text: data.dimensionLength ? data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth ? data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight ? data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters || '' });\r\n          selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\r\n          inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\r\n          selectBodyType.current.selectIndex(bodyTypeData.findIndex(item => item.toLowerCase() === data.bodyType.toLowerCase()));\r\n          inputCarName.current.setNativeProps({ text: data.carName || '' });\r\n          inputCarDesc.current.setNativeProps({ text: data.carDescription || '' });\r\n          inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          globalFobPrice = data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '';\r\n          handleInputFobJpyChange(data.fobPrice ? data.fobPrice : \"0\");\r\n          // selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\r\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\r\n          // selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\r\n          // selectPort.current.selectIndex(portData.findIndex(item => item.name === data.port));\r\n          // selectSales.current.selectIndex(salesData.findIndex(item => item.name === data.sales));\r\n          // selectBuyer.current.selectIndex(buyerData.findIndex(item => item.name === data.buyer));\r\n          // inputRefNum.current.setNativeProps({ text: data.referenceNumber });\r\n          // inputChassis.current.setNativeProps({ text: data.chassisNumber });\r\n          // inputModelCode.current.setNativeProps({ text: data.modelCode });\r\n          // inputEngineCode.current.setNativeProps({ text: data.engineCode });\r\n          // inputEngineDis.current.setNativeProps({ text: data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\r\n          // inputMileage.current.setNativeProps({ text: data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\r\n          // selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\r\n          // inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats });\r\n          // inputDoors.current.setNativeProps({ text: data.doors });\r\n          // selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\r\n          // inputDimensionLength.current.setNativeProps({ text: data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters });\r\n          // selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\r\n          // inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});          \r\n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\r\n          // inputCarName.current.setNativeProps({ text: data.carName });\r\n          // inputCarDesc.current.setNativeProps({ text: data.carDescription });\r\n          // inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});\r\n          // handleInputFobJpyChange(data.fobPrice);\r\n\r\n          if (data.notes == undefined) {\r\n            inputCarNotes.current.setNativeProps({ text: '' });\r\n          }\r\n          else {\r\n            inputCarNotes.current.setNativeProps({ text: data.notes });\r\n          }\r\n\r\n          if (data.memo == undefined) {\r\n            inputCarMemo.current.setNativeProps({ text: '' });\r\n\r\n          }\r\n          else {\r\n            inputCarMemo.current.setNativeProps({ text: data.memo });\r\n\r\n          }\r\n\r\n          featuresState.SafetySystemAnBrSy = data.SafetySystemAnBrSy;\r\n          featuresState.SafetySystemDrAi = data.SafetySystemDrAi;\r\n          featuresState.SafetySystemPaAi = data.SafetySystemPaAi;\r\n          featuresState.SafetySystemSiAi = data.SafetySystemSiAi;\r\n          featuresState.ComfortAiCoFr = data.ComfortAiCoFr;\r\n          featuresState.ComfortAiCoRe = data.ComfortAiCoRe;\r\n          featuresState.ComfortAMFMRa = data.ComfortAMFMRa;\r\n          featuresState.ComfortAMFMSt = data.ComfortAMFMSt;\r\n          featuresState.ComfortCDPl = data.ComfortCDPl;\r\n          featuresState.ComfortCDCh = data.ComfortCDCh;\r\n          featuresState.ComfortCrSpCo = data.ComfortCrSpCo;\r\n          featuresState.ComfortDiSp = data.ComfortDiSp;\r\n          featuresState.ComfortDVDPl = data.ComfortDVDPl;\r\n          featuresState.ComfortHDD = data.ComfortHDD;\r\n          featuresState.ComfortNaSyGPS = data.ComfortNaSyGPS;\r\n          featuresState.ComfortPoSt = data.ComfortPoSt;\r\n          featuresState.ComfortPrAuSy = data.ComfortPrAuSy;\r\n          featuresState.ComfortReKeSy = data.ComfortReKeSy;\r\n          featuresState.ComfortTiStWh = data.ComfortTiStWh;\r\n          featuresState.InteriorLeSe = data.InteriorLeSe;\r\n          featuresState.InteriorPoDoLo = data.InteriorPoDoLo;\r\n          featuresState.InteriorPoMi = data.InteriorPoMi;\r\n          featuresState.InteriorPoSe = data.InteriorPoSe;\r\n          featuresState.InteriorPoWi = data.InteriorPoWi;\r\n          featuresState.InteriorReWiDe = data.InteriorReWiDe;\r\n          featuresState.InteriorReWiWi = data.InteriorReWiWi;\r\n          featuresState.InteriorThRoSe = data.InteriorThRoSe;\r\n          featuresState.InteriorTiGl = data.InteriorTiGl;\r\n          featuresState.ExteriorAlWh = data.ExteriorAlWh;\r\n          featuresState.ExteriorPoSlDo = data.ExteriorPoSlDo;\r\n          featuresState.ExteriorSuRo = data.ExteriorSuRo;\r\n          featuresState.SellingPointsCuWh = data.SellingPointsCuWh;\r\n          featuresState.SellingPointsFuLo = data.SellingPointsFuLo;\r\n          featuresState.SellingPointsMaHiAv = data.SellingPointsMaHiAv;\r\n          featuresState.SellingPointsBrNeTi = data.SellingPointsBrNeTi;\r\n          featuresState.SellingPointsNoAcHi = data.SellingPointsNoAcHi;\r\n          featuresState.SellingPointsNoSmPrOw = data.SellingPointsNoSmPrOw;\r\n          featuresState.SellingPointsOnOwHi = data.SellingPointsOnOwHi;\r\n          featuresState.SellingPointsPeRaTi = data.SellingPointsPeRaTi;\r\n          featuresState.SellingPointsReBo = data.SellingPointsReBo;\r\n          featuresState.SellingPointsTuEn = data.SellingPointsTuEn;\r\n          featuresState.SellingPointsUpAuSy = data.SellingPointsUpAuSy;\r\n\r\n          resetKey++;\r\n\r\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\r\n          makeVariable.text = data.make ? data.make : \"\";\r\n          modelVariable.text = data.model ? data.model : \"\";\r\n          regYearVariable.text = data.regYear ? data.regYear : \"\";\r\n          regMonthVariable.text = data.regMonth ? data.regMonth : \"\";\r\n          portVariable.text = data.port ? data.port : \"\";\r\n          salesVariable.text = data.sales ? data.sales : \"\";\r\n          buyerVariable.text = data.buyer ? data.buyer : \"\";\r\n          portVariable.id = data.portID ? data.portID : \"\";\r\n          salesVariable.id = data.salesID ? data.salesID : \"\";\r\n          buyerVariable.id = data.buyerID ? data.buyerID : \"\";\r\n          referenceNumberVariable.text = data.referenceNumber ? data.referenceNumber : \"\";\r\n          globalVehicleFolderName = data.stockID ? data.stockID : \"\";\r\n          steeringVariable.text = data.steering ? data.steering : \"\";\r\n          transmissionVariable.text = data.transmission ? data.transmission : \"\";\r\n          exteriorColorVariable.text = data.exteriorColor ? data.exteriorColor : \"\";\r\n          fuelVariable.text = data.fuel ? data.fuel : \"\";\r\n          driveTypeVariable.text = data.driveType ? data.driveType : \"\";\r\n          bodyTypeVariable.text = data.bodyType ? data.bodyType : \"\";\r\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\r\n          globalSupplyChainCostsData = data.supplyChainsCostsData ? data.supplyChainsCostsData : [];\r\n          dispatch(setSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\r\n\r\n          await getImages(globalVehicleFolderName);\r\n\r\n          dispatch(setLoadingModalVisible(false));\r\n\r\n          // const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), makeVariable.text), (snapshot) => {\r\n          //   setModelData(snapshot.data()?.model || []);\r\n          //   selectModelRef.current.selectIndex(modelData.indexOf(data.model));\r\n\r\n          //   return () => unsubscribe();\r\n          // });\r\n\r\n\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);;\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (isFailedOpen == false) {\r\n  //     handleClearIfError();\r\n  //   }\r\n\r\n\r\n  // }, [isFailedOpen])\r\n  const handleFailModalClose = useCallback(() => {\r\n    setIsFailedOpen(false);\r\n\r\n    handleClearIfError();\r\n\r\n\r\n  }, []);\r\n\r\n  const handleSuccessModalClose = useCallback(() => {\r\n    setIsSuccessOpen(false);\r\n\r\n    selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n    // console.log(globalModelDataVariable.indexOf(makeVariable.text));\r\n\r\n\r\n  }, []);\r\n\r\n  const handleModelChange = useCallback(() => {\r\n    // console.log('Selected make:', value);\r\n    setCarNameFromSelectsModel();\r\n\r\n  }, []);\r\n\r\n\r\n  const handleMakeChange = useCallback(async (item) => {\r\n    setCarNameFromSelects();\r\n    // dispatch(setSelectedMake(item));\r\n    // fetchModelData();\r\n    //  dispatch(setIsLoading(true));\r\n    try {\r\n      if (makeVariable.text !== '') {\r\n\r\n        try {\r\n\r\n          const collectionRef = doc(projectExtensionFirestore, 'Model', item);\r\n\r\n          const docSnapshot = await getDoc(collectionRef);\r\n          if (docSnapshot.exists()) {\r\n            const modelsDataFromFirebase = docSnapshot.data().model;\r\n            setModelData(modelsDataFromFirebase);\r\n            globalModelDataVariable = modelsDataFromFirebase;\r\n            // console.log(globalModelVariable);\r\n\r\n            // modelKey++;\r\n            // console.log(modelKey);\r\n            // dispatch(setIsLoading(false));\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching models data from Firebase: ', error);\r\n        }\r\n\r\n      }\r\n\r\n      else {\r\n        //  dispatch(setModelData([]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching models data from Firebase: ', error);\r\n    }\r\n\r\n  }, [projectExtensionFirestore, modelData, makeData]);\r\n\r\n  const handleInputStockIDNumberChange = useCallback((text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 10);\r\n    inputStockIDNumber.current.value = truncatedValue;\r\n    globalVehicleFolderName = truncatedValue;\r\n    setRefNumFromSelects();\r\n    // // Limit the numeric value to a maximum of 4 characters\r\n    // const truncatedValue = numericValue.slice(5);\r\n\r\n    // // Format the truncated numeric value with comma separator\r\n    // const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    // // Remove comma separator from the formatted value\r\n    // const valueWithoutCommas = formattedValue.replace(/,/g, '');\r\n\r\n    // inputStockIDNumber.current.value = valueWithoutCommas;\r\n  }, []);\r\n\r\n  const handleModelOnFocus = useCallback(() => {\r\n    // console.log(globalModelVariable.length);\r\n    const condition = makeVariable.text === '' && globalModelDataVariable.length > 0;\r\n\r\n    if (condition) {\r\n      globalModelDataVariable = [];\r\n      setModelData([]);\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n        <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={handleSearchPress} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\r\n          InputRightElement={\r\n            <Button isLoading={isSearchLoading} isLoadingText=\"Search\" size={'xs'} colorScheme={'primary'}\r\n              leftIcon={<Icon as={<MaterialIcons name=\"search\" />} size={5} color=\"white\" />}\r\n              onPress={() => {\r\n                handleSearchPress()\r\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n              }}>Search</Button>\r\n          }\r\n        />\r\n        </Box>\r\n        <SuccessFailModal inputStockIDNumber={inputStockIDNumber} isSuccessOpen={isSuccessOpen} setIsSuccessOpen={setIsSuccessOpen} isFailedOpen={isFailedOpen} setIsFailedOpen={setIsFailedOpen} handleSuccessModalClose={handleSuccessModalClose} handleFailModalClose={handleFailModalClose} />\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Purchase Price</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n        <Box bgColor={'white'} flex={1} borderColor={purchasedPriceError} borderWidth={1}>\r\n          <Input keyboardType=\"numeric\" flex={1} ref={inputPurchasedPrice} onChangeText={handleInputPurchasedPriceChange} bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"Purchase Price\" placeholderTextColor={'muted.400'} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Make</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n          <SortAndAddModal docName='Make' handleAddTextChange={handleAddMakeTextChange} textAreaAdd={textAreaAddMake} title='Make' dataName={'make'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Make\" data={makeData} />\r\n        </Box>\r\n\r\n        <Box ref={selectMakeBoxRef} bgColor={'white'} flex={1} borderColor={makeError} borderWidth={1}>\r\n\r\n\r\n          <SelectDropdown\r\n            ref={selectMakeRef}\r\n            buttonStyle={{\r\n              flex: 1,\r\n              width: '100%',\r\n              backgroundColor: 'white',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              padding: 4,\r\n            }}\r\n            buttonTextStyle={{\r\n              textAlign: 'left',\r\n              color: '#424242',\r\n              fontSize: 12,\r\n            }}\r\n            dropdownStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              shadowColor: '#000000',\r\n              shadowOffset: { width: 0, height: 2 },\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 4,\r\n              elevation: 2,\r\n            }}\r\n            rowStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 15,\r\n            }}\r\n            rowTextStyle={{\r\n              color: '#424242',\r\n              fontSize: 16,\r\n            }}\r\n            data={makeData}\r\n            onSelect={useCallback((selectedItem) => {\r\n              makeVariable.text = selectedItem;\r\n              selectModelRef.current.reset();\r\n              modelVariable.text = '';\r\n              handleMakeChange(selectedItem);\r\n\r\n\r\n            }, [])}\r\n            defaultButtonText=\"-- Choose Make --\"\r\n            buttonTextAfterSelection={(selectedItem) => {\r\n              return selectedItem;\r\n            }} SelectDropdown\r\n            renderDropdownIcon={(isOpened) => {\r\n              return (\r\n                <Ionicons\r\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                  color={'#424242'}\r\n                  size={18}\r\n                />\r\n              );\r\n            }}\r\n            rowTextForSelection={(item) => {\r\n              return item;\r\n            }}\r\n            searchPlaceHolder=\"Search for Make\"\r\n            searchInputStyle={{ marginTop: 2, }}\r\n            disableAutoScroll\r\n            search />\r\n\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} >\r\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Model</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n          <ModelSortAndAddModal\r\n            selectMakeForAddModelRef={selectMakeForAddModelRef}\r\n            selectMakeForModelRef={selectMakeForModelRef}\r\n            textAreaAddModel={textAreaAddModel}\r\n            makeData={makeData} />\r\n        </Box>\r\n        <Box ref={selectModelBoxRef} bgColor={'white'} flex={1} borderColor={modelError} borderWidth={1}>\r\n\r\n\r\n          <SelectDropdown\r\n\r\n            onFocus={handleModelOnFocus}\r\n            ref={selectModelRef}\r\n            // disabled={makeVariable.text === '' ? true : false}\r\n            // key={`make${key}`}\r\n            buttonStyle={{\r\n              flex: 1,\r\n              width: '100%',\r\n              backgroundColor: 'white',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              padding: 4,\r\n            }}\r\n            buttonTextStyle={{\r\n              textAlign: 'left',\r\n              color: '#424242',\r\n              fontSize: 12,\r\n            }}\r\n            dropdownStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              shadowColor: '#000000',\r\n              shadowOffset: { width: 0, height: 2 },\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 4,\r\n              elevation: 2,\r\n            }}\r\n            rowStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 15,\r\n            }}\r\n            rowTextStyle={{\r\n              color: '#424242',\r\n              fontSize: 16,\r\n            }}\r\n            // data={modelData.map((item) => item)}\r\n            data={modelData}\r\n            onSelect={useCallback((selectedItem) => {\r\n              modelVariable.text = selectedItem;\r\n              // console.log(modelVariable.text);\r\n\r\n\r\n              handleModelChange()\r\n            }, [])}\r\n            defaultButtonText=\"-- Choose Model --\"\r\n            buttonTextAfterSelection={(selectedItem) => {\r\n              return selectedItem;\r\n            }}\r\n            renderDropdownIcon={(isOpened) => {\r\n              return (\r\n                <Ionicons\r\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                  color={'#424242'}\r\n                  size={18}\r\n                />\r\n              );\r\n            }}\r\n            rowTextForSelection={(item) => {\r\n              return item;\r\n            }}\r\n            searchPlaceHolder=\"Search for Model\"\r\n            searchInputStyle={{ marginTop: 2, width: '100%', }}\r\n            disableAutoScroll\r\n            search\r\n\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n    handleFirstModalClose();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    handleFirstModalOpen();\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n\r\n  }, [modalSortOpen, modalIsLoading]);\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose} useRNModal>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        useRNModal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nconst SortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nconst PSBSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAddCode, textAreaAdd, handleAddTextChange, handleAddCodeTextChange, docName }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n  }, []);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n  }, []);\r\n\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    textAreaAdd.current.clear();\r\n    textAreaAddCode.current.clear();\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n\r\n  }, [])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, []);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataCode = textAreaAddCode.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n    const dataCodeArray = dataCode.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n\r\n    if (data !== '' && dataCode !== '') {\r\n      setModalSaveLoading(true);\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n\r\n        const dataToUpdate = dataArray.map((data, index) => ({\r\n          id: dataCodeArray[index],\r\n          name: data,\r\n        }));\r\n\r\n        const updateObject = {};\r\n        updateObject[dataName] = arrayUnion(...dataToUpdate);\r\n\r\n        await setDoc(modalDocRef, updateObject, { merge: true });\r\n        // const updateData = {\r\n        //   [dataName]: arrayUnion({ id: arrayUnion(...dataCodeArray), name: arrayUnion(...dataArray) })\r\n        // };\r\n\r\n        // await setDoc(modalDocRef, updateData, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity onPress={handleSortModalOpen} focusable={false}>\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item.id}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item.name}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAddCode}\r\n        size={'lg'}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          {/* <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} w={'full'}> */}\r\n          <HStack space={5} flex={1} margin={2}>\r\n            <VStack space={1} flex={1}>\r\n              <Text textAlign={'center'}>Code</Text>\r\n              <TextArea\r\n                flex={2}\r\n                textAlign={'center'}\r\n                w={'full'}\r\n                ref={textAreaAddCode}\r\n                multiline\r\n                onChangeText={handleAddCodeTextChange}\r\n                totalLines={8}\r\n                placeholder=\"Enter your data, separated by new lines\"\r\n              />\r\n            </VStack>\r\n            <VStack space={1} flex={1}>\r\n              <Text textAlign={'center'}>Name</Text>\r\n              <TextArea\r\n                flex={2}\r\n                textAlign={'center'}\r\n                w={'full'}\r\n                ref={textAreaAdd}\r\n                multiline\r\n                onChangeText={handleAddTextChange}\r\n                totalLines={8}\r\n                placeholder=\"Enter your data, separated by new lines\"\r\n              />\r\n            </VStack>\r\n          </HStack>\r\n          {/* </Modal.Body> */}\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleModalAddClose}\r\n                colorScheme={'muted'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}>\r\n                Close\r\n              </Button>\r\n              <Button\r\n                onPress={handleAddSubmit}\r\n                isLoading={modalSaveLoading ? true : false}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}>\r\n                Add\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nconst ModelSortAndAddModal = ({ selectMakeForAddModelRef, selectMakeForModelRef, textAreaAddModel, makeData }) => {\r\n\r\n  const [modalAddModel, setModalAddModel] = useState(false);\r\n  const [modalSaveModel, setModalSaveModel] = useState(false);\r\n  const [modalModel, setModalModel] = useState(false);\r\n  const [modalAddModelSuccess, setModalAddModelSuccess] = useState(false);\r\n  const [keySelectMakeForModel, setKeySelectMakeForModel] = useState(1);\r\n  const [keySelectMakeForAddModel, setKeySelectMakeForAddModel] = useState(1);\r\n  const [modelSortData, setModelSortData] = useState([]);\r\n  const [isAddModelDisabled, setIsAddModelDisabled] = useState(false);\r\n  const [modalSaveModelLoading, setModalSaveModelLoading] = useState(false);\r\n  const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n\r\n  const fetchModelSortData = async () => {\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n\r\n      const modelSortDocRef = doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value);\r\n      const modelSortDocSnap = await getDoc(modelSortDocRef);\r\n      if (modelSortDocSnap.exists()) {\r\n        setModelSortData(modelSortDocSnap.data()?.model || []);\r\n\r\n      }\r\n      else {\r\n        setModelSortData([]);\r\n      }\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n\r\n  //     const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), (snapshot) => {\r\n  //       setModelSortData(snapshot.data()?.model || []);\r\n  //       return () => unsubscribe();\r\n  //     });\r\n\r\n  //   }\r\n\r\n  // }, []);\r\n\r\n  const handleDeleteModelPress = useCallback(\r\n    (item) => {\r\n      setModelSortData((prevModelData) => {\r\n        const updatedModelData = prevModelData.filter((model) => model !== item);\r\n        return updatedModelData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const handleSaveModel = useCallback(async () => {\r\n    setModalSaveModelLoading(true);\r\n    console.log(selectMakeForModelRef.current?.value);\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n      try {\r\n        await updateDoc(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), { model: modelSortData });\r\n        setModalSaveModelLoading(false);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const logData = {\r\n          message: `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`.toLowerCase(),\r\n            'Model Update'.toLowerCase(),\r\n            'Model'.toLowerCase(),\r\n            'Update'.toLowerCase(),\r\n            selectMakeForModelRef.current.value.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n\r\n        addLogToCollection(logData);\r\n\r\n        handleModalSaveModelClose();\r\n      } catch (error) {\r\n        console.error(error);\r\n        setModalSaveModelLoading(false);\r\n        handleModalSaveModelClose();\r\n      }\r\n\r\n    }\r\n    else {\r\n      setModalSaveModelLoading(false);\r\n    }\r\n\r\n\r\n\r\n\r\n  }, [projectExtensionFirestore, modelSortData]);\r\n\r\n  const handleAddModelTextChange = () => {\r\n    const newText = textAreaAddModel.current?.value?.toUpperCase();\r\n    textAreaAddModel.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n  const handleMakeForModelChange = useCallback(() => {\r\n    makeForAddModelVariable.text = selectMakeForAddModelRef.current?.value;\r\n    fetchModelSortData();\r\n\r\n    // console.log(selectMakeForModelRef.current?.value);\r\n  }, []);\r\n\r\n  const handleMakeForAddModelChange = useCallback(() => {\r\n    setIsAddModelDisabled(false);\r\n\r\n  }, []);\r\n\r\n\r\n  const handleModalModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalModel(true);\r\n    fetchModelSortData();\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  const handleModalModelClose = useCallback(() => {\r\n    setModalIsLoading(false);\r\n\r\n    setModalModel(false);\r\n    setIsLoading(false);\r\n    setKeySelectMakeForModel(prevKey => prevKey + 1);\r\n    setModelSortData([]);\r\n  }, []);\r\n\r\n  const handleModalAddModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalAddModel(true);\r\n    // handleModalModelClose();\r\n    setModalModel(false);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleModalAddModelClose = useCallback(() => {\r\n    handleModalModelOpen();\r\n    setModalAddModel(false);\r\n    textAreaAddModel.current.clear();\r\n    setIsAddModelDisabled(true);\r\n    setIsLoading(false);\r\n    setKeySelectMakeForAddModel(prevKey => prevKey + 1);\r\n\r\n  }, []);\r\n\r\n  const handleModalAddModelSuccessOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalAddModel(false);\r\n    setModalModel(false);\r\n    textAreaAddModel.current.clear();\r\n    setModalAddModelSuccess(true);\r\n\r\n\r\n  }, []);\r\n\r\n  const handleModalAddModelSuccessClose = useCallback(() => {\r\n    setModalAddModelSuccess(false);\r\n    handleModalModelOpen();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleModalSaveModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n      setModalSaveModel(true);\r\n      // handleModalModelClose();\r\n      setModalModel(false);\r\n      setIsLoading(false);\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleModalSaveModelClose = useCallback(() => {\r\n    setModalSaveModel(false);\r\n    handleModalModelOpen();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleAddModelSubmit = async () => {\r\n    const data = textAreaAddModel.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n      setModalSaveLoading(true);\r\n      try {\r\n\r\n        const makeCollectionRef = collection(projectExtensionFirestore, 'Model');\r\n        const makeDocRef = doc(makeCollectionRef, selectMakeForAddModelRef.current?.value);\r\n        await setDoc(makeDocRef, { model: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`.toLowerCase(),\r\n            'Model Added'.toLowerCase(),\r\n            'Model'.toLowerCase(),\r\n            'Added'.toLowerCase(),\r\n            selectMakeForAddModelRef.current.value.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        setModalSaveLoading(false);\r\n        addLogToCollection(logData);\r\n\r\n        handleModalAddModelSuccessOpen();\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleModalModelOpen}>\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) :\r\n          (<Spinner color=\"white\" />)\r\n        }\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalModel}\r\n        onClose={handleModalModelClose} >\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Rearrange/Add Model</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n            <Box w={'full'} flexDir={'column'} height={'f'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddModelOpen}><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n              <Box>\r\n                <Select key={keySelectMakeForModel} ref={selectMakeForModelRef} onValueChange={handleMakeForModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\r\n                  bg: \"teal.600\",\r\n                  endIcon: <CheckIcon size=\"5\" />\r\n                }}>\r\n                  {makeData.map((item) => (\r\n\r\n                    <Select.Item key={item} label={item} value={item} />\r\n\r\n                  ))}\r\n                </Select>\r\n              </Box>\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modelSortData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16, 42, 67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteModelPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModelSortData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveModelOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n\r\n\r\n\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddModel}\r\n        onClose={handleModalAddModelClose}\r\n        initialFocusRef={selectMakeForAddModelRef}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add Model</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n            <Select key={keySelectMakeForAddModel} ref={selectMakeForAddModelRef} onValueChange={handleMakeForAddModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\r\n              bg: \"teal.600\",\r\n              endIcon: <CheckIcon size=\"5\" />\r\n            }}>\r\n              {makeData.map((item) => (\r\n\r\n                <Select.Item key={item} label={item} value={item} />\r\n\r\n              ))}\r\n            </Select>\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAddModel}\r\n              multiline\r\n              onChangeText={handleAddModelTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\"\r\n              isDisabled={isAddModelDisabled ? true : false}\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddModelSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSaveModel}\r\n        onClose={handleModalSaveModelClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Model Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSaveModel} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveModelLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalAddModelSuccess} onClose={handleModalAddModelSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Model Added!\r\n                {/* Vehicle Added! */}\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Model was successfully added! You can view it in the model list.\r\n                {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddModelSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nconst referenceNumberVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nconst nameVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nconst makeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst makeForAddModelVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\n\r\nconst modelVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst regYearVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst regMonthVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst steeringVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst transmissionVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst exteriorColorVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst fuelVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst portVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst salesVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst buyerVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst driveTypeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst bodyTypeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst stockStatusVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nlet resetKey = 0;\r\nconst featuresState = {\r\n  SafetySystemAnBrSy: false,\r\n  SafetySystemDrAi: false,\r\n  SafetySystemPaAi: false,\r\n  SafetySystemSiAi: false,\r\n  ComfortAiCoFr: false,\r\n  ComfortAiCoRe: false,\r\n  ComfortAMFMRa: false,\r\n  ComfortAMFMSt: false,\r\n  ComfortCDPl: false,\r\n  ComfortCDCh: false,\r\n  ComfortCrSpCo: false,\r\n  ComfortDiSp: false,\r\n  ComfortDVDPl: false,\r\n  ComfortHDD: false,\r\n  ComfortNaSyGPS: false,\r\n  ComfortPoSt: false,\r\n  ComfortPrAuSy: false,\r\n  ComfortReKeSy: false,\r\n  ComfortTiStWh: false,\r\n  InteriorLeSe: false,\r\n  InteriorPoDoLo: false,\r\n  InteriorPoMi: false,\r\n  InteriorPoSe: false,\r\n  InteriorPoWi: false,\r\n  InteriorReWiDe: false,\r\n  InteriorReWiWi: false,\r\n  InteriorThRoSe: false,\r\n  InteriorTiGl: false,\r\n  ExteriorAlWh: false,\r\n  ExteriorPoSlDo: false,\r\n  ExteriorSuRo: false,\r\n  SellingPointsCuWh: false,\r\n  SellingPointsFuLo: false,\r\n  SellingPointsMaHiAv: false,\r\n  SellingPointsBrNeTi: false,\r\n  SellingPointsNoAcHi: false,\r\n  SellingPointsNoSmPrOw: false,\r\n  SellingPointsOnOwHi: false,\r\n  SellingPointsPeRaTi: false,\r\n  SellingPointsReBo: false,\r\n  SellingPointsTuEn: false,\r\n  SellingPointsUpAuSy: false,\r\n};\r\n\r\nconst CheckBoxButton = ({ label, onChange, variable }) => {\r\n  const [checked, setChecked] = useState(variable);\r\n\r\n  // useEffect(() => {console.log(checked)}, [checked])\r\n\r\n  const handlePress = () => {\r\n\r\n    setChecked(!checked);\r\n    onChange(!checked);\r\n\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={{ flex: 1, justifyContent: 'center', }}\r\n      onPress={handlePress}\r\n    >\r\n      <Box\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        borderRadius={3}\r\n        bgColor={checked ? '#7b9cff' : 'white'}\r\n        margin={1}\r\n        overflow={'hidden'}\r\n        // h={50}\r\n        // w={180}\r\n        padding={2}\r\n        borderWidth={1}\r\n        borderColor={checked ? 'white' : 'muted.400'}\r\n      >\r\n        <Text\r\n          // fontSize={[9, 11, 12, 11, 12, 13]}\r\n          // maxW={[85, 100, 180, 100, 130, 180]}\r\n          textAlign={'center'}\r\n          noOfLines={3}\r\n          color={checked ? 'white' : 'muted.400'}\r\n        >\r\n          {label}\r\n        </Text>\r\n      </Box>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default function AddVehicle() {\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const loginName = useSelector((state) => state.loginName);\r\n\r\n  const [renderLoading, setRenderLoading] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n\r\n  const [name, setName] = useState(loginName);\r\n  // const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n  const dragSortableViewRef = useRef();\r\n\r\n  nameVariable.text = loginName;\r\n\r\n  const inputCarNotes = useRef(null);\r\n  const inputCarMemo = useRef(null);\r\n  const inputCarName = useRef(null);\r\n  const inputCarDesc = useRef(null);\r\n  const inputFobJpy = useRef(null);\r\n  const inputFobUsd = useRef(null);\r\n  const inputRegYear = useRef(null);\r\n  const selectRegYear = useRef(null);\r\n  const selectRegMonth = useRef(null);\r\n  const inputRegMonth = useRef(null);\r\n  const inputRefNum = useRef(null);\r\n  const inputStockIDNumber = useRef(null);\r\n  const inputChassis = useRef(null);\r\n  const inputModelCode = useRef(null);\r\n  const inputEngineCode = useRef(null);\r\n  const inputEngineDis = useRef(null);\r\n  const selectSteering = useRef(null);\r\n  const inputMileage = useRef(null);\r\n  const selectTransmission = useRef(null);\r\n  const selectExteriorColor = useRef(null);\r\n  const inputNumOfSeats = useRef(null);\r\n  const inputDoors = useRef(null);\r\n  const inputPurchasedPrice = useRef(null);\r\n  const inputFuel = useRef(null);\r\n  const selectFuel = useRef(null);\r\n  const selectPort = useRef(null);\r\n  const selectSales = useRef(null);\r\n  const selectBuyer = useRef(null);\r\n  const selectDriveType = useRef(null);\r\n  const inputDimensionLength = useRef(null);\r\n  const inputDimensionWidth = useRef(null);\r\n  const inputDimensionHeight = useRef(null);\r\n  const inputDimensionCubicMeters = useRef(null);\r\n  const inputDriveType = useRef(null);\r\n  const inputWeight = useRef(null);\r\n  const selectBodyType = useRef(null);\r\n  const selectStockStatus = useRef(null);\r\n  const textAreaAddMake = useRef(null);\r\n  const textAreaAddModel = useRef(null);\r\n  const textAreaAddTransmission = useRef(null);\r\n  const textAreaAddExteriorColor = useRef(null);\r\n  const textAreaAddFuel = useRef(null);\r\n  const textAreaAddPort = useRef(null);\r\n  const textAreaAddPortCode = useRef(null);\r\n  const textAreaAddSales = useRef(null);\r\n  const textAreaAddBuyer = useRef(null);\r\n  const textAreaAddSalesCode = useRef(null);\r\n  const textAreaAddBuyerCode = useRef(null);\r\n  const textAreaAddDriveType = useRef(null);\r\n  const textAreaAddBodyType = useRef(null);\r\n  const textAreaAddExpenseName = useRef(null);\r\n  const textAreaAddPaidTo = useRef(null);\r\n  const inputExpenseAmount = useRef(null);\r\n\r\n  // const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  // const selectedImages = useSelector((state) => state.selectedImages);\r\n  const portData = useSelector((state) => state.portData);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const transmissionData = useSelector((state) => state.transmissionData);\r\n  const fuelData = useSelector((state) => state.fuelData);\r\n  const buyerData = useSelector((state) => state.buyerData);\r\n  const salesData = useSelector((state) => state.salesData);\r\n  const driveTypeData = useSelector((state) => state.driveTypeData);\r\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\r\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\r\n  const currentYear = useSelector((state) => state.currentYear);\r\n\r\n  const minYear = 1970;\r\n  const years = Array.from({ length: currentYear - minYear + 1 }, (_, index) => currentYear - index);\r\n  globalRegYearDataVariable = years;\r\n\r\n\r\n\r\n\r\n  const steeringData = ['Left', 'Right'];\r\n\r\n\r\n  const selectMakeRef = useRef(null);\r\n  const selectModelRef = useRef(null);\r\n\r\n  const selectMakeForModelRef = useRef(null);\r\n  const selectMakeForAddModelRef = useRef(null);\r\n\r\n\r\n  const [isNoFeaturesSelected, setIsNoFeaturesSelected] = useState('white');\r\n\r\n\r\n  const [carNameError, setCarNameError] = useState('muted.500');\r\n  const [makeError, setMakeError] = useState('white');\r\n  const [modelError, setModelError] = useState('white');\r\n  const [regYearError, setRegYearError] = useState('white');\r\n  const [regMonthError, setRegMonthError] = useState('white');\r\n  const [refNumError, setRefNumError] = useState('white');\r\n  const [stockIDNumError, setStockIDNumError] = useState('white');\r\n  const [chassisError, setChassisError] = useState('white');\r\n  const [modelCodeError, setModelCodeError] = useState('white');\r\n  const [engineDisError, setEngineDisError] = useState('white');\r\n  const [steeringError, setSteeringError] = useState('white');\r\n  const [mileageError, setMileageError] = useState('white');\r\n  const [transmissionError, setTransmissionError] = useState('white');\r\n  const [exteriorColoError, setExteriorColoError] = useState('white');\r\n  const [numOfSeatsError, setNumOfSeatsError] = useState('white');\r\n  const [doorsError, setDoorsError] = useState('white');\r\n  const [purchasedPriceError, setPurchasedPriceError] = useState('white');\r\n  const [fuelError, setFuelError] = useState('white');\r\n  const [portError, setPortError] = useState('white');\r\n  const [buyerError, setBuyerError] = useState('white');\r\n  const [salesError, setSalesError] = useState('white');\r\n  const [dimensionLengthError, setDimensionLengthError] = useState('white');\r\n  const [dimensionWidthError, setDimensionWidthError] = useState('white');\r\n  const [dimensionHeightError, setDimensionHeightError] = useState('white');\r\n  const [driveTypeError, setDriveTypeError] = useState('white');\r\n  const [weightError, setWeightError] = useState('white');\r\n  const [bodyTypeError, setBodyTypeError] = useState('white');\r\n  const [stockStatusError, setStockStatusError] = useState('white');\r\n\r\n\r\n\r\n  const inputVehicleBoxRef = useRef(null);\r\n\r\n\r\n  const selectMakeBoxRef = useRef(null);\r\n  const selectModelBoxRef = useRef(null);\r\n  const selectRegYearBoxRef = useRef(null);\r\n  const selectRegMonthBoxRef = useRef(null);\r\n  const selectSteeringBoxRef = useRef(null);\r\n  const selectTransmissionBoxRef = useRef(null);\r\n  const selectExteriorColorBoxRef = useRef(null);\r\n  const selectFuelBoxRef = useRef(null);\r\n  const selectPortBoxRef = useRef(null);\r\n  const selectBuyerBoxRef = useRef(null);\r\n  const selectSalesBoxRef = useRef(null);\r\n  const selectDriveTypeBoxRef = useRef(null);\r\n  const selectBodyTypeBoxRef = useRef(null);\r\n  const selectStockStatusBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n\r\n    handleClearImages();\r\n\r\n    dispatch(setSupplyChainsCostsData([]));\r\n    dispatch(setDeleteImageVisible(true));\r\n    portVariable.id = '';\r\n    portVariable.text = '';\r\n    salesVariable.id = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.id = '';\r\n    buyerVariable.text = '';\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n    Object.keys(featuresState).forEach(property => {\r\n      featuresState[property] = false;\r\n    });\r\n\r\n    console.log('Sample');\r\n\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n  }, []);\r\n\r\n\r\n  const handleClearIfError = useCallback(() => {\r\n\r\n\r\n    handleClearToggleButton();\r\n    clearSelect();\r\n\r\n    inputCarName.current?.clear();\r\n    inputCarDesc.current?.clear();\r\n    inputFobJpy.current?.clear();\r\n    inputFobUsd.current?.clear();\r\n\r\n    inputRegYear.current?.clear();\r\n    inputRegMonth.current?.clear();\r\n    inputRefNum.current?.clear();\r\n    inputChassis.current?.clear();\r\n    inputModelCode.current?.clear();\r\n    inputEngineCode.current?.clear();\r\n    inputEngineDis.current?.clear();\r\n    inputMileage.current?.clear();\r\n    inputNumOfSeats.current?.clear();\r\n    inputDoors.current?.clear();\r\n    inputPurchasedPrice.current?.clear();\r\n    inputFuel.current?.clear();\r\n    inputDimensionLength.current?.clear();\r\n    inputDimensionWidth.current?.clear();\r\n    inputDimensionHeight.current?.clear();\r\n    inputDimensionCubicMeters.current.value = \"0.00\";\r\n    inputDriveType.current?.clear();\r\n    inputWeight.current?.clear();\r\n\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    portVariable.text = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.text = '';\r\n    portVariable.id = '';\r\n    salesVariable.id = '';\r\n    buyerVariable.id = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n  }, []);\r\n\r\n  // const uploadImages = useCallback(async () => {\r\n  //   const storageRef = ref(storage, `${globalVehicleFolderName}`);\r\n  //   const ImageFormat = { jpg: 'jpg' };\r\n\r\n  //   try {\r\n  //     // Get the names of the images to keep\r\n  //     const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n  //     // Delete existing files in the folder that do not match the names of the images to keep\r\n  //     const listResult = await listAll(storageRef);\r\n  //     await Promise.all(\r\n  //       listResult.items\r\n  //         .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n  //         .map((itemRef) => deleteObject(itemRef))\r\n  //     );\r\n\r\n  //     // Upload new images with or without watermarks based on the platform\r\n  //     function blobToArrayBuffer(blob) {\r\n  //       return new Promise((resolve, reject) => {\r\n  //         const reader = new FileReader();\r\n  //         reader.onload = () => resolve(reader.result);\r\n  //         reader.onerror = reject;\r\n  //         reader.readAsArrayBuffer(blob);\r\n  //       });\r\n  //     }\r\n\r\n  //     // ...\r\n\r\n  //     await Promise.all(\r\n  //       globalSelectedImages.map(async (asset, index) => {\r\n  //         const { uri } = asset;\r\n  //         const imageName = index.toString();\r\n\r\n  //         const response = await fetch(uri);\r\n  //         const blob = await response.blob();\r\n\r\n  //         const imageRef = ref(storage, `${globalVehicleFolderName}/${imageName}`);\r\n\r\n  //         // Define your watermark options\r\n  //         const watermarkOptions = {\r\n  //           text: 'Real Motor Japan',\r\n  //           color: '#FFFFFF', // Text color\r\n  //           fontSize: 20,\r\n  //           opacity: 50, // Set opacity if needed\r\n  //         };\r\n\r\n  //         // Convert the blob to an ArrayBuffer\r\n  //         const arrayBuffer = await blobToArrayBuffer(blob);\r\n\r\n  //         // Use watermark.js to add the watermark\r\n  //         const watermarkedArrayBuffer = await watermark([arrayBuffer, watermarkOptions])\r\n  //           .image(watermark.image.bottomCenter())\r\n  //           .then((img) => img.arrayBuffer());\r\n\r\n  //         // Convert the ArrayBuffer back to a Blob\r\n  //         const watermarkedBlob = new Blob([watermarkedArrayBuffer]);\r\n\r\n  //         await uploadBytes(imageRef, watermarkedBlob, { contentType: 'image/jpeg' });\r\n  //       })\r\n  //     );\r\n\r\n  //     console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\r\n  //   } catch (error) {\r\n  //     console.error('Error uploading images:', error);\r\n  //   }\r\n  // }, []);\r\n\r\n  const uploadImages = useCallback(async () => {\r\n\r\n    const storageRef = ref(storage, `${globalVehicleFolderName}`);\r\n    const ImageFormat = { jpg: 'jpg' };\r\n\r\n\r\n\r\n    try {\r\n      // Get the names of the images to keep\r\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n      // Delete existing files in the folder that do not match the names of the images to keep\r\n      const listResult = await listAll(storageRef);\r\n      await Promise.all(\r\n        listResult.items\r\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n          .map((itemRef) => deleteObject(itemRef))\r\n      );\r\n\r\n      await Promise.all(\r\n        globalSelectedImages.map(async (asset, index) => {\r\n          const { uri } = asset;\r\n          const imagename = index.toString();\r\n\r\n          const response = await fetch(uri);\r\n          const blob = await response.blob();\r\n\r\n          // Create an offscreen canvas\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          // Create a new image object\r\n          const img = new Image();\r\n          img.src = URL.createObjectURL(blob);\r\n\r\n          // Draw the image on the canvas\r\n          img.onload = async () => {\r\n            // Create a canvas element\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            // Calculate the desired width and height for the resized image\r\n            const maxWidth = 800; // Set your desired maximum width\r\n            const maxHeight = 600; // Set your desired maximum height\r\n            let newWidth = img.width;\r\n            let newHeight = img.height;\r\n\r\n            // Check if the image needs resizing\r\n            if (img.width > maxWidth) {\r\n              newWidth = maxWidth;\r\n              newHeight = (img.height * maxWidth) / img.width;\r\n            }\r\n\r\n            if (newHeight > maxHeight) {\r\n              newWidth = (newWidth * maxHeight) / newHeight;\r\n              newHeight = maxHeight;\r\n            }\r\n\r\n            // Set the canvas dimensions to the new width and height\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n\r\n            // Draw the resized image onto the canvas\r\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n\r\n            // Calculate the font size as a percentage of the image width\r\n            const fontSizePercentage = 3;\r\n            const imageRes = img.height * img.width;\r\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\r\n\r\n            ctx.font = `bold ${fontSize}px Arial`;\r\n            ctx.fillStyle = '#fff';\r\n            ctx.shadowColor = 'transparent';\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.lineWidth = 2;\r\n\r\n            // Calculate the position for the watermark text\r\n            const watermarkText = `Real Motor Japan ${globalReferenceNumber}`;\r\n            const textWidth = ctx.measureText(watermarkText).width;\r\n            const textHeight = fontSize; // Font size determines the text height\r\n\r\n            // Set padding around the text (adjust as needed)\r\n            const paddingX = 10;\r\n            const paddingY = 5;\r\n\r\n            // Calculate the position for the text shadow\r\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\r\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\r\n\r\n            // Increase the shadow thickness by adjusting the shadow blur radius\r\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\r\n\r\n            // Draw the text shadow (black)\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(watermarkText, xShadow, yShadow);\r\n\r\n            // Reset the shadow blur radius for the actual text\r\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\r\n\r\n            // Calculate the position for the actual text\r\n            const x = (canvas.width - textWidth) / 2;\r\n            const y = canvas.height - 20;\r\n\r\n            // Draw the actual text (white)\r\n            ctx.fillStyle = '#fff';\r\n            ctx.fillText(watermarkText, x, y);\r\n\r\n            // Convert the canvas to a blob\r\n            const watermarkedImageBlob = await new Promise(resolve => {\r\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\r\n            });\r\n\r\n            // Upload the resized image to Firebase Storage\r\n            const imageRef = ref(storage, `${globalVehicleFolderName}/${imagename}`);\r\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\r\n          };\r\n\r\n        })\r\n\r\n      );\r\n\r\n\r\n      console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleUpload = useCallback(async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    setCarNameError('muted.500');\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setBuyerError('white');\r\n    setSalesError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    const selectIsEmpty = makeVariable.text == \"\" ||\r\n      modelVariable.text == \"\" ||\r\n      regYearVariable.text == \"\" ||\r\n      regMonthVariable.text == \"\" ||\r\n      steeringVariable.text == \"\" ||\r\n      transmissionVariable.text == \"\" ||\r\n      exteriorColorVariable.text == \"\" ||\r\n      fuelVariable.text == \"\" ||\r\n      portVariable.text == \"\" ||\r\n      buyerVariable.text == \"\" ||\r\n      salesVariable.text == \"\" ||\r\n      driveTypeVariable.text == \"\" ||\r\n      bodyTypeVariable.text == \"\" ||\r\n      stockStatusVariable.text == \"\";\r\n\r\n    const inputIsEmpty = inputStockIDNumber.current?.value == \"\" || inputRefNum.current?.value == \"\" ||\r\n      inputChassis.current?.value == \"\" ||\r\n      inputModelCode.current?.value == \"\" ||\r\n      inputEngineDis.current?.value == \"\" ||\r\n      inputEngineDis.current?.value == 0 ||\r\n      inputMileage.current?.value == \"\" ||\r\n      inputMileage.current?.value == 0 ||\r\n      inputNumOfSeats.current?.value == \"\" ||\r\n      inputDoors.current?.value == \"\" ||\r\n      inputNumOfSeats.current?.value == 0 ||\r\n      inputDoors.current?.value == 0 ||\r\n      inputPurchasedPrice.current?.value == 0 ||\r\n      inputPurchasedPrice.current?.value == \"\" ||\r\n      inputDimensionLength.current?.value == \"\" ||\r\n      inputDimensionWidth.current?.value == \"\" ||\r\n      inputDimensionHeight.current?.value == \"\" ||\r\n      inputDimensionCubicMeters.current?.value == \"\" ||\r\n      inputDimensionLength.current?.value == 0 ||\r\n      inputDimensionWidth.current?.value == 0 ||\r\n      inputDimensionHeight.current?.value == 0 ||\r\n      inputDimensionCubicMeters.current?.value == 0 ||\r\n      inputWeight.current?.value == \"\" ||\r\n      inputWeight.current?.value == 0 ||\r\n      inputCarName.current?.value == \"\";\r\n\r\n    // const inputExceedLength = input;\r\n    const allValuesAreFalse = Object.values(featuresState).every((value) => value === false);\r\n\r\n    console.log(inputIsEmpty || selectIsEmpty);\r\n\r\n    if (inputIsEmpty || selectIsEmpty || allValuesAreFalse) {\r\n      dispatch(setLoadingModalVisible(false));\r\n      inputVehicleBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n      if (allValuesAreFalse) {\r\n        // All features are false\r\n        console.log('All features are false');\r\n        setIsNoFeaturesSelected('danger.400');\r\n        // featureBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        // handleModalUploadClose();\r\n      } else {\r\n        // At least one feature is true\r\n        console.log('At least one feature is true.');\r\n        // handleModalUploadClose();\r\n      }\r\n\r\n      if (inputCarName.current?.value == \"\") {\r\n        inputCarName.current.scrollIntoView({ behavior: 'smooth' });\r\n        setCarNameError('danger.400');\r\n      }\r\n\r\n      if (bodyTypeVariable.text == \"\") {\r\n        selectBodyTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setBodyTypeError('danger.400');\r\n      }\r\n\r\n      if (stockStatusVariable.text == \"\") {\r\n        selectStockStatusBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setStockStatusError('danger.400');\r\n      }\r\n\r\n      if (inputWeight.current?.value == \"\" || inputWeight.current?.value == 0) {\r\n        inputWeight.current.scrollIntoView({ behavior: 'smooth' });\r\n        setWeightError('danger.400');\r\n      }\r\n\r\n      if (driveTypeVariable.text == \"\") {\r\n        selectDriveTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDriveTypeError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionHeight.current?.value == \"\" || inputDimensionHeight.current?.value == 0) {\r\n        inputDimensionHeight.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionHeightError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionWidth.current?.value == \"\" || inputDimensionWidth.current?.value == 0) {\r\n        inputDimensionWidth.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionWidthError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionLength.current?.value == \"\" || inputDimensionLength.current?.value == 0) {\r\n        inputDimensionLength.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionLengthError('danger.400');\r\n      }\r\n\r\n      if (fuelVariable.text == \"\") {\r\n        selectFuelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setFuelError('danger.400');\r\n      }\r\n\r\n      if (inputDoors.current?.value == \"\" || inputDoors.current?.value == 0) {\r\n        inputDoors.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDoorsError('danger.400');\r\n      }\r\n      if (inputPurchasedPrice.current?.value == \"\" || inputPurchasedPrice.current?.value == 0) {\r\n        inputPurchasedPrice.current.scrollIntoView({ behavior: 'smooth' });\r\n        setPurchasedPriceError('danger.400');\r\n      }\r\n\r\n      if (inputNumOfSeats.current?.value == \"\") {\r\n        inputNumOfSeats.current.scrollIntoView({ behavior: 'smooth' });\r\n        setNumOfSeatsError('danger.400');\r\n      }\r\n\r\n      if (exteriorColorVariable.text == \"\") {\r\n        selectExteriorColorBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setExteriorColoError('danger.400');\r\n      }\r\n\r\n      if (transmissionVariable.text == \"\") {\r\n        selectTransmissionBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setTransmissionError('danger.400');\r\n      }\r\n\r\n      if (inputMileage.current?.value == \"\" || inputMileage.current?.value == 0) {\r\n        inputMileage.current.scrollIntoView({ behavior: 'smooth' });\r\n        setMileageError('danger.400');\r\n      }\r\n\r\n      if (steeringVariable.text == \"\") {\r\n        selectSteeringBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setSteeringError('danger.400');\r\n      }\r\n\r\n      if (inputEngineDis.current?.value == \"\" || inputEngineDis.current?.value == 0) {\r\n        inputEngineDis.current.scrollIntoView({ behavior: 'smooth' });\r\n        setEngineDisError('danger.400');\r\n      }\r\n\r\n      if (inputModelCode.current?.value == \"\") {\r\n        inputModelCode.current.scrollIntoView({ behavior: 'smooth' });\r\n        setModelCodeError('danger.400');\r\n      }\r\n\r\n      if (inputChassis.current?.value == \"\") {\r\n        inputChassis.current.scrollIntoView({ behavior: 'smooth' });\r\n        setChassisError('danger.400');\r\n      }\r\n\r\n      if (inputRefNum.current?.value == \"\") {\r\n        inputRefNum.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRefNumError('danger.400');\r\n      }\r\n      if (buyerVariable.text == \"\") {\r\n        selectBuyerBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setBuyerError('danger.400');\r\n      }\r\n\r\n      if (salesVariable.text == \"\") {\r\n        selectSalesBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setSalesError('danger.400');\r\n      }\r\n\r\n\r\n      if (portVariable.text == \"\") {\r\n        selectPortBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setPortError('danger.400');\r\n      }\r\n\r\n\r\n      if (regMonthVariable.text == \"\") {\r\n        selectRegMonthBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRegMonthError('danger.400');\r\n      }\r\n\r\n      if (regYearVariable.text == \"\") {\r\n        selectRegYearBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRegYearError('danger.400');\r\n      }\r\n\r\n      if (modelVariable.text == \"\") {\r\n        selectModelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setModelError('danger.400');\r\n      }\r\n\r\n      if (makeVariable.text == \"\") {\r\n        selectMakeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setMakeError('danger.400');\r\n      }\r\n\r\n      if (inputStockIDNumber.current?.value == \"\") {\r\n        inputStockIDNumber.current.scrollIntoView({ behavior: 'smooth' });\r\n        setStockIDNumError('danger.400');\r\n      }\r\n\r\n    }\r\n    else {\r\n      const stockCollectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n      const stockID = inputStockIDNumber.current?.value;\r\n      const docQuery = doc(stockCollectionRef, stockID);\r\n      const docSnap = await getDoc(docQuery);\r\n\r\n      dispatch(setLoadingModalVisible(true));\r\n      globalReferenceNumber = inputRefNum.current?.value;\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const timestampForID = moment(datetime).format('YYYYMMDDHHmmss');\r\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n      const year = moment(datetime).format('YYYY');\r\n      const month = moment(datetime).format('MM');\r\n      const monthWithDay = moment(datetime).format('MM/DD');\r\n      const date = moment(datetime).format('YYYY/MM/DD');\r\n      const day = moment(datetime).format('DD');\r\n      const time = moment(datetime).format('HH:mm');\r\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n      // console.log(`${timestampForID}${inputRefNum.current?.value}`);\r\n\r\n      const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n      const docRef = doc(collectionRef, inputStockIDNumber.current?.value);\r\n\r\n      const docData = docSnap.data();\r\n      // Your data object to be added\r\n      const docSnapshot = await getDoc(docRef);\r\n\r\n\r\n\r\n\r\n      const keywordsData = [\r\n        inputRefNum.current?.value,\r\n        inputCarName.current?.value,\r\n        inputStockIDNumber.current?.value,\r\n        regYearVariable.text,\r\n        makeVariable.text,\r\n        modelVariable.text,\r\n        inputChassis.current?.value,\r\n        `${makeVariable.text} ${modelVariable.text}`,\r\n        `${regYearVariable.text} ${makeVariable.text}`,\r\n      ]\r\n      const fobHistoryData = {\r\n        date: formattedTime,\r\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\r\n        changedBy: nameVariable.text,\r\n      };\r\n\r\n      let fobHistoryValue;\r\n      const inputFobValue = inputFobJpy.current?.value;\r\n      if (globalFobPrice !== inputFobValue && inputFobValue !== '') {\r\n        fobHistoryValue = arrayUnion(fobHistoryData);\r\n      }\r\n\r\n      const data = {\r\n        keywords: keywordsData,\r\n        imageCount: globalSelectedImages.length,\r\n        supplyChainsCostsData: globalSupplyChainCostsData,\r\n        ...(fobHistoryValue && { fobHistory: fobHistoryValue }),\r\n        // ...(docSnap.exists() || docData.inputStockIDNumber.current?.value.hasOwnProperty('dateAdded')\r\n        // ? { updatedDate: formattedTime }\r\n        // : { dateAdded: formattedTime }),\r\n        // dateAdded: formattedTime, \r\n        display: false,\r\n        photos: false,\r\n        stockID: inputStockIDNumber.current?.value,\r\n        make: makeVariable.text,\r\n        model: modelVariable.text,\r\n        regYear: regYearVariable.text,\r\n        regMonth: regMonthVariable.text,\r\n        referenceNumber: inputRefNum.current?.value,\r\n        chassisNumber: inputChassis.current?.value,\r\n        modelCode: inputModelCode.current?.value,\r\n        engineCode: inputEngineCode.current?.value,\r\n        engineDisplacement: inputEngineDis.current.value.replace(/,/g, ''),\r\n        steering: steeringVariable.text,\r\n        mileage: inputMileage.current.value.replace(/,/g, ''),\r\n        transmission: transmissionVariable.text,\r\n        exteriorColor: exteriorColorVariable.text,\r\n        numberOfSeats: inputNumOfSeats.current?.value,\r\n        doors: inputDoors.current?.value,\r\n        purchasedPrice: inputPurchasedPrice.current.value.replace(/,/g, ''),\r\n        fuel: fuelVariable.text,\r\n        port: portVariable.text,\r\n        sales: salesVariable.text,\r\n        buyer: buyerVariable.text,\r\n        portID: portVariable.id,\r\n        salesID: salesVariable.id,\r\n        buyerID: buyerVariable.id,\r\n        dimensionLength: inputDimensionLength.current.value.replace(/,/g, ''),\r\n        dimensionWidth: inputDimensionWidth.current.value.replace(/,/g, ''),\r\n        dimensionHeight: inputDimensionHeight.current.value.replace(/,/g, ''),\r\n        dimensionCubicMeters: inputDimensionCubicMeters.current.value.replace(/,/g, ''),\r\n        driveType: driveTypeVariable.text,\r\n        weight: inputWeight.current.value.replace(/,/g, ''),\r\n        bodyType: bodyTypeVariable.text,\r\n        stockStatus: stockStatusVariable.text,\r\n        carName: inputCarName.current?.value,\r\n        carDescription: inputCarDesc.current?.value,\r\n        notes: inputCarNotes.current?.value,\r\n        memo: inputCarMemo.current?.value,\r\n\r\n        comfort: {\r\n          ComfortAiCoFr: featuresState.ComfortAiCoFr,\r\n          ComfortAiCoRe: featuresState.ComfortAiCoRe,\r\n          ComfortAMFMRa: featuresState.ComfortAMFMRa,\r\n          ComfortAMFMSt: featuresState.ComfortAMFMSt,\r\n          ComfortCDPl: featuresState.ComfortCDPl,\r\n          ComfortCDCh: featuresState.ComfortCDCh,\r\n          ComfortCrSpCo: featuresState.ComfortCrSpCo,\r\n          ComfortDiSp: featuresState.ComfortDiSp,\r\n          ComfortDVDPl: featuresState.ComfortDVDPl,\r\n          ComfortHDD: featuresState.ComfortHDD,\r\n          ComfortNaSyGPS: featuresState.ComfortNaSyGPS,\r\n          ComfortPoSt: featuresState.ComfortPoSt,\r\n          ComfortPrAuSy: featuresState.ComfortPrAuSy,\r\n          ComfortReKeSy: featuresState.ComfortReKeSy,\r\n          ComfortTiStWh: featuresState.ComfortTiStWh,\r\n        },\r\n\r\n        ComfortAiCoFr: featuresState.ComfortAiCoFr,\r\n        ComfortAiCoRe: featuresState.ComfortAiCoRe,\r\n        ComfortAMFMRa: featuresState.ComfortAMFMRa,\r\n        ComfortAMFMSt: featuresState.ComfortAMFMSt,\r\n        ComfortCDPl: featuresState.ComfortCDPl,\r\n        ComfortCDCh: featuresState.ComfortCDCh,\r\n        ComfortCrSpCo: featuresState.ComfortCrSpCo,\r\n        ComfortDiSp: featuresState.ComfortDiSp,\r\n        ComfortDVDPl: featuresState.ComfortDVDPl,\r\n        ComfortHDD: featuresState.ComfortHDD,\r\n        ComfortNaSyGPS: featuresState.ComfortNaSyGPS,\r\n        ComfortPoSt: featuresState.ComfortPoSt,\r\n        ComfortPrAuSy: featuresState.ComfortPrAuSy,\r\n        ComfortReKeSy: featuresState.ComfortReKeSy,\r\n        ComfortTiStWh: featuresState.ComfortTiStWh,\r\n\r\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\r\n\r\n        safetySystem: {\r\n          SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy,\r\n          SafetySystemDrAi: featuresState.SafetySystemDrAi,\r\n          SafetySystemPaAi: featuresState.SafetySystemPaAi,\r\n          SafetySystemSiAi: featuresState.SafetySystemSiAi,\r\n\r\n        },\r\n\r\n        SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy,\r\n        SafetySystemDrAi: featuresState.SafetySystemDrAi,\r\n        SafetySystemPaAi: featuresState.SafetySystemPaAi,\r\n        SafetySystemSiAi: featuresState.SafetySystemSiAi,\r\n\r\n        interior: {\r\n          InteriorLeSe: featuresState.InteriorLeSe,\r\n          InteriorPoDoLo: featuresState.InteriorPoDoLo,\r\n          InteriorPoMi: featuresState.InteriorPoMi,\r\n          InteriorPoSe: featuresState.InteriorPoSe,\r\n          InteriorPoWi: featuresState.InteriorPoWi,\r\n          InteriorReWiDe: featuresState.InteriorReWiDe,\r\n          InteriorReWiWi: featuresState.InteriorReWiWi,\r\n          InteriorThRoSe: featuresState.InteriorThRoSe,\r\n          InteriorTiGl: featuresState.InteriorTiGl,\r\n        },\r\n\r\n        InteriorLeSe: featuresState.InteriorLeSe,\r\n        InteriorPoDoLo: featuresState.InteriorPoDoLo,\r\n        InteriorPoMi: featuresState.InteriorPoMi,\r\n        InteriorPoSe: featuresState.InteriorPoSe,\r\n        InteriorPoWi: featuresState.InteriorPoWi,\r\n        InteriorReWiDe: featuresState.InteriorReWiDe,\r\n        InteriorReWiWi: featuresState.InteriorReWiWi,\r\n        InteriorThRoSe: featuresState.InteriorThRoSe,\r\n        InteriorTiGl: featuresState.InteriorTiGl,\r\n\r\n        exterior: {\r\n          ExteriorAlWh: featuresState.ExteriorAlWh,\r\n          ExteriorPoSlDo: featuresState.ExteriorPoSlDo,\r\n          ExteriorSuRo: featuresState.ExteriorSuRo,\r\n        },\r\n        ExteriorAlWh: featuresState.ExteriorAlWh,\r\n        ExteriorPoSlDo: featuresState.ExteriorPoSlDo,\r\n        ExteriorSuRo: featuresState.ExteriorSuRo,\r\n\r\n        sellingPoints: {\r\n          SellingPointsCuWh: featuresState.SellingPointsCuWh,\r\n          SellingPointsFuLo: featuresState.SellingPointsFuLo,\r\n          SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv,\r\n          SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi,\r\n          SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi,\r\n          SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw,\r\n          SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi,\r\n          SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi,\r\n          SellingPointsReBo: featuresState.SellingPointsReBo,\r\n          SellingPointsTuEn: featuresState.SellingPointsTuEn,\r\n          SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy,\r\n        },\r\n\r\n        SellingPointsCuWh: featuresState.SellingPointsCuWh,\r\n        SellingPointsFuLo: featuresState.SellingPointsFuLo,\r\n        SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv,\r\n        SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi,\r\n        SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi,\r\n        SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw,\r\n        SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi,\r\n        SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi,\r\n        SellingPointsReBo: featuresState.SellingPointsReBo,\r\n        SellingPointsTuEn: featuresState.SellingPointsTuEn,\r\n        SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy,\r\n\r\n\r\n        // Add more fields as needed\r\n      };\r\n\r\n      // Get a reference to the document with the given stock ID\r\n\r\n\r\n      // Get the document\r\n\r\n\r\n      // Check if the document exists\r\n      if (docSnap.exists()) {\r\n        updateDoc(docRef, data)\r\n          .then(async () => {\r\n            try {\r\n\r\n              await uploadImages();\r\n              dispatch(setLoadingModalVisible(false));\r\n              dispatch(setIsUpdateSuccessModalOpen(true));\r\n\r\n              try {\r\n                // Check if the document exists\r\n                const docSnapshot = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                  const dataDoc = docSnap.data();\r\n                  if (dataDoc) {\r\n                    if ('dateAdded' in dataDoc) {\r\n                      // The document exists and has a 'dateAdded' field\r\n                      console.log('Date Update');\r\n                      // Update the 'updatedDate' field without removing 'dateAdded'\r\n                      const updates = {\r\n                        updatedDate: formattedTime, // Replace 'formattedTime' with the updated date value\r\n                      };\r\n\r\n                      // Use updateDoc to only update the 'updatedDate' field in the document\r\n                      await updateDoc(docRef, updates);\r\n                    } else {\r\n                      // The document exists, but it doesn't have a 'dateAdded' field\r\n                      console.log('Date Added');\r\n                      // Update the 'dateAdded' field without removing other fields\r\n                      const updates = {\r\n                        dateAdded: formattedTime, // Replace 'formattedTime' with the date value\r\n                      };\r\n\r\n                      // Use updateDoc to only update the 'dateAdded' field in the document\r\n                      await updateDoc(docRef, updates);\r\n                    }\r\n                  } else {\r\n                    // The document exists, but it doesn't have a 'dateAdded' field\r\n                    console.log('Date Added');\r\n                    // Update the 'dateAdded' field without removing other fields\r\n                    const updates = {\r\n                      dateAdded: formattedTime, // Replace 'formattedTime' with the date value\r\n                    };\r\n\r\n                    // Use updateDoc to only update the 'dateAdded' field in the document\r\n                    await updateDoc(docRef, updates);\r\n                  }\r\n                } else {\r\n                  // The document does not exist\r\n                  console.log('Date Added');\r\n                }\r\n              } catch (error) {\r\n                console.error('Error checking document:', error);\r\n              }\r\n\r\n              const logData = {\r\n                message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  inputStockIDNumber.current.value.toLowerCase(),\r\n                  `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\r\n                  'Vehicle Updated'.toLowerCase(),\r\n                  'Vehicle'.toLowerCase(),\r\n                  'Updated'.toLowerCase(),\r\n                  inputCarName.current.value.toLowerCase(),\r\n                  inputRefNum.current.value.toLowerCase(),\r\n                  nameVariable.text.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n              };\r\n              dispatch(setLoadingModalVisible(false));\r\n              handleClearImages();\r\n              addLogToCollection(logData);\r\n              handleClear();\r\n              console.log('Document updated successfully!');\r\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\r\n            } catch (error) {\r\n              // Handle errors that may occur during the update process\r\n              console.error('Error updating document:', error);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.error('Error updating document: ', error);\r\n          });\r\n      }\r\n      else {\r\n        const dataWithDateAdded = {\r\n          ...data,\r\n          dateAdded: formattedTime,\r\n        };\r\n\r\n        setDoc(docRef, dataWithDateAdded)\r\n          .then(async () => {\r\n\r\n            try {\r\n              await uploadImages();\r\n              dispatch(setLoadingModalVisible(false));\r\n              dispatch(setIsSuccessModalOpen(true));\r\n\r\n              // try {\r\n              //   // Check if the document exists\r\n              //   const docSnapshot = await getDoc(docRef);\r\n\r\n              //   if (docSnapshot.exists()) {\r\n              //     const data = docSnapshot.data();\r\n              //     if (data) {\r\n              //       if ('dateAdded' in data) {\r\n              //         // The document exists and has a 'dateAdded' field\r\n              //         console.log('Date Update');\r\n              //         // Update the 'updatedDate' field in the document\r\n              //         const updates = {\r\n              //           updatedDate: formattedTime, // Replace 'newFieldValue' with the updated date value\r\n              //         };\r\n\r\n              //         // Use setDoc to update the 'updatedDate' field in the document\r\n              //         await setDoc(docRef, updates, { merge: true });\r\n              //       } else {\r\n              //         // The document exists, but it doesn't have a 'dateAdded' field\r\n              //         console.log('Date Added');\r\n              //         // Update the 'dateAdded' field in the document\r\n              //         const updates = {\r\n              //           dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\r\n              //         };\r\n\r\n              //         // Use setDoc to update the 'dateAdded' field in the document\r\n              //         await setDoc(docRef, updates, { merge: true });\r\n              //       }\r\n              //     } else {\r\n              //       // The document exists, but it doesn't have a 'dateAdded' field\r\n              //       console.log('Date Added');\r\n              //       // Update the 'dateAdded' field in the document\r\n              //       const updates = {\r\n              //         dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\r\n              //       };\r\n\r\n              //       // Use setDoc to update the 'dateAdded' field in the document\r\n              //       await setDoc(docRef, updates, { merge: true });\r\n              //     }\r\n              //   } else {\r\n              //     // The document does not exist\r\n              //     console.log('Date Added');\r\n              //   }\r\n              // } catch (error) {\r\n              //   console.error('Error checking document:', error);\r\n              // }\r\n\r\n              const logData = {\r\n                message: `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  inputStockIDNumber.current.value.toLowerCase(),\r\n                  `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\r\n                  'Vehicle Added'.toLowerCase(),\r\n                  'Vehicle'.toLowerCase(),\r\n                  'Added'.toLowerCase(),\r\n                  inputCarName.current.value.toLowerCase(),\r\n                  inputRefNum.current.value.toLowerCase(),\r\n                  nameVariable.text.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n              };\r\n\r\n              handleClearImages();\r\n              addLogToCollection(logData);\r\n              handleClear();\r\n              console.log('Document added successfully!');\r\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n          })\r\n          .catch((error) => {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.error('Error adding document: ', error);\r\n          });\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleClearToggleButton = () => {\r\n    resetKey++;\r\n\r\n    featuresState.SafetySystemAnBrSy = false;\r\n    featuresState.SafetySystemDrAi = false;\r\n    featuresState.SafetySystemPaAi = false;\r\n    featuresState.SafetySystemSiAi = false;\r\n    featuresState.ComfortAiCoFr = false;\r\n    featuresState.ComfortAiCoRe = false;\r\n    featuresState.ComfortAMFMRa = false;\r\n    featuresState.ComfortAMFMSt = false;\r\n    featuresState.ComfortCDPl = false;\r\n    featuresState.ComfortCDCh = false;\r\n    featuresState.ComfortCrSpCo = false;\r\n    featuresState.ComfortDiSp = false;\r\n    featuresState.ComfortDVDPl = false;\r\n    featuresState.ComfortHDD = false;\r\n    featuresState.ComfortNaSyGPS = false;\r\n    featuresState.ComfortPoSt = false;\r\n    featuresState.ComfortPrAuSy = false;\r\n    featuresState.ComfortReKeSy = false;\r\n    featuresState.ComfortTiStWh = false;\r\n    featuresState.InteriorLeSe = false;\r\n    featuresState.InteriorPoDoLo = false;\r\n    featuresState.InteriorPoMi = false;\r\n    featuresState.InteriorPoSe = false;\r\n    featuresState.InteriorPoWi = false;\r\n    featuresState.InteriorReWiDe = false;\r\n    featuresState.InteriorReWiWi = false;\r\n    featuresState.InteriorThRoSe = false;\r\n    featuresState.InteriorTiGl = false;\r\n    featuresState.ExteriorAlWh = false;\r\n    featuresState.ExteriorPoSlDo = false;\r\n    featuresState.ExteriorSuRo = false;\r\n    featuresState.SellingPointsCuWh = false;\r\n    featuresState.SellingPointsFuLo = false;\r\n    featuresState.SellingPointsMaHiAv = false;\r\n    featuresState.SellingPointsBrNeTi = false;\r\n    featuresState.SellingPointsNoAcHi = false;\r\n    featuresState.SellingPointsNoSmPrOw = false;\r\n    featuresState.SellingPointsOnOwHi = false;\r\n    featuresState.SellingPointsPeRaTi = false;\r\n    featuresState.SellingPointsReBo = false;\r\n    featuresState.SellingPointsTuEn = false;\r\n    featuresState.SellingPointsUpAuSy = false;\r\n  };\r\n\r\n  const handleClear = useCallback(() => {\r\n\r\n    handleClearToggleButton();\r\n    handleClearImages();\r\n    clearSelect();\r\n\r\n\r\n    dispatch(setSupplyChainsCostsData([]));\r\n    globalSupplyChainCostsData = [];\r\n    globalSupplyChainCostsAmount = '';\r\n    globalFobPrice = '';\r\n\r\n    inputStockIDNumber.current?.clear();\r\n    inputCarName.current?.clear();\r\n    inputCarDesc.current?.clear();\r\n    inputFobJpy.current?.clear();\r\n    inputFobUsd.current?.clear();\r\n\r\n    inputRegYear.current?.clear();\r\n    inputRegMonth.current?.clear();\r\n    inputRefNum.current?.clear();\r\n    inputChassis.current?.clear();\r\n    inputModelCode.current?.clear();\r\n    inputEngineCode.current?.clear();\r\n    inputEngineDis.current?.clear();\r\n    inputMileage.current?.clear();\r\n    inputNumOfSeats.current?.clear();\r\n    inputDoors.current?.clear();\r\n    inputPurchasedPrice.current?.clear();\r\n    inputFuel.current?.clear();\r\n    inputDimensionLength.current?.clear();\r\n    inputDimensionWidth.current?.clear();\r\n    inputDimensionHeight.current?.clear();\r\n    inputDimensionCubicMeters.current.value = \"0.00\";\r\n    inputDriveType.current?.clear();\r\n    inputWeight.current?.clear();\r\n    inputCarNotes.current?.clear();\r\n    inputCarMemo.current?.clear();\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    portVariable.text = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.text = '';\r\n    portVariable.id = '';\r\n    salesVariable.id = '';\r\n    buyerVariable.id = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    // handleModalClearClose();\r\n\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  // const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n  //   navigation.navigate(\"LOGS\");\r\n  // }, []);\r\n  // const handleToggleAddAccount = useCallback(() => {\r\n\r\n\r\n  //   navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  // }, []);\r\n\r\n  // const handleToggleAccountList = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ACCOUNT LIST\");\r\n  // }, []);\r\n\r\n  // const handleToggleAddVehicle = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ADD NEW VEHICLE\");\r\n  // }, []);\r\n\r\n\r\n  // const handleVehicleList = useCallback(() => {\r\n  //   navigation.navigate(\"VEHICLE LIST\");\r\n  // }, []);\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(projectControlAuth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(projectControlAuth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate(\"/Login\");\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = projectControlAuth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(projectControlAuth).then(() => {\r\n      // navigation.navigate('Login');\r\n      navigate(\"/Login\");\r\n      setEmail('');\r\n      setName('');\r\n    }).catch(() => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n  const { width } = Dimensions.get('window');\r\n\r\n\r\n  const handleInputPurchasedPriceChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputPurchasedPrice.current.value = formattedValue;\r\n\r\n  };\r\n\r\n\r\n  const handleInputFobJpyChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Check if the numeric value starts with 0\r\n    if (numericValue.startsWith('0')) {\r\n      // Handle the case when the value starts with 0\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n      return;\r\n    }\r\n\r\n    // Truncate the numeric value to a maximum of 9 digits\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n    if (formattedValue !== '') {\r\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\r\n\r\n      if (!isNaN(multipliedValue)) {\r\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\r\n      } else {\r\n        // Handle the case when the multipliedValue is NaN\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: '' });\r\n      }\r\n    } else {\r\n      // Handle the case when formattedValue is empty\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleInputFobJpyChange(inputFobJpy.current?.value);\r\n  }, [jpyToUsd]);\r\n\r\n\r\n\r\n  const handleAddMakeTextChange = () => {\r\n    const newText = textAreaAddMake.current?.value?.toUpperCase();\r\n    textAreaAddMake.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n\r\n  const handleAddTransmissionTextChange = () => {\r\n    const textAreaValue = textAreaAddTransmission.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddTransmission.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddFuelTextChange = () => {\r\n    const textAreaValue = textAreaAddFuel.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddFuel.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddPortTextChange = () => {\r\n    const textAreaValue = textAreaAddPort.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPort.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPortCodeTextChange = () => {\r\n    const newText = textAreaAddPortCode.current?.value?.toUpperCase();\r\n    textAreaAddPortCode.current?.setNativeProps({ text: newText });\r\n    // Remove any non-numeric characters\r\n\r\n\r\n  };\r\n\r\n  const handleAddSalesTextChange = () => {\r\n    const textAreaValue = textAreaAddSales.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddSales.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddSalesCodeTextChange = () => {\r\n    const newText = textAreaAddSalesCode.current?.value?.toUpperCase();\r\n    textAreaAddSalesCode.current?.setNativeProps({ text: newText });\r\n  };\r\n\r\n  const handleAddBuyerTextChange = () => {\r\n    const textAreaValue = textAreaAddBuyer.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddBuyer.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddBuyerCodeTextChange = (text) => {\r\n\r\n    const numericValue = text.replace(/[^0-9\\n]/g, '');\r\n\r\n    // Update the value of the textarea while preventing new lines\r\n    textAreaAddBuyerCode.current.value = numericValue;\r\n  };\r\n\r\n  const handleAddDriveTypeTextChange = () => {\r\n    const textAreaValue = textAreaAddDriveType.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddDriveType.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddBodyTypeTextChange = () => {\r\n    const textAreaValue = textAreaAddBodyType.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddBodyType.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddExteriorColorTextChange = () => {\r\n    const textAreaValue = textAreaAddExteriorColor.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExteriorColor.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddExpenseNameTextChange = () => {\r\n    const textAreaValue = textAreaAddExpenseName.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPaidToTextChange = () => {\r\n    const textAreaValue = textAreaAddPaidTo.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleInputRefNumChange = () => {\r\n    const newText = inputRefNum.current?.value?.toUpperCase();\r\n    inputRefNum.current?.setNativeProps({ text: newText });\r\n\r\n    setRefNumFromSelects();\r\n  };\r\n\r\n  const handleInputChassisChange = () => {\r\n    const newText = inputChassis.current?.value?.toUpperCase();\r\n    inputChassis.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n  const handleInputModelCodeChange = () => {\r\n    const newText = inputModelCode.current?.value?.toUpperCase();\r\n    inputModelCode.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n  const handleInputEngineCodeChange = () => {\r\n    const newText = inputEngineCode.current?.value?.toUpperCase();\r\n    inputEngineCode.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n\r\n\r\n  const handleInputEngineDisChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 5);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputEngineDis.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputExpenseAmountChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputExpenseAmount.current.value = formattedValue;\r\n  };\r\n\r\n\r\n  const handleInputMileageChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputMileage.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputNumOfSeatsChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 3);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputNumOfSeats.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputDoorsChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 2);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputDoors.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputDimensionLengthChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionLength.current.value = formattedValue;\r\n\r\n    calculateCubicMeters();\r\n  };\r\n\r\n\r\n  const handleInputDimensionWidthChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionWidth.current.value = formattedValue;\r\n\r\n    calculateCubicMeters();\r\n  };\r\n\r\n  const handleInputDimensionHeightChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionHeight.current.value = formattedValue;\r\n    calculateCubicMeters();\r\n\r\n  };\r\n\r\n  const handleInputDimensionCubicMetersChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputDimensionCubicMeters.current.value = formattedValue;\r\n    calculateCubicMeters();\r\n  };\r\n\r\n  const handleInputWeightChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 5);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputWeight.current.value = formattedValue;\r\n  };\r\n\r\n  const monthNumbers = [\r\n    '01',\r\n    '02',\r\n    '03',\r\n    '04',\r\n    '05',\r\n    '06',\r\n    '07',\r\n    '08',\r\n    '09',\r\n    '10',\r\n    '11',\r\n    '12'\r\n  ];\r\n\r\n  const calculateCubicMeters = () => {\r\n    const length = parseFloat(inputDimensionLength.current?.value?.replace(/,/g, '')) || 0;\r\n    const width = parseFloat(inputDimensionWidth.current?.value?.replace(/,/g, '')) || 0;\r\n    const height = parseFloat(inputDimensionHeight.current?.value?.replace(/,/g, '')) || 0;\r\n\r\n    const result = (length * width * height) / 1000000;\r\n    const resultFormatted = result.toFixed(2);\r\n\r\n    // setCubicMeters(resultFormatted);\r\n    inputDimensionCubicMeters.current.setNativeProps({ text: resultFormatted });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   let makeValue = makeVariable.text;\r\n\r\n  //   if (makeValue !== '') {\r\n  //     setCarNameFromSelects();\r\n  //   }\r\n\r\n  // }, [modelData]);\r\n\r\n\r\n  const setRefNumFromSelects = () => {\r\n    let portValue = portVariable.id;\r\n    let stockIDValue = inputStockIDNumber.current?.value;\r\n    let salesValue = salesVariable.id;\r\n    let buyerValue = buyerVariable.id;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${portValue}${stockIDValue}${salesValue}-${buyerValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    // inputCarName.current.setNativeProps({ text: carName });\r\n    inputRefNum.current.setNativeProps({ text: carName });\r\n    referenceNumberVariable.text = carName;\r\n    // console.log(carName);\r\n  };\r\n\r\n\r\n  const setCarNameFromSelects = () => {\r\n    let regYearValue = regYearVariable.text;\r\n    let makeValue = makeVariable.text;\r\n    let modelValue = modelVariable.text;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    inputCarName.current.setNativeProps({ text: carName });\r\n\r\n  };\r\n\r\n  const setCarNameFromSelectsModel = () => {\r\n    let regYearValue = regYearVariable.text;\r\n    let makeValue = makeVariable.text;\r\n    let modelValue = modelVariable.text;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    inputCarName.current.setNativeProps({ text: carName });\r\n\r\n\r\n  };\r\n  // const [selectedMake, setSelectedMake] = useState();\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n\r\n\r\n  // }, []);\r\n\r\n  const clearSelect = () => {\r\n    // setModelData([]);\r\n\r\n    // if (makeVariable.text !== '') {\r\n    //   dispatch(setModelData([]));\r\n    // }\r\n\r\n\r\n\r\n    selectMakeRef.current.reset();\r\n    selectModelRef.current.reset();\r\n    selectRegYear.current.reset();\r\n    selectRegMonth.current.reset();\r\n    selectSteering.current.reset();\r\n    selectTransmission.current.reset();\r\n    selectExteriorColor.current.reset();\r\n    selectFuel.current.reset();\r\n    selectPort.current.reset();\r\n    selectSales.current.reset();\r\n    selectBuyer.current.reset();\r\n    selectDriveType.current.reset();\r\n    selectBodyType.current.reset();\r\n    selectStockStatus.current.reset();\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n\r\n\r\n  const ClearModalButton = ({ handleClear }) => {\r\n    const [modalClearVisible, setModalClearVisible] = useState(false);\r\n\r\n    const handleModalClearOpen = useCallback(() => {\r\n      setModalClearVisible(true);\r\n\r\n\r\n      // selectMakeRef.current.selectIndex(makeData.indexOf('TOYOTA'));\r\n    }, []);\r\n\r\n    const handleModalClearClose = useCallback(() => {\r\n      setModalClearVisible(false);\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          bgColor={'#D9D9D9'}\r\n          onPress={handleModalClearOpen}\r\n          _text={{ color: 'muted.500' }}\r\n          _hover={{ bgColor: '#f0eded' }}\r\n        >\r\n          Clear\r\n        </Button>\r\n\r\n        <Modal isOpen={modalClearVisible} onClose={handleModalClearClose}>\r\n          <Modal.Content bgColor={'amber.100'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n              <Text color={'#102A43'} bold>\r\n                Clear\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'amber.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'amber.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'amber.600'} bold>\r\n                  Warning!\r\n                </Text>\r\n                <Text color={'amber.600'}>\r\n                  Are you sure you want to clear all inputs? This action will clear all the fields and cannot be undone!\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalClearClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  onPress={() => {\r\n                    handleModalClearClose();\r\n                    handleClear();\r\n                  }}\r\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                  Clear\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  const SelectFeaturesButton = () => {\r\n    const [featuresModalVisible, setFeaturesModalVisible] = useState(false);\r\n    const [featuresClearModalVisible, setClearModalVisible] = useState(false);\r\n\r\n    const [key, setKey] = useState(resetKey);\r\n\r\n\r\n    const handleModalSelectFeaturesOpen = () => {\r\n      setFeaturesModalVisible(true);\r\n    };\r\n\r\n    const handleModalSelectFeaturesClose = () => {\r\n      setFeaturesModalVisible(false);\r\n    };\r\n\r\n    const handleClearModalOpen = () => {\r\n      setClearModalVisible(true);\r\n    };\r\n\r\n    const handleClearModalClose = () => {\r\n      setClearModalVisible(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          onPress={handleModalSelectFeaturesOpen}\r\n          variant={'outline'}\r\n          _text={{ color: 'black', }}\r\n          leftIcon={<MaterialCommunityIcons name=\"car-info\" size={20} color=\"black\" />}>\r\n\r\n          Select Features\r\n        </Button>\r\n\r\n        <Modal\r\n          isOpen={featuresModalVisible}\r\n          onClose={handleModalSelectFeaturesClose} size={'full'} useRNModal>\r\n          <Modal.Content bgColor={'white'} w={'80%'} h={'80%'}>\r\n            <Modal.CloseButton />\r\n            {/* <Modal.Header borderBottomWidth={0} bgColor={'white'}>\r\n              <Text color={'#102A43'} bold>\r\n                Features\r\n              </Text>\r\n            </Modal.Header> */}\r\n            {/* <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'white'}\r\n              flex={1}\r\n              h={'100%'}\r\n            > */}\r\n            <ScrollView flex={1} flexDirection={'column'} margin={10}>\r\n\r\n              {/* <Box bgColor={'#7b9cff'} borderColor={isNoFeaturesSelected} borderWidth={'1'} marginTop={1} ref={featureBoxRef}>\r\n                  <Text color={'white'} bold fontSize={20} width={'full'}> Features</Text>\r\n                </Box> */}\r\n\r\n              <Box>\r\n                <Text color={'black'} bold fontSize={16} width={'full'}> Safety System</Text>\r\n              </Box>\r\n\r\n\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SafetySystemAnBrSy} key={`SafetySystemAnBrSy-${resetKey}`} label=\"Anti-Lock Braking System (ABS)\" onChange={(checked) => featuresState.SafetySystemAnBrSy = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemDrAi} key={`SafetySystemDrAi-${resetKey}`} label=\"Driver Airbag\" onChange={(checked) => featuresState.SafetySystemDrAi = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemPaAi} key={`SafetySystemPaAi-${resetKey}`} label=\"Passenger Airbag\" onChange={(checked) => featuresState.SafetySystemPaAi = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemSiAi} key={`SafetySystemSiAi-${resetKey}`} label=\"Side Airbag\" onChange={(checked) => featuresState.SafetySystemSiAi = checked} />\r\n              </Box>\r\n\r\n              <Box>\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Comfort</Text>\r\n              </Box>\r\n\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortAiCoFr} key={`ComfortAiCoFr-${resetKey}`} label=\"Air Conditioner (Front)\" onChange={(checked) => featuresState.ComfortAiCoFr = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAiCoRe} key={`ComfortAiCoRe-${resetKey}`} label=\"Air Conditioner (Rear)\" onChange={(checked) => featuresState.ComfortAiCoRe = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAMFMRa} key={`ComfortAMFMRa-${resetKey}`} label=\"AM/FM Radio\" onChange={(checked) => featuresState.ComfortAMFMRa = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAMFMSt} key={`ComfortAMFMSt-${resetKey}`} label=\"AM/FM Stereo\" onChange={(checked) => featuresState.ComfortAMFMSt = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortCDPl} key={`ComfortCDPl-${resetKey}`} label=\"CD Player\" onChange={(checked) => featuresState.ComfortCDPl = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortCDCh} key={`ComfortCDCh-${resetKey}`} label=\"CD Changer\" onChange={(checked) => featuresState.ComfortCDCh = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortCrSpCo} key={`ComfortCrSpCo-${resetKey}`} label=\"Cruise Speed Control\" onChange={(checked) => featuresState.ComfortCrSpCo = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortDiSp} key={`ComfortDiSp-${resetKey}`} label=\"Digital Speedometer\" onChange={(checked) => featuresState.ComfortDiSp = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortDVDPl} key={`ComfortDVDPl-${resetKey}`} label=\"DVD Player\" onChange={(checked) => featuresState.ComfortDVDPl = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortHDD} key={`ComfortHDD-${resetKey}`} label=\"Hard Disk Drive\" onChange={(checked) => featuresState.ComfortHDD = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortNaSyGPS} key={`ComfortNaSyGPS-${resetKey}`} label=\"Navigation System (GPS)\" onChange={(checked) => featuresState.ComfortNaSyGPS = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortPoSt} key={`ComfortPoSt-${resetKey}`} label=\"Power Steering\" onChange={(checked) => featuresState.ComfortPoSt = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortPrAuSy} key={`ComfortPrAuSy-${resetKey}`} label=\"Premium Audio System\" onChange={(checked) => featuresState.ComfortPrAuSy = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortReKeSy} key={`ComfortReKeSy-${resetKey}`} label=\"Remote Keyless System\" onChange={(checked) => featuresState.ComfortReKeSy = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortTiStWh} key={`ComfortTiStWh-${resetKey}`} label=\"Tilt Steering Wheel\" onChange={(checked) => featuresState.ComfortTiStWh = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n\r\n              <Box>\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Interior</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorLeSe} key={`InteriorLeSe-${resetKey}`} label=\"Leather Seats\" onChange={(checked) => featuresState.InteriorLeSe = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoDoLo} key={`InteriorPoDoLo-${resetKey}`} label=\"Power Door Locks\" onChange={(checked) => featuresState.InteriorPoDoLo = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoMi} key={`InteriorPoMi-${resetKey}`} label=\"Power Mirrors\" onChange={(checked) => featuresState.InteriorPoMi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoSe} key={`InteriorPoSe-${resetKey}`} label=\"Power Seats\" onChange={(checked) => featuresState.InteriorPoSe = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorPoWi} key={`InteriorPoWi-${resetKey}`} label=\"Power Windows\" onChange={(checked) => featuresState.InteriorPoWi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorReWiDe} key={`InteriorReWiDe-${resetKey}`} label=\"Rear Window Defroster\" onChange={(checked) => featuresState.InteriorReWiDe = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorReWiWi} key={`InteriorReWiWi-${resetKey}`} label=\"Rear Window Wiper\" onChange={(checked) => featuresState.InteriorReWiWi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorThRoSe} key={`InteriorThRoSe-${resetKey}`} label=\"Third Row Seats\" onChange={(checked) => featuresState.InteriorThRoSe = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorTiGl} key={`InteriorTiGl-${resetKey}`} label=\"Tinted Glasses\" onChange={(checked) => featuresState.InteriorTiGl = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n              <Box >\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Exterior</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ExteriorAlWh} key={`ExteriorAlWh-${resetKey}`} label=\"Alloy Wheels\" onChange={(checked) => featuresState.ExteriorAlWh = checked} />\r\n                <CheckBoxButton variable={featuresState.ExteriorPoSlDo} key={`ExteriorPoSlDo-${resetKey}`} label=\"Power Sliding Door\" onChange={(checked) => featuresState.ExteriorPoSlDo = checked} />\r\n                <CheckBoxButton variable={featuresState.ExteriorSuRo} key={`ExteriorSuRo-${resetKey}`} label=\"Sunroof\" onChange={(checked) => featuresState.ExteriorSuRo = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n              <Box >\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Selling Points</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsCuWh} key={`SellingPointsCuWh-${resetKey}`} label=\"Customized Wheels\" onChange={(checked) => featuresState.SellingPointsCuWh = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsFuLo} key={`SellingPointsFuLo-${resetKey}`} label=\"Fully Loaded\" onChange={(checked) => featuresState.SellingPointsFuLo = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsMaHiAv} key={`SellingPointsMaHiAv-${resetKey}`} label=\"Maintenance History Available\" onChange={(checked) => featuresState.SellingPointsMaHiAv = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsBrNeTi} key={`SellingPointsBrNeTi-${resetKey}`} label=\"Brand New Tires\" onChange={(checked) => featuresState.SellingPointsBrNeTi = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsNoAcHi} key={`SellingPointsNoAcHi-${resetKey}`} label=\"No Accident History\" onChange={(checked) => featuresState.SellingPointsNoAcHi = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsNoSmPrOw} key={`SellingPointsNoSmPrOw-${resetKey}`} label=\"Non-Smoking Previous Owner\" onChange={(checked) => featuresState.SellingPointsNoSmPrOw = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsOnOwHi} key={`SellingPointsOnOwHi-${resetKey}`} label=\"One Owner History\" onChange={(checked) => featuresState.SellingPointsOnOwHi = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsPeRaTi} key={`SellingPointsPeRaTi-${resetKey}`} label=\"Performance-rated Tires\" onChange={(checked) => featuresState.SellingPointsPeRaTi = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsReBo} key={`SellingPointsReBo-${resetKey}`} label=\"Repainted Body\" onChange={(checked) => featuresState.SellingPointsReBo = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsTuEn} key={`SellingPointsTuEn-${resetKey}`} label=\"Turbo Engine\" onChange={(checked) => featuresState.SellingPointsTuEn = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsUpAuSy} key={`SellingPointsUpAuSy-${resetKey}`} label=\"Upgraded Audio System\" onChange={(checked) => featuresState.SellingPointsUpAuSy = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n            </ScrollView>\r\n            <HStack space={5} width={'full'} justifyContent={'space-between'}>\r\n              <Button\r\n                onPress={() => {\r\n                  handleClearModalOpen();\r\n                }}\r\n                colorScheme={'gray'}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n                margin={1}\r\n                flex={1}\r\n              >\r\n                Clear\r\n              </Button>\r\n              <Box flex={2} />\r\n              <Button\r\n                onPress={handleModalSelectFeaturesClose}\r\n                colorScheme={'primary'}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n                margin={1}\r\n                flex={1}\r\n              >\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n            {/* </Modal.Body> */}\r\n            {/* <Modal.Footer borderTopWidth={0} bgColor={'white'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalSelectFeaturesClose}\r\n                  colorScheme={'warmGray'}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer> */}\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n        <Modal isOpen={featuresClearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n          <Modal.Content bgColor={'amber.100'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n              <Text color={'#102A43'} bold>\r\n                Clear\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'amber.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'amber.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'amber.600'} bold>\r\n                  Warning!\r\n                </Text>\r\n                <Text color={'amber.600'}>\r\n                  Are you sure you want to clear?\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleClearModalClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  onPress={() => {\r\n                    handleClearToggleButton();\r\n                    setKey(resetKey++);\r\n                    handleClearModalClose();\r\n                  }}\r\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                  Clear\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleClearImagesExtra = () => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n    dispatch(setDeleteImageVisible(true));\r\n  };\r\n\r\n  const UploadModalButton = ({ handleUpload }) => {\r\n    const [modalUploadVisible, setModalUploadVisible] = useState(false);\r\n    const handleModalUploadOpen = () => {\r\n      setModalUploadVisible(true);\r\n    };\r\n\r\n    const handleModalUploadClose = () => {\r\n      setModalUploadVisible(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          onPress={handleModalUploadOpen}\r\n          bgColor={'#7B9CFF'}\r\n          _hover={{ bgColor: '#517cfc', }}>\r\n          Upload/Save\r\n        </Button>\r\n\r\n        <Modal isOpen={modalUploadVisible} onClose={handleModalUploadClose}>\r\n          <Modal.Content bgColor={'white'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'white'}>\r\n              <Text color={'#102A43'} bold>\r\n                Upload/Save\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'gray.300'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'black'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'black'} bold>\r\n                  Attention!\r\n                </Text>\r\n                <Text color={'black'}>\r\n                  Are you sure you want to upload/save? This action will upload a new vehicle to the list and can be edited later.\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'white'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalUploadClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button isLoading={isLoading} onPress={async () => {\r\n                  await handleUpload();\r\n                  handleModalUploadClose()\r\n                }}\r\n                  flex={1} size={'sm'} colorScheme={'primary'} borderRadius={5}>\r\n                  Upload/Save\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#0642F4'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#0642F4'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const handleSuccessModalClose = useCallback(() => {\r\n    dispatch(setIsSuccessModalOpen(false));\r\n  }, []);\r\n\r\n  const handleUpdateSuccessModalClose = useCallback(() => {\r\n    dispatch(setIsUpdateSuccessModalOpen(false));\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  const handleSetBordersWhite = () => {\r\n\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n\r\n  };\r\n  return (\r\n\r\n\r\n\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#0642f4'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={0}\r\n          borderBottomColor={'cyan.500'} >\r\n\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen} />\r\n\r\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          {/* {showDrawerIcon && <MobileViewDrawer\r\n            selectedScreen={selectedScreen}\r\n          />} */}\r\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo2,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n          {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n            <Flex direction=\"row-reverse\">\r\n              <Popover isOpen={showNamePopover} trigger={triggerProps => {\r\n                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                  <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                </Text>;\r\n              }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\r\n                <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                 \r\n                  <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                    <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                      Logout\r\n                    </Button>\r\n                  </Popover.Body>\r\n                </Popover.Content>\r\n              </Popover>\r\n            </Flex>\r\n          </Box> */}\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <Box flex={[1]} flexDirection=\"row\" >\r\n\r\n\r\n          {/* Main Content */}\r\n\r\n          <Box flex={1} flexGrow={1} minHeight={0}>\r\n            {/* Main Content Content */}\r\n\r\n\r\n\r\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n              <PresenceTransition visible={true} initial={{\r\n                opacity: 0,\r\n              }} animate={{\r\n                opacity: 1,\r\n                transition: {\r\n                  duration: 250\r\n                }\r\n              }}>\r\n\r\n\r\n                <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" flexDir={'column'}>\r\n\r\n\r\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\r\n\r\n                  </Box>\r\n\r\n\r\n\r\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} >\r\n\r\n\r\n                    <Box flexDir={['column', 'column', 'column', 'column', 'row', 'row']} height={'full'} flex={1} display={screenWidth < 1280 ? 'none' : 'flex'}>\r\n                      <Box flexDir={'row'} flex={1}>\r\n                        <Box margin={2} flex={1} flexDir={['column']} >\r\n\r\n\r\n                          <Box borderColor={'white'} borderWidth={1} ref={inputVehicleBoxRef}>\r\n\r\n                            <Box flex={1} bgColor={'#7b9cff'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Text color={'white'} marginLeft={1} bold fontSize={20} width={'full'}>Input Vehicle Specification</Text>\r\n                            </Box>\r\n\r\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                            <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                            <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={() => buttonSearchRef.current?.handlePress()} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\r\n                              InputRightElement={\r\n                                <StockIDNumber />\r\n                              }\r\n                            />\r\n                            </Box>\r\n\r\n\r\n                          </Box> */}\r\n\r\n                            <StockIDAndMakeAndModel\r\n                              selectStockStatus={selectStockStatus}\r\n                              handleSetBordersWhite={handleSetBordersWhite}\r\n                              handleClearIfError={handleClearIfError}\r\n                              handleClearToggleButton={handleClearToggleButton}\r\n                              inputFobUsd={inputFobUsd}\r\n                              years={years}\r\n                              monthNumbers={monthNumbers}\r\n                              portData={portData}\r\n                              salesData={salesData}\r\n                              buyerData={buyerData}\r\n                              steeringData={steeringData}\r\n                              transmissionData={transmissionData}\r\n                              exteriorColorData={exteriorColorData}\r\n                              fuelData={fuelData}\r\n                              driveTypeData={driveTypeData}\r\n                              bodyTypeData={bodyTypeData}\r\n                              selectPort={selectPort}\r\n                              selectSales={selectSales}\r\n                              selectBuyer={selectBuyer}\r\n                              inputRefNum={inputRefNum}\r\n                              inputChassis={inputChassis}\r\n                              inputModelCode={inputModelCode}\r\n                              inputEngineCode={inputEngineCode}\r\n                              inputEngineDis={inputEngineDis}\r\n                              selectSteering={selectSteering}\r\n                              inputMileage={inputMileage}\r\n                              selectTransmission={selectTransmission}\r\n                              selectExteriorColor={selectExteriorColor}\r\n                              inputNumOfSeats={inputNumOfSeats}\r\n                              inputDoors={inputDoors}\r\n                              inputPurchasedPrice={inputPurchasedPrice}\r\n                              selectFuel={selectFuel}\r\n                              inputDimensionLength={inputDimensionLength}\r\n                              inputDimensionWidth={inputDimensionWidth}\r\n                              inputDimensionHeight={inputDimensionHeight}\r\n                              inputDimensionCubicMeters={inputDimensionCubicMeters}\r\n                              selectDriveType={selectDriveType}\r\n                              inputWeight={inputWeight}\r\n                              selectBodyType={selectBodyType}\r\n                              inputCarName={inputCarName}\r\n                              inputCarDesc={inputCarDesc}\r\n                              inputFobJpy={inputFobJpy}\r\n                              selectRegYear={selectRegYear}\r\n                              selectRegMonth={selectRegMonth}\r\n                              setRefNumFromSelects={setRefNumFromSelects}\r\n                              inputStockIDNumber={inputStockIDNumber}\r\n                              stockIDNumError={stockIDNumError}\r\n                              selectMakeForModelRef={selectMakeForModelRef}\r\n                              textAreaAddModel={textAreaAddModel}\r\n                              selectMakeForAddModelRef={selectMakeForAddModelRef}\r\n                              handleAddMakeTextChange={handleAddMakeTextChange}\r\n                              textAreaAddMake={textAreaAddMake}\r\n                              modelError={modelError}\r\n                              // makeData={makeData}\r\n                              makeError={makeError}\r\n                              selectMakeBoxRef={selectMakeBoxRef}\r\n                              selectMakeRef={selectMakeRef}\r\n                              selectModelRef={selectModelRef}\r\n                              selectModelBoxRef={selectModelBoxRef}\r\n                              setCarNameFromSelects={setCarNameFromSelects}\r\n                              setCarNameFromSelectsModel={setCarNameFromSelectsModel}\r\n                              inputCarNotes={inputCarNotes}\r\n                              inputCarMemo={inputCarMemo}\r\n                              purchasedPriceError={purchasedPriceError}\r\n                              handleInputPurchasedPriceChange={handleInputPurchasedPriceChange}\r\n                            />\r\n\r\n\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={2} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Year & Month</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box ref={selectRegYearBoxRef} bgColor={'white'} flex={1} borderColor={regYearError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectRegYear}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={years}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    regYearVariable.text = selectedItem;\r\n                                    // console.log(regYearVariable.text);\r\n                                    setCarNameFromSelects()\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Year --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\"Year\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n\r\n                              </Box>\r\n                              <Box ref={selectRegMonthBoxRef} bgColor={'white'} flex={1} borderColor={regMonthError} borderWidth={1}>\r\n\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectRegMonth}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={monthNumbers}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    regMonthVariable.text = selectedItem;\r\n                                    // console.log(regMonthVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"--Choose Month--\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\"Month\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    outlineStyle: 'none',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Port</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Port'}\r\n                                  handleAddTextChange={handleAddPortTextChange}\r\n                                  handleAddCodeTextChange={handleAddPortCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddPortCode}\r\n                                  textAreaAdd={textAreaAddPort}\r\n                                  title='Port'\r\n                                  dataName={'port'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Port\"\r\n                                  data={portData} />\r\n                              </Box>\r\n                              <Box ref={selectPortBoxRef} bgColor={'white'} flex={1} borderColor={portError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectPort}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={portData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    portVariable.text = selectedItem.name;\r\n                                    portVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Port --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Port\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Sales In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Sales'}\r\n                                  handleAddTextChange={handleAddSalesTextChange}\r\n                                  handleAddCodeTextChange={handleAddSalesCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddSalesCode}\r\n                                  textAreaAdd={textAreaAddSales}\r\n                                  title='Sales'\r\n                                  dataName={'sales'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Sales\"\r\n                                  data={salesData} />\r\n                              </Box>\r\n                              <Box ref={selectSalesBoxRef} bgColor={'white'} flex={1} borderColor={salesError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectSales}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={salesData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    salesVariable.text = selectedItem.name;\r\n                                    salesVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Sales --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Sales\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Buyer In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalBuyerOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Buyer'}\r\n                                  handleAddTextChange={handleAddBuyerTextChange}\r\n                                  handleAddCodeTextChange={handleAddBuyerCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddBuyerCode}\r\n                                  textAreaAdd={textAreaAddBuyer}\r\n                                  title='Buyer'\r\n                                  dataName={'buyer'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add buyer\"\r\n                                  data={buyerData} />\r\n                              </Box>\r\n                              <Box ref={selectBuyerBoxRef} bgColor={'white'} flex={1} borderColor={buyerError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectBuyer}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={buyerData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    buyerVariable.text = selectedItem.name;\r\n                                    buyerVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Buyer --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Buyer\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n\r\n\r\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                            <Box bgColor={'#8096D7'} flex={1} justifyContent=\"center\" alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Month</Text></Box>\r\n                            <Box bgColor={'white'} flex={1}><Input placeholder=\"Registration Month\" /></Box>\r\n                          </Box> */}\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Reference Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={refNumError} borderWidth={1}><Input defaultValue=\"\" ref={inputRefNum} onChangeText={handleInputRefNumChange} placeholder=\" Reference Number\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Chassis / Frame Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={chassisError} borderWidth={1}><Input defaultValue=\"\" ref={inputChassis} onChangeText={handleInputChassisChange} placeholder=\" Chassis / Frame Number\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Model Code</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={modelCodeError} borderWidth={1}><Input defaultValue=\"\" ref={inputModelCode} onChangeText={handleInputModelCodeChange} placeholder=\" Model Code\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Code</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}><Input defaultValue=\"\" ref={inputEngineCode} onChangeText={handleInputEngineCodeChange} placeholder=\" Engine Code\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Displacement</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={engineDisError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputEngineDis} onChangeText={handleInputEngineDisChange} flex={1} placeholder=\" Engine Displacement\" /><InputRightAddon children={\"cc\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Steering</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}></Box>\r\n                              </Box>\r\n                              <Box ref={selectSteeringBoxRef} bgColor={'white'} flex={1} borderColor={steeringError} borderWidth={1}>\r\n                                {/* <Select key={keySelectSteering} ref={selectSteering} accessibilityLabel=\"Choose Steering\" placeholder=\"Choose Steering\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                <Select.Item key={'Left'} label={'Left'} value={'Left'} />\r\n                                <Select.Item key={'Right'} label={'Right'} value={'Right'} />\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectSteering}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={steeringData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    steeringVariable.text = selectedItem;\r\n                                    // console.log(steeringVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Steering --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Steering\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} bgColor={'#8096D7'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Mileage</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={mileageError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputMileage} onChangeText={handleInputMileageChange} flex={1} placeholder=\" Mileage\" /><InputRightAddon children={\"km\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={1} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Transmission</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalTransmissionOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal docName={'Transmission'} handleAddTextChange={handleAddTransmissionTextChange} textAreaAdd={textAreaAddTransmission} title='Transmission' dataName={'transmission'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Transmission\" data={transmissionData} />\r\n                              </Box>\r\n                              <Box ref={selectTransmissionBoxRef} bgColor={'white'} flex={1} borderColor={transmissionError} borderWidth={1}>\r\n                                {/* <Select key={keySelectTransmission} accessibilityLabel=\"Choose Transmission\" placeholder=\"Choose Transmission\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {transmissionData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectTransmission}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={transmissionData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    transmissionVariable.text = selectedItem;\r\n                                    // console.log(transmissionVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Transmission --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Transmission\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Exterior Color</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalExteriorColorOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='ExteriorColor'\r\n                                  handleAddTextChange={handleAddExteriorColorTextChange}\r\n                                  textAreaAdd={textAreaAddExteriorColor}\r\n                                  title='Exterior Color'\r\n                                  dataName={'exteriorColor'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Transmission\"\r\n                                  data={transmissionData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectExteriorColorBoxRef} bgColor={'white'} flex={1} borderColor={exteriorColoError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectExteriorColor}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={exteriorColorData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    exteriorColorVariable.text = selectedItem;\r\n                                    // console.log(exteriorColorVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Exterior Color --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Exterior Color\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Number of Seats</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={numOfSeatsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputNumOfSeats} onChangeText={handleInputNumOfSeatsChange} placeholder=\" Number of Seats\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Doors</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={doorsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDoors} onChangeText={handleInputDoorsChange} placeholder=\" Doors\" /></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Fuel</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalFuelOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='Fuel'\r\n                                  handleAddTextChange={handleAddFuelTextChange}\r\n                                  textAreaAdd={textAreaAddFuel}\r\n                                  title='Fuel'\r\n                                  dataName={'fuel'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Fuel\"\r\n                                  data={fuelData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectFuelBoxRef} bgColor={'white'} flex={1} borderColor={fuelError} borderWidth={1}>\r\n                                {/* <Select key={keySelectFuel} accessibilityLabel=\"Choose Fuel\" placeholder=\"Choose Fuel\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {fuelData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectFuel}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={fuelData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    fuelVariable.text = selectedItem;\r\n                                    // console.log(fuelVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Fuel --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Fuel\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} alignSelf={'center'} flex={[1, 1, 1, 1, 2, 2]} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Dimension</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionLengthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionLength} onChangeText={handleInputDimensionLengthChange} flex={1} placeholder=\"Length\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionWidthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionWidth} onChangeText={handleInputDimensionWidthChange} flex={1} placeholder=\"Width\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionHeightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionHeight} onChangeText={handleInputDimensionHeightChange} flex={1} placeholder=\"Height\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1}><InputGroup><Input keyboardType=\"numeric\" ref={inputDimensionCubicMeters} defaultValue=\"0.00\" onChangeText={handleInputDimensionCubicMetersChange} bgColor={'muted.100'} disabled editable={false} flex={1} placeholder=\"Cubic Meters\" /><InputRightAddon children={\"m³\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Drive Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalDriveTypeOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='DriveType'\r\n                                  handleAddTextChange={handleAddDriveTypeTextChange}\r\n                                  textAreaAdd={textAreaAddDriveType}\r\n                                  title='Drive Type'\r\n                                  dataName={'driveType'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Drive Type\"\r\n                                  data={driveTypeData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectDriveTypeBoxRef} bgColor={'white'} flex={1} borderColor={driveTypeError} borderWidth={1}>\r\n                                {/* <Select key={keySelectDriveType} accessibilityLabel=\"Choose Drive Type\" placeholder=\"Choose Drive Type\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {driveTypeData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectDriveType}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={driveTypeData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    driveTypeVariable.text = selectedItem;\r\n                                    // console.log(driveTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Drive Type --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Drive Type\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Weight</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={weightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" ref={inputWeight} keyboardType=\"numeric\" onChangeText={handleInputWeightChange} flex={1} placeholder=\" Weight\" /><InputRightAddon children={\"kg\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'0'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Body Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n                                <SortAndAddModal\r\n                                  docName='BodyType'\r\n                                  handleAddTextChange={handleAddBodyTypeTextChange}\r\n                                  textAreaAdd={textAreaAddBodyType}\r\n                                  title='Body Type'\r\n                                  dataName={'bodyType'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Body Type\"\r\n                                  data={bodyTypeData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectBodyTypeBoxRef} bgColor={'white'} flex={1} borderColor={bodyTypeError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectBodyType}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={bodyTypeData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    bodyTypeVariable.text = selectedItem;\r\n                                    // console.log(bodyTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Body Type --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Body Type\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Supply Chains Costs</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}>\r\n                                <SupplyChainsCosts\r\n                                  handleAddExpenseNameTextChange={handleAddExpenseNameTextChange}\r\n                                  textAreaAddExpenseName={textAreaAddExpenseName}\r\n                                  inputExpenseAmount={inputExpenseAmount}\r\n                                  handleInputExpenseAmountChange={handleInputExpenseAmountChange}\r\n                                  handleAddPaidToTextChange={handleAddPaidToTextChange}\r\n                                  paidToData={paidToData}\r\n                                  inputCarNotes={inputCarNotes}\r\n                                /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Select Features</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={isNoFeaturesSelected} borderWidth={1}><SelectFeaturesButton /></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock Status</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n                              </Box>\r\n                              <Box ref={selectStockStatusBoxRef} bgColor={'white'} flex={1} borderColor={stockStatusError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectStockStatus}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={stockStatusData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    stockStatusVariable.text = selectedItem;\r\n                                    // console.log(bodyTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Stock Status --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Stock Status\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n\r\n\r\n                          </Box>\r\n\r\n\r\n                        </Box>\r\n\r\n                      </Box>\r\n\r\n                      <br /> <br /> <br /> <br />\r\n\r\n                      <Box flex={1} bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\r\n                        {/*=============================================================== Add Image(s)===============================================================*/}\r\n                        <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\r\n\r\n                      </Box>\r\n\r\n                    </Box>\r\n\r\n                  </Box>\r\n\r\n                  <Box flex={1} margin={1} flexDirection={'column'} h={'full'} display={['none', 'none', 'none', 'none', 'flex', 'flex']}>\r\n                    <Box h={'full'} w={'full'}>\r\n\r\n                      <HStack flex={1}>\r\n                        <Input\r\n                          ref={inputCarName}\r\n                          borderColor={carNameError}\r\n                          placeholder=\"Car Name\" margin={1} bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} flex={1} />\r\n                        <HStack flex={1}>\r\n                          <InputGroup flex={1}>\r\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} children={\"Notes \"} />\r\n                            <Input flex={1} ref={inputCarNotes} borderColor={carNameError} placeholder=\"Note\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                          </InputGroup>\r\n                        </HStack>\r\n                      </HStack>\r\n\r\n                      <HStack flex={2}>\r\n                        <TextArea flex={1} ref={inputCarDesc} borderColor='muted.500' bgColor={'white'} placeholder=\"Car Description / Salespoint\" borderWidth={1} placeholderTextColor={'muted.400'} margin={1} />\r\n                        <HStack marginTop={1} flex={1}>\r\n                          <InputGroup flex={1}>\r\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} color={'white'} children={\"Memo\"} />\r\n                            <Input multiline flex={1} ref={inputCarMemo} borderColor={carNameError} placeholder=\"Memo\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                          </InputGroup>\r\n                        </HStack>\r\n                      </HStack>\r\n\r\n\r\n                      <HStack>\r\n                        <Input keyboardType=\"numeric\" flex={1} ref={inputFobJpy} onChangeText={handleInputFobJpyChange} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"FOB Price\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                        <Input disabled ref={inputFobUsd} flex={1} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"dollar\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"0\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                      </HStack>\r\n\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  <Box w={'full'} flexDir={'row'} margin={1} paddingBottom={10} paddingTop={10} display={screenWidth < 1280 ? 'none' : 'flex'}>\r\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#D9D9D9'} onPress={handleModalClearOpen} _text={{ color: 'muted.500', }} _hover={{ bgColor: '#f0eded', }}>Clear</Button> */}\r\n                    <ClearModalButton handleClear={handleClear} />\r\n                    <Button borderRadius={3} flex={1} bgColor={'#A6BCFE'} disabled></Button> <Button flex={1} bgColor={'#A6BCFE'} disabled></Button>\r\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#7B9CFF'} _hover={{ bgColor: '#517cfc', }}>Upload</Button> */}\r\n                    <UploadModalButton handleUpload={handleUpload} />\r\n\r\n                  </Box>\r\n\r\n                </Box>\r\n              </PresenceTransition>\r\n            </ScrollView>\r\n\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n\r\n      <LoadingModal />\r\n      {/* <Box\r\n        position=\"absolute\"\r\n        top={0}\r\n        bottom={0}\r\n        left={0}\r\n        right={0}\r\n        backgroundColor=\"rgba(0, 0, 0, 0.5)\"\r\n        flex={1}\r\n        display={isLoading ? '' : 'none'}\r\n      >\r\n        <Center flex={1}>\r\n          <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Spinner size=\"lg\" color=\"white\" />\r\n            <Text color={'white'}>Loading, please wait!</Text>\r\n          </Box>\r\n        </Center>\r\n      </Box> */}\r\n\r\n      <UpdateSuccessModal onClose={handleUpdateSuccessModalClose} headerText={'Vehicle Updated!'} bodyText={'Vehicle was successfully updated!'} />\r\n      <UploadSuccessModal onClose={handleSuccessModalClose} headerText={'Vehicle Added!'} bodyText={'Vehicle was successfully added! You can view it in the vehicle list.'} />\r\n    </NativeBaseProvider>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Flex,\r\n    HStack,\r\n    Icon,\r\n    Image as NativeImage,\r\n    Input,\r\n    Modal,\r\n    NativeBaseProvider,\r\n    Popover,\r\n    Spinner,\r\n    Stack,\r\n    Text,\r\n    VStack,\r\n    TextArea,\r\n    InputRightAddon,\r\n    InputGroup,\r\n    InputLeftAddon,\r\n    Select,\r\n    CheckIcon,\r\n    PresenceTransition,\r\n    CloseIcon,\r\n    ScrollView as ScrollViewNative,\r\n    Divider,\r\n    useDisclosure,\r\n    useDisclose,\r\n    FormControl,\r\n    Checkbox,\r\n    useToast,\r\n    Tooltip,\r\n    Progress,\r\n    Alert\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n    Dimensions,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    StyleSheet,\r\n    View,\r\n    PanResponder,\r\n    Animated,\r\n    Easing,\r\n    InputAccessoryView,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    TextInput,\r\n    Image as RNImage,\r\n    Pressable,\r\n    Linking,\r\n    Modal as RNModal,\r\n    Platform,\r\n    SafeAreaView,\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo,\r\n    FontAwesome5,\r\n    EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup, increment } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n    setVehicleListData,\r\n    setSupplyChainsCostsData,\r\n    setSelectedPaidTo,\r\n    setSelectedExpenseName,\r\n    setSupplyChainsCostsModalVisible,\r\n    setVehicleListSupplyChainsCostsData,\r\n    setDeleteImageVisible,\r\n    setSelectedImages,\r\n    setAddAnotherImages,\r\n    setIsAddPhotoVisible,\r\n    setUploadImagesModalVisible,\r\n    setUploadImagesButtonLoading,\r\n    setViewImagesModalVisible,\r\n    setViewImagesData,\r\n    setLoadingModalVisible,\r\n    setAddVehicleListData,\r\n    setEditVehicleModalVisible,\r\n    setFobPriceHistoryModalVisible,\r\n    setChatListData,\r\n    setChatListImageUrl,\r\n    setChatListLastVisible,\r\n    setLoadMoreLoading,\r\n    setNoMoreData,\r\n    setActiveChatId,\r\n    setChatListSearchText,\r\n    setChatMessagesData,\r\n    setChatMessageBoxLoading,\r\n    setSelectedChatData,\r\n    setReadByListModalVisible,\r\n    setLoadMoreMessagesLoading,\r\n    setNoMoreMessagesData,\r\n    setDeleteMessageTemplateVisible,\r\n    setInvoiceData,\r\n    setTransactionModalVisible,\r\n    setPreviewInvoiceVisible,\r\n    setSelectedCustomerData,\r\n    setPdfViewerModalVisible,\r\n    setSelectedFileUrl,\r\n    setIsLoading,\r\n    setLoginName,\r\n    setCarImageUrl,\r\n    setSelectedVehicleData,\r\n    setMessageTextInputValue,\r\n} from './redux/store';\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\nimport Hyperlink from 'react-native-hyperlink';\r\nimport { HmacSHA256, enc } from 'crypto-js';\r\nimport { AES } from 'crypto-js';\r\nimport { CRYPTO_KEY } from '@env';\r\nimport { captureRef } from 'react-native-view-shot';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport QRCode from 'react-native-qrcode-svg';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { HashRouter as Router, Route, Routes, useNavigate, Navigate, useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport { Iframe } from '@bounceapp/iframe';\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'CHAT MESSAGES'\r\nlet globalLastVisible;\r\nlet globalMessagesLastVisible;\r\nlet globalSearchText = '';\r\nlet globalCustomerId = '';\r\nlet globalChatId = '';\r\nlet globalImageUrl = '';\r\nlet globalCustomerCarName = '';\r\nlet globalCustomerFirstName = '';\r\nlet globalCustomerLastName = '';\r\n\r\nlet globalAdditionalNameArray = [];\r\n\r\nlet globalAdditionalPriceArray = [];\r\n\r\nlet globalMessageTemplateSelectedTitle = '';\r\n\r\n// let userEmail = projectControlAuth.currentUser.email;\r\n\r\nlet formattedIssuingDate = ''; // Initialize the variable outside the conditional rendering block\r\nlet formattedDueDate = '';\r\n\r\nlet transactionModalTitle = '';\r\n\r\nlet transactionModalContentValue = 0;\r\n\r\nlet ip = '';\r\nlet ipCountry = '';\r\n\r\nlet globalInvoiceVariable = {\r\n    carData: {\r\n\r\n    },\r\n    cfs: '',\r\n    placeOfDelivery: '',\r\n    departureCountry: '',\r\n    departurePort: '',\r\n    salesPerson: '',\r\n\r\n    discharge: {\r\n        port: '',\r\n        country: '',\r\n    },\r\n\r\n    consignee: {\r\n        sameAsBuyer: null,\r\n        name: '',\r\n        address: '',\r\n        contactNumber: '',\r\n        fax: '',\r\n        email: '',\r\n    },\r\n\r\n    notifyParty: {\r\n        sameAsConsignee: null,\r\n        name: '',\r\n        address: '',\r\n        contactNumber: '',\r\n        fax: '',\r\n        email: '',\r\n    },\r\n\r\n    paymentDetails: {\r\n        incoterms: '',\r\n        inspectionIsChecked: null,\r\n        inspectionName: '',\r\n        warrantyIsCheck: null,\r\n        warrantyAmount: 0,\r\n        fobPrice: 0,\r\n        freightPrice: 0,\r\n        insurancePrice: 0,\r\n        inspectionPrice: 0,\r\n        totalAmount: 0,\r\n        additionalName: [],\r\n        additionalPrice: [],\r\n    },\r\n\r\n    bankInformations: {\r\n        dueDate: '',\r\n        issuingDate: '',\r\n        bankAccount: {\r\n\r\n        },\r\n        paymentTerms: '',\r\n        salesAgreement: '',\r\n    },\r\n\r\n}\r\n\r\nlet globalSelectedPDFUrl = '';\r\nlet globalSelectedFileType = '';\r\n\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n\r\n    const user = projectControlAuth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\nconst encryptData = (data) => {\r\n    try {\r\n        const secretKey = CRYPTO_KEY.toString();\r\n        return AES.encrypt(data, secretKey).toString();\r\n    } catch (error) {\r\n        console.error(\"Error encrypting data:\", error);\r\n        // useNavigate(`/devadmin/chat-messages`);\r\n\r\n        // Handle the encryption error or return a fallback\r\n        return null; // or handle it in another appropriate way\r\n    }\r\n};\r\n\r\nconst decryptData = (ciphertext) => {\r\n    try {\r\n        const secretKey = CRYPTO_KEY.toString();\r\n\r\n        const bytes = AES.decrypt(ciphertext, secretKey);\r\n        return bytes.toString(enc.Utf8);\r\n    } catch (error) {\r\n        console.error(\"Error decrypting data:\", error);\r\n        // useNavigate(`/devadmin/chat-messages`);\r\n\r\n        // Handle the decryption error or return a fallback\r\n        return null; // or handle it in another appropriate way\r\n    }\r\n};\r\n\r\n\r\nconst TimelineStatus = ({ data }) => {\r\n\r\n    const selectedChatData = useSelector(state => state.selectedChatData);\r\n\r\n    const changeIndex = data.findIndex(item => selectedChatData.stepIndicator.value < item.value);\r\n\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', paddingTop: 3, }}>\r\n            {/* Dots and individual line segments */}\r\n            {data.map((item, index) => (\r\n                <View key={index} style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                    {/* Dot */}\r\n                    <Tooltip label={item.title} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33' }}>\r\n                        <View style={{\r\n                            width: 20,\r\n                            height: 20,\r\n                            borderRadius: 10,\r\n                            backgroundColor: selectedChatData.stepIndicator.value < item.value ? '#C1C1C1' : '#abf7c7',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            {selectedChatData.stepIndicator.value < item.value ? (\r\n                                <FastImage\r\n                                    source={{\r\n                                        uri: require(`../../assets/chat_step/chat_step_${item.value}_off.png`),\r\n                                        priority: FastImage.priority.normal,\r\n                                    }}\r\n                                    style={{\r\n                                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                                        width: 15,\r\n                                        height: 15,\r\n                                        alignSelf: 'center',\r\n                                    }}\r\n                                    resizeMode={FastImage.resizeMode.stretch}\r\n                                />\r\n                            ) : (\r\n                                <FastImage\r\n                                    source={{\r\n                                        uri: require(`../../assets/chat_step/chat_step_${item.value}_on.png`),\r\n                                        priority: FastImage.priority.normal\r\n                                    }}\r\n                                    style={{\r\n                                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                                        width: 15,\r\n                                        height: 15,\r\n                                        alignSelf: 'center',\r\n                                    }}\r\n                                    resizeMode={FastImage.resizeMode.stretch}\r\n                                />\r\n                            )}\r\n\r\n                        </View>\r\n                    </Tooltip>\r\n                    {/* Line Segment (except for the last dot) */}\r\n                    {index < data.length - 1 && (\r\n                        <View style={{\r\n                            height: 3,\r\n                            width: 20, // Adjust the width to match the space between the dots\r\n                            backgroundColor: selectedChatData.stepIndicator.value <= item.value ? '#C1C1C1' : '#abf7c7',\r\n                        }} />\r\n                    )}\r\n                </View>\r\n            ))}\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nconst statusData = [\r\n    { title: 'Negotiation', value: 1 },\r\n    { title: 'Issued Proforma Invoice', value: 2 },\r\n    { title: 'Order Item', value: 3 },\r\n    { title: 'Payment Confirmed', value: 4 },\r\n    { title: 'Shipping Schedule', value: 5 },\r\n    { title: 'Documents', value: 6 },\r\n    { title: 'Vehicle Received', value: 7 },\r\n    // Add more events as needed\r\n];\r\n\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n// const SkeletonChatListLayout = () => {\r\n//     return (\r\n//         <SkeletonPlaceholder>\r\n//             <SkeletonPlaceholder.Item flexDirection=\"row\" alignItems=\"center\" padding={12}>\r\n//                 {/* Placeholder for Image */}\r\n//                 <SkeletonPlaceholder.Item width={60} height={60} borderRadius={30} />\r\n\r\n//                 {/* Placeholder for Texts */}\r\n//                 <SkeletonPlaceholder.Item flex={1} marginLeft={20}>\r\n//                     {/* Date */}\r\n//                     <SkeletonPlaceholder.Item width={80} height={12} marginBottom={6} />\r\n//                     {/* Car Name */}\r\n//                     <SkeletonPlaceholder.Item width={120} height={14} marginBottom={6} />\r\n//                     {/* Text First and Last */}\r\n//                     <SkeletonPlaceholder.Item width={140} height={14} marginBottom={6} />\r\n//                     {/* Last Message */}\r\n//                     <SkeletonPlaceholder.Item width={160} height={12} marginBottom={6} />\r\n//                 </SkeletonPlaceholder.Item>\r\n//             </SkeletonPlaceholder.Item>\r\n//         </SkeletonPlaceholder>\r\n//     );\r\n// };\r\n\r\nconst HeaderButton = ({ title, onPress, isActive, headerCount }) => {\r\n    const activeStyle = isActive ? { backgroundColor: '#E1EDF7' } : {};\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n    return (\r\n        <Pressable\r\n            onHoverIn={hoverIn}\r\n            onHoverOut={hoverOut}\r\n            focusable={false}\r\n            onPress={onPress}\r\n            style={{ backgroundColor: isHovered ? '#f2f2f2' : 'transparent', padding: 12, marginVertical: screenWidth > 1818 ? 10 : 2, borderWidth: 5, borderColor: 'transparent', marginLeft: 8, width: 195, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 5, ...activeStyle }}\r\n        >\r\n            <Text color={isActive ? '#0A78BE' : '#1C2B33'} fontSize={14} style={{ fontWeight: isActive ? 700 : 400, alignSelf: 'center', textAlign: 'center', }}>{title}</Text>\r\n            {headerCount}\r\n\r\n        </Pressable>\r\n    );\r\n\r\n};\r\n\r\nconst FilterButton = ({ title, onPress, isActive, iconActive, iconNotActive }) => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n    return (\r\n        <Pressable\r\n            focusable={false}\r\n            variant='ghost'\r\n            onPress={onPress}\r\n            onHoverIn={hoverIn}\r\n            onHoverOut={hoverOut}\r\n            style={{\r\n                padding: 5,\r\n                width: 100,\r\n                margin: 5,\r\n                flexDirection: 'row', // Align items in a row\r\n                alignItems: 'center', // Center items vertically\r\n                justifyContent: 'center',\r\n                borderRadius: 5,\r\n                backgroundColor: isActive ? '#E1EDF7' : (isHovered ? '#d7d7d9' : '#ECEDF0'),\r\n            }}\r\n        >\r\n            {isActive ? iconActive : iconNotActive}\r\n            <Text color={isActive ? '#0A78BE' : '#1C2B33'} fontSize={14} style={{ fontWeight: isActive ? 700 : 400, marginLeft: 5, }}>{title}</Text>\r\n\r\n\r\n        </Pressable>\r\n    );\r\n};\r\n\r\nconst formatDate = (timestamp) => {\r\n    const currentDate = new Date();\r\n    const formattedTimestamp = timestamp.replace(' at ', 'T').replace(/\\//g, '-');\r\n    const givenDate = new Date(formattedTimestamp);\r\n\r\n    // Resetting the time part to compare dates only\r\n    const currentFormattedDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\r\n    const givenFormattedDate = new Date(givenDate.getFullYear(), givenDate.getMonth(), givenDate.getDate());\r\n\r\n    // Check if the dates are the same\r\n    if (givenFormattedDate.getTime() === currentFormattedDate.getTime()) {\r\n        return \"This day\";\r\n    }\r\n\r\n    const oneDay = 24 * 60 * 60 * 1000;\r\n    const startOfWeek = new Date();\r\n    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() + (startOfWeek.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    // Check if the date is within this week\r\n    if (givenDate >= startOfWeek && givenDate < currentFormattedDate) {\r\n        return givenDate.toLocaleDateString('en-US', { weekday: 'short' });\r\n    }\r\n\r\n    // Check if the date is within this year\r\n    const startOfYear = new Date(new Date().getFullYear(), 0, 1);\r\n    if (givenDate >= startOfYear) {\r\n        return givenDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    }\r\n\r\n    // If the date is not within this year\r\n    return givenDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });\r\n};\r\n\r\nconst SkeletonChatListLayout = () => {\r\n\r\n    return (\r\n        <>\r\n            <View // Add a unique key here\r\n                style={{\r\n                    padding: 12,\r\n                    alignItems: 'flex-start',\r\n                    flexDirection: 'row',\r\n                    backgroundColor: 'white',\r\n                }}\r\n            >\r\n                {/* Skeleton for the image */}\r\n                <View\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginRight: 12,\r\n                    }}\r\n                />\r\n                {/* Skeleton for the text */}\r\n                <View style={{ flex: 1 }}>\r\n                    {Array.from({ length: 3 }).map((_, subIndex) => (\r\n                        <View\r\n                            key={`text-${subIndex}`}  // Add a unique key here for each text line\r\n                            style={{\r\n                                height: 10,\r\n                                backgroundColor: '#e0e0e0',\r\n                                marginBottom: 6,\r\n                                width: '80%',\r\n                                borderRadius: 4,\r\n                            }}\r\n                        />\r\n                    ))}\r\n                    <View style={{\r\n                        position: 'absolute',\r\n                        right: 10, height: 10,\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginBottom: 6,\r\n                        width: '5%',\r\n                        borderRadius: 4,\r\n                    }} />\r\n\r\n                    <View\r\n                        style={{\r\n                            borderRadius: 4,\r\n                            backgroundColor: '#e0e0e0',\r\n                            position: 'absolute',\r\n                            right: -20,\r\n                            top: -20,\r\n                            padding: 10,\r\n                            alignSelf: 'center',\r\n                        }}\r\n\r\n                    />\r\n                </View>\r\n            </View>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst DeleteMessageTemplateYesNo = ({ handleDeleteMessageTemplateClose }) => {\r\n\r\n    const deleteMessageTemplateVisible = useSelector((state) => state.deleteMessageTemplateVisible);\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n    const selectedTitle = globalMessageTemplateSelectedTitle;\r\n    const [isDeleteLoading, setIsDeleteLoading] = useState(false);\r\n    const handleClose = () => {\r\n        handleDeleteMessageTemplateClose();\r\n\r\n    }\r\n\r\n\r\n    const deleteMessageTemplate = async (titleToDelete) => {\r\n        const documentRef = doc(projectControlFirestore, 'MessageTemplate', email);\r\n        setIsDeleteLoading(true);\r\n        try {\r\n            // Fetch current data\r\n            const docSnap = await getDoc(documentRef);\r\n\r\n            if (docSnap.exists()) {\r\n                let messageTemplates = docSnap.data().messageTemplate || [];\r\n\r\n                // Filter out the item with the specified title\r\n                const updatedTemplates = messageTemplates.filter(template => template.title !== titleToDelete);\r\n\r\n                // Update the document with the new array\r\n                await updateDoc(documentRef, { messageTemplate: updatedTemplates });\r\n\r\n                console.log('Item successfully deleted');\r\n                setIsDeleteLoading(false);\r\n                handleClose();\r\n            } else {\r\n                console.log('Document does not exist');\r\n                setIsDeleteLoading(false);\r\n\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting item: ', error);\r\n            setIsDeleteLoading(false);\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={deleteMessageTemplateVisible}\r\n            onClose={handleClose}\r\n        >\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header >Delete Message Template?</Modal.Header>\r\n                <Modal.Body>\r\n                    <View style={{ flex: 1, }}>\r\n                        <Text style={{ fontWeight: 400, }}>Are you sure you want to delete the selected message template?</Text>\r\n                    </View>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"ghost\" space=\"2\">\r\n                        <Button style={{ width: 80, height: 36, }} onPress={handleClose} variant={'solid'} colorScheme={'warmGray'}>Cancel</Button>\r\n                        <Button isLoading={isDeleteLoading ? true : false} onPress={() => deleteMessageTemplate(selectedTitle)} style={{ padding: 16, height: 36, }} variant={'solid'} colorScheme={'error'}>Delete</Button>\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n};\r\n\r\nconst MessageTemplateItem = ({ setOriginalTitle, addVisible, titleInputRef, valueInputRef, setAddVisible, item, textInputRef, setPopoverOpen }) => {\r\n    const [isTemplateItemHovered, setIsTemplateItemHovered] = useState(false);\r\n    const [isTemplateMenuHovered, setIsTemplateMenuHovered] = useState(false);\r\n    const [isTemplateEditHovered, setIsTemplateEditHovered] = useState(false);\r\n    const [isTemplateDeleteHovered, setIsTemplateDeleteHovered] = useState(false);\r\n    const [templateMenuOpen, setTemplateMenuOpen] = useState(false);\r\n    const [currentItem, setCurrentItem] = useState(null);\r\n    const [addIsVisible, setIsAddVisible] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const onPress = (item) => {\r\n        // textInputRef.current.value = item.value;\r\n        dispatch(setMessageTextInputValue(item.value));\r\n        setPopoverOpen(false);\r\n    };\r\n\r\n    const onEditPress = (item) => {\r\n\r\n        setAddVisible(true);\r\n        // setCurrentItem(item);\r\n        setIsAddVisible(true);\r\n        setTemplateMenuOpen(false);\r\n        titleInputRef.current.value = item.title;\r\n        valueInputRef.current.value = item.value;\r\n        setOriginalTitle(item.title);\r\n        textInputRef.current.focus();\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n\r\n\r\n    //     if (addIsVisible == true) {\r\n    //         console.log(addIsVisible);\r\n    //         titleInputRef.current.value = currentItem.title;\r\n    //         valueInputRef.current.value = currentItem.value;\r\n    //     }\r\n    //     if (titleInputRef.current && valueInputRef.current) {\r\n    //         titleInputRef.current.value = currentItem.title;\r\n    //         valueInputRef.current.value = currentItem.value;\r\n    //     }\r\n    // }, [currentItem]);\r\n\r\n    const handleDeletePress = (title) => {\r\n\r\n        dispatch(setDeleteMessageTemplateVisible(true));\r\n        globalMessageTemplateSelectedTitle = title;\r\n    }\r\n\r\n\r\n    return (\r\n        <Pressable\r\n            onPress={() => onPress(item)}\r\n            onHoverIn={() => setIsTemplateItemHovered(true)}\r\n            onHoverOut={() => setIsTemplateItemHovered(false)}\r\n            style={{\r\n                padding: 10,\r\n                backgroundColor: isTemplateItemHovered ? '#f2f2f2' : 'transparent',\r\n                flex: 1,\r\n                borderRadius: 5,\r\n            }}>\r\n            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                <Text style={{ fontWeight: '700', flex: 1, }} numberOfLines={1} ellipsizeMode='tail'>{item.title}</Text>\r\n                <Popover\r\n                    isOpen={templateMenuOpen}\r\n                    onClose={() => setTemplateMenuOpen(false)}\r\n                    trigger={(triggerProps) => {\r\n                        return <Pressable\r\n                            {...triggerProps}\r\n                            onPress={() => setTemplateMenuOpen(true)}\r\n                            onHoverIn={() => setIsTemplateMenuHovered(true)}\r\n                            onHoverOut={() => setIsTemplateMenuHovered(false)}\r\n                            style={{ backgroundColor: isTemplateMenuHovered ? '#dedede' : 'transparent', padding: 5, justifyContent: 'center', borderRadius: 5, }}>\r\n                            <Entypo size={16} name='dots-three-horizontal' color='#171717' />\r\n                        </Pressable>\r\n                    }}\r\n\r\n                >\r\n                    <Popover.Content>\r\n\r\n                        <Pressable\r\n                            onPress={() => onEditPress(item)}\r\n                            onHoverIn={() => setIsTemplateEditHovered(true)}\r\n                            onHoverOut={() => setIsTemplateEditHovered(false)} style={{ flex: 1, width: 50, backgroundColor: isTemplateEditHovered ? '#dedede' : 'white', padding: 5, }} focusable={false}>\r\n                            <Text>Edit</Text>\r\n                        </Pressable>\r\n\r\n                        <Pressable\r\n                            onPress={() => handleDeletePress(item.title)}\r\n                            onHoverIn={() => setIsTemplateDeleteHovered(true)}\r\n                            onHoverOut={() => setIsTemplateDeleteHovered(false)} style={{ flex: 1, width: 50, backgroundColor: isTemplateDeleteHovered ? '#dedede' : 'white', padding: 5, }} focusable={false}>\r\n                            <Text>Delete</Text>\r\n                        </Pressable>\r\n\r\n                    </Popover.Content>\r\n                </Popover>\r\n            </View>\r\n            <Text style={{ fontWeight: '400', fontSize: 12, }} numberOfLines={1} ellipsizeMode='tail'>{item.value}</Text>\r\n        </Pressable>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst MessageTemplate = ({ textInputRef }) => {\r\n    const dispatch = useDispatch();\r\n    const [isTemplateHovered, setIsTemplateHovered] = useState(false);\r\n    const [isAddHovered, setIsAddHovered] = useState(false);\r\n    const [popoverOpen, setPopoverOpen] = useState(false);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [addVisible, setAddVisible] = useState(false);\r\n\r\n    const [isCancelHovered, setIsCancelHovered] = useState(false);\r\n    const [isSaveHovered, setIsSaveHovered] = useState(false);\r\n    const [originalTitle, setOriginalTitle] = useState('');\r\n\r\n\r\n    const [saveLoading, setSaveLoading] = useState(false);\r\n\r\n    const [templateData, setTemplateData] = useState([]);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const searchInputRef = useRef(null);\r\n    const titleInputRef = useRef(null);\r\n    const valueInputRef = useRef(null);\r\n\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n    const data = [\r\n        { title: 'Message 1', value: 'Sample Message 1' },\r\n        { title: 'Message 2', value: 'Sample Message 2' },\r\n        { title: 'Message 3', value: 'Sample Message 3' },\r\n    ];\r\n\r\n\r\n\r\n    const saveMessageTemplate = async () => {\r\n        setSaveLoading(true);\r\n        const documentRef = doc(projectControlFirestore, 'MessageTemplate', email);\r\n\r\n        try {\r\n            // Fetch current data\r\n            const docSnap = await getDoc(documentRef);\r\n\r\n            let messageTemplates = [];\r\n            const newTitle = titleInputRef.current?.value;\r\n            const newValue = valueInputRef.current?.value;\r\n\r\n            if (newTitle && newValue) {\r\n                if (docSnap.exists()) {\r\n                    // Document exists, get the current templates\r\n                    messageTemplates = docSnap.data().messageTemplate || [];\r\n\r\n                    // Find index based on the original title\r\n                    const index = messageTemplates.findIndex(template => template.title === originalTitle);\r\n\r\n                    if (index !== -1) {\r\n                        // Update existing template\r\n                        messageTemplates[index] = { title: newTitle, value: newValue };\r\n                    } else {\r\n                        // Add new template if original title does not exist\r\n                        messageTemplates.push({ title: newTitle, value: newValue });\r\n                    }\r\n                } else {\r\n                    // Document does not exist, create a new array with the new template\r\n                    console.log('Creating a new document');\r\n                    messageTemplates = [{ title: newTitle, value: newValue }];\r\n                }\r\n\r\n                // Update or set the document\r\n                await setDoc(documentRef, { messageTemplate: messageTemplates }, { merge: true });\r\n\r\n                console.log('Document successfully updated or created');\r\n            } else {\r\n                console.log('Title or value is empty');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating or creating document: ', error);\r\n        } finally {\r\n            setSaveLoading(false);\r\n            handleCancelPressed();\r\n        }\r\n    };\r\n\r\n\r\n    const handleSearch = (text) => {\r\n        setSearchText(text);\r\n        const filtered = templateData.filter(item =>\r\n            item.title.toLowerCase().includes(text.toLowerCase()) ||\r\n            item.value.toLowerCase().includes(text.toLowerCase())\r\n        );\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const handlePopoverClose = () => {\r\n        setPopoverOpen(false);\r\n        setAddVisible(false);\r\n        setIsAddHovered(false);\r\n    };\r\n\r\n    const handleCancelPressed = () => {\r\n        setIsAddHovered(false);\r\n        setAddVisible(false);\r\n        setIsCancelHovered(false)\r\n        setIsSaveHovered(false)\r\n        titleInputRef.current.clear();\r\n        valueInputRef.current.clear();\r\n\r\n    };\r\n\r\n    const renderItem = ({ item }) => {\r\n        return <MessageTemplateItem setOriginalTitle={setOriginalTitle} addVisible={addVisible} titleInputRef={titleInputRef} valueInputRef={valueInputRef} setAddVisible={setAddVisible} item={item} textInputRef={textInputRef} setPopoverOpen={setPopoverOpen} />;\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectControlFirestore, \"MessageTemplate\", email);\r\n\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                let arrayFieldData = docSnap.data().messageTemplate;\r\n\r\n                // Sort the array by title\r\n                arrayFieldData.sort((a, b) => {\r\n                    let titleA = a.title.toUpperCase(); // ignore upper and lowercase\r\n                    let titleB = b.title.toUpperCase(); // ignore upper and lowercase\r\n                    if (titleA < titleB) {\r\n                        return -1;\r\n                    }\r\n                    if (titleA > titleB) {\r\n                        return 1;\r\n                    }\r\n                    // titles must be equal\r\n                    return 0;\r\n                });\r\n\r\n                setTemplateData(arrayFieldData);\r\n            } else {\r\n                console.log(\"No such document!\");\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching document:\", error);\r\n        });\r\n\r\n        // Cleanup subscription on unmount\r\n        return () => unsubscribe();\r\n    }, [popoverOpen]);\r\n\r\n    const handleDeleteMessageTemplateClose = () => {\r\n\r\n        dispatch(setDeleteMessageTemplateVisible(false));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <DeleteMessageTemplateYesNo handleDeleteMessageTemplateClose={handleDeleteMessageTemplateClose} />\r\n            <Popover\r\n                isOpen={popoverOpen}\r\n                onClose={handlePopoverClose}\r\n                // initialFocusRef={searchInputRef}\r\n                finalFocusRef={textInputRef}\r\n                placement={'top'}\r\n                trigger={(triggerProps) => {\r\n                    return <Pressable\r\n                        focusable={false}\r\n                        {...triggerProps}\r\n                        onPress={() => setPopoverOpen(true)}\r\n                        onHoverIn={() => setIsTemplateHovered(true)}\r\n                        onHoverOut={() => setIsTemplateHovered(false)}\r\n                        style={({ pressed }) => [\r\n                            {\r\n                                bottom: 0,\r\n                                right: 100,\r\n                                position: 'absolute',\r\n                                borderRadius: 20,\r\n                                opacity: pressed ? 0.5 : 1\r\n                            }\r\n                        ]}\r\n\r\n                    >\r\n                        <Ionicons name=\"chatbox-ellipses-outline\" size={24} color={isTemplateHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n                    </Pressable>\r\n                }} >\r\n                <Popover.Content w={screenWidth < 770 ? 320 : 400} marginRight={10} >\r\n                    <Popover.Arrow />\r\n                    <View style={{ display: addVisible ? 'flex' : 'none', }}><Popover.Header backgroundColor={'white'}>\r\n                        <View style={{ flexDirection: 'row', flex: 1 }}>\r\n                            <Text style={{ fontWeight: 700, fontSize: 16, flex: 1 }}>Create a message template</Text>\r\n                        </View>\r\n                    </Popover.Header>\r\n                        <Popover.Body backgroundColor={'white'} height={250}>\r\n                            <Text style={{ fontWeight: 700, }}>Title</Text>\r\n                            <TextInput\r\n                                ref={titleInputRef}\r\n                                placeholder='Input Title'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 40, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5 }} />\r\n                            <br />\r\n                            <Text style={{ fontWeight: 700, }}>Message</Text>\r\n                            <TextInput\r\n                                multiline\r\n                                ref={valueInputRef}\r\n                                placeholder='Input Message'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 100, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5 }} />\r\n\r\n                        </Popover.Body>\r\n                        <Popover.Footer backgroundColor={'white'}>\r\n                            <View style={{ height: 30, flexDirection: 'row', justifyContent: 'center', }}>\r\n                                <Pressable\r\n                                    onHoverIn={() => setIsCancelHovered(true)}\r\n                                    onHoverOut={() => setIsCancelHovered(false)}\r\n                                    onPress={handleCancelPressed}\r\n                                    style={{ backgroundColor: isCancelHovered ? '#DADADA' : 'white', width: 60, borderRadius: 5, padding: 5, borderWidth: 1, borderColor: '#DADDE1', marginHorizontal: 5, }}>\r\n                                    <Text style={{ textAlign: 'center', fontWeight: 500, }}>Cancel</Text>\r\n                                </Pressable>\r\n\r\n                                <Pressable\r\n                                    onPress={saveMessageTemplate}\r\n                                    onHoverIn={() => setIsSaveHovered(true)}\r\n                                    onHoverOut={() => setIsSaveHovered(false)}\r\n                                    style={{ backgroundColor: isSaveHovered ? '#107a37' : '#16A34A', width: 60, borderRadius: 5, padding: 5, borderWidth: 1, borderColor: '#DADDE1', marginHorizontal: 5, }}>\r\n                                    {saveLoading ?\r\n                                        (<Spinner\r\n                                            animating\r\n                                            size=\"sm\"\r\n                                            color={'white'}\r\n                                        />) :\r\n                                        (\r\n                                            <Text style={{ textAlign: 'center', color: 'white', fontWeight: 500, }}>Save</Text>\r\n                                        )}\r\n                                </Pressable>\r\n                            </View>\r\n                        </Popover.Footer>\r\n                    </View><View style={{ display: !addVisible ? 'flex' : 'none', }}><Popover.Header backgroundColor={'white'}>\r\n                        <View style={{ flexDirection: 'row', flex: 1 }}>\r\n                            <Text style={{ fontWeight: 700, fontSize: 16, flex: 1 }}>Message Template</Text>\r\n                            <Pressable focusable={false} onPress={() => setAddVisible(true)} onHoverIn={() => setIsAddHovered(true)} onHoverOut={() => setIsAddHovered(false)}>\r\n                                <Text style={{ fontWeight: 400, fontSize: 16, color: '#1B81C2', textDecorationLine: isAddHovered ? 'underline' : 'none' }}>+ ADD</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </Popover.Header>\r\n                        <Popover.Body backgroundColor={'white'} height={300}>\r\n                            <TextInput\r\n                                ref={searchInputRef}\r\n                                focusable={false}\r\n                                placeholder='Search'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 40, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5, marginBottom: 5, }}\r\n                                keyboardType='search'\r\n                                onChangeText={handleSearch}\r\n                                value={searchText} />\r\n                            {templateData.length > 0 || filteredData.length > 0 ? (\r\n                                <FlatList\r\n                                    style={{ height: 100, borderBottomLeftRadius: 5 }}\r\n                                    renderItem={renderItem}\r\n                                    keyExtractor={item => item.title.toString()}\r\n                                    data={searchText ? filteredData : templateData} />\r\n                            ) : (\r\n                                <Text style={{ fontWeight: 700, alignSelf: 'center', }}>No message template found</Text>\r\n                            )}\r\n\r\n                        </Popover.Body>\r\n                    </View>\r\n                </Popover.Content>\r\n            </Popover>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst FileDisplay = ({ file, onRemove }) => {\r\n    const iconSize = 24;\r\n    if (!file) return null;  // Define the icon size\r\n\r\n\r\n\r\n\r\n    const getFileIcon = (type) => {\r\n        if (type.includes('pdf')) {\r\n            return <MaterialIcons name={'picture-as-pdf'} size={iconSize} color=\"#FF0000\" />; // Red for PDF\r\n        }\r\n        if (type.includes('msword') || type.includes('wordprocessingml')) {\r\n            return <MaterialCommunityIcons name={'microsoft-word'} size={iconSize} color=\"#2B579A\" />; // Blue for Word\r\n        }\r\n        if (type.includes('vnd.ms-excel') || type.includes('spreadsheetml') || type === 'text/csv') {\r\n            return <MaterialCommunityIcons name={'microsoft-excel'} size={iconSize} color=\"#217346\" />; // Green for Excel and CSV\r\n        }\r\n        if (type.includes('rar') || type.includes('x-rar-compressed') || type.includes('x-compressed')) {\r\n            return <FastImage\r\n                source={{ uri: require('../../assets/rar_icon.png'), priority: FastImage.priority.high }}\r\n                style={{\r\n                    width: 24,\r\n                    height: 24,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.cover}\r\n            />; // Color of your choice for RAR files\r\n        }\r\n\r\n        return <MaterialIcons name=\"insert-drive-file\" size={iconSize} color=\"black\" />; // Default color for others\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', margin: 5 }}>\r\n            {getFileIcon(file.type)}\r\n            <Text style={{ marginLeft: 10 }}>{file.name}</Text>\r\n            <Pressable onPress={onRemove}>\r\n                <MaterialIcons name=\"close\" size={20} color=\"black\" />\r\n            </Pressable>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst MessageTextInput = ({ handleSendMessage, textInputRef }) => {\r\n    const [inputHeight, setInputHeight] = useState(50);\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const messageTextInputValue = useSelector((state) => state.messageTextInputValue)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleContentOnChange = (event) => {\r\n        const target = event.target;\r\n        // Temporarily reset height to ensure scrollHeight reflects current content\r\n        target.style.height = '0px'; // Reset height to recalculate\r\n        const updatedHeight = Math.max(50, Math.min(200, target.scrollHeight));\r\n        target.style.height = `${updatedHeight}px`; // Set to new calculated height\r\n        setInputHeight(updatedHeight);\r\n\r\n    };\r\n\r\n    const handleContentSizeChange = (event) => {\r\n        const { width, height } = event.nativeEvent.contentSize;\r\n        const updatedHeight = Math.max(50, Math.min(200, height));\r\n        setInputHeight(updatedHeight); // Set to new calculated height\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        // Define a breakpoint for mobile resolution, e.g., 768 pixels\r\n        const mobileBreakpoint = 768;\r\n\r\n        // Check if the screen width is less than or equal to the mobile breakpoint\r\n        if (screenWidth >= mobileBreakpoint) {\r\n            // Check if 'Enter' key is pressed\r\n            if (e.nativeEvent.key === 'Enter' && !e.nativeEvent.shiftKey) {\r\n                e.preventDefault(); // Prevent the default behavior of adding a new line\r\n                handleSendMessage();\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (text) => {\r\n        dispatch(setMessageTextInputValue(text));\r\n        // You can also call handleContentSizeChange manually here if needed\r\n    };\r\n\r\n    return (\r\n        <TextInput\r\n            ref={textInputRef}\r\n            value={messageTextInputValue} // Controlled component\r\n            multiline\r\n            placeholder='Send a message...'\r\n            placeholderTextColor='#9B9E9F'\r\n            onChangeText={handleInputChange} // Use onChangeText for React Native\r\n            onChange={handleContentOnChange}\r\n            onContentSizeChange={handleContentSizeChange}\r\n            onKeyPress={handleKeyPress}\r\n            style={{\r\n                outlineStyle: 'none',\r\n                width: '100%',\r\n                minHeight: 50,\r\n                maxHeight: 200,\r\n                height: inputHeight,\r\n                alignSelf: 'center',\r\n                padding: 10,\r\n                overflow: 'auto',\r\n                marginBottom: 25,\r\n                marginRight: 50,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nconst ChatInputText = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n\r\n    const [isSendHovered, setIsSendHovered] = useState(false);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [selectedFilePreview, setSelectedFilePreview] = useState(null);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [imageUri, setImageUri] = useState(null);\r\n    const [fileUri, setFileUri] = useState(null);\r\n    const [fileName, setFileName] = useState('');\r\n    const [isSendImageHovered, setIsSendImageHovered] = useState(false);\r\n    const [isSendAttachmentHovered, setIsSendAttachmentHovered] = useState(false);\r\n    const [sendIsLoading, setSendIsLoading] = useState(false);\r\n    const textInputRef = useRef(null);\r\n    const [inputHeight, setInputHeight] = useState(50);\r\n\r\n    const [inputValue, setInputValue] = useState(''); // Add state for input value\r\n    const messageTextInputValue = useSelector((state) => state.messageTextInputValue)\r\n    const dispatch = useDispatch();\r\n    const handleContentSizeChange = (event) => {\r\n        const target = event.target;\r\n        // Temporarily reset height to ensure scrollHeight reflects current content\r\n        target.style.height = '0px'; // Reset height to recalculate\r\n        const updatedHeight = Math.max(50, Math.min(200, target.scrollHeight));\r\n        target.style.height = `${updatedHeight}px`; // Set to new calculated height\r\n        setInputHeight(updatedHeight);\r\n\r\n    };\r\n\r\n    const removeImage = () => {\r\n        setImageUri(null);\r\n        setSelectedImage(null);\r\n        setFileName(null);\r\n\r\n    };\r\n\r\n    const removeFile = () => {\r\n        setSelectedFile(null);\r\n        setSelectedFilePreview(null);\r\n        setFileUri(null);\r\n        setFileName(null);\r\n\r\n\r\n    };\r\n\r\n    const selectFile = async () => {\r\n        const maxFileSize = 10 * 1024 * 1024; // 5MB in bytes\r\n\r\n        if (Platform.OS === 'web') {\r\n            return new Promise((resolve, reject) => {\r\n                const input = document.createElement('input');\r\n                input.type = 'file';\r\n                input.accept = '.pdf, .doc, .docx, .xls, .xlsx, .rar'; // Acceptable file types\r\n                input.onchange = () => {\r\n                    const file = input.files[0];\r\n\r\n                    if (file) {\r\n                        if (![\r\n                            'application/pdf',\r\n                            'application/msword',\r\n                            'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n                            'application/vnd.ms-excel',\r\n                            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                            'application/x-rar-compressed',\r\n                            'application/x-compressed',\r\n                            'text/csv'\r\n                        ].includes(file.type)) {\r\n                            alert('File type not allowed');\r\n                            reject('File type not allowed');\r\n                            return;\r\n                        }\r\n\r\n                        if (file.size > maxFileSize) {\r\n                            alert('File size should be less than 10MB');\r\n                            reject('File size should be less than 10MB');\r\n                            return;\r\n                        }\r\n                        removeImage();\r\n                        // Read the file as a Data URL and set it in the state\r\n                        const reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            setFileUri(e.target.result);\r\n                            resolve(file);\r\n                            setSelectedFile(file);\r\n                            setSelectedFilePreview({ name: file.name, type: file.type });\r\n                            setFileName(file.name);\r\n                            textInputRef.current.focus();\r\n                        };\r\n                        reader.onerror = (e) => {\r\n                            reject(e);\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                };\r\n                input.click();\r\n            });\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                launchImageLibrary({ mediaType: 'photo' }, (response) => {\r\n                    if (response.didCancel) {\r\n                        reject('User cancelled image picker');\r\n                    } else if (response.errorCode) {\r\n                        reject(response.errorMessage);\r\n                    } else {\r\n                        const asset = response.assets[0];\r\n\r\n                        if (!asset.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if (asset.fileSize > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('File size should be less than 10MB');\r\n                            return;\r\n                        }\r\n\r\n                        const selectedImageUri = asset.uri;\r\n                        const fileName = asset.fileName || 'Unknown name';\r\n                        resolve({ uri: selectedImageUri, name: fileName });\r\n                        setImageUri(selectedImageUri); // Set imageUri here\r\n                        // console.log(`File name: ${fileName}`);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const selectImage = async () => {\r\n        const maxFileSize = 10 * 1024 * 1024; // 5MB in bytes\r\n\r\n        if (Platform.OS === 'web') {\r\n\r\n            return new Promise((resolve, reject) => {\r\n                const input = document.createElement('input');\r\n                input.type = 'file';\r\n                input.accept = 'image/*';\r\n                input.onchange = () => {\r\n                    const file = input.files[0];\r\n                    if (file) {\r\n\r\n                        if (!file.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if (file.size > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('File size should be less than 10MB');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        removeFile();\r\n                        const reader = new FileReader();\r\n                        reader.readAsDataURL(file);\r\n                        reader.onload = () => {\r\n                            resolve({ dataUrl: reader.result, name: file.name });\r\n                            setImageUri(reader.result); // Set imageUri here\r\n                            setFileName(file.name);\r\n                            // console.log(`File name: ${file.name}`);\r\n                        };\r\n                        setSelectedImage(file);\r\n                        reader.onerror = error => reject(error);\r\n                    }\r\n                };\r\n                input.click();\r\n            });\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                launchImageLibrary({ mediaType: 'photo' }, (response) => {\r\n                    if (response.didCancel) {\r\n                        reject('User cancelled image picker');\r\n                    } else if (response.errorCode) {\r\n                        reject(response.errorMessage);\r\n                    } else {\r\n                        const asset = response.assets[0];\r\n\r\n                        if (!asset.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n                            return;\r\n                        }\r\n\r\n                        if (asset.fileSize > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('Only image files are allowed');\r\n                            return;\r\n                        }\r\n\r\n                        const selectedImageUri = asset.uri;\r\n                        const fileName = asset.fileName || 'Unknown name';\r\n                        resolve({ uri: selectedImageUri, name: fileName });\r\n                        setImageUri(selectedImageUri); // Set imageUri here\r\n                        // console.log(`File name: ${fileName}`);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const resizeImage = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = (event) => {\r\n                const img = new Image();\r\n                img.src = event.target.result;\r\n                img.onload = () => {\r\n                    const canvas = document.createElement('canvas');\r\n                    const ctx = canvas.getContext('2d');\r\n\r\n                    // Set your desired image size here\r\n                    const maxWidth = 800; // Example value\r\n                    const maxHeight = 800; // Example value\r\n                    let width = img.width;\r\n                    let height = img.height;\r\n\r\n                    if (width > height) {\r\n                        if (width > maxWidth) {\r\n                            height *= maxWidth / width;\r\n                            width = maxWidth;\r\n                        }\r\n                    } else {\r\n                        if (height > maxHeight) {\r\n                            width *= maxHeight / height;\r\n                            height = maxHeight;\r\n                        }\r\n                    }\r\n\r\n                    canvas.width = width;\r\n                    canvas.height = height;\r\n                    ctx.drawImage(img, 0, 0, width, height);\r\n                    canvas.toBlob((blob) => {\r\n                        resolve(new File([blob], file.name, {\r\n                            type: 'image/jpeg',\r\n                            lastModified: Date.now()\r\n                        }));\r\n                    }, 'image/jpeg', 0.7); // Adjust the quality (0.7 is a good balance between quality and file size)\r\n                };\r\n                img.onerror = error => reject(error);\r\n            };\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    };\r\n\r\n    const addFileMessage = async () => {\r\n        setSendIsLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeForFile = moment(datetime).format('MMDDYYYYHHmmss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const inputValue = textInputRef.current?.value;\r\n\r\n        textInputRef.current.clear();\r\n        textInputRef.current.focus();\r\n        removeFile();\r\n\r\n        const storage = getStorage(projectExtensionFirebase);\r\n\r\n        if (fileUri) { // Assuming you have a fileUri state for the selected file\r\n\r\n            try {\r\n\r\n                let fileUrl = null;\r\n                if (fileUri) {\r\n                    // Upload file and get URL\r\n                    const fileRef = ref(storage, `ChatFiles/${selectedChatData.id}/C-HUB_${formattedTimeForFile}/${fileName}`);\r\n                    const uploadResult = await uploadBytes(fileRef, selectedFile);\r\n                    fileUrl = await getDownloadURL(uploadResult.ref);\r\n                }\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime,\r\n                    ip: ip,\r\n                    ipCountry: ipCountry,\r\n                    file: {\r\n                        name: fileName,\r\n                        type: 'attachment', // Set the file type\r\n                        url: fileUrl,\r\n                    } // Include file URL if available\r\n                });\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: `Sent an attachment`,\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const addImageMessage = async () => {\r\n        setSendIsLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeForFile = moment(datetime).format('MMDDYYYYHHmmss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const inputValue = textInputRef.current?.value;\r\n\r\n\r\n\r\n        const storage = getStorage(projectExtensionFirebase);\r\n\r\n        if (imageUri) { // Assuming imageFile holds the file to be uploaded\r\n\r\n            textInputRef.current.clear();\r\n            textInputRef.current.focus();\r\n            removeImage();\r\n\r\n            try {\r\n                let imageUrl = null;\r\n                if (imageUri) {\r\n                    // Upload image and get URL\r\n                    const resizedImage = await resizeImage(selectedImage);\r\n                    const imageRef = ref(storage, `ChatFiles/${selectedChatData.id}/C-HUB_${formattedTimeForFile}/${fileName}`);\r\n                    const uploadResult = await uploadBytes(imageRef, resizedImage);\r\n                    imageUrl = await getDownloadURL(uploadResult.ref);\r\n                }\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime,\r\n                    ip: ip,\r\n                    ipCountry: ipCountry,\r\n                    file: {\r\n                        name: fileName,\r\n                        type: 'image',\r\n                        url: imageUrl,\r\n                    } // Include image URL if available\r\n                });\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: 'Sent an image',\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const addMessage = async () => {\r\n        setSendIsLoading(true);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        // const inputValue = textInputRef.current?.value;\r\n        const inputValue = messageTextInputValue;\r\n        dispatch(setMessageTextInputValue(''));\r\n        textInputRef.current.clear();\r\n        textInputRef.current.focus();\r\n\r\n        if (inputValue !== '') {\r\n            const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n            try {\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime, // Using the fetched timestamp\r\n                    ip: ip, // IP Address\r\n                    ipCountry: ipCountry // Country of the IP Address\r\n                });\r\n\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: inputValue,\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n\r\n    };\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const handleKeyPress = (e) => {\r\n        // Define a breakpoint for mobile resolution, e.g., 768 pixels\r\n        const mobileBreakpoint = 768;\r\n\r\n        // Check if the screen width is less than or equal to the mobile breakpoint\r\n        if (screenWidth >= mobileBreakpoint) {\r\n            // Check if 'Enter' key is pressed\r\n            if (e.nativeEvent.key === 'Enter' && !e.nativeEvent.shiftKey) {\r\n                e.preventDefault(); // Prevent the default behavior of adding a new line\r\n                handleSendMessage();\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const handleSendMessage = () => {\r\n        textInputRef.current.focus();\r\n\r\n        if (imageUri !== null) {\r\n            addImageMessage();\r\n        }\r\n        if (fileUri !== null) {\r\n            addFileMessage();\r\n        }\r\n        else {\r\n            addMessage();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <View style={{ width: '98%', flexDirection: 'row', backgroundColor: 'white', }}>\r\n\r\n            <View style={{ flexDirection: 'column', flex: 1, }}>\r\n\r\n                {fileUri &&\r\n                    (\r\n                        <FileDisplay file={selectedFilePreview} onRemove={removeFile} />\r\n                    )}\r\n\r\n                {imageUri && (\r\n                    <View style={{\r\n                        position: 'relative', // Make sure the parent View is positioned relative\r\n                        width: 70,\r\n                        height: 70,\r\n                        borderRadius: 5,\r\n                        overflow: 'hidden', // This ensures that nothing spills out of the container\r\n                        borderWidth: 1,\r\n                        borderColor: '#DADDE1',\r\n                        margin: 2,\r\n                    }}>\r\n                        <FastImage\r\n                            source={{ uri: imageUri }}\r\n                            style={{ width: '100%', height: '100%', borderRadius: 10 }}\r\n                            resizeMode={FastImage.resizeMode.cover}\r\n                        />\r\n                        <Pressable\r\n                            onPress={removeImage}\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                right: 0,\r\n                                backgroundColor: 'rgba(255, 255, 255, 0.6)', // Semi-transparent background for better visibility\r\n                                borderRadius: 12 // Circular shape\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"close\" size={20} color=\"black\" />\r\n                        </Pressable>\r\n                    </View>\r\n\r\n                )}\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <View style={{ marginHorizontal: 5, marginTop: 5, }}>\r\n                        <FastImage\r\n                            source={{ uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FRMJ%20Round.jpg?alt=media&token=90d7f2fe-d9cd-4a6f-9a6b-bc39fe2b33b2', priority: FastImage.priority.high }}\r\n                            style={{\r\n                                width: 30,\r\n                                height: 30,\r\n                                borderRadius: 15,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.cover}\r\n                        />\r\n                    </View>\r\n                    {/* <TextInput\r\n                        ref={textInputRef}\r\n                        multiline\r\n                        placeholder='Send a message...'\r\n                        placeholderTextColor='#9B9E9F'\r\n                        onChange={handleContentSizeChange}\r\n                        onKeyPress={handleKeyPress}\r\n                        style={{\r\n                            outlineStyle: 'none',\r\n                            width: '100%',\r\n                            minHeight: 50, // Set your desired minHeight\r\n                            maxHeight: 200, // Set your desired maxHeight\r\n                            height: inputHeight, // Dynamic height\r\n                            alignSelf: 'center',\r\n                            padding: 10,\r\n                            overflow: 'auto',\r\n                            marginBottom: 25,\r\n                            marginRight: 50,\r\n                        }}\r\n                    /> */}\r\n\r\n                    <MessageTextInput handleSendMessage={handleSendMessage} textInputRef={textInputRef} />\r\n\r\n                    <Pressable\r\n                        focusable={false}\r\n                        onPress={() => sendIsLoading ? null : handleSendMessage()}\r\n                        onHoverIn={() => setIsSendHovered(true)}\r\n                        onHoverOut={() => setIsSendHovered(false)}\r\n                        style={({ pressed }) => [\r\n                            {\r\n                                padding: 10,\r\n                                top: 20,\r\n                                right: 10,\r\n                                position: 'absolute',\r\n                                borderRadius: 20,\r\n                                backgroundColor: isSendHovered ? '#e8f4ff' : 'transparent', // Change color on hover\r\n                                opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                            }\r\n                        ]}\r\n                    >\r\n                        {sendIsLoading ? <Spinner\r\n                            animating\r\n                            size=\"sm\"\r\n                            color={\"#95BCF9\"}\r\n                        /> :\r\n                            <MaterialIcons name=\"send\" size={24} color=\"#95BCF9\" />\r\n                        }\r\n                    </Pressable>\r\n                </View>\r\n            </View>\r\n\r\n            <Pressable\r\n                onHoverIn={() => setIsSendImageHovered(true)}\r\n                onHoverOut={() => setIsSendImageHovered(false)}\r\n                style={({ pressed }) => [\r\n                    {\r\n                        padding: 10,\r\n                        bottom: -10,\r\n                        right: 125,\r\n                        position: 'absolute',\r\n                        borderRadius: 20,\r\n                        opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                    }\r\n                ]}\r\n                onPress={selectImage}\r\n            >\r\n                <Ionicons name=\"image-outline\" size={24} color={isSendImageHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n            </Pressable>\r\n\r\n            <Pressable\r\n                onHoverIn={() => setIsSendAttachmentHovered(true)}\r\n                onHoverOut={() => setIsSendAttachmentHovered(false)}\r\n                style={({ pressed }) => [\r\n                    {\r\n                        padding: 10,\r\n                        bottom: -9,\r\n                        right: 155,\r\n                        position: 'absolute',\r\n                        borderRadius: 20,\r\n                        opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                    }\r\n                ]}\r\n                onPress={selectFile}\r\n            >\r\n                <MaterialIcons name=\"attach-file\" size={24} color={isSendAttachmentHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n            </Pressable>\r\n\r\n            <MessageTemplate textInputRef={textInputRef} />\r\n\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst CancelledView = () => {\r\n\r\n    return (\r\n        <View style={{\r\n            zIndex: 999,\r\n            position: 'absolute',\r\n            borderRadius: 40,\r\n            borderWidth: 0, // Border width\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            opacity: 0.5,\r\n            // Centering the view within its parent\r\n            top: 38,\r\n            left: 17,\r\n        }}>\r\n\r\n            <View style={{ backgroundColor: \"#FF0000\", width: 50, height: 6, borderRadius: 20, }} />\r\n        </View>\r\n    );\r\n\r\n};\r\n\r\nconst ChatListItem = ({ item, onPress, onPressNewTab, isActive, messageUnread, formattedDate, chatListData }) => {\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    const [chatListStepImageUrl, setChatListStepImageUrl] = useState(null);\r\n    const [textFirst, setTextFirst] = useState('');\r\n    const [textLast, setTextLast] = useState('');\r\n    const dispatch = useDispatch();\r\n    const [isUnreadHovered, setIsUnreadHovered] = useState(false);\r\n    const [isOpenNewTabHovered, setIsOpenNewTabHovered] = useState(false);\r\n    const [isUnreadVisible, setIsUnreadVisible] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [customerData, setCustomerData] = useState({});\r\n\r\n    const carName = item.carData && item.carData.carName ? item.carData.carName : (item.vehicle && item.vehicle.carName ? item.vehicle.carName : '');\r\n    const updateChatToUnread = async () => {\r\n        dispatch(setActiveChatId(''));\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setSelectedChatData([]));\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", item.id);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                read: false,\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n    };\r\n\r\n    const hoverIn = () => {\r\n        setIsHovered(true)\r\n    };\r\n\r\n    const hoverOut = () => {\r\n        setIsHovered(false);\r\n    };\r\n\r\n    const hoverOpenNewTabIn = () => {\r\n        setIsHovered(true)\r\n        setIsOpenNewTabHovered(true)\r\n    };\r\n\r\n    const hoverOpenNewTabOut = () => {\r\n        setIsOpenNewTabHovered(false)\r\n    };\r\n\r\n    const hoverUnreadIn = () => {\r\n        setIsHovered(true)\r\n        setIsUnreadHovered(true)\r\n    };\r\n\r\n    const hoverUnreadOut = () => {\r\n        setIsUnreadHovered(false)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // getChatListStepImageUrl();\r\n        const folderName = item.carData && item.carData.stockID ? item.carData.stockID : (item.vehicle && item.vehicle.carId ? item.vehicle.carId : '');\r\n        const storage = getStorage(projectExtensionFirebase);\r\n        const imageRef = ref(storage, `${folderName}/0`); // Ensure this path is correct\r\n\r\n        getDownloadURL(imageRef)\r\n            .then((url) => {\r\n                setImageUrl(url);\r\n            })\r\n            .catch((error) => {\r\n                if (error.code === 'storage/object-not-found') {\r\n                    // Handle the 'object not found' error.\r\n                    setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n                } else {\r\n                    // Handle other errors differently\r\n\r\n                    setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n\r\n                }\r\n            });\r\n\r\n        const collectionPath = 'accounts';\r\n        const docId = item.participants.customer; // Ensure this is a valid document ID\r\n\r\n        const docRef = doc(projectExtensionFirestore, collectionPath, docId);\r\n\r\n        const unsubscribe = onSnapshot(docRef, (doc) => {\r\n            if (doc.exists()) {\r\n                const data = doc.data();\r\n                setCustomerData(data ? data : {});\r\n                setTextFirst(data.textFirst ? data.textFirst : '');\r\n                setTextLast(data.textLast ? data.textLast : '');\r\n\r\n            } else {\r\n                console.log(\"Document not found\");\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching document: \", error);\r\n        });\r\n\r\n        // Clean up function to unsubscribe from the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const loadingCondition = !imageUrl || imageUrl == null || imageUrl == '' || imageUrl == undefined || !item;\r\n\r\n    const chatStepIconOn = require(`../../assets/chat_step/chat_step_${item.stepIndicator.value}_on.png`);\r\n    const chatStepIconOff = require(`../../assets/chat_step/chat_step_${item.stepIndicator.value}_off.png`);\r\n\r\n\r\n    const handlePress = () => {\r\n        onPress()\r\n\r\n        // dispatch(setSelectedCustomerData(customerData));\r\n        globalCustomerFirstName = textFirst ? textFirst : '';\r\n        globalCustomerLastName = textLast ? textLast : '';\r\n        globalImageUrl = imageUrl ? imageUrl : '';\r\n        dispatch(setCarImageUrl(imageUrl ? imageUrl : ''));\r\n\r\n        globalCustomerCarName = carName;\r\n        setIsHovered(false);\r\n        setIsUnreadHovered(false)\r\n\r\n\r\n    }\r\n\r\n    const handlePressNewTab = () => {\r\n        onPressNewTab()\r\n\r\n        // dispatch(setSelectedCustomerData(customerData));\r\n        globalCustomerFirstName = textFirst ? textFirst : '';\r\n        globalCustomerLastName = textLast ? textLast : '';\r\n        globalImageUrl = imageUrl ? imageUrl : '';\r\n        dispatch(setCarImageUrl(imageUrl ? imageUrl : ''));\r\n\r\n        globalCustomerCarName = carName;\r\n        setIsHovered(false);\r\n        setIsUnreadHovered(false)\r\n\r\n\r\n    }\r\n\r\n    if (loadingCondition) {\r\n        return <SkeletonChatListLayout />\r\n    }\r\n    else {\r\n        return (\r\n            <Pressable\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                focusable={false}\r\n                style={{\r\n                    padding: 12,\r\n                    alignItems: 'flex-start', // Align items to the start of the button\r\n                    flexDirection: 'row',\r\n                    backgroundColor: isActive ? '#f2f2f2' : (isHovered ? '#f2f2f2' : 'white'),\r\n                    borderLeftColor: isActive ? '#0A9FDC' : 'transparent',\r\n                    borderRightColor: isActive ? '#0A9FDC' : 'transparent',\r\n                    borderLeftWidth: 2,\r\n                    borderRightWidth: 2,\r\n\r\n                }}\r\n                onPress={handlePress}\r\n            >\r\n                {item.isCancelled && <CancelledView />}\r\n\r\n                <View style={{ paddingRight: 10, justifyContent: 'center', }}>\r\n                    {imageUrl ? (\r\n                        <FastImage\r\n                            source={{ uri: imageUrl, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                width: 60,\r\n                                height: 60,\r\n                                borderRadius: 30,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    ) : (\r\n                        <View\r\n                            style={{\r\n                                width: 60,\r\n                                height: 60,\r\n                                borderRadius: 30,\r\n                                backgroundColor: '#e0e0e0',\r\n                                marginRight: 12,\r\n                            }}\r\n                        />\r\n                    )}\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                    {!isHovered ? (<Text style={{ fontSize: 12, position: 'absolute', right: 10, color: messageUnread ? '#0A78BE' : '#90949C', fontWeight: messageUnread ? 700 : 400, }}>{formattedDate}</Text>) : (!item.read ? (<Text style={{ fontSize: 12, position: 'absolute', right: 10, color: messageUnread ? '#0A78BE' : '#90949C', fontWeight: messageUnread ? 700 : 400, }}>{formattedDate}</Text>) : null)}\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 14, width: '70%', overflow: 'hidden', fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#1C2B33' : '#586369', }}>{carName}</Text>\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 14, width: '80%', overflow: 'hidden', flex: 1, fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#1C2B33' : '#586369', }}>{`${textFirst} ${textLast}`}</Text>\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 12, width: '80%', overflow: 'hidden', flex: 1, fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#0A78BE' : '#90949c', }}>{item.lastMessageSender == item.participants.customer ? (item.lastMessage ? item.lastMessage : 'No message found') : (item.lastMessage ? `Sales: ${item.lastMessage}` : `Sales: No message found`)}</Text>\r\n                    {!item.read ? (\r\n                        <FastImage\r\n                            source={{ uri: chatStepIconOn, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                tintColor: 'rgba(128, 128, 128, 1)',\r\n                                width: 22,\r\n                                height: 20,\r\n                                position: 'absolute',\r\n                                right: 10,\r\n                                bottom: 0,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    ) : (\r\n                        <FastImage\r\n                            source={{ uri: chatStepIconOff, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                tintColor: 'rgba(128, 128, 128, 1)',\r\n                                width: 22,\r\n                                height: 20,\r\n                                position: 'absolute',\r\n                                right: 10,\r\n                                bottom: 0,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    )}\r\n\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        top: 10,\r\n                        padding: 10,\r\n                        alignSelf: 'center',\r\n                        fontSize: 12,\r\n                        overflow: 'hidden',\r\n                        flex: 1,\r\n                        fontWeight: messageUnread ? 700 : 400,\r\n                        color: messageUnread ? '#FF0000' : '#90949c',\r\n                    }}>\r\n                        {item.invoiceNumber && item.stepIndicator.value > 2 ? item.invoiceNumber : ''}\r\n                    </Text>\r\n\r\n                    {isHovered && item.read && (\r\n                        <Tooltip label=\"Mark as unread\" placement='right' openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                onHoverIn={hoverUnreadIn}\r\n                                onHoverOut={hoverUnreadOut}\r\n                                onPress={updateChatToUnread}\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    right: 0,\r\n                                    top: -10,\r\n                                    padding: 10,\r\n                                    alignSelf: 'center',\r\n                                }}\r\n\r\n                            >\r\n                                <MaterialIcons name=\"mark-as-unread\" size={22} color={isUnreadHovered ? \"#1B81C2\" : \"#BABABA\"} />\r\n                            </Pressable>\r\n                        </Tooltip>\r\n                    )}\r\n\r\n                    {isHovered && (\r\n                        <Tooltip label=\"Open in new tab\" placement='right' openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                onHoverIn={hoverOpenNewTabIn}\r\n                                onHoverOut={hoverOpenNewTabOut}\r\n                                onPress={handlePressNewTab}\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    right: -22,\r\n                                    top: -22,\r\n                                    padding: 10,\r\n                                    alignSelf: 'center',\r\n                                }}\r\n\r\n                            >\r\n                                <MaterialIcons name=\"open-in-new\" size={16} color={isOpenNewTabHovered ? \"#1B81C2\" : \"#BABABA\"} />\r\n                            </Pressable>\r\n                        </Tooltip>\r\n                    )}\r\n                </View>\r\n\r\n\r\n\r\n            </Pressable>\r\n        );\r\n    }\r\n\r\n\r\n};\r\n\r\nconst ChatList = ({ unreadButtonValue, activeButtonValue, }) => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const chatListLastVisible = useSelector((state) => state.chatListLastVisible);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const loadMoreLoading = useSelector((state) => state.loadMoreLoading);\r\n    const noMoreData = useSelector((state) => state.noMoreData);\r\n    const renderFooterRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    const { chatId } = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const updateChatToRead = async () => {\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", activeChatId);\r\n        const user = projectControlAuth.currentUser\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        if (email !== '') {\r\n\r\n            try {\r\n                await updateDoc(docRef, {\r\n                    read: true,\r\n                    readBy: arrayUnion(email),\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n                navigate(`/top/chat-messages`);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const fetchChatMessages = () => {\r\n        if (!activeChatId) {\r\n            // Handle the case where there's no active chat ID\r\n        }\r\n        else {\r\n            dispatch(setChatMessagesData([]));\r\n            dispatch(setChatMessageBoxLoading(true));\r\n            updateChatToRead();\r\n\r\n            try {\r\n                // References to the document and its 'messages' subcollection\r\n                let activeInvoiceNumer;\r\n                const docRef = doc(projectExtensionFirestore, 'chats', activeChatId);\r\n\r\n                const messagesRef = collection(docRef, 'messages');\r\n\r\n                // Query for the 'messages' subcollection\r\n                const messagesQuery = query(messagesRef, orderBy('timestamp', 'desc'), limit(10));\r\n\r\n                // Listen to the document\r\n                const unsubscribeDoc = onSnapshot(docRef, (docSnapshot) => {\r\n                    if (docSnapshot.exists()) {\r\n                        const data = docSnapshot.data();\r\n                        // Add the document ID to the data\r\n                        const dataWithId = {\r\n                            ...data,\r\n                            id: docSnapshot.id\r\n                        };\r\n                        // Dispatch any action you need with the document data\r\n                        dispatch(setSelectedChatData(dataWithId));\r\n\r\n                        // Define and listen to the invoice document only after the chat document is confirmed to exist\r\n                        if (dataWithId.invoiceNumber || dataWithId.invoiceNumber == '') {\r\n                            const invoiceDocRef = doc(projectExtensionFirestore, 'IssuedInvoice', dataWithId.invoiceNumber);\r\n                            const unsubscribeInvoice = onSnapshot(invoiceDocRef, (invoiceDocSnapshot) => {\r\n                                if (invoiceDocSnapshot.exists()) {\r\n                                    const invoiceData = invoiceDocSnapshot.data();\r\n                                    // Add the document ID to the data\r\n                                    const invoiceDataWithId = {\r\n                                        ...invoiceData,\r\n                                        id: invoiceDocSnapshot.id\r\n                                    };\r\n                                    // Dispatch any action you need with the invoice document data\r\n                                    dispatch(setInvoiceData(invoiceDataWithId ? invoiceDataWithId : {}));\r\n\r\n                                } else {\r\n                                    // Handle the case where the invoice document does not exist\r\n                                    console.log('No Invoice Yet');\r\n                                    dispatch(setInvoiceData({}));\r\n                                }\r\n                            });\r\n\r\n                            // Cleanup function for the invoice listener\r\n                            return () => {\r\n                                unsubscribeInvoice();\r\n\r\n                            };\r\n                        } else {\r\n                            dispatch(setInvoiceData({}));\r\n                            console.log('No Invoice Yet');\r\n                        }\r\n\r\n                    }\r\n\r\n                });\r\n                const unsubscribeMessages = onSnapshot(messagesQuery, (querySnapshot) => {\r\n                    let messages = [];\r\n                    querySnapshot.forEach((doc) => {\r\n                        const data = doc.data();\r\n                        const timestamp = data.timestamp ? data.timestamp.toString() : null;\r\n                        messages.push({ id: doc.id, ...data, timestamp });\r\n                    });\r\n\r\n                    dispatch(setChatMessagesData(messages));\r\n                    dispatch(setChatMessageBoxLoading(false));\r\n                    globalMessagesLastVisible = querySnapshot.docs[querySnapshot.docs.length - 1];\r\n                });\r\n\r\n                // Return a cleanup function\r\n                return () => {\r\n                    unsubscribeDoc();\r\n                    unsubscribeMessages();\r\n                    // if (activeInvoiceNumer && activeInvoiceNumer !== '') {\r\n                    //     unsubscribeInvoice();\r\n                    // }\r\n                };\r\n            } catch (error) {\r\n                console.error(\"Error setting up real-time messages: \", error);\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleLoadMore = () => {\r\n        dispatch(setLoadMoreLoading(true));\r\n\r\n        let nextQuery;\r\n        if (!globalLastVisible) {\r\n            // No more data to load or globalLastVisible is undefined\r\n            console.log(\"No more data to load or globalLastVisible is undefined\");\r\n            setTimeout(() => {\r\n                dispatch(setLoadMoreLoading(false));\r\n                dispatch(setNoMoreData(true));\r\n            }, 0);\r\n            return;\r\n        }\r\n        else {\r\n\r\n            if (chatListData.length >= 10) {\r\n                if (unreadButtonValue == true) {\r\n\r\n                    if (activeButtonValue == 0) {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    else {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                where('read', '==', false),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    if (activeButtonValue == 0) {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    else {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            else {\r\n                dispatch(setNoMoreData(true));\r\n                dispatch(setLoadMoreLoading(false));\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        if (chatListData.length < 10) {\r\n            setTimeout(() => {\r\n                dispatch(setLoadMoreLoading(false));\r\n                dispatch(setNoMoreData(true));\r\n            }, 0);\r\n        }\r\n\r\n        else {\r\n            try {\r\n                const unsubscribe = onSnapshot(nextQuery, (snapshot) => {\r\n                    if (snapshot.empty) {\r\n                        // Handle the case when there's no more data\r\n                        console.log(\"No more data to load\");\r\n                        setTimeout(() => {\r\n                            dispatch(setLoadMoreLoading(false));\r\n                            dispatch(setNoMoreData(true));\r\n                            globalLastVisible = null;\r\n                        }, 0);  // Delay setting loading and no more data flags\r\n                        return;\r\n                    }\r\n\r\n                    const chatsData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        chatsData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n\r\n                    // Append new data to the existing list\r\n\r\n                    setTimeout(() => {\r\n                        dispatch(setChatListData([...chatListData, ...chatsData]));\r\n                        dispatch(setLoadMoreLoading(false));\r\n                        globalLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n                    }, 0);\r\n\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data from Firebase:', error);\r\n                setTimeout(() => dispatch(setLoadMoreLoading(false)), 0);  // Ensure loading is set to false even if there's an error\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        // dispatch(setCarImageUrl(''));\r\n        dispatch(setMessageTextInputValue(''));\r\n\r\n        if (chatId) {\r\n\r\n            setTimeout(() => {\r\n                const decodedChatId = decodeURIComponent(chatId);\r\n                const decryptedChatId = decryptData(decodedChatId).toString();\r\n                let parts = decryptedChatId.split('_');\r\n                let stockIdPart = parts[1];\r\n                let emailPart = parts[parts.length - 1];\r\n\r\n\r\n                // console.log(decryptedChatId);\r\n\r\n                if (!emailPart) {\r\n                    console.error(\"Invalid email part:\", emailPart);\r\n                    return;\r\n                }\r\n                const folderName = selectedChatData.carData && selectedChatData.carData.stockID ? selectedChatData.carData.stockID : (selectedChatData.vehicle && selectedChatData.vehicle.carId ? selectedChatData.vehicle.carId : '');\r\n                const storage = getStorage(projectExtensionFirebase);\r\n                const imageRef = ref(storage, `${stockIdPart}/0`); // Ensure this path is correct\r\n\r\n                // console.log('Folder Name: ', folderName)\r\n                getDownloadURL(imageRef)\r\n                    .then((url) => {\r\n                        setImageUrl(url);\r\n                        globalImageUrl = url;\r\n                        dispatch(setCarImageUrl(url));\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        if (error.code === 'storage/object-not-found') {\r\n                            // Handle the 'object not found' error.\r\n                            setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n                        } else {\r\n                            // Handle other errors differently\r\n\r\n                            setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n\r\n                        }\r\n                    });\r\n\r\n\r\n                if (selectedChatData) {\r\n                    const collectionPath = 'accounts';\r\n                    const docId = selectedChatData.participants?.customer; // Ensure this is a valid document ID\r\n\r\n                    const docRef = doc(projectExtensionFirestore, collectionPath, emailPart);\r\n\r\n                    const docRefVehicle = doc(projectExtensionFirestore, 'VehicleProducts', stockIdPart);\r\n\r\n                    const unsubscribeVehicle = onSnapshot(docRefVehicle, (doc) => {\r\n                        if (doc.exists()) {\r\n                            const data = doc.data();\r\n                            dispatch(setSelectedVehicleData(data ? data : {}));\r\n                            // console.log(`Name: ${data.textFirst} ${data.textLast}`)\r\n\r\n                            // globalCustomerCarName = carName;\r\n                            // setTextFirst(data.textFirst ? data.textFirst : '');\r\n                            // setTextLast(data.textLast ? data.textLast : '');\r\n\r\n\r\n                        } else {\r\n                            console.log(\"Document not found\");\r\n                        }\r\n                    }, (error) => {\r\n                        console.error(\"Error fetching document: \", error);\r\n                    });\r\n\r\n                    const unsubscribe = onSnapshot(docRef, (doc) => {\r\n                        if (doc.exists()) {\r\n                            const data = doc.data();\r\n                            dispatch(setSelectedCustomerData(data ? data : {}));\r\n                            globalCustomerFirstName = data.textFirst ? data.textFirst : '';\r\n                            globalCustomerLastName = data.textLast ? data.textLast : '';\r\n                            // console.log(`Name: ${data.textFirst} ${data.textLast}`)\r\n\r\n\r\n                            // globalCustomerCarName = carName;\r\n                            // setTextFirst(data.textFirst ? data.textFirst : '');\r\n                            // setTextLast(data.textLast ? data.textLast : '');\r\n\r\n\r\n                        } else {\r\n                            console.log(\"Document not found\");\r\n                        }\r\n                    }, (error) => {\r\n                        console.error(\"Error fetching document: \", error);\r\n                    });\r\n\r\n                    // Clean up function to unsubscribe from the listener when the component unmounts\r\n                    return () => {\r\n\r\n                        unsubscribe()\r\n                        unsubscribeVehicle()\r\n                    };\r\n                }\r\n\r\n\r\n\r\n\r\n            }, 1);\r\n        }\r\n\r\n        const unsubscribe = fetchChatMessages();\r\n\r\n\r\n        return () => {\r\n            if (unsubscribe) {\r\n\r\n                unsubscribe(); // Unsubscribe when the component unmounts\r\n            }\r\n        };\r\n\r\n    }, [activeChatId]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (chatId) {\r\n            const decryptedChatId = decryptData(chatId).toString();\r\n\r\n            setTimeout(() => {\r\n                // console.log(decryptedChatId)\r\n                dispatch(setActiveChatId(decryptedChatId));\r\n\r\n            }, 1);\r\n\r\n\r\n        }\r\n    }, [chatId]);\r\n\r\n    const handleChatPress = async (customerId, chatId) => {\r\n        if (chatId !== activeChatId) {\r\n            const encryptedChatId = encryptData(chatId);\r\n            const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\r\n            navigate(`/top/chat-messages/${encodedChatId}`);\r\n            // console.log(encodedChatId)\r\n            // console.log(decodeURIComponent(encodedChatId))\r\n            // console.log(decryptData(decodeURIComponent(encodedChatId)))\r\n\r\n            // // Assuming chatId is already properly encoded and needs no further encoding\r\n            // const path = `/devadmin/chat-messages/${encodedChatId}`;\r\n            // // Construct the URL for hash-based routing\r\n            // const baseUrl = window.location.origin + window.location.pathname;\r\n            // const fullPath = `${baseUrl}#${path}`;\r\n            // window.open(fullPath, '_blank');\r\n\r\n            dispatch(setActiveChatId(chatId));\r\n\r\n            globalCustomerId = customerId;\r\n            globalChatId = chatId;\r\n\r\n        }\r\n    };\r\n\r\n    const handleChatPressNewTab = async (customerId, chatId) => {\r\n        const encryptedChatId = encryptData(chatId);\r\n        const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\r\n        // navigate(`/devadmin/chat-messages/${encodedChatId}`);\r\n        // console.log(encodedChatId)\r\n        // console.log(decodeURIComponent(encodedChatId))\r\n        // console.log(decryptData(decodeURIComponent(encodedChatId)))\r\n\r\n        // Assuming chatId is already properly encoded and needs no further encoding\r\n        const path = `/top/chat-messages/${encodedChatId}`;\r\n        // Construct the URL for hash-based routing\r\n        const baseUrl = window.location.origin + window.location.pathname;\r\n        const fullPath = `${baseUrl}#${path}`;\r\n        window.open(fullPath, '_blank');\r\n\r\n        // dispatch(setActiveChatId(chatId));\r\n\r\n        globalCustomerId = customerId;\r\n        globalChatId = chatId;\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setActiveChatId(''));\r\n    }, [unreadButtonValue])\r\n\r\n    const renderFooter = () => {\r\n        return (\r\n            <>\r\n                {!noMoreData && (\r\n                    <View style={{ paddingVertical: 20, borderTopWidth: 1, borderColor: \"#DADDE1\", height: 60, }}>\r\n                        {loadMoreLoading && (\r\n                            <Spinner\r\n                                animating\r\n                                size=\"sm\"\r\n                                color={'#7B9CFF'}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </>\r\n\r\n\r\n        );\r\n    };\r\n\r\n    const renderItem = ({ item }) => {\r\n\r\n        const isActive = item.id === activeChatId;\r\n        const messageUnread = !item.read;\r\n        const formattedDate = formatDate(item.lastMessageDate);\r\n\r\n        return (\r\n            <ChatListItem\r\n                onPressNewTab={() => handleChatPressNewTab(item.participants.customer, item.id)}\r\n                chatListData={chatListData}\r\n                item={item}\r\n                onPress={() => handleChatPress(item.participants.customer, item.id)}\r\n                isActive={isActive}\r\n                messageUnread={messageUnread}\r\n                formattedDate={formattedDate}\r\n            />\r\n        );\r\n\r\n    };\r\n\r\n    if (chatListData.length < 1) {\r\n        return (\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }}>\r\n                <Text style={{ fontWeight: 700, alignSelf: 'center', }}>{unreadButtonValue ? 'No unread messages to show' : 'No messages to show'}</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <>\r\n                <FlatList\r\n                    style={{ height: 100, borderBottomLeftRadius: 5, }}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id.toString()}\r\n                    data={chatListData}\r\n                    initialNumToRender={1}\r\n                    maxToRenderPerBatch={10}\r\n                    windowSize={21}\r\n                    onEndReachedThreshold={0.05}\r\n                    removeClippedSubviews={true}\r\n                    ListFooterComponent={renderFooter}\r\n                    onEndReached={handleLoadMore}  // Implement this function\r\n                />\r\n\r\n            </>\r\n\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\nconst SearchChat = ({ lastVisible, setLastVisible, unreadButtonValue, activeButtonValue }) => {\r\n\r\n    const searchInputRef = useRef(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [clearVisible, setClearVisible] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const searchData = async ({ }) => {\r\n        let q;\r\n\r\n        const searchValue = searchInputRef.current?.value;\r\n        if (unreadButtonValue == true) {\r\n\r\n            if (activeButtonValue == 0) {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n            else {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        where('read', '==', false),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            if (activeButtonValue == 0) {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n            else {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        try {\r\n            const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                const chatsData = [];\r\n                snapshot.forEach((doc) => {\r\n                    chatsData.push({\r\n                        id: doc.id,\r\n                        ...doc.data(),\r\n                    });\r\n                });\r\n                dispatch(setChatListData(chatsData));\r\n                globalLastVisible = snapshot.docs[snapshot.docs.length - 1]\r\n\r\n\r\n            });\r\n\r\n            // Return the unsubscribe function to stop listening when necessary\r\n            return () => {\r\n                if (unsubscribe) {\r\n                    unsubscribe();\r\n                }\r\n            };\r\n        } catch (error) {\r\n            // Handle errors here\r\n            console.error('Error fetching data from Firebase:', error);\r\n        }\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n\r\n    //     searchData();\r\n\r\n    // }, [searchText])\r\n\r\n    useEffect(() => {\r\n        setSearchText('');\r\n        dispatch(setChatListSearchText(''));\r\n        globalSearchText = '';\r\n        searchInputRef.current.value = '';\r\n        setClearVisible(false);\r\n\r\n    }, [activeButtonValue, unreadButtonValue])\r\n\r\n    const handleSearchEnter = () => {\r\n        // setSortField('dateAdded');\r\n        // setIsSortActive(false)\r\n        if (searchInputRef.current?.value !== '') {\r\n            dispatch(setChatListSearchText(searchInputRef.current.value.trim()));\r\n            setSearchText(searchInputRef.current.value.trim());\r\n            globalSearchText = searchInputRef.current.value.trim();\r\n        }\r\n        else {\r\n            setSearchText('');\r\n            globalSearchText = '';\r\n            if (searchText == '') {\r\n                dispatch(setChatListSearchText(''));\r\n                searchData();\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleClearText = () => {\r\n        searchInputRef.current.clear();\r\n        setClearVisible(false);\r\n        if (searchText !== '') {\r\n            setSearchText(''); // Clear the text\r\n            dispatch(setChatListSearchText(''));\r\n            dispatch(setActiveChatId(''));\r\n            globalSearchText = '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', width: '100%', alignSelf: 'center', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5, margin: 10 }}>\r\n            <TextInput\r\n                ref={searchInputRef}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                placeholderTextColor='#9B9E9F'\r\n                underlineColorAndroid=\"transparent\"\r\n                style={{ flex: 1, height: 40, padding: 10, outlineStyle: 'none' }}\r\n                onChangeText={() => setClearVisible(true)}\r\n                keyboardType='search'\r\n            />\r\n            {clearVisible ? (\r\n                <Pressable\r\n                    focusable={false}\r\n                    onPress={handleClearText}\r\n                    style={({ pressed, hovered }) => [\r\n                        {\r\n                            borderRadius: 10,\r\n                            marginRight: 10,\r\n                            opacity: pressed ? 0.5 : 1, // Change opacity when pressed\r\n                            // Add hover effect\r\n                            backgroundColor: hovered ? '#ddd' : 'transparent',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <MaterialIcons name=\"close\" size={20} color=\"#000\" />\r\n                </Pressable>\r\n            ) : null}\r\n        </View>);\r\n}\r\n\r\nconst timelineData = [\r\n    { key: '1', title: 'Event 1', description: 'Description 1' },\r\n    { key: '2', title: 'Event 2', description: 'Description 2' },\r\n    // ... more events\r\n];\r\n\r\n// const TimelineItem = ({ title, description }) => (\r\n//     <View style={{ alignItems: 'center', marginRight: 20 }}>\r\n//         <View style={{ width: 10, height: 10, borderRadius: 5, backgroundColor: 'blue', marginBottom: 5 }} />\r\n//         <Text style={{ fontWeight: 'bold' }}>{title}</Text>\r\n//         <Text style={{ textAlign: 'center' }}>{description}</Text>\r\n//     </View>\r\n// );\r\n\r\n// const HorizontalTimeline = () => (\r\n//     <FlatList\r\n//         data={timelineData}\r\n//         renderItem={({ item }) => <TimelineItem title={item.title} description={item.description} />}\r\n//         horizontal\r\n//         showsHorizontalScrollIndicator={false}\r\n//         style={{ flexDirection: 'row', padding: 10 }}\r\n//     />\r\n// );\r\n\r\nconst ModalAddBank = () => {\r\n    const [modalAddBankVisible, setModalAddBankVisible] = useState(false);\r\n    const [isCancelHovered, setCancelHovered] = useState(false);\r\n    const [isAddHovered, setAddHovered] = useState(false);\r\n\r\n\r\n\r\n\r\n    const handleModalAddBankOpen = () => {\r\n        setModalAddBankVisible(true);\r\n    };\r\n\r\n    const handleModalAddBankClose = () => {\r\n        setModalAddBankVisible(false);\r\n    };\r\n\r\n    const bankNameRef = useRef(null);\r\n    const branchNameRef = useRef(null);\r\n    const swiftcodeRef = useRef(null);\r\n    const addressRef = useRef(null);\r\n    const accountHolderRef = useRef(null);\r\n    const accountNumberRef = useRef(null);\r\n\r\n\r\n\r\n    const addBankAccount = async () => {\r\n        const docRef = doc(projectExtensionFirestore, 'DataForInvoice', 'BankAccounts');\r\n\r\n        const bankNameValue = bankNameRef.current?.value;\r\n        const branchNameValue = branchNameRef.current?.value;\r\n        const swiftcodeValue = swiftcodeRef.current?.value;\r\n        const addressValue = addressRef.current?.value;\r\n        const accountHolderValue = accountHolderRef.current?.value;\r\n        const accountNumberValue = accountNumberRef.current?.value;\r\n\r\n        const elementToAdd = {\r\n            bankName: bankNameValue,\r\n            branchName: branchNameValue,\r\n            swiftCode: swiftcodeValue,\r\n            address: addressValue,\r\n            accountHolder: accountHolderValue,\r\n            accountNumberValue: accountNumberValue,\r\n        }\r\n\r\n        try {\r\n            await updateDoc(docRef, {\r\n                [bankNameValue]: elementToAdd,\r\n            });\r\n            console.log(\"Element added to the array field\");\r\n            handleModalAddBankClose();\r\n        } catch (error) {\r\n            console.error(\"Error adding element to the array\", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Pressable onPress={handleModalAddBankOpen} style={{ alignSelf: 'center', marginHorizontal: 5, marginTop: 3, }}>\r\n                <FontAwesome name={'plus-circle'} size={25} color='#16A34A' />\r\n            </Pressable>\r\n\r\n            <Modal isOpen={modalAddBankVisible} onClose={handleModalAddBankClose} useRNModal>\r\n                <Modal.Content>\r\n                    <Modal.Header>Add Bank Account</Modal.Header>\r\n                    <Modal.Body>\r\n                        <View style={{ height: '100%', flex: 1, }}>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Bank Name:</Text>\r\n                                <TextInput\r\n                                    ref={bankNameRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Bank Name'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Branch Name:</Text>\r\n                                <TextInput\r\n                                    ref={branchNameRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Branch Name'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>SWIFTCODE:</Text>\r\n                                <TextInput\r\n                                    ref={swiftcodeRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='SWIFTCODE'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Address:</Text>\r\n                                <TextInput\r\n                                    ref={addressRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Address'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Account Holder:</Text>\r\n                                <TextInput\r\n                                    ref={accountHolderRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Account Holder'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Account Number:</Text>\r\n                                <TextInput\r\n                                    ref={accountNumberRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Account Number'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', }}>\r\n                            <Pressable\r\n                                style={{ width: 100, padding: 5, borderRadius: 3, backgroundColor: isCancelHovered ? '#686868' : '#525252' }}\r\n                                onHoverIn={() => setCancelHovered(true)}\r\n                                onHoverOut={() => setCancelHovered(false)}\r\n                                onPress={handleModalAddBankClose}\r\n                            >\r\n                                <Text style={{ fontWeight: 500, textAlign: 'center', color: 'white', }}>Cancel</Text>\r\n                            </Pressable>\r\n\r\n                            <Pressable\r\n                                onPress={addBankAccount}\r\n                                style={{ width: 100, padding: 5, borderRadius: 3, backgroundColor: isAddHovered ? '#1B8B5A' : '#16A34A' }}\r\n                                onHoverIn={() => setAddHovered(true)}\r\n                                onHoverOut={() => setAddHovered(false)}\r\n                            >\r\n                                <Text style={{ fontWeight: 500, textAlign: 'center', color: 'white', }}>Add</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst BankInformation = () => {\r\n\r\n    let invoiceSelectedDueDate = '';\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [selectedDueDate, setSelectedDueDate] = useState('');\r\n    const [bankAccountsData, setBankAccountsData] = useState({});\r\n    const [selectedBank, setSelectedBank] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.bankAccount.bankName ? invoiceData.bankInformations.bankAccount.bankName : \"SUMITOMO MITSUI BANKING CORPORATION\");\r\n    let selectedBankData = {};\r\n\r\n    const paymentTermsRef = useRef(null);\r\n    const salesAgreementRef = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const subscribeToBankAccounts = () => {\r\n            const docRef = doc(projectExtensionFirestore, 'DataForInvoice', 'BankAccounts');\r\n\r\n            const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    const bankAccounts = {};\r\n\r\n                    // Assuming each entry in your document is a bank account\r\n                    Object.entries(data).forEach(([key, value]) => {\r\n                        if (value.bankName) {\r\n                            bankAccounts[value.bankName] = value;\r\n                        }\r\n                    });\r\n\r\n                    // console.log(bankAccounts);\r\n                    setBankAccountsData(bankAccounts);\r\n                    globalInvoiceVariable.bankInformations.bankAccount = bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"];\r\n                    // Use state or context to store selected bank data if needed\r\n                    // setSelectedBank(bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"]);\r\n                    // console.log(bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"]);\r\n                } else {\r\n                    console.log(\"No such document!\");\r\n                }\r\n            }, (error) => {\r\n                console.error(\"Error fetching document\", error);\r\n            });\r\n\r\n            return unsubscribe; // Return the unsubscribe function to call it later to stop listening\r\n        };\r\n\r\n\r\n        if (currentDate) {\r\n            const date = new Date(currentDate);\r\n\r\n            // Check the day of the week\r\n            const dayOfWeek = date.getDay();\r\n\r\n            if (dayOfWeek === 5) { // Friday\r\n                date.setDate(date.getDate() + 3); // Add 3 days to reach Monday\r\n            } else if (dayOfWeek === 6) { // Saturday\r\n                date.setDate(date.getDate() + 2); // Add 2 days to reach Monday\r\n            } else {\r\n                date.setDate(date.getDate() + 1); // Sunday to Thursday, add 1 day\r\n            }\r\n\r\n            // Format the date back to string\r\n            const adjustedDate = date.toISOString().split('T')[0];\r\n            setSelectedDueDate(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.dueDate ? invoiceData.bankInformations.dueDate : adjustedDate);\r\n            globalInvoiceVariable.bankInformations.dueDate = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.dueDate ? invoiceData.bankInformations.dueDate : adjustedDate;\r\n            globalInvoiceVariable.bankInformations.paymentTerms = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.paymentTerms ? invoiceData.bankInformations.paymentTerms : paymentTermsRef.current?.value;\r\n            // globalInvoiceVariable.bankInformations.salesAgreement = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.salesAgreement ? invoiceData.bankInformations.salesAgreement : salesAgreementRef.current?.value;\r\n            globalInvoiceVariable.bankInformations.issuingDate = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.issuingDate ? invoiceData.bankInformations.issuingDate : currentDate;\r\n\r\n\r\n        }\r\n\r\n        const unsubscribe = subscribeToBankAccounts();\r\n    }, [currentDate]);\r\n\r\n\r\n\r\n    const ModalCalendar = ({ selectedDate, setSelectedDate, currentDate }) => {\r\n\r\n        const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n        const handleModalCalendarOpen = () => {\r\n            setModalCalendarVisible(true);\r\n        };\r\n\r\n        const handleModalCalendarClose = () => {\r\n            setModalCalendarVisible(false);\r\n        };\r\n\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n                <Pressable style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onPress={handleModalCalendarOpen}>\r\n                    <TextInput value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n                </Pressable>\r\n\r\n                <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Content>\r\n                        <View style={{ height: '100%', flex: 1 }}>\r\n                            <Calendar\r\n                                onDayPress={useCallback(day => {\r\n                                    setSelectedDate(day.dateString);\r\n                                    invoiceSelectedDueDate = day.dateString;\r\n                                    globalInvoiceVariable.bankInformations.dueDate = day.dateString;\r\n                                    handleModalCalendarClose();\r\n                                }, [])}\r\n                                markedDates={{\r\n                                    [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n                                }}\r\n                                renderArrow={(direction) => (\r\n                                    direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n                                )}\r\n                                enableSwipeMonths={true}\r\n                                initialDate={selectedDate}\r\n                                // minDate={currentDate}\r\n                                showSixWeeks />\r\n\r\n                        </View>\r\n\r\n                    </Modal.Content>\r\n\r\n                </Modal>\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n\r\n    const handleValueChange = (selectedBankName) => {\r\n        const selectedBankObj = bankAccountsData[selectedBankName];\r\n        setSelectedBank(selectedBankName);\r\n        globalInvoiceVariable.bankInformations.bankAccount = selectedBankObj;\r\n        // console.log(selectedBankObj);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Due Date:</Text>\r\n                <ModalCalendar currentDate={currentDate} selectedDate={selectedDueDate} setSelectedDate={setSelectedDueDate} />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, marginVertical: 10, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Bank Account: </Text>\r\n                <Select\r\n                    selectedValue={selectedBank}\r\n                    onValueChange={handleValueChange}\r\n                    bgColor={'#FAFAFA'}\r\n                    accessibilityLabel=\"Choose Country\"\r\n                    placeholder=\"---\"\r\n                    _selectedItem={{\r\n                        bg: \"teal.600\",\r\n                        endIcon: <CheckIcon />,\r\n                    }}\r\n                    height={9}\r\n                    width={300}\r\n                    style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\r\n                >\r\n                    {Object.keys(bankAccountsData).map((bankName) => (\r\n                        <Select.Item key={bankName} label={bankName} value={bankName} />\r\n                    ))}\r\n                </Select>\r\n\r\n                <ModalAddBank />\r\n\r\n            </View>\r\n\r\n            <View style={{ flex: 3, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Payment Terms:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.bankInformations.paymentTerms = value;\r\n                }} ref={paymentTermsRef} multiline defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.paymentTerms ? invoiceData.bankInformations.paymentTerms : \"Full payment via Telegraphic Transfer (T/T) required before the due date.\"} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            {/* <View style={{ flex: 4, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Sales Agreement:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.bankInformations.salesAgreement = value;\r\n                }} ref={salesAgreementRef} multiline defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.salesAgreement ? invoiceData.bankInformations.salesAgreement : `Payment Information:\r\nThe customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.\r\nNo warranty service is provided on used vehicles.\r\n\r\nConditions for order cancellation:\r\n(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.\r\n(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.\r\n\r\nIntermediary Banking Information:\r\nBank Name: SUMITOMO MITSUI BANKING CORPORATION (THE NEW YORK AUTHORITY).\r\nSwift code: SMBCUS33\r\nAddress: 277 Park Avenue\r\nCity: New York, NY\r\nPostal Code: 10172\r\nCountry: United States\r\n`}\r\n                    placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ width: '60%', height: 100, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View> */}\r\n        </>\r\n    );\r\n}\r\n\r\nconst PaymentDetails = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const fobPriceInput = useRef(null);\r\n    const freightInput = useRef(null);\r\n    const inspectionInput = useRef(null);\r\n    const insuranceInput = useRef(null);\r\n\r\n\r\n    const [totalAmountCalculated, setTotalAmountCalculated] = useState('0');\r\n    const [selectedIncoterms, setSelectedIncoterms] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.incoterms ? invoiceData.paymentDetails.incoterms :\r\n        selectedChatData.insurance ? 'CIF' : 'C&F');\r\n\r\n    const [inspectionIsChecked, setInspectionIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionIsChecked : selectedChatData.inspection);\r\n    const [inspectionName, setInspectionName] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionName ? invoiceData.paymentDetails.inspectionName : selectedChatData.inspectionName);\r\n\r\n    const [warrantyIsChecked, setWarrantyIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyIsCheck ? invoiceData.paymentDetails.warrantyIsCheck : selectedChatData.warranty);\r\n\r\n    const warrantyPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyPrice && invoiceData.paymentDetails.warrantyPrice ? invoiceData.paymentDetails.warrantyPrice : 150;\r\n    const insurancePrice = 50;\r\n\r\n\r\n    const additionalNameRef = useRef(null);\r\n    const additionalPriceRef = useRef(null);\r\n\r\n\r\n    const safelyParseNumber = (value) => {\r\n        const number = Number(value.replace(/,/g, ''));\r\n        return isNaN(number) ? 0 : number;\r\n    };\r\n\r\n    const calculateTotalAmount = () => {\r\n        const fobPrice = safelyParseNumber(fobPriceInput.current?.value);\r\n        const freight = safelyParseNumber(freightInput.current?.value);\r\n        const inspection = safelyParseNumber(inspectionInput.current?.value);\r\n        const insurance = safelyParseNumber(insuranceInput.current?.value);\r\n\r\n        const additionalPricesTotal = globalAdditionalPriceArray.reduce((sum, value) => sum + safelyParseNumber(value), 0);\r\n\r\n        // const total = Math.round(fobPrice + freight + inspection + (warrantyIsChecked ? warrantyPrice : 0) + insurance + additionalPricesTotal).toLocaleString();\r\n        const total = Math.round(fobPrice + freight + inspection + insurance + additionalPricesTotal).toLocaleString();\r\n        setTotalAmountCalculated(total);\r\n        globalInvoiceVariable.paymentDetails.totalAmount = total;\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        additionalNameRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName.join('\\n') : '';\r\n        additionalPriceRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice.join('\\n') : '';\r\n\r\n        globalInvoiceVariable.paymentDetails.incoterms = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.incoterms ? invoiceData.paymentDetails.incoterms : selectedIncoterms;\r\n        globalInvoiceVariable.paymentDetails.inspectionIsChecked = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionIsChecked : inspectionIsChecked;\r\n        globalInvoiceVariable.paymentDetails.inspectionName = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionName ? invoiceData.paymentDetails.inspectionName : inspectionName;\r\n        globalInvoiceVariable.paymentDetails.inspectionPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionPrice ? invoiceData.paymentDetails.inspectionPrice : inspectionIsChecked ? 300 : 0;\r\n        globalInvoiceVariable.paymentDetails.warrantyIsCheck = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyIsCheck ? invoiceData.paymentDetails.warrantyIsCheck : warrantyIsChecked;\r\n        // globalInvoiceVariable.paymentDetails.warrantyPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyPrice ? invoiceData.paymentDetails.warrantyPrice : warrantyIsChecked ? warrantyPrice : 0;\r\n        globalInvoiceVariable.paymentDetails.fobPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.fobPrice ? invoiceData.paymentDetails.fobPrice : fobPriceInput.current?.value;\r\n        globalInvoiceVariable.paymentDetails.freightPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.freightPrice ? invoiceData.paymentDetails.freightPrice : freightInput.current?.value;\r\n        globalInvoiceVariable.paymentDetails.insurancePrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.insurancePrice ? invoiceData.paymentDetails.insurancePrice : selectedIncoterms == 'CIF' ? insuranceInput.current?.value : 0;\r\n        globalInvoiceVariable.paymentDetails.additionalPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice : [];\r\n        globalInvoiceVariable.paymentDetails.additionalName = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName : [];\r\n        globalAdditionalPriceArray = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice : [];\r\n\r\n        calculateTotalAmount();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        inspectionInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionPrice && invoiceData.paymentDetails.inspectionPrice == true ? invoiceData.paymentDetails.inspectionPrice : inspectionIsChecked ? 300 : 0;\r\n        calculateTotalAmount();\r\n\r\n    }, [inspectionIsChecked]);\r\n\r\n    useEffect(() => {\r\n\r\n        insuranceInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.insurancePrice && invoiceData.paymentDetails.incoterms == 'CIF' ? invoiceData.paymentDetails.insurancePrice : selectedIncoterms == 'CIF' ? 50 : 0;\r\n        freightInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.freightPrice ? invoiceData.paymentDetails.freightPrice : selectedIncoterms == 'FOB' ? 0 : freightCalculation;\r\n\r\n        calculateTotalAmount();\r\n\r\n    }, [selectedIncoterms]);\r\n\r\n    useEffect(() => {\r\n        calculateTotalAmount();\r\n\r\n    }, [warrantyIsChecked]);\r\n\r\n    const freightCalculation = (\r\n        (selectedChatData.m3 ? selectedChatData.m3 :\r\n            (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n                selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice)\r\n    ).toFixed(2);\r\n\r\n    const totalPriceCalculation = (\r\n        (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n            (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n                selectedChatData.carData.fobPrice : 0) *\r\n            (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n                (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                    selectedChatData.currency.jpyToUsd : 0))) +\r\n        parseFloat(freightCalculation)\r\n    ).toFixed(2);\r\n\r\n    const fobPriceDollars = (\r\n        (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n            (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n                selectedChatData.carData.fobPrice : 0) *\r\n            (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n                (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                    selectedChatData.currency.jpyToUsd : 0))\r\n        ).toFixed(2));\r\n\r\n\r\n    const handleAdditionalPriceTextChange = (text) => {\r\n        // Process and filter each line\r\n        const filteredLines = text.split('\\n').map(line => {\r\n            let filteredLine = line.replace(/[^0-9.]/g, '');\r\n            const parts = filteredLine.split('.');\r\n            if (parts.length > 2) {\r\n                filteredLine = parts[0] + '.' + parts[1];\r\n            }\r\n            return filteredLine;\r\n        });\r\n\r\n        // Update the ref and the state\r\n        additionalPriceRef.current.value = filteredLines.join('\\n');\r\n        // setAdditionalPriceArray(filteredLines);\r\n        globalAdditionalPriceArray = filteredLines;\r\n        globalInvoiceVariable.paymentDetails.additionalPrice = filteredLines;\r\n        calculateTotalAmount();\r\n\r\n    };\r\n\r\n    const handleAdditionalNameTextChange = (text) => {\r\n        // Update the ref\r\n        additionalNameRef.current.value = text;\r\n\r\n        // Split the text into lines and update the state\r\n        const lines = text.split('\\n');\r\n        // setAdditionalNameArray(lines);\r\n        globalInvoiceVariable.paymentDetails.additionalName = lines;\r\n    };\r\n\r\n\r\n    const handleFobPriceInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        fobPriceInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.fobPrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleFreightInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        freightInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.freightPrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleInspectionInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        inspectionInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.inspectionPrice = filteredText;\r\n\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleInsuranceInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        insuranceInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.insurancePrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#16A34A', }}>Payment Details</Text>\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Incoterms:</Text>\r\n                <Select\r\n                    selectedValue={selectedIncoterms}\r\n                    onValueChange={(value) => setSelectedIncoterms(value)}\r\n                    bgColor={'#FAFAFA'}\r\n                    accessibilityLabel=\"Choose Country\"\r\n                    placeholder=\"---\"\r\n                    _selectedItem={{\r\n                        bg: \"teal.600\",\r\n                        endIcon: <CheckIcon />,\r\n                    }}\r\n                    height={9}\r\n                    style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\r\n                >\r\n                    <Select.Item key={'C&F'} label={'C&F'} value={'C&F'} />\r\n                    <Select.Item key={'CIF'} label={'CIF'} value={'CIF'} />\r\n                    <Select.Item key={'FOB'} label={'FOB'} value={'FOB'} />\r\n                </Select>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Rate: </Text>\r\n                <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>\r\n                    {selectedChatData.currency && selectedChatData.currency.usdToJpy\r\n                        ? Number(selectedChatData.currency.usdToJpy).toFixed(2) : '0.00'}\r\n                </Text>\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, marginTop: 10, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Inspection:</Text>\r\n                <Checkbox\r\n                    isChecked={inspectionIsChecked}\r\n                    onChange={value => {\r\n                        setInspectionIsChecked(value)\r\n                        globalInvoiceVariable.paymentDetails.inspectionIsChecked = value;\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                />\r\n            </View>\r\n\r\n            {/* <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Warranty:</Text>\r\n                <Checkbox\r\n                    isChecked={warrantyIsChecked}\r\n                    onChange={value => setWarrantyIsChecked(value)}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                />\r\n                <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>${warrantyPrice}</Text>\r\n            </View> */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2 }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3 }}>FOB Price:</Text>\r\n                <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1 }}>$</Text>\r\n                <TextInput\r\n                    onChangeText={handleFobPriceInputChangeText}\r\n                    ref={fobPriceInput}\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.paymentDetails.fobPrice : selectedIncoterms == 'FOB' ? 0 : fobPriceDollars}\r\n                    placeholderTextColor='#9B9E9F'\r\n                    placeholder='FOB Price'\r\n                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2 }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3 }}>Freight:</Text>\r\n                <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1 }}>$</Text>\r\n                <TextInput\r\n                    onChangeText={handleFreightInputChangeText}\r\n                    ref={freightInput}\r\n                    defaultValue={freightCalculation}\r\n                    placeholderTextColor='#9B9E9F'\r\n                    placeholder='Freight'\r\n                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, display: selectedIncoterms == 'CIF' ? 'flex' : 'none' }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Insurance:</Text>\r\n                <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, }}>$</Text>\r\n                <TextInput\r\n                    onChangeText={handleInsuranceInputChangeText}\r\n                    ref={insuranceInput}\r\n                    defaultValue={50}\r\n                    placeholderTextColor='#9B9E9F'\r\n                    placeholder={`Insurance`}\r\n                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, display: inspectionIsChecked ? 'flex' : 'none' }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Inspection:</Text>\r\n                <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, }}>$</Text>\r\n                <TextInput\r\n                    onChangeText={handleInspectionInputChangeText}\r\n                    ref={inspectionInput}\r\n                    placeholderTextColor='#9B9E9F'\r\n                    placeholder={`Inspection [${selectedChatData.inspectionName}]`}\r\n                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                />\r\n                <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>{`[${selectedChatData.inspectionName}]`}</Text>\r\n            </View>\r\n\r\n\r\n            <View style={{ flex: 3, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Additional:</Text>\r\n                <TextInput ref={additionalNameRef} onChangeText={handleAdditionalNameTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                    style={{ width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                <TextInput ref={additionalPriceRef} onChangeText={handleAdditionalPriceTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Price'\r\n                    style={{ width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignItems: 'center', }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Total Amount:</Text>\r\n                <Text style={{ fontWeight: 700, fontSize: 18, margin: 3, color: '#FF0000', }}>{`$${totalAmountCalculated}`}</Text>\r\n            </View>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst SelectPortOfDischarge = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [countriesDischarge, setCountriesDischarge] = useState([]);\r\n    const [portsData, setPortsData] = useState({});\r\n    const [nearestPorts, setNearestPorts] = useState([]);\r\n    const [selectedPortCountry, setSelectedPortCountry] = useState('');\r\n    const [selectedCountry, setSelectedCountry] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.country : selectedChatData.country);\r\n    const [selectedPort, setSelectedPort] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.port : selectedChatData.port);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.port : selectedChatData.port);\r\n\r\n        const fetchPorts = async () => {\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    const sortedPorts = Object.keys(data)\r\n                        .map(portName => ({\r\n                            name: portName.replace(/_/g, '.'), // Replace '_' with '.'\r\n                            ...data[portName]\r\n                        }))\r\n                        .sort((a, b) => a.sortOrder - b.sortOrder);\r\n                    setNearestPorts(sortedPorts);\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n\r\n        const fetchPortsData = async () => {\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    setPortsData(data);\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n\r\n        fetchPorts();\r\n        fetchPortsData();\r\n        // fetchCountries();\r\n\r\n        globalInvoiceVariable.discharge.port = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.discharge.port ? invoiceData.discharge.port : selectedPort;\r\n        globalInvoiceVariable.discharge.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.discharge.country ? invoiceData.discharge.country : selectedPortCountry;\r\n\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        // When selectedCountry changes, update nearestPorts\r\n        const selectedCountryData = countriesDischarge.find(country => country.name === selectedCountry);\r\n        if (selectedCountryData && selectedCountryData.nearestPorts) {\r\n            setNearestPorts(selectedCountryData.nearestPorts);\r\n        } else {\r\n            setNearestPorts([]); // Reset to empty if no ports or country not found\r\n        }\r\n    }, [selectedCountry, countriesDischarge]);\r\n\r\n    useEffect(() => {\r\n        const portData = portsData[selectedPort];\r\n        if (portData && portData.country) {\r\n            setSelectedPortCountry(portData.country);\r\n            // console.log('Nagoya Price ', portData.nagoyaPrice);\r\n            globalInvoiceVariable.discharge.country = portData.country;\r\n        } else {\r\n            setSelectedPortCountry(''); // Reset selected country if port not found or has no country\r\n            console.log('Not found');\r\n        }\r\n    }, [selectedPort, portsData]);\r\n\r\n    return (\r\n        <>\r\n            {/* <Select\r\n                selectedValue={selectedCountry}\r\n                onValueChange={(value) => {\r\n                    setSelectedCountry(value)\r\n                    globalInvoiceVariable.discharge.country = value;\r\n\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"Choose Country\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />,\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}\r\n            >\r\n                {countriesDischarge.map((country) => (\r\n                    <Select.Item key={country.name} label={country.name} value={country.name} />\r\n                ))}\r\n            </Select> */}\r\n            <Select\r\n                selectedValue={selectedPort}\r\n                onValueChange={(value) => {\r\n                    setSelectedPort(value)\r\n                    globalInvoiceVariable.discharge.port = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                accessibilityLabel=\"Choose Port\"\r\n                placeholder=\"Select port\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />,\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}\r\n            >\r\n                {nearestPorts.map((port, index) => (\r\n                    <Select.Item key={index} label={port.name} value={port.name} />\r\n                ))}\r\n            </Select>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst SelectSalesPerson = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [selectedSales, setSelectedSales] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.salesPerson : (selectedChatData.carData && selectedChatData.carData.sales ? selectedChatData.carData.sales : ''));\r\n    const salesData = useSelector((state) => state.salesData);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        globalInvoiceVariable.salesPerson = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.salesPerson ? invoiceData.salesPerson : (selectedChatData.carData && selectedChatData.carData.sales ? selectedChatData.carData.sales : '');\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Select\r\n            selectedValue={selectedSales}\r\n            onValueChange={(value) => {\r\n                setSelectedSales(value);\r\n                globalInvoiceVariable.salesPerson = value;\r\n            }}\r\n            bgColor={'#FAFAFA'}\r\n            accessibilityLabel=\"---\"\r\n            placeholder=\"---\"\r\n            _selectedItem={{\r\n                bg: \"teal.600\",\r\n                endIcon: <CheckIcon />\r\n            }}\r\n            style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}>\r\n            {salesData.map((item) => (\r\n                <Select.Item key={item.id} label={item.name} value={item.name} />\r\n            ))}\r\n        </Select>\r\n    );\r\n}\r\n\r\nconst SelectPortOfDeparture = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const portData = useSelector((state) => state.portData);\r\n    const salesData = useSelector((state) => state.salesData);\r\n    const [selectedPort, setSelectedPort] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : ''));\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : ''));\r\n\r\n        globalInvoiceVariable.departurePort = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.departurePort ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : '');\r\n        globalInvoiceVariable.departureCountry = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.departureCountry ? invoiceData.departureCountry : 'Japan';\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                selectedValue='Japan'\r\n                onValueChange={(value) => {\r\n                    globalInvoiceVariable.departureCountry = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}>\r\n                <Select.Item key={'Japan'} label={'Japan'} value={'Japan'} />\r\n            </Select>\r\n\r\n            <Select\r\n                selectedValue={selectedPort}\r\n                onValueChange={(value) => {\r\n                    setSelectedPort(value);\r\n                    globalInvoiceVariable.departurePort = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}>\r\n                {portData.map((item) => (\r\n                    <Select.Item key={item.id} label={item.name} value={item.name} />\r\n                ))}\r\n            </Select>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst NotifyPartyInput = ({ accountData, setAccountData }) => {\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.sameAsConsignee : true);\r\n\r\n    const notifyPartyName = useRef(null);\r\n    const notifyPartyAddress = useRef(null);\r\n    const notifyPartyCity = useRef(null);\r\n    const notifyPartyCountry = useRef(null);\r\n    const notifyPartyContactNumber = useRef(null);\r\n    const notifyPartyFax = useRef(null);\r\n    const notifyPartyEmail = useRef(null);\r\n\r\n    useEffect(() => {\r\n\r\n        notifyPartyName.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.name ? invoiceData.notifyParty.name : '';\r\n        notifyPartyAddress.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.address ? invoiceData.notifyParty.address : '';\r\n        notifyPartyCity.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.city ? invoiceData.notifyParty.city : '';\r\n        notifyPartyCountry.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.country ? invoiceData.notifyParty.country : '';\r\n        notifyPartyContactNumber.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.contactNumber ? invoiceData.notifyParty.contactNumber : '';\r\n        notifyPartyFax.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.fax ? invoiceData.notifyParty.fax : '';\r\n        notifyPartyEmail.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.email ? invoiceData.notifyParty.email : '';\r\n\r\n        globalInvoiceVariable.notifyParty.name = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.name ? invoiceData.notifyParty.name : notifyPartyName.current?.value;\r\n        globalInvoiceVariable.notifyParty.address = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.address ? invoiceData.notifyParty.address : notifyPartyAddress.current?.value;\r\n        globalInvoiceVariable.notifyParty.city = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.city ? invoiceData.notifyParty.city : notifyPartyCity.current?.value;\r\n        globalInvoiceVariable.notifyParty.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.country ? invoiceData.notifyParty.country : notifyPartyCountry.current?.value;\r\n        globalInvoiceVariable.notifyParty.contactNumber = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.contactNumber ? invoiceData.notifyParty.contactNumber : notifyPartyContactNumber.current?.value;\r\n        globalInvoiceVariable.notifyParty.fax = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.fax ? invoiceData.notifyParty.fax : notifyPartyFax.current?.value;\r\n        globalInvoiceVariable.notifyParty.email = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.email ? invoiceData.notifyParty.email : notifyPartyEmail.current?.value;\r\n        globalInvoiceVariable.notifyParty.sameAsConsignee = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.sameAsConsignee ? invoiceData.notifyParty.sameAsConsignee : isChecked;\r\n\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#FF0000', }}>Notify Party</Text>\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, }}>\r\n                <Checkbox\r\n                    isChecked={isChecked}\r\n                    onChange={value => {\r\n                        setIsChecked(value)\r\n                        globalInvoiceVariable.consignee.sameAsBuyer = value;\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                >\r\n                    Same as consignee\r\n                </Checkbox>\r\n            </View>\r\n\r\n            <View style={{ display: isChecked ? 'none' : 'flex', }}>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Name:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.name = value;\r\n                    }}\r\n                        ref={notifyPartyName} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Address:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.address = value;\r\n                    }} ref={notifyPartyAddress} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Address'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>City:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.city = value;\r\n                    }} ref={notifyPartyCity} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='City'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Country:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.country = value;\r\n                    }} ref={notifyPartyCountry} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Country'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 3, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Contact Number:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.contactNumber = value;\r\n                    }} ref={notifyPartyContactNumber} disabled={isChecked} multiline placeholderTextColor='#9B9E9F' placeholder='Contact Number'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>FAX:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.fax = value;\r\n                    }} ref={notifyPartyFax} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='FAX'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Email:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.email = value;\r\n                    }} ref={notifyPartyEmail} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n            </View>\r\n\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />{/* Horizontal Line */}\r\n        </>\r\n    )\r\n}\r\n\r\nconst ConsigneeInput = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.sameAsBuyer : true);\r\n    const [accountData, setAccountData] = useState({});\r\n\r\n    const consigneeName = useRef(null);\r\n    const consigneeAddress = useRef(null);\r\n    const consigneeCity = useRef(null);\r\n    const consigneeCountry = useRef(null);\r\n    const consigneeContactNumber = useRef(null);\r\n    const consigneeFax = useRef(null);\r\n    const consigneeEmail = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAccountData = async () => {\r\n            if (!selectedChatData.participants && selectedChatData.participants.customer) return; // Make sure there's a selected email\r\n            const docRef = doc(projectExtensionFirestore, 'accounts', selectedChatData.participants.customer);\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    setAccountData(docSnap.data());\r\n                    // console.log(docSnap.data());\r\n                    consigneeName.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.name ? invoiceData.consignee.name : `${data.textFirst ? data.textFirst : ''} ${data.textLast ? data.textLast : ''}`;\r\n                    consigneeAddress.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.address ? invoiceData.consignee.address : `${data.textStreet ? data.textStreet : ''} ${data.textZip ? data.textZip : ''}`;\r\n                    consigneeCity.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.city ? invoiceData.consignee.city : `${data.city ? data.city : ''}`;\r\n                    consigneeCountry.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.country ? invoiceData.consignee.country : `${data.country ? data.country : ''}`;\r\n                    consigneeContactNumber.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.contactNumber ? invoiceData.consignee.contactNumber : `${data.textPhoneNumber ? data.textPhoneNumber : ''}`;\r\n                    consigneeFax.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.fax ? invoiceData.consignee.fax : `${data.fax ? data.fax : ''}`;\r\n                    consigneeEmail.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.email ? invoiceData.consignee.email : `${data.textEmail ? data.textEmail : ''}`;\r\n\r\n\r\n                    globalInvoiceVariable.consignee.name = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.name ? invoiceData.consignee.name : `${data.textFirst ? data.textFirst : ''} ${data.textLast ? data.textLast : ''}`;\r\n                    globalInvoiceVariable.consignee.address = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.address ? invoiceData.consignee.address : `${data.textStreet ? data.textStreet : ''} ${data.textZip ? data.textZip : ''}`;\r\n                    globalInvoiceVariable.consignee.city = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.city ? invoiceData.consignee.city : `${data.city ? data.city : ''}`;\r\n                    globalInvoiceVariable.consignee.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.country ? invoiceData.consignee.country : `${data.country ? data.country : ''}`;\r\n                    globalInvoiceVariable.consignee.contactNumber = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.contactNumber ? invoiceData.consignee.contactNumber : `${data.textPhoneNumber ? data.textPhoneNumber : ''}`;\r\n                    globalInvoiceVariable.consignee.fax = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.fax ? invoiceData.consignee.fax : `${data.fax ? data.fax : ''}`;\r\n                    globalInvoiceVariable.consignee.email = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.email ? invoiceData.consignee.email : `${data.textEmail ? data.textEmail : ''}`;\r\n                    globalInvoiceVariable.consignee.sameAsBuyer = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.sameAsBuyer ? invoiceData.consignee.sameAsBuyer : isChecked;\r\n\r\n                    // console.log(accountData.length);\r\n                } else {\r\n                    console.log('No such document!');\r\n                    setAccountData(null);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n        fetchAccountData();\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isChecked) {\r\n            consigneeName.current.value = `${accountData.textFirst ? accountData.textFirst : ''} ${accountData.textLast ? accountData.textLast : ''}`;\r\n            consigneeAddress.current.value = `${accountData.textStreet ? accountData.textStreet : ''} ${accountData.textZip ? accountData.textZip : ''}`;\r\n            consigneeCity.current.value = `${accountData.city ? accountData.city : ''}`;\r\n            consigneeCountry.current.value = `${accountData.country ? accountData.country : ''}`;\r\n            consigneeContactNumber.current.value = `${accountData.textPhoneNumber ? accountData.textPhoneNumber : ''}`;\r\n            consigneeFax.current.value = `${accountData.fax ? accountData.fax : ''}`;\r\n            consigneeEmail.current.value = `${accountData.textEmail ? accountData.textEmail : ''}`;\r\n        }\r\n\r\n        // console.log(globalInvoiceVariable);\r\n\r\n\r\n    }, [isChecked])\r\n\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#0A78BE', }}>Consignee</Text>\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, }}>\r\n                <Checkbox\r\n                    isChecked={isChecked}\r\n                    onChange={value => {\r\n                        globalInvoiceVariable.consignee.sameAsBuyer = value;\r\n                        setIsChecked(value)\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                >\r\n                    Same as buyer\r\n                </Checkbox>\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Name:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.name = value;\r\n                }} ref={consigneeName} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Address:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.address = value;\r\n                }} ref={consigneeAddress} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Address'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>City:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.city = value;\r\n                }} ref={consigneeCity} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='City'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Country:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.country = value;\r\n                }} ref={consigneeCountry} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Country'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 3, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Contact Number:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.contactNumber = value;\r\n                }} ref={consigneeContactNumber} disabled={isChecked} multiline placeholderTextColor='#9B9E9F' placeholder='Contact Number'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>FAX:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.fax = value;\r\n                }} ref={consigneeFax} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='FAX'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Email:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.email = value;\r\n                }} ref={consigneeEmail} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            <NotifyPartyInput accountData={accountData} setAccountData={setAccountData} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst InvoiceFeatures = ({ widthScaleFactor, heightScaleFactor }) => {\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    return (\r\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', width: 495 * widthScaleFactor, }}>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemAnBrSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Anti-Lock Braking System (ABS)</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemDrAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Driver Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemPaAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Passenger Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemSiAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Side Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAiCoFr ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Air Conditioner (Front)</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAiCoRe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Air Conditioner (Rear)</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAMFMRa ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>AM/FM Radio</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAMFMSt ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>AM/FM Stereo</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCDPl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>CD Player</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCDCh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>CD Changer</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCrSpCo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Cruis Speed Control</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortDiSp ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}> Digital Speedometer</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortDVDPl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>DVD Player</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortHDD ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Hard Disk Drive</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortNaSyGPS ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Navigation System (GPS)</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortPoSt ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Steering</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortPrAuSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Premium Audio System</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortReKeSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Remote Keyless System</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortTiStWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Tilt Steering Wheel</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorLeSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Leather Seats</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoDoLo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Door Locks</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoMi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Mirrors</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Seats</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoWi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Windows</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorReWiDe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Rear Window Defroster</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorReWiWi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Rear Window Wiper</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorThRoSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Third Row Seats</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorTiGl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Tinted Glasses</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorAlWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Alloy Wheels</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorPoSlDo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Sliding Door</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorSuRo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Sunroof</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsCuWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Customized Wheels</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsFuLo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Fully Loaded</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsMaHiAv ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Maintenance History Available</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsBrNeTi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Brand New Tires</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsNoAcHi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>No Accident History</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsNoSmPrOw ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Non-Smoking Previous Owner</Text>\r\n            </View>\r\n\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsOnOwHi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>One Owner History</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsPeRaTi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Performance-rated Tires</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsReBo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Repainted Body</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsTuEn ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Turbo Engine</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsUpAuSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Upgraded Audio System</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst createHmacSha256Hash = (data, secretKey) => {\r\n    const hash = HmacSHA256(data, secretKey);\r\n    return enc.Hex.stringify(hash);\r\n};\r\n\r\n\r\nconst ConfirmPaymentModalContent = () => {\r\n    const dispatch = useDispatch();\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n\r\n\r\n    const [historyModalVisible, setHistoryModalVisible] = useState(false);\r\n\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    const totalAmountString = invoiceData.paymentDetails.totalAmount;\r\n    const totalAmountNumber = parseFloat(totalAmountString.replace(/,/g, ''));\r\n\r\n    const inputAmountRef = useRef(null);\r\n\r\n    const handleHistoryModalOpen = () => {\r\n        setHistoryModalVisible(true);\r\n\r\n        // console.log(selectedChatData.payments);\r\n    }\r\n\r\n    const handleHistoryModalClose = () => {\r\n        setHistoryModalVisible(false);\r\n\r\n    }\r\n\r\n    const handleInputAmountChangeText = (text) => {\r\n        // Remove characters that are not digits, dot, or minus, and ensure minus is only at the start\r\n        const filteredText = text\r\n            .replace(/[^0-9.-]/g, '')  // Remove characters that are not digits, dot, or minus\r\n            .replace(/(.)\\-/g, '$1')   // Remove minus if not at the start\r\n            .replace(/^-(?=\\-)/, '')   // Remove extra minus at the start\r\n            .replace(/(\\..*)\\./g, '$1'); // Allow only one dot\r\n\r\n        // Update the input field\r\n        inputAmountRef.current.value = filteredText;\r\n    };\r\n\r\n\r\n\r\n    const handleCompletePaymentPress = () => {\r\n        const filteredText = invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1') - totalValue;\r\n        inputAmountRef.current.value = filteredText;\r\n    }\r\n\r\n\r\n    const fullPaymentMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `Full Payment Received\r\n\r\nDear Customer,\r\n\r\nI hope this message finds you well. \r\n\r\nWe are writing to confirm that we have received your full payment. \r\n\r\nThank you for settling your account promptly.\r\n\r\nShould you have any further questions or require assistance, please feel free to contact us.\r\n                \r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `Full Payment Received\r\n\r\nDear Customer,\r\n\r\nI hope this message finds you well. \r\n\r\nWe are writing to confirm that we have received your full payment. \r\n                \r\nThank you for settling your account promptly.\r\n                \r\nShould you have any further questions or require assistance, please feel free to contact us.\r\n                                \r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n\r\n    const overBalanceMessage = async (amount) => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `Dear Customer,\r\n\r\nGood day! \r\n\r\nWe're writing to inform you about your account with us at Real Motor Japan.\r\n                \r\nYou have an extra overbalance in your account.\r\n\r\nAmount: $${amount}\r\n                \r\nFeel free to contact us if you have any questions. We're here to help.\r\n                \r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `Dear Customer,\r\n\r\nGood day! \r\n                \r\nWe're writing to inform you about your account with us at Real Motor Japan.\r\n                                \r\nYou have an extra overbalance in your account.\r\n                \r\nAmount: $${amount}\r\n                                \r\nFeel free to contact us if you have any questions. We're here to help.\r\n                                \r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const paymentMessage = async (amount, transactionDate) => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `🌟 Payment Confirmation Alert 🌟\r\n\r\nDear Customer! 👋\r\n\r\nWe're thrilled to inform you that your recent payment has been successfully reflected in our bank account.\r\n\r\nYour prompt and efficient transaction is greatly appreciated! 🎉\r\n\r\n🔍 Payment Details:\r\n\r\nAmount: $${amount}\r\nTransaction Date: ${transactionDate}\r\n\r\nYour account and services are now fully up-to-date. If you have any further questions or require assistance, feel free to reach out.\r\n\r\nThank you for your continued trust in us.\r\nLooking forward to serving you more in the future! 😊\r\n\r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `🌟 Payment Confirmation Alert 🌟\r\n\r\nDear Customer! 👋\r\n\r\nWe're thrilled to inform you that your recent payment has been successfully reflected in our bank account.\r\n\r\nYour prompt and efficient transaction is greatly appreciated! 🎉\r\n\r\n🔍 Payment Details:\r\n\r\nAmount: $${amount}\r\nTransaction Date: ${transactionDate}\r\n\r\nYour account and services are now fully up-to-date. If you have any further questions or require assistance, feel free to reach out.\r\n\r\nThank you for your continued trust in us.\r\nLooking forward to serving you more in the future! 😊\r\n\r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const confirmPayment = async () => {\r\n        setIsConfirmLoading(true);\r\n\r\n        const amountNeeded = invoiceData.paymentDetails.totalAmount ? invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1') - totalValue : '';\r\n        const docRef = doc(projectExtensionFirestore, 'chats', selectedChatData.id);\r\n        const docRefCustomer = doc(projectExtensionFirestore, 'accounts', selectedChatData.participants.customer);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n\r\n        const newPayments = [\r\n            { value: inputAmountRef.current.value, date: formattedTime },\r\n        ];\r\n\r\n        const newPaymentsAccount = [\r\n            { value: inputAmountRef.current.value, date: formattedTime, vehicleRef: selectedChatData.carData.referenceNumber, vehicleName: selectedChatData.carData.carName, },\r\n        ];\r\n\r\n        const inputAmount = inputAmountRef.current.value;\r\n        const numericInputAmount = Number(inputAmount);\r\n        const formattedInputAmount = numericInputAmount.toLocaleString();\r\n        const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n        if (inputAmount === '' || inputAmount === '0') {\r\n            setIsConfirmLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (!inputAmount.startsWith('-')) {\r\n                // First, execute paymentMessage\r\n                await paymentMessage(formattedInputAmount, formattedTime);\r\n                await delay(10); //10ms delay\r\n\r\n                if (numericInputAmount >= amountNeeded) {\r\n                    // Once paymentMessage is successful, execute fullPaymentMessage\r\n                    await fullPaymentMessage();\r\n                    await delay(10); //10ms delay\r\n\r\n                    if (numericInputAmount > amountNeeded) {\r\n                        // Calculate overbalance and execute overBalanceMessage\r\n                        const overBalance = numericInputAmount - amountNeeded;\r\n\r\n                        if (overBalance > 0) {\r\n                            await overBalanceMessage(selectedCustomerData.overBalance ? selectedCustomerData.overBalance + overBalance : '');\r\n                            await delay(10); //10ms delay\r\n                            await updateDoc(docRefCustomer, {\r\n                                overBalance: increment(overBalance),\r\n                            });\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    // Update step indicator for successful payment\r\n                    await updateDoc(docRef, {\r\n                        'stepIndicator.value': 4,\r\n                        'stepIndicator.status': 'Payment Confirmed',\r\n                    });\r\n\r\n                } else {\r\n                    // Handle the case where the payment is less than the amount needed\r\n                    console.log('Partial payment received');\r\n                }\r\n\r\n                // Update payments and payments history\r\n\r\n                await updateDoc(docRef, {\r\n                    payments: arrayUnion(...newPayments)\r\n                });\r\n\r\n                await updateDoc(docRefCustomer, {\r\n                    paymentsHistory: arrayUnion(...newPaymentsAccount)\r\n                });\r\n\r\n            } else {\r\n                console.error('Negative value entered');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error processing payment: ', error);\r\n        } finally {\r\n            setIsConfirmLoading(false);\r\n            dispatch(setTransactionModalVisible(false));\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    function formatDate(dateString) {\r\n        // Remove ' at ' from the date string\r\n        const cleanedDateString = dateString.replace(' at ', ' ');\r\n        const date = new Date(cleanedDateString);\r\n\r\n        if (isNaN(date.getTime())) {\r\n            // Date is not valid\r\n            console.error(\"Invalid Date:\", dateString);\r\n            return \"Invalid Date\";\r\n        }\r\n\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        const year = date.getFullYear();\r\n        const month = months[date.getMonth()];\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n\r\n        let hours = date.getHours();\r\n        const minutes = date.getMinutes().toString().padStart(2, '0');\r\n        const ampm = hours >= 12 ? 'pm' : 'am';\r\n\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n\r\n        return `${year} ${month} ${day} at ${hours}:${minutes}${ampm}`;\r\n    }\r\n\r\n    const PaymentHistoryModal = ({ historyModalVisible, handleHistoryModalClose, payments }) => {\r\n        // Create a copy of payments and sort it by date in descending order\r\n        const sortedPayments = [...payments].sort((a, b) => {\r\n            const dateA = a.date;\r\n            const dateB = b.date;\r\n            return dateB - dateA; // Sorts in descending order\r\n        });\r\n\r\n        // console.log(sortedPayments);\r\n\r\n        return (\r\n            <Modal isOpen={historyModalVisible} onClose={handleHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Payment History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500, }}>\r\n                            {\r\n                                sortedPayments.length > 0 ?\r\n                                    sortedPayments.map((payment, index) => (\r\n                                        <View key={index} style={{\r\n                                            marginBottom: 15,\r\n                                            backgroundColor: '#F8F9FF', // Card background color\r\n                                            borderRadius: 10, // Rounded corners for the card\r\n                                            shadowColor: '#000', // Shadow color\r\n                                            shadowOffset: { width: 0, height: 2 },\r\n                                            shadowOpacity: 0.1,\r\n                                            shadowRadius: 2,\r\n                                            elevation: 3, // Elevation for Android\r\n                                            padding: 15, // Padding inside the card\r\n                                            borderBottomWidth: 1,\r\n                                            borderBottomColor: '#eee',\r\n                                        }}>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Date: </Text>\r\n                                                <Text style={{ color: '#333' }}>\r\n                                                    {formatDate(sortedPayments[sortedPayments.length - 1 - index].date)}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Value: </Text>\r\n                                                <Text style={{ color: Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString().startsWith('-') ? '#FF0000' : '#16A34A' }}>\r\n                                                    ${Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString()}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                        </View>\r\n                                    )) :\r\n                                    <Text style={{ fontWeight: 'bold', alignSelf: 'center', }} italic>No history to show</Text>\r\n                            }\r\n                        </ScrollView>\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        );\r\n    };\r\n\r\n    const totalValue = selectedChatData.payments\r\n        ? selectedChatData.payments.reduce((sum, payment) => {\r\n            const value = Number(payment.value);\r\n            return sum + (isNaN(value) ? 0 : value);\r\n        }, 0)\r\n        : 0;\r\n\r\n    const isTotalValueGreater = Number(totalValue) < Number(invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1'));\r\n    const displayedAmount = isTotalValueGreater ? Number(totalValue).toLocaleString() : invoiceData.paymentDetails.totalAmount;\r\n\r\n    return (\r\n\r\n        <View style={{ flex: 1, }}>\r\n\r\n            <View style={{ marginLeft: 5, }}>\r\n\r\n                <Text style={{ fontWefight: 700, fontSize: 14, }}>Total Paid:</Text>\r\n\r\n                <Progress w=\"90%\" shadow={2} value={Number(totalValue)} max={totalAmountNumber} _filledTrack={{\r\n                    bg: \"lime.500\"\r\n                }} />\r\n\r\n                <Text style={{ fontWeight: 700, fontSize: 14, color: '#FF0000', }}>${displayedAmount}\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#8D7777', }}> out of </Text>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#16A34A', }}>{`$${invoiceData.paymentDetails.totalAmount}`}</Text>\r\n                </Text>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ marginLeft: 5, }}>\r\n\r\n                <Pressable\r\n                    onPress={handleHistoryModalOpen}\r\n                    style={{ width: 'fit-content', }}>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#0A78BE', }} underline selectable={false}>Payments History</Text>\r\n                </Pressable>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ marginLeft: 5, marginTop: 5, }}>\r\n\r\n                <Text style={{ fontWeight: 700, fontSize: 14, }}>Input Amount:</Text>\r\n\r\n                <View style={{ flexDirection: 'row', alignItems: 'center', }}>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 18, }}>$</Text>\r\n\r\n                    <TextInput\r\n                        ref={inputAmountRef}\r\n                        placeholderTextColor='#9B9E9F' placeholder='Input Amount'\r\n                        style={{ height: 35, width: 300, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        onChangeText={handleInputAmountChangeText}\r\n                    />\r\n\r\n                </View>\r\n\r\n                <Pressable\r\n                    onPress={handleCompletePaymentPress}\r\n                    style={{ width: 'fit-content', }}>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#16A34A', }} underline selectable={false}>Complete Payment</Text>\r\n                </Pressable>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}>\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        backgroundColor: '#16A34A', // Change color on hover\r\n                        borderRadius: 5,\r\n                        padding: 5,\r\n                    }}\r\n                >\r\n                    {!isConfirmLoading ? (\r\n                        <Pressable\r\n                            onPress={() => confirmPayment()}\r\n                        >\r\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>\r\n                                Confirm\r\n                            </Text>\r\n                        </Pressable>\r\n                    ) : (\r\n                        <Spinner size={'sm'} color={'white'} />)}\r\n\r\n                </View>\r\n            </View>\r\n\r\n            <PaymentHistoryModal\r\n                historyModalVisible={historyModalVisible}\r\n                handleHistoryModalClose={handleHistoryModalClose}\r\n                payments={selectedChatData.payments ? selectedChatData.payments : []} />\r\n\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst IssueProformaInvoiceModalContent = () => {\r\n    const dispatch = useDispatch();\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const [isConfirmHovered, setIsConfirmHovered] = useState(false);\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    const cfsInputRef = useRef(null);\r\n    const placeOfDeliveryInputRef = useRef(null);\r\n    const secretKey = CRYPTO_KEY.toString();\r\n\r\n\r\n\r\n    const invoiceMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: 'Issued Invoice',\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'IssuedInvoice',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: 'Issued Invoice',\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const confirmInvoice = async () => {\r\n        setIsConfirmLoading(true);\r\n        const year = currentDate.split('-')[0]; // Split the date and get the year\r\n        const yearSuffix = year.slice(-2); // Get last 2 digits of the year\r\n        const collectionRef = collection(projectExtensionFirestore, \"IssuedInvoice\");\r\n\r\n        try {\r\n            // Retrieve all documents for the current yearF\r\n            const querySnapshot = await getDocs(collectionRef);\r\n            let maxNumber = 0;\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const docName = doc.id;\r\n                if (docName.startsWith(yearSuffix)) {\r\n                    const number = parseInt(docName.substring(2), 10);\r\n                    if (number > maxNumber) {\r\n                        maxNumber = number;\r\n                    }\r\n                }\r\n            });\r\n\r\n            const nextNumber = maxNumber + 1;\r\n            const docName = `${yearSuffix}${nextNumber}`;\r\n            const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", docName);\r\n            const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\r\n\r\n            const hashedData = createHmacSha256Hash(docName, secretKey);\r\n\r\n            // Create a new document with the globalInvoiceVariable object\r\n            if (selectedChatData.invoiceNumber) {\r\n                const updateDocRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n\r\n                await setDoc(updateDocRef, {\r\n                    ...globalInvoiceVariable,\r\n                    isCancelled: false,\r\n                    customerEmail: selectedCustomerData.textEmail,\r\n                    chatId: selectedChatData.id,\r\n                    carData: selectedChatData.carData,\r\n                }, { merge: true });\r\n\r\n                if (selectedChatData.stepIndicator.value == 1) {\r\n                    await updateDoc(docRefChatId, {\r\n                        'stepIndicator.status': 'Issue Proforma Invoice',\r\n                        'stepIndicator.value': 2,\r\n                        // finalPrice: globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, ''),\r\n                    });\r\n                }\r\n\r\n                invoiceMessage();\r\n                setIsConfirmLoading(false);\r\n                dispatch(setTransactionModalVisible(false));\r\n            }\r\n\r\n            else {\r\n\r\n                await setDoc(docRef, {\r\n                    ...globalInvoiceVariable,\r\n                    isCancelled: false,\r\n                    customerEmail: selectedCustomerData.textEmail,\r\n                    chatId: selectedChatData.id,\r\n                    cryptoNumber: hashedData,\r\n                    carData: selectedChatData.carData,\r\n                });\r\n\r\n                await updateDoc(docRefChatId, {\r\n                    keywords: arrayUnion(docName),\r\n                    invoiceNumber: docName,\r\n                    'stepIndicator.status': 'Issue Proforma Invoice',\r\n                    'stepIndicator.value': 2,\r\n                    // finalPrice: globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, ''),\r\n                });\r\n\r\n                invoiceMessage();\r\n                setIsConfirmLoading(false);\r\n                dispatch(setTransactionModalVisible(false));\r\n\r\n\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error creating document: \", error);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     calculateTotalAmount();\r\n    // }, [additionalPriceArray]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        globalInvoiceVariable.cfs = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.cfs ? invoiceData.cfs : cfsInputRef.current?.value;\r\n        globalInvoiceVariable.placeOfDelivery = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.placeOfDelivery ? invoiceData.placeOfDelivery : placeOfDeliveryInputRef.current?.value;\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <ScrollView style={{ flex: 1, maxHeight: 500, }}>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>CFS:</Text>\r\n                <TextInput\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.cfs ? invoiceData.cfs : ''}\r\n                    ref={cfsInputRef} placeholderTextColor='#9B9E9F' placeholder='Input CFS (Optional)'\r\n                    style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onChangeText={(value) => globalInvoiceVariable.cfs = value} />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Place of Delivery:</Text>\r\n                <TextInput\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.placeOfDelivery ? invoiceData.placeOfDelivery : ''}\r\n                    ref={placeOfDeliveryInputRef} placeholderTextColor='#9B9E9F' placeholder='Place of Delivery (Optional)'\r\n                    style={{ height: 25, width: 200, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onChangeText={(value) => globalInvoiceVariable.placeOfDelivery = value} />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, alignItems: 'center' }}>\r\n                <Text style={{ fontWeight: 700, margin: 3 }}>Port of Departure:</Text>\r\n                <SelectPortOfDeparture />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Sales Person:</Text>\r\n                <SelectSalesPerson />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 5, }} />\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Port of Discharge:</Text>\r\n                {/*Select Discharge*/}\r\n                <SelectPortOfDischarge />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 5, }} />\r\n\r\n            <ConsigneeInput />\r\n\r\n            <PaymentDetails />\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />\r\n\r\n            <BankInformation />\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}>\r\n                <View\r\n\r\n                    // onTouchEnd={() => confirmInvoice()}\r\n                    style={{\r\n                        flex: 1,\r\n                        backgroundColor: isConfirmHovered ? '#145A32' : '#16A34A', // Change color on hover\r\n                        borderRadius: 5,\r\n                        padding: 5,\r\n                    }}\r\n\r\n                // onMouseEnter={() => setIsConfirmHovered(true)}\r\n                // onMouseLeave={() => setIsConfirmHovered(false)}\r\n                >\r\n                    {!isConfirmLoading ? (\r\n                        <Pressable onPress={() => confirmInvoice()}>\r\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>\r\n                                Confirm\r\n                            </Text>\r\n                        </Pressable>\r\n\r\n                    ) : (\r\n                        <Spinner size={'sm'} color={'white'} />)}\r\n\r\n                </View>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\n\r\nconst ProfitCalculator = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const [totalSCCAmount, setTotalSCCAmount] = useState(0);\r\n    const [formattedTotalSCCAmount, setFormattedTotalSCCAmount] = useState(0);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [totalProfitAmountDollars, setTotalProfitAmountDollars] = useState(0);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n    const inputPriceRef = useRef(null);\r\n\r\n\r\n    const [portsData, setPortsData] = useState({});\r\n    const [origFreight, setOrigFreight] = useState(0);\r\n    const [lastFetchedPort, setLastFetchedPort] = useState('');\r\n\r\n\r\n    // Function to fetch ports data from Firestore\r\n    const fetchPortsData = async () => {\r\n        const currentPort = invoiceData.discharge.port;\r\n        const freightOrigPrice = selectedChatData.freightOrigPrice;\r\n\r\n        // Fetch data if the current port is different from the last fetched port\r\n        // and if freightOrigPrice is valid (exists, not an empty string, and not 0)\r\n        if (currentPort !== lastFetchedPort && !freightOrigPrice) {\r\n\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    if (data[currentPort]?.kobePrice !== undefined) {\r\n\r\n                        if (invoiceData.departurePort == \"Nagoya\") {\r\n\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].nagoyaPrice,\r\n                            });\r\n                            // console.log(\"Nagoya Price \", data[currentPort].nagoyaPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Yokohama\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].yokohamaPrice,\r\n                            });\r\n                            // console.log(\"Yokohama Price \", data[currentPort].yokohamaPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Kyushu\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].kyushuPrice,\r\n                            });\r\n                            // console.log(\"Kyushu Price \", data[currentPort].kyushuPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Kobe\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].kobePrice,\r\n                            });\r\n                            // console.log(\"Kobe Price \", data[currentPort].kobePrice);\r\n\r\n                        }\r\n\r\n                        setLastFetchedPort(currentPort); // Update last fetched port\r\n                    } else {\r\n                        console.log('Port data not found for the given port');\r\n                    }\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        } else {\r\n            console.log('No need to fetch new data');\r\n        }\r\n    };\r\n\r\n\r\n    // useEffect for fetching ports data\r\n    // useEffect(() => {\r\n    //     // Fetch ports data\r\n    //     const fetchPortsData = async () => {\r\n    //         const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n    //         try {\r\n    //             const docSnap = await getDoc(docRef);\r\n\r\n    //             if (docSnap.exists()) {\r\n    //                 const data = docSnap.data();\r\n    //                 setPortsData(data[invoiceData.discharge.port].kobePrice);\r\n    //                 console.log(data[invoiceData.discharge.port].kobePrice);\r\n    //             } else {\r\n    //                 console.log('No such document!');\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching document:', error);\r\n    //         }\r\n    //     };\r\n\r\n    //     fetchPortsData();\r\n\r\n    // }, [invoiceData]);\r\n\r\n\r\n    const handleModalOpen = () => {\r\n        setModalVisible(true);\r\n        inputPriceRef.current.value = defaultInputPrice;\r\n        calculateTotalAmount();\r\n\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n\r\n    };\r\n\r\n\r\n    const fee = {\r\n        auction: 10000,\r\n        transport: 10000,\r\n        shippingAgent: 15000,\r\n    };\r\n\r\n    const purchasedPrice = Number(selectedChatData.carData && selectedChatData.carData.purchasedPrice ? selectedChatData.carData.purchasedPrice : 0);\r\n    const formattedPurchasedPrice = Number(purchasedPrice).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const auctionFee = Number(fee.auction);\r\n    const formattedAuctionFee = Number(auctionFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const transportFee = Number(fee.transport);\r\n    const formattedTransportFee = Number(transportFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const shippingAgentFee = Number(fee.shippingAgent);\r\n    const formattedShippingAgentFee = Number(shippingAgentFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const cubicMeter = Number(selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ? selectedChatData.carData.dimensionCubicMeters : 0).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n\r\n    const costPerCubicMeter = Number(selectedChatData && selectedChatData.freightOrigPrice ? selectedChatData.freightOrigPrice : 0);\r\n    const formattedCostPerCubicMeter = Number(costPerCubicMeter).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const totalCubicMeterCostDollars = Number(costPerCubicMeter * cubicMeter);\r\n    const formattedTotalCubicMeterCostDollars = Number(costPerCubicMeter * cubicMeter).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const totalCubicMeterCostYen = Number(totalCubicMeterCostDollars * selectedChatData.currency.usdToJpy);\r\n    const formattedTotalCubicMeterCostYen = Number(totalCubicMeterCostYen).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const realTotalPriceYen = (purchasedPrice + auctionFee + transportFee + shippingAgentFee + totalSCCAmount + totalCubicMeterCostYen)\r\n    const formattedRealTotalPriceYen = Number(realTotalPriceYen).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const realTotalPriceDollars = realTotalPriceYen * selectedChatData.currency.jpyToUsd;\r\n    const formattedRealTotalPriceDollars = realTotalPriceDollars.toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n\r\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\r\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice));\r\n\r\n\r\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0))) + freightCalculation;\r\n\r\n    const defaultInputPrice = Math.round(\r\n        invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount\r\n            ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, ''))\r\n            : totalPriceCalculation\r\n    );\r\n\r\n\r\n\r\n\r\n    const safelyParseNumber = (value) => {\r\n        const number = Number(value.replace(/,/g, ''));\r\n        return isNaN(number) ? 0 : number;\r\n    };\r\n\r\n    const calculateTotalAmount = () => {\r\n\r\n        const inputPrice = safelyParseNumber(inputPriceRef.current?.value);\r\n\r\n        const totalAmountDollars = Math.round(inputPrice - realTotalPriceDollars);\r\n        setTotalProfitAmountDollars(totalAmountDollars);\r\n        // const total = Math.round(fobPrice + freight + inspection + insurance + additionalPricesTotal).toLocaleString();\r\n        // setTotalAmountCalculated(total);\r\n        // globalInvoiceVariable.paymentDetails.totalAmount = total;\r\n    };\r\n\r\n    const handleInputPriceChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9]/g, '');\r\n        inputPriceRef.current.value = filteredText;\r\n\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        if (selectedChatData.carData && selectedChatData.carData.supplyChainsCostsData) {\r\n\r\n            const amounts = selectedChatData.carData.supplyChainsCostsData.map((item) => {\r\n                const expenseName = Object.keys(item)[0];\r\n                const expenseData = item[expenseName];\r\n                return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n            });\r\n\r\n            // Use reduce to add up all the amounts\r\n            const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n            const formattedTotalAmount = totalAmount.toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n            setTotalSCCAmount(totalAmount);\r\n            setFormattedTotalSCCAmount(formattedTotalAmount);\r\n\r\n\r\n            // console.log(defaultInputPrice);\r\n            // console.log(realTotalPriceDollars);\r\n            // console.log(formattedRealTotalPriceDollars);\r\n            // console.log(realTotalPriceYen);\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const freightOrigPrice = selectedChatData.freightOrigPrice;\r\n\r\n        if (modalVisible && !freightOrigPrice) {\r\n            fetchPortsData();\r\n        }\r\n\r\n\r\n    }, [modalVisible]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (totalSCCAmount !== 0 || totalSCCAmount !== '') {\r\n            const totalAmountDollars = Math.round(defaultInputPrice - realTotalPriceDollars);\r\n            setTotalProfitAmountDollars(totalAmountDollars);\r\n        }\r\n\r\n\r\n    }, [totalSCCAmount]);\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable\r\n                onPress={handleModalOpen}\r\n                focusable={false}\r\n                variant='ghost'\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#4c555c' : '#6e7a83',\r\n                }}>\r\n                <Ionicons size={15} color={'white'} name='calculator' />\r\n                <Text style={{ textAlign: 'center', color: 'white', fontWeight: 'bold', }} >Profit Calculator</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={modalVisible}\r\n                onClose={() => {\r\n                    handleModalClose()\r\n                }}\r\n                initialFocusRef={inputPriceRef}\r\n                size={'lg'}\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header>Profit Calculator</Modal.Header>\r\n                    <Modal.Body style={{ flexDirection: 'row', backgroundColor: '#fafafa', }}>\r\n\r\n                        <View style={{ flex: 1, borderRightWidth: 1, borderRightColor: '#DADDE1', }}>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, }}>Profit (Yen):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(totalProfitAmountDollars * selectedChatData.currency.usdToJpy) < 0 ? '#FF0000' : '#8D7777',\r\n                                }}>\r\n                                    {`${Number(totalProfitAmountDollars * selectedChatData.currency.usdToJpy).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, }}>Profit (US Dollars):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(totalProfitAmountDollars) < 0 ? '#FF0000' : '#16A34A',\r\n                                }}>\r\n                                    {`${Number(totalProfitAmountDollars).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, }}>Profit (Percentage):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(((totalProfitAmountDollars * selectedChatData.currency.usdToJpy) / purchasedPrice) * 100) <= 10.5 ? '#FF0000' : '#336699',\r\n                                }}>\r\n                                    {`${Number(((totalProfitAmountDollars * selectedChatData.currency.usdToJpy) / purchasedPrice) * 100).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}%`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: '#6E7A83', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, color: 'white', }}>Price to calculate:</Text>\r\n                                <TextInput\r\n                                    onChangeText={handleInputPriceChangeText}\r\n                                    defaultValue={defaultInputPrice}\r\n                                    ref={inputPriceRef}\r\n                                    placeholderTextColor='#9B9E9F' placeholder='Input Price'\r\n                                    style={{\r\n                                        backgroundColor: 'white',\r\n                                        height: 25,\r\n                                        margin: 2,\r\n                                        padding: 1,\r\n                                        borderRadius: 4,\r\n                                        borderWidth: 1,\r\n                                        borderColor: 'white',\r\n                                        outlineStyle: 'none',\r\n                                        fontSize: 18,\r\n                                        fontWeight: '700',\r\n                                    }}\r\n                                />\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n\r\n                        <View style={{ flex: 1, marginLeft: 3 }}>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Purchased Price:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedPurchasedPrice}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Auction Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedAuctionFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Transport Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedTransportFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Shipping Agent Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedShippingAgentFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Supply Chains Costs:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedTotalSCCAmount}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Cubic Meter:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${cubicMeter}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Cost per Cubic Meter:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedCostPerCubicMeter} x ${cubicMeter}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 14, lineHeight: 14, color: '#16A34A', }}>\r\n                                    {`${formattedTotalCubicMeterCostDollars}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 14, lineHeight: 14, color: '#8D7777', }}>\r\n                                    {`${formattedTotalCubicMeterCostYen}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, }}>Total:</Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 18, color: '#8D7777', }}>\r\n                                    {`${formattedRealTotalPriceYen}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 18, color: '#16A34A', }}>\r\n                                    {`${formattedRealTotalPriceDollars}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nconst PreviewInvoice = () => {\r\n\r\n    // npm install html2canvas jspdf\r\n    // import jsPDF from 'jspdf';\r\n    // import html2canvas from 'html2canvas';\r\n    const dispatch = useDispatch();\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const previewInvoiceVisible = useSelector((state) => state.previewInvoiceVisible);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [isPreviewHovered, setIsPreviewHovered] = useState(false);\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const invoiceRef = useRef(null);\r\n    const [invoiceImageUri, setInvoiceImageUri] = useState('');\r\n    const hoverPreviewIn = () => setIsPreviewHovered(true);\r\n    const hoverPreviewOut = () => setIsPreviewHovered(false);\r\n    const [capturedImageUri, setCapturedImageUri] = useState('');\r\n    const [vehicleImageUri, setVehicleImageUri] = useState(globalImageUrl);\r\n    const [featuresTrueCount, setFeaturesTrueCount] = useState(0);\r\n    const [rerenderState, setRerenderState] = useState(0);\r\n\r\n    const handlePreviewInvoiceModalOpen = () => {\r\n        dispatch(setPreviewInvoiceVisible(true));\r\n    };\r\n\r\n    const handlePreviewInvoiceModalClose = () => {\r\n        dispatch(setPreviewInvoiceVisible(false));\r\n        setCapturedImageUri('');\r\n    }\r\n\r\n    function countTrueValuesInCarData(invoiceData) {\r\n        let count = 0;\r\n\r\n        // Check if carData exists in invoiceData\r\n        if (invoiceData.carData) {\r\n            // List of fields to check within carData\r\n            const fields = ['interior', 'exterior', 'safetySystem', 'comfort', 'sellingPoints'];\r\n\r\n            fields.forEach(field => {\r\n                if (invoiceData.carData[field]) {\r\n                    // Count true values in each field of carData\r\n                    count += Object.values(invoiceData.carData[field]).filter(value => value === true).length;\r\n                }\r\n            });\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (previewInvoiceVisible) {\r\n            setRerenderState(rerenderState + 1);\r\n        }\r\n    }, [previewInvoiceVisible])\r\n\r\n\r\n    useEffect(() => {\r\n        // setTimeout(() => {\r\n        const captureImageAsync = async () => {\r\n            try {\r\n                if (invoiceRef.current) {\r\n                    // Adjust the scale to control the captured image resolution\r\n                    const scale = 0.85; // Experiment with different scale values\r\n                    const width = 2480 * scale;\r\n                    const height = 3508 * scale;\r\n\r\n                    const imageUri = await captureRef(invoiceRef, {\r\n                        format: 'jpg',\r\n                        quality: 1, // Adjust quality if needed\r\n                        result: 'base64',\r\n                        width: width,\r\n                        height: height,\r\n                    });\r\n                    setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\r\n                    const trueCount = countTrueValuesInCarData(invoiceData);\r\n                    setFeaturesTrueCount(trueCount);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error capturing view:\", error);\r\n            }\r\n        };\r\n\r\n        const convertImageToBase64 = async (url) => {\r\n            try {\r\n                const response = await fetch(url);\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const blob = await response.blob();\r\n                return new Promise((resolve, reject) => {\r\n                    const reader = new FileReader();\r\n                    reader.onloadend = () => resolve(reader.result);\r\n                    reader.onerror = reject;\r\n                    reader.readAsDataURL(blob);\r\n                });\r\n            } catch (error) {\r\n                console.error('Fetch error:', error.message);\r\n                return null;\r\n            }\r\n        };\r\n        convertImageToBase64(globalImageUrl)\r\n            .then(base64String => {\r\n                setVehicleImageUri(base64String);\r\n            });\r\n        // Trigger image capture when invoiceRef changes\r\n        captureImageAsync();\r\n\r\n\r\n\r\n        // }, 100)\r\n\r\n\r\n    }, [invoiceRef.current, vehicleImageUri]);\r\n\r\n    const captureImage = async () => {\r\n        try {\r\n            // Adjust the scale to control the captured image resolution\r\n            const scale = 0.9; // Experiment with different scale values\r\n            const width = 2480 * scale;\r\n            const height = 3508 * scale;\r\n\r\n            const imageUri = await captureRef(invoiceRef, {\r\n                format: 'jpg',\r\n                quality: 1, // Adjust quality if needed\r\n                result: 'base64',\r\n                width: width,\r\n                height: height,\r\n            });\r\n            return `data:image/jpeg;base64,${imageUri}`;\r\n        } catch (error) {\r\n            console.error(\"Error capturing view:\", error);\r\n        }\r\n    };\r\n\r\n    const createPDF = async () => {\r\n        const element = invoiceRef.current;\r\n        if (element) {\r\n            // Reduce the scale slightly for smaller file size\r\n            const scale = 1; // Fine-tune this value for balance\r\n\r\n            const canvas = await html2canvas(element, {\r\n                scale: scale,\r\n            });\r\n\r\n            // Experiment with JPEG quality for a balance between quality and file size\r\n            const imageData = canvas.toDataURL('image/jpeg', 0.9);\r\n\r\n            // A4 size dimensions in mm\r\n            const pdfWidth = 210;\r\n            const pdfHeight = 297;\r\n\r\n            const pdf = new jsPDF({\r\n                orientation: 'portrait',\r\n                unit: 'mm',\r\n                format: 'a4'\r\n            });\r\n\r\n            // Adjust PDF compression settings\r\n            const options = {\r\n                imageCompression: 'JPEG',\r\n                imageQuality: 1, // Fine-tune this value as well\r\n            };\r\n\r\n            const imgProps = pdf.getImageProperties(imageData);\r\n            const pdfWidthFit = pdfWidth;\r\n            const pdfHeightFit = (imgProps.height * pdfWidthFit) / imgProps.width;\r\n\r\n            pdf.addImage(imageData, 'JPEG', 0, 0, pdfWidthFit, pdfHeightFit, undefined, 'FAST', 0, options);\r\n\r\n            // Filename logic\r\n            selectedChatData.stepIndicator.value < 3 ?\r\n                pdf.save(`Proforma Invoice (${invoiceData.carData.carName} [${invoiceData.carData.referenceNumber}]) (A4 Paper Size).pdf`) :\r\n                pdf.save(`Invoice No. ${invoiceData.id} (A4 Paper Size).pdf`);\r\n        } else {\r\n            console.error(\"No element to capture\");\r\n        }\r\n    };\r\n\r\n\r\n    const handleCaptureAndCreatePDF = async () => {\r\n        const capturedImageUri = await captureImage();\r\n        if (capturedImageUri) {\r\n            await createPDF(capturedImageUri);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\r\n        const dueDateString = invoiceData.bankInformations.dueDate;\r\n        const issuingDateObject = new Date(issuingDateString);\r\n        const dueDateObject = new Date(dueDateString);\r\n\r\n\r\n        const options = {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        };\r\n\r\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\r\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\r\n\r\n    }\r\n\r\n    const originalWidth = 794;\r\n    const originalHeight = 1123;\r\n\r\n    const newWidth = 2480;\r\n    const newHeight = 3508;\r\n\r\n    const widthScaleFactor = newWidth / originalWidth;\r\n    const heightScaleFactor = newHeight / originalHeight;\r\n\r\n    const openImage = () => {\r\n        if (Platform.OS === 'web') {\r\n            const imageWindow = window.open();\r\n            imageWindow.document.write(`\r\n                <style>\r\n                    body {\r\n                        margin: 0;\r\n                        display: flex;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                        height: 100vh;\r\n                        overflow: hidden;\r\n                    }\r\n                    img {\r\n                        width: 595px;\r\n                        height: 842px;\r\n                        object-fit: contain;\r\n                        transition: transform 0.25s ease;\r\n                        cursor: zoom-in; /* Set cursor to magnifying glass */\r\n                    }\r\n                    .zoomed {\r\n                        transform: scale(3);\r\n                        transform-origin: center;\r\n                        cursor: zoom-out; /* Change cursor to indicate zooming out */\r\n                    }\r\n                </style>\r\n                <img id=\"zoomableImage\" src=\"${capturedImageUri}\" alt=\"Base64 Image\" draggable=\"false\" />\r\n                <script>\r\n                    const image = document.getElementById('zoomableImage');\r\n    \r\n                    image.addEventListener('mousedown', function(e) {\r\n                        const rect = this.getBoundingClientRect();\r\n                        const x = e.clientX - rect.left;\r\n                        const y = e.clientY - rect.top;\r\n    \r\n                        // Set the transform origin to the mouse position\r\n                        this.style.transformOrigin = \\`\\${x}px \\${y}px\\`;\r\n                        this.classList.add('zoomed');\r\n                    });\r\n    \r\n                    document.addEventListener('mouseup', function() {\r\n                        image.classList.remove('zoomed');\r\n                    });\r\n                </script>\r\n            `);\r\n        } else {\r\n            console.log('This feature is only available in a web environment');\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <> {invoiceData && Object.keys(invoiceData).length > 0 &&\r\n\r\n            <>{!selectedChatData.isCancelled && <Pressable\r\n                onPress={handlePreviewInvoiceModalOpen}\r\n                focusable={false}\r\n                variant='ghost'\r\n                onHoverIn={hoverPreviewIn}\r\n                onHoverOut={hoverPreviewOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isPreviewHovered ? '#0772ad' : '#0A8DD5',\r\n                }}>\r\n\r\n                {selectedChatData.invoiceNumber && selectedChatData.stepIndicator.value > 2 ?\r\n                    <Text style={{ fontWeight: 700, color: 'white', }}>\r\n                        {`Preview Invoice No. ${selectedChatData.invoiceNumber}`}\r\n                    </Text>\r\n                    :\r\n                    <Text style={{ fontWeight: 700, color: 'white', }}>\r\n                        {`Preview Invoice`}\r\n                    </Text>}\r\n            </Pressable>}\r\n\r\n                <Modal\r\n                    isOpen={previewInvoiceVisible}\r\n                    onClose={() => {\r\n                        handlePreviewInvoiceModalClose();\r\n                    }}\r\n                    size={'full'}\r\n                    useRNModal\r\n                >\r\n                    <View style={{ flexDirection: 'row', margin: 2, }}>\r\n                        <Pressable onPress={() => {\r\n                            capturedImageUri && vehicleImageUri ? handleCaptureAndCreatePDF() : null;\r\n                        }}\r\n                            style={{ justifyContent: 'center', flexDirection: 'row', padding: 5, borderRadius: 5, backgroundColor: '#16A34A', }}>\r\n                            <MaterialCommunityIcons size={20} name='download' color='white' />\r\n                            <Text style={{ color: 'white', }}>Download as PDF</Text>\r\n                        </Pressable>\r\n\r\n                        <Pressable\r\n                            onPress={() => {\r\n                                capturedImageUri && vehicleImageUri ? openImage() : null;\r\n                            }}\r\n                            style={{ position: 'absolute', top: -2, right: -380, flexDirection: 'row', padding: 5, borderRadius: 5, backgroundColor: '#0A8DD5', }}>\r\n                            <Entypo size={20} name='images' color='white' />\r\n                            <Text style={{ color: 'white', }}>View Image</Text>\r\n                        </Pressable>\r\n                    </View>\r\n                    <Modal.CloseButton />\r\n                    {previewInvoiceVisible &&\r\n                        <ScrollView\r\n                            style={{ maxHeight: screenWidth < 960 ? 480 : 720, maxWidth: screenWidth < 960 ? 320 : 900 }}\r\n                        >\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                right: 0,\r\n                                left: 0,\r\n                                backgroundColor: 'white',\r\n                                zIndex: 999,\r\n                                flex: 1,\r\n                                alignItems: 'center', // Center horizontally\r\n                            }}>\r\n                                {capturedImageUri && vehicleImageUri ? (\r\n                                    <NativeImage\r\n                                        source={{ uri: capturedImageUri }}\r\n                                        style={{\r\n                                            marginTop: 5,\r\n                                            width: screenWidth < 960 ? 320 : 595,\r\n                                            height: screenWidth < 960 ? 480 : 842,\r\n                                            resizeMode: 'stretch',\r\n                                            borderWidth: 1,\r\n                                            borderColor: '#DADDE1',\r\n                                        }}\r\n                                    />\r\n                                ) : (<Spinner size={'lg'} color={'#0A9FDC'} style={{ alignSelf: 'center', paddingTop: 80 * heightScaleFactor, }} />)}\r\n                            </View>\r\n\r\n                            {/* Main content with invoice details */}\r\n                            {vehicleImageUri !== '' &&\r\n                                <View ref={invoiceRef} style={{ width: 2480, height: 3508, backgroundColor: 'white', zIndex: 1 }}>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        <NativeImage\r\n                                            source={require('../../assets/RMJ logo for invoice.png')}\r\n                                            style={{\r\n                                                width: 95 * widthScaleFactor,\r\n                                                height: 85 * heightScaleFactor,\r\n                                                resizeMode: 'stretch',\r\n                                            }}\r\n                                        />\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * heightScaleFactor }}>\r\n                                        {/* Title */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`PROFORMA INVOICE`}</Text> :\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`INVOICE`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        {/* QR CODE */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <QRCode\r\n                                                value={invoiceData.cryptoNumber}\r\n                                                size={80 * widthScaleFactor}\r\n                                                color=\"black\"\r\n                                                backgroundColor=\"white\"\r\n                                            />\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 34 * heightScaleFactor }}>\r\n                                        {/* Invoice Number */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Invoice No. RMJ-${invoiceData.id}`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 34 * heightScaleFactor, }}>\r\n                                            {/* Issuing Date */}\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                                            </View>\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#F00A0A', }}>{`Valid Until: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 49 * heightScaleFactor, flexDirection: 'row' }}>\r\n                                            {/* Issuing Date */}\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                            <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                                        </View>\r\n                                    }\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 40 * widthScaleFactor,\r\n                                        top: 134 * heightScaleFactor,\r\n                                        maxWidth: 300 * widthScaleFactor,\r\n                                    }}>\r\n                                        {/* Shipper */}\r\n                                        <Text style={{\r\n                                            fontWeight: 750,\r\n                                            fontSize: 16 * widthScaleFactor,\r\n                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                            width: 'fit-content', // Make the underline cover the text width\r\n                                            marginBottom: 5, // Add some space between text and underline\r\n                                        }}>\r\n                                            {`Shipper`}\r\n                                        </Text>\r\n                                        <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: +81565850606`}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped From:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.departurePort}, ${invoiceData.departureCountry}`}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped To:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.discharge.port}, ${invoiceData.discharge.country}`}</Text>\r\n                                        {invoiceData.placeOfDelivery && invoiceData.placeOfDelivery !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Place of Delivery:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.placeOfDelivery}`}</Text>\r\n                                            </>\r\n                                            : null}\r\n                                        {invoiceData.cfs && invoiceData.cfs !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`CFS:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.cfs}`}</Text>\r\n                                            </>\r\n                                            : null}\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', width: 715 * widthScaleFactor, }}>\r\n\r\n                                            <View style={{\r\n                                                flex: 1, width: 280 * widthScaleFactor,\r\n                                            }}>\r\n                                                {/* Buyer Information */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#0A78BE',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#0A78BE',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n\r\n                                                }}>\r\n                                                    {`Buyer Information`}\r\n                                                </Text>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.name}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.address}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.email}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.contactNumber}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${invoiceData.consignee.fax == '' ? 'N/A' : invoiceData.consignee.fax}`}</Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, paddingLeft: 20 * widthScaleFactor, width: 280 * widthScaleFactor, }}>\r\n                                                {/* Notify Party */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#FF0000',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#FF0000',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n                                                }}>\r\n                                                    {`Notify Party`}\r\n                                                </Text>\r\n                                                {invoiceData.notifyParty.sameAsConsignee == true ? (\r\n                                                    <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\r\n                                                    (<>\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.name}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.address}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.email}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.contactNumber}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${invoiceData.notifyParty.fax == '' ? 'N/A' : invoiceData.notifyParty.fax}`}</Text>\r\n                                                    </>)}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n\r\n                                    </View>\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#FF5C00', height: 194 * heightScaleFactor, }}>\r\n                                            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                <Entypo size={50 * widthScaleFactor} name='warning' color={'#FF0000'} />\r\n                                                <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#FF0000', marginLeft: 20 * widthScaleFactor, }}>{`Bank Information will be provided after placing an order.`}</Text>\r\n                                            </View>\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#1ABA3D', }}>\r\n\r\n                                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * widthScaleFactor, marginBottom: 5 * heightScaleFactor, }}>\r\n                                                <View style={{ flex: 1, marginRight: 50 * widthScaleFactor, }}>\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Bank Account`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Bank Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Branch Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`SWIFTCODE: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Address: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Name of Account Holder: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Account Number: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View style={{ flex: 1 }}>\r\n\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Payment Terms`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Terms: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <View style={{ paddingTop: 30 * heightScaleFactor, }}>\r\n\r\n                                                        <Text style={{\r\n                                                            fontWeight: 750,\r\n                                                            fontSize: 14 * widthScaleFactor,\r\n                                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                            width: 'fit-content', // Make the underline cover the text width\r\n                                                            marginBottom: 2, // Add some space between text and underline\r\n                                                            color: '#F00A0A',\r\n                                                            borderBottomColor: '#F00A0A',\r\n                                                        }}>\r\n                                                            {`Payment Due`}\r\n                                                        </Text>\r\n\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#F00A0A', lineHeight: 14 * widthScaleFactor }}>{`Due Date: `}\r\n                                                            <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, color: 'black', lineHeight: 14 * widthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                                        </Text>\r\n\r\n                                                    </View>\r\n\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                        </View>}\r\n\r\n\r\n\r\n                                    {/* <View style={{ position: 'absolute', left: 260 * widthScaleFactor, top: 335 * heightScaleFactor }}>\r\n\r\n                                        <View style={{ flexDirection: 'row' }}>\r\n                                            {vehicleImageUri ? (\r\n                                                <NativeImage\r\n                                                    source={{ uri: vehicleImageUri }}\r\n                                                    style={{\r\n                                                        width: 99 * widthScaleFactor,\r\n                                                        height: 70 * heightScaleFactor,\r\n                                                        resizeMode: 'stretch',\r\n                                                    }}\r\n                                                />\r\n                                            ) : (\r\n                                                <View\r\n                                                    style={{\r\n                                                        width: 99 * widthScaleFactor,\r\n                                                        height: 70 * heightScaleFactor,\r\n                                                        backgroundColor: '#e0e0e0',\r\n                                                        marginRight: 12,\r\n                                                    }}\r\n                                                />\r\n                                            )}\r\n                                            <View style={{ flex: 1, top: -2 * heightScaleFactor, marginLeft: 5 * widthScaleFactor, height: 59 * heightScaleFactor }}>\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 14 * widthScaleFactor, lineHeight: 16 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.carName}`}\r\n                                                </Text>\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Reference No.: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${invoiceData.carData.referenceNumber}`}\r\n                                                    </Text>\r\n                                                </Text>\r\n\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Year/Month: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${invoiceData.carData.regYear}/${invoiceData.carData.regMonth}`}\r\n                                                    </Text>\r\n                                                </Text>\r\n\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Mileage: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km`}\r\n                                                    </Text>\r\n                                                </Text>\r\n\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Chassis No.: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${invoiceData.carData.chassisNumber}`}\r\n                                                    </Text>\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 260 * widthScaleFactor, top: 410 * heightScaleFactor, flexDirection: 'row', width: 495 * widthScaleFactor, }}>\r\n                                        <View style={{ flex: 1 }}>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Model Code: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.modelCode}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Fuel: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.fuel}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Transmission: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.transmission}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Steering: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.steering}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Displacement: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc`}\r\n                                                </Text>\r\n                                            </Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1 }}>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Doors: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.doors ? invoiceData.carData.doors : 'N/A'}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Drive Type: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.driveType ? invoiceData.carData.driveType : 'N/A'}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Exterior Color: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.exteriorColor}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Number of Seats: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.numberOfSeats ? invoiceData.carData.numberOfSeats : 'N/A'}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Body Type: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.bodyType}`}\r\n                                                </Text>\r\n                                            </Text>\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 260 * widthScaleFactor, top: 484 * heightScaleFactor, width: 495 * widthScaleFactor, }}>\r\n                                        <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginBottom: 3 * heightScaleFactor, }}>\r\n                                            {`Features: `}\r\n                                        </Text>\r\n\r\n                                        <InvoiceFeatures widthScaleFactor={widthScaleFactor} heightScaleFactor={heightScaleFactor} />\r\n\r\n                                    </View> */}\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 38 * widthScaleFactor,\r\n                                        top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * heightScaleFactor : 537 * heightScaleFactor,\r\n                                        width: 718 * widthScaleFactor,\r\n                                        borderWidth: 1 * widthScaleFactor,\r\n                                        borderColor: '#C2E2F4',\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Description`}\r\n                                                </Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Notes`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Quantity`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Amount`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {`FOB`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {`$${Math.round(Number(invoiceData.paymentDetails.fobPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {`Freight`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {`$${Math.round(Number(invoiceData.paymentDetails.freightPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                                </Text>}\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <>\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                marginLeft: 2 * widthScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                                        </Text>\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                marginLeft: 2 * widthScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.incoterms == \"CIF\" ? ` + Insurance` : ' '}\r\n                                                        </Text>\r\n                                                    </>\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? `Insurance` : ' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                        }}>\r\n                                                        {' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n\r\n                                            </View>\r\n\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                </Text>}\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.incoterms === \"CIF\" ? ` + $${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                        </Text>\r\n                                                    </Text>\r\n\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? `$${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n                                            </View>\r\n\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 ? `${invoiceData.paymentDetails.additionalName.join(' + ')}` : ' '}\r\n                                                </Text>}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\r\n                                                        ? invoiceData.paymentDetails.additionalPrice.map(price =>\r\n                                                            `$${parseFloat(price).toLocaleString('en-US', {\r\n                                                                style: 'currency',\r\n                                                                currency: 'USD',\r\n                                                                minimumFractionDigits: 0,\r\n                                                                maximumFractionDigits: 0\r\n                                                            }).slice(1)}`\r\n                                                        ).join(' + ')\r\n                                                        : ' '}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                paddingVertical: 2 * heightScaleFactor,\r\n\r\n                                            }}>\r\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                        {\"Used Vehicle\\n\"}\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.carName}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.chassisNumber}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.exteriorColor}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.fuel}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.transmission}\\n`}\r\n                                                        </Text>\r\n                                                    </Text>\r\n\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.incoterms && invoiceData.discharge.port && invoiceData.discharge ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                        {`${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}`}\r\n                                                    </Text>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 1,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                        {'1'}\r\n                                                    </Text>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                justifyContent: 'center',\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\r\n                                                    <>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            color: '#008AC6',\r\n                                                            marginRight: 10 * widthScaleFactor,\r\n                                                            top: 51 * heightScaleFactor,\r\n                                                            left: 50 * widthScaleFactor,\r\n                                                            position: 'absolute',\r\n                                                        }}>\r\n                                                            {\"Total\"}\r\n                                                            <Text style={{\r\n                                                                fontWeight: 700,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                alignSelf: 'center',\r\n                                                                color: '#00720B',\r\n                                                                marginLeft: 5 * widthScaleFactor,\r\n                                                            }}>\r\n                                                                {`$${invoiceData.paymentDetails.totalAmount}`}\r\n                                                            </Text>\r\n                                                        </Text>\r\n\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 825 * heightScaleFactor, width: 350 * widthScaleFactor, }}>\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Payment Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'No warranty service is provided on used vehicles.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Conditions for order cancellation:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Intermediary Banking Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Swift code: SMBCUS33'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Address: 277 Park Avenue'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'City: New York, NY'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Postal Code: 10172'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Country: United States'}\r\n                                        </Text>\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ? null :\r\n                                        <View style={{ position: 'absolute', right: 39 * widthScaleFactor, top: 835 * heightScaleFactor, width: 300 * widthScaleFactor, }}>\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 80 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n                                                <NativeImage\r\n                                                    source={require('../../assets/RMJ Invoice Signature with Hanko.png')}\r\n                                                    style={{\r\n                                                        width: 276 * widthScaleFactor,\r\n                                                        height: 81 * heightScaleFactor,\r\n                                                        resizeMode: 'contain',\r\n                                                        alignSelf: 'center',\r\n                                                        marginBottom: 0, // Minimize margin to keep the line close\r\n                                                    }}\r\n                                                />\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Real Motor Japan'}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 5 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Your Signature'}\r\n                                                </Text>\r\n                                            </View>\r\n                                        </View>}\r\n\r\n\r\n                                </View>}\r\n\r\n\r\n                        </ScrollView>\r\n\r\n                    }\r\n\r\n                </Modal>\r\n            </>\r\n        }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst ReopenTransaction = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData)\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData)\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isYesHovered, setIsYesHovered] = useState(false);\r\n    const [isNoHovered, setIsNoHovered] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n\r\n    const yesHoverIn = () => setIsYesHovered(true);\r\n    const yesHoverOut = () => setIsYesHovered(false);\r\n\r\n    const noHoverIn = () => setIsNoHovered(true);\r\n    const noHoverOut = () => setIsNoHovered(false);\r\n\r\n    const handleModalOpen = () => {\r\n        setIsModalVisible(true);\r\n\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setIsModalVisible(false);\r\n\r\n    }\r\n\r\n\r\n    const reopenTransactionMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `The transaction has been reopened by the seller.`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `The transaction has been reopened by the seller.`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const handleReopenTransaction = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeEmail = moment(datetime).format('MMMM D, YYYY');\r\n\r\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n        const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\r\n        const docRefVehicle = doc(projectExtensionFirestore, \"VehicleProducts\", selectedChatData.carData.stockID);\r\n\r\n        setIsYesLoading(true);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                'isCancelled': false, // Update the specific field\r\n                'orderPlaced': true\r\n            });\r\n            try {\r\n                await updateDoc(docRefChatId, {\r\n                    'isCancelled': false // Update the specific field\r\n                });\r\n\r\n                try {\r\n                    await updateDoc(docRefVehicle, {\r\n                        'stockStatus': 'Reserved', // Update the specific field\r\n                        'reservedTo': selectedCustomerData.textEmail,\r\n                    });\r\n                } catch (error) {\r\n                    console.error(\"Error updating document: \", error);\r\n                }\r\n                await reopenTransactionMessage();\r\n\r\n                setIsYesLoading(false);\r\n                console.log(\"Document successfully updated\");\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n            console.log(\"Document successfully updated\");\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#0772ad' : '#0A8DD5',\r\n                    padding: 10,\r\n                }}>\r\n\r\n                <MaterialCommunityIcons name='restart' size={15} color={'white'} />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Reopen Transaction`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={isModalVisible}\r\n                onClose={() => {\r\n                    handleModalClose()\r\n                }}\r\n\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.Header>Reopen Transaction</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to reopen the transaction?\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onPress={handleModalClose}\r\n                                onHoverIn={noHoverIn}\r\n                                onHoverOut={noHoverOut}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isNoHovered ? '#3F3F46' : '#52525B',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text color={'white'} style={{ fontWeight: 700, }}>No</Text>\r\n                            </Pressable>\r\n\r\n                            <View style={{ flex: 1 }} />\r\n\r\n                            <Pressable\r\n                                onPress={handleReopenTransaction}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onHoverIn={yesHoverIn}\r\n                                onHoverOut={yesHoverOut}\r\n                                disabled={isYesLoading}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isYesHovered ? '#0772ad' : '#0A8DD5',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {!isYesLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Yes</Text> : <Spinner size={'sm'} color={'white'} />}\r\n                            </Pressable>\r\n                        </View>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst CancelTransaction = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData)\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData)\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isYesHovered, setIsYesHovered] = useState(false);\r\n    const [isNoHovered, setIsNoHovered] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n\r\n    const yesHoverIn = () => setIsYesHovered(true);\r\n    const yesHoverOut = () => setIsYesHovered(false);\r\n\r\n    const noHoverIn = () => setIsNoHovered(true);\r\n    const noHoverOut = () => setIsNoHovered(false);\r\n\r\n    const handleModalOpen = () => {\r\n        setIsModalVisible(true);\r\n\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setIsModalVisible(false);\r\n\r\n    }\r\n\r\n\r\n    const sendEmail = async (to, subject, htmlContent) => {\r\n        try {\r\n            const response = await fetch('https://rmjsmtp.duckdns.org/emailServer/send-email', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    to,\r\n                    subject,\r\n                    htmlContent,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Email sent successfully');\r\n            } else {\r\n                console.error('Failed to send email');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error sending email:', error);\r\n        }\r\n    };\r\n\r\n    const htmlContent = `<html><head>\r\n    <title>Transaction Cancellation Notice</title>\r\n    <style>\r\n        body {\r\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n            background-color: #f4f4f4;\r\n            color: #333;\r\n            padding: 10px;\r\n            margin: 0;\r\n        }\r\n        .container {\r\n            background-color: #fff;\r\n            border-radius: 8px;\r\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n            margin: 20px auto;\r\n            max-width: 600px;\r\n            padding: 20px;\r\n        }\r\n        .highlight-red {\r\n            color: #FF0000; /* Red */\r\n            font-weight: bold;\r\n        }\r\n        .highlight-bold {\r\n            font-weight: bold;\r\n        }\r\n        p {\r\n            font-size: 16px;\r\n            line-height: 1.6;\r\n            margin: 10px 0 20px;\r\n        }\r\n        .signature {\r\n            font-weight: bold;\r\n            margin-top: 40px;\r\n            text-align: left;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <p><strong>Dear Valued Customer,</strong></p>\r\n\r\n        <p>I hope this message finds you well.</p>\r\n        \r\n        <p>I wanted to inform you that unfortunately, due to the non-receipt of payment for <span class=\"highlight-bold\">Invoice No. <span class=\"highlight-red\">${selectedChatData.invoiceNumber}</span></span> by the due date, </p>\r\n\r\n        <p>We had to proceed with the <span class=\"highlight-red\">cancellation of the transaction.</span></p>\r\n\r\n        <p>We understand that unforeseen circumstances can arise, and we're here to discuss any concerns or possible ways to support you moving forward.</p>\r\n\r\n        <p>Please reach out if you have any questions or require assistance.</p>\r\n\r\n        <p>Thank you for your understanding.</p>\r\n        \r\n        <p class=\"signature\">Best regards,<br>Real Motor Japan</p>\r\n    </div>\r\n\r\n</body></html>`;\r\n\r\n    const cancelTransactionMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `The transaction has been cancelled.`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `The transaction has been cancelled.`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const handleCancelTransaction = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeEmail = moment(datetime).format('MMMM D, YYYY');\r\n\r\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n        const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\r\n        const docRefVehicle = doc(projectExtensionFirestore, \"VehicleProducts\", selectedChatData.carData.stockID);\r\n\r\n        setIsYesLoading(true);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                'isCancelled': true, // Update the specific field\r\n                'orderPlaced': false\r\n            });\r\n            try {\r\n                await updateDoc(docRefChatId, {\r\n                    'isCancelled': true // Update the specific field\r\n                });\r\n\r\n                try {\r\n                    await updateDoc(docRefVehicle, {\r\n                        'stockStatus': 'On-Sale', // Update the specific field\r\n                        'reservedTo': ''\r\n                    });\r\n                } catch (error) {\r\n                    console.error(\"Error updating document: \", error);\r\n                }\r\n                await cancelTransactionMessage();\r\n\r\n                await sendEmail(selectedCustomerData.textEmail, `Transaction Cancelled | Real Motor Japan | Invoice No. ${selectedChatData.invoiceNumber}  (${formattedTimeEmail})`, htmlContent);\r\n\r\n                setIsYesLoading(false);\r\n                console.log(\"Document successfully updated\");\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n            console.log(\"Document successfully updated\");\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#AAAAAA' : '#CCCCCC',\r\n                }}\r\n            >\r\n                <MaterialIcons name='cancel' size={15} color={'#52525B'} />\r\n                <Text color={'#52525B'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Cancel Transaction`}</Text>\r\n            </Pressable>\r\n\r\n\r\n            <Modal\r\n                isOpen={isModalVisible}\r\n                onClose={() => {\r\n                    handleModalClose()\r\n                }}\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.Header>Cancel Transaction</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to cancel the transation?\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onPress={handleModalClose}\r\n                                onHoverIn={noHoverIn}\r\n                                onHoverOut={noHoverOut}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isNoHovered ? '#3F3F46' : '#52525B',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text color={'white'} style={{ fontWeight: 700, }}>No</Text>\r\n                            </Pressable>\r\n\r\n                            <View style={{ flex: 1 }} />\r\n\r\n                            <Pressable\r\n                                onPress={handleCancelTransaction}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onHoverIn={yesHoverIn}\r\n                                onHoverOut={yesHoverOut}\r\n                                disabled={isYesLoading}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isYesHovered ? '#800101' : '#FF0000',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {!isYesLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Yes</Text> : <Spinner size={'sm'} color={'white'} />}\r\n                            </Pressable>\r\n                        </View>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst ExtendDueDateButton = () => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [isConfirmHovered, setIsConfirmHovered] = useState(false);\r\n    const [isCancelHovered, setIsCancelHovered] = useState(false);\r\n    const [selectedDueDate, setSelectedDueDate] = useState('');\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    let invoiceSelectedDueDate = '';\r\n\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n\r\n    const confirmHoverIn = () => setIsConfirmHovered(true);\r\n    const confirmHoverOut = () => setIsConfirmHovered(false);\r\n\r\n    const cancelHoverIn = () => setIsCancelHovered(true);\r\n    const cancelHoverOut = () => setIsCancelHovered(false);\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleModalOpen = () => {\r\n        setModalVisible(true);\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n    }\r\n\r\n    const handleConfirm = async () => {\r\n\r\n        try {\r\n            await confirmExtendDueDate();\r\n            handleModalClose();\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const extendDueDateMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `The due date has been changed to ${selectedDueDate\r\n                    ? new Date(selectedDueDate).toLocaleDateString(undefined, {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric',\r\n                    })\r\n                    : 'Invalid Date'\r\n                    }`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `The due date has been changed to ${selectedDueDate\r\n                    ? new Date(selectedDueDate).toLocaleDateString(undefined, {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric',\r\n                    })\r\n                    : 'Invalid Date'\r\n                    }`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const confirmExtendDueDate = async () => {\r\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n        setIsConfirmLoading(true);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                'bankInformations.dueDate': selectedDueDate // Update the specific field\r\n            });\r\n            await extendDueDateMessage();\r\n            setIsConfirmLoading(false);\r\n            console.log(\"Document successfully updated\");\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n    };\r\n\r\n    const ModalCalendar = ({ selectedDate, setSelectedDate, currentDate }) => {\r\n\r\n        const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n        const handleModalCalendarOpen = () => {\r\n            setModalCalendarVisible(true);\r\n        };\r\n\r\n        const handleModalCalendarClose = () => {\r\n            setModalCalendarVisible(false);\r\n        };\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n                <Pressable style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onPress={handleModalCalendarOpen}>\r\n                    <Text style={{ flex: 1, }} >{selectedDate}</Text>\r\n                </Pressable>\r\n\r\n                <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Content>\r\n                        <View style={{ height: '100%', flex: 1 }}>\r\n                            <Calendar\r\n                                onDayPress={useCallback(day => {\r\n                                    setSelectedDate(day.dateString);\r\n                                    invoiceSelectedDueDate = day.dateString;\r\n                                    globalInvoiceVariable.bankInformations.dueDate = day.dateString;\r\n                                    handleModalCalendarClose();\r\n                                }, [])}\r\n                                markedDates={{\r\n                                    [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n                                }}\r\n                                renderArrow={(direction) => (\r\n                                    direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n                                )}\r\n                                enableSwipeMonths={true}\r\n                                initialDate={selectedDate}\r\n                                // minDate={currentDate}\r\n                                showSixWeeks />\r\n\r\n                        </View>\r\n\r\n                    </Modal.Content>\r\n\r\n                </Modal>\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (currentDate) {\r\n            const date = new Date(currentDate);\r\n\r\n            // Check the day of the week\r\n            const dayOfWeek = date.getDay();\r\n\r\n            if (dayOfWeek === 5) { // Friday\r\n                date.setDate(date.getDate() + 3); // Add 3 days to reach Monday\r\n            } else if (dayOfWeek === 6) { // Saturday\r\n                date.setDate(date.getDate() + 2); // Add 2 days to reach Monday\r\n            } else {\r\n                date.setDate(date.getDate() + 1); // Sunday to Thursday, add 1 day\r\n            }\r\n\r\n            // Format the date back to string\r\n            const adjustedDate = date.toISOString().split('T')[0];\r\n            setSelectedDueDate(adjustedDate);\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#a8720a' : '#D38F0D',\r\n                }}\r\n            >\r\n                <FontAwesome name='calendar-plus-o' size={15} color={'white'} />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Extend Due Date`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={modalVisible}\r\n                onClose={handleModalClose}\r\n                useRNModal\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.Header >Extend Due Date</Modal.Header>\r\n                    <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                        <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Due Date:</Text>\r\n                        <ModalCalendar currentDate={currentDate} selectedDate={selectedDueDate} setSelectedDate={setSelectedDueDate} />\r\n                    </View>\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onPress={handleModalClose}\r\n                                onHoverIn={cancelHoverIn}\r\n                                onHoverOut={cancelHoverOut}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isCancelHovered ? '#3F3F46' : '#52525B',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text color={'white'} style={{ fontWeight: 700, }}>Cancel</Text>\r\n                            </Pressable>\r\n\r\n                            <View style={{ flex: 1 }} />\r\n\r\n                            <Pressable\r\n                                onPress={handleConfirm}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onHoverIn={confirmHoverIn}\r\n                                onHoverOut={confirmHoverOut}\r\n                                disabled={isConfirmLoading}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isConfirmHovered ? '#0f7534' : '#16A34A',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {!isConfirmLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Confirm</Text> : <Spinner size={'sm'} color={'white'} />}\r\n                            </Pressable>\r\n                        </View>\r\n\r\n\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nconst TransactionModal = () => {\r\n    const transactionModalVisible = useSelector((state) => state.transactionModalVisible);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleTransactionModalClose = () => {\r\n        dispatch(setTransactionModalVisible(false));\r\n    }\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={transactionModalVisible}\r\n            onClose={() => {\r\n                handleTransactionModalClose()\r\n            }}\r\n            size={'lg'}\r\n            useRNModal\r\n        >\r\n            {transactionModalVisible &&\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n\r\n                    <Modal.Header style={{ borderBottomWidth: 2, borderColor: '#0A9FDC', }} >{transactionModalTitle}</Modal.Header>\r\n\r\n                    {transactionModalContentValue == 1 || transactionModalContentValue == 2 &&\r\n                        <IssueProformaInvoiceModalContent />\r\n                    }\r\n\r\n                    {transactionModalContentValue == 3 &&\r\n                        <ConfirmPaymentModalContent />\r\n                    }\r\n                </Modal.Content>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst TransactionButton = ({ title, buttonValue, transactionValue, colorHoverIn, colorHoverOut }) => {\r\n\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleTransactionModalOpen = () => {\r\n        dispatch(setTransactionModalVisible(true));\r\n        transactionModalTitle = title;\r\n        transactionModalContentValue = transactionValue;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleTransactionModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? colorHoverIn : colorHoverOut,\r\n                }}\r\n            >\r\n                <FastImage\r\n                    source={{\r\n                        uri: require(`../../assets/chat_step/chat_step_${buttonValue}_on.png`),\r\n                        priority: FastImage.priority.normal\r\n                    }}\r\n                    style={{\r\n                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                        width: 15,\r\n                        height: 15,\r\n                        alignSelf: 'center',\r\n                    }}\r\n                    resizeMode={FastImage.resizeMode.stretch}\r\n                />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{title}</Text>\r\n            </Pressable>\r\n\r\n        </>\r\n\r\n    );\r\n};\r\n\r\n\r\nconst TransactionList = ({ displayedTransactions, handleChatPress, selectedCustomerData }) => {\r\n    // Assuming an environment that supports onMouseEnter and onMouseLeave\r\n    return (\r\n        Array.isArray(selectedCustomerData.transactions) && selectedCustomerData.transactions.length > 0 ? (\r\n            displayedTransactions.map((transaction, index) => {\r\n                const [isHovered, setIsHovered] = useState(false); // This won't work as expected due to scope\r\n\r\n                return (\r\n                    <Pressable\r\n                        key={index}\r\n                        onPress={() => handleChatPress(`chat_${transaction.stockId}_${selectedCustomerData.textEmail}`)}\r\n                        onMouseEnter={() => setIsHovered(true)} // These events are not native to React Native\r\n                        onMouseLeave={() => setIsHovered(false)}\r\n                        style={{\r\n                            marginBottom: 15,\r\n                            backgroundColor: isHovered ? '#F2F2F2' : '#FFFFFF', // Change color on hover\r\n                            borderRadius: 10,\r\n                            shadowColor: '#000',\r\n                            shadowOffset: { width: 0, height: 2 },\r\n                            shadowOpacity: 0.1,\r\n                            shadowRadius: 2,\r\n                            elevation: 3,\r\n                            padding: 5,\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: '#eee',\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <View>\r\n                            <FastImage\r\n                                source={{ uri: transaction.imageUrl, priority: FastImage.priority.normal }}\r\n                                style={{\r\n                                    width: 60,\r\n                                    height: 60,\r\n                                    borderRadius: 30,\r\n                                    alignSelf: 'center',\r\n                                    margin: 10,\r\n                                }}\r\n                                resizeMode={FastImage.resizeMode.stretch}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                <Text style={{ color: '#0A78BE' }} selectable={false}>\r\n                                    {transaction.carName}\r\n                                </Text>\r\n                            </Text>\r\n                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                <Text style={{ color: '#333' }} selectable={false}>{transaction.referenceNumber}</Text>\r\n                            </Text>\r\n                        </View>\r\n                    </Pressable>\r\n                );\r\n            })\r\n        ) : (\r\n            <Text style={{ fontWeight: 'bold', alignSelf: 'center' }} italic>No history to show</Text>\r\n        )\r\n    );\r\n};\r\n\r\nconst TransactionHistoryModal = () => {\r\n\r\n    const [transactionHistoryVisible, setTransactionHistoryVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const navigate = useNavigate();\r\n    const [displayedTransactions, setDisplayedTransactions] = useState(selectedCustomerData.transactions ? selectedCustomerData.transactions.slice(0, 5) : null);\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const hoverStyle = isHovered ? {\r\n        backgroundColor: '#E8EAF6', // Lighter background color on hover\r\n        // Any other style changes on hover\r\n    } : {};\r\n\r\n    const loadMorePayments = () => {\r\n        if (loadingMore) return; // Prevent multiple loads\r\n\r\n        setLoadingMore(true);\r\n        const nextItems = selectedCustomerData.transactions.slice(\r\n            displayedTransactions.length,\r\n            displayedTransactions.length + 5\r\n        );\r\n\r\n        setTimeout(() => { // Simulate network request\r\n            setDisplayedTransactions([...displayedTransactions, ...nextItems]);\r\n            setLoadingMore(false);\r\n        }, 500); // Adjust the timeout as needed\r\n    };\r\n\r\n    const handleTransactionHistoryModalOpen = () => {\r\n        setDisplayedTransactions(selectedCustomerData.transactions ? selectedCustomerData.transactions.slice(0, 5) : null);\r\n        setTransactionHistoryVisible(true);\r\n\r\n    };\r\n\r\n    const handleTransactionHistoryModalClose = () => {\r\n        setTransactionHistoryVisible(false);\r\n    };\r\n\r\n    const isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\r\n        return layoutMeasurement.height + contentOffset.y >= contentSize.height - 20;\r\n    };\r\n\r\n    const handleChatPress = (chatId) => {\r\n        const encryptedChatId = encryptData(chatId);\r\n        const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\r\n        // navigate(`/top/chat-messages/${encodedChatId}`);\r\n        const path = `/top/chat-messages/${encodedChatId}`;\r\n        // Construct the URL for hash-based routing\r\n        const baseUrl = window.location.origin + window.location.pathname;\r\n        const fullPath = `${baseUrl}#${path}`;\r\n        window.open(fullPath, '_blank');\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n\r\n            <Pressable onPress={handleTransactionHistoryModalOpen}>\r\n                <Text style={{ fontSize: screenWidth < 770 ? 10 : 14, color: '#0A78BE', textAlign: 'center', }} underline>\r\n                    {`View Transactions`}\r\n                </Text>\r\n            </Pressable>\r\n\r\n            <Modal isOpen={transactionHistoryVisible} onClose={handleTransactionHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ backgroundColor: 'white', textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Transactions History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView\r\n                            style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500 }}\r\n                            onScroll={({ nativeEvent }) => {\r\n                                if (isCloseToBottom(nativeEvent)) {\r\n                                    loadMorePayments();\r\n                                }\r\n                            }}\r\n                            scrollEventThrottle={400} // Adjust as needed\r\n                        >\r\n\r\n                            <TransactionList\r\n                                displayedTransactions={displayedTransactions}\r\n                                handleChatPress={handleChatPress}\r\n                                selectedCustomerData={selectedCustomerData}\r\n                            />\r\n\r\n                            <View style={{ height: 20, }}>\r\n                                {loadingMore && <Spinner size='sm' color=\"#7B9CFF\" />}\r\n                            </View>\r\n\r\n                        </ScrollView>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nconst PaymentHistoryModal = () => {\r\n\r\n    const [paymentHistoryVisible, setPaymentHistoryVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const sortedPayments = selectedCustomerData.paymentsHistory\r\n        ? [...selectedCustomerData.paymentsHistory].sort((a, b) => {\r\n            const dateA = new Date(a.date);\r\n            const dateB = new Date(b.date);\r\n            return dateB - dateA; // Sorts in descending order\r\n        })\r\n        : [];\r\n\r\n    const [displayedPayments, setDisplayedPayments] = useState(sortedPayments.slice(0, 5));\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n\r\n    const loadMorePayments = () => {\r\n        if (loadingMore) return; // Prevent multiple loads\r\n\r\n        setLoadingMore(true);\r\n        const nextItems = sortedPayments.slice(\r\n            displayedPayments.length,\r\n            displayedPayments.length + 5\r\n        );\r\n\r\n        setTimeout(() => { // Simulate network request\r\n            setDisplayedPayments([...displayedPayments, ...nextItems]);\r\n            setLoadingMore(false);\r\n        }, 500); // Adjust the timeout as needed\r\n    };\r\n\r\n    const handlePaymentHistoryModalOpen = () => {\r\n        setDisplayedPayments(sortedPayments.slice(0, 5));\r\n        setPaymentHistoryVisible(true);\r\n\r\n    };\r\n\r\n    const handlePaymentHistoryModalClose = () => {\r\n        setPaymentHistoryVisible(false);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function formatDate(dateString) {\r\n        // Remove ' at ' from the date string\r\n        const cleanedDateString = dateString.replace(' at ', ' ');\r\n        const date = new Date(cleanedDateString);\r\n\r\n        if (isNaN(date.getTime())) {\r\n            // Date is not valid\r\n            console.error(\"Invalid Date:\", dateString);\r\n            return \"Invalid Date\";\r\n        }\r\n\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        const year = date.getFullYear();\r\n        const month = months[date.getMonth()];\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n\r\n        let hours = date.getHours();\r\n        const minutes = date.getMinutes().toString().padStart(2, '0');\r\n        const ampm = hours >= 12 ? 'pm' : 'am';\r\n\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n\r\n        return `${year} ${month} ${day} at ${hours}:${minutes}${ampm}`;\r\n    }\r\n\r\n    const isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\r\n        return layoutMeasurement.height + contentOffset.y >= contentSize.height - 20;\r\n    };\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable onPress={handlePaymentHistoryModalOpen}>\r\n                <Text style={{ fontSize: screenWidth < 770 ? 10 : 14, color: '#0A78BE', textAlign: 'center', }} underline>\r\n                    {`View Payments History`}\r\n                </Text>\r\n            </Pressable>\r\n\r\n            <Modal isOpen={paymentHistoryVisible} onClose={handlePaymentHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ backgroundColor: 'white', textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Payment History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView\r\n                            style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500 }}\r\n                            onScroll={({ nativeEvent }) => {\r\n                                if (isCloseToBottom(nativeEvent)) {\r\n                                    loadMorePayments();\r\n                                }\r\n                            }}\r\n                            scrollEventThrottle={400} // Adjust as needed\r\n                        >\r\n                            {\r\n                                Array.isArray(sortedPayments) && sortedPayments.length > 0 ?\r\n                                    displayedPayments.map((payment, index) => (\r\n                                        <View key={index} style={{\r\n                                            marginBottom: 15,\r\n                                            backgroundColor: '#F8F9FF', // Card background color\r\n                                            borderRadius: 10, // Rounded corners for the card\r\n                                            shadowColor: '#000', // Shadow color\r\n                                            shadowOffset: { width: 0, height: 2 },\r\n                                            shadowOpacity: 0.1,\r\n                                            shadowRadius: 2,\r\n                                            elevation: 3, // Elevation for Android\r\n                                            padding: 15, // Padding inside the card\r\n                                            borderBottomWidth: 1,\r\n                                            borderBottomColor: '#eee',\r\n                                        }}>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Date: </Text>\r\n                                                <Text style={{ color: '#333' }}>\r\n                                                    {formatDate(sortedPayments[sortedPayments.length - 1 - index].date)}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Value: </Text>\r\n                                                <Text style={{ color: Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString().startsWith('-') ? '#FF0000' : '#16A34A' }}>\r\n                                                    ${Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString()}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Vehicle Name: </Text>\r\n                                                <Text style={{ color: '#333' }}>{sortedPayments[sortedPayments.length - 1 - index].vehicleName}</Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Reference Number: </Text>\r\n                                                <Text style={{ color: '#333' }}>{sortedPayments[sortedPayments.length - 1 - index].vehicleRef}</Text>\r\n                                            </Text>\r\n\r\n                                        </View>\r\n\r\n                                    )) :\r\n                                    <Text style={{ fontWeight: 'bold', alignSelf: 'center', }} italic>No history to show</Text>\r\n                            }\r\n                            <View style={{ height: 20, }}>\r\n                                {loadingMore && <Spinner size='sm' color=\"#7B9CFF\" />}\r\n                            </View>\r\n\r\n                        </ScrollView>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst CustomerProfileModal = () => {\r\n    const [customerModalVisible, setCustomerModalVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n    const handleModalOpen = () => {\r\n        setCustomerModalVisible(true);\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setCustomerModalVisible(false);\r\n    }\r\n\r\n    const totalPaymentValue = selectedCustomerData.paymentsHistory\r\n        ? selectedCustomerData.paymentsHistory.reduce((sum, payment) => {\r\n            const value = Number(payment.value);\r\n            return sum + (isNaN(value) ? 0 : value);\r\n        }, 0)\r\n        : 0;\r\n\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                onPress={handleModalOpen}\r\n                style={{ width: 'fit-content', }}\r\n            >\r\n                <Text style={{ fontWeight: 700, }} underline>{`${globalCustomerFirstName} ${globalCustomerLastName}`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={customerModalVisible}\r\n                onClose={handleModalClose}\r\n                size={'lg'}\r\n\r\n            >\r\n                <Modal.Content background={'white'}>\r\n\r\n                    <Modal.Body>\r\n\r\n                        <View\r\n                            style={{\r\n                                flex: 1,\r\n                                alignItems: 'center',\r\n                            }}>\r\n\r\n                            <View style={{\r\n                                borderRadius: 10,\r\n                                backgroundColor: '#F8F9FF',\r\n                                width: screenWidth < 770 ? '100%' : '90%',\r\n                                alignItems: 'center',\r\n                                paddingBottom: 15,\r\n\r\n                            }}>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < 770 ? 24 : 26, color: '#0A78BE', }} selectable>\r\n                                    {`${globalCustomerFirstName} ${globalCustomerLastName}`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontSize: screenWidth < 770 ? 12 : 14, color: '#6F6F6F', width: '45%', textAlign: 'center', }} selectable>\r\n                                    {`${selectedCustomerData.textZip}, ${selectedCustomerData.textStreet}, ${selectedCustomerData.city}, ${selectedCustomerData.country}`}\r\n                                </Text>\r\n\r\n                                <View\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'row',\r\n                                        paddingTop: 20,\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center',\r\n                                    }}\r\n                                >\r\n\r\n                                    <Text style={{ fontSize: screenWidth < 770 ? 12 : 14, color: '#6F6F6F', textAlign: 'center', paddingTop: 2, }} selectable>\r\n                                        {`${selectedCustomerData.textPhoneNumber}`}\r\n                                    </Text>\r\n\r\n                                    {/* Separator */}\r\n\r\n                                    <View style={{\r\n                                        height: '100%', // Full height of the parent View\r\n                                        width: 2, // Width of the line\r\n                                        backgroundColor: '#DCDCDC', // Line color\r\n                                        marginHorizontal: 10, // Space on the sides of the line\r\n                                    }} />\r\n\r\n                                    <Hyperlink\r\n                                        linkDefault={true}\r\n                                        linkStyle={{ color: '#8A64F6', fontSize: screenWidth < 770 ? 12 : 14 }}\r\n\r\n                                    >\r\n                                        <Text style={{ textAlign: 'center' }} selectable>\r\n                                            {selectedCustomerData.textEmail}\r\n                                        </Text>\r\n                                    </Hyperlink>\r\n\r\n                                </View>\r\n\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                        <View\r\n                            style={{\r\n                                width: screenWidth < 770 ? '100%' : '90%',\r\n                                justifyContent: 'center',\r\n                                marginTop: 50,\r\n                                flexDirection: 'row',\r\n                                alignSelf: 'center',\r\n                            }}>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < 770 ? 20 : 24, color: '#009922', textAlign: 'center', }} selectable>\r\n                                    {`$${(totalPaymentValue).toLocaleString('en-US')}`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < 770 ? 12 : 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Total Payment`}\r\n                                </Text>\r\n\r\n                                <PaymentHistoryModal />\r\n\r\n\r\n                            </View>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < 770 ? 20 : 24, color: '#990000', textAlign: 'center', }} selectable>\r\n                                    {`$${selectedCustomerData.overBalance ? Number(selectedCustomerData.overBalance).toLocaleString('en-US') : 0}`}\r\n                                </Text>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < 770 ? 12 : 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Overbalance`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontSize: 14, color: 'transparent', textAlign: 'center', }} underline selectable={false}>\r\n                                    {`-----`}\r\n                                </Text>\r\n\r\n\r\n                            </View>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < 770 ? 20 : 24, color: '#0029A3', textAlign: 'center', }} selectable>\r\n                                    {`${selectedCustomerData.transactions ? (selectedCustomerData.transactions).length : 0}`}\r\n                                </Text>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < 770 ? 12 : 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Transactions`}\r\n                                </Text>\r\n\r\n                                <TransactionHistoryModal />\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                    </Modal.Body>\r\n\r\n\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst ChatMessageHeader = () => {\r\n\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const selectedVehicleData = useSelector((state) => state.selectedVehicleData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const carImageUrl = useSelector((state) => state.carImageUrl);\r\n    const dispatch = useDispatch();\r\n    const [reRenderKey, setReRenderKey] = useState(0);\r\n    const totalPriceCondition = selectedChatData.fobPrice && selectedChatData.jpyToUsd && selectedChatData.m3 && selectedChatData.freightPrice;\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\r\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice));\r\n\r\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0))) + freightCalculation;\r\n\r\n    const fobPriceDollars = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0)));\r\n\r\n    const carName = selectedChatData.carData && selectedChatData.carData.carName ? selectedChatData.carData.carName : (selectedChatData.vehicle && selectedChatData.vehicle.carName ? selectedChatData.vehicle.carName : '');\r\n\r\n    const freightPriceYen = freightCalculation / selectedChatData.currency.jpyToUsd;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setReRenderKey(reRenderKey + 1)\r\n        dispatch(setChatMessageBoxLoading(false));\r\n\r\n    }, [activeChatId]);\r\n\r\n\r\n\r\n    return (\r\n\r\n        <View style={{\r\n            flex: 1,\r\n            alignSelf: 'flex-start',\r\n            flexDirection: 'row',\r\n        }}>\r\n\r\n\r\n            {carImageUrl ? (\r\n                <FastImage\r\n                    source={{ uri: carImageUrl, priority: FastImage.priority.normal }}\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        alignSelf: 'center',\r\n                        margin: 10,\r\n                    }}\r\n                    resizeMode={FastImage.resizeMode.stretch}\r\n                />\r\n            ) : (\r\n                <View\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        alignSelf: 'center',\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginRight: 10,\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            <View style={{ alignSelf: 'center', paddingRight: 10, }}>\r\n                <Text style={{ fontWeight: 700, color: '#0A78BE', }}>{carName}</Text>\r\n\r\n                <CustomerProfileModal />\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 1, color: '#8D7777', }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.referenceNumber ? selectedChatData.carData.referenceNumber : 'Chassis N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                {/* <Text style={{ fontWeight: 700, color: \"#16A34A\", }}>{`$${selectedChatData.offerPrice ? selectedChatData.offerPrice : 0}`}</Text> */}\r\n                <TimelineStatus data={statusData} />\r\n\r\n            </View>\r\n\r\n            {/* <HorizontalTimeline /> */}\r\n\r\n            <View style={{ alignSelf: 'center', justifyContent: 'center', paddingLeft: 10, }}>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.chassisNumber ? selectedChatData.carData.chassisNumber : 'Chassis N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.modelCode ? selectedChatData.carData.modelCode : 'Model Code N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.mileage\r\n                            ? Number(selectedChatData.carData.mileage).toLocaleString('en-US')\r\n                            : 'Mileage N/A'} km\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.fuel ? selectedChatData.carData.fuel : 'Fuel N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.transmission ? selectedChatData.carData.transmission : 'Transmission N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ alignSelf: 'center', justifyContent: 'center', paddingLeft: 15, }}>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontSize: 18, }} bold>Total Price: </Text>\r\n                    <Text selectable style={{ fontSize: 18, color: \"#16A34A\", textAlign: 'right', }} bold>\r\n                        {`$${Number(totalPriceCalculation).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2, }}>\r\n                        ({`¥${Number(\r\n                            totalPriceCalculation /\r\n                            ((selectedChatData && selectedChatData.jpyToUsd) ? Number(selectedChatData.jpyToUsd) :\r\n                                (selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd) ? selectedChatData.currency.jpyToUsd :\r\n                                    0)\r\n                        ).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, }}>FOB Price: </Text>\r\n                    <Text selectable style={{ fontWeight: 700, color: \"#8D7777\", textAlign: 'right', }}>\r\n                        {`${Number(fobPriceDollars).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 2, marginLeft: 2, }}>\r\n                        ({`${(selectedChatData.fobPrice ? selectedChatData.fobPrice : Number(selectedChatData.carData && selectedChatData.carData.fobPrice ? selectedChatData.carData.fobPrice : 0)).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, }}>Freight Price: </Text>\r\n                    <Text selectable style={{ fontWeight: 700, color: \"#8D7777\", textAlign: 'right', }}>\r\n                        {`${Number(freightCalculation).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 2, marginLeft: 2, }}>\r\n                        ({`${(selectedChatData.freightPrice ? freightPriceYen : Number(selectedChatData.carData && selectedChatData.carData.freightPrice ? freightPriceYen : 0)).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, textAlign: 'right', }}>\r\n                        {`${selectedChatData.country && selectedChatData.port ? `${selectedChatData.country} / ${selectedChatData.port}` : 'N/A'}`}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, color: \"#16A34A\", }}>{selectedChatData.insurance ? 'CIF' : 'C&F'}\r\n                        {selectedChatData.inspection ? ` + Inpection[${selectedChatData.inspectionName}]` : ''}</Text>\r\n                </View>\r\n            </View>\r\n\r\n            {(chatMessagesData.length > 0 && selectedVehicleData.stockStatus == 'Reserved' &&\r\n                selectedVehicleData.reservedTo !== selectedCustomerData.textEmail) ?\r\n                null :\r\n                (<View style={{ paddingLeft: 10, paddingRight: 10, paddingTop: 2, }}>\r\n                    {(selectedChatData.stepIndicator.value == 1 || selectedChatData.stepIndicator.value == 2) &&\r\n                        <>\r\n                            <ProfitCalculator />\r\n\r\n                            <TransactionButton\r\n                                key={'Issue Proforma Invoice'}\r\n                                title={selectedChatData.stepIndicator.value == 1 ? 'Issue Proforma Invoice' : selectedChatData.stepIndicator.value == 2 ? 'Update Invoice' : ''}\r\n                                colorHoverIn={'#0f7534'}\r\n                                colorHoverOut={'#16A34A'}\r\n                                transactionValue={2}\r\n                                buttonValue={2}\r\n                                iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />\r\n\r\n                            <PreviewInvoice />\r\n\r\n                            <View style={{ flexDirection: 'row' }}>\r\n                                <Text style={{ fontWeight: 700, fontSize: 18 }}>Final Price: </Text>\r\n                                <Text selectable style={{ fontWeight: 700, fontSize: 18, color: \"#FF0000\", textAlign: 'right' }}>\r\n                                    {`$${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2 }}>\r\n                                    ({`¥${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount && selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd ? (Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) / Number(selectedChatData.currency.jpyToUsd)) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                                </Text>\r\n                            </View>\r\n                        </>\r\n                    }\r\n\r\n                    {(selectedChatData.stepIndicator.value == 3) &&\r\n\r\n\r\n                        (\r\n                            <View style={{ flexDirection: 'row', paddingRight: 10, paddingTop: 2, }}>\r\n                                {\r\n                                    selectedChatData.isCancelled == true && (\r\n                                        <View style={{ flexDirection: 'row', paddingRight: 10, }}>\r\n                                            <View style={{ paddingLeft: 10, }}>\r\n                                                <ReopenTransaction />\r\n                                            </View>\r\n                                        </View>\r\n                                    )\r\n                                }\r\n                                <View style={{ paddingLeft: 10, }}>\r\n                                    {!selectedChatData.isCancelled && <ProfitCalculator />}\r\n\r\n                                    {!selectedChatData.isCancelled && <TransactionButton\r\n                                        key={'Input Payment'}\r\n                                        title={'Input Payment'}\r\n                                        colorHoverOut={'#FF0000'}\r\n                                        colorHoverIn={'#800101'}\r\n                                        transactionValue={3}\r\n                                        buttonValue={4}\r\n                                        iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />}\r\n\r\n                                    <PreviewInvoice />\r\n\r\n                                    {!selectedChatData.isCancelled && <View style={{ flexDirection: 'row' }}>\r\n                                        <Text style={{ fontWeight: 700, fontSize: 18 }}>Final Price: </Text>\r\n                                        <Text selectable style={{ fontWeight: 700, fontSize: 18, color: \"#FF0000\", textAlign: 'right' }}>\r\n                                            {`$${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                        </Text>\r\n                                        <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2 }}>\r\n                                            ({`¥${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount && selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd ? (Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) / Number(selectedChatData.currency.jpyToUsd)) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                                        </Text>\r\n                                    </View>}\r\n                                </View>\r\n\r\n                                <View style={{ paddingLeft: 10, }}>\r\n\r\n                                    {!selectedChatData.isCancelled && <TransactionButton\r\n                                        key={'Issue Proforma Invoice'}\r\n                                        title={selectedChatData.stepIndicator.value == 1 ? 'Issue Proforma Invoice' : 'Update Invoice'}\r\n                                        colorHoverIn={'#0f7534'}\r\n                                        colorHoverOut={'#16A34A'}\r\n                                        transactionValue={2}\r\n                                        buttonValue={2}\r\n                                        iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />}\r\n\r\n                                    {!selectedChatData.isCancelled && <ExtendDueDateButton />}\r\n\r\n                                    {!selectedChatData.isCancelled && <CancelTransaction />}\r\n\r\n                                    {!selectedChatData.isCancelled && <View style={{ flexDirection: 'row', }}>\r\n                                        {invoiceData && invoiceData.bankInformations && invoiceData.bankInformations.dueDate &&\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14, }}>Due Date: </Text>\r\n                                                <Text selectable style={{ fontWeight: 700, fontSize: 14, textAlign: 'right', color: '#FF0000', }}>\r\n                                                    {\r\n                                                        invoiceData.bankInformations.dueDate\r\n                                                            ? new Date(invoiceData.bankInformations.dueDate).toLocaleDateString(undefined, {\r\n                                                                year: 'numeric',\r\n                                                                month: 'long',\r\n                                                                day: 'numeric',\r\n                                                            })\r\n                                                            : 'Invalid Date'\r\n                                                    }\r\n                                                </Text>\r\n                                            </>}\r\n                                    </View>}\r\n\r\n                                </View>\r\n                            </View>)\r\n                    }\r\n                </View>)\r\n\r\n            }\r\n\r\n\r\n            <TransactionModal />\r\n        </View>\r\n\r\n    );\r\n};\r\n\r\n\r\nconst ReadByListModal = ({ userEmail, handleReadByListModalClose }) => {\r\n\r\n    const readByListModalVisible = useSelector((state) => state.readByListModalVisible)\r\n    const selectedChatData = useSelector((state) => state.selectedChatData)\r\n    // const [email, setEmail] = useState(projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '');\r\n\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={readByListModalVisible}\r\n            onClose={() => handleReadByListModalClose()}\r\n            useRNModal\r\n            size={'xs'}\r\n        >\r\n            <Modal.Content borderRadius={0} style={{ padding: 15, backgroundColor: '#f8f8f8', shadowColor: '#000', shadowOffset: { width: 0, height: 2 }, shadowOpacity: 0.25, shadowRadius: 3.84, elevation: 5 }}>\r\n                <Modal.CloseButton />\r\n\r\n                <Modal.Header style={{ fontSize: 22, fontWeight: '600', textAlign: 'center', color: '#333', }}>Read List</Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    {\r\n                        selectedChatData.readBy.length > 0 ? (\r\n                            <ScrollView style={{ maxHeight: 250, borderRadius: 10 }}>\r\n                                {/* Sort and map over the readBy list */}\r\n                                {\r\n                                    [...selectedChatData.readBy]\r\n                                        .sort((a, b) => a === email ? -1 : b === email ? 1 : 0)\r\n                                        .map(item => (\r\n                                            <View key={item} style={{ flex: 1, flexDirection: 'row', alignItems: 'center', marginVertical: 8, borderBottomWidth: 0.5, borderColor: '#ddd', paddingBottom: 8 }}>\r\n                                                {item === 'RMJ-Bot' ?\r\n                                                    <FontAwesome5 name=\"robot\" size={24} color=\"#4A90E2\" style={{ marginRight: 12 }} /> :\r\n                                                    <FontAwesome name=\"user-circle\" size={24} color=\"#4A90E2\" style={{ marginRight: 12 }} />}\r\n                                                <View style={{ flex: 1 }}> {/* Ensure text has its own block and can wrap */}\r\n                                                    <Text style={{ color: '#555', flexWrap: 'wrap' }}>{email === item ? 'You' : item}</Text>\r\n                                                </View>\r\n                                            </View>\r\n                                        ))\r\n                                }\r\n                            </ScrollView>\r\n                        ) : (\r\n                            <Text style={{ textAlign: 'center', color: 'grey', fontSize: 16 }}>No one has read this message yet.</Text>\r\n                        )\r\n                    }\r\n                </Modal.Body>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n}\r\n\r\nconst ImagePreviewModal = ({ isVisible, onClose, imageUrl }) => {\r\n    return (\r\n        <Modal isOpen={isVisible} onClose={onClose} size=\"full\" useRNModal>\r\n            <Modal.Content\r\n                style={{\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                    width: '80%',\r\n                    height: '80%',\r\n                    alignSelf: 'center',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                <Modal.CloseButton />\r\n                <FastImage\r\n                    source={{ uri: imageUrl, priority: FastImage.priority.normal }}\r\n                    style={{ width: '100%', height: '100%', borderRadius: 10 }}\r\n                    resizeMode={FastImage.resizeMode.contain}\r\n                />\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n\r\nconst HoverablePressable = ({ url, printComponent }) => {\r\n    const [isHoveredDownload, setIsHoveredDownload] = useState(false);\r\n    const [isHoveredPrint, setIsHoveredPrint] = useState(false);\r\n    const baseStyle = {\r\n        marginRight: 10,\r\n        borderRadius: 16,\r\n        borderWidth: 1,\r\n        borderColor: 'white',\r\n        width: 26,\r\n        height: 26,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    };\r\n\r\n    const hoverStyle = {\r\n        backgroundColor: '#ddd', // Example hover style\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip label=\"Download\" openDelay={200} bgColor={'white'} _text={{ color: '#1C2B33', }}>\r\n                <Pressable\r\n                    style={{\r\n                        marginRight: 8,\r\n                        borderRadius: 16,\r\n                        width: 32,\r\n                        height: 32,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        backgroundColor: isHoveredDownload ? '#424649' : 'transparent',\r\n                    }}\r\n                    onPress={async () => {\r\n                        await Linking.openURL(url);\r\n                    }}\r\n                    onMouseEnter={() => setIsHoveredDownload(true)}\r\n                    onMouseLeave={() => setIsHoveredDownload(false)}\r\n                >\r\n                    <MaterialCommunityIcons name=\"download\" size={20} color={'#F1F1F1'} />\r\n                </Pressable>\r\n            </Tooltip>\r\n\r\n            {/* <Tooltip label=\"Print\" openDelay={200} bgColor={'white'} _text={{ color: '#1C2B33', }}>\r\n                <Pressable\r\n                    style={{\r\n                        marginRight: 8,\r\n                        borderRadius: 16,\r\n                        width: 32,\r\n                        height: 32,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        backgroundColor: isHoveredPrint ? '#424649' : 'transparent',\r\n                    }}\r\n                    onMouseEnter={() => setIsHoveredPrint(true)}\r\n                    onMouseLeave={() => setIsHoveredPrint(false)}\r\n                    onPress={printComponent}\r\n                >\r\n                    <MaterialCommunityIcons name=\"printer\" size={20} color={'#F1F1F1'} />\r\n                </Pressable>\r\n            </Tooltip> */}\r\n        </>\r\n    );\r\n};\r\n\r\nconst DocumentPreviewModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const selectedFileUrl = useSelector((state) => state.selectedFileUrl);\r\n    const pdfViewerModalVisible = useSelector((state) => state.pdfViewerModalVisible);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const [iframeKey, setIframeKey] = useState(0);\r\n\r\n\r\n    const url = 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/ChatFiles%2Fchat_2023090239_marcvan14%40gmail.com%2FC-HUB_01312024153002.887%2FDAILY%20REPORT%202024-01-29.pdf?alt=media&token=88b7be9b-17ef-48d3-b5b3-6f7f0d317b7c'\r\n    const urlDocx = 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/ChatFiles%2Fchat_2023090239_marcvan14%40gmail.com%2FC-HUB_01312024170117.701%2FDAILY%20REPORT%202024-01-29.docx?alt=media&token=9bf45632-e192-45bf-8b40-9fd5cdb9368e';\r\n    const [isLoading, setLoading] = useState(true); // Loading state\r\n\r\n    // console.log(`https://docs.google.com/viewer?url=${encodeURIComponent(urlDocx)}&embedded=true`);\r\n\r\n\r\n    const handleIframeLoad = () => {\r\n        setLoading(false); // Set loading to false when iframe content is loaded\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n\r\n        dispatch(setPdfViewerModalVisible(false))\r\n        dispatch(setSelectedFileUrl(''))\r\n        setLoading(true);\r\n        globalSelectedFileType = '';\r\n        globalSelectedPDFUrl = '';\r\n    }\r\n\r\n    const printIframe = () => {\r\n        // const iframe = document.getElementById('documentIframe');\r\n        // iframe.contentWindow.print();\r\n        const printWindow = window.open(`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`, '_blank');\r\n        printWindow.focus();\r\n        printWindow.print();\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const timeout = setTimeout(() => {\r\n\r\n            if (isLoading) {\r\n                console.log(\"Iframe is taking too long to load. Attempting to reload.\");\r\n                console.log(\"Current URL:\", selectedFileUrl);\r\n                console.log(\"Current Global URL:\", globalSelectedPDFUrl);\r\n\r\n                setIsLoading(false);\r\n                setIframeKey(prevKey => prevKey + 1);\r\n                dispatch(setSelectedFileUrl(globalSelectedPDFUrl));\r\n\r\n            }\r\n\r\n        }, 5000); // Timeout set to 5 seconds\r\n\r\n        return () => clearTimeout(timeout);\r\n\r\n    }, [isLoading,]);\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={pdfViewerModalVisible}\r\n            onClose={() => {\r\n                handleModalClose();\r\n            }\r\n            } size=\"xl\">\r\n            <Modal.Content>\r\n                {globalSelectedFileType !== 'pdf' ?\r\n\r\n                    (<>\r\n                        {isLoading && (\r\n                            <View style={{\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                left: 0,\r\n                                right: 0,\r\n                                position: 'absolute',\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                height: '700px'  // Same height as the iframe for consistent layout\r\n                            }}>\r\n                                <Spinner\r\n                                    animating\r\n                                    size=\"lg\"\r\n                                    color={'#7B9CFF'}\r\n                                />\r\n                            </View>\r\n                        )}\r\n                        {selectedFileUrl !== '' &&\r\n                            <>\r\n                                {!isLoading &&\r\n                                    <View style={{ flexDirection: 'row', width: '100%', height: 57, borderRadius: 0, backgroundColor: '#323639', justifyContent: 'flex-end', alignItems: 'center', }}>\r\n                                        <HoverablePressable url={globalSelectedPDFUrl} printComponent={printIframe} />\r\n                                    </View>\r\n                                }\r\n\r\n                                <iframe\r\n                                    key={iframeKey}\r\n                                    src={`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`}\r\n                                    id='documentIframe'\r\n                                    style={{ width: '100%', height: '700px' }}\r\n                                    title=\"Document Viewer\"\r\n                                    onLoad={() => {\r\n                                        handleIframeLoad();\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </>\r\n                    )\r\n\r\n                    : (\r\n                        <>\r\n                            {isLoading && (\r\n                                <View style={{\r\n                                    top: 0,\r\n                                    bottom: 0,\r\n                                    left: 0,\r\n                                    right: 0,\r\n                                    position: 'absolute',\r\n                                    justifyContent: 'center',\r\n                                    alignItems: 'center',\r\n                                    height: '700px'  // Same height as the iframe for consistent layout\r\n                                }}>\r\n                                    <Spinner\r\n                                        animating\r\n                                        size=\"lg\"\r\n                                        color={'#7B9CFF'}\r\n                                    />\r\n                                </View>\r\n                            )}\r\n                            {selectedFileUrl !== '' &&\r\n                                (\r\n                                    screenWidth < 770 ?\r\n                                        (<>\r\n                                            {!isLoading &&\r\n                                                <View style={{ flexDirection: 'row', width: '100%', height: 57, borderRadius: 0, backgroundColor: '#323639', justifyContent: 'flex-end', alignItems: 'center', }}>\r\n\r\n                                                    <HoverablePressable url={globalSelectedPDFUrl} printComponent={printIframe} />\r\n                                                </View>\r\n                                            }\r\n\r\n                                            <iframe\r\n                                                key={iframeKey}\r\n                                                src={`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`}\r\n                                                id='mobilePdfIframe'\r\n                                                style={{ width: '100%', height: '700px' }}\r\n                                                title=\"PDF Viewer\"\r\n                                                onLoad={handleIframeLoad}\r\n                                            />\r\n                                        </>) :\r\n                                        (<iframe\r\n                                            src={selectedFileUrl}\r\n                                            style={{ width: '100%', height: '700px' }}\r\n                                            title=\"PDF Viewer\"\r\n                                            onLoad={handleIframeLoad} // Event when iframe has loaded\r\n                                        />)\r\n                                )\r\n                            }\r\n                        </>\r\n                    )\r\n\r\n\r\n                }\r\n\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n\r\n};\r\n\r\nconst ChatMessageBox = ({ activeButtonValue, userEmail }) => {\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const loadMoreMessagesLoading = useSelector((state) => state.loadMoreMessagesLoading);\r\n    const noMoreMessagesData = useSelector((state) => state.noMoreMessagesData);\r\n    const [isEyeHovered, setIsEyeHovered] = useState(false);\r\n    const flatListRef = useRef();\r\n    const [hoveredImageIndex, setHoveredImageIndex] = useState(null);\r\n\r\n    const [selectedImageIndex, setSelectedImageIndex] = useState(null);\r\n    const [isPreviewVisible, setIsPreviewVisible] = useState(false);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const screenHeight = Dimensions.get('window').height;\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        // Store the current path\r\n        const handlePopState = () => {\r\n            if (screenWidth < 770 && activeChatId !== '') {\r\n                dispatch(setMessageTextInputValue(''));\r\n                dispatch(setChatMessagesData([]));\r\n                dispatch(setActiveChatId(''));\r\n                navigate('/top/chat-messages');\r\n            }\r\n        };\r\n\r\n        // Add event listener when component mounts or when dependencies change\r\n        window.addEventListener('popstate', handlePopState);\r\n\r\n        // Cleanup function to remove event listener when component unmounts or dependencies change\r\n        return () => {\r\n            window.removeEventListener('popstate', handlePopState);\r\n        };\r\n\r\n    }, []);\r\n\r\n    const openPreview = (index) => {\r\n        setSelectedImageIndex(index);\r\n        setIsPreviewVisible(true);\r\n    };\r\n\r\n    const closePreview = () => {\r\n        setIsPreviewVisible(false);\r\n        setSelectedImageIndex(null);\r\n    };\r\n\r\n    const handleImageMessageMouseEnter = (index) => {\r\n        setHoveredImageIndex(index);\r\n    };\r\n\r\n    const handleImageMessageMouseLeave = () => {\r\n        setHoveredImageIndex(null);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [read, setRead] = useState(selectedChatData.read);\r\n\r\n    const handleReadByListModalOpen = () => {\r\n        dispatch(setReadByListModalVisible(true));\r\n    };\r\n\r\n    const handleReadByListModalClose = () => {\r\n        dispatch(setReadByListModalVisible(false));\r\n    };\r\n\r\n    const animatedValue = useRef(new Animated.Value(0)).current;\r\n\r\n    useEffect(() => {\r\n        Animated.loop(\r\n            Animated.sequence([\r\n                Animated.timing(animatedValue, {\r\n                    toValue: 1,\r\n                    duration: 2000,\r\n                    useNativeDriver: true\r\n                }),\r\n                Animated.timing(animatedValue, {\r\n                    toValue: 0,\r\n                    duration: 2000,\r\n                    useNativeDriver: true\r\n                })\r\n            ])\r\n        ).start();\r\n    }, [selectedChatData, chatMessagesData, animatedValue]);\r\n\r\n    const borderColor = animatedValue.interpolate({\r\n        inputRange: [0, 0.25, 0.5, 0.75, 1],\r\n        outputRange: [\r\n            'rgb(255, 100, 100)', // Red\r\n            'rgb(100, 255, 100)', // Green\r\n            'rgb(100, 100, 255)', // Blue\r\n            'rgb(255, 255, 100)', // Yellow\r\n            'rgb(255, 100, 255)'  // Magenta\r\n        ]\r\n    });\r\n\r\n    const renderFooter = () => {\r\n        return (\r\n            <>\r\n                {!noMoreMessagesData && (\r\n                    <View style={{ paddingVertical: 20, height: 60, }}>\r\n                        {loadMoreMessagesLoading && (\r\n                            <Spinner\r\n                                animating\r\n                                size=\"sm\"\r\n                                color={'#7B9CFF'}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </>\r\n\r\n        );\r\n    };\r\n\r\n    const handleLoadMoreMessages = async () => {\r\n        dispatch(setLoadMoreMessagesLoading(true));\r\n        dispatch(setNoMoreMessagesData(false));\r\n\r\n        let nextQuery;\r\n        if (!globalMessagesLastVisible) {\r\n            // No more data to load or globalLastVisible is undefined\r\n            dispatch(setLoadMoreMessagesLoading(false));\r\n            dispatch(setNoMoreMessagesData(true));\r\n        }\r\n\r\n        else {\r\n            dispatch(setLoadMoreMessagesLoading(true));\r\n            dispatch(setNoMoreMessagesData(false));\r\n\r\n            nextQuery = query(\r\n                collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(globalMessagesLastVisible),\r\n                limit(10)\r\n            );\r\n            try {\r\n                const unsubscribe = onSnapshot(nextQuery, (snapshot) => {\r\n                    if (snapshot.empty) {\r\n                        // Handle the case when there's no more data\r\n                        console.log(\"No more data to load\");\r\n                        setTimeout(() => {\r\n                            dispatch(setLoadMoreMessagesLoading(false));\r\n                            dispatch(setNoMoreMessagesData(true));\r\n                            globalMessagesLastVisible = null;\r\n                        }, 0);  // Delay setting loading and no more data flags\r\n                        return;\r\n                    }\r\n\r\n                    const chatsData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        chatsData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n\r\n                    // Append new data to the existing list\r\n\r\n                    setTimeout(() => {\r\n                        dispatch(setChatMessagesData([...chatMessagesData, ...chatsData]));\r\n                        dispatch(setLoadMoreMessagesLoading(false));\r\n                        globalMessagesLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n                    }, 0);\r\n\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data from Firebase:', error);\r\n                setTimeout(() => dispatch(setLoadMoreMessagesLoading(false)), 0);  // Ensure loading is set to false even if there's an error\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const updateChatToRead = async () => {\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", activeChatId);\r\n        if (email !== '') {\r\n            try {\r\n\r\n                await updateDoc(docRef, {\r\n                    read: true,\r\n                    readBy: arrayUnion(email),\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (activeChatId == selectedChatData.id) {\r\n            if (selectedChatData.stepIndicator.value !== activeButtonValue && activeButtonValue !== 0) {\r\n                dispatch(setChatMessagesData([]));\r\n                dispatch(setMessageTextInputValue(''));\r\n                dispatch(setActiveChatId(''));\r\n            }\r\n            else {\r\n                updateChatToRead();\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }, [selectedChatData]);\r\n\r\n    const handlePreviewInvoiceModalOpen = () => {\r\n        dispatch(setPreviewInvoiceVisible(true));\r\n    };\r\n\r\n    const formatDate = (timestamp) => {\r\n        // Parse the original timestamp\r\n        // Expected format: \"2024/01/15 at 12:17:50\"\r\n        const parts = timestamp.match(/(\\d{4})\\/(\\d{2})\\/(\\d{2}) at (\\d{2}):(\\d{2}):(\\d{2})/);\r\n        if (!parts) return timestamp; // Return original if parsing fails\r\n\r\n        // Create a new Date object\r\n        const date = new Date(parts[1], parts[2] - 1, parts[3], parts[4], parts[5], parts[6]);\r\n\r\n        // Format month names\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n        // Convert to 12-hour format and determine AM or PM\r\n        const hours = date.getHours();\r\n        const isPM = hours >= 12;\r\n        const formattedHours = hours % 12 || 12; // Convert 0 to 12 for 12 AM\r\n        const amPm = isPM ? 'PM' : 'AM';\r\n\r\n        // Construct the new format with year at the beginning\r\n        return `${date.getFullYear().toString().substr(-2)} ${months[date.getMonth()]} ${date.getDate()}, ${formattedHours}:${date.getMinutes().toString().padStart(2, '0')} ${amPm}`;\r\n    };\r\n\r\n    const extractUsernameFromEmail = (email) => {\r\n        const [username] = email.split('@');\r\n        return username;\r\n    };\r\n\r\n\r\n    const breakUrl = (url, maxUrlLength = 30) => {\r\n        let brokenUrl = '';\r\n        while (url.length > 0) {\r\n            brokenUrl += url.substring(0, maxUrlLength);\r\n            if (url.length > maxUrlLength) {\r\n                brokenUrl += '\\u200B'; // Zero-width space\r\n            }\r\n            url = url.substring(maxUrlLength);\r\n        }\r\n        return brokenUrl;\r\n    };\r\n\r\n    const isUrl = (text) => {\r\n        // Simple URL check\r\n        const urlPattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n        return !!urlPattern.test(text);\r\n    };\r\n\r\n    const handleLinkPress = (url) => {\r\n        Linking.canOpenURL(url).then(supported => {\r\n            if (supported) {\r\n                Linking.openURL(url);\r\n            } else {\r\n                console.log(\"Don't know how to open URI: \" + url);\r\n            }\r\n        });\r\n    };\r\n\r\n    const cleanUrl = (url) => {\r\n        // Removing Zero Width Space and other potential invisible characters\r\n        return url.replace(/[\\u200B-\\u200D\\uFEFF]/g, '');\r\n    };\r\n\r\n\r\n    const renderItemText = (isGlobalCustomerSender, text) => {\r\n        const urlPattern = new RegExp('(https?:\\\\/\\\\/[^\\\\s]+)', 'g');\r\n        let segments = text.split(urlPattern);\r\n\r\n        const insertBreaks = (str, n) => {\r\n            // Inserts a zero-width space every 'n' characters in 'str'\r\n            let result = '';\r\n            while (str.length > 0) {\r\n                result += str.substring(0, n) + '\\u200B';\r\n                str = str.substring(n);\r\n            }\r\n            return result;\r\n        };\r\n\r\n        return segments.map((segment, index) => {\r\n            const segmentWithBreaks = segment.length > 30 && !segment.includes(' ') ? insertBreaks(segment, 30) : segment;\r\n\r\n            if (isUrlForText(segment)) {\r\n                // Apply breaks for long URLs\r\n                return (\r\n                    <Pressable key={index} onPress={() => handleLinkPress(segment)}>\r\n                        <Text\r\n                            selectable\r\n                            style={{\r\n                                fontWeight: '400',\r\n                                color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                fontSize: 16,\r\n                                flexShrink: 1,\r\n                                textDecorationLine: 'underline',\r\n                                flexWrap: 'wrap',\r\n                            }}\r\n                        >\r\n                            {segmentWithBreaks}\r\n                        </Text>\r\n                    </Pressable>\r\n                );\r\n            } else {\r\n                return (\r\n                    <Text\r\n                        selectable\r\n                        key={index}\r\n                        style={{\r\n                            fontWeight: '400',\r\n                            color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                            fontSize: screenWidth < 770 ? 14 : 16,\r\n                            flexShrink: 1,\r\n                            flexWrap: 'wrap',\r\n                        }}\r\n                    >\r\n                        {segmentWithBreaks}\r\n                    </Text>\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n    const getFileIcon = (fileName) => {\r\n        const iconSize = 24;\r\n        const lowerFileName = fileName.toLowerCase();\r\n\r\n        if (lowerFileName.endsWith('.pdf')) {\r\n            return <MaterialIcons name={'picture-as-pdf'} size={iconSize} color=\"#fca19a\" />;\r\n        }\r\n        // Add more conditions for other file types as needed\r\n        // Example for .docx files\r\n        if (lowerFileName.endsWith('.docx') || lowerFileName.endsWith('.doc')) {\r\n            return <MaterialCommunityIcons name={'microsoft-word'} size={iconSize} color=\"#7B9CFF\" />;\r\n        }\r\n        if (lowerFileName.endsWith('.xlsx') || lowerFileName.endsWith('.xls') || lowerFileName.endsWith('.csv')) {\r\n            return <MaterialCommunityIcons name={'microsoft-excel'} size={iconSize} color=\"#6db375\" />;\r\n        }\r\n\r\n        if (lowerFileName.endsWith('.rar') || lowerFileName.endsWith('.zip')) {\r\n            return <FastImage\r\n                source={{ uri: require('../../assets/rar_icon.png'), priority: FastImage.priority.high }}\r\n                style={{\r\n                    width: iconSize,\r\n                    height: iconSize,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.cover}\r\n            />;\r\n        }\r\n        // Default icon if no specific type is matched\r\n        return <MaterialIcons name=\"insert-drive-file\" size={iconSize} color=\"#b3afaf\" />;\r\n    };\r\n\r\n    const isUrlForText = (text) => {\r\n        const urlPattern = new RegExp('^(http://www\\\\.|https://www\\\\.|http://|https://)[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(/.*)?$');\r\n        return urlPattern.test(text);\r\n    }\r\n\r\n    const renderItem = ({ item, index }) => {\r\n        const isGlobalCustomerSender = item.sender === globalCustomerId;\r\n        const isLastMessage = index === 0; // Since the list is inverted, the first item is actually the last message\r\n        const isHovered = hoveredImageIndex === index;\r\n        const textFontSize = screenWidth < 770 ? 14 : 16;\r\n\r\n        return (\r\n            <View style={{\r\n                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                width: '100%',\r\n                height: '100%',\r\n                alignSelf: isGlobalCustomerSender ? 'flex-start' : 'flex-end',\r\n                marginVertical: 4,\r\n                maxWidth: screenWidth < 770 ? '80%' : '60%', // Max width for long messages\r\n                // borderWidth: 1,\r\n                // borderColor: 'red',\r\n            }}>\r\n                {item.messageType == 'IssuedInvoice' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <Animated.View style={{\r\n                                padding: 7,\r\n                                flex: 1,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                borderWidth: 3,\r\n                                borderColor: borderColor,\r\n                            }}>\r\n                                <Pressable onPress={handlePreviewInvoiceModalOpen}>\r\n                                    <Text underline selectable style={{\r\n                                        fontWeight: 400,\r\n                                        color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                        fontSize: textFontSize,\r\n                                    }}>\r\n                                        {item.text.trim()}\r\n                                    </Text>\r\n                                </Pressable>\r\n                            </Animated.View>\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: '#888c96',\r\n                            fontSize: screenWidth < 770 ? 9 : 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n                    </View>\r\n                }\r\n\r\n\r\n                {item.messageType == 'InputPayment' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <Animated.View style={{\r\n                                padding: 7,\r\n                                flex: 1,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                borderWidth: 3,\r\n                                borderColor: borderColor,\r\n                            }}>\r\n                                <Text selectable style={{\r\n                                    fontWeight: 400,\r\n                                    color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                    fontSize: textFontSize,\r\n                                }}>\r\n                                    {item.text.trim()}\r\n                                </Text>\r\n                            </Animated.View>\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp, sender email, IP, and country */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n                    </View>\r\n                }\r\n\r\n\r\n                {!item.messageType && item.file && item.file.type == 'attachment' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        {item.text && item.text !== '' &&\r\n                            <View style={{\r\n                                marginBottom: 5,\r\n                                padding: 10,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                flexShrink: 1,\r\n                            }}>\r\n                                {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                            </View>\r\n                        }\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    marginBottom: 5,\r\n                                    padding: 10,\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    <Pressable\r\n                                        onPress={() => {\r\n                                            if (item.file.name.endsWith('.pdf')) {\r\n                                                globalSelectedFileType = 'pdf'\r\n                                                dispatch(setPdfViewerModalVisible(true));\r\n                                                dispatch(setSelectedFileUrl(item.file.url));\r\n                                                globalSelectedPDFUrl = item.file.url;\r\n\r\n                                            }\r\n                                            else {\r\n                                                globalSelectedFileType = 'not-pdf'\r\n                                                dispatch(setPdfViewerModalVisible(true));\r\n                                                dispatch(setSelectedFileUrl(item.file.url));\r\n                                                globalSelectedPDFUrl = item.file.url;\r\n\r\n\r\n\r\n                                            }\r\n                                            // dispatch(setSelectedFileUrl(item.file.url));\r\n                                            // // globalSelectedPDFUrl = item.file.url\r\n                                            // dispatch(setPdfViewerModalVisible(true));\r\n\r\n                                        }}\r\n                                        style={{ flexDirection: 'row', }}\r\n                                    >\r\n                                        <View style={{ marginRight: 5, }}>\r\n                                            {getFileIcon(item.file.name)}\r\n                                        </View>\r\n\r\n                                        <Text underline selectable style={{\r\n                                            fontWeight: 400,\r\n                                            color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                            fontSize: textFontSize,\r\n                                        }}>\r\n                                            {item.file.name.trim()}\r\n                                        </Text>\r\n                                    </Pressable>\r\n                                </View>\r\n                            </View>\r\n\r\n                            {/* Display read status text outside of the message bubble */}\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: '#888c96',\r\n                            fontSize: screenWidth < 770 ? 9 : 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n\r\n                    </View>}\r\n\r\n\r\n                {!item.messageType && item.file && item.file.type == 'image' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        {item.text && item.text !== '' &&\r\n                            <View style={{\r\n                                marginBottom: 5,\r\n                                padding: 10,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                flexShrink: 1,\r\n                            }}>\r\n                                {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                            </View>\r\n                        }\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    padding: 0,\r\n                                    borderRadius: 10,\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    <Pressable\r\n                                        onMouseEnter={() => handleImageMessageMouseEnter(index)}\r\n                                        onMouseLeave={handleImageMessageMouseLeave}\r\n                                        onPress={() => openPreview(index)}\r\n                                        style={{\r\n                                            position: 'relative', // Ensure relative positioning for the overlay\r\n                                            width: 250,\r\n                                            height: 250,\r\n                                            alignSelf: 'center',\r\n                                        }}\r\n                                    >\r\n                                        <FastImage\r\n                                            source={{ uri: item.file.url, priority: FastImage.priority.normal }}\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                height: '100%',\r\n                                                borderRadius: 10,\r\n                                                borderWidth: 1,\r\n                                                borderColor: '#DADDE1',\r\n                                            }}\r\n                                            resizeMode={FastImage.resizeMode.contain}\r\n                                        />\r\n                                        {isHovered && (\r\n                                            <View style={{\r\n                                                ...StyleSheet.absoluteFillObject, // Make overlay cover the entire image\r\n                                                backgroundColor: 'rgba(0, 0, 0, 0.1)', // Semi-transparent black\r\n                                                borderRadius: 10, // Match the border radius of the image\r\n                                            }} />\r\n                                        )}\r\n                                    </Pressable>\r\n                                </View>\r\n                            </View>\r\n\r\n                            {/* Display read status text outside of the message bubble */}\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: '#888c96',\r\n                            fontSize: screenWidth < 770 ? 9 : 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n\r\n                    </View>}\r\n\r\n                {!item.messageType && !item.file &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    padding: 10,\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                                </View>\r\n                            </View>\r\n\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                left: -60,\r\n                                top: '50%',\r\n                                bottom: '50%',\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                            }}>\r\n                                {/* Display read status text outside of the message bubble */}\r\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n\r\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Pressable\r\n                                            focusable={false}\r\n                                            onHoverIn={() => setIsEyeHovered(true)}\r\n                                            onHoverOut={() => setIsEyeHovered(false)}\r\n                                            onPress={handleReadByListModalOpen}\r\n                                        >\r\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                        </Pressable>\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: '#888c96',\r\n                            fontSize: screenWidth < 770 ? 9 : 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n                    </View>}\r\n\r\n            </View>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        chatMessagesData.length > 0 ? (\r\n            <>\r\n                <FlatList\r\n                    style={{ height: 100 }}\r\n                    ref={flatListRef}\r\n                    data={chatMessagesData}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id}\r\n                    initialNumToRender={10} // Adjust based on your average message size and performance\r\n                    maxToRenderPerBatch={10}\r\n                    windowSize={100}\r\n                    onEndReachedThreshold={0.05}\r\n                    ListFooterComponent={renderFooter}\r\n                    onEndReached={handleLoadMoreMessages}\r\n                    inverted\r\n                />\r\n                {selectedImageIndex !== null && (\r\n                    <ImagePreviewModal\r\n                        isVisible={isPreviewVisible}\r\n                        onClose={closePreview}\r\n                        imageUrl={chatMessagesData[selectedImageIndex].file.url}\r\n                    />\r\n                )}\r\n                <ReadByListModal userEmail={userEmail} handleReadByListModalClose={handleReadByListModalClose} />\r\n            </>\r\n        ) : null\r\n    );\r\n};\r\n\r\n\r\nconst ReservedStatusViewForHeader = () => {\r\n\r\n    return (\r\n        <View style={{\r\n            zIndex: 999,\r\n            flex: 1,\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: '#FFFFCC',\r\n            padding: 10,\r\n            borderRadius: 5,\r\n            opacity: 0.7, // Set border color\r\n        }}>\r\n            <Text style={{ color: '#FF0000', fontSize: 16, fontWeight: 'bold', textAlign: 'center', }} selectable={false}>The vehicle is reserved to a customer</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst CancelledViewForHeader = () => {\r\n\r\n    return (\r\n        <View style={{\r\n            zIndex: 999,\r\n            flex: 1,\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: 'red',\r\n            padding: 10,\r\n            borderRadius: 5,\r\n            opacity: 0.7, // Set border color\r\n        }}>\r\n            <Text style={{ color: 'white', fontSize: 16, fontWeight: 'bold', textAlign: 'center', }} selectable={false}>Cancelled Transaction</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default function ChatMessages() {\r\n    const navigate = useNavigate();\r\n    const selectedChatData = useSelector(state => state.selectedChatData);\r\n    const selectedVehicleData = useSelector(state => state.selectedVehicleData);\r\n    const selectedCustomerData = useSelector(state => state.selectedCustomerData);\r\n    const [email, setEmail] = useState('');\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const chatMessageBoxLoading = useSelector((state) => state.chatMessageBoxLoading);\r\n    const chatListSearchText = useSelector((state) => state.chatListSearchText);\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const loginName = useSelector((state) => state.loginName);\r\n\r\n    const [name, setName] = useState(loginName);\r\n\r\n    // const screenWidth = Dimensions.get('window').width;\r\n\r\n    const [activeButton, setActiveButton] = useState('All messages');\r\n    const [activeButtonValue, setActiveButtonValue] = useState(0);\r\n\r\n    const [activeFilterButton, setActiveFilterButton] = useState('');\r\n    const [unreadButtonValue, setUnreadButtonValue] = useState(false);\r\n    const [readButtonValue, setReadButtonValue] = useState(false);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [unreadCount, setUnreadCount] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // globalImageUrl = '';\r\n        // navigate(`/devadmin/chat-messages/#`);\r\n        const updateWidth = () => {\r\n            const newWidth = Dimensions.get('window').width;\r\n            setScreenWidth(newWidth); // Update the screenWidth state\r\n        };\r\n\r\n        // Add event listener for window resize\r\n        Dimensions.addEventListener('change', updateWidth);\r\n\r\n        // Clean up the event listener when the component unmounts or re-renders\r\n\r\n        const fetchIpAndCountry = async () => {\r\n            try {\r\n                // dispatch(setChatMessageBoxLoading(true));\r\n                // Fetch IP Address\r\n                const ipResponse = await axios.get('https://api.ipify.org?format=json');\r\n                const fetchedIp = ipResponse.data.ip;\r\n                ip = fetchedIp;\r\n\r\n                // Fetch IP Country\r\n                if (fetchedIp) {\r\n                    const countryResponse = await axios.get(`https://ipapi.co/${fetchedIp}/json/`);\r\n                    const fetchedIpCountry = countryResponse.data.country_name;\r\n                    ipCountry = fetchedIpCountry;\r\n                    // dispatch(setChatMessageBoxLoading(false));\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching IP data:', error);\r\n            }\r\n        };\r\n        const collectionRef = collection(projectExtensionFirestore, 'chats'); // Replace with your collection name\r\n        const unrepliedQuery = query(\r\n            collectionRef,\r\n            where('read', '==', false),\r\n            limit(10) // Limit the query to 10 documents\r\n        );\r\n\r\n        const unsubscribe = onSnapshot(unrepliedQuery, (querySnapshot) => {\r\n            setUnreadCount(querySnapshot.size); // Update state with the new count\r\n            fetchIpAndCountry();\r\n\r\n        }, (error) => {\r\n            console.error(\"Error fetching documents: \", error);\r\n        });\r\n\r\n\r\n\r\n        // Clean up function to unsubscribe from the listener when the component unmounts\r\n        return () => {\r\n            Dimensions.removeEventListener('change', updateWidth);\r\n            unsubscribe();\r\n        };\r\n\r\n    }, []);\r\n\r\n    const handlePress = (buttonTitle, buttonTitleValue) => {\r\n        if (activeButton == buttonTitle) {\r\n        }\r\n        else {\r\n            setActiveButton(buttonTitle);\r\n            setActiveButtonValue(buttonTitleValue);\r\n            setActiveFilterButton('');\r\n            setUnreadButtonValue(false);\r\n\r\n            dispatch(setActiveChatId(''));\r\n\r\n            dispatch(setLoadMoreLoading(false));\r\n            dispatch(setNoMoreData(false));\r\n        }\r\n    };\r\n\r\n\r\n    const handleUnreadPress = (buttonTitle) => {\r\n\r\n        setActiveFilterButton(prevState => prevState === buttonTitle ? '' : buttonTitle);\r\n        setUnreadButtonValue(prevState => !prevState);\r\n        setReadButtonValue(false);\r\n    };\r\n\r\n    const handleReadPress = (buttonTitle) => {\r\n\r\n        setActiveFilterButton(prevState => prevState === buttonTitle ? '' : buttonTitle);\r\n        setReadButtonValue(prevState => !prevState);\r\n        setUnreadButtonValue(false);\r\n\r\n    };\r\n\r\n\r\n    //Main fetch\r\n    useEffect(() => {\r\n        let queryRef;\r\n        dispatch(setMessageTextInputValue(''));\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setChatMessageBoxLoading(false));\r\n        dispatch(setActiveChatId(''));\r\n\r\n        // Helper function to build the query\r\n        const buildQuery = () => {\r\n            const searchValue = chatListSearchText.toUpperCase();\r\n\r\n            if (unreadButtonValue) {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('read', '==', false), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n            else if (readButtonValue) {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('read', '==', true), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n            else {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n        };\r\n\r\n        // Build and execute the query\r\n        queryRef = buildQuery();\r\n\r\n        const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n            const chatsData = [];\r\n            snapshot.forEach((doc) => {\r\n                chatsData.push({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                });\r\n            });\r\n\r\n            dispatch(setChatListData(chatsData));\r\n            globalLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n            dispatch(setNoMoreData(false));\r\n            dispatch(setLoadMoreLoading(false));\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }, (error) => {\r\n            console.error('Error fetching data from Firebase:', error);\r\n        });\r\n\r\n        // Cleanup function\r\n        return () => {\r\n            if (unsubscribe) {\r\n                unsubscribe();\r\n            }\r\n        };\r\n    }, [unreadButtonValue, readButtonValue, activeButtonValue, chatListSearchText]);\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                navigate(\"/login\")\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(projectControlAuth)\r\n                    .then(() => {\r\n                        navigate(\"/login\")\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(projectControlAuth)\r\n                .then(() => {\r\n                    navigate(\"/login\")\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = projectControlAuth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const listenForNameChange = (documentId) => {\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            onSnapshot(accountDocRef, (docSnapshot) => {\r\n                if (docSnapshot.exists()) {\r\n                    const data = docSnapshot.data();\r\n                    const fieldType = data.type;\r\n                    const fieldName = data.name;\r\n                    dispatch(setLoginName(fieldName));\r\n\r\n                } else {\r\n                    // Handle the case where the document does not exist\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSignOut = () => {\r\n        // Check if currentUser exists before signing out\r\n        if (projectControlAuth.currentUser) {\r\n            signOut(projectControlAuth).then(() => {\r\n                navigate(\"/login\")\r\n                setEmail('');\r\n                setName('');\r\n            }).catch(() => {\r\n                // Handle any sign out errors here\r\n            });\r\n        } else {\r\n            // Handle the case where there is no user currently signed in\r\n            console.log('No user signed in to sign out');\r\n            // Optionally navigate to the login screen or show a message\r\n            navigate(\"/login\")\r\n        }\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   const handleScreenResize = () => {\r\n    //     const screenWidth = Dimensions.get('window').width;\r\n    //     setIsMobileView(screenWidth < 1200);\r\n    //   };\r\n\r\n    //   // Initial check on component mount\r\n    //   handleScreenResize();\r\n\r\n    //   // Listen for screen dimension changes\r\n    //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n    //   // Cleanup event listener on component unmount\r\n    //   return () => {\r\n    //     Dimensions.removeEventListener('change', handleScreenResize);\r\n    //   };\r\n    // }, []);\r\n\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#0642F4'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#0642F4'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n\r\n    const slideAnim = useRef(new Animated.Value(screenWidth)).current;\r\n    const isVisible = chatMessagesData.length > 0;\r\n\r\n    useEffect(() => {\r\n        if (isVisible) {\r\n            // Delayed slide in from right to left with smooth easing\r\n            Animated.timing(slideAnim, {\r\n                toValue: 0, // Final position on the screen\r\n                duration: 300, // Slightly longer duration for smoother effect\r\n                useNativeDriver: true, // Use native driver for better performance\r\n                easing: Easing.bezier(0.25, 0.1, 0.25, 1), // Smooth and natural easing curve\r\n                delay: 100, // Start with a slight delay for a smoother transition\r\n            }).start();\r\n        } else {\r\n            // Delayed slide out to the right with smooth easing when not visible\r\n            Animated.timing(slideAnim, {\r\n                toValue: screenWidth,\r\n                duration: 300, // Slightly longer duration for smoother effect\r\n                useNativeDriver: true,\r\n                easing: Easing.bezier(0.25, 0.1, 0.25, 1), // Smooth and natural easing curve\r\n                delay: 100, // Start with a slight delay for a smoother transition\r\n            }).start();\r\n        }\r\n    }, [isVisible, screenWidth, slideAnim]);\r\n\r\n    const handlePressBack = () => {\r\n        dispatch(setMessageTextInputValue(''));\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setActiveChatId(''));\r\n        navigate(`/top/chat-messages`);\r\n    }\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <NativeBaseProvider>\r\n                <View style={{ backgroundColor: \"white\", height: '100%', width: '100%', flexDirection: 'column', maxHeight: '100vh', overflow: 'hidden', }} >\r\n                    {/* Header */}\r\n                    <Box\r\n                        px=\"3\"\r\n                        bgColor='#0642f4'\r\n                        height={54}\r\n                        position=\"sticky\"\r\n                        top={0}\r\n                        zIndex={999}\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                        borderBottomWidth={0}\r\n                        borderBottomColor={'cyan.500'}\r\n                    >\r\n\r\n                        <SideDrawer\r\n                            selectedScreen={selectedScreen} />\r\n\r\n                        <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n\r\n                            <FastImage\r\n                                source={{\r\n                                    uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                    priority: FastImage.priority.high,\r\n                                }}\r\n                                resizeMode={FastImage.resizeMode.stretch}\r\n                                style={styles.image} />\r\n                        </Box>\r\n\r\n                        {/* {screenWidth <= 960 && <MobileViewDrawer\r\n                            selectedScreen={selectedScreen} />} */}\r\n\r\n\r\n                        <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                            {/* <FastImage\r\n                                source={{\r\n                                    uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                    priority: FastImage.priority.high,\r\n                                }}\r\n                                resizeMode={FastImage.resizeMode.stretch}\r\n                                style={styles.image} /> */}\r\n                        </Box>\r\n                        <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n\r\n                    </Box>\r\n\r\n                    {/* Content */}\r\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        {/* Sidebar */}\r\n                        {/* <SideDrawer\r\n                            selectedScreen={selectedScreen} /> */}\r\n\r\n                        {/* Main Content */}\r\n                        {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n                        {/* Main Content Content */}\r\n\r\n                        {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n                        <View style={{ flex: 1, backgroundColor: \"white\", height: '100%' }}>\r\n                            <View style={{ flex: 1, height: '100%' }}>\r\n\r\n                                <View style={{\r\n                                    display: screenWidth < 770 && activeChatId !== '' ? 'none' : 'flex',\r\n                                    borderBottomWidth: 1,\r\n                                    borderColor: '#f5f5f5',\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    height: 60,\r\n                                }}>\r\n                                    {/* Chat Header */}\r\n                                    <View style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'row',\r\n                                    }}>\r\n                                        <View style={{\r\n                                            flex: 1,\r\n                                            flexDirection: 'row',\r\n                                        }}>\r\n                                            <ScrollView scrollEnabled horizontal>\r\n\r\n                                                <HeaderButton\r\n                                                    key={'All messages'}\r\n                                                    title={'All messages'}\r\n                                                    onPress={() => handlePress('All messages', 0)}\r\n                                                    isActive={activeButton === 'All messages'}\r\n                                                    headerCount={\r\n                                                        unreadCount > 0 ?\r\n                                                            (<View style={{\r\n                                                                backgroundColor: '#FF0000',\r\n                                                                borderRadius: 100, // Half of width and height\r\n                                                                width: 20,\r\n                                                                height: 20, // Same as width for a perfect circle\r\n                                                                marginLeft: 10,\r\n                                                                justifyContent: 'center', // Center children vertically\r\n                                                                alignItems: 'center', // Center children horizontally\r\n                                                            }}>\r\n                                                                <Text style={{\r\n                                                                    color: 'white',\r\n                                                                    fontWeight: 700,\r\n                                                                    fontSize: 14,\r\n                                                                }}>{unreadCount > 9 ? `9+` : unreadCount}</Text>\r\n                                                            </View>) : (<></>)}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Negotiation'}\r\n                                                    title={'Negotiation'}\r\n                                                    onPress={() => handlePress('Negotiation', 1)}\r\n                                                    isActive={activeButton === 'Negotiation'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Issued Proforma Invoice'}\r\n                                                    title={'Issued Proforma Invoice'}\r\n                                                    onPress={() => handlePress('Issued Proforma Invoice', 2)}\r\n                                                    isActive={activeButton === 'Issued Proforma Invoice'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Order Item'}\r\n                                                    title={'Order Item'}\r\n                                                    onPress={() => handlePress('Order Item', 3)}\r\n                                                    isActive={activeButton === 'Order Item'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Payment Confirmed'}\r\n                                                    title={'Payment Confirmed'}\r\n                                                    onPress={() => handlePress('Payment Confirmed', 4)}\r\n                                                    isActive={activeButton === 'Payment Confirmed'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Shipping Schedule'}\r\n                                                    title={'Shipping Schedule'}\r\n                                                    onPress={() => handlePress('Shipping Schedule', 5)}\r\n                                                    isActive={activeButton === 'Shipping Schedule'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Documents'}\r\n                                                    title={'Documents'}\r\n                                                    onPress={() => handlePress('Documents', 6)}\r\n                                                    isActive={activeButton === 'Documents'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Vehicle Received'}\r\n                                                    title={'Vehicle Received'}\r\n                                                    onPress={() => handlePress('Vehicle Received', 7)}\r\n                                                    isActive={activeButton === 'Vehicle Received'}\r\n                                                />\r\n                                            </ScrollView>\r\n                                        </View>\r\n\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', height: '100%', }}>\r\n                                    {/* Chat Body */}\r\n\r\n                                    <View style={{ flex: screenWidth > 770 ? '' : 1, display: screenWidth < 770 && activeChatId !== '' ? 'none' : 'flex', }}>\r\n\r\n                                        <View style={{ flex: 1, maxWidth: screenWidth > 770 ? 380 : '100%', minWidth: screenWidth > 770 ? 380 : '100%', borderRightWidth: 0, borderColor: '#DADDE1', maxHeight: 100, minHeight: 100, backgroundColor: 'white', }}>\r\n                                            {/* Chat Search */}\r\n                                            <View style={{ flex: 1, paddingHorizontal: 10 }}>\r\n                                                <SearchChat lastVisible={lastVisible} setLastVisible={setLastVisible} unreadButtonValue={unreadButtonValue} activeButtonValue={activeButtonValue} />\r\n                                                {/* <Pressable\r\n                                                variant=\"ghost\"\r\n                                                style={{\r\n                                                    padding: 3,\r\n                                                    width: 100,\r\n                                                    flexDirection: 'row', // Align items in a row\r\n                                                    alignItems: 'center', // Center items vertically\r\n                                                    borderRadius: 5,\r\n                                                }}\r\n                                                backgroundColor='#ECEDF0'\r\n                                                _hover={{ backgroundColor: '#d7d7d9' }}\r\n                                            >\r\n                                                <MaterialIcons name=\"mark-email-unread\" color=\"#1C2B33\" size={20} />\r\n                                                <Text style={{ color: '#1C2B33', marginLeft: 5 }}>Unreplied</Text>\r\n                                            </Pressable> */}\r\n                                                <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                                    <FilterButton\r\n                                                        key={'Unread'}\r\n                                                        title={'Unread '}\r\n                                                        onPress={() => handleUnreadPress('Unread')}\r\n                                                        isActive={activeFilterButton === 'Unread'}\r\n                                                        iconActive={<MaterialIcons name=\"mark-email-unread\" color=\"#0A78BE\" size={16} />}\r\n                                                        iconNotActive={<MaterialIcons name=\"mark-email-unread\" color=\"#1C2B33\" size={16} />}\r\n                                                    />\r\n\r\n                                                    <FilterButton\r\n                                                        key={'Read'}\r\n                                                        title={'Read '}\r\n                                                        onPress={() => handleReadPress('Read')}\r\n                                                        isActive={activeFilterButton === 'Read'}\r\n                                                        iconActive={<MaterialIcons name=\"mark-email-read\" color=\"#0A78BE\" size={16} />}\r\n                                                        iconNotActive={<MaterialIcons name=\"mark-email-read\" color=\"#1C2B33\" size={16} />}\r\n                                                    />\r\n\r\n                                                </View>\r\n\r\n                                            </View>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, maxWidth: screenWidth > 770 ? 380 : '100%', minWidth: screenWidth > 770 ? 380 : '100%', borderRightWidth: 0, borderColor: '#DADDE1', backgroundColor: 'white', }}>\r\n                                            {/* Chat List */}\r\n                                            <ChatList unreadButtonValue={unreadButtonValue} activeButtonValue={activeButtonValue} />\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    {screenWidth > 770 && (chatMessageBoxLoading ? (\r\n                                        <View style={{ flex: 1, backgroundColor: 'white', justifyContent: 'center', alignItems: 'center', height: '100%', }}>\r\n                                            <Spinner\r\n                                                animating\r\n                                                size=\"lg\"\r\n                                                color={'#7B9CFF'}\r\n                                            />\r\n                                        </View>) : (\r\n                                        <View style={{ flex: 1, }}>\r\n\r\n                                            <View style={{ flex: 1, minHeight: 90, maxHeight: screenWidth < 1281 ? 130 : 125, borderBottomWidth: 0, borderColor: '#DADDE1', backgroundColor: 'white', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                {/* Chat Message Header */}\r\n\r\n                                                <ScrollView scrollEnabled horizontal>\r\n                                                    {chatMessagesData.length < 1 ? null : (<ChatMessageHeader />)}\r\n                                                </ScrollView>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, borderColor: '#DADDE1', backgroundColor: chatMessagesData.length < 1 ? 'white' : '#e5ebfe', paddingBottom: 10, }}>\r\n\r\n                                                <View style={{ flex: 1, }}>\r\n\r\n                                                    {(chatMessagesData.length > 0 && selectedVehicleData.stockStatus == 'Reserved' &&\r\n                                                        selectedVehicleData.reservedTo !== selectedCustomerData.textEmail)\r\n                                                        ? <ReservedStatusViewForHeader /> :\r\n                                                        (selectedChatData.isCancelled && chatMessagesData.length > 0 && <CancelledViewForHeader />)\r\n                                                    }\r\n\r\n                                                    {/* Chat Message Box */}\r\n                                                    <ChatMessageBox activeButtonValue={activeButtonValue} userEmail={email} />\r\n                                                    <DocumentPreviewModal />\r\n                                                </View>\r\n\r\n                                                <View style={{ maxHeight: 180, justifyContent: 'flex-end', alignItems: 'center' }}>\r\n                                                    {/* Chat Input Text */}\r\n                                                    {chatMessagesData.length < 1 ? null : (<ChatInputText />)}\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                    ))}\r\n\r\n                                    {screenWidth < 770 && activeChatId !== '' && (chatMessageBoxLoading ? (\r\n\r\n                                        <View style={{ flex: 1, backgroundColor: 'white', justifyContent: 'center', alignItems: 'center', }}>\r\n                                            <Spinner\r\n                                                animating\r\n                                                size=\"lg\"\r\n                                                color={'#7B9CFF'}\r\n                                            />\r\n                                        </View>) : (\r\n\r\n                                        <Animated.View\r\n                                            style={{\r\n                                                backgroundColor: '#E5EBFE',\r\n                                                height: '100%',\r\n                                                flex: 1,\r\n                                                transform: [{ translateX: slideAnim }]\r\n                                            }}\r\n\r\n                                        >\r\n\r\n                                            <View style={{ flex: 1 }}>\r\n                                                <View style={{ flex: 1, minHeight: 90, maxHeight: screenWidth < 1281 ? 130 : 125, borderBottomWidth: 0, borderColor: '#DADDE1', backgroundColor: 'white', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                    {/* Chat Message Header */}\r\n                                                    {(screenWidth < 770 && chatMessagesData.length > 0) &&\r\n                                                        <Pressable onPress={handlePressBack} style={{ justifyContent: 'center', alignItems: 'center', }}>\r\n                                                            <Ionicons name=\"chevron-back\" size={40} color='black' />\r\n                                                        </Pressable>\r\n                                                    }\r\n\r\n                                                    <ScrollView scrollEnabled horizontal>\r\n                                                        {chatMessagesData.length < 1 ? null : (<ChatMessageHeader />)}\r\n                                                    </ScrollView>\r\n                                                </View>\r\n\r\n                                                <View style={{ flex: 1, borderColor: '#DADDE1', backgroundColor: chatMessagesData.length < 1 ? 'white' : '#e5ebfe', paddingBottom: 10, }}>\r\n                                                    <View style={{ flex: 1, }}>\r\n                                                        {(chatMessagesData.length > 0 && selectedVehicleData.stockStatus == 'Reserved' &&\r\n                                                            selectedVehicleData.reservedTo !== selectedCustomerData.textEmail)\r\n                                                            ? <ReservedStatusViewForHeader /> :\r\n                                                            (selectedChatData.isCancelled && chatMessagesData.length > 0 && <CancelledViewForHeader />)\r\n                                                        }\r\n                                                        {/* Chat Message Box */}\r\n                                                        <ChatMessageBox activeButtonValue={activeButtonValue} userEmail={email} />\r\n                                                        <DocumentPreviewModal />\r\n                                                    </View>\r\n                                                </View>\r\n                                            </View>\r\n\r\n                                            {/* Absolute Positioned Chat Input Text at the Bottom */}\r\n                                            <View style={{ alignItems: 'center', paddingBottom: 10 }}>\r\n                                                {chatMessagesData.length < 1 ? null : (<ChatInputText />)}\r\n                                            </View>\r\n\r\n                                        </Animated.View>\r\n                                    ))}\r\n                                </View>\r\n                            </View>\r\n                            {/* <SuccessModal /> */}\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <LoadingModal />\r\n            </NativeBaseProvider>\r\n\r\n\r\n        </>\r\n\r\n    );\r\n}","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Flex,\r\n    HStack,\r\n    Icon,\r\n    Image as NativeImage,\r\n    Input,\r\n    Modal,\r\n    NativeBaseProvider,\r\n    Popover,\r\n    Pressable,\r\n    Spinner,\r\n    Stack,\r\n    Text,\r\n    VStack,\r\n    useBreakpointValue,\r\n    TextArea,\r\n    InputRightAddon,\r\n    InputGroup,\r\n    InputLeftAddon,\r\n    Select,\r\n    CheckIcon,\r\n    PresenceTransition,\r\n    CloseIcon,\r\n    ScrollView as ScrollViewNative,\r\n    Divider,\r\n    useDisclosure,\r\n    useDisclose,\r\n    FormControl,\r\n    Checkbox,\r\n    useToast,\r\n} from 'native-base';\r\nimport { DataTable } from 'react-native-paper';\r\n\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n    Dimensions,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    StyleSheet,\r\n    View,\r\n    PanResponder,\r\n    Animated,\r\n    InputAccessoryView,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    TextInput,\r\n    Image as RNImage\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo,\r\n    FontAwesome5,\r\n    EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { debounce } from 'lodash';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, deleteField } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n    setVehicleListData,\r\n    setSupplyChainsCostsData,\r\n    setSelectedPaidTo,\r\n    setSelectedExpenseName,\r\n    setSupplyChainsCostsModalVisible,\r\n    setVehicleListSupplyChainsCostsData,\r\n    setDeleteImageVisible,\r\n    setSelectedImages,\r\n    setAddAnotherImages,\r\n    setIsAddPhotoVisible,\r\n    setUploadImagesModalVisible,\r\n    setUploadImagesButtonLoading,\r\n    setViewImagesModalVisible,\r\n    setViewImagesData,\r\n    setLoadingModalVisible,\r\n    setAddVehicleListData,\r\n    setEditVehicleModalVisible,\r\n    setFobPriceHistoryModalVisible,\r\n    setSelectedButton,\r\n    setAddCountryModalVisible,\r\n    setAddPortModalVisible,\r\n    setDeletePortModalVisible,\r\n    setAddPortsForCountriesModalVisible,\r\n    setCountryPortsData,\r\n    setDeleteCountryModalVisible,\r\n    setLoginName\r\n} from './redux/store';\r\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep, merge } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'FREIGHT'\r\n\r\nlet nameVariable = {\r\n    text: ''\r\n}\r\n\r\nlet defaultSelectedButton = 'countries';\r\n\r\nlet selectedPort = '';\r\nlet selectedCountry = '';\r\nlet selectedPortForCountry = '';\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = projectControlAuth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\nconst SearchablePortDropdown = ({ modalAddOpen }) => {\r\n    // const [selectedItem, setSelectedItem] = useState(null);\r\n    const [query, setQuery] = useState('');\r\n    const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n    const [data, setData] = useState([]); // Initialize data state with an empty array\r\n    const searchRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Your data fetching logic here\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map((key) => ({\r\n                        ports: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n            } else {\r\n                console.log('No such document!');\r\n            }\r\n        }, (error) => {\r\n            console.error('Error fetching countries: ', error);\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const filteredData = data.filter((item) =>\r\n        item.ports.toLowerCase().includes(query.toLowerCase().trim()) ||\r\n        item.country.toLowerCase().includes(query.toLowerCase().trim())\r\n    );\r\n\r\n    const renderItem = ({ item }) => (\r\n        <TouchableOpacity\r\n            style={{\r\n                padding: 10,\r\n                borderBottomWidth: 1,\r\n                borderBottomColor: '#ccc',\r\n                width: '100%',\r\n                backgroundColor: '#85929F',\r\n            }}\r\n            onPress={() => {\r\n                // setSelectedItem(item);\r\n                selectedPortForCountry = item;\r\n                setQuery('');\r\n                setIsDropdownVisible(false);\r\n\r\n            }}\r\n        >\r\n            <Text style={{ color: 'white', }}>{item.ports}</Text>\r\n        </TouchableOpacity>\r\n    );\r\n\r\n    useEffect(() => {\r\n\r\n        searchRef.current.focus();\r\n\r\n    }, [isDropdownVisible])\r\n\r\n    useEffect(() => {\r\n\r\n        searchRef.current.focus();\r\n        setIsDropdownVisible(false);\r\n        selectedPortForCountry = '';\r\n\r\n    }, [modalAddOpen])\r\n\r\n    return (\r\n        <View style={{ flex: 1, width: '100%' }}>\r\n            <Button\r\n                title=\"Show Dropdown\"\r\n                onPress={() => {\r\n                    setIsDropdownVisible(!isDropdownVisible)\r\n\r\n                }}\r\n                bgColor={'#102A43'}\r\n                style={{ borderWidth: 1 }}\r\n                flex={1}\r\n            >\r\n                <View style={{\r\n                    flex: 1,\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between', // This will position the children at opposite ends\r\n                }}>\r\n                    <Text style={{ color: 'white', flex: 1, alignSelf: 'flex-start' }}>{selectedPortForCountry ? selectedPortForCountry.ports : 'Select Port'}</Text>\r\n                    <MaterialIcons style={{ alignSelf: 'flex-end' }} name={isDropdownVisible ? 'keyboard-arrow-up' : 'keyboard-arrow-down'} color='white' size={22} />\r\n                </View>\r\n            </Button>\r\n            <View style={{ display: isDropdownVisible ? 'flex' : 'none' }}>\r\n                <TextInput\r\n                    ref={searchRef}\r\n                    style={{\r\n                        outlineStyle: 'none',\r\n                        padding: 10,\r\n                        borderWidth: 1,\r\n                        borderColor: '#102A43',\r\n                        flex: 1,\r\n                    }}\r\n                    placeholder=\"Search...\"\r\n                    value={query}\r\n                    onChangeText={(text) => setQuery(text)}\r\n                />\r\n                <FlatList\r\n                    style={{ height: 150, width: '100%', borderWidth: 1, borderColor: '#102A43', borderRadius: 5, }}\r\n                    data={filteredData}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={(item) => item.ports.toString()}\r\n                />\r\n            </View>\r\n\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n//     const dispatch = useDispatch();\r\n//     const toast = useToast();\r\n//     const [inspectionData, setInspectionData] = useState(['Required', 'Not-Required', 'Optional']);\r\n//     const [key, setKey] = useState(nanoid());\r\n\r\n//     const [selectedStockStatusValue, setSelectedStockStatusValue] = useState(selectedValue);\r\n//     const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n//     const handleSaveStockStatus = async () => {\r\n\r\n//         dispatch(setLoadingModalVisible(true));\r\n\r\n//        const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n//         const { datetime } = response.data;\r\n//         const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n//         const year = moment(datetime).format('YYYY');\r\n//         const month = moment(datetime).format('MM');\r\n//         const monthWithDay = moment(datetime).format('MM/DD');\r\n//         const date = moment(datetime).format('YYYY/MM/DD');\r\n//         const day = moment(datetime).format('DD');\r\n//         const time = moment(datetime).format('HH:mm');\r\n\r\n//         const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n//         if (item.stockStatus == selectedStockStatusValue || selectedStockStatusValue == '' || selectedStockStatusValue == '__NativeBasePlaceHolder__') {\r\n//             dispatch(setLoadingModalVisible(false));\r\n//         }\r\n\r\n//         else {\r\n\r\n//             const stockStatusHistoryData = {\r\n//                 date: formattedTime,\r\n//                 stockStatus: selectedStockStatusValue,\r\n//                 changedBy: nameVariable.text,\r\n//             };\r\n//             const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n//             try {\r\n//                 await updateDoc(vehicleProductRef, {\r\n//                     stockStatus: selectedStockStatusValue,\r\n//                     stockStatusHistory: arrayUnion(stockStatusHistoryData)\r\n//                 });\r\n//                 const logData = {\r\n//                     message: `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to \"${selectedStockStatusValue}\" with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n//                     timestamp: formattedTime,\r\n//                     colorScheme: true,\r\n//                     keywords: [\r\n//                         formattedTime.toLowerCase(),\r\n//                         globalCurrentStockID.toLowerCase(),\r\n//                         `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to ${selectedStockStatusValue} with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n//                         'Stock Status'.toLowerCase(),\r\n//                         'Stock Status Updated'.toLowerCase(),\r\n//                         'Stock'.toLowerCase(),\r\n//                         'Status Updated'.toLowerCase(),\r\n//                         'Updated'.toLowerCase(),\r\n//                         globalSelectedCarName.toLowerCase(),\r\n//                         globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n//                         nameVariable.text.toLowerCase(),\r\n//                         year.toLowerCase(),\r\n//                         month.toLowerCase(),\r\n//                         monthWithDay.toLowerCase(),\r\n//                         date.toLowerCase(),\r\n//                         day.toLowerCase(),\r\n//                         time.toLowerCase(),\r\n//                         timeWithMinutesSeconds.toLowerCase(),\r\n//                     ],\r\n//                 };\r\n//                 addLogToCollection(logData);\r\n//                 dispatch(setLoadingModalVisible(false));\r\n\r\n//                 // console.log('FOB Price updated successfully');\r\n//                 toast.show({\r\n//                     render: () => {\r\n//                         return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n//                             <Text style={{ color: 'white' }}>Stock Status updated successfully!</Text>\r\n//                         </View>;\r\n//                     }\r\n//                 })\r\n//             } catch (error) {\r\n//                 console.error(error);\r\n//                 toast.show({\r\n//                     render: () => {\r\n//                         return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n//                             <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n//                         </View>;\r\n//                     }\r\n//                 })\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <View style={{ flex: 1, flexDirection: 'row' }}>\r\n//             <View style={{ width: screenWidth >= 1360 ? '70%' : '88%', backgroundColor: 'white', }}>\r\n//                 <Select\r\n//                     selectedValue={selectedStockStatusValue}\r\n//                     onValueChange={(value) => {\r\n//                         setSelectedStockStatusValue(value);\r\n//                     }}\r\n//                     flex={3}\r\n//                     accessibilityLabel=\"---\"\r\n//                     placeholder=\"---\"\r\n//                     _selectedItem={{\r\n//                         bg: \"teal.600\",\r\n//                         endIcon: <CheckIcon size=\"5\" />\r\n//                     }}\r\n//                 >\r\n//                     {stockStatusData.map((item) => (\r\n//                         <Select.Item key={item} label={item} value={item} />\r\n//                     ))}\r\n//                 </Select>\r\n//             </View>\r\n\r\n//             <TouchableHighlight\r\n//                 underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n//                 onPress={handleSaveStockStatus}\r\n//                 style={{\r\n//                     backgroundColor: '#16A34A',\r\n//                     borderRadius: 5,\r\n//                     padding: 3,\r\n//                     margin: 2,\r\n//                     alignSelf: 'center',\r\n//                 }}>\r\n//                 <MaterialIcons name='update' color='white' size={22} />\r\n//             </TouchableHighlight>\r\n//         </View>\r\n\r\n\r\n\r\n\r\n//     );\r\n// };\r\n\r\nconst addLogToCollection = async (data) => {\r\n    try {\r\n        const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n        // Add a new document to the \"logs\" collection\r\n        await addDoc(logsCollectionRef, data);\r\n\r\n        console.log('Document added successfully!');\r\n    } catch (error) {\r\n        console.error('Error adding document:', error);\r\n    }\r\n};\r\n\r\n\r\nconst SortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, collectionName, handleFirstModalClose, handleFirstModalOpen }) => {\r\n    const [modalSortOpen, setModalSortOpen] = useState(false);\r\n    const [modalAddOpen, setModalAddOpen] = useState(false);\r\n    const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n    const [modalSave, setModalSave] = useState(false);\r\n    const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n    const [modalData, setModalData] = useState(data);\r\n    const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n    const handleDeleteItemPress = useCallback(\r\n        (item) => {\r\n            setModalData((prevData) => {\r\n                const updatedData = prevData.filter((value) => value !== item);\r\n                return updatedData;\r\n            });\r\n        },\r\n        []\r\n    );\r\n\r\n    // useEffect(() => {\r\n\r\n    //   fetchData();\r\n\r\n    // }, [modalSortOpen]);\r\n\r\n\r\n\r\n    const fetchData = useCallback(async () => {\r\n        const modalDocRef = doc(collection(databaseInit, collectionName), docName);\r\n        const modalDocSnap = await getDoc(modalDocRef);\r\n        if (modalDocSnap.exists()) {\r\n            // setModalData(modalDocSnap.data()?.dataName || []);\r\n            setModalData(modalDocSnap.data()?.[dataName] || []);\r\n        }\r\n    }, [databaseInit, modalData]);\r\n\r\n    // useEffect(() => {\r\n    //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n    //     setModalData(snapshot.data()?.[dataName] || []);\r\n    //   });\r\n\r\n    //   return () => unsubscribe();\r\n    // }, [dataName, databaseInit, docName]);\r\n\r\n    const handleSave = useCallback(async () => {\r\n        setModalSaveLoading(true);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        try {\r\n            await updateDoc(doc(collection(databaseInit, collectionName), docName), { [dataName]: modalData });\r\n            setModalSaveLoading(false);\r\n            setModalSortOpen(true);\r\n            setModalSave(false);\r\n\r\n\r\n            const logData = {\r\n                message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n                    `${title} updated`.toLowerCase(),\r\n                    `\"${title}\" updated`.toLowerCase(),\r\n                    'updated'.toLowerCase(),\r\n                    title.toLowerCase(),\r\n                    nameVariable.text.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n            };\r\n\r\n            addLogToCollection(logData);\r\n\r\n        } catch (error) {\r\n            setModalSaveLoading(false);\r\n            handleModalSaveClose();\r\n            console.error(error);\r\n        }\r\n\r\n\r\n    }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n    const handleSortModalOpen = useCallback(() => {\r\n        setModalIsLoading(true);\r\n        fetchData();\r\n        setModalSortOpen(true);\r\n        // handleFirstModalClose();\r\n    }, [modalSortOpen, modalIsLoading]);\r\n\r\n    const handleSortModalClose = useCallback(async () => {\r\n        setModalSortOpen(false);\r\n        setModalIsLoading(false);\r\n        // handleFirstModalOpen();\r\n    }, [modalSortOpen, modalIsLoading]);\r\n\r\n    // const handleAddTextChange = () => {\r\n    //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n    //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n    // };\r\n\r\n\r\n    const handleModalAddOpen = useCallback(() => {\r\n        setModalAddOpen(true);\r\n        handleSortModalClose();\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, [])\r\n\r\n    const handleModalAddClose = useCallback(() => {\r\n        setModalAddOpen(false);\r\n        handleSortModalOpen();\r\n        textAreaAdd.current?.clear();\r\n    }, [modalAddOpen])\r\n\r\n    const handleModalAddSuccessClose = useCallback(() => {\r\n        setModalAddSuccess(false);\r\n        // setIsLoading(false);\r\n        handleSortModalOpen();\r\n    }, [modalAddSuccess])\r\n\r\n    const handleModalAddSuccessOpen = useCallback(() => {\r\n        setModalAddSuccess(true);\r\n        handleSortModalClose();\r\n        setModalAddOpen(false);\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n    const handleModalSaveOpen = useCallback(() => {\r\n        setModalSave(true);\r\n        setModalSortOpen(false);\r\n        setModalIsLoading(true);\r\n    }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n    const handleModalSaveClose = useCallback(() => {\r\n        setModalSave(false);\r\n        setModalSortOpen(true);\r\n    }, [modalSave, modalSortOpen]);\r\n\r\n    const handleAddSubmit = async () => {\r\n\r\n        const data = textAreaAdd.current?.value;\r\n        const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        if (data !== '') {\r\n\r\n            setModalSaveLoading(true);\r\n\r\n            try {\r\n                const modalCollectionRef = collection(databaseInit, collectionName);\r\n                const modalDocRef = doc(modalCollectionRef, docName);\r\n                await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n                const logData = {\r\n                    message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n                        `${title} added`.toLowerCase(),\r\n                        `\"${title}\" added`.toLowerCase(),\r\n                        'added'.toLowerCase(),\r\n                        title.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                        timeWithMinutesSeconds.toLowerCase(),\r\n                    ],\r\n                };\r\n                addLogToCollection(logData);\r\n                setModalSaveLoading(false);\r\n\r\n                handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n                console.log('Data added to Firestore');\r\n            } catch (error) {\r\n                console.error('Error adding data to Firestore:', error);\r\n                setModalSaveLoading(false);\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Box justifyContent=\"center\" alignItems={'flex-start'} marginRight={1}>\r\n\r\n                {!modalIsLoading ? (\r\n                    <TouchableOpacity onPress={handleSortModalOpen} >\r\n                        <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n                    </TouchableOpacity>\r\n                ) : (\r\n                    <Spinner color=\"white\" size={20} />\r\n                )}\r\n\r\n\r\n            </Box>\r\n\r\n            <Modal\r\n                isOpen={modalSortOpen}\r\n                onClose={handleSortModalClose}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>{headerText}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                        <Box w={'full'} flexDir={'column'}>\r\n                            <Box alignItems={'flex-end'}>\r\n                                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n                            </Box>\r\n\r\n                            <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                                <DraggableFlatList\r\n                                    style={{ alignContent: 'center', flex: 1, }}\r\n                                    data={modalData}\r\n                                    keyExtractor={(item) => item}\r\n                                    renderItem={({ item, drag }) => (\r\n\r\n                                        <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                                            <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n\r\n                                            <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                                            <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                                        </Box>\r\n\r\n                                    )}\r\n                                    onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n                            </Box>\r\n\r\n                        </Box>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalSave}\r\n                onClose={handleModalSaveClose}>\r\n                <Modal.Content >\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Save Order?</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n                        <Text>Are you sure you want to save changes?</Text>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} >\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n                            <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalAddOpen}\r\n                onClose={handleModalAddClose}\r\n                initialFocusRef={textAreaAdd}>\r\n                <Modal.Content >\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Add {title}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n                        <TextArea\r\n                            textAlign={'center'}\r\n                            w={'full'}\r\n                            ref={textAreaAdd}\r\n                            multiline\r\n                            onChangeText={handleAddTextChange}\r\n                            totalLines={4}\r\n                            placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} >\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n            {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n            <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n                <Modal.Content bgColor={'green.100'}>\r\n                    <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n                        <Text textAlign={'center'} color={'#102A43'} bold>\r\n                            😊😎 Success! 😎😊\r\n                        </Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body\r\n                        justifyContent={'center'}\r\n                        alignItems={'center'}\r\n                        bgColor={'green.200'}\r\n                        borderLeftWidth={4}\r\n                        borderLeftColor={'green.600'}\r\n                        margin={5}\r\n                    >\r\n                        <Box flex={1}>\r\n                            <Text color={'green.600'} bold>\r\n                                Added successfully!\r\n                            </Text>\r\n                            <Text color={'green.600'}>\r\n                                Added successfully!\r\n                            </Text>\r\n                        </Box>\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                                Ok\r\n                            </Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\n\r\nconst FreightNavigation = () => {\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const dispatch = useDispatch();\r\n    const [selectedButtonState, setSelectedButtonState] = useState(defaultSelectedButton);\r\n\r\n\r\n    const handlePress = (button) => {\r\n        if (button !== selectedButtonState) {\r\n            dispatch(setLoadingModalVisible(true));\r\n        }\r\n        dispatch(setSelectedButton(button));\r\n        setSelectedButtonState(button);\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center', width: screenWidth >= 960 ? '50%' : '90%' }}>\r\n\r\n            <TouchableOpacity\r\n                onPress={() => handlePress('countries')}\r\n                style={{\r\n                    borderRadius: 5,\r\n                    flex: 1,\r\n                    padding: 10,\r\n                    margin: 10,\r\n                    borderWidth: 1,\r\n                    borderColor: 'white',\r\n                    backgroundColor: selectedButtonState === 'countries' ? '#0642F4' : 'transparent',\r\n                    flexDirection: 'row',\r\n                }}\r\n            >\r\n                <MaterialIcons\r\n                    name=\"flag\" // The icon name from MaterialIcons\r\n                    size={20} // Set the size of the icon\r\n                    color={selectedButtonState === 'countries' ? 'white' : 'black'} // Set the color based on active state\r\n                />\r\n                <Text style={{ color: selectedButtonState === 'countries' ? 'white' : 'black', fontWeight: 'bold', marginLeft: 5, }}>Countries</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n                onPress={() => handlePress('ports')}\r\n                style={{\r\n                    borderRadius: 5,\r\n                    flex: 1,\r\n                    padding: 10,\r\n                    margin: 10,\r\n                    borderWidth: 1,\r\n                    borderColor: 'white',\r\n                    backgroundColor: selectedButtonState === 'ports' ? '#0642F4' : 'transparent',\r\n                    flexDirection: 'row',\r\n                }}\r\n            >\r\n                <MaterialIcons\r\n                    name=\"directions-boat\" // The icon name from MaterialIcons\r\n                    size={20} // Set the size of the icon\r\n                    color={selectedButtonState === 'ports' ? 'white' : 'black'} // Set the color based on active state\r\n                />\r\n                <Text style={{ color: selectedButtonState === 'ports' ? 'white' : 'black', fontWeight: 'bold', marginLeft: 5, }}>Ports</Text>\r\n            </TouchableOpacity>\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectMethod = ({ defaultValue, portCode, page, searchQuery }) => {\r\n    const [selectedMethod, setSelectedMethod] = useState('');\r\n    const methodData = useSelector((state) => state.methodData);\r\n\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updatePortMethod = async (portCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        if (newValue !== '' && newValue !== '__NativeBasePlaceHolder__') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = portCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const methodField = `${formattedCountryCode}.method`;\r\n\r\n            try {\r\n                if (currentValue == selectedMethod) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [methodField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Method Updated: \"${nameVariable.text}\" updated \"${portCode}\" method to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Method Updated: \"${nameVariable.text}\" updated \"${portCode}\" inspection to \"${newValue}\"`.toLowerCase(),\r\n                            'Method'.toLowerCase(),\r\n                            'Method Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            portCode.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Method updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Method updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating method:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedPortCode = portCode.replace(/\\./g, '_');\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const portData = documentSnapshot.data()[formattedPortCode];\r\n                // Make sure to check if portData exists before trying to access its properties\r\n                if (portData && portData.method) {\r\n                    const method = portData.method;\r\n                    setSelectedMethod(method);\r\n                    currentValue = method;\r\n                }\r\n                else {\r\n                    setSelectedMethod('__NativeBasePlaceHolder__');\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: '100%', }}>\r\n\r\n\r\n            <Select\r\n                selectedValue={selectedMethod}\r\n                onValueChange={(value) => {\r\n                    setSelectedMethod(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {methodData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updatePortMethod(portCode, selectedMethod)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectInspectionIsRequired = ({ width, defaultValue, countryCode, page, searchQuery }) => {\r\n    const [selectedInspectionIsRequired, setSelectedInspectionIsRequired] = useState('');\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updateCountryInspection = async (countryCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const inspectionIsRequiredField = `${formattedCountryCode}.inspectionIsRequired`;\r\n\r\n            try {\r\n                if (currentValue == selectedInspectionIsRequired) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [inspectionIsRequiredField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Inspection Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Inspection Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection to \"${newValue}\"`.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Inspection Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Inspection updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Inspection updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.inspectionIsRequired) {\r\n                    const inspectionIsRequired = countryData.inspectionIsRequired;\r\n                    setSelectedInspectionIsRequired(inspectionIsRequired);\r\n                    currentValue = inspectionIsRequired;\r\n\r\n\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: width, }}>\r\n\r\n\r\n            <Select\r\n                selectedValue={selectedInspectionIsRequired}\r\n                onValueChange={(value) => {\r\n                    setSelectedInspectionIsRequired(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {inspectionIsRequiredData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updateCountryInspection(countryCode, selectedInspectionIsRequired)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectInspectionName = ({ width, defaultValue, countryCode, page, searchQuery }) => {\r\n    const [selectedInspectionName, setSelectedInspectionName] = useState('');\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updateCountryInspectionName = async (countryCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const inspectionNameField = `${formattedCountryCode}.inspectionName`;\r\n\r\n            try {\r\n                if (currentValue == selectedInspectionName) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [inspectionNameField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Inspection Name Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection name to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Inspection Name Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection name to \"${newValue}\"`.toLowerCase(),\r\n                            'Inspection Name'.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Inspection Name Updated'.toLowerCase(),\r\n                            'Name'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Inspection Name updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Inspection Name updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.inspectionName) {\r\n                    const inspectionName = countryData.inspectionName;\r\n                    setSelectedInspectionName(inspectionName);\r\n                    currentValue = inspectionName;\r\n\r\n                }\r\n                else {\r\n                    setSelectedInspectionName('__NativeBasePlaceHolder__');\r\n                    currentValue = '__NativeBasePlaceHolder__';\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: width, }}>\r\n            <Select\r\n                selectedValue={selectedInspectionName}\r\n                onValueChange={(value) => {\r\n                    setSelectedInspectionName(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {inspectionNameData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updateCountryInspectionName(countryCode, selectedInspectionName)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\nconst countriesList = [\r\n    \"Zambia\",\r\n    \"D.R.Congo\",\r\n    \"Mozambique\",\r\n    \"Zimbabwe\",\r\n    \"Uganda\",\r\n    \"Tanzania\",\r\n    \"Malawi\",\r\n    \"Burundi\",\r\n    \"Lesotho\",\r\n    \"South Sudan\",\r\n    \"Botswana\",\r\n    \"Kenya\",\r\n    \"Republic of South Africa\",\r\n    \"Djibouti\",\r\n    \"Ethiopia\",\r\n    \"Angola\",\r\n    \"Benin\",\r\n    \"Cameroon\",\r\n    \"Gabon\",\r\n    \"Ghana\",\r\n    \"Guinea\",\r\n    \"Madagascar\",\r\n    \"Mali\",\r\n    \"Namibia\",\r\n    \"Nigeria\",\r\n    \"Rwanda\",\r\n    \"Sierra Leone\",\r\n    \"Sudan\",\r\n    \"Algeria\",\r\n    \"Canary Islands\",\r\n    \"Cape Verde\",\r\n    \"Central African Republic\",\r\n    \"Chad\",\r\n    \"Equatorial Guinea\",\r\n    \"Eritrea\",\r\n    \"Gambia\",\r\n    \"Liberia\",\r\n    \"Mahe\",\r\n    \"Maldives\",\r\n    \"Mauritania\",\r\n    \"Mayotte\",\r\n    \"Morocco\",\r\n    \"Niger\",\r\n    \"Republic of Guinea-Bissau\",\r\n    \"Republic of the Congo\",\r\n    \"Reunion\",\r\n    \"Saint Helena\",\r\n    \"Sao Tome and Principe\",\r\n    \"Seychelles\",\r\n    \"Swaziland\",\r\n    \"Tunisia\",\r\n    \"Afghanistan\",\r\n    \"Albania\",\r\n    \"American Samoa\",\r\n    \"Anguilla\",\r\n    \"Antigua and Barbuda\",\r\n    \"Argentina\",\r\n    \"Armenia\",\r\n    \"Aruba\",\r\n    \"Australia\",\r\n    \"Austria\",\r\n    \"Azerbaijan\",\r\n    \"Bahamas\",\r\n    \"Bahrain\",\r\n    \"Bangladesh\",\r\n    \"Barbados\",\r\n    \"Belgium\",\r\n    \"Belize\",\r\n    \"Bermuda\",\r\n    \"Bhutan\",\r\n    \"Bolivia\",\r\n    \"Bonaire/Netherlands Antilles\",\r\n    \"Brazil\",\r\n    \"British Virgin Islands\",\r\n    \"Brunei Darussalam\",\r\n    \"Bulgaria\",\r\n    \"Burkina Faso\",\r\n    \"Cambodia\",\r\n    \"Canada\",\r\n    \"Cayman Islands\",\r\n    \"Chile\",\r\n    \"Colombia\",\r\n    \"Commonwealth of Dominica\",\r\n    \"Comoros\",\r\n    \"Cook Islands\",\r\n    \"Costa Rica\",\r\n    \"Cote D'Ivoire\",\r\n    \"Croatia\",\r\n    \"Cuba\",\r\n    \"Curacao/Netherlands Antilles\",\r\n    \"Cyprus\",\r\n    \"Czech Republic\",\r\n    \"Denmark\",\r\n    \"Dominican Republic\",\r\n    \"East Timor\",\r\n    \"Ecuador\",\r\n    \"Egypt\",\r\n    \"Estonia\",\r\n    \"Fiji\",\r\n    \"Finland\",\r\n    \"France\",\r\n    \"French Guiana\",\r\n    \"French Polynesia\",\r\n    \"Georgia\",\r\n    \"Germany\",\r\n    \"Greece\",\r\n    \"Grenada\",\r\n    \"Guadeloupe\",\r\n    \"Guatemala\",\r\n    \"Guyana\",\r\n    \"Haiti\",\r\n    \"Honduras\",\r\n    \"Hong Kong\",\r\n    \"Hungary\",\r\n    \"Iceland\",\r\n    \"India\",\r\n    \"Indonesia\",\r\n    \"Iran\",\r\n    \"Iraq\",\r\n    \"Ireland\",\r\n    \"Israel\",\r\n    \"Italy\",\r\n    \"Jamaica\",\r\n    \"Japan\",\r\n    \"Jordan\",\r\n    \"Kazakhstan\",\r\n    \"Kiribati\",\r\n    \"Korea\",\r\n    \"Kuwait\",\r\n    \"Kyrgyzstan\",\r\n    \"LAO PDR\",\r\n    \"Latvia\",\r\n    \"Lebanon\",\r\n    \"Libya\",\r\n    \"Lithuania\",\r\n    \"Luxembourg\",\r\n    \"Macau\",\r\n    \"Malaysia\",\r\n    \"Malta\",\r\n    \"Marshall Islands\",\r\n    \"Martinique\",\r\n    \"Mauritius\",\r\n    \"Mexico\",\r\n    \"Micronesia\",\r\n    \"Moldova\",\r\n    \"Mongolia\",\r\n    \"Montenegro\",\r\n    \"Montserrat\",\r\n    \"Myanmar\",\r\n    \"Nauru\",\r\n    \"Nepal\",\r\n    \"Netherlands\",\r\n    \"Netherlands Antilles\",\r\n    \"New Caledonia\",\r\n    \"New Zealand\",\r\n    \"Niue\",\r\n    \"Norway\",\r\n    \"Oman\",\r\n    \"Pakistan\",\r\n    \"Palau\",\r\n    \"Panama\",\r\n    \"Papua New Guinea\",\r\n    \"Paraguay\",\r\n    \"People's Republic of China\",\r\n    \"Peru\",\r\n    \"Philippines\",\r\n    \"Poland\",\r\n    \"Portugal\",\r\n    \"Puerto Rico\",\r\n    \"Qatar\",\r\n    \"Republic of Belarus\",\r\n    \"Republic of El Salvador\",\r\n    \"Republic of Macedonia\",\r\n    \"Republic of Nicaragua\",\r\n    \"Romania\",\r\n    \"Russian Federation\",\r\n    \"Saba Island\",\r\n    \"Saint Eustatius\",\r\n    \"Saint Kitts And Nevis\",\r\n    \"Samoa\",\r\n    \"Saudi Arabia\",\r\n    \"Senegal\",\r\n    \"Serbia\",\r\n    \"Singapore\",\r\n    \"Slovak Republic\",\r\n    \"Slovenia\",\r\n    \"Solomon Islands\",\r\n    \"Somalia\",\r\n    \"Spain\",\r\n    \"Sri Lanka\",\r\n    \"St. Barthelemy\",\r\n    \"St. Croix\",\r\n    \"St. Lucia\",\r\n    \"St. Maarten\",\r\n    \"St. Thomas\",\r\n    \"St. Vincent\",\r\n    \"Suriname\",\r\n    \"Sweden\",\r\n    \"Switzerland\",\r\n    \"Syria\",\r\n    \"Taiwan\",\r\n    \"Tajikistan\",\r\n    \"Thailand\",\r\n    \"Togo\",\r\n    \"Tonga\",\r\n    \"Tortola\",\r\n    \"Trinidad and Tobago\",\r\n    \"Turkey\",\r\n    \"Turkmenistan\",\r\n    \"Turks and Caicos Islands\",\r\n    \"Tuvalu\",\r\n    \"UAE\",\r\n    \"Ukraine\",\r\n    \"United Kingdom\",\r\n    \"Uruguay\",\r\n    \"US Virgin Islands\",\r\n    \"USA\",\r\n    \"Uzbekistan\",\r\n    \"Vanuatu\",\r\n    \"Venezuela\",\r\n    \"Vietnam\",\r\n    \"Wallis et Futuna\",\r\n    \"Yemen\",\r\n    \"Somaliland\",\r\n\r\n];\r\n\r\n\r\nconst addPort = async (portName, country, sortOrder) => {\r\n    const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n    // New country data\r\n    const newCountryData = {\r\n        [portName]: {\r\n            country: country,\r\n            sortOrder: sortOrder,\r\n            method: '',\r\n        }\r\n    };\r\n\r\n    // Set document with merge option\r\n    try {\r\n        await setDoc(docRef, newCountryData, { merge: true });\r\n        console.log(\"Country added/updated successfully!\");\r\n\r\n    } catch (error) {\r\n        console.error(\"Error adding/updating country: \", error);\r\n    }\r\n};\r\n\r\n\r\nconst addCountry = async (countryName, inspectionIsRequired, inspectionName, sortOrder) => {\r\n    const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n    // New country data\r\n    const newCountryData = {\r\n        [countryName]: {\r\n            inspectionIsRequired: inspectionIsRequired,\r\n            inspectionName: inspectionName,\r\n            sortOrder: sortOrder\r\n        }\r\n    };\r\n\r\n    // Set document with merge option\r\n    try {\r\n        await setDoc(docRef, newCountryData, { merge: true });\r\n        console.log(\"Country added/updated successfully!\");\r\n\r\n    } catch (error) {\r\n        console.error(\"Error adding/updating country: \", error);\r\n    }\r\n};\r\n\r\nconst AddCountryModal = ({ handleAddCountryModalClose }) => {\r\n\r\n    const addCountryModalVisible = useSelector((state) => state.addCountryModalVisible);\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const inputCountryText = useRef(null);\r\n    const textAreaAddInspectionIsRequired = useRef(null);\r\n    const textAreaAddInspectionName = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    const [addButtonLoading, setAddButtonLoading] = useState(false);\r\n\r\n    const handleAddInspectionIsRequiredTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionIsRequired.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionIsRequired.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddInspectionNameTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionName.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionName.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddButton = async () => {\r\n        setAddButtonLoading(true);\r\n        const countryCode = inputCountryText.current?.value;\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        if (inputCountryText.current?.value !== '') {\r\n            try {\r\n                await addCountry(formattedCountryCode, 'Not-Required', '', 999);\r\n                const logData = {\r\n                    message: `Country Added: \"${nameVariable.text}\" added country \"${countryCode}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Country Added: \"${nameVariable.text}\" added country \"${countryCode}\" for Freight.`.toLowerCase(),\r\n                        'Country'.toLowerCase(),\r\n                        'Country Added'.toLowerCase(),\r\n                        'Added'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        countryCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Country added successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                dispatch(setAddCountryModalVisible(false));\r\n                setAddButtonLoading(false);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n\r\n        else {\r\n            setAddButtonLoading(false);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleFirstModalClose = () => {\r\n        dispatch(setAddCountryModalVisible(false));\r\n\r\n    };\r\n    const handleFirstModalOpen = () => {\r\n        dispatch(setAddCountryModalVisible(true));\r\n    }\r\n\r\n    const filterInput = (inputRef) => {\r\n        const currentValue = inputRef.current.value;\r\n        const filteredValue = currentValue.replace(/[^a-zA-Z0-9. ]/g, '');\r\n        if (currentValue !== filteredValue) {\r\n            inputRef.current.setNativeProps({ text: filteredValue });\r\n        }\r\n    };\r\n    return (\r\n        <Modal\r\n            isOpen={addCountryModalVisible}\r\n            onClose={() => {\r\n                handleAddCountryModalClose();\r\n                inputCountryText.current.value = '';\r\n            }}\r\n            size={'md'}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header style={{ backgroundColor: '#7B9CFF', }}><Text color={'white'} fontSize={20} bold>Add Country</Text></Modal.Header>\r\n                <Modal.Body >\r\n                    <View style={{ marginVertical: 5, }}>\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Country</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputCountryText}\r\n                            onChangeText={() => filterInput(inputCountryText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Country' />\r\n\r\n                    </View>\r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"solid\" space=\"2\">\r\n                        <Button colorScheme={'gray'} onPress={() => {\r\n                            handleAddCountryModalClose();\r\n                            inputCountryText.current.value = '';\r\n                        }}>Cancel</Button>\r\n                        {addButtonLoading ?\r\n                            (<Spinner size=\"lg\" color={'#16A34A'} />) :\r\n                            (<Button colorScheme={'success'} onPress={handleAddButton}>Add</Button>)\r\n                        }\r\n\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst NavigatePage = () => {\r\n    const selectedButton = useSelector((state) => state.selectedButton);\r\n\r\n    if (selectedButton === 'countries') {\r\n        return <CountriesTable />;\r\n    }\r\n    if (selectedButton === 'ports') {\r\n        return <PortsTable />;\r\n    }\r\n};\r\n\r\n\r\nconst AddPortsForCountriesModal = ({ handleAddPortsForCountriesModalClose, handleAddPortsForCountriesModalOpen }) => {\r\n\r\n    const addPortsForCountriesModalVisible = useSelector((state) => state.addPortsForCountriesModalVisible);\r\n    const countryPortsData = useSelector((state) => state.countryPortsData);\r\n    const [data, setData] = useState([]);\r\n    const [modalSortOpen, setModalSortOpen] = useState(false);\r\n    const [modalAddOpen, setModalAddOpen] = useState(false);\r\n    const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n    const [modalSave, setModalSave] = useState(false);\r\n    const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n    const [modalIsLoading, setModalIsLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = selectedCountry.replace(/\\./g, '_');\r\n\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.nearestPorts) {\r\n                    const nearestPorts = countryData.nearestPorts;\r\n                    setData(nearestPorts);\r\n\r\n                }\r\n                else {\r\n                    setData([]);\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [addPortsForCountriesModalVisible]);\r\n\r\n    const handleDeleteItemPress = useCallback(\r\n        (item) => {\r\n            setData((prevData) => {\r\n                const updatedData = prevData.filter((value) => value !== item);\r\n                return updatedData;\r\n            });\r\n        },\r\n        []\r\n    );\r\n\r\n    const handleModalAddOpen = useCallback(() => {\r\n        setModalAddOpen(true);\r\n        handleAddPortsForCountriesModalClose();\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, []);\r\n\r\n    const handleModalAddClose = useCallback(() => {\r\n        setModalAddOpen(false);\r\n        dispatch(setAddPortsForCountriesModalVisible(true));\r\n    }, []);\r\n\r\n    const addPortForCountryField = async (newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        setModalSaveLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n\r\n        if (selectedPortForCountry.ports !== '') {\r\n            const formattedCountryCode = selectedCountry.replace(/\\./g, '_');\r\n            const nearestPortsField = `${formattedCountryCode}.nearestPorts`;\r\n\r\n            try {\r\n                // Fetch the current nearestPorts array from Firestore\r\n                const docSnap = await getDoc(documentRef);\r\n                if (docSnap.exists()) {\r\n                    const nearestPorts = docSnap.data()[formattedCountryCode]?.nearestPorts || [];\r\n\r\n                    // Check if selectedPortForCountry is already in the nearestPorts array\r\n                    if (!nearestPorts.includes(selectedPortForCountry.ports)) {\r\n                        // Update the document with the new value\r\n                        await updateDoc(documentRef, {\r\n                            [nearestPortsField]: [...nearestPorts, selectedPortForCountry.ports]\r\n                        });\r\n\r\n                        const logData = {\r\n                            message: `Nearest Ports Added: \"${nameVariable.text}\" added \"${selectedPortForCountry.ports}\" port to \"${selectedCountry}\"`,\r\n                            timestamp: formattedTime,\r\n                            colorScheme: true,\r\n                            keywords: [\r\n                                formattedTime.toLowerCase(),\r\n                                `Nearest Ports Added: \"${nameVariable.text}\" added \"${selectedPortForCountry.ports}\" port to \"${selectedCountry}\"`.toLowerCase(),\r\n                                'Nearest Ports'.toLowerCase(),\r\n                                'Nearest'.toLowerCase(),\r\n                                'Nearest Ports Added'.toLowerCase(),\r\n                                'Ports'.toLowerCase(),\r\n                                'Added'.toLowerCase(),\r\n                                selectedPortForCountry.ports.toLowerCase(),\r\n                                selectedCountry.toLowerCase(),\r\n                                nameVariable.text.toLowerCase(),\r\n                                year.toLowerCase(),\r\n                                month.toLowerCase(),\r\n                                monthWithDay.toLowerCase(),\r\n                                date.toLowerCase(),\r\n                                day.toLowerCase(),\r\n                                time.toLowerCase(),\r\n                            ],\r\n                        };\r\n                        addLogToCollection(logData);\r\n                        handleAddPortsForCountriesModalClose();\r\n                        toast.show({\r\n                            render: () => {\r\n                                return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                    <Text style={{ color: 'white' }}>Nearest Ports added successfully</Text>\r\n                                </View>;\r\n                            }\r\n                        })\r\n                        console.log('Nearest Ports added successfully');\r\n                        setModalSaveLoading(false);\r\n                        handleModalAddClose();\r\n                        // ...\r\n                    } else {\r\n                        // Handle the case where the port already exists\r\n                        console.log('Port already exists in the nearest ports list');\r\n                        setModalSaveLoading(false);\r\n\r\n                        // You can show a message to the user here if needed\r\n                    }\r\n                } else {\r\n                    console.log('No such document!');\r\n                    setModalSaveLoading(false);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n                setModalSaveLoading(false);\r\n                // Error handling...\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.log(newValue);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const updateCountryPortsField = async (newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        setModalSaveLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = selectedCountry.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const nearestPortsField = `${formattedCountryCode}.nearestPorts`;\r\n\r\n            try {\r\n\r\n\r\n                await updateDoc(documentRef, {\r\n                    [nearestPortsField]: newValue\r\n                });\r\n\r\n                dispatch(setLoadingModalVisible(false));\r\n                const logData = {\r\n                    message: `Nearest Ports Updated: \"${nameVariable.text}\" updated \"${selectedCountry}\" nearest ports`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Nearest Ports Updated: \"${nameVariable.text}\" updated \"${selectedCountry}\" nearest ports`.toLowerCase(),\r\n                        'Nearest Ports'.toLowerCase(),\r\n                        'Nearest'.toLowerCase(),\r\n                        'Nearest Ports Updated'.toLowerCase(),\r\n                        'Ports'.toLowerCase(),\r\n                        'Updated'.toLowerCase(),\r\n                        selectedCountry.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                addLogToCollection(logData);\r\n                handleAddPortsForCountriesModalClose();\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Nearest Ports updated successfully</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                console.log('Nearest Ports updated successfully');\r\n                setModalSaveLoading(false);\r\n\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n                setModalSaveLoading(false);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.log(newValue);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <><Modal\r\n            isOpen={addPortsForCountriesModalVisible}\r\n            onClose={handleAddPortsForCountriesModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header borderBottomWidth={0}>\r\n                    <Text color={'#102A43'} bold>Manage ports for {selectedCountry}</Text>\r\n                </Modal.Header>\r\n                <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                    <View style={{ width: '100%' }}>\r\n                        <View style={{ alignItems: 'flex-end', }}>\r\n                            <TouchableOpacity onPress={handleModalAddOpen}><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></TouchableOpacity>\r\n                        </View>\r\n                        <View style={{ flex: 1, borderWidth: 1, borderColor: '#102A43', borderRadius: 5, }}>\r\n                            <DraggableFlatList\r\n                                style={{ alignContent: 'center', flex: 1, }}\r\n                                data={data}\r\n                                keyExtractor={(item) => item}\r\n                                renderItem={({ item, drag }) => (\r\n\r\n                                    <View style={{\r\n                                        flex: 1,\r\n                                        backgroundColor: 'rgba(16,42,67, 0.5)',\r\n                                        borderBottomWidth: 1,\r\n                                        borderBottomColor: '#A8A29E',\r\n                                        flexDirection: 'row',\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center',\r\n                                    }}>\r\n                                        <TouchableOpacity onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></TouchableOpacity>\r\n                                        <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                                        <TouchableOpacity onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></TouchableOpacity>\r\n                                    </View>\r\n\r\n                                )}\r\n                                onDragEnd={useCallback(({ data }) => setData(data), [])} />\r\n\r\n\r\n                        </View>\r\n\r\n                    </View>\r\n                </Modal.Body>\r\n                <Modal.Footer borderTopWidth={0}>\r\n                    <HStack space={5} flex={1}>\r\n                        <Button onPress={handleAddPortsForCountriesModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                        {modalSaveLoading ?\r\n                            (<Button flex={1} size={'sm'} borderRadius={5} colorScheme={'success'} disabled>\r\n                                <Spinner size={18} color={'white'} flex={1} borderRadius={5} />\r\n                            </Button>) :\r\n                            (<Button onPress={() => updateCountryPortsField(data)} flex={1} size={'sm'} borderRadius={5} colorScheme={'success'}>Save</Button>)\r\n                        }\r\n\r\n                    </HStack>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n            <Modal\r\n                isOpen={modalAddOpen}\r\n                onClose={handleModalAddClose}\r\n            // initialFocusRef={textAreaAdd}\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Add Ports for {selectedCountry}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                        <SearchablePortDropdown modalAddOpen={modalAddOpen} />\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={() => addPortForCountryField()} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5} colorScheme={'success'}>Add</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal></>\r\n    );\r\n\r\n}\r\n\r\nconst DeleteCountryModal = ({ handleDeleteCountryModalClose }) => {\r\n    const deleteCountryModalVisible = useSelector((state) => state.deleteCountryModalVisible);\r\n    const [buttonLoading, setButtonLoading] = useState(false);\r\n\r\n    const handleDeleteCountry = async () => {\r\n        setButtonLoading(true);\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        const formattedFieldCode = selectedCountry.replace(/\\./g, '_');\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        updateDoc(documentRef, {\r\n            [formattedFieldCode]: deleteField()\r\n        })\r\n            .then(() => {\r\n                console.log('Field deleted successfully');\r\n                handleDeleteCountryModalClose();\r\n                setButtonLoading(false);\r\n                const logData = {\r\n                    message: `Country Deleted: \"${nameVariable.text}\" deleted country \"${selectedCountry}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: false,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Country Deleted: \"${nameVariable.text}\" deleted country \"${selectedCountry}\" for Freight.`.toLowerCase(),\r\n                        'Country'.toLowerCase(),\r\n                        'Country Deleted'.toLowerCase(),\r\n                        'Deleted'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        selectedCountry.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting field: ', error);\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal isOpen={deleteCountryModalVisible} onClose={handleDeleteCountryModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header>Delete Country?</Modal.Header>\r\n                <Modal.Body>\r\n                    Are you sure you want to delete the selected country?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        <TouchableOpacity\r\n                            style={{ flex: 1, backgroundColor: '#525252', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            onPress={handleDeleteCountryModalClose}\r\n                        >\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }}>No</Text>\r\n                        </TouchableOpacity>\r\n                        {buttonLoading ?\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            ><Spinner size={18} color={'white'} />\r\n                            </TouchableOpacity>) :\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                                onPress={handleDeleteCountry}\r\n                            >\r\n                                <Text style={{ color: 'white', alignSelf: 'center', }}>Yes</Text>\r\n                            </TouchableOpacity>)\r\n                        }\r\n\r\n\r\n                    </View>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst CountriesTable = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const optionsPerPage = [10, 20, 50];\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const [data, setData] = useState([]); // This will hold all the countries data   \r\n    const [page, setPage] = useState(0);\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const inputSearchRef = useRef(null);\r\n    const inputSortOrder = useRef([]);\r\n    const toast = useToast();\r\n    const textAreaAddInspectionIsRequired = useRef(null);\r\n    const textAreaAddInspectionName = useRef(null);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter((item) =>\r\n            item.country.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.inspectionName.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.inspectionIsRequired.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.sortOrder.toString().includes(searchQuery)\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce(() => {\r\n        setSearchQuery(inputSearchRef.current?.value);\r\n    }, 50);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    // useEffect(() => {\r\n    //     const addCountriesToFirestore = async () => {\r\n    //         // Create a new list with dots replaced by underscores\r\n    //         const sanitizedCountriesList = countriesList.map(country =>\r\n    //             country.replace(/\\./g, '_')\r\n    //         );\r\n\r\n    //         for (const [index, country] of sanitizedCountriesList.entries()) {\r\n    //             // The index of an array is zero-based, to make it one-based add 1\r\n    //             // (If you really need a one-based index, otherwise just use index)\r\n    //             const sortOrder = index;\r\n    //             try {\r\n    //                 await addCountry(country, 'Not-Required', '', sortOrder);\r\n    //             } catch (error) {\r\n    //                 console.error(`Error adding country: ${country}`, error);\r\n    //                 // Optionally handle the error by stopping the loop, or continue to the next iteration\r\n    //                 // break; // Stop the loop if an error occurs\r\n    //                 // continue; // Skip to the next iteration\r\n    //             }\r\n    //             // Optionally add a delay here if necessary\r\n    //             // await new Promise(resolve => setTimeout(resolve, 1000)); // 1 second delay\r\n    //         }\r\n    //     };\r\n\r\n    //     addCountriesToFirestore();\r\n    // }, []);\r\n    const handleAddInspectionNameTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionName.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionName.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddInspectionIsRequiredTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionIsRequired.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionIsRequired.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map(key => ({\r\n                        country: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n                setFilteredData(formattedData);\r\n                dispatch(setLoadingModalVisible(false));\r\n            } else {\r\n                console.log(\"No such document!\");\r\n\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching countries: \", error);\r\n\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n\r\n    const handleAddCountryModalOpen = () => {\r\n\r\n        dispatch(setAddCountryModalVisible(true));\r\n\r\n    }\r\n\r\n    const handleAddCountryModalClose = () => {\r\n\r\n        dispatch(setAddCountryModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n    const handleAddPortsForCountriesModalOpen = (nearestPorts, country) => {\r\n\r\n        dispatch(setAddPortsForCountriesModalVisible(true));\r\n        dispatch(setCountryPortsData(nearestPorts));\r\n        // setSelectedCountry(selectedCountry);\r\n        selectedCountry = country;\r\n    }\r\n\r\n\r\n    const handleAddPortsForCountriesModalClose = () => {\r\n\r\n        dispatch(setAddPortsForCountriesModalVisible(false));\r\n    }\r\n\r\n    useEffect(() => {\r\n        paginatedData.forEach(item => {\r\n            inputSortOrder.current[item.country].value = item.sortOrder ? item.sortOrder : 0;\r\n        });\r\n        // setInputMemoValues(initialValues);\r\n\r\n    }, [paginatedData, screenWidth]); // Run this effect when 'items' changes\r\n    // Now, to update a specific field\r\n\r\n    const updateCountrySortOrder = async (countryCode, newValue, inputRef) => {\r\n        // Specify the document reference\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const sortOrderField = `${formattedCountryCode}.sortOrder`;\r\n\r\n            try {\r\n                // Perform the update\r\n                await updateDoc(documentRef, {\r\n                    [sortOrderField]: newValue\r\n                });\r\n\r\n\r\n\r\n                const logData = {\r\n                    message: `Sort Order Updated: \"${nameVariable.text}\" updated \"${countryCode}\" sort order to \"${newValue}\".`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Sort Order Updated: \"${nameVariable.text}\" updated \"${countryCode}\" sort order to \"${newValue}\"`.toLowerCase(),\r\n                        'Sort'.toLowerCase(),\r\n                        'Sort Order'.toLowerCase(),\r\n                        'Sort Order Updated'.toLowerCase(),\r\n                        'Order Updated'.toLowerCase(),\r\n                        'Order'.toLowerCase(),\r\n                        'Updated'.toLowerCase(),\r\n                        countryCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Sort order updated successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                addLogToCollection(logData);\r\n                dispatch(setLoadingModalVisible(false));\r\n                console.log('Sort order updated successfully');\r\n            } catch (error) {\r\n                console.error('Error updating sort order:', error);\r\n\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n    // Call the function to update the field\r\n\r\n\r\n\r\n\r\n    const handleSortOrderTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 3);\r\n\r\n        inputSortOrder.current[item.country].value = numericValue;\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleDeleteCountryModalOpen = (selectedValue) => {\r\n\r\n        dispatch(setDeleteCountryModalVisible(true));\r\n        selectedCountry = selectedValue;\r\n\r\n    }\r\n\r\n    const handleDeleteCountryModalClose = () => {\r\n\r\n        dispatch(setDeleteCountryModalVisible(false));\r\n\r\n    }\r\n\r\n    const handleUpdateInsurance = async (newValue, currentValue, countryCode) => {\r\n\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const insuranceField = `${formattedCountryCode}.insurance`;\r\n\r\n            try {\r\n                if (currentValue == newValue) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [insuranceField]: newValue,\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Insurance Updated: \"${nameVariable.text}\" updated \"${countryCode}\" insurance to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Insurance Updated: \"${nameVariable.text}\" updated \"${countryCode}\" insurance to \"${newValue}\"`.toLowerCase(),\r\n                            'Insurance'.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Insurance Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            newValue.toString().toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Insurance updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Insurance updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {screenWidth >= 1280 ? (\r\n                <View style={{ flex: 1, }}>\r\n                    {/* Search Bar */}\r\n                    <View style={{ padding: 10 }}>\r\n                        <TextInput\r\n                            ref={inputSearchRef}\r\n                            onSubmitEditing={handleSearch}\r\n                            style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                            placeholder='Search'\r\n                            returnKeyType='search'\r\n                            autoCapitalize='none'\r\n                        />\r\n                    </View>\r\n\r\n                    {/* Add Country Button */}\r\n                    <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                        <TouchableOpacity\r\n                            onPress={handleAddCountryModalOpen}\r\n                            style={{\r\n                                borderRadius: 5,\r\n                                padding: 10,\r\n                                borderWidth: 1,\r\n                                borderColor: 'white',\r\n                                backgroundColor: '#16A34A',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                            <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Country</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    {/* Table Headers */}\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: '#E4E4E7',\r\n                            backgroundColor: '#0642F4',\r\n                            padding: 10,\r\n                            borderRadius: 5,\r\n                            marginTop: 10,\r\n                        }}\r\n                    >\r\n                        <View style={{ flex: 1, padding: 2, }}>\r\n                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, }}>\r\n                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, flexDirection: 'row', }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='InspectionIsRequiredDoc'\r\n                                handleAddTextChange={handleAddInspectionIsRequiredTextChange}\r\n                                textAreaAdd={textAreaAddInspectionIsRequired}\r\n                                title='Inspection'\r\n                                dataName={'inspectionIsRequiredData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Inspection\"\r\n                                data={inspectionIsRequiredData}\r\n                            />\r\n                            <Text flex={1} style={{ color: 'white', }} bold>Inspection</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, flexDirection: 'row', }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='InspectionNameDoc'\r\n                                handleAddTextChange={handleAddInspectionNameTextChange}\r\n                                textAreaAdd={textAreaAddInspectionName}\r\n                                title='Inspection Name'\r\n                                dataName={'inspectionNameData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Inspection\"\r\n                                data={inspectionNameData}\r\n                            />\r\n                            <Text style={{ color: 'white', }} bold>Inspection Name</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }} bold>Insurance</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }} bold>Nearest Port</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                        {paginatedData.map((item, index) => (\r\n                            <View\r\n                                key={index}\r\n                                style={{\r\n                                    flex: 1,\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'space-between',\r\n                                    alignItems: 'center',\r\n                                    borderBottomWidth: 1,\r\n                                    borderBottomColor: '#E4E4E7',\r\n                                    backgroundColor: '#BFDBFE',\r\n                                    paddingVertical: 10,\r\n                                }}>\r\n                                <Text style={{ flex: 1, marginHorizontal: 5 }} selectable>{item.country}</Text>\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 5, }}>\r\n                                    {/* <Text style={{ borderTopLeftRadius: 5, borderBottomLeftRadius: 5, alignSelf: 'center', backgroundColor: 'white', padding: 8 }}>{item.sortOrder}→</Text> */}\r\n                                    <TextInput\r\n                                        ref={(ref) => (inputSortOrder.current[item.country] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '20%', backgroundColor: 'white', borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                        onSubmitEditing={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                        onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n\r\n                                </View>\r\n                                {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <SelectInspectionIsRequired width={'70%'} defaultValue={item.inspectionIsRequired} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n\r\n                                </View>\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <SelectInspectionName width={'70%'} defaultValue={item.inspectionName} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, marginHorizontal: 5, justifyContent: 'center', alignItems: 'center', }}>\r\n                                    <BouncyCheckbox\r\n                                        size={25}\r\n                                        fillColor=\"#0642F4\"\r\n                                        unfillColor=\"#FFFFFF\"\r\n                                        innerIconStyle={{ borderWidth: 2 }}\r\n                                        textStyle={{ fontFamily: \"JosefinSans-Regular\" }}\r\n                                        isChecked={item.insurance ? item.insurance : false}\r\n                                        onPress={(isChecked) => handleUpdateInsurance(isChecked, item.insurance ? item.insurance : false, item.country)}\r\n                                    />\r\n                                </View>\r\n                                <View style={{ flexDirection: 'row', flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <TouchableOpacity\r\n                                        onPress={() => handleAddPortsForCountriesModalOpen(item.nearestPorts ? item.nearestPorts : [], item.country)}\r\n                                        style={{ flex: 1, backgroundColor: '#0891B2', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}\r\n                                    >\r\n                                        <MaterialIcons\r\n                                            name=\"directions-boat\" // The icon name from MaterialIcons\r\n                                            size={20} // Set the size of the icon\r\n                                            color={'white'} // Set the color based on active state\r\n                                        />\r\n                                        <Text style={{ alignSelf: 'center', color: 'white', marginLeft: 3, }}>View Ports</Text>\r\n                                    </TouchableOpacity>\r\n                                    {/* <TouchableOpacity style={{ flex: 1 }}>\r\n                                <Text>Add Ports</Text>\r\n                            </TouchableOpacity> */}\r\n                                </View>\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => handleDeleteCountryModalOpen(item.country)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#DC2626',\r\n                                                borderRadius: 5,\r\n                                                padding: 10,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <AntDesign name='delete' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n                                {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                            </View>\r\n                        ))}\r\n                        <DataTable.Pagination\r\n                            page={page}\r\n                            numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                            onPageChange={(page) => setPage(page)}\r\n                            label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                            optionsPerPage={optionsPerPage}\r\n                            itemsPerPage={itemsPerPage}\r\n                            setItemsPerPage={setItemsPerPage}\r\n                            showFastPagination\r\n                            optionsLabel={'Rows per page'}\r\n                        />\r\n                    </DataTable>\r\n                    <AddCountryModal handleAddCountryModalClose={handleAddCountryModalClose} />\r\n                    <AddPortsForCountriesModal handleAddPortsForCountriesModalClose={handleAddPortsForCountriesModalClose} handleAddPortsForCountriesModalOpen={handleAddPortsForCountriesModalOpen} />\r\n                    <DeleteCountryModal handleDeleteCountryModalClose={handleDeleteCountryModalClose} />\r\n                </View>\r\n            ) :\r\n\r\n                (\r\n                    //Countries Table Mobile View\r\n                    <View style={{ flex: 1, }}>\r\n                        {/* Search Bar */}\r\n                        <View style={{ padding: 10 }}>\r\n                            <TextInput\r\n                                ref={inputSearchRef}\r\n                                onSubmitEditing={handleSearch}\r\n                                style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                                placeholder='Search'\r\n                                returnKeyType='search'\r\n                                autoCapitalize='none'\r\n                            />\r\n                        </View>\r\n\r\n                        <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                            <TouchableOpacity\r\n                                onPress={handleAddCountryModalOpen}\r\n                                style={{\r\n                                    borderRadius: 5,\r\n                                    padding: 10,\r\n                                    borderWidth: 1,\r\n                                    borderColor: 'white',\r\n                                    backgroundColor: '#16A34A',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                                <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Country</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n\r\n                        {/* Table Headers */}\r\n\r\n\r\n                        <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                            {paginatedData.map((item, index) => (\r\n                                <View\r\n                                    key={index}\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'column',\r\n                                        borderWidth: 1,\r\n                                        borderColor: '#E4E4E7',\r\n                                        backgroundColor: '#BFDBFE',\r\n                                        margin: 10,\r\n                                    }}>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <Text selectable style={{ marginLeft: 3 }}>{item.country}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            {/* <Text style={{ borderTopLeftRadius: 5, borderBottomLeftRadius: 5, alignSelf: 'center', backgroundColor: 'white', padding: 8 }}>{item.sortOrder}→</Text> */}\r\n                                            <TextInput\r\n                                                ref={(ref) => (inputSortOrder.current[item.country] = ref)}\r\n                                                style={{ outlineStyle: 'none', padding: 5, width: '100%', backgroundColor: 'white', borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                onSubmitEditing={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                                onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                            />\r\n                                            <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                <TouchableHighlight\r\n                                                    onPress={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                                    underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                    style={{\r\n                                                        backgroundColor: '#16A34A',\r\n                                                        borderRadius: 5,\r\n                                                        padding: 5,\r\n                                                        margin: 2,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    <MaterialIcons name='update' color='white' size={22} />\r\n                                                </TouchableHighlight>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Inspection</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <SelectInspectionIsRequired width={'100%'} defaultValue={item.inspectionIsRequired} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Inspection Name</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <SelectInspectionName width={'100%'} defaultValue={item.inspectionName} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Insurance</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <BouncyCheckbox\r\n                                                size={25}\r\n                                                fillColor=\"#0642F4\"\r\n                                                unfillColor=\"#FFFFFF\"\r\n                                                innerIconStyle={{ borderWidth: 2 }}\r\n                                                textStyle={{ fontFamily: \"JosefinSans-Regular\" }}\r\n                                                isChecked={item.insurance ? item.insurance : false}\r\n                                                onPress={(isChecked) => handleUpdateInsurance(isChecked, item.insurance ? item.insurance : false, item.country)}\r\n                                            />\r\n                                        </View>\r\n                                    </View>\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Nearest Port</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flexDirection: 'row', flex: 1, marginHorizontal: 5 }}>\r\n                                                <TouchableOpacity\r\n                                                    onPress={() => handleAddPortsForCountriesModalOpen(item.nearestPorts ? item.nearestPorts : [], item.country)}\r\n                                                    style={{ flex: 1, backgroundColor: '#0891B2', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}\r\n                                                >\r\n                                                    <MaterialIcons\r\n                                                        name=\"directions-boat\" // The icon name from MaterialIcons\r\n                                                        size={20} // Set the size of the icon\r\n                                                        color={'white'} // Set the color based on active state\r\n                                                    />\r\n                                                    <Text style={{ alignSelf: 'center', color: 'white', marginLeft: 3, }}>View Ports</Text>\r\n                                                </TouchableOpacity>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n\r\n                                                <View style={{ flex: 1, borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => handleDeleteCountryModalOpen(item.country)}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 6, }}>\r\n                                                        <AntDesign name='delete' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                </View>\r\n                            ))}\r\n                            <DataTable.Pagination\r\n                                page={page}\r\n                                numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                onPageChange={(page) => setPage(page)}\r\n                                label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                optionsPerPage={optionsPerPage}\r\n                                itemsPerPage={itemsPerPage}\r\n                                setItemsPerPage={setItemsPerPage}\r\n                                showFastPagination\r\n                                optionsLabel={'Rows per page'}\r\n                            />\r\n                        </DataTable>\r\n                        <AddCountryModal handleAddCountryModalClose={handleAddCountryModalClose} />\r\n                        <AddPortsForCountriesModal handleAddPortsForCountriesModalClose={handleAddPortsForCountriesModalClose} handleAddPortsForCountriesModalOpen={handleAddPortsForCountriesModalOpen} />\r\n                        <DeleteCountryModal handleDeleteCountryModalClose={handleDeleteCountryModalClose} />\r\n                    </View>\r\n                )}\r\n\r\n\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst portsList = {\r\n    \"Dar es Salaam\": { country: \"Tanzania\" },\r\n    \"Durban\": { country: \"Republic of South Africa\" },\r\n    \"Maputo\": { country: \"Mozambique\" },\r\n    \"Abidjan\": { country: \"Cote D'Ivoire\" },\r\n    \"Mombasa\": { country: \"Kenya\" },\r\n    \"Lusaka\": { country: \"Zambia\" },\r\n    \"Matadi\": { country: \"D.R. Congo\" },\r\n    \"Zanzibar\": { country: \"Tanzania\" },\r\n    \"St. John's\": { country: \"Antigua and Barbuda\" },\r\n    \"Aarhus\": { country: \"Denmark\" },\r\n    \"Abadan\": { country: \"Iran\" },\r\n    \"Abu Dhabi\": { country: \"United Arab Emirates\" },\r\n    \"Acapulco\": { country: \"Mexico\" },\r\n    \"Adelaide\": { country: \"Australia\" },\r\n    \"Aden\": { country: \"Yemen\" },\r\n    \"Al Khobar\": { country: \"Saudi Arabia\" },\r\n    \"Al Ladhiqiyah\": { country: \"Syria\" },\r\n    \"Al Mukalla\": { country: \"Yemen\" },\r\n    \"Al Qusayr\": { country: \"Egypt\" },\r\n    \"Al Ruwais\": { country: \"Qatar\" },\r\n    \"Alexandria\": { country: \"Egypt\" },\r\n    \"Algiers\": { country: \"Algeria\" },\r\n    \"Antwerp\": { country: \"Belgium\" },\r\n    \"Apia\": { country: \"Samoa\" },\r\n    \"Aqaba\": { country: \"Jordan\" },\r\n    \"Arwad\": { country: \"Syria\" },\r\n    \"As Salif\": { country: \"Yemen\" },\r\n    \"Ash Shihr\": { country: \"Yemen\" },\r\n    \"Ashdod\": { country: \"Israel\" },\r\n    \"Ashgabat\": { country: \"Turkmenistan\" },\r\n    \"Ashkelon\": { country: \"Israel\" },\r\n    \"Assab\": { country: \"Eritrea\" },\r\n    \"Assumption Island\": { country: \"Seychelles\" },\r\n    \"Asunción\": { country: \"Paraguay\" },\r\n    \"Auckland\": { country: \"New Zealand\" },\r\n    \"Avarua\": { country: \"Cook Islands\" },\r\n    \"Balboa\": { country: \"Panama\" },\r\n    \"Balhaf\": { country: \"Yemen\" },\r\n    \"Banana\": { country: \"D.R.Congo\" },\r\n    \"Bandar Abbas\": { country: \"Iran\" },\r\n    \"Bandar Seri Begawan\": { country: \"Brunei Darussalam\" },\r\n    \"Bangkok\": { country: \"Thailand\" },\r\n    \"Baniyas\": { country: \"Syria\" },\r\n    \"Banjul\": { country: \"Gambia\" },\r\n    \"Bar\": { country: \"Montenegro\" },\r\n    \"Barcelona\": { country: \"Spain\" },\r\n    \"Barranquilla\": { country: \"Colombia\" },\r\n    \"Basra\": { country: \"Iraq\" },\r\n    \"Basse-Terre\": { country: \"Guadeloupe\" },\r\n    \"Batroun\": { country: \"Lebanon\" },\r\n    \"Batumi\": { country: \"Georgia\" },\r\n    \"Beira\": { country: \"Mozambique\" },\r\n    \"Beirut\": { country: \"Lebanon\" },\r\n    \"Belize City\": { country: \"Belize\" },\r\n    \"Benghazi\": { country: \"Libya\" },\r\n    \"Berbera\": { country: \"Somalia\" },\r\n    \"Berbera\": { country: \"Somaliland\" },\r\n    \"Bissau\": { country: \"Guinea-Bissau\" },\r\n    \"Bissau\": { country: \"Republic of Guinea-Bissau\" },\r\n    \"Blantyre\": { country: \"Malawi\" },\r\n    \"Bo\": { country: \"Sierra Leone\" },\r\n    \"Boma\": { country: \"D.R.Congo\" },\r\n    \"Bosaso\": { country: \"Somalia\" },\r\n    \"Brava\": { country: \"Somalia\" },\r\n    \"Brazzaville\": { country: \"Republic of the Congo\" },\r\n    \"Bridgetown\": { country: \"Barbados\" },\r\n    \"Brisbane\": { country: \"Australia\" },\r\n    \"Buchanan\": { country: \"Liberia\" },\r\n    \"Bucharest\": { country: \"Romania\" },\r\n    \"Buenos Aires\": { country: \"Argentina\" },\r\n    \"Busan\": { country: \"South Korea\" },\r\n    \"Byblos\": { country: \"Lebanon\" },\r\n    \"Cabinda\": { country: \"Angola\" },\r\n    \"Calabar\": { country: \"Nigeria\" },\r\n    \"Calais\": { country: \"France\" },\r\n    \"Callao\": { country: \"Peru\" },\r\n    \"Cap-Haitien\": { country: \"Haiti\" },\r\n    \"Cape Town\": { country: \"South Africa\" },\r\n    \"Caracas\": { country: \"Venezuela\" },\r\n    \"Cartagena\": { country: \"Colombia\" },\r\n    \"Casablanca\": { country: \"Morocco\" },\r\n    \"Cayenne\": { country: \"French Guiana\" },\r\n    \"Cebu\": { country: \"Philippines\" },\r\n    \"Chabahar\": { country: \"Iran\" },\r\n    \"Charlotte Amalie\": { country: \"US Virgin Islands\" },\r\n    \"Chekka\": { country: \"Lebanon\" },\r\n    \"Chisinau\": { country: \"Moldova\" },\r\n    \"Chittagong\": { country: \"Bangladesh\" },\r\n    \"Christchurch\": { country: \"New Zealand\" },\r\n    \"Colombo\": { country: \"Sri Lanka\" },\r\n    \"Colonia\": { country: \"Micronesia\" },\r\n    \"Comoros\": { country: \"Comoros\" },\r\n    \"Conakry\": { country: \"Guinea\" },\r\n    \"Constanta\": { country: \"Romania\" },\r\n    \"Constanța\": { country: \"Romania\" },\r\n    \"Copenhagen\": { country: \"Denmark\" },\r\n    \"Cork\": { country: \"Ireland\" },\r\n    \"Cotonou\": { country: \"Benin\" },\r\n    \"Cristóbal\": { country: \"Panama\" },\r\n    \"Dakar\": { country: \"Senegal\" },\r\n    \"Dammam\": { country: \"Saudi Arabia\" },\r\n    \"Darwin\": { country: \"Australia\" },\r\n    \"Diego Suarez (Antsiranana)\": { country: \"Madagascar\" },\r\n    \"Dili\": { country: \"East Timor\" },\r\n    \"Djibouti\": { country: \"Djibouti\" },\r\n    \"Doha\": { country: \"Qatar\" },\r\n    \"Doraleh\": { country: \"Djibouti\" },\r\n    \"Douala\": { country: \"Cameroon\" },\r\n    \"Dubai\": { country: \"UAE\" },\r\n    \"Dublin\": { country: \"Ireland\" },\r\n    \"Duqm\": { country: \"Oman\" },\r\n    \"Durrës\": { country: \"Albania\" },\r\n    \"Dzaoudzi\": { country: \"Mayotte\" },\r\n    \"Ehoala\": { country: \"Madagascar\" },\r\n    \"Eil\": { country: \"Somalia\" },\r\n    \"Eilat\": { country: \"Israel\" },\r\n    \"El Arish\": { country: \"Egypt\" },\r\n    \"El Ma'an\": { country: \"Somalia\" },\r\n    \"El Tor\": { country: \"Egypt\" },\r\n    \"Famagusta\": { country: \"Cyprus\" },\r\n    \"Freeport\": { country: \"Bahamas\" },\r\n    \"Freetown\": { country: \"Sierra Leone\" },\r\n    \"Fremantle\": { country: \"Australia\" },\r\n    \"Funafuti\": { country: \"Tuvalu\" },\r\n    \"Garoua\": { country: \"Cameroon\" },\r\n    \"Gdansk\": { country: \"Poland\" },\r\n    \"Gdańsk\": { country: \"Poland\" },\r\n    \"Gdynia\": { country: \"Poland\" },\r\n    \"Genoa\": { country: \"Italy\" },\r\n    \"George Town\": { country: \"Cayman Islands\" },\r\n    \"Georgetown\": { country: \"Guyana\" },\r\n    \"Gizo\": { country: \"Solomon Islands\" },\r\n    \"Gothenburg\": { country: \"Sweden\" },\r\n    \"Grand Turk\": { country: \"Turks and Caicos Islands\" },\r\n    \"Greenville\": { country: \"Liberia\" },\r\n    \"Guangzhou\": { country: \"Peoples Republic of China\" },\r\n    \"Guayaquil\": { country: \"Ecuador\" },\r\n    \"Gwadar\": { country: \"Pakistan\" },\r\n    \"Gydnia\": { country: \"Poland\" },\r\n    \"Hadera\": { country: \"Israel\" },\r\n    \"Haifa\": { country: \"Israel\" },\r\n    \"Hamburg\": { country: \"Germany\" },\r\n    \"Hamilton\": { country: \"Bermuda\" },\r\n    \"Hargeisa\": { country: \"Somaliland\" },\r\n    \"Harper\": { country: \"Liberia\" },\r\n    \"Havana\": { country: \"Cuba\" },\r\n    \"Helsinki\": { country: \"Finland\" },\r\n    \"Ho Chi Minh City\": { country: \"Vietnam\" },\r\n    \"Hobyo\": { country: \"Somalia\" },\r\n    \"Hodeida\": { country: \"Yemen\" },\r\n    \"Hodeidah\": { country: \"Yemen\" },\r\n    \"Hong Kong\": { country: \"Hong Kong\" },\r\n    \"Honiara\": { country: \"Solomon Islands\" },\r\n    \"Incheon\": { country: \"South Korea\" },\r\n    \"Inchon\": { country: \"South Korea\" },\r\n    \"Istanbul\": { country: \"Turkey\" },\r\n    \"Jaffna\": { country: \"Sri Lanka\" },\r\n    \"Jakarta\": { country: \"Indonesia\" },\r\n    \"Jamestown\": { country: \"Saint Helena\" },\r\n    \"Jeddah Islamic Port\": { country: \"Saudi Arabia\" },\r\n    \"Jeddah\": { country: \"Saudi Arabia\" },\r\n    \"Jizan\": { country: \"Saudi Arabia\" },\r\n    \"Jounieh\": { country: \"Lebanon\" },\r\n    \"Jubail\": { country: \"Saudi Arabia\" },\r\n    \"Jurong\": { country: \"Singapore\" },\r\n    \"Kandla\": { country: \"India\" },\r\n    \"Kaohsiung\": { country: \"Taiwan\" },\r\n    \"Karachi\": { country: \"Pakistan\" },\r\n    \"Kathmandu\": { country: \"Nepal\" },\r\n    \"Khartoum\": { country: \"Sudan\" },\r\n    \"Khasab\": { country: \"Oman\" },\r\n    \"King Abdul Aziz Port\": { country: \"Saudi Arabia\" },\r\n    \"King Fahd Industrial Port\": { country: \"Saudi Arabia\" },\r\n    \"Kingston\": { country: \"Jamaica\" },\r\n    \"Kinshasa\": { country: \"D.R.Congo\" },\r\n    \"Kismayo\": { country: \"Somalia\" },\r\n    \"Klaipeda\": { country: \"Lithuania\" },\r\n    \"Kobe\": { country: \"Japan\" },\r\n    \"Kolkata\": { country: \"India\" },\r\n    \"Koror\": { country: \"Palau\" },\r\n    \"Kralendijk\": { country: \"Bonaire/Netherlands Antilles\" },\r\n    \"Kribi\": { country: \"Cameroon\" },\r\n    \"Kuching Port\": { country: \"Malaysia\" },\r\n    \"Kuwait City\": { country: \"Kuwait\" },\r\n    \"Kyrenia\": { country: \"Cyprus\" },\r\n    \"La Ceiba\": { country: \"Honduras\" },\r\n    \"La Digue\": { country: \"Seychelles\" },\r\n    \"La Guaira\": { country: \"Venezuela\" },\r\n    \"La Libertad\": { country: \"El Salvador\" },\r\n    \"Lae\": { country: \"Papua New Guinea\" },\r\n    \"Lagos\": { country: \"Nigeria\" },\r\n    \"Larnaca\": { country: \"Cyprus\" },\r\n    \"Las Palmas\": { country: \"Canary Islands\" },\r\n    \"Latakia\": { country: \"Syria\" },\r\n    \"Le Havre\": { country: \"France\" },\r\n    \"Le Port\": { country: \"Reunion\" },\r\n    \"Libreville\": { country: \"Gabon\" },\r\n    \"Limassol\": { country: \"Cyprus\" },\r\n    \"Limbe\": { country: \"Cameroon\" },\r\n    \"Limón\": { country: \"Costa Rica\" },\r\n    \"Lisbon\": { country: \"Portugal\" },\r\n    \"Lobito\": { country: \"Angola\" },\r\n    \"Lomé\": { country: \"Togo\" },\r\n    \"London\": { country: \"United Kingdom\" },\r\n    \"Luanda\": { country: \"Angola\" },\r\n    \"Luganville\": { country: \"Vanuatu\" },\r\n    \"Lüderitz\": { country: \"Namibia\" },\r\n    \"Mahé\": { country: \"Seychelles\" },\r\n    \"Majunga (Mahajanga)\": { country: \"Madagascar\" },\r\n    \"Majuro\": { country: \"Marshall Islands\" },\r\n    \"Malabo\": { country: \"Equatorial Guinea\" },\r\n    \"Male\": { country: \"Maldives\" },\r\n    \"Malé\": { country: \"Maldives\" },\r\n    \"Manama\": { country: \"Bahrain\" },\r\n    \"Manila\": { country: \"Philippines\" },\r\n    \"Manta\": { country: \"Ecuador\" },\r\n    \"Manzanillo\": { country: \"Mexico\" },\r\n    \"Marsa Matruh\": { country: \"Egypt\" },\r\n    \"MARSAXLOKK\": { country: \"Malta\" },\r\n    \"Marsaxlokk\": { country: \"Malta\" },\r\n    \"Marseille\": { country: \"France\" },\r\n    \"Massawa\": { country: \"Eritrea\" },\r\n    \"Mata-Utu\": { country: \"Wallis and Futuna\" },\r\n    \"Matadi\": { country: \"D.R.Congo\" },\r\n    \"Matarani\": { country: \"Peru\" },\r\n    \"Mayumba\": { country: \"Gabon\" },\r\n    \"Melbourne\": { country: \"Australia\" },\r\n    \"Merca\": { country: \"Somalia\" },\r\n    \"Mindelo\": { country: \"Cape Verde\" },\r\n    \"Miri Port\": { country: \"Malaysia\" },\r\n    \"Mocha\": { country: \"Yemen\" },\r\n    \"Mogadishu\": { country: \"Somalia\" },\r\n    \"Monaco\": { country: \"Monaco\" },\r\n    \"Monrovia\": { country: \"Liberia\" },\r\n    \"Montego Bay\": { country: \"Jamaica\" },\r\n    \"Montevideo\": { country: \"Uruguay\" },\r\n    \"Moroni\": { country: \"Comoros\" },\r\n    \"Muara\": { country: \"Brunei Darussalam\" },\r\n    \"Mukalla\": { country: \"Yemen\" },\r\n    \"Mumbai\": { country: \"India\" },\r\n    \"Muscat\": { country: \"Oman\" },\r\n    \"Nacala\": { country: \"Mozambique\" },\r\n    \"Naha\": { country: \"Japan\" },\r\n    \"Namibe\": { country: \"Angola\" },\r\n    \"Naples\": { country: \"Italy\" },\r\n    \"Nassau\": { country: \"Bahamas\" },\r\n    \"Neiafu\": { country: \"Tonga\" },\r\n    \"New Westminster\": { country: \"Canada\" },\r\n    \"New York\": { country: \"USA\" },\r\n    \"Newcastle\": { country: \"Australia\" },\r\n    \"Nieuw Nickerie\": { country: \"Suriname\" },\r\n    \"Nishtun\": { country: \"Yemen\" },\r\n    \"Nouadhibou\": { country: \"Mauritania\" },\r\n    \"Nouakchott\": { country: \"Mauritania\" },\r\n    \"Noumea\": { country: \"New Caledonia\" },\r\n    \"Novorossiysk\": { country: \"Russian Federation\" },\r\n    \"Nuku'alofa\": { country: \"Tonga\" },\r\n    \"Obock\": { country: \"Djibouti\" },\r\n    \"Odessa\": { country: \"Ukraine\" },\r\n    \"Omboue\": { country: \"Gabon\" },\r\n    \"Onne\": { country: \"Nigeria\" },\r\n    \"Oran\": { country: \"Algeria\" },\r\n    \"Oranjestad\": { country: \"Aruba\" },\r\n    \"Osaka\": { country: \"Japan\" },\r\n    \"Padang\": { country: \"Indonesia\" },\r\n    \"Palermo\": { country: \"Italy\" },\r\n    \"Papeete\": { country: \"French Polynesia\" },\r\n    \"Paramaribo\": { country: \"Suriname\" },\r\n    \"Pattaya\": { country: \"Thailand\" },\r\n    \"Pemba\": { country: \"Mozambique\" },\r\n    \"Penang Port\": { country: \"Malaysia\" },\r\n    \"Philipsburg\": { country: \"Netherlands Antilles\" },\r\n    \"Piraeus\": { country: \"Greece\" },\r\n    \"Plymouth\": { country: \"Montserrat\" },\r\n    \"Pohnpei\": { country: \"Micronesia\" },\r\n    \"Pointe Noire\": { country: \"Republic of the Congo\" },\r\n    \"Pointe-Noire\": { country: \"Republic of the Congo\" },\r\n    \"Pointe-à-Pitre\": { country: \"Guadeloupe\" },\r\n    \"Ponce\": { country: \"Puerto Rico\" },\r\n    \"Port Castries\": { country: \"St. Lucia\" },\r\n    \"Port Elizabeth\": { country: \"South Africa\" },\r\n    \"Port Gentil\": { country: \"Gabon\" },\r\n    \"Port Harcourt\": { country: \"Nigeria\" },\r\n    \"Port Kelang\": { country: \"Malaysia\" },\r\n    \"Port Kembla\": { country: \"Australia\" },\r\n    \"Port Louis\": { country: \"Mauritius\" },\r\n    \"Port Moresby\": { country: \"Papua New Guinea\" },\r\n    \"Port of Spain\": { country: \"Trinidad and Tobago\" },\r\n    \"Port Rashid\": { country: \"United Arab Emirates\" },\r\n    \"Port Réunion\": { country: \"Reunion\" },\r\n    \"Port Sudan\": { country: \"Sudan\" },\r\n    \"Port Sultan Qaboos\": { country: \"Oman\" },\r\n    \"Port Victoria\": { country: \"Seychelles\" },\r\n    \"Port Vila\": { country: \"Vanuatu\" },\r\n    \"Port Villa\": { country: \"Vanuatu\" },\r\n    \"Port-au-Prince\": { country: \"Haiti\" },\r\n    \"Port-Louis\": { country: \"Mauritius\" },\r\n    \"Port-Vila\": { country: \"Vanuatu\" },\r\n    \"Porto Grande (Mindelo)\": { country: \"Cape Verde\" },\r\n    \"Porto-Novo\": { country: \"Benin\" },\r\n    \"Porto\": { country: \"Portugal\" },\r\n    \"Poti\": { country: \"Georgia\" },\r\n    \"Praslin\": { country: \"Seychelles\" },\r\n    \"Principe\": { country: \"Sao Tome and Principe\" },\r\n    \"Providenciales\": { country: \"Turks And Caicos Islands\" },\r\n    \"Puerto Barrios\": { country: \"Guatemala\" },\r\n    \"Puerto Cabello\": { country: \"Venezuela\" },\r\n    \"Puerto Limon\": { country: \"Republic of Costa Rica\" },\r\n    \"Puerto Madryn\": { country: \"Argentina\" },\r\n    \"Puerto Plata\": { country: \"Dominican Republic\" },\r\n    \"Puerto Sucre\": { country: \"Venezuela\" },\r\n    \"Punta del Este\": { country: \"Uruguay\" },\r\n    \"Puntarenas\": { country: \"Costa Rica\" },\r\n    \"Quelimane\": { country: \"Mozambique\" },\r\n    \"Quetzal\": { country: \"Guatemala\" },\r\n    \"Rabaul\": { country: \"Papua New Guinea\" },\r\n    \"Rabigh\": { country: \"Saudi Arabia\" },\r\n    \"Ras Al Ghar\": { country: \"Saudi Arabia\" },\r\n    \"Ras al Khafji\": { country: \"Saudi Arabia\" },\r\n    \"Ras al-Arah\": { country: \"Yemen\" },\r\n    \"Ras Gharib\": { country: \"Egypt\" },\r\n    \"Ras Isa Marine Terminal\": { country: \"Yemen\" },\r\n    \"Ras Isa\": { country: \"Yemen\" },\r\n    \"Ras Shukheir\": { country: \"Egypt\" },\r\n    \"Ras Tanura\": { country: \"Saudi Arabia\" },\r\n    \"Reykjavik\": { country: \"Iceland\" },\r\n    \"Riga\": { country: \"Latvia\" },\r\n    \"Rijeka\": { country: \"Croatia\" },\r\n    \"Rio de Janeiro\": { country: \"Brazil\" },\r\n    \"Road Town\": { country: \"British Virgin Islands\" },\r\n    \"Robertsport\": { country: \"Liberia\" },\r\n    \"Roseau\": { country: \"Commonwealth Of Dominica\" },\r\n    \"Rotterdam\": { country: \"Netherlands\" },\r\n    \"Saida\": { country: \"Lebanon\" },\r\n    \"Saint George's\": { country: \"Grenada\" },\r\n    \"Saint John's\": { country: \"Antigua and Barbuda\" },\r\n    \"Saint John\": { country: \"Barbados\" },\r\n    \"Saint Louis\": { country: \"Senegal\" },\r\n    \"Saint Petersburg\": { country: \"Russian Federation\" },\r\n    \"Saint Pierre\": { country: \"Saint Pierre and Miquelon\" },\r\n    \"Saint-Denis\": { country: \"Reunion\" },\r\n    \"Saipan\": { country: \"Northern Mariana Islands\" },\r\n    \"Salalah\": { country: \"Oman\" },\r\n    \"Saleef\": { country: \"Yemen\" },\r\n    \"San Antonio\": { country: \"Chile\" },\r\n    \"San Jose\": { country: \"Antigua\" },\r\n    \"San Juan\": { country: \"Puerto Rico\" },\r\n    \"San Pedro\": { country: \"Cote D'Ivoire\" },\r\n    \"Sana'a\": { country: \"Yemen\" },\r\n    \"Santo Domingo\": { country: \"Dominican Republic\" },\r\n    \"Santo\": { country: \"Vanuatu\" },\r\n    \"Santos\": { country: \"Brazil\" },\r\n    \"Sao Tome\": { country: \"Sao Tome and Principe\" },\r\n    \"Scarborough\": { country: \"Trinidad and Tobago\" },\r\n    \"Sevastopol\": { country: \"Ukraine\" },\r\n    \"Sfax\": { country: \"Tunisia\" },\r\n    \"Shanghai\": { country: \"Peoples Republic of China\" },\r\n    \"Sharjah\": { country: \"United Arab Emirates\" },\r\n    \"Shenzhen\": { country: \"Peoples Republic of China\" },\r\n    \"Sibu Port\": { country: \"Malaysia\" },\r\n    \"Sidon\": { country: \"Lebanon\" },\r\n    \"Sihanoukville\": { country: \"Cambodia\" },\r\n    \"Singapore\": { country: \"Singapore\" },\r\n    \"Sinop\": { country: \"Turkey\" },\r\n    \"Sittwe\": { country: \"Myanmar\" },\r\n    \"Sochi\": { country: \"Russian Federation\" },\r\n    \"Socotra\": { country: \"Yemen\" },\r\n    \"Sohar\": { country: \"Oman\" },\r\n    \"Sokodé\": { country: \"Togo\" },\r\n    \"Southampton\": { country: \"United Kingdom\" },\r\n    \"Soyo\": { country: \"Angola\" },\r\n    \"Split\": { country: \"Croatia\" },\r\n    \"St. Croix\": { country: \"US Virgin Islands\" },\r\n    \"St. George\": { country: \"Grenada\" },\r\n    \"Stockholm\": { country: \"Sweden\" },\r\n    \"Suakin\": { country: \"Sudan\" },\r\n    \"Sur\": { country: \"Lebanon\" },\r\n    \"Surabaya\": { country: \"Indonesia\" },\r\n    \"Suva\": { country: \"Fiji\" },\r\n    \"Sydney\": { country: \"Australia\" },\r\n    \"Szczecin\": { country: \"Poland\" },\r\n    \"São Tomé\": { country: \"Sao Tome and Principe\" },\r\n    \"Tadjoura\": { country: \"Djibouti\" },\r\n    \"Tainan\": { country: \"Taiwan\" },\r\n    \"Tallinn\": { country: \"Estonia\" },\r\n    \"Tamatave (Toamasina)\": { country: \"Madagascar\" },\r\n    \"Tanajib\": { country: \"Saudi Arabia\" },\r\n    \"Tanjung Pelepas\": { country: \"Malaysia\" },\r\n    \"Tarawa\": { country: \"Kiribati\" },\r\n    \"Tartus\": { country: \"Syria\" },\r\n    \"Tauranga\": { country: \"New Zealand\" },\r\n    \"Tekirdag\": { country: \"Turkey\" },\r\n    \"Tema\": { country: \"Ghana\" },\r\n    \"Tianjin\": { country: \"Peoples Republic of China\" },\r\n    \"Tin Can Island\": { country: \"Nigeria\" },\r\n    \"Toamasina\": { country: \"Madagascar\" },\r\n    \"Toliara\": { country: \"Madagascar\" },\r\n    \"Tonga\": { country: \"Tonga\" },\r\n    \"Toripoli\": { country: \"Libya\" },\r\n    \"Trabzon\": { country: \"Turkey\" },\r\n    \"Trieste\": { country: \"Italy\" },\r\n    \"Trincomalee\": { country: \"Sri Lanka\" },\r\n    \"Tripoli\": { country: \"Lebanon\" },\r\n    \"Tunis\": { country: \"Tunisia\" },\r\n    \"Turkmenbashi\": { country: \"Turkmenistan\" },\r\n    \"Tyre\": { country: \"Lebanon\" },\r\n    \"Tórshavn\": { country: \"Faroe Islands\" },\r\n    \"ULAANBAATAR\": { country: \"Mongolia\" },\r\n    \"Ulcinj\": { country: \"Montenegro\" },\r\n    \"Umm Qasr\": { country: \"Iraq\" },\r\n    \"Ushuaia\": { country: \"Argentina\" },\r\n    \"Valletta\": { country: \"Malta\" },\r\n    \"Valparaíso\": { country: \"Chile\" },\r\n    \"Vancouver\": { country: \"Canada\" },\r\n    \"Varna\": { country: \"Bulgaria\" },\r\n    \"Veracruz\": { country: \"Mexico\" },\r\n    \"Victoria\": { country: \"Mahe (Seychelles)\" },\r\n    \"Visakhapatnam\": { country: \"India\" },\r\n    \"Vladivostok\": { country: \"Russian Federation\" },\r\n    \"Walvis Bay\": { country: \"Namibia\" },\r\n    \"Warri\": { country: \"Nigeria\" },\r\n    \"Wellington\": { country: \"New Zealand\" },\r\n    \"Willemstad\": { country: \"Curacao\" },\r\n    \"Yanbu\": { country: \"Saudi Arabia\" },\r\n    \"Yangon\": { country: \"Myanmar\" },\r\n    \"Yap\": { country: \"Micronesia\" },\r\n    \"Yaren\": { country: \"Nauru\" },\r\n    \"Yokohama\": { country: \"Japan\" },\r\n    \"Zeebrugge\": { country: \"Belgium\" },\r\n    \"Ziguinchor\": { country: \"Senegal\" },\r\n    \"Zonguldak\": { country: \"Turkey\" },\r\n}\r\n\r\n\r\nconst AddPortModal = ({ handleAddPortModalClose }) => {\r\n\r\n    const addPortModalVisible = useSelector((state) => state.addPortModalVisible);\r\n    const inputPortText = useRef(null);\r\n    const inputCountryText = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    const [addButtonLoading, setAddButtonLoading] = useState(false);\r\n\r\n    const handleAddButton = async () => {\r\n        setAddButtonLoading(true);\r\n        if (inputPortText.current?.value !== '' && inputCountryText.current?.value !== '') {\r\n            const countryCode = inputCountryText.current?.value;\r\n            const portCode = inputPortText.current?.value;\r\n            const formattedPortCode = portCode.replace(/\\./g, '_');\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            try {\r\n                await addPort(formattedPortCode, inputCountryText.current?.value, 9999);\r\n                const logData = {\r\n                    message: `Port Added: \"${nameVariable.text}\" added port \"${portCode}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Port Added: \"${nameVariable.text}\" added port \"${portCode}\" for Freight.`.toLowerCase(),\r\n                        'Port'.toLowerCase(),\r\n                        'Port Added'.toLowerCase(),\r\n                        'Added'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        portCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Port added successfully!</Text>\r\n                        </View>;\r\n                    }\r\n\r\n                })\r\n                dispatch(setAddPortModalVisible(false));\r\n                setAddButtonLoading(false);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        else {\r\n            setAddButtonLoading(false);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const filterInput = (inputRef) => {\r\n        const currentValue = inputRef.current.value;\r\n        const filteredValue = currentValue.replace(/[^a-zA-Z0-9. ]/g, '');\r\n        if (currentValue !== filteredValue) {\r\n            inputRef.current.setNativeProps({ text: filteredValue });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={addPortModalVisible}\r\n            onClose={() => {\r\n                handleAddPortModalClose();\r\n                inputPortText.current.value = '';\r\n            }}\r\n            size={'md'}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header style={{ backgroundColor: '#7B9CFF', }}><Text color={'white'} fontSize={20} bold>Add Port</Text></Modal.Header>\r\n                <Modal.Body >\r\n                    <View style={{ marginVertical: 5, }}>\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Port</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputPortText}\r\n                            onChangeText={() => filterInput(inputPortText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Port' />\r\n\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, marginTop: 10, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Country</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputCountryText}\r\n                            onChangeText={() => filterInput(inputCountryText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Country' />\r\n\r\n                    </View>\r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"solid\" space=\"2\">\r\n                        <Button colorScheme={'gray'} onPress={() => {\r\n                            handleAddPortModalClose();\r\n                            inputPortText.current.value = '';\r\n                        }}>Cancel</Button>\r\n                        {addButtonLoading ?\r\n                            (<Spinner size=\"lg\" color={'#16A34A'} />) :\r\n                            (<Button colorScheme={'success'} onPress={handleAddButton}>Add</Button>)\r\n                        }\r\n\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst DeletePortModal = ({ handleDeletePortModalClose }) => {\r\n    const deletePortModalVisible = useSelector((state) => state.deletePortModalVisible);\r\n    const [buttonLoading, setButtonLoading] = useState(false);\r\n\r\n    const handleDeletePort = async () => {\r\n        setButtonLoading(true);\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        const formattedFieldCode = selectedPort.replace(/\\./g, '_');\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        updateDoc(documentRef, {\r\n            [formattedFieldCode]: deleteField()\r\n        })\r\n            .then(() => {\r\n                console.log('Field deleted successfully');\r\n                handleDeletePortModalClose();\r\n                setButtonLoading(false);\r\n                const logData = {\r\n                    message: `Port Deleted: \"${nameVariable.text}\" deleted port \"${selectedPort}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: false,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Port Deleted: \"${nameVariable.text}\" deleted port \"${selectedPort}\" for Freight.`.toLowerCase(),\r\n                        'Port'.toLowerCase(),\r\n                        'Port Deleted'.toLowerCase(),\r\n                        'Deleted'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        selectedPort.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting field: ', error);\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal isOpen={deletePortModalVisible} onClose={handleDeletePortModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header>Delete Port?</Modal.Header>\r\n                <Modal.Body>\r\n                    Are you sure you want to delete the selected port?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        <TouchableOpacity\r\n                            style={{ flex: 1, backgroundColor: '#525252', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            onPress={handleDeletePortModalClose}\r\n                        >\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }}>No</Text>\r\n                        </TouchableOpacity>\r\n                        {buttonLoading ?\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            ><Spinner size={18} color={'white'} />\r\n                            </TouchableOpacity>) :\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                                onPress={handleDeletePort}\r\n                            >\r\n                                <Text style={{ color: 'white', alignSelf: 'center', }}>Yes</Text>\r\n                            </TouchableOpacity>)\r\n                        }\r\n\r\n\r\n                    </View>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst PortsTable = () => {\r\n    const dispatch = useDispatch();\r\n    const methodData = useSelector((state) => state.methodData);\r\n    const toast = useToast();\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const optionsPerPage = [10, 20, 50];\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const inputSearchRef = useRef(null);\r\n    const textAreaAddMethod = useRef(null);\r\n\r\n    const inputSortOrder = useRef([]);\r\n    const inputProfitPrice = useRef([]);\r\n    const inputNagoyaPrice = useRef([]);\r\n    const inputYokohamaPrice = useRef([]);\r\n    const inputKyushuPrice = useRef([]);\r\n    const inputKobePrice = useRef([]);\r\n    const inputMemo = useRef([]);\r\n\r\n    const [inputMemoValues, setInputMemoValues] = useState({});\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const handleSortOrderTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 3);\r\n\r\n        inputSortOrder.current[item.ports].value = numericValue;\r\n\r\n    };\r\n\r\n    const handleProfitPriceTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 4);\r\n\r\n        inputProfitPrice.current[item.ports].value = numericValue;\r\n\r\n    };\r\n\r\n\r\n    const updatePortsField = async (portCode, newValue, inputRef, title, fieldName) => {\r\n        // Specify the document reference\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = portCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const field = `${formattedCountryCode}.${fieldName}`;\r\n\r\n            try {\r\n                // Perform the update\r\n                await updateDoc(documentRef, {\r\n                    [field]: newValue\r\n                });\r\n\r\n                const logData = {\r\n                    message: `${title} Updated: \"${nameVariable.text}\" updated \"${portCode}\" ${title} to \"${newValue}\".`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `${title} Updated: \"${nameVariable.text}\" updated \"${portCode}\" ${title} to \"${newValue}\"`.toLowerCase(),\r\n                        `Sort`.toLowerCase(),\r\n                        `${title}`.toLowerCase(),\r\n                        `${title} Updated`.toLowerCase(),\r\n                        `Updated`.toLowerCase(),\r\n                        portCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>{title} updated successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                addLogToCollection(logData);\r\n                dispatch(setLoadingModalVisible(false));\r\n                console.log(`${title} updated successfully`);\r\n            } catch (error) {\r\n                console.error(`Error updating ${title}:`, error);\r\n\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter((item) =>\r\n            item.country.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.ports.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.sortOrder.toString().includes(searchQuery)\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce(() => {\r\n        setSearchQuery(inputSearchRef.current?.value);\r\n    }, 50);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    // useEffect(() => {\r\n    //     const portsDataWithSortOrder = Object.entries(portsList).reduce((acc, [portName, portDetails], index) => {\r\n    //         // Replace dots in portName with underscores\r\n    //         const sanitizedPortName = portName.replace(/\\./g, '_');\r\n    //         acc[sanitizedPortName] = { ...portDetails, sortOrder: index };\r\n    //         return acc;\r\n    //     }, {});\r\n\r\n    //     setDoc(doc(projectExtensionFirestore, \"CustomerCountryPort\", \"PortsDoc\"), portsDataWithSortOrder)\r\n    //         .then(() => {\r\n    //             console.log(\"Document successfully written!\");\r\n    //             dispatch(setLoadingModalVisible(false));\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(\"Error writing document: \", error);\r\n    //         });\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map(key => ({\r\n                        ports: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n                // setFilteredData(formattedData);\r\n                dispatch(setLoadingModalVisible(false));\r\n            } else {\r\n                console.log(\"No such document!\");\r\n                dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching countries: \", error);\r\n\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n\r\n    const handleAddMethodTextChange = () => {\r\n        const textAreaValue = textAreaAddMethod.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddMethod.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        paginatedData.forEach(item => {\r\n            inputMemo.current[item.ports].value = item.memo ? item.memo : '';\r\n            inputSortOrder.current[item.ports].value = item.sortOrder ? item.sortOrder : 0;\r\n            inputProfitPrice.current[item.ports].value = item.profitPrice ? item.profitPrice : 0;\r\n            inputNagoyaPrice.current[item.ports].value = item.nagoyaPrice ? item.nagoyaPrice : 0;\r\n            inputYokohamaPrice.current[item.ports].value = item.yokohamaPrice ? item.yokohamaPrice : 0;\r\n            inputKyushuPrice.current[item.ports].value = item.kyushuPrice ? item.kyushuPrice : 0;\r\n            inputKobePrice.current[item.ports].value = item.kobePrice ? item.kobePrice : 0;\r\n\r\n\r\n\r\n        });\r\n        // setInputMemoValues(initialValues);\r\n\r\n    }, [paginatedData]); // Run this effect when 'items' changes\r\n\r\n    const handleAddPortModalOpen = () => {\r\n\r\n        dispatch(setAddPortModalVisible(true));\r\n\r\n    }\r\n\r\n    const handleAddPortModalClose = () => {\r\n\r\n        dispatch(setAddPortModalVisible(false));\r\n\r\n    }\r\n\r\n    const handleDeletePortModalOpen = (selectedValue) => {\r\n\r\n        dispatch(setDeletePortModalVisible(true));\r\n        selectedPort = selectedValue;\r\n\r\n    }\r\n\r\n    const handleDeletePortModalClose = () => {\r\n\r\n        dispatch(setDeletePortModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {screenWidth >= 1280 ? (\r\n                <View style={{ flex: 1, }}>\r\n                    {/* Search Bar */}\r\n                    <View style={{ padding: 10 }}>\r\n                        <TextInput\r\n                            ref={inputSearchRef}\r\n                            onSubmitEditing={handleSearch}\r\n                            style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                            placeholder='Search'\r\n                            returnKeyType='search'\r\n                            autoCapitalize='none'\r\n                        />\r\n                    </View>\r\n\r\n                    {/* Add Port Button */}\r\n                    <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                        <TouchableOpacity\r\n                            onPress={handleAddPortModalOpen}\r\n                            style={{\r\n                                borderRadius: 5,\r\n                                padding: 10,\r\n                                borderWidth: 1,\r\n                                borderColor: 'white',\r\n                                backgroundColor: '#16A34A',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                            <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Port</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: '#E4E4E7',\r\n                            backgroundColor: '#0642F4',\r\n                            padding: 10,\r\n                            borderRadius: 5,\r\n                            marginTop: 10,\r\n                        }}\r\n                    >\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Port Name</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Price (USD)</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Nagoya</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Yokohama</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Kyushu</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Kobe</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, padding: 2, flexDirection: 'row' }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='MethodDoc'\r\n                                handleAddTextChange={handleAddMethodTextChange}\r\n                                textAreaAdd={textAreaAddMethod}\r\n                                title='Method'\r\n                                dataName={'methodData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Method\"\r\n                                data={methodData}\r\n                            />\r\n                            <Text style={{ color: 'white', }} bold>Method</Text>\r\n                        </View>\r\n                        <View style={{ flex: 2, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Memo</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n                    <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                        {paginatedData.map((item, index) => (\r\n                            <View\r\n                                key={index}\r\n                                style={{\r\n                                    flex: 1,\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'space-between',\r\n                                    alignItems: 'center',\r\n                                    borderBottomWidth: 1,\r\n                                    borderBottomColor: '#E4E4E7',\r\n                                    backgroundColor: '#BFDBFE',\r\n                                    paddingVertical: 10,\r\n                                }}>\r\n                                <Text style={{ flex: 1, marginHorizontal: 3 }} selectable>{item.ports}</Text>\r\n                                <Text style={{ flex: 1, marginHorizontal: 3, alignSelf: 'center' }} selectable>{item.country}</Text>\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.sortOrder ? item.sortOrder : 0}→</Text> */}\r\n                                    <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, borderLeftColor: '#E4E4E7', }}>\r\n                                        <TextInput\r\n                                            onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                            onSubmitEditing={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                            ref={(ref) => (inputSortOrder.current[item.ports] = ref)}\r\n                                            style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5 }}\r\n                                        />\r\n                                        <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                            <TouchableHighlight\r\n                                                onPress={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                style={{\r\n                                                    backgroundColor: '#16A34A',\r\n                                                    borderRadius: 5,\r\n                                                    padding: 5,\r\n                                                    margin: 2,\r\n                                                    alignSelf: 'center',\r\n                                                }}>\r\n                                                <MaterialIcons name='update' color='white' size={22} />\r\n                                            </TouchableHighlight>\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.profitPrice ? item.profitPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onChangeText={(text) => handleProfitPriceTextChange(text, item)}\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                        ref={(ref) => (inputProfitPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.nagoyaPrice ? item.nagoyaPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                        ref={(ref) => (inputNagoyaPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.yokohamaPrice ? item.yokohamaPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                        ref={(ref) => (inputYokohamaPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kyushuPrice ? item.kyushuPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                        ref={(ref) => (inputKyushuPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kobePrice ? item.kobePrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                        ref={(ref) => (inputKobePrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: screenWidth < 1800 ? 2 : 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    <SelectMethod defaultValue={item.method} portCode={item.ports} page={page} searchQuery={searchQuery} />\r\n                                </View>\r\n\r\n                                <View style={{ flex: 2, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n                                    <TextInput\r\n                                        multiline\r\n                                        // value={inputMemoValues[item.ports] || ''}\r\n                                        // onChangeText={(text) => handleMemoTextChange(text, item.ports)}\r\n                                        ref={(ref) => (inputMemo.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', flex: 2, height: 60, paddingLeft: 5, backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, }}\r\n                                    />\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputMemo.current[item.ports].value, inputMemo, 'Memo', 'memo')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => handleDeletePortModalOpen(item.ports)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#DC2626',\r\n                                                borderRadius: 5,\r\n                                                padding: 10,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <AntDesign name='delete' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n                                {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                            </View>\r\n                        ))}\r\n                        <DataTable.Pagination\r\n                            page={page}\r\n                            numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                            onPageChange={(page) => setPage(page)}\r\n                            label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                            optionsPerPage={optionsPerPage}\r\n                            itemsPerPage={itemsPerPage}\r\n                            setItemsPerPage={setItemsPerPage}\r\n                            showFastPagination\r\n                            optionsLabel={'Rows per page'}\r\n                        />\r\n                    </DataTable>\r\n                    <AddPortModal handleAddPortModalClose={handleAddPortModalClose} />\r\n                    <DeletePortModal handleDeletePortModalClose={handleDeletePortModalClose} />\r\n                </View>) :\r\n                (\r\n                    //Ports Table Mobile View\r\n                    <View style={{ flex: 1, }}>\r\n                        {/* Search Bar */}\r\n                        <View style={{ padding: 10 }}>\r\n                            <TextInput\r\n                                ref={inputSearchRef}\r\n                                onSubmitEditing={handleSearch}\r\n                                style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                                placeholder='Search'\r\n                                returnKeyType='search'\r\n                                autoCapitalize='none'\r\n                            />\r\n                        </View>\r\n\r\n                        {/* Add Port Button */}\r\n                        <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                            <TouchableOpacity\r\n                                onPress={handleAddPortModalOpen}\r\n                                style={{\r\n                                    borderRadius: 5,\r\n                                    padding: 10,\r\n                                    borderWidth: 1,\r\n                                    borderColor: 'white',\r\n                                    backgroundColor: '#16A34A',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                                <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Port</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n                        <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                            {paginatedData.map((item, index) => (\r\n                                <View\r\n                                    key={index}\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'column',\r\n                                        borderWidth: 1,\r\n                                        borderColor: '#E4E4E7',\r\n                                        backgroundColor: '#BFDBFE',\r\n                                        margin: 10,\r\n                                    }}>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Port Name</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <Text style={{ flex: 1, marginHorizontal: 3 }} selectable>{item.ports}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n                                            <Text style={{ flex: 1, marginHorizontal: 3, }} selectable>{item.country}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.sortOrder ? item.sortOrder : 0}→</Text> */}\r\n                                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, borderLeftColor: '#E4E4E7', }}>\r\n                                                    <TextInput\r\n                                                        onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                                        onSubmitEditing={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                        ref={(ref) => (inputSortOrder.current[item.ports] = ref)}\r\n                                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5 }}\r\n                                                    />\r\n                                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                        <TouchableHighlight\r\n                                                            onPress={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                            style={{\r\n                                                                backgroundColor: '#16A34A',\r\n                                                                borderRadius: 5,\r\n                                                                padding: 5,\r\n                                                                margin: 2,\r\n                                                                alignSelf: 'center',\r\n                                                            }}>\r\n                                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                                        </TouchableHighlight>\r\n                                                    </View>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Price (USD)</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.profitPrice ? item.profitPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onChangeText={(text) => handleProfitPriceTextChange(text, item)}\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                                    ref={(ref) => (inputProfitPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Nagoya</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.nagoyaPrice ? item.nagoyaPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                                    ref={(ref) => (inputNagoyaPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Yokohama</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.yokohamaPrice ? item.yokohamaPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                                    ref={(ref) => (inputYokohamaPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Kyushu</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kyushuPrice ? item.kyushuPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                                    ref={(ref) => (inputKyushuPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Kobe</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kobePrice ? item.kobePrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                                    ref={(ref) => (inputKobePrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Method</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                <SelectMethod defaultValue={item.method} portCode={item.ports} page={page} searchQuery={searchQuery} />\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Memo</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 2, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n                                                <TextInput\r\n                                                    multiline\r\n                                                    // value={inputMemoValues[item.ports] || ''}\r\n                                                    // onChangeText={(text) => handleMemoTextChange(text, item.ports)}\r\n                                                    ref={(ref) => (inputMemo.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', flex: 2, height: 60, paddingLeft: 5, backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, }}\r\n                                                />\r\n                                                <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputMemo.current[item.ports].value, inputMemo, 'Memo', 'memo')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            alignSelf: 'center',\r\n                                                            height: '100%',\r\n                                                            justifyContent: 'center',\r\n                                                            alignItems: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n                                                <View style={{ width: '100%', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => handleDeletePortModalOpen(item.ports)}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 6, }}>\r\n                                                        <AntDesign name='delete' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                    {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                    {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                                </View>\r\n                            ))}\r\n                            <DataTable.Pagination\r\n                                page={page}\r\n                                numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                onPageChange={(page) => setPage(page)}\r\n                                label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                optionsPerPage={optionsPerPage}\r\n                                itemsPerPage={itemsPerPage}\r\n                                setItemsPerPage={setItemsPerPage}\r\n                                showFastPagination\r\n                                optionsLabel={'Rows per page'}\r\n                            />\r\n                        </DataTable>\r\n                        <AddPortModal handleAddPortModalClose={handleAddPortModalClose} />\r\n                        <DeletePortModal handleDeletePortModalClose={handleDeletePortModalClose} />\r\n                    </View>\r\n                )}\r\n        </>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default function Freight() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const logo = require('../../assets/C-Hub.png');\r\n    const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n    const [isMobileView, setIsMobileView] = useState(false);\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    // const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n\r\n\r\n    const loginName = useSelector((state) => state.loginName);\r\n    nameVariable.text = loginName;\r\n    const [name, setName] = useState(loginName);\r\n    const [time, setTime] = useState('');\r\n\r\n    const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n    const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const updateWidth = () => {\r\n            const newWidth = Dimensions.get('window').width;\r\n            setScreenWidth(newWidth); // Update the screenWidth state\r\n        };\r\n\r\n        // Add event listener for window resize\r\n        Dimensions.addEventListener('change', updateWidth);\r\n\r\n        // Clean up the event listener when the component unmounts or re-renders\r\n        return () => {\r\n            Dimensions.removeEventListener('change', updateWidth);\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setSelectedButton(defaultSelectedButton));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                // navigation.navigate(\"Login\")\r\n                navigate(\"/Login\");\r\n            }\r\n        })\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(projectControlAuth)\r\n                    .then(() => {\r\n                        // navigation.navigate('Login');\r\n                        navigate(\"/Login\");\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(projectControlAuth)\r\n                .then(() => {\r\n                    // navigation.navigate('Login');\r\n                    navigate(\"/Login\");\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = projectControlAuth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const listenForNameChange = (documentId) => {\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(projectControlAuth).then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n\r\n            setEmail('');\r\n            setName('');\r\n        }).catch(() => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#0642F4'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#0642F4'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <NativeBaseProvider>\r\n            <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#0642f4'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={0}\r\n                    borderBottomColor={'cyan.500'}\r\n                >\r\n\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen} />\r\n\r\n                    <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image} />\r\n                    </Box>\r\n                    {/* \r\n                    {screenWidth <= 960 && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen} />} */}\r\n\r\n\r\n                    <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image} />\r\n                    </Box>\r\n                    <NamePopover name={name} handleSignOut={handleSignOut} />\r\n\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\r\n\r\n\r\n                    {/* Main Content */}\r\n                    {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n                    {/* Main Content Content */}\r\n\r\n\r\n                    {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n                    <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\r\n                        <ScrollView style={{ flex: 1, }} keyboardShouldPersistTaps='always'>\r\n                            <View style={{ flex: 1, }}>\r\n\r\n                                <FreightNavigation />\r\n                                <NavigatePage />\r\n                                {/* {selectedButton == 'countries' ? <CountriesTable /> : <></>}\r\n                                {selectedButton == 'ports' ? <PortsTable /> : <></>} */}\r\n                            </View>\r\n                        </ScrollView>\r\n                        {/* <SuccessModal /> */}\r\n\r\n                    </View>\r\n\r\n\r\n                    {/* </Box> */}\r\n\r\n                    {/* </Box> */}\r\n                </View>\r\n\r\n            </View>\r\n            <LoadingModal />\r\n\r\n        </NativeBaseProvider>\r\n    );\r\n}","import { useState } from \"react\";\r\nimport { View, Dimensions, StyleSheet, Image } from \"react-native\";\r\nimport { Box, Flex, Popover, Button, Text } from \"native-base\";\r\nimport FastImage from \"react-native-fast-image-web-support\";\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo,\r\n  FontAwesome5,\r\n  EvilIcons\r\n} from 'react-native-vector-icons';\r\n\r\nimport MobileViewDrawer from \"../SideDrawer/MobileViewDrawer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst NamePopover = ({ name, handleSignOut }) => {\r\n  const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n  const showPopover = () => {\r\n    setShowNamePopover(!showNamePopover);\r\n  };\r\n\r\n  return (\r\n    <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n      <Flex direction=\"row-reverse\">\r\n        <Popover\r\n          isOpen={showNamePopover}\r\n          trigger={(triggerProps) => (\r\n            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n              <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n            </Text>\r\n          )}\r\n          onClose={() => setShowNamePopover(!showNamePopover)}\r\n          placement='bottom right'\r\n          trapFocus={false}\r\n        >\r\n          <Popover.Content backgroundColor={'#7B9CFF'}>\r\n            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n              <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                Logout\r\n              </Button>\r\n            </Popover.Body>\r\n          </Popover.Content>\r\n        </Popover>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst StickyHeader = ({ selectedScreen, handleSignOut }) => {\r\n  const loginName = useSelector((state) => state.loginName);\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  // const logo = require('https://i.imgur.com/V98nKSK.png');\r\n  // const logo2 = require('https://i.imgur.com/NGCIoSV.png');\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  return (\r\n\r\n    <Box\r\n      px=\"3\"\r\n      bgColor='#7b9cff'\r\n      height={54}\r\n      position=\"sticky\"\r\n      top={0}\r\n      zIndex={999}\r\n      flexDirection=\"row\"\r\n      alignItems=\"center\"\r\n      borderBottomWidth={2}\r\n      borderBottomColor={'cyan.500'} >\r\n\r\n      <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n        <Image\r\n          source={{ uri: 'https://i.imgur.com/V98nKSK.png' }}\r\n          style={styles.image}\r\n          resizeMode=\"stretch\"\r\n        />\r\n      </Box>\r\n\r\n      {screenWidth <= 960 && <MobileViewDrawer\r\n        selectedScreen={selectedScreen}\r\n      />}\r\n\r\n\r\n      <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n      <Image\r\n          source={{ uri: 'https://i.imgur.com/NGCIoSV.png' }}\r\n          style={styles.image}\r\n          resizeMode=\"stretch\"\r\n        />\r\n      </Box>\r\n\r\n      <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n    </Box>\r\n\r\n  );\r\n}\r\n\r\nexport default StickyHeader;","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Keyboard } from 'react-native';\r\nimport {\r\n    Input,\r\n    Icon,\r\n    Stack,\r\n    Pressable,\r\n    Center,\r\n    PresenceTransition,\r\n    NativeBaseProvider,\r\n    Button,\r\n    Box,\r\n    HStack,\r\n    Image,\r\n    Container,\r\n    Header,\r\n    Left,\r\n    Body,\r\n    Title,\r\n    Content,\r\n    Text,\r\n    Heading,\r\n    Flex,\r\n    VStack,\r\n    ScrollView,\r\n    SectionList,\r\n    useBreakpointValue,\r\n    Spinner,\r\n    Modal,\r\n    Divider,\r\n    IconButton,\r\n    Popover\r\n} from \"native-base\";\r\nimport { DataTable } from 'react-native-paper';\r\nimport {\r\n    FontAwesome,\r\n    Entypo,\r\n    MaterialIcons,\r\n    Ionicons,\r\n    Fontisto,\r\n    EvilIcons,\r\n    AntDesign,\r\n    MaterialCommunityIcons,\r\n    Feather,\r\n    FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, limit } from '../../firebasecontrol'\r\nimport { arrayUnion, where, startAfter, endBefore, limitToLast, collectionGroup } from 'firebase/firestore';\r\nimport { projectExtensionFirestore, projectControlFirestore } from '../../crossFirebase';\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './../style.css';\r\nimport { debounce, set, throttle } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { bg } from 'date-fns/locale';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { LineChart, BarChart } from 'react-native-chart-kit';\r\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from 'victory';\r\nimport {\r\n    OPEN_EXCHANGE_API_KEY\r\n} from '@env';\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\nimport {\r\n    setLogsData,\r\n    setLoadingModalVisible,\r\n} from './redux/store';\r\nimport { useNavigate } from 'react-router-dom';\r\nlet selectedScreen = 'LOGS'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const addKeywordsToLogs = async () =>{\r\n//     const logsRef = collection(projectControlFirestore, \"logs\");\r\n\r\n//     try {\r\n//       const querySnapshot = await getDocs(logsRef);\r\n\r\n//       querySnapshot.forEach((doc) => {\r\n//         const data = doc.data();\r\n//         const keywords = [\r\n//           data.timestamp,\r\n//           data.message,\r\n//         ];\r\n\r\n//         updateDoc(doc.ref, {\r\n//           keywords: arrayUnion(...keywords)\r\n//         });\r\n//       });\r\n\r\n//       console.log(\"Keywords added successfully to logs collection.\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding keywords to logs collection:\", error);\r\n//     }\r\n//   }\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nconst LogsTable = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [firstVisible, setFirstVisible] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const searchInputRef = useRef(null);\r\n    const logsData = useSelector((state) => state.logsData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(projectControlFirestore, 'logs'),\r\n            orderBy('timestamp', 'desc'),\r\n            limit(pageSize)\r\n        );\r\n        const unsubscribe = onSnapshot(q, (documents) => {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n            dispatch(setLogsData(logsDatabaseData));\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            setFirstVisible(documents.docs[0]);\r\n        });\r\n        return () => unsubscribe();\r\n\r\n    }, []);\r\n\r\n    const fetchNextData = async () => {\r\n\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collectionGroup(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n        }\r\n\r\n        else {\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const fetchPreviousData = async () => {\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev')\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev');\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchFirstPage = (documents) => {\r\n\r\n\r\n        const logsDatabaseData = [];\r\n\r\n        documents.forEach((document) => {\r\n            logsDatabaseData.push({\r\n                id: document.id,\r\n                ...document.data(),\r\n            });\r\n        });\r\n\r\n        dispatch(setLogsData(logsDatabaseData));\r\n\r\n        if (documents?.docs[0]) {\r\n            setFirstVisible(documents.docs[0]);\r\n        }\r\n        if (documents?.docs[documents.docs.length - 1]) {\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n        if (!documents.empty) {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n\r\n\r\n\r\n            if (documents?.docs[0]) {\r\n                setFirstVisible(documents.docs[0]);\r\n            }\r\n            if (documents?.docs[documents.docs.length - 1]) {\r\n                setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            }\r\n\r\n            if (pageClicked == 'next') {\r\n                setCurrentPage(currentPage + 1);\r\n            }\r\n            if (pageClicked == 'prev') {\r\n                setCurrentPage(currentPage - 1);\r\n            }\r\n\r\n            dispatch(setLogsData(logsDatabaseData));\r\n        }\r\n\r\n        else {\r\n\r\n            if (searchText == '') {\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n            else {\r\n\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleNextPage = async () => {\r\n        // setPageClicked('next');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage + 1);\r\n        await fetchNextData();\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handlePreviousPage = async () => {\r\n        // setPageClicked('previous');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage - 1);\r\n        await fetchPreviousData();\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        searchData();\r\n\r\n    }, [searchText]);\r\n\r\n    const searchData = async () => {\r\n\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        if (searchText === '') {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n    };\r\n\r\n    const handleSearchEnter = () => {\r\n\r\n        if (searchInputRef.current?.value !== '') {\r\n            setSearchText(searchInputRef.current.value.trim());\r\n        }\r\n        else {\r\n            setSearchText('');\r\n\r\n            if (searchText == '') {\r\n                searchData();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={{ flex: 1, }}>\r\n            <View>\r\n                <TextInput ref={searchInputRef} style={{ width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\r\n                    onSubmitEditing={handleSearchEnter}\r\n                    placeholder='Search'\r\n                    returnKeyType='search'\r\n                    keyboardType='default'\r\n                    autoCapitalize='none'\r\n                />\r\n            </View>\r\n            <View\r\n                style={{\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between',\r\n                    borderBottomWidth: 1,\r\n                    borderBottomColor: '#E4E4E7',\r\n                    backgroundColor: '#0642F4',\r\n                    padding: 2,\r\n                    borderRadius: 5,\r\n                }}>\r\n                <View style={{ flex: 1, padding: 2 }}>\r\n                    <Text style={{ color: 'white', }} bold>Timestamp</Text>\r\n                </View>\r\n                <View style={{ flex: 1, padding: 2 }}>\r\n                    <Text style={{ color: 'white', }} bold>Action</Text>\r\n                </View>\r\n            </View>\r\n            {logsData.map((item) => (\r\n                <View\r\n                    key={item.id}\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#E4E4E7',\r\n                        backgroundColor: item.colorScheme ? '#BBF7D0' : '#EAC7D6',\r\n                        paddingVertical: 10,\r\n                        flexGrow: 1,\r\n                    }}>\r\n                    <View style={{ flex: 1, }}>\r\n                        <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.timestamp}</Text>\r\n                    </View>\r\n                    <View style={{ flex: 1 }}>\r\n                        <Text selectable style={{ width: '90%', }}>{item.message} </Text>\r\n                    </View>\r\n                </View>\r\n            ))}\r\n\r\n            <View style={{ flexDirection: 'row', width: screenWidth < 960 ? '90%' : '30%', alignSelf: 'center', }}>\r\n\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <TouchableOpacity\r\n                        style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                        onPress={handlePreviousPage}>\r\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                            <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n                <View style={{ flex: 1, backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n                </View>\r\n\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                    <TouchableOpacity\r\n                        onPress={handleNextPage}>\r\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                            <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n            <TouchableOpacity\r\n              onPress={addKeywordsToVehicleProducts}>\r\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                <MaterialIcons name='save' size={40} color={'white'} />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View> */}\r\n\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n\r\n};\r\n\r\nconst addLogToCollection = async (data) => {\r\n    try {\r\n        const firestore = getFirestore();\r\n        const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n        // Add a new document to the \"logs\" collection\r\n        await addDoc(logsCollectionRef, data);\r\n\r\n        // console.log('Document added successfully!');\r\n    } catch (error) {\r\n        console.error('Error adding document:', error);\r\n    }\r\n};\r\n\r\nconst CurrencyConverterComponent = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n    const [successModalVisible, setSuccessModalVisible] = useState(false);\r\n    const [todayCurrency, setTodayCurrency] = useState([]);\r\n    const [timestampCurrency, setTimestampCurrency] = useState([]);\r\n    const [exchangeRate, setExchangeRate] = useState('');\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [time, setTime] = useState('');\r\n    const [lastUpdate, setLastUpdate] = useState(null);\r\n    const loginName = useSelector((state) => state.loginName);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onSnapshot(\r\n            doc(projectExtensionFirestore, 'currency', 'currency'),\r\n            (snapshot) => {\r\n                const data = snapshot.data();\r\n                setTodayCurrency(data?.todayCurrency);\r\n                setTimestampCurrency(data?.timestampCurrency);\r\n            }\r\n        );\r\n\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const CurrencyConverter = async () => {\r\n\r\n        setIsLoading(true);\r\n        setIsYesLoading(true);\r\n        try {\r\n            const response = await axios.get(\r\n                `https://openexchangerates.org/api/latest.json?app_id=${OPEN_EXCHANGE_API_KEY}`\r\n            );\r\n\r\n            // Replace 'YOUR_APP_ID' with your actual API key obtained from Open Exchange Rates\r\n\r\n\r\n            const rates = response.data.rates;\r\n            const usdToJpy = 1 / rates.JPY; // Invert the rate to convert USD to JPY\r\n            const JpyToUsd = rates.JPY / 1;\r\n\r\n\r\n\r\n            const yenToDollar = Number(usdToJpy.toFixed(4)); // Move the toFixed here\r\n            const dollarToYen = Number(JpyToUsd.toFixed(4));\r\n\r\n            const usdToEur = 1 / rates.EUR;\r\n            const eurToUsd = rates.EUR;\r\n\r\n            const usdToGbp = 1 / rates.GBP;\r\n            const gbpToUsd = rates.GBP;\r\n\r\n            const usdToAud = 1 / rates.AUD;\r\n            const audToUsd = rates.AUD;\r\n\r\n\r\n            const usdToCad = 1 / rates.CAD;\r\n            const cadToUsd = rates.CAD;\r\n\r\n            // Calculate Yen to Euro and Euro to Yen\r\n            const yenToEuro = yenToDollar * eurToUsd; // Convert Yen to USD first, then to Euro\r\n            const euroToYen = dollarToYen * usdToEur; // Convert Euro to USD first, then to Yen\r\n\r\n            const yenToGbp = yenToDollar * gbpToUsd; // Convert Yen to USD first, then to Pound Sterling\r\n            const gbpToYen = dollarToYen * usdToGbp; // Convert Pound Sterling to USD first, then to Yen\r\n\r\n            const yenToAud = yenToDollar * audToUsd; // Convert Yen to USD first, then to Australian Dollars\r\n            const audToYen = dollarToYen * usdToAud; // Convert Australian Dollars to USD first, then to Yen\r\n\r\n            const yenToCad = yenToDollar * cadToUsd; // Convert Yen to USD first, then to Canadian Dollars\r\n            const cadToYen = dollarToYen * usdToCad; // Convert Canadian Dollars to USD first, then to Yen\r\n\r\n            // Format the new rates\r\n\r\n\r\n\r\n            setExchangeRate(yenToDollar);\r\n\r\n            const timestamp = response.data.timestamp;\r\n            const lastUpdateDate = new Date(timestamp * 1000);\r\n            setLastUpdate(lastUpdateDate);\r\n\r\n            const formattedLastUpdate = lastUpdateDate.toLocaleString('en-US', {\r\n                month: 'long',\r\n                day: 'numeric',\r\n                year: 'numeric',\r\n                hour: 'numeric',\r\n                minute: 'numeric',\r\n                second: 'numeric',\r\n                timeZoneName: 'short',\r\n            });\r\n\r\n            const newTodayCurrency = `1 JPY = ${yenToDollar} USD / 1 USD = ${dollarToYen} JPY\\n1 JPY = ${yenToEuro.toFixed(4)} EUR / 1 EUR = ${euroToYen.toFixed(4)} JPY\\n1 JPY = ${yenToAud.toFixed(4)} AUD / 1 AUD = ${audToYen.toFixed(4)} JPY\\n1 JPY = ${yenToGbp.toFixed(4)} GBP / 1 GBP = ${gbpToYen.toFixed(4)} JPY\\n1 JPY = ${yenToCad.toFixed(4)} CAD / 1 CAD = ${cadToYen.toFixed(4)} JPY\\n`;\r\n            const currencyRef = doc(projectExtensionFirestore, 'currency', 'currency');\r\n\r\n            try {\r\n                await setDoc(currencyRef, {\r\n                    jpyToUsd: Number(usdToJpy),\r\n                    usdToJpy: Number(JpyToUsd),\r\n                    jpyToEur: yenToEuro,\r\n                    eurToJpy: euroToYen,\r\n                    jpyToGbp: yenToGbp,\r\n                    gbpToJpy: gbpToYen,\r\n                    jpyToAud: yenToAud,\r\n                    audToJpy: audToYen,\r\n                    usdToEur: eurToUsd,\r\n                    eurToUsd: usdToEur,\r\n                    usdToGbp: gbpToUsd,\r\n                    gbpToUsd: usdToGbp,\r\n                    usdToAud: audToUsd,\r\n                    audToUsd: usdToAud,\r\n                    cadToUsd: usdToCad,\r\n                    usdToCad: cadToUsd,\r\n                    jpyToCad: cadToYen,\r\n                    cadToJpy: yenToCad,\r\n                    todayCurrency: newTodayCurrency,\r\n                    timestampCurrency: 'Updated Last: ' + formattedLastUpdate,\r\n                }, { merge: true });\r\n                // console.log('Currency data updated successfully!');\r\n                setSuccessModalVisible(true);\r\n                setModalVisible(false);\r\n                setIsLoading(false);\r\n                setIsYesLoading(false);\r\n                try {\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime(formattedTime);\r\n\r\n                    const logDataCurrency = {\r\n                        message: `Currency Update: \"${loginName}\" updated the currency exchange.\\n¥JPY → $USD = ${Number(usdToJpy).toFixed(4)} / $USD → ¥JPY = ${Number(JpyToUsd).toFixed(4)}\\n¥JPY → €EUR = ${yenToEuro.toFixed(4)} / €EUR → ¥JPY = ${euroToYen.toFixed(4)}\\n¥JPY → A$AUD = ${yenToAud.toFixed(4)} / A$AUD → ¥JPY = ${audToYen.toFixed(4)}\\n¥JPY → £GBP = ${yenToGbp.toFixed(4)} / £GBP → ¥JPY = ${gbpToYen.toFixed(4)}\\n¥JPY → C$CAD = ${yenToCad.toFixed(4)} / C$CAD → ¥JPY = ${cadToYen.toFixed(4)}`,\r\n                        timestamp: formattedTime, // Use the formatted time here\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            loginName.toLowerCase(),\r\n                            '$'.toLowerCase(),\r\n                            '¥'.toLowerCase(),\r\n                            `Currency Update: \"${loginName}\" updated the currency exchange.`.toLowerCase(),\r\n                            'Update'.toLowerCase(),\r\n                            'Currency'.toLowerCase(),\r\n                            formattedTime.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n\r\n                    };\r\n\r\n                    addLogToCollection(logDataCurrency);\r\n                }\r\n                catch (error) {\r\n                    console.error('Error fetching time:', error);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Error updating currency data:', error);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching exchange rate:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleCloseCurrencyModal = () => {\r\n        setModalVisible(false);\r\n        setIsLoading(false);\r\n    };\r\n    const handleOpenCurrencyModal = () => {\r\n        setModalVisible(true);\r\n        setIsLoading(true);\r\n    };\r\n\r\n    const handleCloseSuccessModal = () => {\r\n        setSuccessModalVisible(false);\r\n        setIsLoading(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                flex={1}\r\n                borderWidth={1}\r\n                borderColor=\"gray.200\"\r\n                borderRadius={4}\r\n                overflow=\"hidden\"\r\n                margin={1}\r\n                alignItems={'center'}\r\n                bg=\"#F5F5F5\">\r\n                <Image\r\n                    source={require('../../assets/currency_background.jpg')}\r\n                    alt=\"Background Image\"\r\n                    resizeMode=\"stretch\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    position={'absolute'}\r\n\r\n                />\r\n\r\n                <Center height=\"100%\">\r\n\r\n                    <Box alignItems=\"center\" backgroundColor={\"rgba(0, 0, 0, 0.7)\"} borderRadius={5} paddingBottom={1}>\r\n\r\n                        <Text bold color=\"#39ff14\" margin={1} textAlign={'center'} fontSize={screenWidth > 960 ? '' : 12} >{todayCurrency}</Text>\r\n                        <Text textAlign=\"center\" color=\"#39ff14\" margin={1} fontSize={screenWidth > 960 ? '' : 12}>{timestampCurrency}</Text>\r\n                        <Button alignSelf={'center'} w={'95%'} _hover={{ bgColor: \"green.800\" }} bgColor={'transparent'} variant={'outline'} borderColor={\"#39ff14\"} _text={{ color: \"#39ff14\", }} onPress={handleOpenCurrencyModal}>{isLoading ? <Spinner color=\"#39ff14\" size={21} /> : 'Update'}</Button>\r\n\r\n                    </Box>\r\n\r\n                </Center>\r\n\r\n            </Box>\r\n\r\n            <Modal isOpen={modalVisible} onClose={handleCloseCurrencyModal}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>Update currency</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to update to the latest currency?\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <Button onPress={handleCloseCurrencyModal} flex={1} margin={1} colorScheme={'danger'}>No</Button>\r\n                        <Button onPress={CurrencyConverter} colorScheme={'success'} flex={1} margin={1}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal><Modal isOpen={successModalVisible} onClose={handleCloseSuccessModal}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header bgColor={'green.200'} borderBottomWidth={0}>Update success!</Modal.Header>\r\n                    <Modal.Body bgColor={'green.200'}>\r\n                        <Text bold margin={1}>{todayCurrency}</Text>\r\n                        <Text margin={1}>{timestampCurrency}</Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer bgColor={'green.200'} borderTopWidth={0}>\r\n                        <Button onPress={handleCloseSuccessModal} flex={1} margin={1}>Ok</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nconst MyBarChart = () => {\r\n    const dataValues = [\r\n        { day: 1, value: 30 },\r\n        { day: 2, value: 45 },\r\n        // ... add data for each day of the month\r\n        { day: 31, value: 60 }\r\n    ];\r\n\r\n    return (\r\n        <ScrollView style={{ flex: 1, margin: 5, borderRadius: 5, }}>\r\n            <VictoryChart\r\n                theme={VictoryTheme.material}\r\n                domainPadding={10}\r\n                style={{\r\n                    parent: {\r\n                        backgroundColor: \"#FFF\", // White background\r\n                    }\r\n                }}\r\n            >\r\n                <VictoryAxis\r\n                    style={{\r\n                        axis: { stroke: \"#757575\" }, // Style for the axis itself\r\n                        ticks: { stroke: \"grey\", size: 5 }, // Style for axis ticks\r\n                        tickLabels: { fontSize: 10, padding: 5, fill: \"grey\" } // Style for the labels\r\n                    }}\r\n                />\r\n                <VictoryAxis\r\n                    dependentAxis\r\n                    style={{\r\n                        axis: { stroke: \"#757575\" },\r\n                        ticks: { stroke: \"grey\", size: 5 },\r\n                        tickLabels: { fontSize: 10, padding: 5, fill: \"grey\" }\r\n                    }}\r\n                />\r\n                <VictoryBar\r\n                    data={dataValues}\r\n                    x=\"day\"\r\n                    y=\"value\"\r\n                    style={{\r\n                        data: {\r\n                            fill: ({ datum }) => datum.value > 50 ? \"#4178BE\" : \"#5AA9E6\", // Blue shades for bars\r\n                            width: 8 // Width of each bar\r\n                        }\r\n                    }}\r\n                    barRatio={0.8} // Adjusts the width of the bars\r\n                />\r\n            </VictoryChart>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\n\r\nexport default function Logs() {\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const loginName = useSelector((state) => state.loginName);\r\n\r\n    // const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n\r\n    const [isSelectedLogs, setIsSelectedLogs] = useState(true);\r\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\r\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    const [remainingTime, setRemainingTime] = useState(0);\r\n    const [todayCurrency, setTodayCurrency] = useState('')\r\n    const [timestampCurrency, setTimestampCurrency] = useState('');\r\n    const [exchangeRate, setExchangeRate] = useState(null);\r\n    const [lastUpdate, setLastUpdate] = useState(null);\r\n\r\n    const [time, setTime] = useState('');\r\n    const optionsPerPage = [13, 26, 52];\r\n    const [page, setPage] = useState(0);\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    const searchInput = useRef(null);\r\n    const searchInputValue = searchInput.current?.value;\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'logs'), orderBy('timestamp', 'desc'));\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                    setData(documents);\r\n                });\r\n\r\n                return () => unsubscribe();\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // const delayedSearch = (text) => {\r\n    //     clearTimeout(timeoutId);\r\n    //     timeoutId = setTimeout(() => {\r\n    //         handleSearch(text);\r\n    //     }, 300); // Set the delay to 300 milliseconds\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n    // const handleChange = text => {\r\n    //     setEmail(text)\r\n    //     setErrorShow(false)\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const SuccessModal = () => {\r\n        return <Center>\r\n            <Modal isOpen={showModal} onClose={() => setShowModal(false)} size=\"lg\"  >\r\n                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n                    <Modal.Body >\r\n                        <Text color=\"white\" textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowModal(false)}>\r\n                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </Center>;\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                // navigation.navigate(\"Login\")\r\n                navigate(\"/Login\");\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(auth)\r\n                    .then(() => {\r\n                        // navigation.navigate('Login');\r\n                        navigate(\"/Login\");\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(auth)\r\n                .then(() => {\r\n                    // navigation.navigate('Login');\r\n                    navigate(\"/Login\");\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = auth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n    const listenForNameChange = (documentId) => {\r\n        const userRef = doc(db, 'accounts', documentId);\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(auth).then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n            setEmail('');\r\n            setName('');\r\n        }).catch(() => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n    // Function to hide the Popover\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#0642F4'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#0642F4'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n    return (\r\n        <NativeBaseProvider>\r\n            <SuccessModal />\r\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#0642f4'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={0}\r\n                    borderBottomColor={'cyan.500'} >\r\n\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen} />\r\n\r\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    {/* \r\n                    {showDrawerIcon && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen} />} */}\r\n\r\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]} >\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n\r\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <Box flex={[1]} flexDirection=\"row\" >\r\n\r\n\r\n                    {/* Main Content */}\r\n                    <Box flex={1} flexGrow={1} minHeight={0} flexDirection={screenWidth <= 960 ? 'column' : 'row'}>\r\n                        {/* Main Content Content */}\r\n\r\n\r\n\r\n                        <Box flex={1}>\r\n                            <CurrencyConverterComponent />\r\n                            <MyBarChart />\r\n                        </Box>\r\n\r\n\r\n\r\n                        <Box flex={1} height={'100%'}>\r\n                            <ScrollView flex={1}>\r\n                                <LogsTable />\r\n                            </ScrollView>\r\n\r\n\r\n                        </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <LoadingModal />\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","\r\nimport {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  HStack,\r\n  Modal,\r\n  Text,\r\n  VStack,\r\n  ScrollView,\r\n\r\n} from 'native-base';\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo\r\n} from 'react-native-vector-icons';\r\nimport { View, TouchableOpacity, Easing, Image, Dimensions, Animated } from 'react-native';\r\nimport { TouchableHighlight } from 'react-native-gesture-handler';\r\nimport { useNavigation } from '@react-navigation/core';\r\n\r\n\r\n\r\nconst MobileViewDrawer = ({ selectedScreen }) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const logo2 = require('../../../assets/C-Hub Logo Only.png');\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const handleOpen = () => {\r\n\r\n    setIsOpen(true);\r\n\r\n  }\r\n  const handleClose = () => {\r\n\r\n    setIsOpen(false);\r\n\r\n  }\r\n\r\n  const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"LOGS\");\r\n  }, []);\r\n\r\n  const handleToggleAddAccount = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  }, []);\r\n\r\n  const handleToggleAccountList = useCallback(() => {\r\n\r\n    navigation.navigate(\"ACCOUNT LIST\");\r\n  }, []);\r\n\r\n  const handleToggleAddVehicle = useCallback(() => {\r\n\r\n    navigation.navigate(\"ADD NEW VEHICLE\");\r\n  }, []);\r\n\r\n\r\n  const handleVehicleList = useCallback(() => {\r\n    navigation.navigate(\"VEHICLE LIST\");\r\n  }, []);\r\n\r\n\r\n  const handleFreight = useCallback(() => {\r\n    navigation.navigate(\"FREIGHT\");\r\n  }, []);\r\n\r\n  const handleChatMessages = useCallback(() => {\r\n    navigation.navigate(\"CHAT MESSAGES\");\r\n  }, []);\r\n\r\n\r\n  const slideAnimation = useRef(new Animated.Value(0)).current;\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      Animated.timing(slideAnimation, {\r\n        toValue: 1,\r\n        duration: 500,\r\n        easing: Easing.inOut(Easing.ease),\r\n        useNativeDriver: true,\r\n      }).start();\r\n    } else {\r\n      Animated.timing(slideAnimation, {\r\n        toValue: 0,\r\n        duration: 500,\r\n        easing: Easing.inOut(Easing.ease),\r\n        useNativeDriver: true,\r\n      }).start();\r\n    }\r\n  }, [isOpen, slideAnimation]);\r\n\r\n  return (\r\n\r\n    <>\r\n      <TouchableHighlight onPress={() => handleOpen()} onPressOut={() => handleOpen()} underlayColor=\"#5a7bc9\" style={{ borderRadius: 5, flex: 1 }}>\r\n        <FontAwesome name=\"navicon\" size={30} color=\"white\" style={{ margin: 2 }} />\r\n      </TouchableHighlight>\r\n\r\n\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onClose={handleClose}\r\n        useRNModal\r\n        style={{\r\n          alignItems: 'flex-start',\r\n          justifyContent: 'flex-start',\r\n          height: '100%',\r\n\r\n        }}\r\n      >\r\n        <Modal.Content\r\n          maxWidth={255}\r\n          borderRadius={0}\r\n          maxHeight=\"100%\"\r\n          height=\"full\"\r\n          bgColor={'transparent'}\r\n        >\r\n          <Animated.View\r\n            style={{\r\n              flex: 1,\r\n              transform: [\r\n                {\r\n                  translateX: slideAnimation.interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [-255, 0],\r\n                  }),\r\n                },\r\n              ],\r\n            }}\r\n          >\r\n            <View style={{ backgroundColor: '#7b9cff', flex: 1, borderRightWidth: 2, borderColor: 'cyan' }}>\r\n              <View style={{ flex: 1, }}>\r\n\r\n                <View style={{ flexDirection: 'row', margin: 3, justifyContent: 'space-between' }}>\r\n                  <View style={{ width: '80%', alignItems: 'center', justifyContent: 'center' }}>\r\n                    <Image\r\n                      source={{\r\n                        uri: logo2,\r\n                      }}\r\n                      resizeMode=\"stretch\"\r\n                      style={{ width: 170, height: 30 }}\r\n                    />\r\n                  </View>\r\n                  <TouchableOpacity\r\n                    style={{ flexDirection: 'row', alignItems: 'flex-end', marginVertical: 1.5, marginHorizontal: 1.5 }}\r\n                  >\r\n                    <MaterialIcons\r\n                      name=\"arrow-back\"\r\n                      size={30}\r\n                      color=\"white\"\r\n                      onPress={handleClose}\r\n                    />\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* Sidebar Content */}\r\n                <View style={{ paddingHorizontal: 1, backgroundColor: '#7b9cff', flex: 1 }}>\r\n                  <ScrollView>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderTopWidth: 1,\r\n                        borderColor: 'white',\r\n                        backgroundColor: selectedScreen == 'LOGS' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleLogs}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <MaterialCommunityIcons name=\"history\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          LOGS\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n\r\n                    {/* ACCOUNT MANAGEMENT */}\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAddAccount}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n\r\n                        <MaterialIcons name=\"person-add\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          ADD C-HUB ACCOUNT\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAccountList}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <MaterialCommunityIcons name=\"account-details\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          ACCOUNT LIST\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n                    {/* VEHICLE INFORMATION INPUT */}\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAddVehicle}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 4, }}>\r\n                          <FontAwesome name=\"automobile\" size={15} color=\"white\" />\r\n                          <FontAwesome\r\n                            name=\"plus\"\r\n                            size={10}\r\n                            color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          UPDATE / ADD NEW VEHICLE\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleVehicleList}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <FontAwesome\r\n                            name=\"automobile\"\r\n                            size={15}\r\n                            color=\"white\" />\r\n\r\n                          <MaterialCommunityIcons name=\"format-list-bulleted\" size={10} color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          VEHICLE LIST\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'FREIGHT' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleFreight}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <MaterialIcons\r\n                            name=\"public\"\r\n                            size={20}\r\n                            color=\"white\" />\r\n\r\n                          <MaterialIcons name=\"sync\" size={12} color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          FREIGHT\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleChatMessages}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <Entypo\r\n                            name=\"chat\"\r\n                            size={20}\r\n                            color=\"white\" />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          CHAT MESSAGES\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    {/* Footer Content */}\r\n                    {/* <TouchableOpacity\r\n              style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\r\n              onPress={handleSignOut}\r\n            >\r\n              <Text style={{ color: 'white', textAlign: 'center' }}>\r\n                Logout\r\n              </Text>\r\n            </TouchableOpacity> */}\r\n                  </ScrollView>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </Animated.View>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default MobileViewDrawer;","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    HStack,\r\n    Modal,\r\n    Text,\r\n    VStack,\r\n    ScrollView,\r\n\r\n} from 'native-base';\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo\r\n} from 'react-native-vector-icons';\r\nimport { View, TouchableOpacity, Easing, Image, Dimensions, Animated, Pressable } from 'react-native';\r\nimport { TouchableHighlight } from 'react-native-gesture-handler';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { HashRouter as Router, Route, Routes, Navigate, useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\nconst SideDrawer = ({ selectedScreen }) => {\r\n\r\n    const loginAccountType = useSelector((state) => state.loginAccountType);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const logo2 = require('../../../assets/C-Hub Logo Only.png');\r\n    const [onHover, setOnHover] = useState(false);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    // const navigation = useNavigation();\r\n\r\n\r\n    const navigate = useNavigate();\r\n    const handleOpen = () => {\r\n\r\n        setIsOpen(true);\r\n\r\n    }\r\n    const handleClose = () => {\r\n\r\n        setIsOpen(false);\r\n\r\n    }\r\n\r\n    const handleToggleLogs = useCallback(() => {\r\n        navigate(\"/top/logs\");\r\n    }, []);\r\n\r\n    const handleToggleAddAccount = useCallback(() => {\r\n        navigate(\"/top/add-c-hub-account\");\r\n    }, []);\r\n\r\n    const handleToggleAccountList = useCallback(() => {\r\n\r\n        navigate(\"/top/account-list\");\r\n    }, []);\r\n\r\n    const handleToggleAddVehicle = useCallback(() => {\r\n\r\n        navigate(\"/top/add-new-vehicle\");\r\n    }, []);\r\n\r\n\r\n    const handleVehicleList = useCallback(() => {\r\n        navigate(\"/top/vehicle-list\");\r\n    }, []);\r\n\r\n\r\n    const handleFreight = useCallback(() => {\r\n        navigate(\"/top/freight\");\r\n    }, []);\r\n\r\n    const handleChatMessages = useCallback(() => {\r\n        navigate(\"/top/chat-messages\");\r\n    }, []);\r\n\r\n\r\n    const slideAnimation = useRef(new Animated.Value(0)).current;\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            Animated.timing(slideAnimation, {\r\n                toValue: 1,\r\n                duration: 500,\r\n                easing: Easing.inOut(Easing.ease),\r\n                useNativeDriver: true,\r\n            }).start();\r\n        } else {\r\n            Animated.timing(slideAnimation, {\r\n                toValue: 0,\r\n                duration: 500,\r\n                easing: Easing.inOut(Easing.ease),\r\n                useNativeDriver: true,\r\n            }).start();\r\n        }\r\n    }, [isOpen, slideAnimation]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable\r\n                onHoverIn={() => {\r\n                    handleOpen()\r\n                    setOnHover(true);\r\n                }}\r\n                onHoverOut={() =>\r\n                    setTimeout(() => setOnHover(false), [100])\r\n                }\r\n                onPress={() => handleOpen()} onPressOut={() => handleOpen()} underlayColor=\"#5a7bc9\" style={{\r\n                    backgroundColor: onHover ? '#5a7bc9' : 'transparent',\r\n                    borderRadius: 5,\r\n                }}>\r\n                <FontAwesome name=\"navicon\" size={30} color=\"white\" style={{ margin: 2 }} />\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={handleClose}\r\n                useRNModal\r\n                style={{\r\n                    alignItems: 'flex-start',\r\n                    justifyContent: 'flex-start',\r\n                    height: '100%',\r\n                }}\r\n            >\r\n                <Modal.Content\r\n                    maxWidth={255}\r\n                    borderRadius={0}\r\n                    maxHeight=\"100%\"\r\n                    height=\"full\"\r\n                    bgColor={'transparent'}\r\n                >\r\n                    <Animated.View\r\n                        style={{\r\n                            flex: 1,\r\n                            transform: [\r\n                                {\r\n                                    translateX: slideAnimation.interpolate({\r\n                                        inputRange: [0, 1],\r\n                                        outputRange: [-255, 0],\r\n                                    }),\r\n                                },\r\n                            ],\r\n                        }}\r\n                    >\r\n\r\n                        <View style={{ backgroundColor: '#0642f4', flex: 1, borderRightWidth: 0, borderColor: 'cyan' }}>\r\n                            <View style={{ flex: 1, }}>\r\n\r\n                                <View style={{ flexDirection: 'row', margin: 3, justifyContent: 'space-between' }}>\r\n                                    <View style={{ width: '80%', alignItems: 'center', justifyContent: 'center' }}>\r\n                                        <Image\r\n                                            source={{\r\n                                                uri: logo2,\r\n                                            }}\r\n                                            resizeMode=\"stretch\"\r\n                                            style={{ width: 170, height: 30 }}\r\n                                        />\r\n                                    </View>\r\n                                    <TouchableOpacity\r\n                                        style={{ flexDirection: 'row', alignItems: 'flex-end', marginVertical: 1.5, marginHorizontal: 1.5 }}\r\n                                    >\r\n                                        <MaterialIcons\r\n                                            name=\"arrow-back\"\r\n                                            size={30}\r\n                                            color=\"white\"\r\n                                            onPress={handleClose}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n\r\n                                {/* Sidebar Content */}\r\n                                <View style={{ paddingHorizontal: 1, backgroundColor: '#0642f4', height: '100%' }}>\r\n                                    <ScrollView style={{ width: 245 }}>\r\n                                        <View style={{ height: 20 }}>\r\n                                            {/* Sidebar Content Items */}\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales') &&\r\n                                                <Button\r\n                                                    _text={{ color: selectedScreen == 'LOGS' ? '#0642F4' : \"white\", }}\r\n                                                    borderRadius={0}\r\n                                                    borderTopWidth={1}\r\n                                                    borderBottomWidth={1}\r\n                                                    borderColor={'white'}\r\n                                                    _hover={{ bgColor: selectedScreen == 'LOGS' ? '#FFFFFF' : '#032da8', }}\r\n                                                    marginTop={0}\r\n                                                    w={'full'}\r\n                                                    onPress={() => selectedScreen == 'LOGS' ? null : handleToggleLogs()}\r\n                                                    colorScheme={undefined}\r\n                                                    bgColor={selectedScreen == 'LOGS' ? '#FFFFFF' : '#0642F4'}\r\n                                                    leftIcon={<MaterialCommunityIcons name=\"history\" size={20} color={selectedScreen == 'LOGS' ? '#0642F4' : \"white\"} />}\r\n                                                    justifyContent=\"flex-start\"\r\n                                                    alignItems=\"center\"\r\n                                                >\r\n                                                    LOGS\r\n                                                </Button>\r\n                                            }\r\n\r\n                                            {/* ACCOUNT MANAGEMENT */}\r\n                                            {loginAccountType == 'admin' && <Button\r\n                                                _text={{ color: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0} w={'full'}\r\n                                                onPress={() => selectedScreen == 'ADD C-HUB ACCOUNT' ? null : handleToggleAddAccount()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'ADD C-HUB ACCOUNT' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={<MaterialIcons name=\"person-add\" size={20} color={selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : \"white\"} />}\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >ADD C-HUB ACCOUNT</Button>}\r\n\r\n                                            {loginAccountType == 'admin' && <Button\r\n                                                _text={{ color: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'ACCOUNT LIST' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => selectedScreen == 'ACCOUNT LIST' ? null : handleToggleAccountList()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'ACCOUNT LIST' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={\r\n                                                    <MaterialCommunityIcons name=\"account-details\" size={20}\r\n                                                        color={selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : \"white\"}\r\n                                                    />\r\n\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >ACCOUNT LIST</Button>}\r\n                                            {/* VEHICLE INFORMATION INPUT */}\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') &&\r\n                                                <Button\r\n                                                    _text={{ color: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\", }}\r\n                                                    borderRadius={0}\r\n                                                    borderTopWidth={1}\r\n                                                    borderBottomWidth={1}\r\n                                                    borderColor={'white'}\r\n                                                    _hover={{ bgColor: selectedScreen == 'ADD NEW VEHICLE' ? '#FFFFFF' : '#032da8', }}\r\n                                                    marginTop={0} w={'full'}\r\n                                                    onPress={() => selectedScreen == 'ADD NEW VEHICLE' ? null : handleToggleAddVehicle()}\r\n                                                    colorScheme={undefined}\r\n                                                    bgColor={selectedScreen == 'ADD NEW VEHICLE' ? '#FFFFFF' : '#0642F4'}\r\n                                                    leftIcon={\r\n                                                        <>\r\n                                                            <View>\r\n                                                                <FontAwesome name=\"automobile\" size={15}\r\n                                                                    color={selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\"}\r\n                                                                />\r\n                                                                <FontAwesome\r\n                                                                    name=\"plus\"\r\n                                                                    size={10}\r\n                                                                    color={selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\"}\r\n                                                                    style={{\r\n                                                                        position: 'absolute', // Position it absolutely...\r\n                                                                        top: -3, // ...at the top...\r\n                                                                        left: -5 // ...and left.\r\n                                                                    }}\r\n                                                                />\r\n                                                            </View>\r\n\r\n\r\n                                                        </>\r\n                                                    }\r\n                                                    justifyContent=\"flex-start\"\r\n                                                    alignItems=\"center\"\r\n                                                >UPDATE / ADD NEW VEHICLE</Button>\r\n                                            }\r\n\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') &&\r\n                                                <Button\r\n                                                    _text={{ color: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\", }}\r\n                                                    borderRadius={0}\r\n                                                    borderTopWidth={1}\r\n                                                    borderBottomWidth={1}\r\n                                                    borderColor={'white'}\r\n                                                    _hover={{ bgColor: selectedScreen == 'VEHICLE LIST' ? '#FFFFFF' : '#032da8', }}\r\n                                                    marginTop={0}\r\n                                                    onPress={() => selectedScreen == 'VEHICLE LIST' ? null : handleVehicleList()}\r\n                                                    colorScheme={undefined}\r\n                                                    bgColor={selectedScreen == 'VEHICLE LIST' ? '#FFFFFF' : '#0642F4'}\r\n                                                    leftIcon={\r\n                                                        <>\r\n                                                            <View>\r\n                                                                <FontAwesome\r\n                                                                    name=\"automobile\"\r\n                                                                    size={15}\r\n                                                                    color={selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\"}\r\n                                                                />\r\n\r\n                                                                <MaterialCommunityIcons name=\"format-list-bulleted\" size={10}\r\n                                                                    color={selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\"}\r\n                                                                    style={{\r\n                                                                        position: 'absolute', // Position it absolutely...\r\n                                                                        top: -3, // ...at the top...\r\n                                                                        left: -5 // ...and left.\r\n                                                                    }}\r\n                                                                />\r\n\r\n                                                            </View>\r\n\r\n\r\n                                                        </>\r\n                                                    }\r\n                                                    justifyContent=\"flex-start\"\r\n                                                    alignItems=\"center\"\r\n                                                // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                                >VEHICLE LIST</Button>}\r\n\r\n                                            {loginAccountType == 'admin' && <Button\r\n                                                _text={{ color: selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'FREIGHT' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => selectedScreen == 'FREIGHT' ? null : handleFreight()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'FREIGHT' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <MaterialIcons\r\n                                                                name=\"public\"\r\n                                                                size={20}\r\n                                                                color={selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\"}\r\n                                                            />\r\n\r\n                                                            <MaterialIcons name=\"sync\" size={12}\r\n                                                                color={selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\"}\r\n                                                                style={{\r\n                                                                    position: 'absolute', // Position it absolutely...\r\n                                                                    top: -3, // ...at the top...\r\n                                                                    left: -5 // ...and left.\r\n                                                                }}\r\n                                                            />\r\n\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                            >FREIGHT</Button>\r\n                                            }\r\n\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') && <Button\r\n                                                _text={{ color: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'CHAT MESSAGES' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => { selectedScreen == 'CHAT MESSAGES' ? null : handleChatMessages() }}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'CHAT MESSAGES' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <Entypo\r\n                                                                name=\"chat\"\r\n                                                                size={20}\r\n                                                                color={selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : \"white\"}\r\n\r\n                                                            />\r\n\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                            >CHAT MESSAGES</Button>}\r\n                                        </View>\r\n                                        {/* Footer Content */}\r\n                                        {/* <TouchableOpacity\r\n            style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\r\n            onPress={handleSignOut}\r\n          >\r\n            <Text style={{ color: 'white', textAlign: 'center' }}>\r\n              Logout\r\n            </Text>\r\n          </TouchableOpacity> */}\r\n                                    </ScrollView>\r\n                                    <View style={{ borderTopWidth: 0, backgroundColor: '#7b9cff', position: 'absolute', bottom: 0, left: 0, right: 0, borderTopColor: 'gray', paddingTop: 3 }}>\r\n                                        {/* Footer Content */}\r\n                                        {/* <Center marginBottom={1.5}>\r\n            <Button w={100} colorScheme=\"error\" onPress={handleSignOut}>\r\n              <MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" /> Logout\r\n            </Button>\r\n          </Center> */}\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n\r\n                    </Animated.View>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default SideDrawer;","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  Image as NativeImage,\r\n  Input,\r\n  Modal,\r\n  NativeBaseProvider,\r\n  Popover,\r\n  Pressable,\r\n  Spinner,\r\n  Stack,\r\n  Text,\r\n  VStack,\r\n  useBreakpointValue,\r\n  TextArea,\r\n  InputRightAddon,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  Select,\r\n  CheckIcon,\r\n  PresenceTransition,\r\n  CloseIcon,\r\n  ScrollView as ScrollViewNative,\r\n  Divider,\r\n  useDisclosure,\r\n  useDisclose,\r\n  FormControl,\r\n  Checkbox,\r\n  useToast\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n  Dimensions,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  StyleSheet,\r\n  View,\r\n  PanResponder,\r\n  Animated,\r\n  InputAccessoryView,\r\n  FlatList,\r\n  ScrollView,\r\n  TouchableHighlight,\r\n  TextInput,\r\n  Image as RNImage\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo,\r\n  FontAwesome5,\r\n  EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n  setVehicleListData,\r\n  setSupplyChainsCostsData,\r\n  setSelectedPaidTo,\r\n  setSelectedExpenseName,\r\n  setSupplyChainsCostsModalVisible,\r\n  setVehicleListSupplyChainsCostsData,\r\n  setDeleteImageVisible,\r\n  setSelectedImages,\r\n  setAddAnotherImages,\r\n  setIsAddPhotoVisible,\r\n  setUploadImagesModalVisible,\r\n  setUploadImagesButtonLoading,\r\n  setViewImagesModalVisible,\r\n  setViewImagesData,\r\n  setLoadingModalVisible,\r\n  setAddVehicleListData,\r\n  setEditVehicleModalVisible,\r\n  setFobPriceHistoryModalVisible,\r\n  setFobHistoryData,\r\n  setLoginName\r\n} from './redux/store';\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'VEHICLE LIST'\r\n\r\nlet globalSupplyChainCostsData = [];\r\nlet globalCurrentSupplyChainCostsData = [];\r\nlet globalFobPriceHistoryData = [];\r\nlet globalCurrentStockID = '';\r\nlet globalSelectedPaidTo = '';\r\nlet globalSPCSelectedDate = '';\r\nlet globalSelectedExpenseName = '';\r\nlet globalSupplyChainCostsAmount = 0;\r\nlet globalSelectedImages = [];\r\nlet globalSelectedVehicle = '';\r\nlet globalSelectedVehicleReferenceNumber = '';\r\nlet globalSelectedCarName = '';\r\nconst nameVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = projectControlAuth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    // console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nconst storage = getStorage(projectExtensionFirebase);\r\n\r\nconst SelectStockStatus = ({ selectedValue, id, item }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n  const [selectedStockStatusValue, setSelectedStockStatusValue] = useState(selectedValue);\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', id), (doc) => {\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        // Handle the data from the document\r\n        setSelectedStockStatusValue(data.stockStatus);\r\n        // console.log(`Read ${doc.size} documents from VehicleProducts`);\r\n\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleSaveStockStatus = async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n    if (item.stockStatus == selectedStockStatusValue || selectedStockStatusValue == '' || selectedStockStatusValue == '__NativeBasePlaceHolder__') {\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n    else {\r\n\r\n      const stockStatusHistoryData = {\r\n        date: formattedTime,\r\n        stockStatus: selectedStockStatusValue,\r\n        changedBy: nameVariable.text,\r\n      };\r\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n      try {\r\n        await updateDoc(vehicleProductRef, {\r\n          stockStatus: selectedStockStatusValue,\r\n          stockStatusHistory: arrayUnion(stockStatusHistoryData)\r\n        });\r\n        const logData = {\r\n          message: `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to \"${selectedStockStatusValue}\" with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            globalCurrentStockID.toLowerCase(),\r\n            `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to ${selectedStockStatusValue} with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n            'Stock Status'.toLowerCase(),\r\n            'Stock Status Updated'.toLowerCase(),\r\n            'Stock'.toLowerCase(),\r\n            'Status Updated'.toLowerCase(),\r\n            'Updated'.toLowerCase(),\r\n            globalSelectedCarName.toLowerCase(),\r\n            globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n        // console.log('FOB Price updated successfully');\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Stock Status updated successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n      <View style={{ width: screenWidth >= 1360 ? '70%' : '88%', backgroundColor: 'white', }}>\r\n        <Select\r\n          selectedValue={selectedStockStatusValue}\r\n          onValueChange={(value) => {\r\n            setSelectedStockStatusValue(value);\r\n          }}\r\n          flex={3}\r\n          accessibilityLabel=\"---\"\r\n          placeholder=\"---\"\r\n          _selectedItem={{\r\n            bg: \"teal.600\",\r\n            endIcon: <CheckIcon size=\"5\" />\r\n          }}\r\n        >\r\n          {stockStatusData.map((item) => (\r\n            <Select.Item key={item} label={item} value={item} />\r\n          ))}\r\n        </Select>\r\n      </View>\r\n\r\n      <TouchableHighlight\r\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n        onPress={handleSaveStockStatus}\r\n        style={{\r\n          backgroundColor: '#16A34A',\r\n          borderRadius: 5,\r\n          padding: 3,\r\n          margin: 2,\r\n          alignSelf: 'center',\r\n        }}>\r\n        <MaterialIcons name='update' color='white' size={22} />\r\n      </TouchableHighlight>\r\n    </View>\r\n\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nconst addLogToCollection = async (data) => {\r\n  try {\r\n    const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n    // Add a new document to the \"logs\" collection\r\n    await addDoc(logsCollectionRef, data);\r\n\r\n    // console.log('Document added successfully!');\r\n  } catch (error) {\r\n    console.error('Error adding document:', error);\r\n  }\r\n};\r\n\r\nconst LoadingModal = () => {\r\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        flex: 1,\r\n        display: loadingModalVisible ? 'flex' : 'none',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      {/* Content within the modal */}\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Spinner size=\"lg\" color=\"white\" />\r\n        <Text style={{ color: 'white' }}>Loading, please wait!</Text>\r\n      </View>\r\n    </View>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\r\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n\r\n  const handleModalDeleteOpen = () => {\r\n    setModalDeleteImagesVisible(true);\r\n  };\r\n\r\n  const handleModalDeleteClose = () => {\r\n    setModalDeleteImagesVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          right: 0,\r\n          backgroundColor: '#FF4136',\r\n          borderRadius: 3,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          display: isAddPhotoVisible ? 'none' : 'flex',\r\n        }}\r\n      >\r\n        <TouchableHighlight onPress={handleModalDeleteOpen} style={{ flex: 1 }}>\r\n          <Ionicons name=\"trash-sharp\" size={20} color=\"white\" />\r\n        </TouchableHighlight>\r\n      </View>\r\n\r\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\r\n        <Modal.Content bgColor={'error.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear Images\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'error.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.400'}\r\n            margin={5}\r\n          >\r\n            <View style={{ flex: 1 }}>\r\n              <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>Alert!</Text>\r\n              <Text style={{ color: '#FF4136' }}>\r\n                Are you sure you want to clear{' '}\r\n                <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>\r\n                  {selectedImages.length}\r\n                </Text>{' '}\r\n                selected image(s)?\r\n              </Text>\r\n            </View>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\r\n            <View style={{ flexDirection: 'row', flex: 1 }}>\r\n              <TouchableOpacity\r\n                onPress={handleModalDeleteClose}\r\n                style={{\r\n                  flex: 1,\r\n                  backgroundColor: '#57534E', // Replace with your desired color\r\n                  borderRadius: 5,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  margin: 5,\r\n                  padding: 5,\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 14, color: 'white' }}>No</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={handleClearImages}\r\n                style={{\r\n                  flex: 1,\r\n                  backgroundColor: '#DC2626', // Replace with your desired color\r\n                  borderRadius: 5,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  margin: 5,\r\n                  padding: 5,\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 14, color: 'white' }}>Clear Images</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\r\n  const dispatch = useDispatch();\r\n  const { width } = Dimensions.get('window');\r\n\r\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  const [boolean, setBoolean] = useState(true);\r\n  const selectedImages = useSelector((state) => state.selectedImages);\r\n  // const [selectedImages, setSelectedImages] = useState([]);\r\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\r\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\r\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\r\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\r\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n  const [scrollEnabled, setscrollEnabled] = useState(true);\r\n  const [isEnterEdit, setisEnterEdit] = useState(false);\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setIsCursorLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    dropdown: {\r\n      margin: 16,\r\n      height: 50,\r\n      borderBottomColor: 'gray',\r\n      borderBottomWidth: 0.5,\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n      fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n      height: 40,\r\n      fontSize: 16,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 20,\r\n\r\n    },\r\n    txt: {\r\n      fontSize: 18,\r\n      lineHeight: 24,\r\n      padding: 5\r\n    },\r\n    sort: {\r\n    },\r\n    item_children: {\r\n      width: 90,\r\n      height: 90,\r\n      backgroundColor: 'black',\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    item_delete_icon: {\r\n      width: 14,\r\n      height: 14,\r\n      position: \"absolute\",\r\n      right: 1,\r\n      top: 1\r\n    },\r\n    item_icon: {\r\n      width: 90,\r\n      height: 90,\r\n      resizeMode: \"contain\",\r\n      position: \"absolute\"\r\n    }\r\n  });\r\n\r\n  const handleImageAddToSelection = async () => {\r\n    dispatch(setDeleteImageVisible(true));\r\n    if (selectedImages.length === 40) {\r\n      return; // Limit reached, do not add a new image\r\n    }\r\n\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        // console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        // console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        // console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Filter out images larger than 10MB\r\n      const newImages = [...selectedImages];\r\n      const promises = response.assets.map(async (asset) => {\r\n        const file = await fetch(asset.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          const exists = newImages.some((image) => image.uri === asset.uri);\r\n          if (!exists) {\r\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\r\n          }\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      });\r\n\r\n      await Promise.all(promises);\r\n\r\n      const limitedImages = newImages.slice(0, 40);\r\n      dispatch(setSelectedImages(limitedImages));\r\n      globalSelectedImages = limitedImages;\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      // limitedImages.forEach((image) => {\r\n      //   console.log(`File size: ${image.fileSize}`);\r\n      // });\r\n\r\n    } catch (error) {\r\n      // console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n  const reloadData = useCallback(() => {\r\n    if (selectedImages.length > 0) {\r\n      // ... Logic to reload data using selectedImages and width\r\n\r\n      // Assuming your logic has updated selectedImages, you can directly use it here\r\n      const updatedSelectedImages = [...selectedImages];\r\n\r\n      // Dispatch the updatedSelectedImages array to the state\r\n      dispatch(setSelectedImages(updatedSelectedImages));\r\n    }\r\n\r\n  }, [widthState]);\r\n\r\n  useEffect(() => {\r\n    const handleWidthChange = ({ window }) => {\r\n      setWidthState(window.width);\r\n    };\r\n\r\n    Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n    return () => {\r\n      Dimensions.removeEventListener('change', handleWidthChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, [reloadData]);\r\n\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    setModalDeleteImagesVisible(false);\r\n    // dispatch(setSelectedImages([]));\r\n    // globalSelectedImages = [];\r\n    // dispatch(setIsAddPhotoVisible(true));\r\n    // dispatch(setAddAnotherImages(false));\r\n    // dispatch(setDeleteImageVisible(true));\r\n    handleClearImagesExtra();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const renderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleImageSelection = async () => {\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40,\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        // console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        // console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        // console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Remove duplicates from the selected images\r\n      const uniqueImages = response.assets.filter(\r\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\r\n      );\r\n\r\n      // Filter out images larger than 10MB\r\n      const filteredImages = [];\r\n      const imageOrder = [];\r\n      for (let index = 0; index < uniqueImages.length; index++) {\r\n        const image = uniqueImages[index];\r\n        const file = await fetch(image.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          filteredImages.push(image);\r\n          imageOrder.push(index);\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      }\r\n\r\n\r\n      // Sort the filtered images based on their original order\r\n      const sortedImages = filteredImages.sort((a, b) => {\r\n        const indexA = imageOrder[filteredImages.indexOf(a)];\r\n        const indexB = imageOrder[filteredImages.indexOf(b)];\r\n        return indexA - indexB;\r\n      });\r\n\r\n\r\n\r\n      // Limit the number of selected images to 40\r\n      const limitedImages = sortedImages.slice(0, 40);\r\n\r\n      globalSelectedImages = limitedImages;\r\n      if (limitedImages.length > 0) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(true));\r\n      }\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      dispatch(setSelectedImages(globalSelectedImages));\r\n\r\n    } catch (error) {\r\n      // console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleDeleteImagePress = useCallback((uri) => {\r\n\r\n    globalSelectedImages = globalSelectedImages.filter((item) => {\r\n      // Replace 'uriToDelete' with the URI you want to delete\r\n      return item.uri !== uri;\r\n    });\r\n\r\n    if (globalSelectedImages.length < 40) {\r\n      dispatch(setAddAnotherImages(true));\r\n    }\r\n\r\n    if (globalSelectedImages.length == 0) {\r\n      dispatch(setAddAnotherImages(false));\r\n      dispatch(setIsAddPhotoVisible(true));\r\n    }\r\n    dispatch(setSelectedImages(globalSelectedImages));\r\n    // dispatch(setSelectedImages((prevImages) => {\r\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\r\n\r\n    //   if (updatedImages.length < 40) {\r\n    //     dispatch(setAddAnotherImages(true));\r\n    //   }\r\n    //   if (updatedImages.length == 0) {\r\n    //    dispatch(setAddAnotherImages(false));\r\n    //     dispatch(setIsAddPhotoVisible(true));\r\n    //   }\r\n    //   return updatedImages;\r\n    // }));\r\n\r\n    // console.log(globalSelectedImages.map((item) => item.uri));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\r\n\r\n\r\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\r\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\r\n\r\n            <ClearImagesModal\r\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\r\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\r\n              handleClearImages={handleClearImages}\r\n              selectedImages={selectedImages}\r\n              isAddPhotoVisible={isAddPhotoVisible} />\r\n\r\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\r\n\r\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"#12293F\" />\r\n\r\n\r\n              <ScrollView\r\n                scrollEnabled={scrollEnabled}\r\n                flex={1}\r\n              >\r\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    delayLongPress={100}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onDragStart={useCallback(() => {\r\n                      if (!isEnterEdit) {\r\n                        setisEnterEdit(true);\r\n                        setscrollEnabled(false);\r\n                      } else {\r\n                        setscrollEnabled(false);\r\n                      }\r\n                    }, [])}\r\n                    onDragEnd={useCallback(() => {\r\n                      setscrollEnabled(true);\r\n                    }, [])}\r\n                    onDataChange={useCallback((data) => {\r\n\r\n                      if (data.length !== data) {\r\n                        dispatch(setSelectedImages(data));\r\n                        globalSelectedImages = data;\r\n                      }\r\n\r\n                    }, [])}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => renderItem(item, index), [])} />\r\n\r\n                  <Center>\r\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"#12293F\" />\r\n                  </Center>\r\n\r\n                </Box>\r\n\r\n\r\n\r\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    sortable={false}\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\r\n\r\n                </Box>\r\n              </ScrollView>\r\n\r\n\r\n\r\n\r\n            </Box>\r\n\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={0}\r\n              left={0}\r\n              borderRadius={3}\r\n              bgColor={'rgba(0, 0, 0, 0.5)'}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              display={isAddPhotoVisible ? 'none' : 'block'}>\r\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\r\n            </Box>\r\n          </Box>\r\n\r\n        </ScrollView>\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      {/* </Box> */}\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} useRNModal>\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Please select image(s) smaller than 10MB!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploadModal = ({ handleUploadImagesModalClose, screenWidth, dragSortableViewRef, handleClearImagesExtra, handleUploadImages }) => {\r\n\r\n  const uploadImagesModalVisible = useSelector((state) => state.uploadImagesModalVisible)\r\n  const uploadImagesButtonLoading = useSelector((state) => state.uploadImagesButtonLoading)\r\n  return (\r\n    <Modal isOpen={uploadImagesModalVisible} onClose={handleUploadImagesModalClose} size={'full'} useRNModal>\r\n      <Modal.Content bgColor={'white'} w={'90%'} h={'100%'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Upload Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n\r\n\r\n        <View style={{ flex: 1, height: '100%', width: '100%', alignItems: 'center', justifyContent: 'center' }}>\r\n\r\n          <View style={{ borderWidth: 1, borderColor: '#12293F', width: '95%', height: '95%' }}>\r\n\r\n            <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\r\n\r\n          </View>\r\n\r\n        </View>\r\n\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <TouchableOpacity\r\n            onPress={handleUploadImagesModalClose}\r\n            style={{\r\n              backgroundColor: '#525252',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Close</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ flex: 4 }} />\r\n\r\n          <TouchableOpacity\r\n            disabled={uploadImagesButtonLoading}\r\n            onPress={handleUploadImages}\r\n            style={{\r\n              backgroundColor: '#16A34A',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            {!uploadImagesButtonLoading ? (\r\n              <Text style={{ color: 'white' }}>Upload</Text>) : (\r\n              <Spinner color=\"white\" />\r\n            )}\r\n          </TouchableOpacity>\r\n\r\n\r\n        </View>\r\n\r\n\r\n\r\n      </Modal.Content>\r\n\r\n    </Modal>\r\n\r\n  );\r\n}\r\n\r\nconst UploadImagesModal = ({ fetchImageCounts }) => {\r\n\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const dragSortableViewRef = useRef();\r\n\r\n  const handleClearImagesExtra = () => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n    dispatch(setDeleteImageVisible(true));\r\n  };\r\n\r\n\r\n  const handleUploadImagesModalClose = () => {\r\n\r\n    dispatch(setUploadImagesModalVisible(false));\r\n    // globalCurrentStockID = '';\r\n    handleClearImagesExtra();\r\n    globalSelectedVehicle = '';\r\n  }\r\n\r\n  const uploadImages = useCallback(async () => {\r\n\r\n    const storageRef = ref(storage, `${globalCurrentStockID}`);\r\n    const ImageFormat = { jpg: 'jpg' };\r\n    const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n    const docRef = doc(collectionRef, globalCurrentStockID);\r\n\r\n\r\n\r\n    try {\r\n      // Get the names of the images to keep\r\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n      // Delete existing files in the folder that do not match the names of the images to keep\r\n      const listResult = await listAll(storageRef);\r\n      await Promise.all(\r\n        listResult.items\r\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n          .map((itemRef) => deleteObject(itemRef))\r\n      );\r\n\r\n      await Promise.all(\r\n        globalSelectedImages.map(async (asset, index) => {\r\n          const { uri } = asset;\r\n          const imagename = index.toString();\r\n\r\n          const response = await fetch(uri);\r\n          const blob = await response.blob();\r\n\r\n          // Create an offscreen canvas\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          // Create a new image object\r\n          const img = new Image();\r\n          img.src = URL.createObjectURL(blob);\r\n\r\n          // Draw the image on the canvas\r\n          img.onload = async () => {\r\n            // Create a canvas element\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            // Calculate the desired width and height for the resized image\r\n            const maxWidth = 800; // Set your desired maximum width\r\n            const maxHeight = 600; // Set your desired maximum height\r\n            let newWidth = img.width;\r\n            let newHeight = img.height;\r\n\r\n            // Check if the image needs resizing\r\n            if (img.width > maxWidth) {\r\n              newWidth = maxWidth;\r\n              newHeight = (img.height * maxWidth) / img.width;\r\n            }\r\n\r\n            if (newHeight > maxHeight) {\r\n              newWidth = (newWidth * maxHeight) / newHeight;\r\n              newHeight = maxHeight;\r\n            }\r\n\r\n            // Set the canvas dimensions to the new width and height\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n\r\n            // Draw the resized image onto the canvas\r\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n\r\n            // Calculate the font size as a percentage of the image width\r\n            const fontSizePercentage = 3;\r\n            const imageRes = img.height * img.width;\r\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\r\n\r\n            ctx.font = `bold ${fontSize}px Arial`;\r\n            ctx.fillStyle = '#fff';\r\n            ctx.shadowColor = 'transparent';\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.lineWidth = 2;\r\n\r\n            // Calculate the position for the watermark text\r\n            const watermarkText = `Real Motor Japan ${globalSelectedVehicleReferenceNumber}`;\r\n            const textWidth = ctx.measureText(watermarkText).width;\r\n            const textHeight = fontSize; // Font size determines the text height\r\n\r\n            // Set padding around the text (adjust as needed)\r\n            const paddingX = 10;\r\n            const paddingY = 5;\r\n\r\n            // Calculate the position for the text shadow\r\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\r\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\r\n\r\n            // Increase the shadow thickness by adjusting the shadow blur radius\r\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\r\n\r\n            // Draw the text shadow (black)\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(watermarkText, xShadow, yShadow);\r\n\r\n            // Reset the shadow blur radius for the actual text\r\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\r\n\r\n            // Calculate the position for the actual text\r\n            const x = (canvas.width - textWidth) / 2;\r\n            const y = canvas.height - 20;\r\n\r\n            // Draw the actual text (white)\r\n            ctx.fillStyle = '#fff';\r\n            ctx.fillText(watermarkText, x, y);\r\n\r\n            // Convert the canvas to a blob\r\n            const watermarkedImageBlob = await new Promise(resolve => {\r\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\r\n            });\r\n\r\n            // Upload the resized image to Firebase Storage\r\n            const imageRef = ref(storage, `${globalCurrentStockID}/${imagename}`);\r\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\r\n          };\r\n        })\r\n      );\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n      const year = moment(datetime).format('YYYY');\r\n      const month = moment(datetime).format('MM');\r\n      const monthWithDay = moment(datetime).format('MM/DD');\r\n      const date = moment(datetime).format('YYYY/MM/DD');\r\n      const day = moment(datetime).format('DD');\r\n      const time = moment(datetime).format('HH:mm');\r\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n      const imageCount = {\r\n        imageCount: globalSelectedImages.length,\r\n      };\r\n\r\n      await updateDoc(docRef, imageCount);\r\n\r\n      const logData = {\r\n        message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber}\" using Vehicle List`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber} using Vehicle List\"`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle Updated'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n\r\n      // console.log(`Images uploaded to folder ${globalCurrentStockID}`);\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleUploadImages = async () => {\r\n\r\n    dispatch(setUploadImagesButtonLoading(true));\r\n\r\n    if (globalSelectedImages.length > 0) {\r\n      toast.closeAll();\r\n      try {\r\n        await uploadImages();\r\n        dispatch(setUploadImagesButtonLoading(false));\r\n        fetchImageCounts();\r\n        handleUploadImagesModalClose();\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Uploaded Images successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        dispatch(setUploadImagesButtonLoading(false));\r\n        handleUploadImagesModalClose();\r\n\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Uploaded Error: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    else {\r\n      dispatch(setUploadImagesButtonLoading(false));\r\n    }\r\n\r\n\r\n\r\n  };\r\n\r\n  return (\r\n\r\n    <>\r\n      <ImageUploadModal\r\n        handleUploadImagesModalClose={handleUploadImagesModalClose}\r\n        screenWidth={screenWidth}\r\n        dragSortableViewRef={dragSortableViewRef}\r\n        handleClearImagesExtra={handleClearImagesExtra}\r\n        handleUploadImages={handleUploadImages} />\r\n    </>\r\n  );\r\n\r\n};\r\n\r\n\r\nconst SupplyChainsCosts = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsOpen = useCallback((data) => {\r\n    dispatch(setSupplyChainsCostsModalVisible(true));\r\n    dispatch(setVehicleListSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\r\n    globalSupplyChainCostsData = data.supplyChainsCostsData;\r\n    globalCurrentSupplyChainCostsData = data.supplyChainsCostsData;\r\n    globalCurrentStockID = data.stockID;\r\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\r\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\r\n    globalSelectedCarName = data.carName;\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <><TouchableOpacity\r\n      onPress={() => handleModalSupplyChainsCostsOpen(data)}\r\n      style={{\r\n        backgroundColor: '#12293F',\r\n        borderRadius: 5,\r\n        padding: 2,\r\n        // flex: 1,\r\n        width: '90%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}\r\n    >\r\n      {/* <Text style={{ textAlign: 'center', }}>Expense</Text> */}\r\n      <MaterialIcons name=\"payments\" size={22} color=\"white\" />\r\n    </TouchableOpacity>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n}\r\n\r\nconst AllSccModals = ({ supplyChainsCostsModalVisible, supplyChainsCostsData, expenseNameData, paidToData, currentDate, vehicleListSupplyChainsCostsData }) => {\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const toast = useToast();\r\n\r\n  const [sccData, setSccData] = useState([]);\r\n\r\n  // const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible);\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const [clearModalVisible, setClearModalVisible] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\r\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\r\n  const [paidToIsError, setPaidToIsError] = useState(false);\r\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\r\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\r\n  const selectExpenseNameRef = useRef(null);\r\n  const selectPaidToRef = useRef(null);\r\n  const expenseViewRef = useRef(null);\r\n\r\n  const textAreaAddExpenseName = useRef(null);\r\n  const textAreaAddPaidTo = useRef(null);\r\n  const inputExpenseAmount = useRef(null);\r\n  const handleInputExpenseAmountChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputExpenseAmount.current.value = formattedValue;\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsClose = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(false));\r\n    inputExpenseAmount.current?.clear();\r\n    globalSelectedExpenseName = '';\r\n    setSelectResetKey(nanoid());\r\n    globalSelectedPaidTo = '';\r\n    setSelectedDate(currentDate);\r\n    globalSPCSelectedDate = currentDate;\r\n    dispatch(setSelectedExpenseName(''));\r\n    dispatch(setSelectedPaidTo(''));\r\n    setInputAmountIsError(false);\r\n    setExpenseNameIsError(false);\r\n    setPaidToIsError(false);\r\n    globalSelectedVehicle = '';\r\n  };\r\n\r\n\r\n  const handleClearModalOpen = () => {\r\n    setClearModalVisible(true);\r\n  };\r\n\r\n  const handleClearModalClose = () => {\r\n    setClearModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const amounts = vehicleListSupplyChainsCostsData.map((item) => {\r\n      const expenseName = Object.keys(item)[0];\r\n      const expenseData = item[expenseName];\r\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n    });\r\n\r\n    // Use reduce to add up all the amounts\r\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n    const formattedTotalAmount = totalAmount.toLocaleString();\r\n    setTotalAmount(formattedTotalAmount);\r\n    globalSupplyChainCostsAmount = formattedTotalAmount;\r\n\r\n  }, [vehicleListSupplyChainsCostsData]);\r\n\r\n  const handleSave = useCallback(() => {\r\n\r\n\r\n\r\n    if (inputExpenseAmount.current?.value == ''\r\n      || inputExpenseAmount.current?.value == 0\r\n      || globalSelectedExpenseName == ''\r\n      || globalSelectedPaidTo == ''\r\n    ) {\r\n\r\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\r\n        setInputAmountIsError(true);\r\n      }\r\n\r\n      if (globalSelectedExpenseName == '') {\r\n        setExpenseNameIsError(true);\r\n      }\r\n\r\n      if (globalSelectedPaidTo == '') {\r\n        setPaidToIsError(true);\r\n      }\r\n    }\r\n\r\n    else {\r\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\r\n\r\n      if (existingIndex !== -1) {\r\n        // If an entry with the same expense name exists, update it\r\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\r\n        updatedData[existingIndex][globalSelectedExpenseName] = {\r\n          expenseName: globalSelectedExpenseName,\r\n          amount: inputExpenseAmount.current?.value,\r\n          date: globalSPCSelectedDate,\r\n          paidName: globalSelectedPaidTo,\r\n        };\r\n        globalSupplyChainCostsData = updatedData;\r\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n\r\n      } else {\r\n        setInputAmountIsError(false);\r\n        setExpenseNameIsError(false);\r\n        setPaidToIsError(false);\r\n        // If no entry with the same expense name exists, add a new entry\r\n        const newData = {\r\n          [globalSelectedExpenseName]: {\r\n            expenseName: globalSelectedExpenseName,\r\n            amount: inputExpenseAmount.current?.value,\r\n            date: globalSPCSelectedDate,\r\n            paidName: globalSelectedPaidTo,\r\n          },\r\n        };\r\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\r\n        // console.log(globalSupplyChainCostsData);\r\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\r\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\r\n        setSelectResetKey(nanoid());\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const handleEditPress = useCallback((item) => {\r\n    // console.log(item.amount);\r\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\r\n    dispatch(setSelectedExpenseName(item.expenseName));\r\n    globalSelectedExpenseName = item.expenseName;\r\n    dispatch(setSelectedPaidTo(item.paidName));\r\n    globalSelectedPaidTo = item.paidName;\r\n    globalSPCSelectedDate = item.date;\r\n    setSelectedDate(item.date);\r\n    expenseViewRef.current.scrollIntoView({ behavior: 'smooth' });\r\n\r\n  }, [])\r\n\r\n\r\n  const handleDeleteItem = (expenseName) => {\r\n    // Find the index of the item to be deleted\r\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\r\n\r\n    if (itemIndex !== -1) {\r\n      // Create a copy of the data array and remove the item at the found index\r\n      const newData = [...globalSupplyChainCostsData];\r\n      newData.splice(itemIndex, 1);\r\n\r\n      // Update the state with the new array\r\n      dispatch(setVehicleListSupplyChainsCostsData(newData));\r\n      globalSupplyChainCostsData = newData;\r\n    }\r\n  };\r\n\r\n  const handleFirstModalClose = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(false));\r\n\r\n  };\r\n  const handleFirstModalOpen = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(true));\r\n\r\n  }\r\n\r\n  const handleAddExpenseNameTextChange = () => {\r\n    const textAreaValue = textAreaAddExpenseName.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPaidToTextChange = () => {\r\n    const textAreaValue = textAreaAddPaidTo.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleSaveSupplyChainsCosts = async () => {\r\n\r\n    toast.closeAll();\r\n    if (globalCurrentSupplyChainCostsData == globalSupplyChainCostsData) {\r\n      // console.log('Same price, will not update')\r\n      dispatch(setSupplyChainsCostsModalVisible(false));\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), globalCurrentStockID);\r\n\r\n      try {\r\n        await updateDoc(vehicleProductRef, { supplyChainsCostsData: globalSupplyChainCostsData });\r\n        dispatch(setSupplyChainsCostsModalVisible(false));\r\n        // console.log('Supply Chains Costs updated successfully');\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n\r\n        dispatch(setSupplyChainsCostsModalVisible(false));\r\n        dispatch(setVehicleListSupplyChainsCostsData([]));\r\n        globalSupplyChainCostsData = [];\r\n        globalCurrentSupplyChainCostsData = [];\r\n        globalCurrentStockID = '';\r\n\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n  return (\r\n\r\n    <><Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 960 ? '90%' : '50%'} h={'auto'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 1380 ? 'column' : 'row'} alignItems={screenWidth <= 1380 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\r\n          <Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 1380 ? 'center' : ''}> {globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <View style={{ height: '100%' }}>\r\n            <View paddingBottom={5}>\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} ref={expenseViewRef}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\r\n                  <SupplyChainsCostsSortAndAddModal\r\n                    docName='ExpenseName'\r\n                    handleAddTextChange={handleAddExpenseNameTextChange}\r\n                    textAreaAdd={textAreaAddExpenseName}\r\n                    title='Expense Name'\r\n                    dataName={'expenseName'}\r\n                    databaseInit={projectExtensionFirestore}\r\n                    headerText=\"Rearrange/Add Expense Name\"\r\n                    data={expenseNameData}\r\n                    handleFirstModalClose={handleFirstModalClose}\r\n                    handleFirstModalOpen={handleFirstModalOpen} />\r\n                </View>\r\n                <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\r\n              </View>\r\n\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: screenWidth <= 960 ? 8 : 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={2}>Amount</Text>\r\n                </View>\r\n                <Input\r\n                  borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\r\n                  flex={3}\r\n                  ref={inputExpenseAmount}\r\n                  onChangeText={handleInputExpenseAmountChange}\r\n                  placeholder=\"Amount\"\r\n                  bgColor={'white'}\r\n                  placeholderTextColor={'muted.400'}\r\n                  InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\r\n              </View>\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\r\n                </View>\r\n                <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\r\n              </View>\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\r\n                  <SupplyChainsCostsSortAndAddModal\r\n                    docName='PaidTo'\r\n                    handleAddTextChange={handleAddPaidToTextChange}\r\n                    textAreaAdd={textAreaAddExpenseName}\r\n                    title='Paid To'\r\n                    dataName={'paidTo'}\r\n                    databaseInit={projectExtensionFirestore}\r\n                    headerText=\"Rearrange/Add Paid To\"\r\n                    data={paidToData}\r\n                    handleFirstModalClose={handleFirstModalClose}\r\n                    handleFirstModalOpen={handleFirstModalOpen} />\r\n                </View>\r\n                <SelectPaidTo paidToIsError={paidToIsError} />\r\n              </View>\r\n\r\n              <TouchableHighlight\r\n                onPress={handleSave}\r\n                underlayColor=\"lightgreen\"\r\n                style={{\r\n                  backgroundColor: '#16A34A',\r\n                  borderRadius: 5,\r\n                  margin: 1,\r\n                  flex: 1,\r\n                  width: screenWidth <= 960 ? '80%' : '40%',\r\n                  alignSelf: 'center',\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 10,\r\n                }}>\r\n                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                  <MaterialIcons name=\"add\" color=\"white\" size={20} />\r\n                  <Text style={{ color: 'white', marginLeft: 5 }}>ADD/EDIT</Text>\r\n                </View>\r\n              </TouchableHighlight>\r\n            </View>\r\n            {screenWidth >= 1360 ? (\r\n\r\n              <View>\r\n                <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#0642F4', }}\r\n                  flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\r\n                </View>\r\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n                  return (\r\n                    <View style={{ flexDirection: 'row', backgroundColor: '#D4D4D4', borderBottomColor: '#E4E4E7', borderBottomWidth: 1, justifyContent: 'center', alignItems: 'center', }} key={index}\r\n                      flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\r\n                      justifyContent={'center'} alignItems={'center'}>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      <View style={{ flex: 1, flexDirection: 'row', marginLeft: 1 }}\r\n                        flex={1} marginLeft={1} flexDir={'row'}>\r\n                        <TouchableHighlight\r\n                          onPress={() => handleEditPress(expenseData)}\r\n                          underlayColor={'#005691'}\r\n                          style={{\r\n                            flex: 1,\r\n                            margin: 1,\r\n                            borderRadius: 3,\r\n                          }}>\r\n                          <View\r\n                            style={{\r\n                              flex: 1,\r\n                              backgroundColor: '#06B6D4',\r\n                              borderRadius: 3,\r\n                              justifyContent: 'center',\r\n                              alignItems: 'center',\r\n                            }}>\r\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\r\n                          </View>\r\n                        </TouchableHighlight>\r\n                        <TouchableHighlight\r\n                          onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                          underlayColor={'#005691'}\r\n                          style={{\r\n                            flex: 1,\r\n                            margin: 1,\r\n                            borderRadius: 3,\r\n                          }}>\r\n                          <View\r\n                            style={{\r\n                              flex: 1,\r\n                              backgroundColor: '#EF4444',\r\n                              borderRadius: 3,\r\n                              justifyContent: 'center',\r\n                              alignItems: 'center',\r\n                            }}>\r\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                          </View>\r\n                        </TouchableHighlight>\r\n                        {/* <TouchableHighlight\r\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                        style={() => ({\r\n                          flex: 1,\r\n                          margin: 1,\r\n                          borderRadius: 3,\r\n                          backgroundColor: '#CD5C5C',\r\n                        })}>\r\n                        <View\r\n                          style={{\r\n                            flex: 1,\r\n                            borderRadius: 3,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            backgroundColor: '#CD5C5C',\r\n                          }}>\r\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                        </View>\r\n                      </TouchableHighlight> */}\r\n                      </View>\r\n                    </View>\r\n                  )\r\n                })}\r\n\r\n              </View>\r\n\r\n            ) : (\r\n\r\n              <View>\r\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n                  return (\r\n\r\n                    <View style={{ flexDirection: 'column', justifyContent: 'center', flex: 1, margin: 3, marginBottom: 10, }} key={index}>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Expense Name</Text>\r\n                        </View>\r\n\r\n                        <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Amount</Text>\r\n                        </View>\r\n\r\n                        <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Date</Text>\r\n                        </View>\r\n                        <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Paid To</Text>\r\n                        </View>\r\n                        <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Modify</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, flexDirection: 'row', }}\r\n                          flex={1} marginLeft={1} flexDir={'row'}>\r\n\r\n                          <TouchableHighlight\r\n                            onPress={() => handleEditPress(expenseData)}\r\n                            underlayColor={'#005691'}\r\n                            style={{\r\n                              flex: 1,\r\n                              margin: 1,\r\n                              borderRadius: 3,\r\n                            }}>\r\n                            <View\r\n                              style={{\r\n                                flex: 1,\r\n                                backgroundColor: '#06B6D4',\r\n                                borderRadius: 3,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                              }}>\r\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\r\n                            </View>\r\n                          </TouchableHighlight>\r\n                          <TouchableHighlight\r\n                            onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                            underlayColor={'#005691'}\r\n                            style={{\r\n                              flex: 1,\r\n                              margin: 1,\r\n                              borderRadius: 3,\r\n                            }}>\r\n                            <View\r\n                              style={{\r\n                                flex: 1,\r\n                                backgroundColor: '#EF4444',\r\n                                borderRadius: 3,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                              }}>\r\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                            </View>\r\n                          </TouchableHighlight>\r\n                          {/* <TouchableHighlight\r\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                        style={() => ({\r\n                          flex: 1,\r\n                          margin: 1,\r\n                          borderRadius: 3,\r\n                          backgroundColor: '#CD5C5C',\r\n                        })}>\r\n                        <View\r\n                          style={{\r\n                            flex: 1,\r\n                            borderRadius: 3,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            backgroundColor: '#CD5C5C',\r\n                          }}>\r\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                        </View>\r\n                      </TouchableHighlight> */}\r\n                        </View>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n\r\n                  )\r\n                })}\r\n\r\n              </View>\r\n\r\n\r\n            )}\r\n\r\n          </View>\r\n\r\n\r\n        </Modal.Body>\r\n        <View\r\n          style={{\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            width: '100%',\r\n          }}>\r\n          <TouchableOpacity\r\n            onPress={handleModalSupplyChainsCostsClose}\r\n            style={{\r\n              backgroundColor: '#525252',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Close</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ flex: 4 }} />\r\n          <TouchableOpacity\r\n            onPress={handleSaveSupplyChainsCosts}\r\n            style={{\r\n              backgroundColor: '#16A34A',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Save</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Modal.Content>\r\n    </Modal>\r\n      {/* <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n        <Modal.Content bgColor={'amber.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'amber.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'amber.600'}\r\n            margin={5}>\r\n            <View flex={1}>\r\n              <Text color={'amber.600'} bold>Warning!</Text>\r\n              <Text color={'amber.600'}>Are you sure you want to clear?</Text>\r\n            </View>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleClearModalClose}\r\n                colorScheme={'warmGray'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button\r\n                onPress={() => {\r\n                }}\r\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                Clear\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal> */}\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nconst SelectPaidTo = ({ paidToIsError, }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedPaidTo}\r\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedPaidTo = value\r\n      dispatch(setSelectedPaidTo(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Paid To\"\r\n    placeholder=\"Choose Paid To\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {paidToData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n    ;\r\n};\r\n\r\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  nameVariable.text = loginName;\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n    handleFirstModalClose();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n    handleFirstModalOpen();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        // console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'flex-end', marginRight: 1 }}>\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity onPress={handleSortModalOpen}>\r\n            <MaterialCommunityIcons name=\"playlist-edit\" size={25} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n      </View>\r\n\r\n      <Modal isOpen={modalSortOpen} onClose={handleSortModalClose} useRNModal>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <View style={{\r\n              width: '100%',\r\n              flexDirection: 'column',\r\n            }}>\r\n              <View style={{ alignItems: 'flex-end' }}>\r\n                <TouchableHighlight onPress={handleModalAddOpen}>\r\n                  <FontAwesome name=\"plus-circle\" size={25} color=\"#102A43\" />\r\n                </TouchableHighlight>\r\n              </View>\r\n\r\n              <View style={{\r\n                flex: 1,\r\n                borderWidth: 1,\r\n                borderColor: '#102A43',\r\n                borderRadius: 5,\r\n              }}>\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n                    <View\r\n                      style={{\r\n                        flex: 1,\r\n                        backgroundColor: 'rgba(16,42,67, 0.5)',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#D3D3D3', // You can use a specific color code here\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                      }}\r\n                    >\r\n                      <TouchableOpacity onPress={() => handleDeleteItemPress(item)}>\r\n                        <AntDesign name=\"minuscircle\" size={16} color=\"#102A43\" />\r\n                      </TouchableOpacity>\r\n                      <Text style={{ flex: 1, textAlign: 'center', color: 'white' }}>{item}</Text>\r\n                      <TouchableOpacity onPressIn={drag}>\r\n                        <Entypo name=\"menu\" size={16} color=\"#102A43\" />\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </View>\r\n            </View>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <View style={{ flexDirection: 'row', flex: 1 }}>\r\n              <TouchableOpacity\r\n                onPress={handleSortModalClose}\r\n                style={{\r\n                  flex: 1,\r\n                  borderRadius: 5,\r\n                  backgroundColor: '#525252',\r\n                  margin: 5,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 8,\r\n                }}\r\n              >\r\n                <Text style={{ color: 'white' }}>Close</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={handleModalSaveOpen}\r\n                style={{\r\n                  flex: 1,\r\n                  borderRadius: 5,\r\n                  backgroundColor: '#0891B2',\r\n                  margin: 5,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 8,\r\n                }}\r\n              >\r\n                <Text style={{ color: 'white' }}>Save</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} useRNModal>\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nconst SCC_Modals = () => {\r\n\r\n  const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible)\r\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const currentDate = useSelector((state) => state.currentDate);\r\n  const vehicleListSupplyChainsCostsData = useSelector((state) => state.vehicleListSupplyChainsCostsData);\r\n\r\n  return (\r\n    <AllSccModals\r\n      supplyChainsCostsModalVisible={supplyChainsCostsModalVisible}\r\n      supplyChainsCostsData={supplyChainsCostsData}\r\n      expenseNameData={expenseNameData}\r\n      paidToData={paidToData}\r\n      currentDate={currentDate}\r\n      vehicleListSupplyChainsCostsData={vehicleListSupplyChainsCostsData}\r\n    />\r\n  );\r\n}\r\n\r\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\r\n\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const handleModalCalendarOpen = () => {\r\n    setModalCalendarVisible(true);\r\n  };\r\n\r\n  const handleModalCalendarClose = () => {\r\n    setModalCalendarVisible(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <TouchableOpacity onPress={handleModalCalendarOpen} style={{ flex: 3 }}>\r\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n      </TouchableOpacity>\r\n\r\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n        <Modal.CloseButton />\r\n        <Modal.Content>\r\n          <Box height={'full'} flex={1}>\r\n\r\n            <Calendar\r\n              onDayPress={useCallback(day => {\r\n                setSelectedDate(day.dateString);\r\n                // console.log(day.dateString);\r\n                globalSPCSelectedDate = day.dateString;\r\n                handleModalCalendarClose();\r\n              }, [])}\r\n              markedDates={{\r\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n              }}\r\n              renderArrow={(direction) => (\r\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n              )}\r\n              enableSwipeMonths={true}\r\n              initialDate={selectedDate}\r\n              showSixWeeks />\r\n\r\n          </Box>\r\n\r\n        </Modal.Content>\r\n\r\n      </Modal></>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedExpenseName}\r\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedExpenseName = value\r\n      dispatch(setSelectedExpenseName(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Expense Name\"\r\n    placeholder=\"Choose Expense Name\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {expenseNameData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n\r\n\r\n};\r\n\r\nconst VehicleEditModal = ({ handleEditModalClose }) => {\r\n\r\n  const editVehicleModalVisible = useSelector((state) => state.editVehicleModalVisible);\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  return (\r\n    <Modal isOpen={editVehicleModalVisible} onClose={handleEditModalClose} size={'full'}>\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'100%'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Edit Vehicle </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n\r\n\r\n        <Modal.Body >\r\n          Sit nulla est ex deserunt exercitation anim occaecat.\r\n        </Modal.Body>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n\r\n  );\r\n};\r\n\r\nconst EditVehicleModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEditModalClose = () => {\r\n    dispatch(setEditVehicleModalVisible(false));\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = '';\r\n    globalSelectedVehicleReferenceNumber = '';\r\n    globalSelectedCarName = '';\r\n\r\n  }\r\n\r\n  return (\r\n    <VehicleEditModal handleEditModalClose={handleEditModalClose} />\r\n\r\n\r\n  );\r\n\r\n};\r\n\r\nconst EditVehicle = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleModalOpen = () => {\r\n\r\n    dispatch(setEditVehicleModalVisible(true));\r\n    globalCurrentStockID = data.stockID;\r\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\r\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\r\n    globalSelectedCarName = data.carName;\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        onPress={handleModalOpen}\r\n        style={{\r\n          backgroundColor: '#7B9CFF',\r\n          marginHorizontal: 5,\r\n          borderRadius: 5,\r\n          padding: 2,\r\n          flex: 1,\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        {/* <Text style={{ textAlign: 'center',  color: 'white', }}>Edit</Text> */}\r\n        <MaterialIcons name={\"edit\"} color='white' size={22} />\r\n      </TouchableOpacity>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst ViewImagesModal = ({ handleViewImagesModalClose }) => {\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const viewImagesModalVisible = useSelector((state) => state.viewImagesModalVisible);\r\n  const viewImagesData = useSelector((state) => state.viewImagesData);\r\n\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    const styles = StyleSheet.create({\r\n      dropdown: {\r\n        margin: 16,\r\n        height: 50,\r\n        borderBottomColor: 'gray',\r\n        borderBottomWidth: 0.5,\r\n      },\r\n      icon: {\r\n        marginRight: 5,\r\n      },\r\n      placeholderStyle: {\r\n        fontSize: 16,\r\n      },\r\n      selectedTextStyle: {\r\n        fontSize: 16,\r\n      },\r\n      iconStyle: {\r\n        width: 20,\r\n        height: 20,\r\n      },\r\n      inputSearchStyle: {\r\n        height: 40,\r\n        fontSize: 16,\r\n      },\r\n      container: {\r\n        flex: 1,\r\n        paddingTop: 20,\r\n\r\n      },\r\n      txt: {\r\n        fontSize: 18,\r\n        lineHeight: 24,\r\n        padding: 5\r\n      },\r\n      sort: {\r\n      },\r\n      item_children: {\r\n        width: 90,\r\n        height: 90,\r\n        backgroundColor: 'black',\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      },\r\n      item_delete_icon: {\r\n        width: 14,\r\n        height: 14,\r\n        position: \"absolute\",\r\n        right: 1,\r\n        top: 1\r\n      },\r\n      item_icon: {\r\n        width: 90,\r\n        height: 90,\r\n        resizeMode: \"contain\",\r\n        position: \"absolute\"\r\n      }\r\n    });\r\n\r\n    return (\r\n\r\n      <Box key={item.id} style={styles.item}>\r\n        <Box style={styles.item_children}>\r\n\r\n          <FastImage\r\n            style={styles.item_icon}\r\n            source={{\r\n              uri: item.uri,\r\n              priority: FastImage.priority.normal,\r\n            }}\r\n            resizeMode={FastImage.resizeMode.contain}\r\n\r\n          />\r\n\r\n        </Box>\r\n      </Box>\r\n    );\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <>\r\n      <Modal isOpen={viewImagesModalVisible} onClose={handleViewImagesModalClose} size={'full'} useRNModal>\r\n        <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '60%'} h={'100%'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n            <Text color={'white'} fontSize={20} bold>View Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n          </Modal.Header>\r\n\r\n\r\n          <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', margin: '5%', marginLeft: '10%' }}>\r\n\r\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n              <ScrollView style={{ height: '90%' }}>\r\n                <DragSortableView\r\n                  sortable={false}\r\n                  // ref={dragSortableViewRef}\r\n                  dataSource={viewImagesData}\r\n                  parentWidth={width * 0.33}\r\n                  childrenWidth={100}\r\n                  childrenHeight={100}\r\n                  marginChildrenTop={3}\r\n                  marginChildrenBottom={0}\r\n                  marginChildrenLeft={0}\r\n                  marginChildrenRight={0}\r\n                  onClickItem={(item, index) => {\r\n                    handleImagePress(index.uri);\r\n                  }}\r\n                  keyExtractor={(item) => item.uri}\r\n                  renderItem={useCallback((item, index) => getImagesRenderItem(item, index), [])}\r\n                />\r\n              </ScrollView>\r\n            </View>\r\n\r\n\r\n          </View>\r\n\r\n\r\n        </Modal.Content>\r\n\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\n\r\nconst FobPriceHistoryModal = ({ handleFobPriceHistoryClose }) => {\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const fobPriceHistoryModalVisible = useSelector((state) => state.fobPriceHistoryModalVisible);\r\n  const fobHistoryData = useSelector((state) => state.fobHistoryData);\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={fobPriceHistoryModalVisible}\r\n      onClose={handleFobPriceHistoryClose}\r\n      size={'full'}\r\n      useRNModal\r\n    >\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'auto'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} alignItems={screenWidth <= 960 ? 'center' : 'flex-start'}>\r\n          <Text color={'white'} fontSize={20} bold>FOB Price History </Text>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ScrollView style={{ width: '100%' }}>\r\n            {screenWidth >= 960 ? (\r\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\r\n                {/* Table Header */}\r\n                <View style={{\r\n                  borderRadius: 3,\r\n                  backgroundColor: '#0642F4',\r\n                  flexDirection: 'row',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#0642F4',\r\n                }}>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\r\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n\r\n                </View>\r\n\r\n                {/* Table Rows */}\r\n                {[...fobHistoryData]\r\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\r\n                  .map((data, index) => (\r\n                    <View\r\n                      key={index}\r\n                      style={{\r\n                        backgroundColor: '#BBF7D0',\r\n                        flexDirection: 'row',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#CCCCCC',\r\n                      }}\r\n                    >\r\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\r\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\r\n                      <Text style={{ width: '20%', fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\r\n                    </View>\r\n                  ))\r\n                }\r\n              </View>\r\n            ) : (\r\n              // Mobile View FOB Price History\r\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\r\n                {/* Table Header */}\r\n                {/* <View style={{\r\n                  borderRadius: 3,\r\n                  backgroundColor: '#0642F4',\r\n                  flexDirection: 'row',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#0642F4',\r\n                }}>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price</Text>\r\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n\r\n                </View> */}\r\n\r\n                {/* Table Rows */}\r\n                {[...fobHistoryData]\r\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\r\n                  .map((data, index) => (\r\n                    <View\r\n                      key={index}\r\n                      style={{\r\n                        backgroundColor: '#BBF7D0',\r\n                        flexDirection: 'column',\r\n                        borderWidth: 1,\r\n                        borderColor: '#E4E4E7',\r\n                        margin: 3,\r\n                      }}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                        </View>\r\n\r\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\r\n                        </View><Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n                        </View>\r\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\r\n                      </View>\r\n                    </View>\r\n                  ))\r\n                }\r\n              </View>\r\n            )}\r\n\r\n          </ScrollView>\r\n\r\n\r\n\r\n\r\n        </Modal.Body>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nconst FobPriceHistory = () => {\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleFobPriceHistoryClose = () => {\r\n\r\n    dispatch(setFobPriceHistoryModalVisible(false));\r\n    globalFobPriceHistoryData = [];\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = '';\r\n    globalSelectedVehicleReferenceNumber = '';\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <FobPriceHistoryModal handleFobPriceHistoryClose={handleFobPriceHistoryClose} />\r\n\r\n  );\r\n}\r\n\r\n\r\nconst ImageCountComponent = ({ item, handleViewImagesModalOpen, handleUploadImagesModalOpen }) => {\r\n  // State for the image count\r\n  const [imageCount, setImageCount] = useState(item.imageCount || 0);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        setImageCount(data.imageCount || 0); // Update the image count with the new value from Firestore\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, [item.stockID]); // useEffect will re-run if item.stockID changes\r\n\r\n  // Function placeholders\r\n  // const handleViewImagesModalOpen = (item) => {\r\n  //   console.log('View images', item);\r\n  // };\r\n\r\n  // const handleUploadImagesModalOpen = (item) => {\r\n  //   console.log('Upload images', item);\r\n  // };\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n      {imageCount > 0 ? (\r\n        <TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n          <Text style={{ textDecorationLine: 'underline' }}>\r\n            {imageCount} image/s\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ) : (\r\n        <Text>{imageCount} image/s</Text>\r\n      )}\r\n\r\n      <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n        {imageCount > 0 ? null : (\r\n          <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n        )}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst FobPriceInput = ({ item, index, }) => {\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const [fobPrice, setFobPrice] = useState(item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : '');\r\n  const inputFobJpy = useRef([]);\r\n\r\n  useEffect(() => {\r\n    // Assume you have a collection named 'stocks' and the document ID is `item.stockID`\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\r\n      // console.log(`Read ${doc.size} documents from VehicleProducts`);\r\n\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        // Update the fobPrice state with the new value from Firestore\r\n        setFobPrice(data.fobPrice ? parseFloat(data.fobPrice).toLocaleString() : '');\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // ... rest of your component\r\n  const formatValueWithCommas = (value) => {\r\n    const numericValue = value.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    return formattedValue;\r\n  };\r\n\r\n  const handleTextChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    const currentNumericValue = fobPrice.replace(/[^0-9]/g, '');\r\n\r\n    // Update state only if the numeric value has changed\r\n    if (numericValue !== currentNumericValue) {\r\n      setFobPrice(numericValue);\r\n    }\r\n  };\r\n\r\n  // This function will format the displayed text\r\n  const handleInputFobJpyChange = (text, stockID) => {\r\n    const formattedValue = formatValueWithCommas(text);\r\n\r\n    // Apply the formatted value to the input without resetting the state\r\n    if (inputFobJpy.current[stockID]) {\r\n      inputFobJpy.current[stockID].setNativeProps({ text: formattedValue });\r\n    }\r\n  };\r\n\r\n  const handleSaveFob = async (item, index,) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    toast.closeAll();\r\n    // if (item.fobPrice == fobValue || fobValue == '') {\r\n    //   dispatch(setLoadingModalVisible(false));\r\n\r\n    //   console.log('same');\r\n    //   console.log(item.fobPrice);\r\n\r\n    // }\r\n    // else {\r\n\r\n    const fobHistoryData = {\r\n      date: formattedTime,\r\n      fobPrice: fobValue,\r\n      changedBy: nameVariable.text,\r\n    };\r\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n    try {\r\n      await updateDoc(vehicleProductRef, {\r\n        fobPrice: fobValue,\r\n        fobHistory: arrayUnion(fobHistoryData)\r\n      });\r\n      const logData = {\r\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle FOB Price Updated'.toLowerCase(),\r\n          'Vehicle FOB Price'.toLowerCase(),\r\n          'Vehicle FOB'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'FOB Price Updated'.toLowerCase(),\r\n          'FOB Price'.toLowerCase(),\r\n          'FOB'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n      // console.log('FOB Price updated successfully');\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    // }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextInput\r\n        ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n        value={formatValueWithCommas(fobPrice)} // Display the formatted value\r\n        style={{ outlineStyle: 'none', flex: 1, padding: 5, borderRadius: 5, width: '90%' }}\r\n        key={item.id}\r\n        onChangeText={(text) => {\r\n          handleTextChange(text); // This sets the numeric value state\r\n          handleInputFobJpyChange(text, item.stockID); // This formats the display\r\n        }}\r\n        onSubmitEditing={() => handleSaveFob(item, index)} />\r\n      <TouchableHighlight\r\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n        onPress={() => handleSaveFob(item, index)}\r\n        style={{\r\n          backgroundColor: '#16A34A',\r\n          borderRadius: 5,\r\n          padding: 5,\r\n          margin: 2,\r\n          alignSelf: 'center',\r\n        }}>\r\n        {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n        <MaterialIcons name='update' color='white' size={22} />\r\n      </TouchableHighlight>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst VehicleListTable = () => {\r\n  const toast = useToast();\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const dispatch = useDispatch();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [data, setData] = useState([]);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const vehicleListData = useSelector((state) => state.vehicleListData);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const searchInputRef = useRef(null);\r\n\r\n\r\n  const [stockIDs, setStockIDs] = useState([]);\r\n  const [imageCounts, setImageCounts] = useState([]);\r\n\r\n  const inputExpenseAmount = useRef(null);\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const inputFobJpy = useRef([]);\r\n  const [pageClicked, setPageClicked] = useState('');\r\n  const [lastVisible, setLastVisible] = useState(null);\r\n  const [firstVisible, setFirstVisible] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [fobPrices, setFobPrices] = useState({});\r\n  // Memoize the filtered data using useMemo\r\n  const [sortField, setSortField] = useState('dateAdded'); // null when sorting is off\r\n  const [isSortActive, setIsSortActive] = useState(false);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  nameVariable.text = loginName;\r\n\r\n  const handleSortChange = (field) => {\r\n    setCurrentPage(1);\r\n    // If the field is the same as the current sortField, toggle sorting\r\n    setSearchText('');\r\n    searchInputRef.current.clear();\r\n    if (field === sortField) {\r\n      setIsSortActive(!isSortActive); // Toggle sorting for the same field\r\n      if (!isSortActive) {\r\n        // If it was off, we turn it on and keep the same field\r\n        setSortField(field);\r\n      } else {\r\n        // If it was on, we turn it off and reset to default 'dateAdded'\r\n        setSortField('dateAdded');\r\n      }\r\n    } else {\r\n      // If the field is different, turn sorting on and change the field\r\n      setSortField(field);\r\n      setIsSortActive(true); // Always turn on sorting when a new field is clicked\r\n    }\r\n    // You might want to dispatch setLoadingModalVisible(true) when you start a new query\r\n    dispatch(setLoadingModalVisible(true));\r\n  };\r\n\r\n\r\n  const fetchWithSort = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n    let q;\r\n\r\n    if (searchText === '') {\r\n      q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        limit(pageSize)\r\n      );\r\n    } else {\r\n      q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        limit(pageSize)\r\n      );\r\n    }\r\n\r\n    try {\r\n      const documents = await getDocs(q);\r\n      const vehicleProductData = [];\r\n      documents.forEach((document) => {\r\n        vehicleProductData.push({\r\n          id: document.id,\r\n          ...document.data(),\r\n        });\r\n      });\r\n      dispatch(setVehicleListData(vehicleProductData));\r\n      setLastVisible(documents.docs[documents.docs.length - 1]);\r\n      setFirstVisible(documents.docs[0]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching vehicle products:\", error);\r\n    } finally {\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchWithSort();\r\n  }, [sortField])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // Determine the field and direction to sort by\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n    // Define the query\r\n    const q = query(\r\n      collection(projectExtensionFirestore, 'VehicleProducts'),\r\n      orderBy(fieldToSortBy, sortDirection),\r\n      limit(pageSize)\r\n    );\r\n\r\n    // Fetch the data once\r\n    getDocs(q)\r\n      .then((documents) => {\r\n        const vehicleProductData = [];\r\n        documents.forEach((document) => {\r\n          vehicleProductData.push({\r\n            id: document.id,\r\n            ...document.data(),\r\n          });\r\n        });\r\n        dispatch(setVehicleListData(vehicleProductData));\r\n        setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        setFirstVisible(documents.docs[0]);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching vehicle products: \", error);\r\n        // Handle the error appropriately\r\n      });\r\n\r\n    // Since this effect does not subscribe to real-time updates, there's no need to return a cleanup function\r\n  }, [projectExtensionFirestore, pageSize, sortField, isSortActive]); // Add dependencies as necessary\r\n\r\n\r\n\r\n  const fetchNextData = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n\r\n    if (searchText === '') {\r\n\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        startAfter(lastVisible),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'next');\r\n\r\n\r\n\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n    }\r\n\r\n    else {\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        startAfter(lastVisible),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'next');\r\n\r\n\r\n\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const fetchPreviousData = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n    if (searchText === '') {\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        endBefore(firstVisible),\r\n        limitToLast(pageSize)\r\n      );\r\n\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'prev')\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n\r\n    else {\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        endBefore(firstVisible),\r\n        limitToLast(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'prev');\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  const fetchFirstPage = (documents) => {\r\n\r\n\r\n    const vehicleProductData = [];\r\n\r\n    documents.forEach((document) => {\r\n      vehicleProductData.push({\r\n        id: document.id,\r\n        ...document.data(),\r\n      });\r\n    });\r\n\r\n    dispatch(setVehicleListData(vehicleProductData));\r\n\r\n    if (documents?.docs[0]) {\r\n      setFirstVisible(documents.docs[0]);\r\n    }\r\n    if (documents?.docs[documents.docs.length - 1]) {\r\n      setLastVisible(documents.docs[documents.docs.length - 1]);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n    if (!documents.empty) {\r\n      const vehicleProductData = [];\r\n      documents.forEach((document) => {\r\n        vehicleProductData.push({\r\n          id: document.id,\r\n          ...document.data(),\r\n        });\r\n      });\r\n\r\n\r\n\r\n      if (documents?.docs[0]) {\r\n        setFirstVisible(documents.docs[0]);\r\n      }\r\n      if (documents?.docs[documents.docs.length - 1]) {\r\n        setLastVisible(documents.docs[documents.docs.length - 1]);\r\n      }\r\n\r\n      if (pageClicked == 'next') {\r\n        setCurrentPage(currentPage + 1);\r\n      }\r\n      if (pageClicked == 'prev') {\r\n        setCurrentPage(currentPage - 1);\r\n      }\r\n      if (vehicleProductData.length < 1) {\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n      }\r\n\r\n      dispatch(setVehicleListData(vehicleProductData));\r\n    }\r\n\r\n    else {\r\n      const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n      const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n      if (searchText == '') {\r\n        setCurrentPage(1);\r\n\r\n        const q = query(\r\n          collection(projectExtensionFirestore, 'VehicleProducts'),\r\n          orderBy(fieldToSortBy, sortDirection),\r\n          limit(pageSize)\r\n        );\r\n        const firstPageDocuments = await getDocs(q);\r\n        fetchFirstPage(firstPageDocuments);\r\n\r\n      }\r\n      else {\r\n\r\n        setCurrentPage(1);\r\n\r\n        const q = query(\r\n          collection(projectExtensionFirestore, 'VehicleProducts'),\r\n          where('keywords', 'array-contains', searchText.toUpperCase()),\r\n          orderBy(fieldToSortBy, sortDirection),\r\n          limit(pageSize)\r\n        );\r\n        const firstPageDocuments = await getDocs(q);\r\n        fetchFirstPage(firstPageDocuments);\r\n\r\n      }\r\n\r\n\r\n    }\r\n  };\r\n\r\n  const handleNextPage = async () => {\r\n    // setPageClicked('next');\r\n    dispatch(setLoadingModalVisible(true));\r\n    // setCurrentPage(currentPage + 1);\r\n    await fetchNextData();\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  const handlePreviousPage = async () => {\r\n    // setPageClicked('previous');\r\n    dispatch(setLoadingModalVisible(true));\r\n    // setCurrentPage(currentPage - 1);\r\n    await fetchPreviousData();\r\n\r\n\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    searchData();\r\n\r\n  }, [searchText])\r\n\r\n  const searchData = async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    if (searchText === '') {\r\n      setCurrentPage(1);\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const firstPageDocuments = await getDocs(q);\r\n      fetchFirstPage(firstPageDocuments);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n    }\r\n\r\n    else {\r\n      setCurrentPage(1);\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const firstPageDocuments = await getDocs(q);\r\n      fetchFirstPage(firstPageDocuments);\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const filteredData = useMemo(() => {\r\n    const sanitizedSearchQuery = searchQuery.trim().toLowerCase();\r\n\r\n    // Filter the data based on the sanitized searchQuery (removing whitespace from the beginning and end)\r\n    const filteredResults = vehicleListData.filter((item) => {\r\n      const carName = item.carName ? item.carName.trim().toLowerCase() : '';\r\n      const referenceNumber = item.referenceNumber ? item.referenceNumber.trim().toLowerCase() : '';\r\n      const chassisNumber = item.chassisNumber ? item.chassisNumber.trim().toLowerCase() : '';\r\n      const stockStatus = item.stockStatus ? item.stockStatus.trim().toLowerCase() : '';\r\n      const fobPrice = item.fobPrice ? item.fobPrice.toString().trim().toLowerCase() : '';\r\n\r\n      return (\r\n        carName.includes(sanitizedSearchQuery) ||\r\n        referenceNumber.includes(sanitizedSearchQuery) ||\r\n        chassisNumber.includes(sanitizedSearchQuery) ||\r\n        stockStatus.includes(sanitizedSearchQuery) ||\r\n        fobPrice.includes(sanitizedSearchQuery)\r\n      );\r\n    });\r\n\r\n    return filteredResults;\r\n  }, [searchQuery, vehicleListData]);\r\n\r\n\r\n\r\n  const formatValueWithCommas = (value) => {\r\n    const numericValue = value.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    return formattedValue;\r\n  };\r\n\r\n  // Function to handle input changes for each item\r\n  const handleInputFobJpyChange = (text, index) => {\r\n    const formattedValue = formatValueWithCommas(text);\r\n\r\n    if (inputFobJpy.current[index]) {\r\n      inputFobJpy.current[index].value = formattedValue;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const fetchImageCounts = async () => {\r\n\r\n    // Extract and store the stockIDs in the state\r\n    const ids = filteredData.map(item => item.stockID);\r\n    setStockIDs(ids);\r\n\r\n    // Fetch image counts\r\n    const counts = await Promise.all(\r\n      ids.map(async stockID => {\r\n        const count = await getImageCountInFolder(stockID);\r\n        return { stockID, count };\r\n      })\r\n    );\r\n\r\n    // Create an object where stockID is the index value\r\n    const imageCountsObject = counts.reduce((acc, { stockID, count }) => {\r\n      acc[stockID] = count;\r\n      return acc;\r\n    }, {});\r\n\r\n    setImageCounts(imageCountsObject);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImageCounts();\r\n  }, []);\r\n\r\n  const getImageCountInFolder = async (folderPath) => {\r\n    try {\r\n      const folderRef = ref(storage, folderPath);\r\n      const listResult = await listAll(folderRef);\r\n\r\n      return listResult.items.length;\r\n    } catch (error) {\r\n      console.error('Error getting image count:', error);\r\n      return -1; // Handle the error accordingly\r\n    }\r\n  };\r\n\r\n\r\n  const handleTextChange = (text) => {\r\n    setSearchQuery(text);\r\n  };\r\n\r\n  const handleFobPriceHistoryOpen = async (item) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n    dispatch(setFobPriceHistoryModalVisible(true));\r\n    if (item.stockID) {\r\n      const docRef = doc(projectExtensionFirestore, 'VehicleProducts', item.stockID);\r\n      try {\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n          // Assuming you have an action to set the FOB history like setFobHistory\r\n          dispatch(setFobHistoryData(docSnap.data().fobHistory || []));\r\n          dispatch(setLoadingModalVisible(false));\r\n\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching document: \", error);\r\n      }\r\n    }\r\n    // globalFobPriceHistoryData = item.fobHistory ? item.fobHistory : [];\r\n    globalCurrentStockID = item.stockID ? item.stockID : '';\r\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n\r\n  }\r\n\r\n  const handleSaveFob = async (item, index,) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    toast.closeAll();\r\n    // if (item.fobPrice == fobValue || fobValue == '') {\r\n    //   dispatch(setLoadingModalVisible(false));\r\n\r\n    // }\r\n    // else {\r\n\r\n    const fobHistoryData = {\r\n      date: formattedTime,\r\n      fobPrice: fobValue,\r\n      changedBy: nameVariable.text,\r\n    };\r\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n    try {\r\n      await updateDoc(vehicleProductRef, {\r\n        fobPrice: fobValue,\r\n        fobHistory: arrayUnion(fobHistoryData)\r\n      });\r\n      const logData = {\r\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle FOB Price Updated'.toLowerCase(),\r\n          'Vehicle FOB Price'.toLowerCase(),\r\n          'Vehicle FOB'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'FOB Price Updated'.toLowerCase(),\r\n          'FOB Price'.toLowerCase(),\r\n          'FOB'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n      // console.log('FOB Price updated successfully');\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    // }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n\r\n  const handleUploadImagesModalOpen = (item) => {\r\n    dispatch(setUploadImagesModalVisible(true));\r\n    globalCurrentStockID = item.stockID;\r\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n    globalSelectedCarName = item.carName;\r\n\r\n  }\r\n\r\n  const handleViewImagesModalOpen = async (item) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n    try {\r\n      await getImages(item.stockID);\r\n      globalCurrentStockID = item.stockID;\r\n      globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n      globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n      dispatch(setLoadingModalVisible(false));\r\n      dispatch(setViewImagesModalVisible(true));\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n  }\r\n\r\n  const handleViewImagesModalClose = () => {\r\n    dispatch(setViewImagesModalVisible(false));\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = ``;\r\n    globalSelectedVehicleReferenceNumber = '';\r\n    globalSelectedCarName = '';\r\n    dispatch(setViewImagesData([]));\r\n  };\r\n\r\n  const getImages = useCallback(async (folderName) => {\r\n    try {\r\n\r\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\r\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n\r\n      const urls = await Promise.all(\r\n        imageRefs.items.map(async (itemRef) => {\r\n          const uri = await getDownloadURL(itemRef);\r\n          return { uri, fileName: itemRef.name };\r\n        })\r\n      );\r\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\r\n      urls.sort((a, b) => {\r\n        const fileNameA = parseInt(a.fileName);\r\n        const fileNameB = parseInt(b.fileName);\r\n        return fileNameA - fileNameB;\r\n      });\r\n\r\n      if (urls.length > 0) {\r\n        dispatch(setViewImagesData(urls));\r\n\r\n      }\r\n\r\n      else {\r\n        dispatch(setViewImagesData([]));\r\n      }\r\n\r\n      // console.log(urls);\r\n\r\n    } catch (error) {\r\n      // Handle any errors that may occur during the Firebase operations\r\n      console.error('Error getting image URLs:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const addStockStatusToVehicleProducts = async () => {\r\n    const vehicleProductsRef = collection(projectExtensionFirestore, \"VehicleProducts\");\r\n\r\n    try {\r\n      const querySnapshot = await getDocs(vehicleProductsRef);\r\n      querySnapshot.forEach(async (doc) => {\r\n        const data = doc.data();\r\n\r\n        // Check if the imageCount field does not exist\r\n        if (data.stockStatus === undefined) {\r\n          try {\r\n            // If the imageCount field doesn't exist, initialize it to 0\r\n            await updateDoc(doc.ref, {\r\n              stockStatus: ''\r\n            });\r\n            console.log(`stockStatus initialized to 0 for document ID: ${doc.id}`);\r\n          } catch (error) {\r\n            console.error('Error initializing stockStatus field:', error);\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error reading VehicleProducts collection:\", error);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const handleSearchEnter = () => {\r\n    // setSortField('dateAdded');\r\n    // setIsSortActive(false)\r\n    if (searchInputRef.current?.value !== '') {\r\n      setSearchText(searchInputRef.current.value.trim());\r\n      setSortField('dateAdded');\r\n      setIsSortActive(false);\r\n    }\r\n    else {\r\n      setSearchText('');\r\n      setSortField('dateAdded');\r\n      setIsSortActive(false)\r\n      if (searchText == '') {\r\n\r\n        searchData();\r\n\r\n      }\r\n\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {screenWidth >= 1360 ?\r\n        (\r\n          <View style={{ flex: 1, }}>\r\n            <View>\r\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                returnKeyType='search'\r\n                autoCapitalize='none'\r\n\r\n              />\r\n            </View>\r\n            <View\r\n              style={{\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-between',\r\n                borderBottomWidth: 1,\r\n                borderBottomColor: '#E4E4E7',\r\n                backgroundColor: '#0642F4',\r\n                padding: 2,\r\n                borderRadius: 5,\r\n              }}>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Ref #</Text>\r\n              </View>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Car Name</Text>\r\n              </View>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Chassis #</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('imageCount')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'imageCount' ? '#FBBC04' : 'white', }} bold underline>Images</Text>\r\n                </TouchableOpacity></View>\r\n\r\n\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('stockStatus')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'stockStatus' ? '#FBBC04' : 'white', }} bold underline>Stock Status</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('fobPrice')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'fobPrice' ? '#FBBC04' : 'white', }} bold underline>FOB Price</Text>\r\n                </TouchableOpacity></View>\r\n\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', alignSelf: 'center', }} bold>Operate</Text>\r\n              </View>\r\n            </View>\r\n            {vehicleListData.map((item, index) => (\r\n              <View\r\n                key={item.id}\r\n                style={{\r\n                  flex: 1,\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'space-between',\r\n                  alignItems: 'center',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#E4E4E7',\r\n                  backgroundColor: '#BFDBFE',\r\n                  paddingVertical: 10,\r\n                }}>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.referenceNumber}</Text>\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', }}>{item.carName} </Text>\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', }}>{item.chassisNumber}</Text>\r\n                </View>\r\n                <ImageCountComponent item={item} handleViewImagesModalOpen={handleViewImagesModalOpen} handleUploadImagesModalOpen={handleUploadImagesModalOpen} />\r\n                {/* <View style={{ flex: 1, flexDirection: 'row' }}>\r\n\r\n                  {item.imageCount > 0 ?\r\n                    (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n                      <Text underline>\r\n                        {item.imageCount ? item.imageCount : 0} image/s\r\n                      </Text>\r\n                    </TouchableOpacity>) :\r\n                    (<Text>\r\n                      {item.imageCount ? item.imageCount : 0} image/s\r\n                    </Text>)\r\n                  }\r\n\r\n\r\n                  <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n                    {item.imageCount > 0 ? null : (\r\n                      <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n                    )}\r\n                  </TouchableOpacity>\r\n                </View> */}\r\n                <View style={{ flex: 1, }}>\r\n                  <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\r\n                  {/* <Text style={{ width: '90%', }}>{item.stockStatus}</Text> */}\r\n                </View>\r\n\r\n                <View style={{ width: '90%', flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, }}>\r\n                  <TouchableOpacity\r\n                    onPress={() => handleFobPriceHistoryOpen(item)}\r\n                    style={{\r\n                      margin: 5,\r\n                      alignSelf: 'center',\r\n                    }}>\r\n                    {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n                    <FontAwesome name='clock-o' color='black' size={22} />\r\n                  </TouchableOpacity>\r\n                  <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\r\n                  {/* <TextInput\r\n                    ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n                    defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\r\n                    style={{ flex: 1, padding: 5, borderRadius: 5, width: '90%', }}\r\n                    key={item.id}\r\n                    onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\r\n                    onSubmitEditing={() => handleSaveFob(item, index)} /> */}\r\n\r\n                </View>\r\n                <View style={{ flexDirection: 'row', flex: 1, alignItems: 'center', justifyContent: 'center', }}>\r\n                  <SupplyChainsCosts data={item} />\r\n                  {/* <EditVehicle data={item} /> */}\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={{\r\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\r\n              alignSelf: 'center',\r\n            }}>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <TouchableOpacity\r\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                  onPress={handlePreviousPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n\r\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={handleNextPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n\r\n\r\n\r\n\r\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\r\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\r\n\r\n            {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n              <TouchableOpacity\r\n                onPress={addStockStatusToVehicleProducts}>\r\n                <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                  <FontAwesome name='save' size={40} color={'white'} />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View> */}\r\n\r\n          </View>\r\n        ) :\r\n\r\n\r\n\r\n        (\r\n          <View style={{ flex: 1, }}>\r\n            <View >\r\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '98%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', alignSelf: 'center', marginTop: 5, }}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                returnKeyType='search'\r\n                autoCapitalize='none'\r\n              />\r\n            </View>\r\n\r\n            {vehicleListData.map((item, index) => (\r\n              <View\r\n                key={item.id}\r\n                style={{\r\n                  flex: 1,\r\n                  flexDirection: 'column',\r\n                  borderWidth: 1,\r\n                  borderColor: '#E4E4E7',\r\n                  backgroundColor: '#BFDBFE',\r\n                  margin: 10,\r\n                }}>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Ref #</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.referenceNumber}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Car Name</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.carName} </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Chassis #</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.chassisNumber}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Images</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    {item.imageCount > 0 ?\r\n                      (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n                        <Text underline style={{ marginLeft: 3 }}>\r\n                          {item.imageCount ? item.imageCount : 0} image/s\r\n                        </Text>\r\n                      </TouchableOpacity>) :\r\n                      (<Text style={{ marginLeft: 3 }}>\r\n                        {item.imageCount ? item.imageCount : 0} image/s\r\n                      </Text>)\r\n                    }\r\n\r\n\r\n                    <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n                      {item.imageCount > 0 ? null : (\r\n                        <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n                      )}\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>Stock Status</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, paddingVertical: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\r\n                  </View>\r\n                </View>\r\n\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>FOB Price ¥</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <TouchableOpacity\r\n                      onPress={() => handleFobPriceHistoryOpen(item)}\r\n                      style={{\r\n                        margin: 5,\r\n                        alignSelf: 'center',\r\n                      }}>\r\n                      {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n                      <FontAwesome name='clock-o' color='black' size={22} />\r\n                    </TouchableOpacity>\r\n                    <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\r\n\r\n                    {/* <TextInput\r\n                      ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n                      defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\r\n                      style={{ width: '90%', borderRadius: 5, }}\r\n                      key={item.id}\r\n                      onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\r\n                      onSubmitEditing={() => handleSaveFob(item, index)} /> */}\r\n                    {/* <TouchableHighlight\r\n                      underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                      onPress={() => handleSaveFob(item, index)}\r\n                      style={{\r\n                        backgroundColor: '#16A34A',\r\n                        margin: 2,\r\n                        marginLeft: 2,\r\n                        alignSelf: 'center',\r\n                        borderRadius: 5,\r\n                      }}>\r\n                      <MaterialIcons name='update' color='white' size={22} />\r\n                    </TouchableHighlight> */}\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                  </View>\r\n                  <View style={{ flexDirection: 'row', flex: 1, margin: 5, }}>\r\n                    <SupplyChainsCosts data={item} />\r\n                    {/* <EditVehicle data={item} /> */}\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={{\r\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\r\n              alignSelf: 'center',\r\n            }}>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <TouchableOpacity\r\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                  onPress={handlePreviousPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n\r\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={handleNextPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n            <TouchableOpacity\r\n              onPress={addKeywordsToVehicleProducts}>\r\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                <MaterialIcons name='save' size={40} color={'white'} />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View> */}\r\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={addImageCountToVehicleProducts}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <FontAwesome name='dollar' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View> */}\r\n            </View>\r\n\r\n\r\n\r\n\r\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\r\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\r\n\r\n          </View>\r\n\r\n        )}\r\n\r\n\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function VehicleList() {\r\n  const [email, setEmail] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n  const [isMobileView, setIsMobileView] = useState(false);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  // const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const [typeOfAccount, setTypeOfAccount] = useState('');\r\n\r\n\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [name, setName] = useState(loginName);\r\n  const [time, setTime] = useState('');\r\n\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\r\n\r\n  useEffect(() => {\r\n    const updateWidth = () => {\r\n      const newWidth = Dimensions.get('window').width;\r\n      setScreenWidth(newWidth); // Update the screenWidth state\r\n    };\r\n\r\n    // Add event listener for window resize\r\n    Dimensions.addEventListener('change', updateWidth);\r\n\r\n    // Clean up the event listener when the component unmounts or re-renders\r\n    return () => {\r\n      Dimensions.removeEventListener('change', updateWidth);\r\n    };\r\n  }, []);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const handleWidthChange = ({ window }) => {\r\n  //     setWidthState(window.width);\r\n  //   };\r\n\r\n  //   Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleWidthChange);\r\n  //   };\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   reloadData();\r\n  // }, [reloadData]);\r\n\r\n\r\n  // useEffect(() => {\r\n  // }, [typeOfAccount]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n      if (!user) {\r\n        // navigation.navigate(\"Login\")\r\n        navigate(\"/Login\");\r\n\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(projectControlAuth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(projectControlAuth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate(\"/Login\");\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = projectControlAuth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      // This will now always be a function\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n      listenForNameChange(documentId);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const listenForNameChange = (documentId) => {\r\n\r\n\r\n    // To stop listening for updates, you can call unsubscribe()\r\n    // unsubscribe();\r\n  };\r\n\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(projectControlAuth).then(() => {\r\n      // navigation.navigate('Login');\r\n      navigate(\"/Login\");\r\n\r\n      setEmail('');\r\n      setName('');\r\n    }).catch(() => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   const handleScreenResize = () => {\r\n  //     const screenWidth = Dimensions.get('window').width;\r\n  //     setIsMobileView(screenWidth < 1200);\r\n  //   };\r\n\r\n  //   // Initial check on component mount\r\n  //   handleScreenResize();\r\n\r\n  //   // Listen for screen dimension changes\r\n  //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n  //   // Cleanup event listener on component unmount\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleScreenResize);\r\n  //   };\r\n  // }, []);\r\n\r\n\r\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#0642F4'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#0642F4'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  const SuccessModal = ({ isOpen, onClose, bodyText, headerText }) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Modal isOpen={isOpen} onClose={onClose} useRNModal>\r\n          <Modal.Content bgColor={'green.100'}>\r\n            <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n              <Text textAlign={'center'} color={'#102A43'} bold>\r\n                😊😎 Success! 😎😊\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'green.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'green.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'green.600'} bold>\r\n                  {headerText}\r\n                  {/* Vehicle Added! */}\r\n                </Text>\r\n                <Text color={'green.600'}>\r\n                  {bodyText}\r\n                  {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n                  Ok\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <NativeBaseProvider>\r\n      <>\r\n\r\n        <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n          {/* Header */}\r\n          <Box\r\n            px=\"3\"\r\n            bgColor='#0642f4'\r\n            height={54}\r\n            position=\"sticky\"\r\n            top={0}\r\n            zIndex={999}\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            borderBottomWidth={0}\r\n            borderBottomColor={'cyan.500'}\r\n          >\r\n\r\n\r\n            <SideDrawer\r\n              selectedScreen={selectedScreen} />\r\n\r\n            <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n\r\n              <FastImage\r\n                source={{\r\n                  uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                  priority: FastImage.priority.high,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.stretch}\r\n                style={styles.image} />\r\n            </Box>\r\n\r\n            {screenWidth <= 960 && <MobileViewDrawer\r\n              selectedScreen={selectedScreen} />}\r\n\r\n            <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n              <FastImage\r\n                source={{\r\n                  uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                  priority: FastImage.priority.high,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.stretch}\r\n                style={styles.image} />\r\n            </Box>\r\n            <NamePopover name={name} handleSignOut={handleSignOut} />\r\n\r\n\r\n          </Box>\r\n\r\n          {/* Content */}\r\n          <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\r\n\r\n\r\n            {/* Main Content */}\r\n            {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n            {/* Main Content Content */}\r\n\r\n\r\n            {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n            <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\r\n              <ScrollView style={{ flex: 1, }} keyboardShouldPersistTaps='always'>\r\n                <View style={{ flex: 1, }}>\r\n                  <VehicleListTable />\r\n\r\n\r\n                </View>\r\n              </ScrollView>\r\n              <SCC_Modals />\r\n              <EditVehicleModal />\r\n              <FobPriceHistory />\r\n              {/* <SuccessModal /> */}\r\n\r\n            </View>\r\n\r\n\r\n            {/* </Box> */}\r\n\r\n            {/* </Box> */}\r\n          </View>\r\n\r\n        </View>\r\n        <LoadingModal />\r\n\r\n      </>\r\n\r\n\r\n\r\n\r\n\r\n    </NativeBaseProvider>\r\n\r\n\r\n\r\n\r\n  );\r\n\r\n};","import { useState, useEffect } from 'react';\r\nimport { collection, query, orderBy, startAfter, limit, onSnapshot } from 'firebase/firestore';\r\nimport { useSelector } from 'react-redux';\r\nimport { setVehicleListData } from '../redux/store';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const UsePagination = (projectExtensionFirestore) => {\r\n    const dispatch = useDispatch();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    // const [data, setData] = useState([]);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const handleNextPage = () => {\r\n        setCurrentPage(currentPage + 1);\r\n    };\r\n\r\n    const handlePreviousPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                let q;\r\n                if (lastVisible) {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n                        orderBy('dateAdded', 'desc'),\r\n                        startAfter(lastVisible),\r\n                        limit(pageSize)\r\n                    );\r\n                } else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n                        orderBy('dateAdded', 'desc'),\r\n                        limit(pageSize)\r\n                    );\r\n                }\r\n\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const vehicleProductData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        vehicleProductData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n                    if (!snapshot.empty) {\r\n                        setLastVisible(snapshot.docs[snapshot.docs.length - 1]);\r\n                    }\r\n\r\n                    // setData(vehicleProductData);\r\n                    dispatch(setVehicleListData(vehicleProductData));\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data: ', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [projectExtensionFirestore, currentPage, pageSize]);\r\n\r\n    return { handleNextPage, handlePreviousPage };\r\n};","import { configureStore, createSlice, } from '@reduxjs/toolkit'\r\nimport { useEffect, useMemo } from 'react';\r\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where, orderBy, limit } from 'firebase/firestore';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../../crossFirebase\";\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSelector } from 'react-redux';\r\n\r\nlet makeDataVariable = [];\r\nlet email = '';\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\n\r\nconst messageTextInputValueSlice = createSlice({\r\n  name: 'messageTextInputValue',\r\n  initialState: '',\r\n  reducers: {\r\n    setMessageTextInputValue: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst carImageUrlSlice = createSlice({\r\n  name: 'carImageUrl',\r\n  initialState: '',\r\n  reducers: {\r\n    setCarImageUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedFileUrlSlice = createSlice({\r\n  name: 'selectedFileUrl',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedFileUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst pdfViewerModalVisibleSlice = createSlice({\r\n  name: 'pdfViewerModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setPdfViewerModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedVehicleDataSlice = createSlice({\r\n  name: 'selectedVehicleData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedVehicleData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedCustomerDataSlice = createSlice({\r\n  name: 'selectedCustomerData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedCustomerData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst previewInvoiceVisibleSlice = createSlice({\r\n  name: 'previewInvoiceVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setPreviewInvoiceVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst transactionModalVisibleSlice = createSlice({\r\n  name: 'transactionModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setTransactionModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst invoiceDataSlice = createSlice({\r\n  name: 'invoiceData',\r\n  initialState: {},\r\n  reducers: {\r\n    setInvoiceData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst deleteMessageTemplateVisibleSlice = createSlice({\r\n  name: 'deleteMessageTemplateVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeleteMessageTemplateVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loadMoreMessagesLoadingSlice = createSlice({\r\n  name: 'loadMoreMessagesLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadMoreMessagesLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst noMoreMessagesDataSlice = createSlice({\r\n  name: 'noMoreMessagesData',\r\n  initialState: false,\r\n  reducers: {\r\n    setNoMoreMessagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst readByListModalVisibleSlice = createSlice({\r\n  name: 'readByListModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setReadByListModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedChatDataSlice = createSlice({\r\n  name: 'selectedChatData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedChatData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst chatMessageBoxLoadingSlice = createSlice({\r\n  name: 'chatMessageBoxLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setChatMessageBoxLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatMessagesDataSlice = createSlice({\r\n  name: 'chatMessagesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setChatMessagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst chatListSearchTextSlice = createSlice({\r\n  name: 'chatListSearchText',\r\n  initialState: '',\r\n  reducers: {\r\n    setChatListSearchText: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst activeChatIdSlice = createSlice({\r\n  name: 'activeChatId',\r\n  initialState: '',\r\n  reducers: {\r\n    setActiveChatId: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loadMoreLoadingSlice = createSlice({\r\n  name: 'loadMoreLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadMoreLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst noMoreDataSlice = createSlice({\r\n  name: 'noMoreData',\r\n  initialState: false,\r\n  reducers: {\r\n    setNoMoreData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListLastVisibleSlice = createSlice({\r\n  name: 'chatListLastVisible',\r\n  initialState: null,\r\n  reducers: {\r\n    setChatListLastVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListDataSlice = createSlice({\r\n  name: 'chatListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setChatListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListImageUrlSlice = createSlice({\r\n  name: 'chatListImageUrl',\r\n  initialState: null,\r\n  reducers: {\r\n    setChatListImageUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\n\r\n\r\n\r\n// =============================== Freight ========================================\r\n\r\n\r\nconst countryPortsDataSlice = createSlice({\r\n  name: 'countryPortsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setCountryPortsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst addPortsForCountriesModalVisibleSlice = createSlice({\r\n  name: 'addPortsForCountriesModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddPortsForCountriesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst methodDataSlice = createSlice({\r\n  name: 'methodData',\r\n  initialState: [],\r\n  reducers: {\r\n    setMethodData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst inspectionIsRequiredDataSlice = createSlice({\r\n  name: 'inspectionIsRequiredData',\r\n  initialState: [],\r\n  reducers: {\r\n    setInspectionIsRequiredData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst inspectionNameDataSlice = createSlice({\r\n  name: 'inspectionNameData',\r\n  initialState: [],\r\n  reducers: {\r\n    setInspectionNameData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst deletePortModalVisibleSlice = createSlice({\r\n  name: 'deletePortModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeletePortModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst deleteCountryModalVisibleSlice = createSlice({\r\n  name: 'deleteCountryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeleteCountryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst addPortModalVisibleSlice = createSlice({\r\n  name: 'addPortModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddPortModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst addCountryModalVisibleSlice = createSlice({\r\n  name: 'addCountryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddCountryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst selectedButtonSlice = createSlice({\r\n  name: 'selectedButton',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedButton: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst freightCountriesDataSlice = createSlice({\r\n  name: 'freightCountriesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFreightCountriesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst freightPortsDataSlice = createSlice({\r\n  name: 'freightPortsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFreightPortsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\nconst fobHistoryDataSlice = createSlice({\r\n  name: 'fobHistoryData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFobHistoryData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst inputFobSlice = createSlice({\r\n  name: 'inputFob',\r\n  initialState: '',\r\n  reducers: {\r\n    setInputFob: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst fobPriceHistoryModalVisibleSlice = createSlice({\r\n  name: 'fobPriceHistoryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setFobPriceHistoryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst editVehicleModalVisibleSlice = createSlice({\r\n  name: 'editVehicleModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setEditVehicleModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst vehicleListDataSlice = createSlice({\r\n  name: 'vehicleListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setVehicleListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst addVehicleListDataSlice = createSlice({\r\n  name: 'addVehicleListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setAddVehicleListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst supplyChainsCostsModalVisibleSlice = createSlice({\r\n  name: 'supplyChainsCostsModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setSupplyChainsCostsModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst uploadImagesModalVisibleSlice = createSlice({\r\n  name: 'uploadImagesModalVisibleVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setUploadImagesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst vehicleListSupplyChainsCostsDataSlice = createSlice({\r\n  name: 'vehicleListSupplyChainsCostsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setVehicleListSupplyChainsCostsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst uploadImagesButtonLoadingSlice = createSlice({\r\n  name: 'uploadImagesButtonLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setUploadImagesButtonLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst viewImagesModalVisibleSlice = createSlice({\r\n  name: 'viewImagesModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setViewImagesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst viewImagesDataSlice = createSlice({\r\n  name: 'viewImagesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setViewImagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst lastVisibleSlice = createSlice({\r\n  name: 'lastVisible',\r\n  initialState: '',\r\n  reducers: {\r\n    setLastVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Account List ========================================\r\nconst accountListDataSlice = createSlice({\r\n  name: 'accountListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setAccountListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\n// =============================== Account List ========================================\r\n\r\n// =============================== Logs ======================================== \r\n\r\n\r\nconst logsDataSlice = createSlice({\r\n  name: 'logsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setLogsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// =============================== Logs ======================================== \r\n\r\n\r\nconst stockStatusDataSlice = createSlice({\r\n  name: 'stockStatusData',\r\n  initialState: [\r\n    'On-Sale',\r\n    'Reserved',\r\n    'Sold',\r\n    'Hidden',],\r\n  reducers: {\r\n    setStockStatusData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isSuccessModalOpenSlice = createSlice({\r\n  name: 'isSuccessModalOpen',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsSuccessModalOpen: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isUpdateSuccessModalOpenSlice = createSlice({\r\n  name: 'isUpdateSuccessModalOpen',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsUpdateSuccessModalOpen: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loadingModalVisibleSlice = createSlice({\r\n  name: 'loadingModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadingModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedExpenseNameSlice = createSlice({\r\n  name: 'selectedExpenseName',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedExpenseName: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedPaidToSlice = createSlice({\r\n  name: 'selectedPaidTo',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedPaidTo: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst supplyChainsCostsDataSlice = createSlice({\r\n  name: 'supplyChainsCostsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSupplyChainsCostsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst currentDateSlice = createSlice({\r\n  name: 'currentDate',\r\n  initialState: '',\r\n  reducers: {\r\n    setCurrentDate: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loginEmailSlice = createSlice({\r\n  name: 'loginEmail',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoginEmail: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loginAccountTypeSlice = createSlice({\r\n  name: 'loginAccountType',\r\n  initialState: '',\r\n  reducers: {\r\n    setLoginAccountType: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loginNameSlice = createSlice({\r\n  name: 'loginName',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoginName: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst modalDeleteImagesVisibleSlice = createSlice({\r\n  name: 'modalDeleteImages',\r\n  initialState: false,\r\n  reducers: {\r\n    setModalDeleteImagesVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst addAnotherImagesSlice = createSlice({\r\n  name: 'addAnotherImagesVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddAnotherImages: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isAddPhotoVisibleSlice = createSlice({\r\n  name: 'isAddPhotoVisible',\r\n  initialState: true,\r\n  reducers: {\r\n    setIsAddPhotoVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst jpyToUsdSlice = createSlice({\r\n  name: 'jpyToUsd',\r\n  initialState: '',\r\n  reducers: {\r\n    setJpyToUsd: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst usdToJpySlice = createSlice({\r\n  name: 'usdToJpy',\r\n  initialState: '',\r\n  reducers: {\r\n    setUsdToJpy: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst modelDataSlice = createSlice({\r\n  name: 'modelData',\r\n  initialState: [],\r\n  reducers: {\r\n    setModelData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst makeDataSlice = createSlice({\r\n  name: 'makeData',\r\n  initialState: makeDataVariable,\r\n  reducers: {\r\n    setMakeData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst expenseNameDataSlice = createSlice({\r\n  name: 'expenseName',\r\n  initialState: [],\r\n  reducers: {\r\n    setExpenseNameData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst paidToDataSlice = createSlice({\r\n  name: 'paidTo',\r\n  initialState: [],\r\n  reducers: {\r\n    setPaidToData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedMakeSlice = createSlice({\r\n  name: 'selectedMake',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedMake: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isLoadingSlice = createSlice({\r\n  name: 'isLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedImagesSlice = createSlice({\r\n  name: 'selectedImages',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedImages: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst portDataSlice = createSlice({\r\n  name: 'portData',\r\n  initialState: [],\r\n  reducers: {\r\n    setPortData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst transmissionDataSlice = createSlice({\r\n  name: 'transmissionData',\r\n  initialState: [],\r\n  reducers: {\r\n    setTransmissionData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst fuelDataSlice = createSlice({\r\n  name: 'fuelData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFuelData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst buyerDataSlice = createSlice({\r\n  name: 'buyerData',\r\n  initialState: [],\r\n  reducers: {\r\n    setBuyerData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst salesDataSlice = createSlice({\r\n  name: 'salesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSalesData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst driveTypeDataSlice = createSlice({\r\n  name: 'driveTypeData',\r\n  initialState: [],\r\n  reducers: {\r\n    setDriveTypeData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst bodyTypeDataSlice = createSlice({\r\n  name: 'bodyTypeData',\r\n  initialState: [],\r\n  reducers: {\r\n    setBodyTypeData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst exteriorColorDataSlice = createSlice({\r\n  name: 'exteriorColorData',\r\n  initialState: [],\r\n  reducers: {\r\n    setExteriorColorData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst currentYearSlice = createSlice({\r\n  name: 'currentYear',\r\n  initialState: '',\r\n  reducers: {\r\n    setCurrentYear: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n\r\nconst deleteImageVisibleSlice = createSlice({\r\n  name: 'deleteImageVisible',\r\n  initialState: true,\r\n  reducers: {\r\n    setDeleteImageVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n});\r\n\r\n// =============================== Chat Messages ========================================\r\nexport const { setMessageTextInputValue } = messageTextInputValueSlice.actions\r\nexport const { setSelectedVehicleData } = selectedVehicleDataSlice.actions\r\nexport const { setCarImageUrl } = carImageUrlSlice.actions\r\nexport const { setSelectedFileUrl } = selectedFileUrlSlice.actions\r\nexport const { setPdfViewerModalVisible } = pdfViewerModalVisibleSlice.actions\r\nexport const { setSelectedCustomerData } = selectedCustomerDataSlice.actions\r\nexport const { setPreviewInvoiceVisible } = previewInvoiceVisibleSlice.actions\r\nexport const { setInvoiceData } = invoiceDataSlice.actions\r\nexport const { setTransactionModalVisible } = transactionModalVisibleSlice.actions\r\nexport const { setDeleteMessageTemplateVisible } = deleteMessageTemplateVisibleSlice.actions\r\nexport const { setLoadMoreMessagesLoading } = loadMoreMessagesLoadingSlice.actions\r\nexport const { setNoMoreMessagesData } = noMoreMessagesDataSlice.actions\r\nexport const { setReadByListModalVisible } = readByListModalVisibleSlice.actions\r\nexport const { setSelectedChatData } = selectedChatDataSlice.actions\r\nexport const { setChatMessageBoxLoading } = chatMessageBoxLoadingSlice.actions\r\nexport const { setChatMessagesData } = chatMessagesDataSlice.actions\r\nexport const { setActiveChatId } = activeChatIdSlice.actions\r\nexport const { setChatListSearchText } = chatListSearchTextSlice.actions\r\nexport const { setLoadMoreLoading } = loadMoreLoadingSlice.actions\r\nexport const { setNoMoreData } = noMoreDataSlice.actions\r\nexport const { setChatListLastVisible } = chatListLastVisibleSlice.actions\r\nexport const { setChatListData } = chatListDataSlice.actions\r\nexport const { setChatListImageUrl } = chatListImageUrlSlice.actions\r\n// =============================== Chat Messages ========================================\r\n\r\n// =============================== Freight ========================================\r\nexport const { setDeletePortModalVisible } = deletePortModalVisibleSlice.actions\r\nexport const { setDeleteCountryModalVisible } = deleteCountryModalVisibleSlice.actions\r\nexport const { setCountryPortsData } = countryPortsDataSlice.actions\r\nexport const { setAddPortsForCountriesModalVisible } = addPortsForCountriesModalVisibleSlice.actions\r\nexport const { setInspectionIsRequiredData } = inspectionIsRequiredDataSlice.actions\r\nexport const { setMethodData } = methodDataSlice.actions\r\nexport const { setInspectionNameData } = inspectionNameDataSlice.actions\r\nexport const { setSelectedButton } = selectedButtonSlice.actions\r\nexport const { setAddCountryModalVisible } = addCountryModalVisibleSlice.actions\r\nexport const { setAddPortModalVisible } = addPortModalVisibleSlice.actions\r\nexport const { setFreightPortsData } = freightPortsDataSlice.actions\r\nexport const { setFreightCountriesData } = freightCountriesDataSlice.actions\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Vehicle List ========================================\r\nexport const { setInputFob } = inputFobSlice.actions\r\nexport const { setFobHistoryData } = fobHistoryDataSlice.actions\r\nexport const { setFobPriceHistoryModalVisible } = fobPriceHistoryModalVisibleSlice.actions\r\nexport const { setEditVehicleModalVisible } = editVehicleModalVisibleSlice.actions\r\nexport const { setVehicleListData } = vehicleListDataSlice.actions\r\nexport const { setAddVehicleListData } = addVehicleListDataSlice.actions\r\nexport const { setSupplyChainsCostsModalVisible } = supplyChainsCostsModalVisibleSlice.actions\r\nexport const { setVehicleListSupplyChainsCostsData } = vehicleListSupplyChainsCostsDataSlice.actions\r\nexport const { setUploadImagesModalVisible } = uploadImagesModalVisibleSlice.actions\r\nexport const { setUploadImagesButtonLoading } = uploadImagesButtonLoadingSlice.actions\r\nexport const { setViewImagesModalVisible } = viewImagesModalVisibleSlice.actions\r\nexport const { setViewImagesData } = viewImagesDataSlice.actions\r\nexport const { setLastVisible } = lastVisibleSlice.actions\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Account List ========================================\r\nexport const { setAccountListData } = accountListDataSlice.actions\r\n\r\n// =============================== Account List ========================================\r\n\r\n// =============================== Logs ======================================== \r\nexport const { setLogsData } = logsDataSlice.actions\r\n// =============================== Logs ======================================== \r\n\r\nexport const { setStockStatusData } = stockStatusDataSlice.actions\r\nexport const { setIsSuccessModalOpen } = isSuccessModalOpenSlice.actions\r\nexport const { setIsUpdateSuccessModalOpen } = isUpdateSuccessModalOpenSlice.actions\r\nexport const { setLoadingModalVisible } = loadingModalVisibleSlice.actions\r\nexport const { setSelectedPaidTo } = selectedPaidToSlice.actions\r\nexport const { setSelectedExpenseName } = selectedExpenseNameSlice.actions\r\nexport const { setSupplyChainsCostsData } = supplyChainsCostsDataSlice.actions\r\nexport const { setCurrentDate } = currentDateSlice.actions\r\nexport const { setPaidToData } = paidToDataSlice.actions\r\nexport const { setDeleteImageVisible } = deleteImageVisibleSlice.actions\r\nexport const { setExpenseNameData } = expenseNameDataSlice.actions\r\nexport const { setLoginEmail } = loginEmailSlice.actions\r\nexport const { setLoginName } = loginNameSlice.actions\r\nexport const { setLoginAccountType } = loginAccountTypeSlice.actions\r\nexport const { setIsAddPhotoVisible } = isAddPhotoVisibleSlice.actions\r\nexport const { setAddAnotherImages } = addAnotherImagesSlice.actions\r\nexport const { setModalDeleteImagesVisible } = modalDeleteImagesVisibleSlice.actions\r\nexport const { setMakeData } = makeDataSlice.actions\r\nexport const { setSelectedMake } = selectedMakeSlice.actions\r\nexport const { setIsLoading } = isLoadingSlice.actions\r\nexport const { setSelectedImages } = selectedImagesSlice.actions\r\nexport const { setPortData } = portDataSlice.actions\r\nexport const { setTransmissionData } = transmissionDataSlice.actions;\r\nexport const { setFuelData } = fuelDataSlice.actions;\r\nexport const { setBuyerData } = buyerDataSlice.actions;\r\nexport const { setSalesData } = salesDataSlice.actions;\r\nexport const { setDriveTypeData } = driveTypeDataSlice.actions;\r\nexport const { setBodyTypeData } = bodyTypeDataSlice.actions;\r\nexport const { setExteriorColorData } = exteriorColorDataSlice.actions;\r\nexport const { setJpyToUsd } = jpyToUsdSlice.actions;\r\nexport const { setUsdToJpy } = usdToJpySlice.actions;\r\nexport const { setCurrentYear } = currentYearSlice.actions;\r\nexport const { setModelData } = modelDataSlice.actions\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n\r\n    // =============================== Chat Messages ========================================    \r\n    messageTextInputValue: messageTextInputValueSlice.reducer,\r\n    selectedVehicleData: selectedVehicleDataSlice.reducer,\r\n    carImageUrl: carImageUrlSlice.reducer,\r\n    selectedFileUrl: selectedFileUrlSlice.reducer,\r\n    pdfViewerModalVisible: pdfViewerModalVisibleSlice.reducer,\r\n    selectedCustomerData: selectedCustomerDataSlice.reducer,\r\n    previewInvoiceVisible: previewInvoiceVisibleSlice.reducer,\r\n    invoiceData: invoiceDataSlice.reducer,\r\n    transactionModalVisible: transactionModalVisibleSlice.reducer,\r\n    deleteMessageTemplateVisible: deleteMessageTemplateVisibleSlice.reducer,\r\n    loadMoreMessagesLoading: loadMoreMessagesLoadingSlice.reducer,\r\n    noMoreMessagesData: noMoreMessagesDataSlice.reducer,\r\n    readByListModalVisible: readByListModalVisibleSlice.reducer,\r\n    selectedChatData: selectedChatDataSlice.reducer,\r\n    chatMessageBoxLoading: chatMessageBoxLoadingSlice.reducer,\r\n    chatMessagesData: chatMessagesDataSlice.reducer,\r\n    chatListSearchText: chatListSearchTextSlice.reducer,\r\n    activeChatId: activeChatIdSlice.reducer,\r\n    loadMoreLoading: loadMoreLoadingSlice.reducer,\r\n    noMoreData: noMoreDataSlice.reducer,\r\n    chatListLastVisible: chatListLastVisibleSlice.reducer,\r\n    chatListData: chatListDataSlice.reducer,\r\n    chatListImageUrl: chatListImageUrlSlice.reducer,\r\n    // =============================== Chat Messages ======================================== \r\n\r\n    // =============================== Freight ======================================== \r\n    deletePortModalVisible: deletePortModalVisibleSlice.reducer,\r\n    deleteCountryModalVisible: deleteCountryModalVisibleSlice.reducer,\r\n    countryPortsData: countryPortsDataSlice.reducer,\r\n    addPortsForCountriesModalVisible: addPortsForCountriesModalVisibleSlice.reducer,\r\n    inspectionIsRequiredData: inspectionIsRequiredDataSlice.reducer,\r\n    methodData: methodDataSlice.reducer,\r\n    freightPortsData: freightPortsDataSlice.reducer,\r\n    inspectionNameData: inspectionNameDataSlice.reducer,\r\n    addCountryModalVisible: addCountryModalVisibleSlice.reducer,\r\n    addPortModalVisible: addPortModalVisibleSlice.reducer,\r\n    freightCountriesData: freightCountriesDataSlice.reducer,\r\n    selectedButton: selectedButtonSlice.reducer,\r\n    // =============================== Freight ========================================\r\n\r\n    // =============================== Vehicle List ========================================\r\n    inputFob: inputFobSlice.reducer,\r\n    fobHistoryData: fobHistoryDataSlice.reducer,\r\n    fobPriceHistoryModalVisible: fobPriceHistoryModalVisibleSlice.reducer,\r\n    editVehicleModalVisible: editVehicleModalVisibleSlice.reducer,\r\n    vehicleListData: vehicleListDataSlice.reducer,\r\n    addVehicleListData: addVehicleListDataSlice.reducer,\r\n    supplyChainsCostsModalVisible: supplyChainsCostsModalVisibleSlice.reducer,\r\n    uploadImagesModalVisible: uploadImagesModalVisibleSlice.reducer,\r\n    uploadImagesButtonLoading: uploadImagesButtonLoadingSlice.reducer,\r\n    viewImagesModalVisible: viewImagesModalVisibleSlice.reducer,\r\n    viewImagesData: viewImagesDataSlice.reducer,\r\n    lastVisible: lastVisibleSlice.reducer,\r\n    // =============================== Vehicle List ========================================\r\n\r\n\r\n    // =============================== Account List ========================================\r\n    accountListData: accountListDataSlice.reducer,\r\n    // =============================== Account List ========================================\r\n\r\n\r\n    // =============================== Logs ======================================== \r\n    logsData: logsDataSlice.reducer,\r\n    // =============================== Logs ======================================== \r\n    stockStatusData: stockStatusDataSlice.reducer,\r\n    isUpdateSuccessModalOpen: isUpdateSuccessModalOpenSlice.reducer,\r\n    loadingModalVisible: loadingModalVisibleSlice.reducer,\r\n    selectedPaidTo: selectedPaidToSlice.reducer,\r\n    selectedExpenseName: selectedExpenseNameSlice.reducer,\r\n    supplyChainsCostsData: supplyChainsCostsDataSlice.reducer,\r\n    vehicleListSupplyChainsCostsData: vehicleListSupplyChainsCostsDataSlice.reducer,\r\n    currentDate: currentDateSlice.reducer,\r\n    paidToData: paidToDataSlice.reducer,\r\n    expenseNameData: expenseNameDataSlice.reducer,\r\n    modelData: modelDataSlice.reducer,\r\n    makeData: makeDataSlice.reducer,\r\n    selectedMake: selectedMakeSlice.reducer,\r\n    isLoading: isLoadingSlice.reducer,\r\n    selectedImages: selectedImagesSlice.reducer,\r\n    portData: portDataSlice.reducer,\r\n    transmissionData: transmissionDataSlice.reducer,\r\n    fuelData: fuelDataSlice.reducer,\r\n    buyerData: buyerDataSlice.reducer,\r\n    salesData: salesDataSlice.reducer,\r\n    driveTypeData: driveTypeDataSlice.reducer,\r\n    bodyTypeData: bodyTypeDataSlice.reducer,\r\n    exteriorColorData: exteriorColorDataSlice.reducer,\r\n    jpyToUsd: jpyToUsdSlice.reducer,\r\n    usdToJpy: usdToJpySlice.reducer,\r\n    currentYear: currentYearSlice.reducer,\r\n    isAddPhotoVisible: isAddPhotoVisibleSlice.reducer,\r\n    addAnotherImages: addAnotherImagesSlice.reducer,\r\n    modalDeleteImagesVisible: modalDeleteImagesVisibleSlice.reducer,\r\n    loginName: loginNameSlice.reducer,\r\n    loginAccountType: loginAccountTypeSlice.reducer,\r\n    loginEmail: loginEmailSlice.reducer,\r\n    deleteImageVisible: deleteImageVisibleSlice.reducer,\r\n  },\r\n\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: ['chatMessagesData/setChatMessagesData'],\r\n        ignoredPaths: ['chatMessagesData.somePathToTimestamp'],\r\n      },\r\n    }),\r\n});\r\n\r\n\r\nexport const fetchCurrency = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(projectControlFirestore, 'currency', 'currency');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const jpyToUsd = snapshot.data()?.jpyToUsd || [];\r\n        const usdToJpy = snapshot.data()?.usdToJpy || [];\r\n        dispatch(setJpyToUsd(jpyToUsd));\r\n        dispatch(setUsdToJpy(usdToJpy));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchExpenseNameData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'ExpenseName'), 'ExpenseName');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const expenseNameData = snapshot.data()?.expenseName || [];\r\n        dispatch(setExpenseNameData(expenseNameData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const fetchPaidToData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'PaidTo'), 'PaidTo');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const paidToData = snapshot.data()?.paidTo || [];\r\n        dispatch(setPaidToData(paidToData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const fetchMakeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Make'), 'Make');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const makeData = snapshot.data()?.make || [];\r\n        dispatch(setMakeData(makeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPortData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Port'), 'Port');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const portData = snapshot.data()?.port || [];\r\n        dispatch(setPortData(portData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// Dispatch the fetchMakeData action when your app starts or as needed\r\n\r\nexport const fetchTransmissionData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Transmission'), 'Transmission');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const transmissionData = snapshot.data()?.transmission || [];\r\n        dispatch(setTransmissionData(transmissionData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const fetchFuelData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Fuel'), 'Fuel');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const fuelData = snapshot.data()?.fuel || [];\r\n        dispatch(setFuelData(fuelData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBuyerData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Buyer'), 'Buyer');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const buyerData = snapshot.data()?.buyer || [];\r\n        dispatch(setBuyerData(buyerData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchSalesData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Sales'), 'Sales');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const salesData = snapshot.data()?.sales || [];\r\n        dispatch(setSalesData(salesData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchDriveTypeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'DriveType'), 'DriveType');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const driveTypeData = snapshot.data()?.driveType || [];\r\n        dispatch(setDriveTypeData(driveTypeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBodyTypeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'BodyType'), 'BodyType');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const bodyTypeData = snapshot.data()?.bodyType || [];\r\n        dispatch(setBodyTypeData(bodyTypeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchExteriorColorData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'ExteriorColor'), 'ExteriorColor');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const exteriorColorData = snapshot.data()?.exteriorColor || [];\r\n        dispatch(setExteriorColorData(exteriorColorData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchYear = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY');\r\n      dispatch(setCurrentYear(formattedTime));\r\n    } catch (error) {\r\n      console.error('Error fetching time:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchCurrentDate = () => {\r\n\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY-MM-DD');\r\n      dispatch(setCurrentDate(formattedTime));\r\n    } catch (error) {\r\n      console.error('Error fetching time:', error);\r\n    }\r\n  };\r\n};\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n\r\nexport const fetchVehicleListData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const queryRef = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n        const vehicleProductData = [];\r\n        snapshot.forEach((doc) => {\r\n          vehicleProductData.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(setVehicleListData(vehicleProductData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Logs ========================================\r\n// export const fetchLogsData = () => {\r\n//   return async (dispatch) => {\r\n//     try {\r\n\r\n//       const queryRef = query(\r\n//         collection(projectControlFirestore, 'logs'),\r\n//         orderBy('timestamp', 'desc'),\r\n//         limit(10)\r\n//       );\r\n\r\n//       const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n//         const logsDatabaseData = [];\r\n//         snapshot.forEach((doc) => {\r\n//           logsDatabaseData.push({\r\n//             id: doc.id,\r\n//             ...doc.data(),\r\n//           });\r\n//         });\r\n//         dispatch(setLogsData(logsDatabaseData));\r\n//       });\r\n\r\n//       // Return the unsubscribe function to stop listening when necessary\r\n//       return unsubscribe;\r\n//     } catch (error) {\r\n//       // Handle errors here\r\n//       console.error('Error fetching data from Firebase:', error);\r\n//     }\r\n//   };\r\n// };\r\n\r\n// =============================== Logs ========================================\r\n\r\n// =============================== Freight ========================================\r\n\r\nexport const fetchMethodData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'MethodDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const methodData = snapshot.data()?.methodData || [];\r\n        dispatch(setMethodData(methodData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchInspectionIsRequiredData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionIsRequiredDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const inspectionIsRequiredData = snapshot.data()?.inspectionIsRequiredData || [];\r\n        dispatch(setInspectionIsRequiredData(inspectionIsRequiredData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchInspectionNameData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionNameDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const inspectionNameData = snapshot.data()?.inspectionNameData || [];\r\n        dispatch(setInspectionNameData(inspectionNameData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\nexport const fetchChatListData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const queryRef = query(\r\n        collection(projectExtensionFirestore, 'chats'),\r\n        orderBy('lastMessageDate', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n        const chatsData = [];\r\n        snapshot.forEach((doc) => {\r\n          chatsData.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(setChatListData(chatsData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// =============================== Chat Messages ========================================\r\n// To stop listening for updates, you can call unsubscribe()\r\n// unsubscribe();\r\n\r\nstore.dispatch(fetchCurrentDate());\r\nstore.dispatch(fetchPaidToData());\r\nstore.dispatch(fetchExpenseNameData());\r\nstore.dispatch(fetchMakeData());\r\nstore.dispatch(fetchPortData());\r\nstore.dispatch(fetchTransmissionData());\r\nstore.dispatch(fetchFuelData());\r\nstore.dispatch(fetchBuyerData());\r\nstore.dispatch(fetchSalesData());\r\nstore.dispatch(fetchDriveTypeData());\r\nstore.dispatch(fetchBodyTypeData());\r\nstore.dispatch(fetchExteriorColorData());\r\nstore.dispatch(fetchCurrency());\r\nstore.dispatch(fetchYear());\r\n\r\n\r\n\r\n// store.dispatch(fetchVehicleListData());\r\n\r\nstore.dispatch(fetchMethodData());\r\nstore.dispatch(fetchInspectionIsRequiredData());\r\nstore.dispatch(fetchInspectionNameData());\r\n\r\n// store.dispatch(fetchChatListData());\r\n\r\n\r\nexport default store","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport {\r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID\r\n} from '@env';\r\n\r\nimport {\r\n  REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID\r\n} from '@env';\r\n\r\n// Configuration for Firebase project 1\r\nconst firebaseConfigControl = {\r\n  apiKey: REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain: REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL: REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId: REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket: REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId: REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId: REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// Configuration for Firebase project 2\r\nconst firebaseConfigExtension = {\r\n  // Replace with your project 2 configuration\r\n  apiKey: REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\r\n  authDomain: REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\r\n  projectId: REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\r\n  storageBucket: REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\r\n  appId: REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\r\n  measurementId: REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID,\r\n\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Initialize Firebase for project 1\r\nexport const projectControlFirebase = initializeApp(firebaseConfigControl);\r\nexport const projectControlAuth = getAuth(projectControlFirebase);\r\nexport const projectControlFirestore = getFirestore(projectControlFirebase);\r\n\r\n// Initialize Firebase for project 2\r\nexport const projectExtensionFirebase = initializeApp(firebaseConfigExtension, 'projectExtension');\r\nexport const projectExtensionAuth = getAuth(projectExtensionFirebase);\r\nexport const projectExtensionFirestore = getFirestore(projectExtensionFirebase);\r\n","\r\n\r\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc, getDocs, orderBy, deleteDoc, startAfter, limit } from 'firebase/firestore';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { \r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nconst firebaseControlConfig = {\r\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n  };\r\n\r\n// Initialize Firebase\r\n\r\nconst app = initializeApp(firebaseControlConfig);\r\nconst analytics = getAnalytics(app);\r\nconst auth = getAuth(app);\r\nrequire('firebase/auth');\r\n// export const auth = app.auth()\r\nconst db = getFirestore (app);\r\n// export default app\r\nexport {app, db, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, getAuth, signInWithEmailAndPassword, updateDoc, getDocs, orderBy, deleteDoc, limit, startAfter };","\r\n\r\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc } from 'firebase/firestore';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { \r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nconst firebaseControlCreateUserConfig = {\r\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n  };\r\n\r\n// Initialize Firebase\r\n\r\n\r\nrequire('firebase/auth');\r\n// export const auth = app.auth()\r\nconst firebaseAppForCreateUser = initializeApp(firebaseControlCreateUserConfig, 'Secondary' );\r\nconst authForCreateUser = getAuth(firebaseAppForCreateUser);\r\n// export default app\r\nexport {authForCreateUser};","// extracted by mini-css-extract-plugin\nexport default {};","var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 44707,\n\t\"./bs.js\": 44707,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 2553,\n\t\"./es-mx.js\": 2553,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"162\":\"da88e0a0\",\"245\":\"704124dc\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/samplecontrolhub/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [104], () => (__webpack_require__(19386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","_Dimensions$get","Dimensions","get","width","height","LoginPage","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","_useState5","_useState6","password","setPassword","_React$useState","React","_React$useState2","show","setShow","_React$useState3","_React$useState4","errorShow","setErrorShow","_React$useState5","_React$useState6","_React$useState7","_React$useState8","errorTitle","setErrorTitle","_React$useState9","_React$useState10","errorMessage","setErrorMessage","logo","require","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","isDisabled","setIsDisabled","navigate","useNavigate","useEffect","auth","onAuthStateChanged","user","ErrorLoginShow","_jsx","Box","w","alignItems","children","PresenceTransition","visible","initial","opacity","scale","animate","transition","duration","Alert","maxW","status","_jsxs","VStack","space","flexShrink","HStack","justifyContent","Icon","Text","fontSize","fontWeight","_dark","color","pl","_text","updateFieldData","_ref","_asyncToGenerator","documentId","fieldName","newValue","userRef","doc","db","updateDoc","_defineProperty","error","console","_x","_x2","_x3","apply","arguments","handleSignIn","setTimeout","signInWithEmailAndPassword","trim","then","re","catch","errorCode","message","log","length","NativeBaseProvider","bgColor","h","Center","flex","px","Image","source","uri","resizeMode","alt","style","Stack","Input","base","md","sm","value","onSubmitEditing","onChangeText","text","InputLeftElement","as","MaterialIcons","name","size","ml","placeholder","placeholderTextColor","type","InputRightElement","Pressable","onPress","mr","Button","_hover","_pressed","_focus","borderWidth","borderColor","disabled","Spinner","StyleSheet","create","container","paddingHorizontal","input","borderRadius","marginBottom","loginButton","backgroundColor","paddingVertical","loginButtonText","textAlign","Loading","loadingContainer","props","LazyComponent","lazy","importFunc","Suspense","fallback","_objectSpread","createNativeStackNavigator","firestore","getFirestore","getEmailOfCurrentUser","currentUser","Top","navigation","setDrawerVisible","setType","dispatch","useSelector","state","loginAccountType","createDrawerNavigator","useDispatch","handleDocumentChange","snapshot","exists","data","active","signOut","unsubscribe","_auth$currentUser","userId","onSnapshot","subscribeToFieldChange","currentUserEmail","getFieldValueByEmail","_ref2","accountDocRef","docSnapshot","fieldType","setLoginAccountType","setLoginName","Math","floor","random","document","createElement","textContent","head","append","Routes","Route","path","element","Navigate","to","replace","ChatMessages","LazyScreen","Checkpoint","loginEmail","loginName","delay","App","initializing","setInitializing","setUser","Provider","store","Router","selectedScreen","AccountList","_searchInput$current","setEmailError","logo2","_useState11","_useState12","_useState13","_useState14","setName","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","isSelectedLogs","_useState21","_useState22","isSelectedAddAccount","_useState23","_useState24","isSelectedAccountList","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","setAccountTypeSpAd","_useState31","_useState32","setAccountTypeDevAd","_useState33","_useState34","setAccountTypeAd","_useState35","_useState36","setAccountType3","_useState37","_useState38","setAccountType4","_useState39","_useState40","inputName","setInputName","_useState41","_useState42","_useState43","_useState44","inputEmail","setInputEmail","_useState45","_useState46","inputPassword","setInputPassword","_useState47","_useState48","setInputConfirmPassword","_useState49","_useState50","typeOfAccount","setTypeOfAccount","_useState51","_useState52","setTypeOfAccountDisplay","showSuccessModal","setShowSuccessModal","showDisableModal","setShowDisableModal","showEnableModal","setShowEnableModal","_React$useState11","_React$useState12","showDeleteModal","setShowDeleteModal","_React$useState13","_React$useState14","_useState53","useRef","_useState54","selectedItem","setSelectedItem","_useState55","_useState56","modalVisible","setModalVisible","_useState57","_useState58","_useState59","_useState60","setTime","_useState61","_useState62","selectedType","setSelectedType","_useState63","_useState64","selectedTypeDisplay","setSelectedTypeDisplay","_useState65","_useState66","selectedItemType","setSelectedItemType","_useState67","_useState68","isEmailDuplicate","setIsEmailDuplicate","_useState69","_useState70","authEmail","setAuthEmail","_useState71","_useState72","authPassword","setAuthPassword","_useState73","_useState74","isYesLoading","setIsYesLoading","_useState75","_useState76","isSaveLoading","setIsSaveLoading","inputEmailRef","inputNameRef","inputPassRef","_useState77","_useState78","page","setPage","optionsPerPage","_useState79","_useState80","itemsPerPage","setItemsPerPage","_useState81","_useState82","setData","_useState83","_useState84","searchQuery","setSearchQuery","_useState85","_useState86","filteredData","setFilteredData","_useState87","_useState88","_useState89","_useState90","ref0","ref1","ref2","ref3","searchInput","searchInputValue","current","_useState91","_useState92","pageSize","_useState93","_useState94","lastVisible","setLastVisible","_useState95","_useState96","firstVisible","setFirstVisible","_useState97","_useState98","searchText","_useState99","_useState100","currentPage","setCurrentPage","q","query","collection","orderBy","limit","documents","logsDatabaseData","forEach","push","setAccountListData","docs","fetchNextData","collectionGroup","projectControlFirestore","startAfter","getDocs","updateState","setLoadingModalVisible","where","toLowerCase","fetchPreviousData","endBefore","limitToLast","fetchFirstPage","accountListDatabaseData","_ref3","pageClicked","empty","firstPageDocuments","_ref4","_ref5","searchData","_ref6","handleToggleAccountTypeAd","useCallback","handleToggleAccountTypeDevAd","handleToggleAccountType3","handleToggleAccountType4","handleToggleAccountTypeSpAd","fetchData","_ref7","updatedData","listenForNameChange","_auth$currentUser2","getEmailFromDocument","_ref8","collectionPath","documentRef","documentSnapshot","getDoc","pass","_x4","_ref9","accountDocSnapshot","_x5","validateEmail","test","handleEdit","find","item","typeDisplay","setNativeProps","handleInputEmailChange","debounce","handleInputNameChange","handleInputPassChange","handleCloseModal","handleCloseDisableModal","handleCloseDeleteModal","handleCloseEnableModal","addLogToCollection","_ref10","logsCollectionRef","addDoc","_x6","handleEnable","_ref11","itemDocRef","datetime","axios","formattedTime","moment","format","year","month","monthWithDay","date","day","time","timeWithMinutesSeconds","applySearchFilter","logData","keywords","timestamp","colorScheme","_x7","deleteDocument","_ref12","customId","deleteDoc","_x8","_x9","handleDelete","_ref13","deleteUser","_x10","handleDisable","_ref14","_searchInput$current2","_x11","filter","includes","handleSave","_ref15","isPasswordLengthLabel","updatedFields","lastUpdatedDate","_searchInput$current3","updatePassword","userDocRef","dateOfCreation","setDoc","oldDocumentRef","newDocumentRef","createUserWithEmailAndPassword","updatedItem","fetchSignInMethodsForEmail","_x12","_ref16","filtered","useMemo","paginatedData","startIndex","endIndex","slice","handleSearch","min","styles","image","flexDirection","position","top","zIndex","borderBottomWidth","borderBottomColor","SideDrawer","marginTop","paddingLeft","FastImage","priority","high","stretch","marginLeft","_ref17","handleSignOut","_useState101","_useState102","showNamePopover","setShowNamePopover","showPopover","Flex","direction","Popover","isOpen","trigger","triggerProps","marginRight","MaterialCommunityIcons","Ionicons","onClose","placement","trapFocus","Content","Body","leftIcon","flexGrow","minHeight","ref","ScrollView","contentContainerStyle","DataTable","margin","overflow","display","padding","paddingBottom","handleOpenDisableModal","handleOpenEnableModal","handleOpenDeleteModal","Pagination","numberOfPages","ceil","onPageChange","label","showFastPagination","optionsLabel","Modal","CloseButton","Header","defaultValue","bold","FontAwesome","Footer","borderTopWidth","maxWidth","variant","AddAccount","show2","setShow2","typeOfAccountDisplay","showModal","setShowModal","inputConfirmPassword","passwordMatch","setPasswordMatch","passwordMatchLabel","setPasswordMatchLabel","passwordLengthLabel","setPasswordLengthLabel","isNameEmpty","setIsNameEmpty","setIsIntervalActive","closeModal","handleAddAccount","_inputEmail$current","authForCreateUser","userCredential","_inputName$current","_inputName$current2","_inputEmail$current2","_inputName$current3","_inputPassword$curren","customID","docRef","handleClear","handlePasswordStatus","_inputPassword$curren3","_inputConfirmPassword2","inputPasswordValue","inputConfirmPasswordValue","inputPasswordValueLength","_inputEmail$current3","emailValue","handleEmailSubmit","_inputName$current4","AntDesign","_inputPassword$curren2","_inputConfirmPassword","wrap","flexDir","globalSupplyChainCostsData","globalSelectedExpenseName","globalSupplyChainCostsAmount","globalSelectedPaidTo","globalModelDataVariable","globalRegYearDataVariable","globalSelectedImages","globalVehicleFolderName","globalReferenceNumber","globalSPCSelectedDate","globalFobPrice","UpdateSuccessModal","bodyText","headerText","isUpdateSuccessModalOpen","borderLeftWidth","borderLeftColor","UploadSuccessModal","isSuccessModalOpen","LoadingModal","loadingModalVisible","bottom","left","right","SelectExpenseName","expenseNameIsError","selectExpenseNameRef","selectResetKey","expenseNameData","selectedExpenseName","nanoid","Select","selectedValue","onValueChange","setSelectedExpenseName","accessibilityLabel","_selectedItem","bg","endIcon","CheckIcon","Item","SelectPaidTo","paidToIsError","paidToData","selectedPaidTo","setSelectedPaidTo","ModalCalendar","selectedDate","setSelectedDate","modalCalendarVisible","setModalCalendarVisible","handleModalCalendarOpen","handleModalCalendarClose","_Fragment","onFocus","useRNModal","Calendar","onDayPress","dateString","markedDates","selected","disableTouchEvent","selectedDotColor","renderArrow","enableSwipeMonths","initialDate","showSixWeeks","SupplyChainsCosts","handleAddExpenseNameTextChange","textAreaAddExpenseName","inputExpenseAmount","handleInputExpenseAmountChange","handleAddPaidToTextChange","inputCarNotes","supplyChainsCostsData","currentDate","supplyChainsCostsModalVisible","setSupplyChainsCostsModalVisible","clearModalVisible","setClearModalVisible","inputAmountIsError","setInputAmountIsError","setExpenseNameIsError","setPaidToIsError","totalAmount","setTotalAmount","setSelectResetKey","handleModalSupplyChainsCostsClose","_inputExpenseAmount$c","clear","handleClearModalClose","formattedTotalAmount","expenseData","parseFloat","amount","reduce","accumulator","currentValue","toLocaleString","_inputExpenseAmount$c2","_inputExpenseAmount$c3","_inputExpenseAmount$c4","_inputExpenseAmount$c5","existingIndex","findIndex","_inputExpenseAmount$c6","cloneDeep","expenseName","paidName","setSupplyChainsCostsData","_inputExpenseAmount$c7","newData","concat","_toConsumableArray","handleEditPress","handleFirstModalClose","handleFirstModalOpen","alignSelf","SupplyChainsCostsSortAndAddModal","docName","handleAddTextChange","textAreaAdd","title","dataName","databaseInit","projectExtensionFirestore","index","isHovered","isFocused","isPressed","itemIndex","splice","handleDeleteItem","projectControlAuth","storage","getStorage","projectExtensionFirebase","ClearImagesModal","modalDeleteImagesVisible","setModalDeleteImagesVisible","handleClearImages","selectedImages","isAddPhotoVisible","handleModalDeleteClose","cursor","ImageUploader","dragSortableViewRef","handleClearImagesExtra","deleteImageVisible","boolean","addAnotherImages","scrollEnabled","setscrollEnabled","isEnterEdit","setisEnterEdit","widthState","setWidthState","setIsCursorLoading","modalImageUri","setModalImageUri","imageModalVisible","setImageModalVisible","isFileSizeLimitModal","setIsFileSizeLimitModal","handleImagePress","dropdown","icon","placeholderStyle","selectedTextStyle","iconStyle","inputSearchStyle","paddingTop","txt","lineHeight","sort","item_children","item_delete_icon","item_icon","handleImageAddToSelection","setDeleteImageVisible","options","mediaType","maxHeight","selectionLimit","storageOptions","skipBackup","response","launchImageLibrary","didCancel","assets","newImages","promises","asset","fetch","res","blob","some","Promise","all","limitedImages","setSelectedImages","setAddAnotherImages","reloadData","updatedSelectedImages","handleWidthChange","window","addEventListener","removeEventListener","renderItem","normal","contain","handleDeleteImagePress","Entypo","getImagesRenderItem","handleImageSelection","uniqueImages","self","a","filteredImages","imageOrder","b","indexOf","setIsAddPhotoVisible","DragSortableView","dataSource","delayLongPress","parentWidth","childrenWidth","childrenHeight","marginChildrenTop","marginChildrenBottom","marginChildrenLeft","marginChildrenRight","onDragStart","onDragEnd","onDataChange","onClickItem","keyExtractor","sortable","italic","alignContent","NativeImage","SuccessFailModal","isSuccessOpen","isFailedOpen","handleFailModalClose","inputStockIDNumber","handleSuccessModalClose","okSuccessButtonRef","okFailButtonRef","initialFocusRef","finalFocusRef","StockIDAndMakeAndModel","selectStockStatus","handleSetBordersWhite","inputFobUsd","handleClearIfError","monthNumbers","steeringData","selectPort","selectSales","selectBuyer","inputRefNum","inputChassis","inputModelCode","inputEngineCode","inputEngineDis","selectSteering","inputMileage","selectTransmission","selectExteriorColor","inputNumOfSeats","inputDoors","inputPurchasedPrice","selectFuel","inputDimensionLength","inputDimensionWidth","inputDimensionHeight","inputDimensionCubicMeters","selectDriveType","inputWeight","selectBodyType","inputCarName","inputCarDesc","inputFobJpy","selectRegYear","selectRegMonth","setRefNumFromSelects","stockIDNumError","selectMakeForModelRef","textAreaAddModel","selectMakeForAddModelRef","handleAddMakeTextChange","textAreaAddMake","makeError","modelError","selectMakeBoxRef","selectMakeRef","selectModelRef","selectModelBoxRef","setCarNameFromSelects","setCarNameFromSelectsModel","inputCarMemo","purchasedPriceError","handleInputPurchasedPriceChange","makeData","stockStatusData","portData","transmissionData","fuelData","buyerData","salesData","driveTypeData","bodyTypeData","exteriorColorData","jpyToUsd","modelData","setModelData","isSearchLoading","setIsSearchLoading","setIsSuccessOpen","setIsFailedOpen","getImages","_ref18","folderName","imageRefs","listAll","urls","items","_ref19","itemRef","getDownloadURL","fileName","parseInt","handleSearchPress","_inputStockIDNumber$c","_inputStockIDNumber$c2","querySnapshot","_ref21","_fetchDataAndSelectIndex","collectionRef","make","selectIndex","modelVariable","reset","modelsDataFromFirebase","model","fetchDataAndSelectIndex","stockStatus","regYear","regMonth","portID","salesID","buyerID","referenceNumber","chassisNumber","modelCode","engineCode","engineDisplacement","steering","mileage","transmission","exteriorColor","numberOfSeats","doors","purchasedPrice","toString","fuel","dimensionLength","dimensionWidth","dimensionHeight","dimensionCubicMeters","driveType","weight","bodyType","carName","carDescription","fobPrice","numericValue","startsWith","truncatedValue","formattedValue","multipliedValue","isNaN","formattedMultipliedValue","toFixed","handleInputFobJpyChange","undefined","notes","memo","featuresState","SafetySystemAnBrSy","SafetySystemDrAi","SafetySystemPaAi","SafetySystemSiAi","ComfortAiCoFr","ComfortAiCoRe","ComfortAMFMRa","ComfortAMFMSt","ComfortCDPl","ComfortCDCh","ComfortCrSpCo","ComfortDiSp","ComfortDVDPl","ComfortHDD","ComfortNaSyGPS","ComfortPoSt","ComfortPrAuSy","ComfortReKeSy","ComfortTiStWh","InteriorLeSe","InteriorPoDoLo","InteriorPoMi","InteriorPoSe","InteriorPoWi","InteriorReWiDe","InteriorReWiWi","InteriorThRoSe","InteriorTiGl","ExteriorAlWh","ExteriorPoSlDo","ExteriorSuRo","SellingPointsCuWh","SellingPointsFuLo","SellingPointsMaHiAv","SellingPointsBrNeTi","SellingPointsNoAcHi","SellingPointsNoSmPrOw","SellingPointsOnOwHi","SellingPointsPeRaTi","SellingPointsReBo","SellingPointsTuEn","SellingPointsUpAuSy","resetKey","stockStatusVariable","makeVariable","regYearVariable","regMonthVariable","portVariable","port","salesVariable","sales","buyerVariable","buyer","referenceNumberVariable","stockID","steeringVariable","transmissionVariable","exteriorColorVariable","fuelVariable","driveTypeVariable","bodyTypeVariable","handleModelChange","handleMakeChange","_ref22","handleInputStockIDNumberChange","handleModelOnFocus","isLoadingText","keyboardType","SortAndAddModal","SelectDropdown","buttonStyle","buttonTextStyle","dropdownStyle","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","rowStyle","rowTextStyle","onSelect","defaultButtonText","buttonTextAfterSelection","renderDropdownIcon","isOpened","rowTextForSelection","searchPlaceHolder","searchInputStyle","disableAutoScroll","search","ModelSortAndAddModal","_ref23","modalSortOpen","setModalSortOpen","modalAddOpen","setModalAddOpen","modalAddSuccess","setModalAddSuccess","modalSave","setModalSave","modalSaveLoading","setModalSaveLoading","modalData","setModalData","modalIsLoading","setModalIsLoading","handleDeleteItemPress","prevData","_ref24","_modalDocSnap$data","modalDocRef","modalDocSnap","nameVariable","handleModalSaveClose","handleSortModalOpen","handleSortModalClose","handleModalAddOpen","handleModalAddClose","_textAreaAdd$current","handleModalAddSuccessClose","handleModalAddSuccessOpen","handleModalSaveOpen","handleAddSubmit","_ref28","_textAreaAdd$current2","dataArray","split","modalCollectionRef","arrayUnion","merge","TouchableOpacity","focusable","DraggableFlatList","_ref29","drag","onPressIn","_ref30","TextArea","multiline","totalLines","_ref31","_ref32","_modalDocSnap$data2","_textAreaAdd$current3","_ref36","_textAreaAdd$current4","_ref37","_ref38","PSBSortAndAddModal","_ref39","textAreaAddCode","handleAddCodeTextChange","_ref40","_modalDocSnap$data3","_ref44","_textAreaAdd$current5","_textAreaAddCode$curr","dataCode","dataCodeArray","dataToUpdate","updateObject","_ref45","_ref46","_ref47","modalAddModel","setModalAddModel","_useState103","_useState104","modalSaveModel","setModalSaveModel","_useState105","_useState106","modalModel","setModalModel","_useState107","_useState108","modalAddModelSuccess","setModalAddModelSuccess","_useState109","_useState110","keySelectMakeForModel","setKeySelectMakeForModel","_useState111","_useState112","keySelectMakeForAddModel","setKeySelectMakeForAddModel","_useState113","_useState114","modelSortData","setModelSortData","_useState115","_useState116","isAddModelDisabled","setIsAddModelDisabled","_useState117","_useState118","modalSaveModelLoading","setModalSaveModelLoading","_useState119","_useState120","_useState121","_useState122","_useState123","_useState124","_useState125","_useState126","_useState127","_useState128","fetchModelSortData","_ref48","_selectMakeForModelRe","_selectMakeForModelRe2","_modelSortDocSnap$dat","modelSortDocRef","modelSortDocSnap","handleDeleteModelPress","prevModelData","_ref49","handleSaveModel","_selectMakeForModelRe3","_selectMakeForModelRe4","_selectMakeForModelRe5","_selectMakeForModelRe6","_selectMakeForModelRe7","handleModalSaveModelClose","handleMakeForModelChange","_selectMakeForAddMode","makeForAddModelVariable","handleMakeForAddModelChange","handleModalModelOpen","handleModalModelClose","prevKey","handleModalAddModelOpen","handleModalAddModelClose","handleModalAddModelSuccessOpen","handleModalAddModelSuccessClose","handleModalSaveModelOpen","_selectMakeForModelRe8","handleAddModelSubmit","_ref51","_textAreaAddModel$cur4","_selectMakeForAddMode2","_selectMakeForAddMode3","_selectMakeForAddMode4","makeCollectionRef","makeDocRef","_ref52","_ref53","_textAreaAddModel$cur","_textAreaAddModel$cur2","_textAreaAddModel$cur3","newText","toUpperCase","CheckBoxButton","_ref54","onChange","variable","_useState129","_useState130","checked","setChecked","noOfLines","AddVehicle","screenWidth","_useState131","_useState132","_useState133","_useState134","_useState135","_useState136","_useState137","_useState138","_useState139","_useState140","inputRegYear","inputRegMonth","inputFuel","inputDriveType","textAreaAddTransmission","textAreaAddExteriorColor","textAreaAddFuel","textAreaAddPort","textAreaAddPortCode","textAreaAddSales","textAreaAddBuyer","textAreaAddSalesCode","textAreaAddBuyerCode","textAreaAddDriveType","textAreaAddBodyType","textAreaAddPaidTo","currentYear","years","Array","from","_","_useState141","_useState142","isNoFeaturesSelected","setIsNoFeaturesSelected","_useState143","_useState144","carNameError","setCarNameError","_useState145","_useState146","setMakeError","_useState147","_useState148","setModelError","_useState149","_useState150","regYearError","setRegYearError","_useState151","_useState152","regMonthError","setRegMonthError","_useState153","_useState154","refNumError","setRefNumError","_useState155","_useState156","setStockIDNumError","_useState157","_useState158","chassisError","setChassisError","_useState159","_useState160","modelCodeError","setModelCodeError","_useState161","_useState162","engineDisError","setEngineDisError","_useState163","_useState164","steeringError","setSteeringError","_useState165","_useState166","mileageError","setMileageError","_useState167","_useState168","transmissionError","setTransmissionError","_useState169","_useState170","exteriorColoError","setExteriorColoError","_useState171","_useState172","numOfSeatsError","setNumOfSeatsError","_useState173","_useState174","doorsError","setDoorsError","_useState175","_useState176","setPurchasedPriceError","_useState177","_useState178","fuelError","setFuelError","_useState179","_useState180","portError","setPortError","_useState181","_useState182","buyerError","setBuyerError","_useState183","_useState184","salesError","setSalesError","_useState185","_useState186","dimensionLengthError","setDimensionLengthError","_useState187","_useState188","dimensionWidthError","setDimensionWidthError","_useState189","_useState190","dimensionHeightError","setDimensionHeightError","_useState191","_useState192","driveTypeError","setDriveTypeError","_useState193","_useState194","weightError","setWeightError","_useState195","_useState196","bodyTypeError","setBodyTypeError","_useState197","_useState198","stockStatusError","setStockStatusError","inputVehicleBoxRef","selectRegYearBoxRef","selectRegMonthBoxRef","selectSteeringBoxRef","selectTransmissionBoxRef","selectExteriorColorBoxRef","selectFuelBoxRef","selectPortBoxRef","selectBuyerBoxRef","selectSalesBoxRef","selectDriveTypeBoxRef","selectBodyTypeBoxRef","selectStockStatusBoxRef","property","_ref55","_inputCarName$current","_inputCarDesc$current","_inputFobJpy$current","_inputFobUsd$current","_inputRegYear$current","_inputRegMonth$curren","_inputRefNum$current","_inputChassis$current","_inputModelCode$curre","_inputEngineCode$curr","_inputEngineDis$curre","_inputMileage$current","_inputNumOfSeats$curr","_inputDoors$current","_inputPurchasedPrice$","_inputFuel$current","_inputDimensionLength","_inputDimensionWidth$","_inputDimensionHeight","_inputDriveType$curre","_inputWeight$current","handleClearToggleButton","clearSelect","uploadImages","storageRef","imageNamesToKeep","listResult","deleteObject","_ref57","imagename","img","getContext","src","URL","createObjectURL","onload","canvas","ctx","newWidth","newHeight","drawImage","font","fillStyle","imageSmoothingEnabled","lineWidth","watermarkText","textWidth","measureText","xShadow","yShadow","shadowBlur","fillText","x","y","watermarkedImageBlob","toBlob","imageRef","uploadBytes","contentType","handleUpload","_inputStockIDNumber$c3","_inputRefNum$current2","_inputChassis$current2","_inputModelCode$curre2","_inputEngineDis$curre2","_inputEngineDis$curre3","_inputMileage$current2","_inputMileage$current3","_inputNumOfSeats$curr2","_inputDoors$current2","_inputNumOfSeats$curr3","_inputDoors$current3","_inputPurchasedPrice$2","_inputPurchasedPrice$3","_inputDimensionLength2","_inputDimensionWidth$2","_inputDimensionHeight2","_inputDimensionCubicM","_inputDimensionLength3","_inputDimensionWidth$3","_inputDimensionHeight3","_inputDimensionCubicM2","_inputWeight$current2","_inputWeight$current3","_inputCarName$current2","selectIsEmpty","inputIsEmpty","allValuesAreFalse","values","every","_inputCarName$current3","_inputWeight$current4","_inputWeight$current5","_inputDimensionHeight4","_inputDimensionHeight5","_inputDimensionWidth$4","_inputDimensionWidth$5","_inputDimensionLength4","_inputDimensionLength5","_inputDoors$current4","_inputDoors$current5","_inputPurchasedPrice$4","_inputPurchasedPrice$5","_inputNumOfSeats$curr4","_inputMileage$current4","_inputMileage$current5","_inputEngineDis$curre4","_inputEngineDis$curre5","_inputModelCode$curre3","_inputChassis$current3","_inputRefNum$current3","_inputStockIDNumber$c4","scrollIntoView","behavior","_inputStockIDNumber$c5","_inputRefNum$current4","_inputStockIDNumber$c6","_inputRefNum$current5","_inputCarName$current4","_inputStockIDNumber$c7","_inputChassis$current4","_inputFobJpy$current2","_inputStockIDNumber$c8","_inputRefNum$current6","_inputChassis$current5","_inputModelCode$curre4","_inputEngineCode$curr2","_inputNumOfSeats$curr5","_inputDoors$current6","_inputCarName$current5","_inputCarDesc$current2","_inputCarNotes$curren","_inputCarMemo$current","stockCollectionRef","docQuery","docSnap","fobHistoryValue","keywordsData","fobHistoryData","changedBy","inputFobValue","imageCount","fobHistory","photos","comfort","safetySystem","interior","exterior","sellingPoints","_inputCarName$current6","_inputRefNum$current7","_inputCarName$current7","_inputRefNum$current8","setIsUpdateSuccessModalOpen","dataDoc","updates","updatedDate","dateAdded","dataWithDateAdded","_inputCarName$current8","_inputRefNum$current9","_inputCarName$current9","_inputRefNum$current10","setIsSuccessModalOpen","_ref62","_x13","_inputStockIDNumber$c9","_inputCarName$current10","_inputCarDesc$current3","_inputFobJpy$current3","_inputFobUsd$current2","_inputRegYear$current2","_inputRegMonth$curren2","_inputRefNum$current11","_inputChassis$current6","_inputModelCode$curre5","_inputEngineCode$curr3","_inputEngineDis$curre6","_inputMileage$current6","_inputNumOfSeats$curr6","_inputDoors$current7","_inputPurchasedPrice$6","_inputFuel$current2","_inputDimensionLength6","_inputDimensionWidth$6","_inputDimensionHeight6","_inputDriveType$curre2","_inputWeight$current6","_inputCarNotes$curren2","_inputCarMemo$current2","_inputFobJpy$current4","calculateCubicMeters","_inputDimensionLength7","_inputDimensionLength8","_inputDimensionWidth$7","_inputDimensionWidth$8","_inputDimensionHeight7","_inputDimensionHeight8","resultFormatted","_inputStockIDNumber$c10","_useState199","_useState200","handleUpdateSuccessModalClose","_ref66","_useState211","_useState212","_textAreaAddMake$curr","_textAreaAddMake$curr2","_textAreaAddMake$curr3","Number","outlineStyle","_textAreaAddPort$curr","textAreaValue","line","charAt","join","_textAreaAddPortCode$","_textAreaAddPortCode$2","_textAreaAddPortCode$3","_textAreaAddSales$cur","_textAreaAddSalesCode","_textAreaAddSalesCode2","_textAreaAddSalesCode3","_textAreaAddBuyer$cur","_inputRefNum$current12","_inputRefNum$current13","_inputRefNum$current14","_inputChassis$current7","_inputChassis$current8","_inputChassis$current9","_inputModelCode$curre6","_inputModelCode$curre7","_inputModelCode$curre8","_inputEngineCode$curr4","_inputEngineCode$curr5","_inputEngineCode$curr6","InputGroup","InputRightAddon","_textAreaAddTransmiss","_textAreaAddExteriorC","_textAreaAddFuel$curr","dotIndex","editable","_textAreaAddDriveType","_textAreaAddBodyType$","borderTopColor","_textAreaAddExpenseNa","_textAreaAddPaidTo$cu","_useState203","_useState204","featuresModalVisible","setFeaturesModalVisible","_useState205","_useState206","featuresClearModalVisible","_useState207","_useState208","setKey","handleModalSelectFeaturesClose","pressDuration","InputLeftAddon","_ref63","_useState201","_useState202","modalClearVisible","setModalClearVisible","handleModalClearOpen","handleModalClearClose","_ref64","_useState209","_useState210","modalUploadVisible","setModalUploadVisible","handleModalUploadClose","globalLastVisible","globalMessagesLastVisible","globalSearchText","globalCustomerId","globalImageUrl","globalCustomerFirstName","globalCustomerLastName","globalAdditionalPriceArray","globalMessageTemplateSelectedTitle","formattedIssuingDate","formattedDueDate","transactionModalTitle","transactionModalContentValue","ip","ipCountry","globalInvoiceVariable","carData","cfs","placeOfDelivery","departureCountry","departurePort","salesPerson","discharge","country","consignee","sameAsBuyer","address","contactNumber","fax","notifyParty","sameAsConsignee","paymentDetails","incoterms","inspectionIsChecked","inspectionName","warrantyIsCheck","warrantyAmount","freightPrice","insurancePrice","inspectionPrice","additionalName","additionalPrice","bankInformations","dueDate","issuingDate","bankAccount","paymentTerms","salesAgreement","globalSelectedPDFUrl","globalSelectedFileType","encryptData","secretKey","AES","encrypt","decryptData","ciphertext","decrypt","enc","Utf8","TimelineStatus","selectedChatData","stepIndicator","View","Tooltip","tintColor","statusData","HeaderButton","isActive","headerCount","activeStyle","setIsHovered","onHoverIn","onHoverOut","marginVertical","FilterButton","iconActive","iconNotActive","SkeletonChatListLayout","subIndex","DeleteMessageTemplateYesNo","handleDeleteMessageTemplateClose","deleteMessageTemplateVisible","selectedTitle","isDeleteLoading","setIsDeleteLoading","handleClose","deleteMessageTemplate","titleToDelete","updatedTemplates","messageTemplate","template","Group","MessageTemplateItem","setOriginalTitle","titleInputRef","addVisible","valueInputRef","setAddVisible","textInputRef","setPopoverOpen","isTemplateItemHovered","setIsTemplateItemHovered","isTemplateMenuHovered","setIsTemplateMenuHovered","isTemplateEditHovered","setIsTemplateEditHovered","isTemplateDeleteHovered","setIsTemplateDeleteHovered","templateMenuOpen","setTemplateMenuOpen","setIsAddVisible","setMessageTextInputValue","numberOfLines","ellipsizeMode","focus","onEditPress","setDeleteMessageTemplateVisible","MessageTemplate","isTemplateHovered","setIsTemplateHovered","isAddHovered","setIsAddHovered","popoverOpen","setSearchText","isCancelHovered","setIsCancelHovered","isSaveHovered","setIsSaveHovered","originalTitle","saveLoading","setSaveLoading","templateData","setTemplateData","searchInputRef","saveMessageTemplate","_titleInputRef$curren","_valueInputRef$curren","messageTemplates","newTitle","handleCancelPressed","arrayFieldData","titleA","titleB","pressed","Arrow","TextInput","underlineColorAndroid","marginHorizontal","animating","textDecorationLine","FlatList","borderBottomLeftRadius","FileDisplay","file","onRemove","cover","MessageTextInput","handleSendMessage","inputHeight","setInputHeight","messageTextInputValue","event","target","updatedHeight","max","scrollHeight","onContentSizeChange","_event$nativeEvent$co","nativeEvent","contentSize","onKeyPress","key","shiftKey","preventDefault","ChatInputText","activeChatId","isSendHovered","setIsSendHovered","selectedFile","setSelectedFile","selectedFilePreview","setSelectedFilePreview","selectedImage","setSelectedImage","imageUri","setImageUri","fileUri","setFileUri","setFileName","isSendImageHovered","setIsSendImageHovered","isSendAttachmentHovered","setIsSendAttachmentHovered","sendIsLoading","setSendIsLoading","removeImage","removeFile","selectFile","maxFileSize","Platform","OS","reject","accept","onchange","files","alert","reader","FileReader","result","onerror","readAsDataURL","click","fileSize","selectedImageUri","selectImage","dataUrl","addFileMessage","_textInputRef$current","formattedTimeForFile","inputValue","fileUrl","fileRef","uploadResult","sender","url","lastMessageSender","lastMessage","lastMessageDate","customerRead","read","readBy","addImageMessage","_textInputRef$current2","imageUrl","resizedImage","File","lastModified","Date","now","addMessage","_ref20","CancelledView","ChatListItem","onPressNewTab","messageUnread","formattedDate","chatListData","setImageUrl","textFirst","setTextFirst","textLast","setTextLast","isUnreadHovered","setIsUnreadHovered","isOpenNewTabHovered","setIsOpenNewTabHovered","setCustomerData","vehicle","updateChatToUnread","setActiveChatId","setChatMessagesData","setSelectedChatData","carId","docId","participants","customer","loadingCondition","chatStepIconOn","chatStepIconOff","borderRightColor","borderRightWidth","setCarImageUrl","isCancelled","paddingRight","invoiceNumber","openDelay","ChatList","unreadButtonValue","activeButtonValue","selectedCustomerData","chatListLastVisible","loadMoreLoading","noMoreData","chatId","useParams","updateChatToRead","decodedChatId","decodeURIComponent","parts","stockIdPart","emailPart","_selectedChatData$par","docRefVehicle","unsubscribeVehicle","setSelectedVehicleData","setSelectedCustomerData","setChatMessageBoxLoading","messagesRef","messagesQuery","unsubscribeDoc","dataWithId","invoiceDocRef","unsubscribeInvoice","invoiceDocSnapshot","invoiceDataWithId","setInvoiceData","unsubscribeMessages","messages","fetchChatMessages","decryptedChatId","handleChatPress","_ref25","customerId","encryptedChatId","encodedChatId","encodeURIComponent","handleChatPressNewTab","_ref26","fullPath","location","origin","pathname","open","_ref27","formattedTimestamp","givenDate","currentFormattedDate","getFullYear","getMonth","getDate","getTime","startOfWeek","setDate","getDay","setHours","toLocaleDateString","weekday","formatDate","initialNumToRender","maxToRenderPerBatch","windowSize","onEndReachedThreshold","removeClippedSubviews","ListFooterComponent","onEndReached","nextQuery","setLoadMoreLoading","setNoMoreData","chatsData","setChatListData","SearchChat","clearVisible","setClearVisible","_searchInputRef$curre","_objectDestructuringEmpty","searchValue","setChatListSearchText","_searchInputRef$curre2","hovered","ModalAddBank","modalAddBankVisible","setModalAddBankVisible","setCancelHovered","setAddHovered","handleModalAddBankClose","bankNameRef","branchNameRef","swiftcodeRef","addressRef","accountHolderRef","accountNumberRef","addBankAccount","_bankNameRef$current","_branchNameRef$curren","_swiftcodeRef$current","_addressRef$current","_accountHolderRef$cur","_accountNumberRef$cur","bankNameValue","elementToAdd","bankName","branchName","swiftCode","accountHolder","accountNumberValue","BankInformation","invoiceData","selectedDueDate","setSelectedDueDate","bankAccountsData","setBankAccountsData","selectedBank","setSelectedBank","paymentTermsRef","_paymentTermsRef$curr","dayOfWeek","adjustedDate","toISOString","bankAccounts","entries","_ref33","_ref34","subscribeToBankAccounts","_ref35","selectedBankName","selectedBankObj","PaymentDetails","fobPriceInput","freightInput","inspectionInput","insuranceInput","totalAmountCalculated","setTotalAmountCalculated","insurance","selectedIncoterms","setSelectedIncoterms","inspection","setInspectionIsChecked","warranty","warrantyIsChecked","additionalNameRef","warrantyPrice","additionalPriceRef","safelyParseNumber","number","calculateTotalAmount","_fobPriceInput$curren","_freightInput$current","_inspectionInput$curr","_insuranceInput$curre","freight","additionalPricesTotal","sum","total","round","_fobPriceInput$curren2","_freightInput$current2","_insuranceInput$curre2","freightCalculation","m3","fobPriceDollars","currency","usdToJpy","Checkbox","isChecked","filteredText","lines","filteredLines","filteredLine","SelectPortOfDischarge","countriesDischarge","portsData","setPortsData","nearestPorts","setNearestPorts","selectedPortCountry","setSelectedPortCountry","selectedCountry","selectedPort","setSelectedPort","fetchPorts","sortedPorts","portName","sortOrder","fetchPortsData","selectedCountryData","SelectSalesPerson","selectedSales","setSelectedSales","SelectPortOfDeparture","NotifyPartyInput","accountData","setAccountData","setIsChecked","notifyPartyName","notifyPartyAddress","notifyPartyCity","notifyPartyCountry","notifyPartyContactNumber","notifyPartyFax","notifyPartyEmail","_notifyPartyName$curr","_notifyPartyAddress$c","_notifyPartyCity$curr","_notifyPartyCountry$c","_notifyPartyContactNu","_notifyPartyFax$curre","_notifyPartyEmail$cur","city","ConsigneeInput","consigneeName","consigneeAddress","consigneeCity","consigneeCountry","consigneeContactNumber","consigneeFax","consigneeEmail","fetchAccountData","textStreet","textZip","textPhoneNumber","textEmail","ConfirmPaymentModalContent","historyModalVisible","setHistoryModalVisible","isConfirmLoading","setIsConfirmLoading","totalAmountString","totalAmountNumber","inputAmountRef","fullPaymentMessage","_ref42","messageType","overBalanceMessage","_ref43","paymentMessage","transactionDate","confirmPayment","amountNeeded","totalValue","docRefCustomer","newPayments","newPaymentsAccount","vehicleRef","vehicleName","inputAmount","numericInputAmount","formattedInputAmount","ms","overBalance","increment","payments","paymentsHistory","setTransactionModalVisible","cleanedDateString","padStart","hours","getHours","ampm","getMinutes","payment","displayedAmount","fontWefight","Progress","shadow","_filledTrack","underline","selectable","handleHistoryModalClose","sortedPayments","dateA","IssueProformaInvoiceModalContent","isConfirmHovered","cfsInputRef","placeOfDeliveryInputRef","invoiceMessage","confirmInvoice","yearSuffix","maxNumber","substring","docRefChatId","hashedData","hash","HmacSHA256","Hex","stringify","createHmacSha256Hash","updateDocRef","customerEmail","cryptoNumber","_cfsInputRef$current","_placeOfDeliveryInput","ProfitCalculator","totalSCCAmount","setTotalSCCAmount","formattedTotalSCCAmount","setFormattedTotalSCCAmount","totalProfitAmountDollars","setTotalProfitAmountDollars","inputPriceRef","lastFetchedPort","setLastFetchedPort","currentPort","freightOrigPrice","_data$currentPort","kobePrice","nagoyaPrice","yokohamaPrice","kyushuPrice","fee","formattedPurchasedPrice","minimumFractionDigits","maximumFractionDigits","auctionFee","formattedAuctionFee","transportFee","formattedTransportFee","shippingAgentFee","formattedShippingAgentFee","cubicMeter","costPerCubicMeter","formattedCostPerCubicMeter","totalCubicMeterCostDollars","formattedTotalCubicMeterCostDollars","totalCubicMeterCostYen","formattedTotalCubicMeterCostYen","realTotalPriceYen","formattedRealTotalPriceYen","realTotalPriceDollars","formattedRealTotalPriceDollars","totalPriceCalculation","defaultInputPrice","_inputPriceRef$curren","inputPrice","totalAmountDollars","PreviewInvoice","previewInvoiceVisible","isPreviewHovered","setIsPreviewHovered","invoiceRef","capturedImageUri","setCapturedImageUri","vehicleImageUri","setVehicleImageUri","setFeaturesTrueCount","rerenderState","setRerenderState","captureImageAsync","_ref50","captureRef","quality","trueCount","count","field","countTrueValuesInCarData","convertImageToBase64","ok","onloadend","base64String","captureImage","createPDF","imageData","html2canvas","toDataURL","pdf","jsPDF","orientation","unit","imgProps","getImageProperties","pdfHeightFit","addImage","imageCompression","imageQuality","save","handleCaptureAndCreatePDF","issuingDateString","dueDateString","issuingDateObject","dueDateObject","setPreviewInvoiceVisible","write","QRCode","useGrouping","price","ReopenTransaction","isModalVisible","setIsModalVisible","isYesHovered","setIsYesHovered","isNoHovered","setIsNoHovered","handleModalClose","reopenTransactionMessage","handleReopenTransaction","_ref56","CancelTransaction","sendEmail","subject","htmlContent","method","headers","body","JSON","cancelTransactionMessage","_ref58","handleCancelTransaction","_ref59","formattedTimeEmail","ExtendDueDateButton","setIsConfirmHovered","handleConfirm","_ref60","confirmExtendDueDate","extendDueDateMessage","_ref61","TransactionModal","transactionModalVisible","TransactionButton","_ref65","buttonValue","transactionValue","colorHoverIn","colorHoverOut","TransactionList","displayedTransactions","isArray","transactions","transaction","stockId","onMouseEnter","onMouseLeave","TransactionHistoryModal","_useState213","_useState214","transactionHistoryVisible","setTransactionHistoryVisible","_useState215","_useState216","setDisplayedTransactions","_useState217","_useState218","loadingMore","setLoadingMore","_useState219","_useState220","onScroll","_ref68","_ref67","layoutMeasurement","contentOffset","isCloseToBottom","nextItems","loadMorePayments","scrollEventThrottle","PaymentHistoryModal","_useState221","_useState222","paymentHistoryVisible","setPaymentHistoryVisible","_useState223","_useState224","displayedPayments","setDisplayedPayments","_useState225","_useState226","_ref70","_ref69","CustomerProfileModal","_useState227","_useState228","customerModalVisible","setCustomerModalVisible","totalPaymentValue","background","Hyperlink","linkDefault","linkStyle","ChatMessageHeader","chatMessagesData","selectedVehicleData","carImageUrl","_useState229","_useState230","reRenderKey","setReRenderKey","freightPriceYen","reservedTo","FontAwesome5","ReadByListModal","_ref71","userEmail","handleReadByListModalClose","readByListModalVisible","flexWrap","ImagePreviewModal","_ref72","isVisible","HoverablePressable","_ref73","_useState231","printComponent","_useState232","isHoveredDownload","setIsHoveredDownload","_useState233","_useState234","Linking","openURL","DocumentPreviewModal","selectedFileUrl","pdfViewerModalVisible","_useState235","_useState236","iframeKey","setIframeKey","_useState237","_useState238","setLoading","handleIframeLoad","printIframe","printWindow","print","timeout","setSelectedFileUrl","clearTimeout","setPdfViewerModalVisible","onLoad","ChatMessageBox","_ref75","loadMoreMessagesLoading","noMoreMessagesData","_useState239","_useState240","isEyeHovered","setIsEyeHovered","flatListRef","_useState241","_useState242","hoveredImageIndex","setHoveredImageIndex","_useState243","_useState244","selectedImageIndex","setSelectedImageIndex","_useState245","_useState246","isPreviewVisible","setIsPreviewVisible","useLocation","handlePopState","handleImageMessageMouseLeave","_useState247","_useState248","handleReadByListModalOpen","setReadByListModalVisible","animatedValue","Animated","Value","loop","sequence","timing","toValue","useNativeDriver","start","interpolate","inputRange","outputRange","handleLoadMoreMessages","_ref76","setLoadMoreMessagesLoading","setNoMoreMessagesData","_ref77","handlePreviewInvoiceModalOpen","match","formattedHours","amPm","substr","extractUsernameFromEmail","_email$split","renderItemText","isGlobalCustomerSender","urlPattern","RegExp","segments","segment","segmentWithBreaks","str","n","insertBreaks","isUrlForText","canOpenURL","supported","getFileIcon","iconSize","lowerFileName","endsWith","_ref78","isLastMessage","textFontSize","handleImageMessageMouseEnter","openPreview","absoluteFillObject","inverted","ReservedStatusViewForHeader","CancelledViewForHeader","_useState249","_useState250","chatMessageBoxLoading","chatListSearchText","_useState251","_useState252","_useState253","_useState254","activeButton","setActiveButton","_useState255","_useState256","setActiveButtonValue","_useState257","_useState258","activeFilterButton","setActiveFilterButton","_useState259","_useState260","setUnreadButtonValue","_useState261","_useState262","readButtonValue","setReadButtonValue","_useState263","_useState264","_useState265","_useState266","unreadCount","setUnreadCount","_useState267","_useState268","setScreenWidth","updateWidth","fetchIpAndCountry","_ref79","fetchedIp","fetchedIpCountry","country_name","unrepliedQuery","handlePress","buttonTitle","buttonTitleValue","queryRef","buildQuery","_projectControlAuth$c","_ref80","_x14","slideAnim","easing","Easing","bezier","_ref81","_useState269","_useState270","horizontal","minWidth","prevState","transform","translateX","defaultSelectedButton","selectedPortForCountry","SearchablePortDropdown","setQuery","isDropdownVisible","setIsDropdownVisible","searchRef","formattedData","ports","collectionName","FreightNavigation","selectedButtonState","setSelectedButtonState","button","setSelectedButton","SelectMethod","portCode","selectedMethod","setSelectedMethod","methodData","toast","useToast","updatePortMethod","methodField","render","formattedPortCode","TouchableHighlight","underlayColor","SelectInspectionIsRequired","countryCode","selectedInspectionIsRequired","setSelectedInspectionIsRequired","inspectionIsRequiredData","updateCountryInspection","inspectionIsRequiredField","formattedCountryCode","countryData","inspectionIsRequired","SelectInspectionName","selectedInspectionName","setSelectedInspectionName","inspectionNameData","updateCountryInspectionName","inspectionNameField","addPort","newCountryData","addCountry","countryName","AddCountryModal","handleAddCountryModalClose","addCountryModalVisible","inputCountryText","addButtonLoading","setAddButtonLoading","handleAddButton","_inputCountryText$cur","_inputCountryText$cur2","setAddCountryModalVisible","inputRef","filteredValue","filterInput","borderBottomRightRadius","NavigatePage","selectedButton","CountriesTable","PortsTable","AddPortsForCountriesModal","handleAddPortsForCountriesModalClose","addPortsForCountriesModalVisible","handleAddPortsForCountriesModalOpen","countryPortsData","setAddPortsForCountriesModalVisible","addPortForCountryField","nearestPortsField","_docSnap$data$formatt","_x15","updateCountryPortsField","_x16","DeleteCountryModal","handleDeleteCountryModalClose","deleteCountryModalVisible","buttonLoading","setButtonLoading","handleDeleteCountry","formattedFieldCode","deleteField","inputSearchRef","inputSortOrder","textAreaAddInspectionIsRequired","textAreaAddInspectionName","_inputSearchRef$curre","handleAddCountryModalOpen","setCountryPortsData","updateCountrySortOrder","sortOrderField","_x17","_x18","_x19","handleSortOrderTextChange","handleDeleteCountryModalOpen","setDeleteCountryModalVisible","handleUpdateInsurance","insuranceField","_x20","_x21","_x22","returnKeyType","autoCapitalize","_textAreaAddInspectio4","_textAreaAddInspectio3","borderTopLeftRadius","borderTopRightRadius","BouncyCheckbox","fillColor","unfillColor","innerIconStyle","textStyle","fontFamily","AddPortModal","handleAddPortModalClose","addPortModalVisible","inputPortText","_inputPortText$curren","_inputCountryText$cur3","_inputCountryText$cur4","_inputPortText$curren2","_inputCountryText$cur5","setAddPortModalVisible","DeletePortModal","handleDeletePortModalClose","deletePortModalVisible","handleDeletePort","textAreaAddMethod","inputProfitPrice","inputNagoyaPrice","inputYokohamaPrice","inputKyushuPrice","inputKobePrice","inputMemo","handleProfitPriceTextChange","updatePortsField","_x23","_x24","_x25","_x26","_x27","_inputSearchRef$curre2","profitPrice","handleAddPortModalOpen","handleDeletePortModalOpen","setDeletePortModalVisible","_textAreaAddMethod$cu","Freight","_x28","keyboardShouldPersistTaps","NamePopover","MobileViewDrawer","LogsTable","logsData","setLogsData","handleNextPage","handlePreviousPage","CurrencyConverterComponent","successModalVisible","setSuccessModalVisible","todayCurrency","setTodayCurrency","timestampCurrency","setTimestampCurrency","setExchangeRate","setLastUpdate","CurrencyConverter","rates","JPY","JpyToUsd","yenToDollar","dollarToYen","usdToEur","EUR","eurToUsd","usdToGbp","GBP","gbpToUsd","usdToAud","AUD","audToUsd","usdToCad","CAD","cadToUsd","yenToEuro","euroToYen","yenToGbp","gbpToYen","yenToAud","audToYen","yenToCad","cadToYen","lastUpdateDate","formattedLastUpdate","hour","minute","second","timeZoneName","newTodayCurrency","currencyRef","jpyToEur","eurToJpy","jpyToGbp","gbpToJpy","jpyToAud","audToJpy","jpyToCad","cadToJpy","logDataCurrency","handleCloseCurrencyModal","handleCloseSuccessModal","MyBarChart","VictoryChart","theme","VictoryTheme","material","domainPadding","parent","VictoryAxis","axis","stroke","ticks","tickLabels","fill","dependentAxis","VictoryBar","datum","barRatio","Logs","setIsOpen","useNavigation","handleOpen","handleToggleLogs","handleToggleAddAccount","handleToggleAccountList","handleToggleAddVehicle","handleVehicleList","handleFreight","handleChatMessages","slideAnimation","inOut","ease","onPressOut","onHover","setOnHover","globalCurrentSupplyChainCostsData","globalCurrentStockID","globalSelectedVehicle","globalSelectedVehicleReferenceNumber","globalSelectedCarName","SelectStockStatus","selectedStockStatusValue","setSelectedStockStatusValue","handleSaveStockStatus","stockStatusHistoryData","vehicleProductRef","stockStatusHistory","ImageUploadModal","handleUploadImagesModalClose","handleUploadImages","uploadImagesModalVisible","uploadImagesButtonLoading","UploadImagesModal","fetchImageCounts","setUploadImagesModalVisible","setUploadImagesButtonLoading","closeAll","handleModalSupplyChainsCostsOpen","setVehicleListSupplyChainsCostsData","AllSccModals","vehicleListSupplyChainsCostsData","expenseViewRef","handleSaveSupplyChainsCosts","SCC_Modals","VehicleEditModal","handleEditModalClose","editVehicleModalVisible","EditVehicleModal","setEditVehicleModalVisible","ViewImagesModal","handleViewImagesModalClose","viewImagesModalVisible","viewImagesData","FobPriceHistoryModal","handleFobPriceHistoryClose","fobPriceHistoryModalVisible","FobPriceHistory","setFobPriceHistoryModalVisible","ImageCountComponent","handleViewImagesModalOpen","handleUploadImagesModalOpen","setImageCount","FobPriceInput","setFobPrice","formatValueWithCommas","handleSaveFob","fobValue","handleTextChange","VehicleListTable","vehicleListData","setStockIDs","setImageCounts","sortField","setSortField","isSortActive","setIsSortActive","handleSortChange","fetchWithSort","fieldToSortBy","sortDirection","vehicleProductData","setVehicleListData","_ref41","sanitizedSearchQuery","ids","counts","getImageCountInFolder","imageCountsObject","acc","folderPath","folderRef","handleFobPriceHistoryOpen","setFobHistoryData","setViewImagesModalVisible","setViewImagesData","handleSearchEnter","vehicleProductsRef","VehicleList","UsePagination","messageTextInputValueSlice","createSlice","initialState","reducers","action","payload","carImageUrlSlice","selectedFileUrlSlice","pdfViewerModalVisibleSlice","selectedVehicleDataSlice","selectedCustomerDataSlice","previewInvoiceVisibleSlice","transactionModalVisibleSlice","invoiceDataSlice","deleteMessageTemplateVisibleSlice","loadMoreMessagesLoadingSlice","noMoreMessagesDataSlice","readByListModalVisibleSlice","selectedChatDataSlice","chatMessageBoxLoadingSlice","chatMessagesDataSlice","chatListSearchTextSlice","activeChatIdSlice","loadMoreLoadingSlice","noMoreDataSlice","chatListLastVisibleSlice","setChatListLastVisible","chatListDataSlice","chatListImageUrlSlice","setChatListImageUrl","countryPortsDataSlice","addPortsForCountriesModalVisibleSlice","methodDataSlice","setMethodData","inspectionIsRequiredDataSlice","setInspectionIsRequiredData","inspectionNameDataSlice","setInspectionNameData","deletePortModalVisibleSlice","deleteCountryModalVisibleSlice","addPortModalVisibleSlice","addCountryModalVisibleSlice","selectedButtonSlice","freightCountriesDataSlice","setFreightCountriesData","freightPortsDataSlice","setFreightPortsData","fobHistoryDataSlice","inputFobSlice","setInputFob","fobPriceHistoryModalVisibleSlice","editVehicleModalVisibleSlice","vehicleListDataSlice","addVehicleListDataSlice","setAddVehicleListData","supplyChainsCostsModalVisibleSlice","uploadImagesModalVisibleSlice","vehicleListSupplyChainsCostsDataSlice","uploadImagesButtonLoadingSlice","viewImagesModalVisibleSlice","viewImagesDataSlice","lastVisibleSlice","accountListDataSlice","logsDataSlice","stockStatusDataSlice","setStockStatusData","isSuccessModalOpenSlice","isUpdateSuccessModalOpenSlice","loadingModalVisibleSlice","selectedExpenseNameSlice","selectedPaidToSlice","supplyChainsCostsDataSlice","currentDateSlice","setCurrentDate","loginEmailSlice","setLoginEmail","loginAccountTypeSlice","loginNameSlice","modalDeleteImagesVisibleSlice","addAnotherImagesSlice","isAddPhotoVisibleSlice","jpyToUsdSlice","setJpyToUsd","usdToJpySlice","setUsdToJpy","modelDataSlice","makeDataSlice","setMakeData","expenseNameDataSlice","setExpenseNameData","paidToDataSlice","setPaidToData","selectedMakeSlice","setSelectedMake","isLoadingSlice","selectedImagesSlice","portDataSlice","setPortData","transmissionDataSlice","setTransmissionData","fuelDataSlice","setFuelData","buyerDataSlice","setBuyerData","salesDataSlice","setSalesData","driveTypeDataSlice","setDriveTypeData","bodyTypeDataSlice","setBodyTypeData","exteriorColorDataSlice","setExteriorColorData","currentYearSlice","setCurrentYear","deleteImageVisibleSlice","actions","configureStore","reducer","chatListImageUrl","freightPortsData","freightCountriesData","inputFob","addVehicleListData","accountListData","selectedMake","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","fetchCurrency","_snapshot$data","_snapshot$data2","fetchExpenseNameData","_snapshot$data3","fetchPaidToData","_snapshot$data4","paidTo","fetchMakeData","_snapshot$data5","fetchPortData","_snapshot$data6","fetchTransmissionData","_snapshot$data7","fetchFuelData","_snapshot$data8","fetchBuyerData","_snapshot$data9","fetchSalesData","_snapshot$data10","fetchDriveTypeData","_snapshot$data11","fetchBodyTypeData","_snapshot$data12","fetchExteriorColorData","_snapshot$data13","fetchYear","fetchCurrentDate","fetchVehicleListData","fetchMethodData","_snapshot$data14","fetchInspectionIsRequiredData","_snapshot$data15","fetchInspectionNameData","_snapshot$data16","fetchChatListData","projectControlFirebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","projectExtensionAuth","app","getAnalytics","firebaseAppForCreateUser","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","notFulfilled","Infinity","i","fulfilled","j","r","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","setAttribute","onScriptComplete","prev","doneFns","parentNode","removeChild","bind","appendChild","Symbol","toStringTag","nmd","paths","p","installedChunks","installedChunkData","promise","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}