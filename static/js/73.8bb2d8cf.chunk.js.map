{"version":3,"file":"static/js/73.8bb2d8cf.chunk.js","mappings":"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","sources":["assets/chat_step|sync|/^/chat_step_.*_off/.png$","assets/chat_step|sync|/^/chat_step_.*_on/.png$","components/DevAdminComponents/ChatMessages.js"],"sourcesContent":["var map = {\n\t\"./chat_step_1_off.png\": 29413,\n\t\"./chat_step_2_off.png\": 35290,\n\t\"./chat_step_3_off.png\": 38715,\n\t\"./chat_step_4_off.png\": 65256,\n\t\"./chat_step_5_off.png\": 58038,\n\t\"./chat_step_6_off.png\": 49232,\n\t\"./chat_step_7_off.png\": 88618\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 66516;","var map = {\n\t\"./chat_step_1_on.png\": 40027,\n\t\"./chat_step_2_on.png\": 22558,\n\t\"./chat_step_3_on.png\": 80851,\n\t\"./chat_step_4_on.png\": 14740,\n\t\"./chat_step_5_on.png\": 80904,\n\t\"./chat_step_6_on.png\": 81151,\n\t\"./chat_step_7_on.png\": 30443\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 82049;","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Flex,\r\n    HStack,\r\n    Icon,\r\n    Image as NativeImage,\r\n    Input,\r\n    Modal,\r\n    NativeBaseProvider,\r\n    Popover,\r\n    Spinner,\r\n    Stack,\r\n    Text,\r\n    VStack,\r\n    useBreakpointValue,\r\n    TextArea,\r\n    InputRightAddon,\r\n    InputGroup,\r\n    InputLeftAddon,\r\n    Select,\r\n    CheckIcon,\r\n    PresenceTransition,\r\n    CloseIcon,\r\n    ScrollView as ScrollViewNative,\r\n    Divider,\r\n    useDisclosure,\r\n    useDisclose,\r\n    FormControl,\r\n    Checkbox,\r\n    useToast,\r\n    Tooltip,\r\n    Progress,\r\n    Alert\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n    Dimensions,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    StyleSheet,\r\n    View,\r\n    PanResponder,\r\n    Animated,\r\n    InputAccessoryView,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    TextInput,\r\n    Image as RNImage,\r\n    Pressable,\r\n    Linking,\r\n    Modal as RNModal,\r\n    Platform,\r\n    SafeAreaView,\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo,\r\n    FontAwesome5,\r\n    EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup, increment } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n    setVehicleListData,\r\n    setSupplyChainsCostsData,\r\n    setSelectedPaidTo,\r\n    setSelectedExpenseName,\r\n    setSupplyChainsCostsModalVisible,\r\n    setVehicleListSupplyChainsCostsData,\r\n    setDeleteImageVisible,\r\n    setSelectedImages,\r\n    setAddAnotherImages,\r\n    setIsAddPhotoVisible,\r\n    setUploadImagesModalVisible,\r\n    setUploadImagesButtonLoading,\r\n    setViewImagesModalVisible,\r\n    setViewImagesData,\r\n    setLoadingModalVisible,\r\n    setAddVehicleListData,\r\n    setEditVehicleModalVisible,\r\n    setFobPriceHistoryModalVisible,\r\n    setChatListData,\r\n    setChatListImageUrl,\r\n    setChatListLastVisible,\r\n    setLoadMoreLoading,\r\n    setNoMoreData,\r\n    setActiveChatId,\r\n    setChatListSearchText,\r\n    setChatMessagesData,\r\n    setChatMessageBoxLoading,\r\n    setSelectedChatData,\r\n    setReadByListModalVisible,\r\n    setLoadMoreMessagesLoading,\r\n    setNoMoreMessagesData,\r\n    setDeleteMessageTemplateVisible,\r\n    setInvoiceData,\r\n    setTransactionModalVisible,\r\n    setPreviewInvoiceVisible,\r\n    setSelectedCustomerData,\r\n    setPdfViewerModalVisible,\r\n    setSelectedFileUrl,\r\n    setIsLoading,\r\n} from './redux/store';\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\nimport Hyperlink from 'react-native-hyperlink';\r\nimport { HmacSHA256, enc } from 'crypto-js';\r\nimport { CRYPTO_KEY } from '@env';\r\nimport { captureRef } from 'react-native-view-shot';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport QRCode from 'react-native-qrcode-svg';\r\n\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'CHAT MESSAGES'\r\nlet globalLastVisible;\r\nlet globalMessagesLastVisible;\r\nlet globalSearchText = '';\r\nlet globalCustomerId = '';\r\nlet globalChatId = '';\r\nlet globalImageUrl = '';\r\nlet globalCustomerCarName = '';\r\nlet globalCustomerFirstName = '';\r\nlet globalCustomerLastName = '';\r\n\r\nlet globalAdditionalNameArray = [];\r\n\r\nlet globalAdditionalPriceArray = [];\r\n\r\nlet globalMessageTemplateSelectedTitle = '';\r\n\r\nlet userEmail = projectControlAuth.currentUser.email;\r\n\r\nlet formattedIssuingDate = ''; // Initialize the variable outside the conditional rendering block\r\nlet formattedDueDate = '';\r\n\r\nlet transactionModalTitle = '';\r\n\r\nlet transactionModalContentValue = 0;\r\n\r\nlet ip = '';\r\nlet ipCountry = '';\r\n\r\nlet globalInvoiceVariable = {\r\n    carData: {\r\n\r\n    },\r\n    cfs: '',\r\n    placeOfDelivery: '',\r\n    departureCountry: '',\r\n    departurePort: '',\r\n    salesPerson: '',\r\n\r\n    discharge: {\r\n        port: '',\r\n        country: '',\r\n    },\r\n\r\n    consignee: {\r\n        sameAsBuyer: null,\r\n        name: '',\r\n        address: '',\r\n        contactNumber: '',\r\n        fax: '',\r\n        email: '',\r\n    },\r\n\r\n    notifyParty: {\r\n        sameAsConsignee: null,\r\n        name: '',\r\n        address: '',\r\n        contactNumber: '',\r\n        fax: '',\r\n        email: '',\r\n    },\r\n\r\n    paymentDetails: {\r\n        incoterms: '',\r\n        inspectionIsChecked: null,\r\n        inspectionName: '',\r\n        warrantyIsCheck: null,\r\n        warrantyAmount: 0,\r\n        fobPrice: 0,\r\n        freightPrice: 0,\r\n        insurancePrice: 0,\r\n        inspectionPrice: 0,\r\n        totalAmount: 0,\r\n        additionalName: [],\r\n        additionalPrice: [],\r\n    },\r\n\r\n    bankInformations: {\r\n        dueDate: '',\r\n        issuingDate: '',\r\n        bankAccount: {\r\n\r\n        },\r\n        paymentTerms: '',\r\n        salesAgreement: '',\r\n    },\r\n\r\n}\r\n\r\nlet globalSelectedPDFUrl = '';\r\nlet globalSelectedFileType = '';\r\n\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n\r\n    const user = projectControlAuth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n\r\n\r\nconst TimelineStatus = ({ data }) => {\r\n\r\n    const selectedChatData = useSelector(state => state.selectedChatData);\r\n\r\n    const changeIndex = data.findIndex(item => selectedChatData.stepIndicator.value < item.value);\r\n\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', paddingTop: 3, }}>\r\n            {/* Dots and individual line segments */}\r\n            {data.map((item, index) => (\r\n                <View key={index} style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                    {/* Dot */}\r\n                    <Tooltip label={item.title} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33' }}>\r\n                        <View style={{\r\n                            width: 20,\r\n                            height: 20,\r\n                            borderRadius: 10,\r\n                            backgroundColor: selectedChatData.stepIndicator.value < item.value ? '#C1C1C1' : '#abf7c7',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n\r\n                            {selectedChatData.stepIndicator.value < item.value ? (\r\n                                <FastImage\r\n                                    source={{\r\n                                        uri: require(`../../assets/chat_step/chat_step_${item.value}_off.png`),\r\n                                        priority: FastImage.priority.normal,\r\n                                    }}\r\n                                    style={{\r\n                                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                                        width: 15,\r\n                                        height: 15,\r\n                                        alignSelf: 'center',\r\n                                    }}\r\n                                    resizeMode={FastImage.resizeMode.stretch}\r\n                                />\r\n                            ) : (\r\n                                <FastImage\r\n                                    source={{\r\n                                        uri: require(`../../assets/chat_step/chat_step_${item.value}_on.png`),\r\n                                        priority: FastImage.priority.normal\r\n                                    }}\r\n                                    style={{\r\n                                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                                        width: 15,\r\n                                        height: 15,\r\n                                        alignSelf: 'center',\r\n                                    }}\r\n                                    resizeMode={FastImage.resizeMode.stretch}\r\n                                />\r\n                            )}\r\n\r\n                        </View>\r\n                    </Tooltip>\r\n                    {/* Line Segment (except for the last dot) */}\r\n                    {index < data.length - 1 && (\r\n                        <View style={{\r\n                            height: 3,\r\n                            width: 20, // Adjust the width to match the space between the dots\r\n                            backgroundColor: selectedChatData.stepIndicator.value <= item.value ? '#C1C1C1' : '#abf7c7',\r\n                        }} />\r\n                    )}\r\n                </View>\r\n            ))}\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nconst statusData = [\r\n    { title: 'Negotiation', value: 1 },\r\n    { title: 'Issued Proforma Invoice', value: 2 },\r\n    { title: 'Order Item', value: 3 },\r\n    { title: 'Payment Confirmed', value: 4 },\r\n    { title: 'Shipping Schedule', value: 5 },\r\n    { title: 'Documents', value: 6 },\r\n    { title: 'Vehicle Received', value: 7 },\r\n    // Add more events as needed\r\n];\r\n\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n// const SkeletonChatListLayout = () => {\r\n//     return (\r\n//         <SkeletonPlaceholder>\r\n//             <SkeletonPlaceholder.Item flexDirection=\"row\" alignItems=\"center\" padding={12}>\r\n//                 {/* Placeholder for Image */}\r\n//                 <SkeletonPlaceholder.Item width={60} height={60} borderRadius={30} />\r\n\r\n//                 {/* Placeholder for Texts */}\r\n//                 <SkeletonPlaceholder.Item flex={1} marginLeft={20}>\r\n//                     {/* Date */}\r\n//                     <SkeletonPlaceholder.Item width={80} height={12} marginBottom={6} />\r\n//                     {/* Car Name */}\r\n//                     <SkeletonPlaceholder.Item width={120} height={14} marginBottom={6} />\r\n//                     {/* Text First and Last */}\r\n//                     <SkeletonPlaceholder.Item width={140} height={14} marginBottom={6} />\r\n//                     {/* Last Message */}\r\n//                     <SkeletonPlaceholder.Item width={160} height={12} marginBottom={6} />\r\n//                 </SkeletonPlaceholder.Item>\r\n//             </SkeletonPlaceholder.Item>\r\n//         </SkeletonPlaceholder>\r\n//     );\r\n// };\r\n\r\nconst HeaderButton = ({ title, onPress, isActive, headerCount }) => {\r\n    const activeStyle = isActive ? { backgroundColor: '#E1EDF7' } : {};\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n    return (\r\n        <Pressable\r\n            onHoverIn={hoverIn}\r\n            onHoverOut={hoverOut}\r\n            focusable={false}\r\n            onPress={onPress}\r\n            style={{ backgroundColor: isHovered ? '#f2f2f2' : 'transparent', padding: 12, marginVertical: screenWidth > 1818 ? 10 : 2, borderWidth: 5, borderColor: 'transparent', marginLeft: 8, width: 195, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 5, ...activeStyle }}\r\n        >\r\n            <Text color={isActive ? '#0A78BE' : '#1C2B33'} fontSize={14} style={{ fontWeight: isActive ? 700 : 400, alignSelf: 'center', textAlign: 'center', }}>{title}</Text>\r\n            {headerCount}\r\n\r\n        </Pressable>\r\n    );\r\n};\r\n\r\nconst FilterButton = ({ title, onPress, isActive, iconActive, iconNotActive }) => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n    return (\r\n        <Pressable\r\n            focusable={false}\r\n            variant='ghost'\r\n            onPress={onPress}\r\n            onHoverIn={hoverIn}\r\n            onHoverOut={hoverOut}\r\n            style={{\r\n                padding: 5,\r\n                width: 100,\r\n                margin: 5,\r\n                flexDirection: 'row', // Align items in a row\r\n                alignItems: 'center', // Center items vertically\r\n                justifyContent: 'center',\r\n                borderRadius: 5,\r\n                backgroundColor: isActive ? '#E1EDF7' : (isHovered ? '#d7d7d9' : '#ECEDF0'),\r\n            }}\r\n        >\r\n            {isActive ? iconActive : iconNotActive}\r\n            <Text color={isActive ? '#0A78BE' : '#1C2B33'} fontSize={14} style={{ fontWeight: isActive ? 700 : 400, marginLeft: 5, }}>{title}</Text>\r\n\r\n\r\n        </Pressable>\r\n    );\r\n};\r\n\r\nconst formatDate = (timestamp) => {\r\n    const currentDate = new Date();\r\n    const formattedTimestamp = timestamp.replace(' at ', 'T').replace(/\\//g, '-');\r\n    const givenDate = new Date(formattedTimestamp);\r\n\r\n    // Resetting the time part to compare dates only\r\n    const currentFormattedDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\r\n    const givenFormattedDate = new Date(givenDate.getFullYear(), givenDate.getMonth(), givenDate.getDate());\r\n\r\n    // Check if the dates are the same\r\n    if (givenFormattedDate.getTime() === currentFormattedDate.getTime()) {\r\n        return \"This day\";\r\n    }\r\n\r\n    const oneDay = 24 * 60 * 60 * 1000;\r\n    const startOfWeek = new Date();\r\n    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() + (startOfWeek.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    // Check if the date is within this week\r\n    if (givenDate >= startOfWeek && givenDate < currentFormattedDate) {\r\n        return givenDate.toLocaleDateString('en-US', { weekday: 'short' });\r\n    }\r\n\r\n    // Check if the date is within this year\r\n    const startOfYear = new Date(new Date().getFullYear(), 0, 1);\r\n    if (givenDate >= startOfYear) {\r\n        return givenDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    }\r\n\r\n    // If the date is not within this year\r\n    return givenDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });\r\n};\r\n\r\nconst SkeletonChatListLayout = () => {\r\n\r\n    return (\r\n        <>\r\n            <View // Add a unique key here\r\n                style={{\r\n                    padding: 12,\r\n                    alignItems: 'flex-start',\r\n                    flexDirection: 'row',\r\n                    backgroundColor: 'white',\r\n                }}\r\n            >\r\n                {/* Skeleton for the image */}\r\n                <View\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginRight: 12,\r\n                    }}\r\n                />\r\n                {/* Skeleton for the text */}\r\n                <View style={{ flex: 1 }}>\r\n                    {Array.from({ length: 3 }).map((_, subIndex) => (\r\n                        <View\r\n                            key={`text-${subIndex}`}  // Add a unique key here for each text line\r\n                            style={{\r\n                                height: 10,\r\n                                backgroundColor: '#e0e0e0',\r\n                                marginBottom: 6,\r\n                                width: '80%',\r\n                                borderRadius: 4,\r\n                            }}\r\n                        />\r\n                    ))}\r\n                    <View style={{\r\n                        position: 'absolute',\r\n                        right: 10, height: 10,\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginBottom: 6,\r\n                        width: '5%',\r\n                        borderRadius: 4,\r\n                    }} />\r\n                </View>\r\n            </View>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst DeleteMessageTemplateYesNo = ({ handleDeleteMessageTemplateClose }) => {\r\n\r\n    const deleteMessageTemplateVisible = useSelector((state) => state.deleteMessageTemplateVisible);\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n    const selectedTitle = globalMessageTemplateSelectedTitle;\r\n    const [isDeleteLoading, setIsDeleteLoading] = useState(false);\r\n    const handleClose = () => {\r\n        handleDeleteMessageTemplateClose();\r\n\r\n    }\r\n\r\n\r\n    const deleteMessageTemplate = async (titleToDelete) => {\r\n        const documentRef = doc(projectControlFirestore, 'MessageTemplate', email);\r\n        setIsDeleteLoading(true);\r\n        try {\r\n            // Fetch current data\r\n            const docSnap = await getDoc(documentRef);\r\n\r\n            if (docSnap.exists()) {\r\n                let messageTemplates = docSnap.data().messageTemplate || [];\r\n\r\n                // Filter out the item with the specified title\r\n                const updatedTemplates = messageTemplates.filter(template => template.title !== titleToDelete);\r\n\r\n                // Update the document with the new array\r\n                await updateDoc(documentRef, { messageTemplate: updatedTemplates });\r\n\r\n                console.log('Item successfully deleted');\r\n                setIsDeleteLoading(false);\r\n                handleClose();\r\n            } else {\r\n                console.log('Document does not exist');\r\n                setIsDeleteLoading(false);\r\n\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting item: ', error);\r\n            setIsDeleteLoading(false);\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={deleteMessageTemplateVisible}\r\n            onClose={handleClose}\r\n        >\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header >Delete Message Template?</Modal.Header>\r\n                <Modal.Body>\r\n                    <View style={{ flex: 1, }}>\r\n                        <Text style={{ fontWeight: 400, }}>Are you sure you want to delete the selected message template?</Text>\r\n                    </View>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"ghost\" space=\"2\">\r\n                        <Button style={{ width: 80, height: 36, }} onPress={handleClose} variant={'solid'} colorScheme={'warmGray'}>Cancel</Button>\r\n                        <Button isLoading={isDeleteLoading ? true : false} onPress={() => deleteMessageTemplate(selectedTitle)} style={{ padding: 16, height: 36, }} variant={'solid'} colorScheme={'error'}>Delete</Button>\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n};\r\n\r\nconst MessageTemplateItem = ({ setOriginalTitle, addVisible, titleInputRef, valueInputRef, setAddVisible, item, textInputRef, setPopoverOpen }) => {\r\n    const [isTemplateItemHovered, setIsTemplateItemHovered] = useState(false);\r\n    const [isTemplateMenuHovered, setIsTemplateMenuHovered] = useState(false);\r\n    const [isTemplateEditHovered, setIsTemplateEditHovered] = useState(false);\r\n    const [isTemplateDeleteHovered, setIsTemplateDeleteHovered] = useState(false);\r\n    const [templateMenuOpen, setTemplateMenuOpen] = useState(false);\r\n    const [currentItem, setCurrentItem] = useState(null);\r\n    const [addIsVisible, setIsAddVisible] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const onPress = (item) => {\r\n        textInputRef.current.value = item.value;\r\n        setPopoverOpen(false);\r\n    };\r\n\r\n    const onEditPress = (item) => {\r\n\r\n        setAddVisible(true);\r\n        // setCurrentItem(item);\r\n        setIsAddVisible(true);\r\n        setTemplateMenuOpen(false);\r\n        titleInputRef.current.value = item.title;\r\n        valueInputRef.current.value = item.value;\r\n        setOriginalTitle(item.title);\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n\r\n\r\n    //     if (addIsVisible == true) {\r\n    //         console.log(addIsVisible);\r\n    //         titleInputRef.current.value = currentItem.title;\r\n    //         valueInputRef.current.value = currentItem.value;\r\n    //     }\r\n    //     if (titleInputRef.current && valueInputRef.current) {\r\n    //         titleInputRef.current.value = currentItem.title;\r\n    //         valueInputRef.current.value = currentItem.value;\r\n    //     }\r\n    // }, [currentItem]);\r\n\r\n    const handleDeletePress = (title) => {\r\n\r\n        dispatch(setDeleteMessageTemplateVisible(true));\r\n        globalMessageTemplateSelectedTitle = title;\r\n    }\r\n\r\n\r\n    return (\r\n        <Pressable\r\n            onPress={() => onPress(item)}\r\n            onHoverIn={() => setIsTemplateItemHovered(true)}\r\n            onHoverOut={() => setIsTemplateItemHovered(false)}\r\n            style={{\r\n                padding: 10,\r\n                backgroundColor: isTemplateItemHovered ? '#f2f2f2' : 'transparent',\r\n                flex: 1,\r\n                borderRadius: 5,\r\n            }}>\r\n            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                <Text style={{ fontWeight: '700', flex: 1, }} numberOfLines={1} ellipsizeMode='tail'>{item.title}</Text>\r\n                <Popover\r\n                    isOpen={templateMenuOpen}\r\n                    onClose={() => setTemplateMenuOpen(false)}\r\n                    trigger={(triggerProps) => {\r\n                        return <Pressable\r\n                            {...triggerProps}\r\n                            onPress={() => setTemplateMenuOpen(true)}\r\n                            onHoverIn={() => setIsTemplateMenuHovered(true)}\r\n                            onHoverOut={() => setIsTemplateMenuHovered(false)}\r\n                            style={{ backgroundColor: isTemplateMenuHovered ? '#dedede' : 'transparent', padding: 5, justifyContent: 'center', borderRadius: 5, }}>\r\n                            <Entypo size={16} name='dots-three-horizontal' color='#171717' />\r\n                        </Pressable>\r\n                    }}\r\n\r\n                >\r\n                    <Popover.Content>\r\n\r\n                        <Pressable\r\n                            onPress={() => onEditPress(item)}\r\n                            onHoverIn={() => setIsTemplateEditHovered(true)}\r\n                            onHoverOut={() => setIsTemplateEditHovered(false)} style={{ flex: 1, width: 50, backgroundColor: isTemplateEditHovered ? '#dedede' : 'white', padding: 5, }} focusable={false}>\r\n                            <Text>Edit</Text>\r\n                        </Pressable>\r\n\r\n                        <Pressable\r\n                            onPress={() => handleDeletePress(item.title)}\r\n                            onHoverIn={() => setIsTemplateDeleteHovered(true)}\r\n                            onHoverOut={() => setIsTemplateDeleteHovered(false)} style={{ flex: 1, width: 50, backgroundColor: isTemplateDeleteHovered ? '#dedede' : 'white', padding: 5, }} focusable={false}>\r\n                            <Text>Delete</Text>\r\n                        </Pressable>\r\n\r\n                    </Popover.Content>\r\n                </Popover>\r\n            </View>\r\n            <Text style={{ fontWeight: '400', fontSize: 12, }} numberOfLines={1} ellipsizeMode='tail'>{item.value}</Text>\r\n        </Pressable>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst MessageTemplate = ({ textInputRef }) => {\r\n    const dispatch = useDispatch();\r\n    const [isTemplateHovered, setIsTemplateHovered] = useState(false);\r\n    const [isAddHovered, setIsAddHovered] = useState(false);\r\n    const [popoverOpen, setPopoverOpen] = useState(false);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [addVisible, setAddVisible] = useState(false);\r\n\r\n    const [isCancelHovered, setIsCancelHovered] = useState(false);\r\n    const [isSaveHovered, setIsSaveHovered] = useState(false);\r\n    const [originalTitle, setOriginalTitle] = useState('');\r\n\r\n\r\n    const [saveLoading, setSaveLoading] = useState(false);\r\n\r\n    const [templateData, setTemplateData] = useState([]);\r\n\r\n    const searchInputRef = useRef(null);\r\n    const titleInputRef = useRef(null);\r\n    const valueInputRef = useRef(null);\r\n\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n    const data = [\r\n        { title: 'Message 1', value: 'Sample Message 1' },\r\n        { title: 'Message 2', value: 'Sample Message 2' },\r\n        { title: 'Message 3', value: 'Sample Message 3' },\r\n    ];\r\n\r\n\r\n\r\n    const saveMessageTemplate = async () => {\r\n        setSaveLoading(true);\r\n        const documentRef = doc(projectControlFirestore, 'MessageTemplate', email);\r\n\r\n        try {\r\n            // Fetch current data\r\n            const docSnap = await getDoc(documentRef);\r\n\r\n            let messageTemplates = [];\r\n            const newTitle = titleInputRef.current?.value;\r\n            const newValue = valueInputRef.current?.value;\r\n\r\n            if (newTitle && newValue) {\r\n                if (docSnap.exists()) {\r\n                    // Document exists, get the current templates\r\n                    messageTemplates = docSnap.data().messageTemplate || [];\r\n\r\n                    // Find index based on the original title\r\n                    const index = messageTemplates.findIndex(template => template.title === originalTitle);\r\n\r\n                    if (index !== -1) {\r\n                        // Update existing template\r\n                        messageTemplates[index] = { title: newTitle, value: newValue };\r\n                    } else {\r\n                        // Add new template if original title does not exist\r\n                        messageTemplates.push({ title: newTitle, value: newValue });\r\n                    }\r\n                } else {\r\n                    // Document does not exist, create a new array with the new template\r\n                    console.log('Creating a new document');\r\n                    messageTemplates = [{ title: newTitle, value: newValue }];\r\n                }\r\n\r\n                // Update or set the document\r\n                await setDoc(documentRef, { messageTemplate: messageTemplates }, { merge: true });\r\n\r\n                console.log('Document successfully updated or created');\r\n            } else {\r\n                console.log('Title or value is empty');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating or creating document: ', error);\r\n        } finally {\r\n            setSaveLoading(false);\r\n            handleCancelPressed();\r\n        }\r\n    };\r\n\r\n\r\n    const handleSearch = (text) => {\r\n        setSearchText(text);\r\n        const filtered = templateData.filter(item =>\r\n            item.title.toLowerCase().includes(text.toLowerCase()) ||\r\n            item.value.toLowerCase().includes(text.toLowerCase())\r\n        );\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const handlePopoverClose = () => {\r\n        setPopoverOpen(false);\r\n        setAddVisible(false);\r\n        setIsAddHovered(false);\r\n    };\r\n\r\n    const handleCancelPressed = () => {\r\n        setIsAddHovered(false);\r\n        setAddVisible(false);\r\n        setIsCancelHovered(false)\r\n        setIsSaveHovered(false)\r\n        titleInputRef.current.clear();\r\n        valueInputRef.current.clear();\r\n\r\n    };\r\n\r\n    const renderItem = ({ item }) => {\r\n        return <MessageTemplateItem setOriginalTitle={setOriginalTitle} addVisible={addVisible} titleInputRef={titleInputRef} valueInputRef={valueInputRef} setAddVisible={setAddVisible} item={item} textInputRef={textInputRef} setPopoverOpen={setPopoverOpen} />;\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectControlFirestore, \"MessageTemplate\", email);\r\n\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                let arrayFieldData = docSnap.data().messageTemplate;\r\n\r\n                // Sort the array by title\r\n                arrayFieldData.sort((a, b) => {\r\n                    let titleA = a.title.toUpperCase(); // ignore upper and lowercase\r\n                    let titleB = b.title.toUpperCase(); // ignore upper and lowercase\r\n                    if (titleA < titleB) {\r\n                        return -1;\r\n                    }\r\n                    if (titleA > titleB) {\r\n                        return 1;\r\n                    }\r\n                    // titles must be equal\r\n                    return 0;\r\n                });\r\n\r\n                setTemplateData(arrayFieldData);\r\n            } else {\r\n                console.log(\"No such document!\");\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching document:\", error);\r\n        });\r\n\r\n        // Cleanup subscription on unmount\r\n        return () => unsubscribe();\r\n    }, [popoverOpen]);\r\n\r\n    const handleDeleteMessageTemplateClose = () => {\r\n\r\n        dispatch(setDeleteMessageTemplateVisible(false));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <DeleteMessageTemplateYesNo handleDeleteMessageTemplateClose={handleDeleteMessageTemplateClose} />\r\n            <Popover\r\n                isOpen={popoverOpen}\r\n                onClose={handlePopoverClose}\r\n                initialFocusRef={searchInputRef}\r\n                finalFocusRef={textInputRef}\r\n                placement={'top'}\r\n                trigger={(triggerProps) => {\r\n                    return <Pressable\r\n                        focusable={false}\r\n                        {...triggerProps}\r\n                        onPress={() => setPopoverOpen(true)}\r\n                        onHoverIn={() => setIsTemplateHovered(true)}\r\n                        onHoverOut={() => setIsTemplateHovered(false)}\r\n                        style={({ pressed }) => [\r\n                            {\r\n                                bottom: 0,\r\n                                right: 100,\r\n                                position: 'absolute',\r\n                                borderRadius: 20,\r\n                                opacity: pressed ? 0.5 : 1\r\n                            }\r\n                        ]}\r\n\r\n                    >\r\n                        <Ionicons name=\"chatbox-ellipses-outline\" size={24} color={isTemplateHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n                    </Pressable>\r\n                }} >\r\n                <Popover.Content w={400} marginRight={10} >\r\n                    <Popover.Arrow />\r\n                    <View style={{ display: addVisible ? 'flex' : 'none', }}><Popover.Header backgroundColor={'white'}>\r\n                        <View style={{ flexDirection: 'row', flex: 1 }}>\r\n                            <Text style={{ fontWeight: 700, fontSize: 16, flex: 1 }}>Create a message template</Text>\r\n                        </View>\r\n                    </Popover.Header>\r\n                        <Popover.Body backgroundColor={'white'} height={250}>\r\n                            <Text style={{ fontWeight: 700, }}>Title</Text>\r\n                            <TextInput\r\n                                ref={titleInputRef}\r\n                                placeholder='Input Title'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 40, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5 }} />\r\n                            <br />\r\n                            <Text style={{ fontWeight: 700, }}>Message</Text>\r\n                            <TextInput\r\n                                multiline\r\n                                ref={valueInputRef}\r\n                                placeholder='Input Message'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 100, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5 }} />\r\n\r\n                        </Popover.Body>\r\n                        <Popover.Footer backgroundColor={'white'}>\r\n                            <View style={{ height: 30, flexDirection: 'row', justifyContent: 'center', }}>\r\n                                <Pressable\r\n                                    onHoverIn={() => setIsCancelHovered(true)}\r\n                                    onHoverOut={() => setIsCancelHovered(false)}\r\n                                    onPress={handleCancelPressed}\r\n                                    style={{ backgroundColor: isCancelHovered ? '#DADADA' : 'white', width: 60, borderRadius: 5, padding: 5, borderWidth: 1, borderColor: '#DADDE1', marginHorizontal: 5, }}>\r\n                                    <Text style={{ textAlign: 'center', fontWeight: 500, }}>Cancel</Text>\r\n                                </Pressable>\r\n\r\n                                <Pressable\r\n                                    onPress={saveMessageTemplate}\r\n                                    onHoverIn={() => setIsSaveHovered(true)}\r\n                                    onHoverOut={() => setIsSaveHovered(false)}\r\n                                    style={{ backgroundColor: isSaveHovered ? '#107a37' : '#16A34A', width: 60, borderRadius: 5, padding: 5, borderWidth: 1, borderColor: '#DADDE1', marginHorizontal: 5, }}>\r\n                                    {saveLoading ?\r\n                                        (<Spinner\r\n                                            animating\r\n                                            size=\"sm\"\r\n                                            color={'white'}\r\n                                        />) :\r\n                                        (\r\n                                            <Text style={{ textAlign: 'center', color: 'white', fontWeight: 500, }}>Save</Text>\r\n                                        )}\r\n                                </Pressable>\r\n                            </View>\r\n                        </Popover.Footer>\r\n                    </View><View style={{ display: !addVisible ? 'flex' : 'none', }}><Popover.Header backgroundColor={'white'}>\r\n                        <View style={{ flexDirection: 'row', flex: 1 }}>\r\n                            <Text style={{ fontWeight: 700, fontSize: 16, flex: 1 }}>Message Template</Text>\r\n                            <Pressable focusable={false} onPress={() => setAddVisible(true)} onHoverIn={() => setIsAddHovered(true)} onHoverOut={() => setIsAddHovered(false)}>\r\n                                <Text style={{ fontWeight: 400, fontSize: 16, color: '#1B81C2', textDecorationLine: isAddHovered ? 'underline' : 'none' }}>+ ADD</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </Popover.Header>\r\n                        <Popover.Body backgroundColor={'white'} height={300}>\r\n                            <TextInput\r\n                                ref={searchInputRef}\r\n                                placeholder='Search'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 40, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5, marginBottom: 5, }}\r\n                                keyboardType='search'\r\n                                onChangeText={handleSearch}\r\n                                value={searchText} />\r\n                            {templateData.length > 0 || filteredData.length > 0 ? (\r\n                                <FlatList\r\n                                    style={{ height: 100, borderBottomLeftRadius: 5 }}\r\n                                    renderItem={renderItem}\r\n                                    keyExtractor={item => item.title.toString()}\r\n                                    data={searchText ? filteredData : templateData} />\r\n                            ) : (\r\n                                <Text style={{ fontWeight: 700, alignSelf: 'center', }}>No message template found</Text>\r\n                            )}\r\n\r\n                        </Popover.Body>\r\n                    </View>\r\n                </Popover.Content>\r\n            </Popover>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst FileDisplay = ({ file, onRemove }) => {\r\n    const iconSize = 24;\r\n    if (!file) return null;  // Define the icon size\r\n\r\n\r\n\r\n\r\n    const getFileIcon = (type) => {\r\n        if (type.includes('pdf')) {\r\n            return <MaterialIcons name={'picture-as-pdf'} size={iconSize} color=\"#FF0000\" />; // Red for PDF\r\n        }\r\n        if (type.includes('msword') || type.includes('wordprocessingml')) {\r\n            return <MaterialCommunityIcons name={'microsoft-word'} size={iconSize} color=\"#2B579A\" />; // Blue for Word\r\n        }\r\n        if (type.includes('vnd.ms-excel') || type.includes('spreadsheetml') || type === 'text/csv') {\r\n            return <MaterialCommunityIcons name={'microsoft-excel'} size={iconSize} color=\"#217346\" />; // Green for Excel and CSV\r\n        }\r\n        if (type.includes('rar') || type.includes('x-rar-compressed') || type.includes('x-compressed')) {\r\n            return <FastImage\r\n                source={{ uri: require('../../assets/rar_icon.png'), priority: FastImage.priority.high }}\r\n                style={{\r\n                    width: 24,\r\n                    height: 24,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.cover}\r\n            />; // Color of your choice for RAR files\r\n        }\r\n\r\n        return <MaterialIcons name=\"insert-drive-file\" size={iconSize} color=\"black\" />; // Default color for others\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', margin: 5 }}>\r\n            {getFileIcon(file.type)}\r\n            <Text style={{ marginLeft: 10 }}>{file.name}</Text>\r\n            <Pressable onPress={onRemove}>\r\n                <MaterialIcons name=\"close\" size={20} color=\"black\" />\r\n            </Pressable>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst ChatInputText = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n\r\n    const [isSendHovered, setIsSendHovered] = useState(false);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [selectedFilePreview, setSelectedFilePreview] = useState(null);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [imageUri, setImageUri] = useState(null);\r\n    const [fileUri, setFileUri] = useState(null);\r\n    const [fileName, setFileName] = useState('');\r\n    const [isSendImageHovered, setIsSendImageHovered] = useState(false);\r\n    const [isSendAttachmentHovered, setIsSendAttachmentHovered] = useState(false);\r\n    const [sendIsLoading, setSendIsLoading] = useState(false);\r\n    const textInputRef = useRef(null);\r\n\r\n    const removeImage = () => {\r\n        setImageUri(null);\r\n        setSelectedImage(null);\r\n        setFileName(null);\r\n\r\n    };\r\n\r\n    const removeFile = () => {\r\n        setSelectedFile(null);\r\n        setSelectedFilePreview(null);\r\n        setFileUri(null);\r\n        setFileName(null);\r\n\r\n\r\n    };\r\n\r\n    const selectFile = async () => {\r\n        const maxFileSize = 10 * 1024 * 1024; // 5MB in bytes\r\n\r\n        if (Platform.OS === 'web') {\r\n            return new Promise((resolve, reject) => {\r\n                const input = document.createElement('input');\r\n                input.type = 'file';\r\n                input.accept = '.pdf, .doc, .docx, .xls, .xlsx, .rar'; // Acceptable file types\r\n                input.onchange = () => {\r\n                    const file = input.files[0];\r\n\r\n                    if (file) {\r\n                        if (![\r\n                            'application/pdf',\r\n                            'application/msword',\r\n                            'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n                            'application/vnd.ms-excel',\r\n                            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                            'application/x-rar-compressed',\r\n                            'application/x-compressed',\r\n                            'text/csv'\r\n                        ].includes(file.type)) {\r\n                            alert('File type not allowed');\r\n                            reject('File type not allowed');\r\n                            return;\r\n                        }\r\n\r\n                        if (file.size > maxFileSize) {\r\n                            alert('File size should be less than 10MB');\r\n                            reject('File size should be less than 10MB');\r\n                            return;\r\n                        }\r\n                        removeImage();\r\n                        // Read the file as a Data URL and set it in the state\r\n                        const reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            setFileUri(e.target.result);\r\n                            resolve(file);\r\n                            setSelectedFile(file);\r\n                            setSelectedFilePreview({ name: file.name, type: file.type });\r\n                            setFileName(file.name);\r\n                            textInputRef.current.focus();\r\n                        };\r\n                        reader.onerror = (e) => {\r\n                            reject(e);\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                };\r\n                input.click();\r\n            });\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                launchImageLibrary({ mediaType: 'photo' }, (response) => {\r\n                    if (response.didCancel) {\r\n                        reject('User cancelled image picker');\r\n                    } else if (response.errorCode) {\r\n                        reject(response.errorMessage);\r\n                    } else {\r\n                        const asset = response.assets[0];\r\n\r\n                        if (!asset.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if (asset.fileSize > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('File size should be less than 10MB');\r\n                            return;\r\n                        }\r\n\r\n                        const selectedImageUri = asset.uri;\r\n                        const fileName = asset.fileName || 'Unknown name';\r\n                        resolve({ uri: selectedImageUri, name: fileName });\r\n                        setImageUri(selectedImageUri); // Set imageUri here\r\n                        console.log(`File name: ${fileName}`);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const selectImage = async () => {\r\n        const maxFileSize = 10 * 1024 * 1024; // 5MB in bytes\r\n\r\n        if (Platform.OS === 'web') {\r\n\r\n            return new Promise((resolve, reject) => {\r\n                const input = document.createElement('input');\r\n                input.type = 'file';\r\n                input.accept = 'image/*';\r\n                input.onchange = () => {\r\n                    const file = input.files[0];\r\n                    if (file) {\r\n\r\n                        if (!file.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if (file.size > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('File size should be less than 10MB');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        removeFile();\r\n                        const reader = new FileReader();\r\n                        reader.readAsDataURL(file);\r\n                        reader.onload = () => {\r\n                            resolve({ dataUrl: reader.result, name: file.name });\r\n                            setImageUri(reader.result); // Set imageUri here\r\n                            setFileName(file.name);\r\n                            console.log(`File name: ${file.name}`);\r\n                        };\r\n                        setSelectedImage(file);\r\n                        reader.onerror = error => reject(error);\r\n                    }\r\n                };\r\n                input.click();\r\n            });\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                launchImageLibrary({ mediaType: 'photo' }, (response) => {\r\n                    if (response.didCancel) {\r\n                        reject('User cancelled image picker');\r\n                    } else if (response.errorCode) {\r\n                        reject(response.errorMessage);\r\n                    } else {\r\n                        const asset = response.assets[0];\r\n\r\n                        if (!asset.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n                            return;\r\n                        }\r\n\r\n                        if (asset.fileSize > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('Only image files are allowed');\r\n                            return;\r\n                        }\r\n\r\n                        const selectedImageUri = asset.uri;\r\n                        const fileName = asset.fileName || 'Unknown name';\r\n                        resolve({ uri: selectedImageUri, name: fileName });\r\n                        setImageUri(selectedImageUri); // Set imageUri here\r\n                        console.log(`File name: ${fileName}`);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const resizeImage = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = (event) => {\r\n                const img = new Image();\r\n                img.src = event.target.result;\r\n                img.onload = () => {\r\n                    const canvas = document.createElement('canvas');\r\n                    const ctx = canvas.getContext('2d');\r\n\r\n                    // Set your desired image size here\r\n                    const maxWidth = 800; // Example value\r\n                    const maxHeight = 800; // Example value\r\n                    let width = img.width;\r\n                    let height = img.height;\r\n\r\n                    if (width > height) {\r\n                        if (width > maxWidth) {\r\n                            height *= maxWidth / width;\r\n                            width = maxWidth;\r\n                        }\r\n                    } else {\r\n                        if (height > maxHeight) {\r\n                            width *= maxHeight / height;\r\n                            height = maxHeight;\r\n                        }\r\n                    }\r\n\r\n                    canvas.width = width;\r\n                    canvas.height = height;\r\n                    ctx.drawImage(img, 0, 0, width, height);\r\n                    canvas.toBlob((blob) => {\r\n                        resolve(new File([blob], file.name, {\r\n                            type: 'image/jpeg',\r\n                            lastModified: Date.now()\r\n                        }));\r\n                    }, 'image/jpeg', 0.7); // Adjust the quality (0.7 is a good balance between quality and file size)\r\n                };\r\n                img.onerror = error => reject(error);\r\n            };\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    };\r\n\r\n    const addFileMessage = async () => {\r\n        setSendIsLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeForFile = moment(datetime).format('MMDDYYYYHHmmss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const inputValue = textInputRef.current?.value;\r\n\r\n        textInputRef.current.clear();\r\n        textInputRef.current.focus();\r\n        removeFile();\r\n\r\n        const storage = getStorage(projectExtensionFirebase);\r\n\r\n        if (fileUri) { // Assuming you have a fileUri state for the selected file\r\n\r\n            try {\r\n\r\n                let fileUrl = null;\r\n                if (fileUri) {\r\n                    // Upload file and get URL\r\n                    const fileRef = ref(storage, `ChatFiles/${selectedChatData.id}/C-HUB_${formattedTimeForFile}/${fileName}`);\r\n                    const uploadResult = await uploadBytes(fileRef, selectedFile);\r\n                    fileUrl = await getDownloadURL(uploadResult.ref);\r\n                }\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime,\r\n                    ip: ip,\r\n                    ipCountry: ipCountry,\r\n                    file: {\r\n                        name: fileName,\r\n                        type: 'attachment', // Set the file type\r\n                        url: fileUrl,\r\n                    } // Include file URL if available\r\n                });\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: `Sent an attachment`,\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const addImageMessage = async () => {\r\n        setSendIsLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeForFile = moment(datetime).format('MMDDYYYYHHmmss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const inputValue = textInputRef.current?.value;\r\n\r\n\r\n\r\n        const storage = getStorage(projectExtensionFirebase);\r\n\r\n        if (imageUri) { // Assuming imageFile holds the file to be uploaded\r\n\r\n            textInputRef.current.clear();\r\n            textInputRef.current.focus();\r\n            removeImage();\r\n\r\n            try {\r\n                let imageUrl = null;\r\n                if (imageUri) {\r\n                    // Upload image and get URL\r\n                    const resizedImage = await resizeImage(selectedImage);\r\n                    const imageRef = ref(storage, `ChatFiles/${selectedChatData.id}/C-HUB_${formattedTimeForFile}/${fileName}`);\r\n                    const uploadResult = await uploadBytes(imageRef, resizedImage);\r\n                    imageUrl = await getDownloadURL(uploadResult.ref);\r\n                }\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime,\r\n                    ip: ip,\r\n                    ipCountry: ipCountry,\r\n                    file: {\r\n                        name: fileName,\r\n                        type: 'image',\r\n                        url: imageUrl,\r\n                    } // Include image URL if available\r\n                });\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: 'Sent an image',\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const addMessage = async () => {\r\n        setSendIsLoading(true);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const inputValue = textInputRef.current?.value;\r\n\r\n        textInputRef.current.clear();\r\n        textInputRef.current.focus();\r\n\r\n        if (inputValue !== '') {\r\n            const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n            try {\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime, // Using the fetched timestamp\r\n                    ip: ip, // IP Address\r\n                    ipCountry: ipCountry // Country of the IP Address\r\n                });\r\n\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: inputValue,\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n\r\n    };\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const handleKeyPress = (e) => {\r\n        // Define a breakpoint for mobile resolution, e.g., 768 pixels\r\n        const mobileBreakpoint = 768;\r\n\r\n        // Check if the screen width is less than or equal to the mobile breakpoint\r\n        if (screenWidth >= mobileBreakpoint) {\r\n            // Check if 'Enter' key is pressed\r\n            if (e.nativeEvent.key === 'Enter' && !e.nativeEvent.shiftKey) {\r\n                e.preventDefault(); // Prevent the default behavior of adding a new line\r\n                handleSendMessage();\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const handleSendMessage = () => {\r\n\r\n        if (imageUri !== null) {\r\n            addImageMessage();\r\n        }\r\n        if (fileUri !== null) {\r\n            addFileMessage();\r\n        }\r\n        else {\r\n            addMessage();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <View style={{ width: '98%', flexDirection: 'row', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 10, }}>\r\n\r\n            <View style={{ flexDirection: 'column', flex: 1, }}>\r\n\r\n                {fileUri &&\r\n                    (\r\n                        <FileDisplay file={selectedFilePreview} onRemove={removeFile} />\r\n                    )}\r\n\r\n                {imageUri && (\r\n                    <View style={{\r\n                        position: 'relative', // Make sure the parent View is positioned relative\r\n                        width: 70,\r\n                        height: 70,\r\n                        borderRadius: 5,\r\n                        overflow: 'hidden', // This ensures that nothing spills out of the container\r\n                        borderWidth: 1,\r\n                        borderColor: '#DADDE1',\r\n                        margin: 2,\r\n                    }}>\r\n                        <FastImage\r\n                            source={{ uri: imageUri }}\r\n                            style={{ width: '100%', height: '100%', borderRadius: 10 }}\r\n                            resizeMode={FastImage.resizeMode.cover}\r\n                        />\r\n                        <Pressable\r\n                            onPress={removeImage}\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                right: 0,\r\n                                backgroundColor: 'rgba(255, 255, 255, 0.6)', // Semi-transparent background for better visibility\r\n                                borderRadius: 12 // Circular shape\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"close\" size={20} color=\"black\" />\r\n                        </Pressable>\r\n                    </View>\r\n\r\n                )}\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <View style={{ marginHorizontal: 5, marginTop: 5, }}>\r\n                        <FastImage\r\n                            source={{ uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FRMJ%20Round.jpg?alt=media&token=90d7f2fe-d9cd-4a6f-9a6b-bc39fe2b33b2', priority: FastImage.priority.high }}\r\n                            style={{\r\n                                width: 30,\r\n                                height: 30,\r\n                                borderRadius: 15,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.cover}\r\n                        />\r\n                    </View>\r\n                    <TextInput\r\n                        ref={textInputRef}\r\n                        multiline\r\n                        placeholder='Send a message...'\r\n                        placeholderTextColor={'#9B9E9F'}\r\n                        onKeyPress={handleKeyPress}\r\n                        style={{ outlineStyle: 'none', width: '100%', height: 80, alignSelf: 'center', padding: 10 }}\r\n                    />\r\n                    <Pressable\r\n                        focusable={false}\r\n                        onPress={() => sendIsLoading ? null : handleSendMessage()}\r\n                        onHoverIn={() => setIsSendHovered(true)}\r\n                        onHoverOut={() => setIsSendHovered(false)}\r\n                        style={({ pressed }) => [\r\n                            {\r\n                                padding: 10,\r\n                                top: 20,\r\n                                right: 10,\r\n                                position: 'absolute',\r\n                                borderRadius: 20,\r\n                                backgroundColor: isSendHovered ? '#e8f4ff' : 'transparent', // Change color on hover\r\n                                opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                            }\r\n                        ]}\r\n                    >\r\n                        {sendIsLoading ? <Spinner\r\n                            animating\r\n                            size=\"sm\"\r\n                            color={\"#95BCF9\"}\r\n                        /> :\r\n                            <MaterialIcons name=\"send\" size={24} color=\"#95BCF9\" />\r\n                        }\r\n                    </Pressable>\r\n                </View>\r\n            </View>\r\n\r\n            <Pressable\r\n                onHoverIn={() => setIsSendImageHovered(true)}\r\n                onHoverOut={() => setIsSendImageHovered(false)}\r\n                style={({ pressed }) => [\r\n                    {\r\n                        padding: 10,\r\n                        bottom: -10,\r\n                        right: 125,\r\n                        position: 'absolute',\r\n                        borderRadius: 20,\r\n                        opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                    }\r\n                ]}\r\n                onPress={selectImage}\r\n            >\r\n                <Ionicons name=\"image-outline\" size={24} color={isSendImageHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n            </Pressable>\r\n\r\n            <Pressable\r\n                onHoverIn={() => setIsSendAttachmentHovered(true)}\r\n                onHoverOut={() => setIsSendAttachmentHovered(false)}\r\n                style={({ pressed }) => [\r\n                    {\r\n                        padding: 10,\r\n                        bottom: -9,\r\n                        right: 155,\r\n                        position: 'absolute',\r\n                        borderRadius: 20,\r\n                        opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                    }\r\n                ]}\r\n                onPress={selectFile}\r\n            >\r\n                <MaterialIcons name=\"attach-file\" size={24} color={isSendAttachmentHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n            </Pressable>\r\n\r\n            <MessageTemplate textInputRef={textInputRef} />\r\n\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst ChatListItem = ({ item, onPress, isActive, messageUnread, formattedDate, chatListData }) => {\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    const [chatListStepImageUrl, setChatListStepImageUrl] = useState(null);\r\n    const [textFirst, setTextFirst] = useState('');\r\n    const [textLast, setTextLast] = useState('');\r\n    const dispatch = useDispatch();\r\n    const [isUnreadHovered, setIsUnreadHovered] = useState(false);\r\n    const [isUnreadVisible, setIsUnreadVisible] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [customerData, setCustomerData] = useState({});\r\n\r\n    const carName = item.carData && item.carData.carName ? item.carData.carName : (item.vehicle && item.vehicle.carName ? item.vehicle.carName : '');\r\n    const updateChatToUnread = async () => {\r\n        dispatch(setActiveChatId(''));\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setSelectedChatData([]));\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", item.id);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                read: false,\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n    };\r\n\r\n    const hoverIn = () => {\r\n        setIsHovered(true)\r\n    };\r\n\r\n    const hoverOut = () => {\r\n        setIsHovered(false);\r\n    };\r\n\r\n    const hoverUnreadIn = () => {\r\n        setIsHovered(true)\r\n        setIsUnreadHovered(true)\r\n    };\r\n\r\n    const hoverUnreadOut = () => {\r\n        setIsUnreadHovered(false)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // getChatListStepImageUrl();\r\n        const folderName = item.carData && item.carData.stockID ? item.carData.stockID : (item.vehicle && item.vehicle.carId ? item.vehicle.carId : '');\r\n        const storage = getStorage(projectExtensionFirebase);\r\n        const imageRef = ref(storage, `${folderName}/0`); // Ensure this path is correct\r\n\r\n        getDownloadURL(imageRef)\r\n            .then((url) => {\r\n                setImageUrl(url);\r\n            })\r\n            .catch((error) => {\r\n                if (error.code === 'storage/object-not-found') {\r\n                    // Handle the 'object not found' error.\r\n                    setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n                } else {\r\n                    // Handle other errors differently\r\n\r\n                    setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n\r\n                }\r\n            });\r\n\r\n        const collectionPath = 'accounts';\r\n        const docId = item.participants.customer; // Ensure this is a valid document ID\r\n\r\n        const docRef = doc(projectExtensionFirestore, collectionPath, docId);\r\n\r\n        const unsubscribe = onSnapshot(docRef, (doc) => {\r\n            if (doc.exists()) {\r\n                const data = doc.data();\r\n                setCustomerData(data ? data : {});\r\n                setTextFirst(data.textFirst ? data.textFirst : '');\r\n                setTextLast(data.textLast ? data.textLast : '');\r\n\r\n            } else {\r\n                console.log(\"Document not found\");\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching document: \", error);\r\n        });\r\n\r\n        // Clean up function to unsubscribe from the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const loadingCondition = !imageUrl || imageUrl == null || imageUrl == '' || imageUrl == undefined || !item;\r\n\r\n    const chatStepIconOn = require(`../../assets/chat_step/chat_step_${item.stepIndicator.value}_on.png`);\r\n    const chatStepIconOff = require(`../../assets/chat_step/chat_step_${item.stepIndicator.value}_off.png`);\r\n\r\n\r\n    const handlePress = () => {\r\n        onPress()\r\n\r\n        dispatch(setSelectedCustomerData(customerData));\r\n        globalCustomerFirstName = textFirst ? textFirst : '';\r\n        globalCustomerLastName = textLast ? textLast : '';\r\n        globalImageUrl = imageUrl ? imageUrl : '';\r\n        globalCustomerCarName = carName;\r\n        setIsHovered(false);\r\n        setIsUnreadHovered(false)\r\n\r\n\r\n    }\r\n\r\n    if (loadingCondition) {\r\n        return <SkeletonChatListLayout />\r\n    }\r\n    else {\r\n        return (\r\n            <Pressable\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                focusable={false}\r\n                style={{\r\n                    padding: 12,\r\n                    alignItems: 'flex-start', // Align items to the start of the button\r\n                    flexDirection: 'row',\r\n                    backgroundColor: isActive ? '#f2f2f2' : (isHovered ? '#f2f2f2' : 'white'),\r\n                    borderLeftColor: isActive ? '#0A9FDC' : 'transparent',\r\n                    borderRightColor: isActive ? '#0A9FDC' : 'transparent',\r\n                    borderLeftWidth: 2,\r\n                    borderRightWidth: 2,\r\n\r\n                }}\r\n                onPress={handlePress}\r\n            >\r\n                <View style={{ width: '20%', justifyContent: 'center', }}>\r\n                    {imageUrl ? (\r\n                        <FastImage\r\n                            source={{ uri: imageUrl, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                width: 60,\r\n                                height: 60,\r\n                                borderRadius: 30,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    ) : (\r\n                        <View\r\n                            style={{\r\n                                width: 60,\r\n                                height: 60,\r\n                                borderRadius: 30,\r\n                                backgroundColor: '#e0e0e0',\r\n                                marginRight: 12,\r\n                            }}\r\n                        />\r\n                    )}\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                    {!isHovered ? (<Text style={{ fontSize: 12, position: 'absolute', right: 10, color: messageUnread ? '#0A78BE' : '#90949C', fontWeight: messageUnread ? 700 : 400, }}>{formattedDate}</Text>) : (!item.read ? (<Text style={{ fontSize: 12, position: 'absolute', right: 10, color: messageUnread ? '#0A78BE' : '#90949C', fontWeight: messageUnread ? 700 : 400, }}>{formattedDate}</Text>) : null)}\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 14, width: '70%', overflow: 'hidden', fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#1C2B33' : '#586369', }}>{carName}</Text>\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 14, width: '80%', overflow: 'hidden', flex: 1, fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#1C2B33' : '#586369', }}>{`${textFirst} ${textLast}`}</Text>\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 12, width: '80%', overflow: 'hidden', flex: 1, fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#0A78BE' : '#90949c', }}>{item.lastMessageSender == item.participants.customer ? (item.lastMessage ? item.lastMessage : 'No message found') : (item.lastMessage ? `Sales: ${item.lastMessage}` : `Sales: No message found`)}</Text>\r\n                    {!item.read ? (\r\n                        <FastImage\r\n                            source={{ uri: chatStepIconOn, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                tintColor: 'rgba(128, 128, 128, 1)',\r\n                                width: 22,\r\n                                height: 20,\r\n                                position: 'absolute',\r\n                                right: 10,\r\n                                bottom: 0,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    ) : (\r\n                        <FastImage\r\n                            source={{ uri: chatStepIconOff, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                tintColor: 'rgba(128, 128, 128, 1)',\r\n                                width: 22,\r\n                                height: 20,\r\n                                position: 'absolute',\r\n                                right: 10,\r\n                                bottom: 0,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    )}\r\n\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        top: 10,\r\n                        padding: 10,\r\n                        alignSelf: 'center',\r\n                        fontSize: 12,\r\n                        overflow: 'hidden',\r\n                        flex: 1,\r\n                        fontWeight: messageUnread ? 700 : 400,\r\n                        color: messageUnread ? '#FF0000' : '#90949c',\r\n                    }}>\r\n                        {item.invoiceNumber && item.stepIndicator.value > 2 ? item.invoiceNumber : ''}\r\n                    </Text>\r\n\r\n                    {isHovered && item.read && (\r\n                        <Tooltip label=\"Mark as unread\" placement='right' openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                onHoverIn={hoverUnreadIn}\r\n                                onHoverOut={hoverUnreadOut}\r\n                                onPress={updateChatToUnread}\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    right: 0,\r\n                                    top: -10,\r\n                                    padding: 10,\r\n                                    alignSelf: 'center',\r\n                                }}\r\n\r\n                            >\r\n                                <MaterialIcons name=\"mark-as-unread\" size={22} color={isUnreadHovered ? \"#1B81C2\" : \"#BABABA\"} />\r\n                            </Pressable>\r\n                        </Tooltip>\r\n                    )}\r\n                </View>\r\n\r\n\r\n\r\n            </Pressable>\r\n        );\r\n    }\r\n\r\n\r\n};\r\n\r\nconst ChatList = ({ unreadButtonValue, activeButtonValue, }) => {\r\n\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const chatListLastVisible = useSelector((state) => state.chatListLastVisible);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const loadMoreLoading = useSelector((state) => state.loadMoreLoading);\r\n    const noMoreData = useSelector((state) => state.noMoreData);\r\n    const renderFooterRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const updateChatToRead = async () => {\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", activeChatId);\r\n        const user = projectControlAuth.currentUser\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        if (email !== '') {\r\n\r\n            try {\r\n                await updateDoc(docRef, {\r\n                    read: true,\r\n                    readBy: arrayUnion(email),\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const fetchChatMessages = () => {\r\n        if (!activeChatId) {\r\n            // Handle the case where there's no active chat ID\r\n        }\r\n        else {\r\n            dispatch(setChatMessagesData([]));\r\n            dispatch(setChatMessageBoxLoading(true));\r\n            updateChatToRead();\r\n\r\n            try {\r\n                // References to the document and its 'messages' subcollection\r\n                let activeInvoiceNumer;\r\n                const docRef = doc(projectExtensionFirestore, 'chats', activeChatId);\r\n\r\n                const messagesRef = collection(docRef, 'messages');\r\n\r\n                // Query for the 'messages' subcollection\r\n                const messagesQuery = query(messagesRef, orderBy('timestamp', 'desc'), limit(10));\r\n\r\n                // Listen to the document\r\n                const unsubscribeDoc = onSnapshot(docRef, (docSnapshot) => {\r\n                    if (docSnapshot.exists()) {\r\n                        const data = docSnapshot.data();\r\n                        // Add the document ID to the data\r\n                        const dataWithId = {\r\n                            ...data,\r\n                            id: docSnapshot.id\r\n                        };\r\n                        // Dispatch any action you need with the document data\r\n                        dispatch(setSelectedChatData(dataWithId));\r\n\r\n                        // Define and listen to the invoice document only after the chat document is confirmed to exist\r\n                        if (dataWithId.invoiceNumber || dataWithId.invoiceNumber == '') {\r\n                            const invoiceDocRef = doc(projectExtensionFirestore, 'IssuedInvoice', dataWithId.invoiceNumber);\r\n                            const unsubscribeInvoice = onSnapshot(invoiceDocRef, (invoiceDocSnapshot) => {\r\n                                if (invoiceDocSnapshot.exists()) {\r\n                                    const invoiceData = invoiceDocSnapshot.data();\r\n                                    // Add the document ID to the data\r\n                                    const invoiceDataWithId = {\r\n                                        ...invoiceData,\r\n                                        id: invoiceDocSnapshot.id\r\n                                    };\r\n                                    // Dispatch any action you need with the invoice document data\r\n                                    dispatch(setInvoiceData(invoiceDataWithId ? invoiceDataWithId : {}));\r\n\r\n                                } else {\r\n                                    // Handle the case where the invoice document does not exist\r\n                                    console.log('No Invoice Yet');\r\n                                    dispatch(setInvoiceData({}));\r\n                                }\r\n                            });\r\n\r\n                            // Cleanup function for the invoice listener\r\n                            return () => {\r\n                                unsubscribeInvoice();\r\n\r\n                            };\r\n                        } else {\r\n                            dispatch(setInvoiceData({}));\r\n                            console.log('No Invoice Yet');\r\n                        }\r\n\r\n                    }\r\n\r\n                });\r\n                const unsubscribeMessages = onSnapshot(messagesQuery, (querySnapshot) => {\r\n                    let messages = [];\r\n                    querySnapshot.forEach((doc) => {\r\n                        const data = doc.data();\r\n                        const timestamp = data.timestamp ? data.timestamp.toString() : null;\r\n                        messages.push({ id: doc.id, ...data, timestamp });\r\n                    });\r\n\r\n                    dispatch(setChatMessagesData(messages));\r\n                    dispatch(setChatMessageBoxLoading(false));\r\n                    globalMessagesLastVisible = querySnapshot.docs[querySnapshot.docs.length - 1];\r\n                });\r\n\r\n                // Return a cleanup function\r\n                return () => {\r\n                    unsubscribeDoc();\r\n                    unsubscribeMessages();\r\n                    // if (activeInvoiceNumer && activeInvoiceNumer !== '') {\r\n                    //     unsubscribeInvoice();\r\n                    // }\r\n                };\r\n            } catch (error) {\r\n                console.error(\"Error setting up real-time messages: \", error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleLoadMore = () => {\r\n        dispatch(setLoadMoreLoading(true));\r\n\r\n        let nextQuery;\r\n        if (!globalLastVisible) {\r\n            // No more data to load or globalLastVisible is undefined\r\n            console.log(\"No more data to load or globalLastVisible is undefined\");\r\n            setTimeout(() => {\r\n                dispatch(setLoadMoreLoading(false));\r\n                dispatch(setNoMoreData(true));\r\n            }, 0);\r\n            return;\r\n        }\r\n        else {\r\n\r\n            if (chatListData.length >= 10) {\r\n                if (unreadButtonValue == true) {\r\n\r\n                    if (activeButtonValue == 0) {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    else {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                where('read', '==', false),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    if (activeButtonValue == 0) {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    else {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            else {\r\n                dispatch(setNoMoreData(true));\r\n                dispatch(setLoadMoreLoading(false));\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        if (chatListData.length < 10) {\r\n            setTimeout(() => {\r\n                dispatch(setLoadMoreLoading(false));\r\n                dispatch(setNoMoreData(true));\r\n            }, 0);\r\n        }\r\n\r\n        else {\r\n            try {\r\n                const unsubscribe = onSnapshot(nextQuery, (snapshot) => {\r\n                    if (snapshot.empty) {\r\n                        // Handle the case when there's no more data\r\n                        console.log(\"No more data to load\");\r\n                        setTimeout(() => {\r\n                            dispatch(setLoadMoreLoading(false));\r\n                            dispatch(setNoMoreData(true));\r\n                            globalLastVisible = null;\r\n                        }, 0);  // Delay setting loading and no more data flags\r\n                        return;\r\n                    }\r\n\r\n                    const chatsData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        chatsData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n\r\n                    // Append new data to the existing list\r\n\r\n                    setTimeout(() => {\r\n                        dispatch(setChatListData([...chatListData, ...chatsData]));\r\n                        dispatch(setLoadMoreLoading(false));\r\n                        globalLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n                    }, 0);\r\n\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data from Firebase:', error);\r\n                setTimeout(() => dispatch(setLoadMoreLoading(false)), 0);  // Ensure loading is set to false even if there's an error\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const unsubscribe = fetchChatMessages();\r\n\r\n        return () => {\r\n            if (unsubscribe) {\r\n                unsubscribe(); // Unsubscribe when the component unmounts\r\n            }\r\n        };\r\n\r\n    }, [activeChatId]);\r\n\r\n    const handleChatPress = async (customerId, chatId) => {\r\n        dispatch(setActiveChatId(chatId));\r\n        globalCustomerId = customerId;\r\n        globalChatId = chatId;\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setActiveChatId(''));\r\n    }, [unreadButtonValue])\r\n\r\n    const renderFooter = () => {\r\n        return (\r\n            <>\r\n                {!noMoreData && (\r\n                    <View style={{ paddingVertical: 20, borderTopWidth: 1, borderColor: \"#DADDE1\", height: 60, }}>\r\n                        {loadMoreLoading && (\r\n                            <Spinner\r\n                                animating\r\n                                size=\"sm\"\r\n                                color={'#7B9CFF'}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </>\r\n\r\n\r\n        );\r\n    };\r\n\r\n    const renderItem = ({ item }) => {\r\n\r\n        const isActive = item.id === activeChatId;\r\n        const messageUnread = !item.read;\r\n        const formattedDate = formatDate(item.lastMessageDate);\r\n\r\n        return (\r\n            <ChatListItem\r\n                chatListData={chatListData}\r\n                item={item}\r\n                onPress={() => handleChatPress(item.participants.customer, item.id)}\r\n                isActive={isActive}\r\n                messageUnread={messageUnread}\r\n                formattedDate={formattedDate}\r\n            />\r\n        );\r\n\r\n    };\r\n\r\n    if (chatListData.length < 1) {\r\n        return (\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }}>\r\n                <Text style={{ fontWeight: 700, alignSelf: 'center', }}>{unreadButtonValue ? 'No unread messages to show' : 'No messages to show'}</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <>\r\n                <FlatList\r\n                    style={{ height: 100, borderBottomLeftRadius: 5, }}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id.toString()}\r\n                    data={chatListData}\r\n                    initialNumToRender={1}\r\n                    maxToRenderPerBatch={10}\r\n                    windowSize={21}\r\n                    onEndReachedThreshold={0.05}\r\n                    removeClippedSubviews={true}\r\n                    ListFooterComponent={renderFooter}\r\n                    onEndReached={handleLoadMore}  // Implement this function\r\n                />\r\n\r\n            </>\r\n\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\nconst SearchChat = ({ lastVisible, setLastVisible, unreadButtonValue, activeButtonValue }) => {\r\n\r\n    const searchInputRef = useRef(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [clearVisible, setClearVisible] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const searchData = async ({ }) => {\r\n        let q;\r\n\r\n        const searchValue = searchInputRef.current?.value;\r\n        if (unreadButtonValue == true) {\r\n\r\n            if (activeButtonValue == 0) {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n            else {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        where('read', '==', false),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            if (activeButtonValue == 0) {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n            else {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        try {\r\n            const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                const chatsData = [];\r\n                snapshot.forEach((doc) => {\r\n                    chatsData.push({\r\n                        id: doc.id,\r\n                        ...doc.data(),\r\n                    });\r\n                });\r\n                dispatch(setChatListData(chatsData));\r\n                globalLastVisible = snapshot.docs[snapshot.docs.length - 1]\r\n\r\n\r\n            });\r\n\r\n            // Return the unsubscribe function to stop listening when necessary\r\n            return () => {\r\n                if (unsubscribe) {\r\n                    unsubscribe();\r\n                }\r\n            };\r\n        } catch (error) {\r\n            // Handle errors here\r\n            console.error('Error fetching data from Firebase:', error);\r\n        }\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n\r\n    //     searchData();\r\n\r\n    // }, [searchText])\r\n\r\n    useEffect(() => {\r\n        setSearchText('');\r\n        dispatch(setChatListSearchText(''));\r\n        globalSearchText = '';\r\n        searchInputRef.current.value = '';\r\n        setClearVisible(false);\r\n\r\n    }, [activeButtonValue, unreadButtonValue])\r\n\r\n    const handleSearchEnter = () => {\r\n        // setSortField('dateAdded');\r\n        // setIsSortActive(false)\r\n        if (searchInputRef.current?.value !== '') {\r\n            dispatch(setChatListSearchText(searchInputRef.current.value.trim()));\r\n            setSearchText(searchInputRef.current.value.trim());\r\n            globalSearchText = searchInputRef.current.value.trim();\r\n        }\r\n        else {\r\n            setSearchText('');\r\n            globalSearchText = '';\r\n            if (searchText == '') {\r\n                dispatch(setChatListSearchText(''));\r\n                searchData();\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleClearText = () => {\r\n        searchInputRef.current.clear();\r\n        setClearVisible(false);\r\n        if (searchText !== '') {\r\n            setSearchText(''); // Clear the text\r\n            dispatch(setChatListSearchText(''));\r\n            dispatch(setActiveChatId(''));\r\n            globalSearchText = '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', width: '100%', alignSelf: 'center', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5, margin: 10 }}>\r\n            <TextInput\r\n                ref={searchInputRef}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                placeholderTextColor='#9B9E9F'\r\n                underlineColorAndroid=\"transparent\"\r\n                style={{ flex: 1, height: 40, padding: 10, outlineStyle: 'none' }}\r\n                onChangeText={() => setClearVisible(true)}\r\n                keyboardType='search'\r\n            />\r\n            {clearVisible ? (\r\n                <Pressable\r\n                    focusable={false}\r\n                    onPress={handleClearText}\r\n                    style={({ pressed, hovered }) => [\r\n                        {\r\n                            borderRadius: 10,\r\n                            marginRight: 10,\r\n                            opacity: pressed ? 0.5 : 1, // Change opacity when pressed\r\n                            // Add hover effect\r\n                            backgroundColor: hovered ? '#ddd' : 'transparent',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <MaterialIcons name=\"close\" size={20} color=\"#000\" />\r\n                </Pressable>\r\n            ) : null}\r\n        </View>);\r\n}\r\n\r\nconst timelineData = [\r\n    { key: '1', title: 'Event 1', description: 'Description 1' },\r\n    { key: '2', title: 'Event 2', description: 'Description 2' },\r\n    // ... more events\r\n];\r\n\r\n// const TimelineItem = ({ title, description }) => (\r\n//     <View style={{ alignItems: 'center', marginRight: 20 }}>\r\n//         <View style={{ width: 10, height: 10, borderRadius: 5, backgroundColor: 'blue', marginBottom: 5 }} />\r\n//         <Text style={{ fontWeight: 'bold' }}>{title}</Text>\r\n//         <Text style={{ textAlign: 'center' }}>{description}</Text>\r\n//     </View>\r\n// );\r\n\r\n// const HorizontalTimeline = () => (\r\n//     <FlatList\r\n//         data={timelineData}\r\n//         renderItem={({ item }) => <TimelineItem title={item.title} description={item.description} />}\r\n//         horizontal\r\n//         showsHorizontalScrollIndicator={false}\r\n//         style={{ flexDirection: 'row', padding: 10 }}\r\n//     />\r\n// );\r\n\r\nconst ModalAddBank = () => {\r\n    const [modalAddBankVisible, setModalAddBankVisible] = useState(false);\r\n    const [isCancelHovered, setCancelHovered] = useState(false);\r\n    const [isAddHovered, setAddHovered] = useState(false);\r\n\r\n\r\n\r\n\r\n    const handleModalAddBankOpen = () => {\r\n        setModalAddBankVisible(true);\r\n    };\r\n\r\n    const handleModalAddBankClose = () => {\r\n        setModalAddBankVisible(false);\r\n    };\r\n\r\n    const bankNameRef = useRef(null);\r\n    const branchNameRef = useRef(null);\r\n    const swiftcodeRef = useRef(null);\r\n    const addressRef = useRef(null);\r\n    const accountHolderRef = useRef(null);\r\n    const accountNumberRef = useRef(null);\r\n\r\n\r\n\r\n    const addBankAccount = async () => {\r\n        const docRef = doc(projectExtensionFirestore, 'DataForInvoice', 'BankAccounts');\r\n\r\n        const bankNameValue = bankNameRef.current?.value;\r\n        const branchNameValue = branchNameRef.current?.value;\r\n        const swiftcodeValue = swiftcodeRef.current?.value;\r\n        const addressValue = addressRef.current?.value;\r\n        const accountHolderValue = accountHolderRef.current?.value;\r\n        const accountNumberValue = accountNumberRef.current?.value;\r\n\r\n        const elementToAdd = {\r\n            bankName: bankNameValue,\r\n            branchName: branchNameValue,\r\n            swiftCode: swiftcodeValue,\r\n            address: addressValue,\r\n            accountHolder: accountHolderValue,\r\n            accountNumberValue: accountNumberValue,\r\n        }\r\n\r\n        try {\r\n            await updateDoc(docRef, {\r\n                [bankNameValue]: elementToAdd,\r\n            });\r\n            console.log(\"Element added to the array field\");\r\n            handleModalAddBankClose();\r\n        } catch (error) {\r\n            console.error(\"Error adding element to the array\", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Pressable onPress={handleModalAddBankOpen} style={{ alignSelf: 'center', marginHorizontal: 5, marginTop: 3, }}>\r\n                <FontAwesome name={'plus-circle'} size={25} color='#16A34A' />\r\n            </Pressable>\r\n\r\n            <Modal isOpen={modalAddBankVisible} onClose={handleModalAddBankClose} useRNModal>\r\n                <Modal.Content>\r\n                    <Modal.Header>Add Bank Account</Modal.Header>\r\n                    <Modal.Body>\r\n                        <View style={{ height: '100%', flex: 1, }}>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Bank Name:</Text>\r\n                                <TextInput\r\n                                    ref={bankNameRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Bank Name'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Branch Name:</Text>\r\n                                <TextInput\r\n                                    ref={branchNameRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Branch Name'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>SWIFTCODE:</Text>\r\n                                <TextInput\r\n                                    ref={swiftcodeRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='SWIFTCODE'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Address:</Text>\r\n                                <TextInput\r\n                                    ref={addressRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Address'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Account Holder:</Text>\r\n                                <TextInput\r\n                                    ref={accountHolderRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Account Holder'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Account Number:</Text>\r\n                                <TextInput\r\n                                    ref={accountNumberRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Account Number'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', }}>\r\n                            <Pressable\r\n                                style={{ width: 100, padding: 5, borderRadius: 3, backgroundColor: isCancelHovered ? '#686868' : '#525252' }}\r\n                                onHoverIn={() => setCancelHovered(true)}\r\n                                onHoverOut={() => setCancelHovered(false)}\r\n                                onPress={handleModalAddBankClose}\r\n                            >\r\n                                <Text style={{ fontWeight: 500, textAlign: 'center', color: 'white', }}>Cancel</Text>\r\n                            </Pressable>\r\n\r\n                            <Pressable\r\n                                onPress={addBankAccount}\r\n                                style={{ width: 100, padding: 5, borderRadius: 3, backgroundColor: isAddHovered ? '#1B8B5A' : '#16A34A' }}\r\n                                onHoverIn={() => setAddHovered(true)}\r\n                                onHoverOut={() => setAddHovered(false)}\r\n                            >\r\n                                <Text style={{ fontWeight: 500, textAlign: 'center', color: 'white', }}>Add</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst BankInformation = () => {\r\n\r\n    let invoiceSelectedDueDate = '';\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [selectedDueDate, setSelectedDueDate] = useState('');\r\n    const [bankAccountsData, setBankAccountsData] = useState({});\r\n    const [selectedBank, setSelectedBank] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.bankAccount.bankName ? invoiceData.bankInformations.bankAccount.bankName : \"SUMITOMO MITSUI BANKING CORPORATION\");\r\n    let selectedBankData = {};\r\n\r\n    const paymentTermsRef = useRef(null);\r\n    const salesAgreementRef = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const subscribeToBankAccounts = () => {\r\n            const docRef = doc(projectExtensionFirestore, 'DataForInvoice', 'BankAccounts');\r\n\r\n            const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    const bankAccounts = {};\r\n\r\n                    // Assuming each entry in your document is a bank account\r\n                    Object.entries(data).forEach(([key, value]) => {\r\n                        if (value.bankName) {\r\n                            bankAccounts[value.bankName] = value;\r\n                        }\r\n                    });\r\n\r\n                    console.log(bankAccounts);\r\n                    setBankAccountsData(bankAccounts);\r\n                    globalInvoiceVariable.bankInformations.bankAccount = bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"];\r\n                    // Use state or context to store selected bank data if needed\r\n                    // setSelectedBank(bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"]);\r\n                    console.log(bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"]);\r\n                } else {\r\n                    console.log(\"No such document!\");\r\n                }\r\n            }, (error) => {\r\n                console.error(\"Error fetching document\", error);\r\n            });\r\n\r\n            return unsubscribe; // Return the unsubscribe function to call it later to stop listening\r\n        };\r\n\r\n\r\n        if (currentDate) {\r\n            const date = new Date(currentDate);\r\n\r\n            // Check the day of the week\r\n            const dayOfWeek = date.getDay();\r\n\r\n            if (dayOfWeek === 5) { // Friday\r\n                date.setDate(date.getDate() + 3); // Add 3 days to reach Monday\r\n            } else if (dayOfWeek === 6) { // Saturday\r\n                date.setDate(date.getDate() + 2); // Add 2 days to reach Monday\r\n            } else {\r\n                date.setDate(date.getDate() + 1); // Sunday to Thursday, add 1 day\r\n            }\r\n\r\n            // Format the date back to string\r\n            const adjustedDate = date.toISOString().split('T')[0];\r\n            setSelectedDueDate(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.dueDate ? invoiceData.bankInformations.dueDate : adjustedDate);\r\n            globalInvoiceVariable.bankInformations.dueDate = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.dueDate ? invoiceData.bankInformations.dueDate : adjustedDate;\r\n            globalInvoiceVariable.bankInformations.paymentTerms = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.paymentTerms ? invoiceData.bankInformations.paymentTerms : paymentTermsRef.current?.value;\r\n            // globalInvoiceVariable.bankInformations.salesAgreement = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.salesAgreement ? invoiceData.bankInformations.salesAgreement : salesAgreementRef.current?.value;\r\n            globalInvoiceVariable.bankInformations.issuingDate = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.issuingDate ? invoiceData.bankInformations.issuingDate : currentDate;\r\n\r\n\r\n        }\r\n\r\n        const unsubscribe = subscribeToBankAccounts();\r\n    }, [currentDate]);\r\n\r\n\r\n\r\n    const ModalCalendar = ({ selectedDate, setSelectedDate, currentDate }) => {\r\n\r\n        const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n        const handleModalCalendarOpen = () => {\r\n            setModalCalendarVisible(true);\r\n        };\r\n\r\n        const handleModalCalendarClose = () => {\r\n            setModalCalendarVisible(false);\r\n        };\r\n\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n                <Pressable style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onPress={handleModalCalendarOpen}>\r\n                    <TextInput value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n                </Pressable>\r\n\r\n                <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Content>\r\n                        <View style={{ height: '100%', flex: 1 }}>\r\n                            <Calendar\r\n                                onDayPress={useCallback(day => {\r\n                                    setSelectedDate(day.dateString);\r\n                                    invoiceSelectedDueDate = day.dateString;\r\n                                    globalInvoiceVariable.bankInformations.dueDate = day.dateString;\r\n                                    handleModalCalendarClose();\r\n                                }, [])}\r\n                                markedDates={{\r\n                                    [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n                                }}\r\n                                renderArrow={(direction) => (\r\n                                    direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n                                )}\r\n                                enableSwipeMonths={true}\r\n                                initialDate={selectedDate}\r\n                                // minDate={currentDate}\r\n                                showSixWeeks />\r\n\r\n                        </View>\r\n\r\n                    </Modal.Content>\r\n\r\n                </Modal>\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n\r\n    const handleValueChange = (selectedBankName) => {\r\n        const selectedBankObj = bankAccountsData[selectedBankName];\r\n        setSelectedBank(selectedBankName);\r\n        globalInvoiceVariable.bankInformations.bankAccount = selectedBankObj;\r\n        // console.log(selectedBankObj);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Due Date:</Text>\r\n                <ModalCalendar currentDate={currentDate} selectedDate={selectedDueDate} setSelectedDate={setSelectedDueDate} />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, marginVertical: 10, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Bank Account: </Text>\r\n                <Select\r\n                    selectedValue={selectedBank}\r\n                    onValueChange={handleValueChange}\r\n                    bgColor={'#FAFAFA'}\r\n                    accessibilityLabel=\"Choose Country\"\r\n                    placeholder=\"---\"\r\n                    _selectedItem={{\r\n                        bg: \"teal.600\",\r\n                        endIcon: <CheckIcon />,\r\n                    }}\r\n                    height={9}\r\n                    width={300}\r\n                    style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\r\n                >\r\n                    {Object.keys(bankAccountsData).map((bankName) => (\r\n                        <Select.Item key={bankName} label={bankName} value={bankName} />\r\n                    ))}\r\n                </Select>\r\n\r\n                <ModalAddBank />\r\n\r\n            </View>\r\n\r\n            <View style={{ flex: 3, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Payment Terms:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.bankInformations.paymentTerms = value;\r\n                }} ref={paymentTermsRef} multiline defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.paymentTerms ? invoiceData.bankInformations.paymentTerms : \"Full payment via Telegraphic Transfer (T/T) required before the due date.\"} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            {/* <View style={{ flex: 4, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Sales Agreement:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.bankInformations.salesAgreement = value;\r\n                }} ref={salesAgreementRef} multiline defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.salesAgreement ? invoiceData.bankInformations.salesAgreement : `Payment Information:\r\nThe customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.\r\nNo warranty service is provided on used vehicles.\r\n\r\nConditions for order cancellation:\r\n(1) Order Cancellation Penalty: If the order is canceled after payment, a penalty of USD 220 will apply.\r\n(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.\r\n\r\nIntermediary Banking Information:\r\nBank Name: SUMITOMO MITSUI BANKING CORPORATION (THE NEW YORK AUTHORITY).\r\nSwift code: SMBCUS33\r\nAddress: 277 Park Avenue\r\nCity: New York, NY\r\nPostal Code: 10172\r\nCountry: United States\r\n`}\r\n                    placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ width: '60%', height: 100, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View> */}\r\n        </>\r\n    );\r\n}\r\n\r\nconst PaymentDetails = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const fobPriceInput = useRef(null);\r\n    const freightInput = useRef(null);\r\n    const inspectionInput = useRef(null);\r\n    const insuranceInput = useRef(null);\r\n\r\n\r\n    const [totalAmountCalculated, setTotalAmountCalculated] = useState('0');\r\n    const [selectedIncoterms, setSelectedIncoterms] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.incoterms ? invoiceData.paymentDetails.incoterms :\r\n        selectedChatData.insurance ? 'CIF' : 'C&F');\r\n\r\n    const [inspectionIsChecked, setInspectionIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionIsChecked : selectedChatData.inspection);\r\n    const [inspectionName, setInspectionName] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionName ? invoiceData.paymentDetails.inspectionName : selectedChatData.inspectionName);\r\n\r\n    const [warrantyIsChecked, setWarrantyIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyIsCheck ? invoiceData.paymentDetails.warrantyIsCheck : selectedChatData.warranty);\r\n\r\n    const warrantyPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyPrice && invoiceData.paymentDetails.warrantyPrice ? invoiceData.paymentDetails.warrantyPrice : 150;\r\n    const insurancePrice = 50;\r\n\r\n\r\n    const additionalNameRef = useRef(null);\r\n    const additionalPriceRef = useRef(null);\r\n\r\n    const safelyParseNumber = (value) => {\r\n        const number = Number(value.replace(/,/g, ''));\r\n        return isNaN(number) ? 0 : number;\r\n    };\r\n\r\n    const calculateTotalAmount = () => {\r\n        const fobPrice = safelyParseNumber(fobPriceInput.current?.value);\r\n        const freight = safelyParseNumber(freightInput.current?.value);\r\n        const inspection = safelyParseNumber(inspectionInput.current?.value);\r\n        const insurance = safelyParseNumber(insuranceInput.current?.value);\r\n\r\n        const additionalPricesTotal = globalAdditionalPriceArray.reduce((sum, value) => sum + safelyParseNumber(value), 0);\r\n\r\n        // const total = Math.round(fobPrice + freight + inspection + (warrantyIsChecked ? warrantyPrice : 0) + insurance + additionalPricesTotal).toLocaleString();\r\n        const total = Math.round(fobPrice + freight + inspection + insurance + additionalPricesTotal).toLocaleString();\r\n        setTotalAmountCalculated(total);\r\n        globalInvoiceVariable.paymentDetails.totalAmount = total;\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        additionalNameRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName.join('\\n') : '';\r\n        additionalPriceRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice.join('\\n') : '';\r\n\r\n        globalInvoiceVariable.paymentDetails.incoterms = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.incoterms ? invoiceData.paymentDetails.incoterms : selectedIncoterms;\r\n        globalInvoiceVariable.paymentDetails.inspectionIsChecked = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionIsChecked : inspectionIsChecked;\r\n        globalInvoiceVariable.paymentDetails.inspectionName = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionName ? invoiceData.paymentDetails.inspectionName : inspectionName;\r\n        globalInvoiceVariable.paymentDetails.inspectionPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionPrice ? invoiceData.paymentDetails.inspectionPrice : inspectionIsChecked ? 300 : 0;\r\n        globalInvoiceVariable.paymentDetails.warrantyIsCheck = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyIsCheck ? invoiceData.paymentDetails.warrantyIsCheck : warrantyIsChecked;\r\n        // globalInvoiceVariable.paymentDetails.warrantyPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyPrice ? invoiceData.paymentDetails.warrantyPrice : warrantyIsChecked ? warrantyPrice : 0;\r\n        globalInvoiceVariable.paymentDetails.fobPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.fobPrice ? invoiceData.paymentDetails.fobPrice : fobPriceInput.current?.value;\r\n        globalInvoiceVariable.paymentDetails.freightPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.freightPrice ? invoiceData.paymentDetails.freightPrice : freightInput.current?.value;\r\n        globalInvoiceVariable.paymentDetails.insurancePrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.insurancePrice ? invoiceData.paymentDetails.insurancePrice : selectedIncoterms == 'CIF' ? insuranceInput.current?.value : 0;\r\n        globalInvoiceVariable.paymentDetails.additionalPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice : [];\r\n        globalInvoiceVariable.paymentDetails.additionalName = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName : [];\r\n        globalAdditionalPriceArray = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice : [];\r\n\r\n        calculateTotalAmount();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        inspectionInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionPrice && invoiceData.paymentDetails.inspectionPrice == true ? invoiceData.paymentDetails.inspectionPrice : inspectionIsChecked ? 300 : 0;\r\n        calculateTotalAmount();\r\n\r\n    }, [inspectionIsChecked]);\r\n\r\n    useEffect(() => {\r\n\r\n        insuranceInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.insurancePrice && invoiceData.paymentDetails.incoterms == 'CIF' ? invoiceData.paymentDetails.insurancePrice : selectedIncoterms == 'CIF' ? 50 : 0;\r\n        freightInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.freightPrice ? invoiceData.paymentDetails.freightPrice : selectedIncoterms == 'FOB' ? 0 : freightCalculation;\r\n\r\n        calculateTotalAmount();\r\n\r\n    }, [selectedIncoterms]);\r\n\r\n    useEffect(() => {\r\n        calculateTotalAmount();\r\n\r\n    }, [warrantyIsChecked]);\r\n\r\n    const freightCalculation = (\r\n        (selectedChatData.m3 ? selectedChatData.m3 :\r\n            (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n                selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice)\r\n    ).toFixed(2);\r\n\r\n    const totalPriceCalculation = (\r\n        (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n            (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n                selectedChatData.carData.fobPrice : 0) *\r\n            (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n                (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                    selectedChatData.currency.jpyToUsd : 0))) +\r\n        parseFloat(freightCalculation)\r\n    ).toFixed(2);\r\n\r\n    const fobPriceDollars = (\r\n        (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n            (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n                selectedChatData.carData.fobPrice : 0) *\r\n            (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n                (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                    selectedChatData.currency.jpyToUsd : 0))\r\n        ).toFixed(2));\r\n\r\n\r\n    const handleAdditionalPriceTextChange = (text) => {\r\n        // Process and filter each line\r\n        const filteredLines = text.split('\\n').map(line => {\r\n            let filteredLine = line.replace(/[^0-9.]/g, '');\r\n            const parts = filteredLine.split('.');\r\n            if (parts.length > 2) {\r\n                filteredLine = parts[0] + '.' + parts[1];\r\n            }\r\n            return filteredLine;\r\n        });\r\n\r\n        // Update the ref and the state\r\n        additionalPriceRef.current.value = filteredLines.join('\\n');\r\n        // setAdditionalPriceArray(filteredLines);\r\n        globalAdditionalPriceArray = filteredLines;\r\n        globalInvoiceVariable.paymentDetails.additionalPrice = filteredLines;\r\n        calculateTotalAmount();\r\n\r\n    };\r\n\r\n    const handleAdditionalNameTextChange = (text) => {\r\n        // Update the ref\r\n        additionalNameRef.current.value = text;\r\n\r\n        // Split the text into lines and update the state\r\n        const lines = text.split('\\n');\r\n        // setAdditionalNameArray(lines);\r\n        globalInvoiceVariable.paymentDetails.additionalName = lines;\r\n    };\r\n\r\n\r\n    const handleFobPriceInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        fobPriceInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.fobPrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleFreightInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        freightInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.freightPrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleInspectionInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        inspectionInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.inspectionPrice = filteredText;\r\n\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleInsuranceInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        insuranceInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.insurancePrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#16A34A', }}>Payment Details</Text>\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Incoterms:</Text>\r\n                <Select\r\n                    selectedValue={selectedIncoterms}\r\n                    onValueChange={(value) => setSelectedIncoterms(value)}\r\n                    bgColor={'#FAFAFA'}\r\n                    accessibilityLabel=\"Choose Country\"\r\n                    placeholder=\"---\"\r\n                    _selectedItem={{\r\n                        bg: \"teal.600\",\r\n                        endIcon: <CheckIcon />,\r\n                    }}\r\n                    height={9}\r\n                    style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\r\n                >\r\n                    <Select.Item key={'C&F'} label={'C&F'} value={'C&F'} />\r\n                    <Select.Item key={'CIF'} label={'CIF'} value={'CIF'} />\r\n                    <Select.Item key={'FOB'} label={'FOB'} value={'FOB'} />\r\n                </Select>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Rate: </Text>\r\n                <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>\r\n                    {selectedChatData.currency && selectedChatData.currency.usdToJpy\r\n                        ? Number(selectedChatData.currency.usdToJpy).toFixed(2) : '0.00'}\r\n                </Text>\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, marginTop: 10, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Inspection:</Text>\r\n                <Checkbox\r\n                    isChecked={inspectionIsChecked}\r\n                    onChange={value => {\r\n                        setInspectionIsChecked(value)\r\n                        globalInvoiceVariable.paymentDetails.inspectionIsChecked = value;\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                />\r\n            </View>\r\n\r\n            {/* <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Warranty:</Text>\r\n                <Checkbox\r\n                    isChecked={warrantyIsChecked}\r\n                    onChange={value => setWarrantyIsChecked(value)}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                />\r\n                <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>${warrantyPrice}</Text>\r\n            </View> */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2 }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3 }}>FOB Price:</Text>\r\n                <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1 }}>$</Text>\r\n                <TextInput\r\n                    onChangeText={handleFobPriceInputChangeText}\r\n                    ref={fobPriceInput}\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.paymentDetails.fobPrice : selectedIncoterms == 'FOB' ? 0 : fobPriceDollars}\r\n                    placeholderTextColor='#9B9E9F'\r\n                    placeholder='FOB Price'\r\n                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2 }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3 }}>Freight:</Text>\r\n                <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1 }}>$</Text>\r\n                <TextInput\r\n                    onChangeText={handleFreightInputChangeText}\r\n                    ref={freightInput}\r\n                    defaultValue={freightCalculation}\r\n                    placeholderTextColor='#9B9E9F'\r\n                    placeholder='Freight'\r\n                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, display: selectedIncoterms == 'CIF' ? 'flex' : 'none' }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Insurance:</Text>\r\n                <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, }}>$</Text>\r\n                <TextInput\r\n                    onChangeText={handleInsuranceInputChangeText}\r\n                    ref={insuranceInput}\r\n                    defaultValue={50}\r\n                    placeholderTextColor='#9B9E9F'\r\n                    placeholder={`Insurance`}\r\n                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, display: inspectionIsChecked ? 'flex' : 'none' }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Inspection:</Text>\r\n                <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, }}>$</Text>\r\n                <TextInput\r\n                    onChangeText={handleInspectionInputChangeText}\r\n                    ref={inspectionInput}\r\n                    placeholderTextColor='#9B9E9F'\r\n                    placeholder={`Inspection [${selectedChatData.inspectionName}]`}\r\n                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                />\r\n                <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>{`[${selectedChatData.inspectionName}]`}</Text>\r\n            </View>\r\n\r\n\r\n            <View style={{ flex: 3, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Additional:</Text>\r\n                <TextInput ref={additionalNameRef} onChangeText={handleAdditionalNameTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                    style={{ width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                <TextInput ref={additionalPriceRef} onChangeText={handleAdditionalPriceTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Price'\r\n                    style={{ width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignItems: 'center', }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Total Amount:</Text>\r\n                <Text style={{ fontWeight: 700, fontSize: 18, margin: 3, color: '#FF0000', }}>{`$${totalAmountCalculated}`}</Text>\r\n            </View>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst SelectPortOfDischarge = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [countriesDischarge, setCountriesDischarge] = useState([]);\r\n    const [portsData, setPortsData] = useState({});\r\n    const [nearestPorts, setNearestPorts] = useState([]);\r\n    const [selectedPortCountry, setSelectedPortCountry] = useState('');\r\n    const [selectedCountry, setSelectedCountry] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.country : selectedChatData.country);\r\n    const [selectedPort, setSelectedPort] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.port : selectedChatData.port);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.port : selectedChatData.port);\r\n\r\n        const fetchPorts = async () => {\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    const sortedPorts = Object.keys(data)\r\n                        .map(portName => ({\r\n                            name: portName.replace(/_/g, '.'), // Replace '_' with '.'\r\n                            ...data[portName]\r\n                        }))\r\n                        .sort((a, b) => a.sortOrder - b.sortOrder);\r\n                    setNearestPorts(sortedPorts);\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n\r\n        const fetchPortsData = async () => {\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    setPortsData(data);\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n\r\n        fetchPorts();\r\n        fetchPortsData();\r\n        // fetchCountries();\r\n\r\n        globalInvoiceVariable.discharge.port = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.discharge.port ? invoiceData.discharge.port : selectedPort;\r\n        globalInvoiceVariable.discharge.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.discharge.country ? invoiceData.discharge.country : selectedPortCountry;\r\n\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        // When selectedCountry changes, update nearestPorts\r\n        const selectedCountryData = countriesDischarge.find(country => country.name === selectedCountry);\r\n        if (selectedCountryData && selectedCountryData.nearestPorts) {\r\n            setNearestPorts(selectedCountryData.nearestPorts);\r\n        } else {\r\n            setNearestPorts([]); // Reset to empty if no ports or country not found\r\n        }\r\n    }, [selectedCountry, countriesDischarge]);\r\n\r\n    useEffect(() => {\r\n        const portData = portsData[selectedPort];\r\n        if (portData && portData.country) {\r\n            setSelectedPortCountry(portData.country);\r\n            // console.log('Nagoya Price ', portData.nagoyaPrice);\r\n            globalInvoiceVariable.discharge.country = portData.country;\r\n        } else {\r\n            setSelectedPortCountry(''); // Reset selected country if port not found or has no country\r\n            console.log('Not found');\r\n        }\r\n    }, [selectedPort, portsData]);\r\n\r\n    return (\r\n        <>\r\n            {/* <Select\r\n                selectedValue={selectedCountry}\r\n                onValueChange={(value) => {\r\n                    setSelectedCountry(value)\r\n                    globalInvoiceVariable.discharge.country = value;\r\n\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"Choose Country\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />,\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}\r\n            >\r\n                {countriesDischarge.map((country) => (\r\n                    <Select.Item key={country.name} label={country.name} value={country.name} />\r\n                ))}\r\n            </Select> */}\r\n            <Select\r\n                selectedValue={selectedPort}\r\n                onValueChange={(value) => {\r\n                    setSelectedPort(value)\r\n                    globalInvoiceVariable.discharge.port = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                accessibilityLabel=\"Choose Port\"\r\n                placeholder=\"Select port\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />,\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}\r\n            >\r\n                {nearestPorts.map((port, index) => (\r\n                    <Select.Item key={index} label={port.name} value={port.name} />\r\n                ))}\r\n            </Select>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst SelectSalesPerson = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [selectedSales, setSelectedSales] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.salesPerson : (selectedChatData.carData && selectedChatData.carData.sales ? selectedChatData.carData.sales : ''));\r\n    const salesData = useSelector((state) => state.salesData);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        globalInvoiceVariable.salesPerson = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.salesPerson ? invoiceData.salesPerson : (selectedChatData.carData && selectedChatData.carData.sales ? selectedChatData.carData.sales : '');\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Select\r\n            selectedValue={selectedSales}\r\n            onValueChange={(value) => {\r\n                setSelectedSales(value);\r\n                globalInvoiceVariable.salesPerson = value;\r\n            }}\r\n            bgColor={'#FAFAFA'}\r\n            accessibilityLabel=\"---\"\r\n            placeholder=\"---\"\r\n            _selectedItem={{\r\n                bg: \"teal.600\",\r\n                endIcon: <CheckIcon />\r\n            }}\r\n            style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}>\r\n            {salesData.map((item) => (\r\n                <Select.Item key={item.id} label={item.name} value={item.name} />\r\n            ))}\r\n        </Select>\r\n    );\r\n}\r\n\r\nconst SelectPortOfDeparture = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const portData = useSelector((state) => state.portData);\r\n    const salesData = useSelector((state) => state.salesData);\r\n    const [selectedPort, setSelectedPort] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : ''));\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : ''));\r\n\r\n        globalInvoiceVariable.departurePort = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.departurePort ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : '');\r\n        globalInvoiceVariable.departureCountry = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.departureCountry ? invoiceData.departureCountry : 'Japan';\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                selectedValue='Japan'\r\n                onValueChange={(value) => {\r\n                    globalInvoiceVariable.departureCountry = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}>\r\n                <Select.Item key={'Japan'} label={'Japan'} value={'Japan'} />\r\n            </Select>\r\n\r\n            <Select\r\n                selectedValue={selectedPort}\r\n                onValueChange={(value) => {\r\n                    setSelectedPort(value);\r\n                    globalInvoiceVariable.departurePort = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}>\r\n                {portData.map((item) => (\r\n                    <Select.Item key={item.id} label={item.name} value={item.name} />\r\n                ))}\r\n            </Select>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst NotifyPartyInput = ({ accountData, setAccountData }) => {\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.sameAsConsignee : true);\r\n\r\n    const notifyPartyName = useRef(null);\r\n    const notifyPartyAddress = useRef(null);\r\n    const notifyPartyCity = useRef(null);\r\n    const notifyPartyCountry = useRef(null);\r\n    const notifyPartyContactNumber = useRef(null);\r\n    const notifyPartyFax = useRef(null);\r\n    const notifyPartyEmail = useRef(null);\r\n\r\n    useEffect(() => {\r\n\r\n        notifyPartyName.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.name ? invoiceData.notifyParty.name : '';\r\n        notifyPartyAddress.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.address ? invoiceData.notifyParty.address : '';\r\n        notifyPartyCity.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.city ? invoiceData.notifyParty.city : '';\r\n        notifyPartyCountry.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.country ? invoiceData.notifyParty.country : '';\r\n        notifyPartyContactNumber.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.contactNumber ? invoiceData.notifyParty.contactNumber : '';\r\n        notifyPartyFax.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.fax ? invoiceData.notifyParty.fax : '';\r\n        notifyPartyEmail.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.email ? invoiceData.notifyParty.email : '';\r\n\r\n        globalInvoiceVariable.notifyParty.name = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.name ? invoiceData.notifyParty.name : notifyPartyName.current?.value;\r\n        globalInvoiceVariable.notifyParty.address = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.address ? invoiceData.notifyParty.address : notifyPartyAddress.current?.value;\r\n        globalInvoiceVariable.notifyParty.city = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.city ? invoiceData.notifyParty.city : notifyPartyCity.current?.value;\r\n        globalInvoiceVariable.notifyParty.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.country ? invoiceData.notifyParty.country : notifyPartyCountry.current?.value;\r\n        globalInvoiceVariable.notifyParty.contactNumber = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.contactNumber ? invoiceData.notifyParty.contactNumber : notifyPartyContactNumber.current?.value;\r\n        globalInvoiceVariable.notifyParty.fax = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.fax ? invoiceData.notifyParty.fax : notifyPartyFax.current?.value;\r\n        globalInvoiceVariable.notifyParty.email = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.email ? invoiceData.notifyParty.email : notifyPartyEmail.current?.value;\r\n        globalInvoiceVariable.notifyParty.sameAsConsignee = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.sameAsConsignee ? invoiceData.notifyParty.sameAsConsignee : isChecked;\r\n\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#FF0000', }}>Notify Party</Text>\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, }}>\r\n                <Checkbox\r\n                    isChecked={isChecked}\r\n                    onChange={value => {\r\n                        setIsChecked(value)\r\n                        globalInvoiceVariable.consignee.sameAsBuyer = value;\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                >\r\n                    Same as consignee\r\n                </Checkbox>\r\n            </View>\r\n\r\n            <View style={{ display: isChecked ? 'none' : 'flex', }}>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Name:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.name = value;\r\n                    }}\r\n                        ref={notifyPartyName} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Address:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.address = value;\r\n                    }} ref={notifyPartyAddress} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Address'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>City:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.city = value;\r\n                    }} ref={notifyPartyCity} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='City'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Country:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.country = value;\r\n                    }} ref={notifyPartyCountry} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Country'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 3, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Contact Number:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.contactNumber = value;\r\n                    }} ref={notifyPartyContactNumber} disabled={isChecked} multiline placeholderTextColor='#9B9E9F' placeholder='Contact Number'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>FAX:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.fax = value;\r\n                    }} ref={notifyPartyFax} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='FAX'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Email:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.email = value;\r\n                    }} ref={notifyPartyEmail} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n            </View>\r\n\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />{/* Horizontal Line */}\r\n        </>\r\n    )\r\n}\r\n\r\nconst ConsigneeInput = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.sameAsBuyer : true);\r\n    const [accountData, setAccountData] = useState({});\r\n\r\n    const consigneeName = useRef(null);\r\n    const consigneeAddress = useRef(null);\r\n    const consigneeCity = useRef(null);\r\n    const consigneeCountry = useRef(null);\r\n    const consigneeContactNumber = useRef(null);\r\n    const consigneeFax = useRef(null);\r\n    const consigneeEmail = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAccountData = async () => {\r\n            if (!selectedChatData.participants && selectedChatData.participants.customer) return; // Make sure there's a selected email\r\n            const docRef = doc(projectExtensionFirestore, 'accounts', selectedChatData.participants.customer);\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    setAccountData(docSnap.data());\r\n                    // console.log(docSnap.data());\r\n                    consigneeName.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.name ? invoiceData.consignee.name : `${data.textFirst ? data.textFirst : ''} ${data.textLast ? data.textLast : ''}`;\r\n                    consigneeAddress.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.address ? invoiceData.consignee.address : `${data.textStreet ? data.textStreet : ''} ${data.textZip ? data.textZip : ''}`;\r\n                    consigneeCity.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.city ? invoiceData.consignee.city : `${data.city ? data.city : ''}`;\r\n                    consigneeCountry.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.country ? invoiceData.consignee.country : `${data.country ? data.country : ''}`;\r\n                    consigneeContactNumber.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.contactNumber ? invoiceData.consignee.contactNumber : `${data.textPhoneNumber ? data.textPhoneNumber : ''}`;\r\n                    consigneeFax.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.fax ? invoiceData.consignee.fax : `${data.fax ? data.fax : ''}`;\r\n                    consigneeEmail.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.email ? invoiceData.consignee.email : `${data.textEmail ? data.textEmail : ''}`;\r\n\r\n\r\n                    globalInvoiceVariable.consignee.name = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.name ? invoiceData.consignee.name : `${data.textFirst ? data.textFirst : ''} ${data.textLast ? data.textLast : ''}`;\r\n                    globalInvoiceVariable.consignee.address = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.address ? invoiceData.consignee.address : `${data.textStreet ? data.textStreet : ''} ${data.textZip ? data.textZip : ''}`;\r\n                    globalInvoiceVariable.consignee.city = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.city ? invoiceData.consignee.city : `${data.city ? data.city : ''}`;\r\n                    globalInvoiceVariable.consignee.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.country ? invoiceData.consignee.country : `${data.country ? data.country : ''}`;\r\n                    globalInvoiceVariable.consignee.contactNumber = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.contactNumber ? invoiceData.consignee.contactNumber : `${data.textPhoneNumber ? data.textPhoneNumber : ''}`;\r\n                    globalInvoiceVariable.consignee.fax = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.fax ? invoiceData.consignee.fax : `${data.fax ? data.fax : ''}`;\r\n                    globalInvoiceVariable.consignee.email = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.email ? invoiceData.consignee.email : `${data.textEmail ? data.textEmail : ''}`;\r\n                    globalInvoiceVariable.consignee.sameAsBuyer = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.sameAsBuyer ? invoiceData.consignee.sameAsBuyer : isChecked;\r\n\r\n                    // console.log(accountData.length);\r\n                } else {\r\n                    console.log('No such document!');\r\n                    setAccountData(null);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n        fetchAccountData();\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isChecked) {\r\n            consigneeName.current.value = `${accountData.textFirst ? accountData.textFirst : ''} ${accountData.textLast ? accountData.textLast : ''}`;\r\n            consigneeAddress.current.value = `${accountData.textStreet ? accountData.textStreet : ''} ${accountData.textZip ? accountData.textZip : ''}`;\r\n            consigneeCity.current.value = `${accountData.city ? accountData.city : ''}`;\r\n            consigneeCountry.current.value = `${accountData.country ? accountData.country : ''}`;\r\n            consigneeContactNumber.current.value = `${accountData.textPhoneNumber ? accountData.textPhoneNumber : ''}`;\r\n            consigneeFax.current.value = `${accountData.fax ? accountData.fax : ''}`;\r\n            consigneeEmail.current.value = `${accountData.textEmail ? accountData.textEmail : ''}`;\r\n        }\r\n\r\n        // console.log(globalInvoiceVariable);\r\n\r\n\r\n    }, [isChecked])\r\n\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#0A78BE', }}>Consignee</Text>\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, }}>\r\n                <Checkbox\r\n                    isChecked={isChecked}\r\n                    onChange={value => {\r\n                        globalInvoiceVariable.consignee.sameAsBuyer = value;\r\n                        setIsChecked(value)\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                >\r\n                    Same as buyer\r\n                </Checkbox>\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Name:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.name = value;\r\n                }} ref={consigneeName} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Address:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.address = value;\r\n                }} ref={consigneeAddress} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Address'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>City:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.city = value;\r\n                }} ref={consigneeCity} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='City'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Country:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.country = value;\r\n                }} ref={consigneeCountry} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Country'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 3, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Contact Number:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.contactNumber = value;\r\n                }} ref={consigneeContactNumber} disabled={isChecked} multiline placeholderTextColor='#9B9E9F' placeholder='Contact Number'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>FAX:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.fax = value;\r\n                }} ref={consigneeFax} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='FAX'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Email:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.email = value;\r\n                }} ref={consigneeEmail} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            <NotifyPartyInput accountData={accountData} setAccountData={setAccountData} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst InvoiceFeatures = ({ widthScaleFactor, heightScaleFactor }) => {\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    return (\r\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', width: 495 * widthScaleFactor, }}>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemAnBrSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Anti-Lock Braking System (ABS)</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemDrAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Driver Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemPaAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Passenger Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemSiAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Side Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAiCoFr ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Air Conditioner (Front)</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAiCoRe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Air Conditioner (Rear)</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAMFMRa ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>AM/FM Radio</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAMFMSt ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>AM/FM Stereo</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCDPl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>CD Player</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCDCh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>CD Changer</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCrSpCo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Cruis Speed Control</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortDiSp ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}> Digital Speedometer</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortDVDPl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>DVD Player</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortHDD ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Hard Disk Drive</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortNaSyGPS ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Navigation System (GPS)</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortPoSt ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Steering</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortPrAuSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Premium Audio System</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortReKeSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Remote Keyless System</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortTiStWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Tilt Steering Wheel</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorLeSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Leather Seats</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoDoLo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Door Locks</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoMi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Mirrors</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Seats</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoWi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Windows</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorReWiDe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Rear Window Defroster</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorReWiWi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Rear Window Wiper</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorThRoSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Third Row Seats</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorTiGl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Tinted Glasses</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorAlWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Alloy Wheels</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorPoSlDo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Sliding Door</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorSuRo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Sunroof</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsCuWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Customized Wheels</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsFuLo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Fully Loaded</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsMaHiAv ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Maintenance History Available</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsBrNeTi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Brand New Tires</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsNoAcHi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>No Accident History</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsNoSmPrOw ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Non-Smoking Previous Owner</Text>\r\n            </View>\r\n\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsOnOwHi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>One Owner History</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsPeRaTi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Performance-rated Tires</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsReBo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Repainted Body</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsTuEn ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Turbo Engine</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsUpAuSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Upgraded Audio System</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst createHmacSha256Hash = (data, secretKey) => {\r\n    const hash = HmacSHA256(data, secretKey);\r\n    return enc.Hex.stringify(hash);\r\n};\r\n\r\n\r\nconst ConfirmPaymentModalContent = () => {\r\n    const dispatch = useDispatch();\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n\r\n\r\n    const [historyModalVisible, setHistoryModalVisible] = useState(false);\r\n\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    const totalAmountString = invoiceData.paymentDetails.totalAmount;\r\n    const totalAmountNumber = parseFloat(totalAmountString.replace(/,/g, ''));\r\n\r\n    const inputAmountRef = useRef(null);\r\n\r\n    const handleHistoryModalOpen = () => {\r\n        setHistoryModalVisible(true);\r\n\r\n        // console.log(selectedChatData.payments);\r\n    }\r\n\r\n    const handleHistoryModalClose = () => {\r\n        setHistoryModalVisible(false);\r\n\r\n    }\r\n\r\n    const handleInputAmountChangeText = (text) => {\r\n        // Remove characters that are not digits, dot, or minus, and ensure minus is only at the start\r\n        const filteredText = text\r\n            .replace(/[^0-9.-]/g, '')  // Remove characters that are not digits, dot, or minus\r\n            .replace(/(.)\\-/g, '$1')   // Remove minus if not at the start\r\n            .replace(/^-(?=\\-)/, '')   // Remove extra minus at the start\r\n            .replace(/(\\..*)\\./g, '$1'); // Allow only one dot\r\n\r\n        // Update the input field\r\n        inputAmountRef.current.value = filteredText;\r\n    };\r\n\r\n\r\n\r\n    const handleCompletePaymentPress = () => {\r\n        const filteredText = invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1') - totalValue;\r\n        inputAmountRef.current.value = filteredText;\r\n    }\r\n\r\n\r\n    const fullPaymentMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `Full Payment Received\r\n\r\nDear Customer,\r\n\r\nI hope this message finds you well. \r\n\r\nWe are writing to confirm that we have received your full payment. \r\n\r\nThank you for settling your account promptly.\r\n\r\nShould you have any further questions or require assistance, please feel free to contact us.\r\n                \r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `Full Payment Received\r\n\r\nDear Customer,\r\n\r\nI hope this message finds you well. \r\n\r\nWe are writing to confirm that we have received your full payment. \r\n                \r\nThank you for settling your account promptly.\r\n                \r\nShould you have any further questions or require assistance, please feel free to contact us.\r\n                                \r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n\r\n    const overBalanceMessage = async (amount) => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `Dear Customer,\r\n\r\nGood day! \r\n\r\nWe're writing to inform you about your account with us at Real Motor Japan.\r\n                \r\nYou have an extra overbalance in your account.\r\n\r\nAmount: $${amount}\r\n                \r\nFeel free to contact us if you have any questions. We're here to help.\r\n                \r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `Dear Customer,\r\n\r\nGood day! \r\n                \r\nWe're writing to inform you about your account with us at Real Motor Japan.\r\n                                \r\nYou have an extra overbalance in your account.\r\n                \r\nAmount: $${amount}\r\n                                \r\nFeel free to contact us if you have any questions. We're here to help.\r\n                                \r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const paymentMessage = async (amount, transactionDate) => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `🌟 Payment Confirmation Alert 🌟\r\n\r\nDear Customer! 👋\r\n\r\nWe're thrilled to inform you that your recent payment has been successfully reflected in our bank account.\r\n\r\nYour prompt and efficient transaction is greatly appreciated! 🎉\r\n\r\n🔍 Payment Details:\r\n\r\nAmount: $${amount}\r\nTransaction Date: ${transactionDate}\r\n\r\nYour account and services are now fully up-to-date. If you have any further questions or require assistance, feel free to reach out.\r\n\r\nThank you for your continued trust in us.\r\nLooking forward to serving you more in the future! 😊\r\n\r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `🌟 Payment Confirmation Alert 🌟\r\n\r\nDear Customer! 👋\r\n\r\nWe're thrilled to inform you that your recent payment has been successfully reflected in our bank account.\r\n\r\nYour prompt and efficient transaction is greatly appreciated! 🎉\r\n\r\n🔍 Payment Details:\r\n\r\nAmount: $${amount}\r\nTransaction Date: ${transactionDate}\r\n\r\nYour account and services are now fully up-to-date. If you have any further questions or require assistance, feel free to reach out.\r\n\r\nThank you for your continued trust in us.\r\nLooking forward to serving you more in the future! 😊\r\n\r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const confirmPayment = async () => {\r\n        setIsConfirmLoading(true);\r\n\r\n        const amountNeeded = invoiceData.paymentDetails.totalAmount ? invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1') - totalValue : '';\r\n        const docRef = doc(projectExtensionFirestore, 'chats', selectedChatData.id);\r\n        const docRefCustomer = doc(projectExtensionFirestore, 'accounts', selectedChatData.participants.customer);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n\r\n        const newPayments = [\r\n            { value: inputAmountRef.current.value, date: formattedTime },\r\n        ];\r\n\r\n        const newPaymentsAccount = [\r\n            { value: inputAmountRef.current.value, date: formattedTime, vehicleRef: selectedChatData.carData.referenceNumber, vehicleName: selectedChatData.carData.carName, },\r\n        ];\r\n\r\n        const inputAmount = inputAmountRef.current.value;\r\n        const numericInputAmount = Number(inputAmount);\r\n        const formattedInputAmount = numericInputAmount.toLocaleString();\r\n        const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n        if (inputAmount === '' || inputAmount === '0') {\r\n            setIsConfirmLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (!inputAmount.startsWith('-')) {\r\n                // First, execute paymentMessage\r\n                await paymentMessage(formattedInputAmount, formattedTime);\r\n                await delay(10); //10ms delay\r\n\r\n                if (numericInputAmount >= amountNeeded) {\r\n                    // Once paymentMessage is successful, execute fullPaymentMessage\r\n                    await fullPaymentMessage();\r\n                    await delay(10); //10ms delay\r\n\r\n                    if (numericInputAmount > amountNeeded) {\r\n                        // Calculate overbalance and execute overBalanceMessage\r\n                        const overBalance = numericInputAmount - amountNeeded;\r\n\r\n                        if (overBalance > 0) {\r\n                            await overBalanceMessage(selectedCustomerData.overBalance ? selectedCustomerData.overBalance + overBalance : '');\r\n                            await delay(10); //10ms delay\r\n                            await updateDoc(docRefCustomer, {\r\n                                overBalance: increment(overBalance),\r\n                            });\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    // Update step indicator for successful payment\r\n                    await updateDoc(docRef, {\r\n                        'stepIndicator.value': 4,\r\n                        'stepIndicator.status': 'Payment Confirmed',\r\n                    });\r\n                } else {\r\n                    // Handle the case where the payment is less than the amount needed\r\n                    console.log('Partial payment received');\r\n                }\r\n\r\n                // Update payments and payments history\r\n                await updateDoc(docRef, {\r\n                    payments: arrayUnion(...newPayments)\r\n                });\r\n                await updateDoc(docRefCustomer, {\r\n                    paymentsHistory: arrayUnion(...newPaymentsAccount)\r\n                });\r\n            } else {\r\n                console.error('Negative value entered');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error processing payment: ', error);\r\n        } finally {\r\n            setIsConfirmLoading(false);\r\n            dispatch(setTransactionModalVisible(false));\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const PaymentHistoryModal = ({ historyModalVisible, handleHistoryModalClose, payments }) => {\r\n        // Create a copy of payments and sort it by date in descending order\r\n        const sortedPayments = [...payments].sort((a, b) => {\r\n            const dateA = a.date;\r\n            const dateB = b.date;\r\n            return dateB - dateA; // Sorts in descending order\r\n        });\r\n\r\n        // console.log(sortedPayments);\r\n\r\n        return (\r\n            <Modal isOpen={historyModalVisible} onClose={handleHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Payment History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500, }}>\r\n                            {\r\n                                sortedPayments.length > 0 ?\r\n                                    sortedPayments.map((payment, index) => (\r\n                                        <View key={index} style={{ marginBottom: 15, borderBottomWidth: 1, borderBottomColor: '#eee', paddingBottom: 10 }}>\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black' }}>\r\n                                                <Text style={{ fontWeight: 'bold' }}>Date: </Text>\r\n                                                {/* Use the reversed index for displaying the date */}\r\n                                                <Text style={{ color: '#FF0000' }}>{sortedPayments[sortedPayments.length - 1 - index].date}</Text>\r\n                                            </Text>\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black' }}>\r\n                                                <Text style={{ fontWeight: 'bold' }}>Value: </Text>\r\n                                                {/* Use the reversed index for displaying the value */}\r\n                                                <Text style={{ color: Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString().startsWith('-') ? '#FF0000' : '#16A34A' }}>\r\n                                                    ${Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString()}\r\n                                                </Text>\r\n                                            </Text>\r\n                                        </View>\r\n                                    )) :\r\n                                    <Text style={{ fontWeight: 'bold', alignSelf: 'center', }} italic>No history to show</Text>\r\n                            }\r\n                        </ScrollView>\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        );\r\n    };\r\n\r\n    const totalValue = selectedChatData.payments\r\n        ? selectedChatData.payments.reduce((sum, payment) => {\r\n            const value = Number(payment.value);\r\n            return sum + (isNaN(value) ? 0 : value);\r\n        }, 0)\r\n        : 0;\r\n\r\n    const isTotalValueGreater = Number(totalValue) < Number(invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1'));\r\n    const displayedAmount = isTotalValueGreater ? Number(totalValue).toLocaleString() : invoiceData.paymentDetails.totalAmount;\r\n\r\n    return (\r\n\r\n        <View style={{ flex: 1, }}>\r\n\r\n            <View style={{ marginLeft: 5, }}>\r\n\r\n                <Text style={{ fontWefight: 700, fontSize: 14, }}>Total Paid:</Text>\r\n\r\n                <Progress w=\"300\" shadow={2} value={Number(totalValue)} max={totalAmountNumber} _filledTrack={{\r\n                    bg: \"lime.500\"\r\n                }} />\r\n\r\n                <Text style={{ fontWeight: 700, fontSize: 14, color: '#FF0000', }}>${displayedAmount}\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#8D7777', }}> out of </Text>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#16A34A', }}>{`$${invoiceData.paymentDetails.totalAmount}`}</Text>\r\n                </Text>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ marginLeft: 5, }}>\r\n\r\n                <Pressable\r\n                    onPress={handleHistoryModalOpen}\r\n                    style={{ width: 'fit-content', }}>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#0A78BE', }} underline selectable={false}>Payments History</Text>\r\n                </Pressable>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ marginLeft: 5, marginTop: 5, }}>\r\n\r\n                <Text style={{ fontWeight: 700, fontSize: 14, }}>Input Amount:</Text>\r\n\r\n                <View style={{ flexDirection: 'row', alignItems: 'center', }}>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 18, }}>$</Text>\r\n\r\n                    <TextInput\r\n                        ref={inputAmountRef}\r\n                        placeholderTextColor='#9B9E9F' placeholder='Input Amount'\r\n                        style={{ height: 35, width: 300, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        onChangeText={handleInputAmountChangeText}\r\n                    />\r\n\r\n                </View>\r\n\r\n                <Pressable\r\n                    onPress={handleCompletePaymentPress}\r\n                    style={{ width: 'fit-content', }}>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#16A34A', }} underline selectable={false}>Complete Payment</Text>\r\n                </Pressable>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}>\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        backgroundColor: '#16A34A', // Change color on hover\r\n                        borderRadius: 5,\r\n                        padding: 5,\r\n                    }}\r\n                >\r\n                    {!isConfirmLoading ? (\r\n                        <Pressable\r\n                            onPress={() => confirmPayment()}\r\n                        >\r\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>\r\n                                Confirm\r\n                            </Text>\r\n                        </Pressable>\r\n                    ) : (\r\n                        <Spinner size={'sm'} color={'white'} />)}\r\n\r\n                </View>\r\n            </View>\r\n\r\n            <PaymentHistoryModal\r\n                historyModalVisible={historyModalVisible}\r\n                handleHistoryModalClose={handleHistoryModalClose}\r\n                payments={selectedChatData.payments ? selectedChatData.payments : []} />\r\n\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst IssueProformaInvoiceModalContent = () => {\r\n    const dispatch = useDispatch();\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const [isConfirmHovered, setIsConfirmHovered] = useState(false);\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    const cfsInputRef = useRef(null);\r\n    const placeOfDeliveryInputRef = useRef(null);\r\n    const secretKey = CRYPTO_KEY.toString();\r\n\r\n\r\n\r\n    const invoiceMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: 'Issued Invoice',\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'IssuedInvoice',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: 'Issued Invoice',\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const confirmInvoice = async () => {\r\n        setIsConfirmLoading(true);\r\n        const year = currentDate.split('-')[0]; // Split the date and get the year\r\n        const yearSuffix = year.slice(-2); // Get last 2 digits of the year\r\n        const collectionRef = collection(projectExtensionFirestore, \"IssuedInvoice\");\r\n\r\n        try {\r\n            // Retrieve all documents for the current yearF\r\n            const querySnapshot = await getDocs(collectionRef);\r\n            let maxNumber = 0;\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const docName = doc.id;\r\n                if (docName.startsWith(yearSuffix)) {\r\n                    const number = parseInt(docName.substring(2), 10);\r\n                    if (number > maxNumber) {\r\n                        maxNumber = number;\r\n                    }\r\n                }\r\n            });\r\n\r\n            const nextNumber = maxNumber + 1;\r\n            const docName = `${yearSuffix}${nextNumber}`;\r\n            const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", docName);\r\n            const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\r\n\r\n            const hashedData = createHmacSha256Hash(docName, secretKey);\r\n\r\n            // Create a new document with the globalInvoiceVariable object\r\n            if (selectedChatData.invoiceNumber) {\r\n                const updateDocRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n\r\n                await setDoc(updateDocRef, {\r\n                    ...globalInvoiceVariable,\r\n                    carData: selectedChatData.carData,\r\n                }, { merge: true });\r\n\r\n                if (selectedChatData.stepIndicator.value == 1) {\r\n                    await updateDoc(docRefChatId, {\r\n                        'stepIndicator.status': 'Issue Proforma Invoice',\r\n                        'stepIndicator.value': 2,\r\n                        // finalPrice: globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, ''),\r\n                    });\r\n                }\r\n\r\n                invoiceMessage();\r\n                setIsConfirmLoading(false);\r\n                dispatch(setTransactionModalVisible(false));\r\n            }\r\n\r\n            else {\r\n\r\n                await setDoc(docRef, {\r\n                    ...globalInvoiceVariable,\r\n                    cryptoNumber: hashedData,\r\n                    carData: selectedChatData.carData,\r\n                });\r\n\r\n                await updateDoc(docRefChatId, {\r\n                    keywords: arrayUnion(docName),\r\n                    invoiceNumber: docName,\r\n                    'stepIndicator.status': 'Issue Proforma Invoice',\r\n                    'stepIndicator.value': 2,\r\n                    // finalPrice: globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, ''),\r\n                });\r\n\r\n                invoiceMessage();\r\n                setIsConfirmLoading(false);\r\n                dispatch(setTransactionModalVisible(false));\r\n\r\n\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error creating document: \", error);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     calculateTotalAmount();\r\n    // }, [additionalPriceArray]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        globalInvoiceVariable.cfs = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.cfs ? invoiceData.cfs : cfsInputRef.current?.value;\r\n        globalInvoiceVariable.placeOfDelivery = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.placeOfDelivery ? invoiceData.placeOfDelivery : placeOfDeliveryInputRef.current?.value;\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <ScrollView style={{ flex: 1, maxHeight: 500, }}>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>CFS:</Text>\r\n                <TextInput\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.cfs ? invoiceData.cfs : ''}\r\n                    ref={cfsInputRef} placeholderTextColor='#9B9E9F' placeholder='Input CFS (Optional)'\r\n                    style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onChangeText={(value) => globalInvoiceVariable.cfs = value} />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Place of Delivery:</Text>\r\n                <TextInput\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.placeOfDelivery ? invoiceData.placeOfDelivery : ''}\r\n                    ref={placeOfDeliveryInputRef} placeholderTextColor='#9B9E9F' placeholder='Place of Delivery (Optional)'\r\n                    style={{ height: 25, width: 200, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onChangeText={(value) => globalInvoiceVariable.placeOfDelivery = value} />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, alignItems: 'center' }}>\r\n                <Text style={{ fontWeight: 700, margin: 3 }}>Port of Departure:</Text>\r\n                <SelectPortOfDeparture />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Sales Person:</Text>\r\n                <SelectSalesPerson />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 5, }} />\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Port of Discharge:</Text>\r\n                {/*Select Discharge*/}\r\n                <SelectPortOfDischarge />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 5, }} />\r\n\r\n            <ConsigneeInput />\r\n\r\n            <PaymentDetails />\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />\r\n\r\n            <BankInformation />\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}>\r\n                <View\r\n\r\n                    // onTouchEnd={() => confirmInvoice()}\r\n                    style={{\r\n                        flex: 1,\r\n                        backgroundColor: isConfirmHovered ? '#145A32' : '#16A34A', // Change color on hover\r\n                        borderRadius: 5,\r\n                        padding: 5,\r\n                    }}\r\n\r\n                // onMouseEnter={() => setIsConfirmHovered(true)}\r\n                // onMouseLeave={() => setIsConfirmHovered(false)}\r\n                >\r\n                    {!isConfirmLoading ? (\r\n                        <Pressable onPress={() => confirmInvoice()}>\r\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>\r\n                                Confirm\r\n                            </Text>\r\n                        </Pressable>\r\n\r\n                    ) : (\r\n                        <Spinner size={'sm'} color={'white'} />)}\r\n\r\n                </View>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\n\r\nconst ProfitCalculator = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const [totalSCCAmount, setTotalSCCAmount] = useState(0);\r\n    const [formattedTotalSCCAmount, setFormattedTotalSCCAmount] = useState(0);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [totalProfitAmountDollars, setTotalProfitAmountDollars] = useState(0);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n    const inputPriceRef = useRef(null);\r\n\r\n\r\n    const [portsData, setPortsData] = useState({});\r\n    const [origFreight, setOrigFreight] = useState(0);\r\n    const [lastFetchedPort, setLastFetchedPort] = useState('');\r\n\r\n\r\n    // Function to fetch ports data from Firestore\r\n    const fetchPortsData = async () => {\r\n        const currentPort = invoiceData.discharge.port;\r\n        const freightOrigPrice = selectedChatData.freightOrigPrice;\r\n\r\n        // Fetch data if the current port is different from the last fetched port\r\n        // and if freightOrigPrice is valid (exists, not an empty string, and not 0)\r\n        if (currentPort !== lastFetchedPort && !freightOrigPrice) {\r\n\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    if (data[currentPort]?.kobePrice !== undefined) {\r\n\r\n                        if (invoiceData.departurePort == \"Nagoya\") {\r\n\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].nagoyaPrice,\r\n                            });\r\n                            // console.log(\"Nagoya Price \", data[currentPort].nagoyaPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Yokohama\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].yokohamaPrice,\r\n                            });\r\n                            // console.log(\"Yokohama Price \", data[currentPort].yokohamaPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Kyushu\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].kyushuPrice,\r\n                            });\r\n                            // console.log(\"Kyushu Price \", data[currentPort].kyushuPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Kobe\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].kobePrice,\r\n                            });\r\n                            // console.log(\"Kobe Price \", data[currentPort].kobePrice);\r\n\r\n                        }\r\n\r\n                        setLastFetchedPort(currentPort); // Update last fetched port\r\n                    } else {\r\n                        console.log('Port data not found for the given port');\r\n                    }\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        } else {\r\n            console.log('No need to fetch new data');\r\n        }\r\n    };\r\n\r\n\r\n    // useEffect for fetching ports data\r\n    // useEffect(() => {\r\n    //     // Fetch ports data\r\n    //     const fetchPortsData = async () => {\r\n    //         const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n    //         try {\r\n    //             const docSnap = await getDoc(docRef);\r\n\r\n    //             if (docSnap.exists()) {\r\n    //                 const data = docSnap.data();\r\n    //                 setPortsData(data[invoiceData.discharge.port].kobePrice);\r\n    //                 console.log(data[invoiceData.discharge.port].kobePrice);\r\n    //             } else {\r\n    //                 console.log('No such document!');\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching document:', error);\r\n    //         }\r\n    //     };\r\n\r\n    //     fetchPortsData();\r\n\r\n    // }, [invoiceData]);\r\n\r\n\r\n    const handleModalOpen = () => {\r\n        setModalVisible(true);\r\n        inputPriceRef.current.value = defaultInputPrice;\r\n        calculateTotalAmount();\r\n\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n\r\n    };\r\n\r\n\r\n    const fee = {\r\n        auction: 10000,\r\n        transport: 10000,\r\n        shippingAgent: 15000,\r\n    };\r\n\r\n    const purchasedPrice = Number(selectedChatData.carData && selectedChatData.carData.purchasedPrice ? selectedChatData.carData.purchasedPrice : 0);\r\n    const formattedPurchasedPrice = Number(purchasedPrice).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const auctionFee = Number(fee.auction);\r\n    const formattedAuctionFee = Number(auctionFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const transportFee = Number(fee.transport);\r\n    const formattedTransportFee = Number(transportFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const shippingAgentFee = Number(fee.shippingAgent);\r\n    const formattedShippingAgentFee = Number(shippingAgentFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const cubicMeter = Number(selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ? selectedChatData.carData.dimensionCubicMeters : 0).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n\r\n    const costPerCubicMeter = Number(selectedChatData && selectedChatData.freightOrigPrice ? selectedChatData.freightOrigPrice : 0);\r\n    const formattedCostPerCubicMeter = Number(costPerCubicMeter).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const totalCubicMeterCostDollars = Number(costPerCubicMeter * cubicMeter);\r\n    const formattedTotalCubicMeterCostDollars = Number(costPerCubicMeter * cubicMeter).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const totalCubicMeterCostYen = Number(totalCubicMeterCostDollars * selectedChatData.currency.usdToJpy);\r\n    const formattedTotalCubicMeterCostYen = Number(totalCubicMeterCostYen).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const realTotalPriceYen = (purchasedPrice + auctionFee + transportFee + shippingAgentFee + totalSCCAmount + totalCubicMeterCostYen)\r\n    const formattedRealTotalPriceYen = Number(realTotalPriceYen).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const realTotalPriceDollars = realTotalPriceYen * selectedChatData.currency.jpyToUsd;\r\n    const formattedRealTotalPriceDollars = realTotalPriceDollars.toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n\r\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\r\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice));\r\n\r\n\r\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0))) + freightCalculation;\r\n\r\n    const defaultInputPrice = Math.round(\r\n        invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount\r\n            ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, ''))\r\n            : totalPriceCalculation\r\n    );\r\n\r\n\r\n\r\n\r\n    const safelyParseNumber = (value) => {\r\n        const number = Number(value.replace(/,/g, ''));\r\n        return isNaN(number) ? 0 : number;\r\n    };\r\n\r\n    const calculateTotalAmount = () => {\r\n\r\n        const inputPrice = safelyParseNumber(inputPriceRef.current?.value);\r\n\r\n        const totalAmountDollars = Math.round(inputPrice - realTotalPriceDollars);\r\n        setTotalProfitAmountDollars(totalAmountDollars);\r\n        // const total = Math.round(fobPrice + freight + inspection + insurance + additionalPricesTotal).toLocaleString();\r\n        // setTotalAmountCalculated(total);\r\n        // globalInvoiceVariable.paymentDetails.totalAmount = total;\r\n    };\r\n\r\n    const handleInputPriceChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9]/g, '');\r\n        inputPriceRef.current.value = filteredText;\r\n\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        if (selectedChatData.carData && selectedChatData.carData.supplyChainsCostsData) {\r\n\r\n            const amounts = selectedChatData.carData.supplyChainsCostsData.map((item) => {\r\n                const expenseName = Object.keys(item)[0];\r\n                const expenseData = item[expenseName];\r\n                return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n            });\r\n\r\n            // Use reduce to add up all the amounts\r\n            const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n            const formattedTotalAmount = totalAmount.toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n            setTotalSCCAmount(totalAmount);\r\n            setFormattedTotalSCCAmount(formattedTotalAmount);\r\n\r\n\r\n            // console.log(defaultInputPrice);\r\n            // console.log(realTotalPriceDollars);\r\n            // console.log(formattedRealTotalPriceDollars);\r\n            // console.log(realTotalPriceYen);\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const freightOrigPrice = selectedChatData.freightOrigPrice;\r\n\r\n        if (modalVisible && !freightOrigPrice) {\r\n            fetchPortsData();\r\n        }\r\n\r\n\r\n    }, [modalVisible]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (totalSCCAmount !== 0 || totalSCCAmount !== '') {\r\n            const totalAmountDollars = Math.round(defaultInputPrice - realTotalPriceDollars);\r\n            setTotalProfitAmountDollars(totalAmountDollars);\r\n        }\r\n\r\n\r\n    }, [totalSCCAmount]);\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable\r\n                onPress={handleModalOpen}\r\n                focusable={false}\r\n                variant='ghost'\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#4c555c' : '#6e7a83',\r\n                }}>\r\n                <Ionicons size={15} color={'white'} name='calculator' />\r\n                <Text style={{ textAlign: 'center', color: 'white', fontWeight: 'bold', }} >Profit Calculator</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={modalVisible}\r\n                onClose={() => {\r\n                    handleModalClose()\r\n                }}\r\n                initialFocusRef={inputPriceRef}\r\n                size={'lg'}\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header>Profit Calculator</Modal.Header>\r\n                    <Modal.Body style={{ flexDirection: 'row', backgroundColor: '#fafafa', }}>\r\n\r\n                        <View style={{ flex: 1, borderRightWidth: 1, borderRightColor: '#DADDE1', }}>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, }}>Profit (Yen):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(totalProfitAmountDollars * selectedChatData.currency.usdToJpy) < 0 ? '#FF0000' : '#8D7777',\r\n                                }}>\r\n                                    {`${Number(totalProfitAmountDollars * selectedChatData.currency.usdToJpy).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, }}>Profit (US Dollars):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(totalProfitAmountDollars) < 0 ? '#FF0000' : '#16A34A',\r\n                                }}>\r\n                                    {`${Number(totalProfitAmountDollars).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, }}>Profit (Percentage):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(((totalProfitAmountDollars * selectedChatData.currency.usdToJpy) / purchasedPrice) * 100) <= 10.5 ? '#FF0000' : '#336699',\r\n                                }}>\r\n                                    {`${Number(((totalProfitAmountDollars * selectedChatData.currency.usdToJpy) / purchasedPrice) * 100).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}%`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: '#6E7A83', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, color: 'white', }}>Price to calculate:</Text>\r\n                                <TextInput\r\n                                    onChangeText={handleInputPriceChangeText}\r\n                                    defaultValue={defaultInputPrice}\r\n                                    ref={inputPriceRef}\r\n                                    placeholderTextColor='#9B9E9F' placeholder='Input Price'\r\n                                    style={{\r\n                                        backgroundColor: 'white',\r\n                                        height: 25,\r\n                                        margin: 2,\r\n                                        padding: 1,\r\n                                        borderRadius: 4,\r\n                                        borderWidth: 1,\r\n                                        borderColor: 'white',\r\n                                        outlineStyle: 'none',\r\n                                        fontSize: 18,\r\n                                        fontWeight: '700',\r\n                                    }}\r\n                                />\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n\r\n                        <View style={{ flex: 1, marginLeft: 3 }}>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Purchased Price:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedPurchasedPrice}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Auction Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedAuctionFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Transport Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedTransportFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Shipping Agent Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedShippingAgentFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Supply Chains Costs:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedTotalSCCAmount}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Cubic Meter:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${cubicMeter}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Cost per Cubic Meter:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedCostPerCubicMeter} x ${cubicMeter}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 14, lineHeight: 14, color: '#16A34A', }}>\r\n                                    {`${formattedTotalCubicMeterCostDollars}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 14, lineHeight: 14, color: '#8D7777', }}>\r\n                                    {`${formattedTotalCubicMeterCostYen}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, }}>Total:</Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 18, color: '#8D7777', }}>\r\n                                    {`${formattedRealTotalPriceYen}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 18, color: '#16A34A', }}>\r\n                                    {`${formattedRealTotalPriceDollars}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nconst PreviewInvoice = () => {\r\n\r\n    // npm install html2canvas jspdf\r\n    // import jsPDF from 'jspdf';\r\n    // import html2canvas from 'html2canvas';\r\n    const dispatch = useDispatch();\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const previewInvoiceVisible = useSelector((state) => state.previewInvoiceVisible);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [isPreviewHovered, setIsPreviewHovered] = useState(false);\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const invoiceRef = useRef(null);\r\n    const [invoiceImageUri, setInvoiceImageUri] = useState('');\r\n    const hoverPreviewIn = () => setIsPreviewHovered(true);\r\n    const hoverPreviewOut = () => setIsPreviewHovered(false);\r\n    const [capturedImageUri, setCapturedImageUri] = useState('');\r\n    const [vehicleImageUri, setVehicleImageUri] = useState(globalImageUrl);\r\n    const [featuresTrueCount, setFeaturesTrueCount] = useState(0);\r\n    const [rerenderState, setRerenderState] = useState(0);\r\n\r\n    const handlePreviewInvoiceModalOpen = () => {\r\n        dispatch(setPreviewInvoiceVisible(true));\r\n    };\r\n\r\n    const handlePreviewInvoiceModalClose = () => {\r\n        dispatch(setPreviewInvoiceVisible(false));\r\n        setCapturedImageUri('');\r\n    }\r\n\r\n    function countTrueValuesInCarData(invoiceData) {\r\n        let count = 0;\r\n\r\n        // Check if carData exists in invoiceData\r\n        if (invoiceData.carData) {\r\n            // List of fields to check within carData\r\n            const fields = ['interior', 'exterior', 'safetySystem', 'comfort', 'sellingPoints'];\r\n\r\n            fields.forEach(field => {\r\n                if (invoiceData.carData[field]) {\r\n                    // Count true values in each field of carData\r\n                    count += Object.values(invoiceData.carData[field]).filter(value => value === true).length;\r\n                }\r\n            });\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (previewInvoiceVisible) {\r\n            setRerenderState(rerenderState + 1);\r\n        }\r\n    }, [previewInvoiceVisible])\r\n\r\n\r\n    useEffect(() => {\r\n        const captureImageAsync = async () => {\r\n            try {\r\n                if (invoiceRef.current) {\r\n                    // Adjust the scale to control the captured image resolution\r\n                    const scale = 0.85; // Experiment with different scale values\r\n                    const width = 2480 * scale;\r\n                    const height = 3508 * scale;\r\n\r\n                    const imageUri = await captureRef(invoiceRef, {\r\n                        format: 'jpg',\r\n                        quality: 1, // Adjust quality if needed\r\n                        result: 'base64',\r\n                        width: width,\r\n                        height: height,\r\n                    });\r\n                    setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\r\n                    const trueCount = countTrueValuesInCarData(invoiceData);\r\n                    setFeaturesTrueCount(trueCount);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error capturing view:\", error);\r\n            }\r\n        };\r\n\r\n        const convertImageToBase64 = async (url) => {\r\n            try {\r\n                const response = await fetch(url);\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const blob = await response.blob();\r\n                return new Promise((resolve, reject) => {\r\n                    const reader = new FileReader();\r\n                    reader.onloadend = () => resolve(reader.result);\r\n                    reader.onerror = reject;\r\n                    reader.readAsDataURL(blob);\r\n                });\r\n            } catch (error) {\r\n                console.error('Fetch error:', error.message);\r\n                return null;\r\n            }\r\n        };\r\n        convertImageToBase64(globalImageUrl)\r\n            .then(base64String => {\r\n                setVehicleImageUri(base64String);\r\n            });\r\n        // Trigger image capture when invoiceRef changes\r\n        captureImageAsync();\r\n\r\n        if (screenWidth < 960) {\r\n            const captureImageAsync = async () => {\r\n                try {\r\n                    if (invoiceRef.current) {\r\n                        // Adjust the scale to control the captured image resolution\r\n                        const scale = 0.85; // Experiment with different scale values\r\n                        const width = 2480 * scale;\r\n                        const height = 3508 * scale;\r\n\r\n                        const imageUri = await captureRef(invoiceRef, {\r\n                            format: 'jpg',\r\n                            quality: 1, // Adjust quality if needed\r\n                            result: 'base64',\r\n                            width: width,\r\n                            height: height,\r\n                        });\r\n                        setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\r\n                        const trueCount = countTrueValuesInCarData(invoiceData);\r\n                        setFeaturesTrueCount(trueCount);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Error capturing view:\", error);\r\n                }\r\n            };\r\n\r\n            const convertImageToBase64 = async (url) => {\r\n                try {\r\n                    const response = await fetch(url);\r\n                    if (!response.ok) {\r\n                        throw new Error(`HTTP error! status: ${response.status}`);\r\n                    }\r\n                    const blob = await response.blob();\r\n                    return new Promise((resolve, reject) => {\r\n                        const reader = new FileReader();\r\n                        reader.onloadend = () => resolve(reader.result);\r\n                        reader.onerror = reject;\r\n                        reader.readAsDataURL(blob);\r\n                    });\r\n                } catch (error) {\r\n                    console.error('Fetch error:', error.message);\r\n                    return null;\r\n                }\r\n            };\r\n            convertImageToBase64(globalImageUrl)\r\n                .then(base64String => {\r\n                    setVehicleImageUri(base64String);\r\n                });\r\n            // Trigger image capture when invoiceRef changes\r\n            captureImageAsync();\r\n        }\r\n\r\n    }, [invoiceRef.current, vehicleImageUri]);\r\n\r\n    const captureImage = async () => {\r\n        try {\r\n            // Adjust the scale to control the captured image resolution\r\n            const scale = 0.9; // Experiment with different scale values\r\n            const width = 2480 * scale;\r\n            const height = 3508 * scale;\r\n\r\n            const imageUri = await captureRef(invoiceRef, {\r\n                format: 'jpg',\r\n                quality: 1, // Adjust quality if needed\r\n                result: 'base64',\r\n                width: width,\r\n                height: height,\r\n            });\r\n            return `data:image/jpeg;base64,${imageUri}`;\r\n        } catch (error) {\r\n            console.error(\"Error capturing view:\", error);\r\n        }\r\n    };\r\n\r\n    const createPDF = async () => {\r\n        const element = invoiceRef.current;\r\n        if (element) {\r\n            // Reduce the scale slightly for smaller file size\r\n            const scale = 1; // Fine-tune this value for balance\r\n\r\n            const canvas = await html2canvas(element, {\r\n                scale: scale,\r\n            });\r\n\r\n            // Experiment with JPEG quality for a balance between quality and file size\r\n            const imageData = canvas.toDataURL('image/jpeg', 0.9);\r\n\r\n            // A4 size dimensions in mm\r\n            const pdfWidth = 210;\r\n            const pdfHeight = 297;\r\n\r\n            const pdf = new jsPDF({\r\n                orientation: 'portrait',\r\n                unit: 'mm',\r\n                format: 'a4'\r\n            });\r\n\r\n            // Adjust PDF compression settings\r\n            const options = {\r\n                imageCompression: 'JPEG',\r\n                imageQuality: 1, // Fine-tune this value as well\r\n            };\r\n\r\n            const imgProps = pdf.getImageProperties(imageData);\r\n            const pdfWidthFit = pdfWidth;\r\n            const pdfHeightFit = (imgProps.height * pdfWidthFit) / imgProps.width;\r\n\r\n            pdf.addImage(imageData, 'JPEG', 0, 0, pdfWidthFit, pdfHeightFit, undefined, 'FAST', 0, options);\r\n\r\n            // Filename logic\r\n            selectedChatData.stepIndicator.value < 3 ?\r\n                pdf.save(`Proforma Invoice (${invoiceData.carData.carName} [${invoiceData.carData.referenceNumber}]) (A4 Paper Size).pdf`) :\r\n                pdf.save(`Invoice No. ${invoiceData.id} (A4 Paper Size).pdf`);\r\n        } else {\r\n            console.error(\"No element to capture\");\r\n        }\r\n    };\r\n\r\n\r\n    const handleCaptureAndCreatePDF = async () => {\r\n        const capturedImageUri = await captureImage();\r\n        if (capturedImageUri) {\r\n            await createPDF(capturedImageUri);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\r\n        const dueDateString = invoiceData.bankInformations.dueDate;\r\n        const issuingDateObject = new Date(issuingDateString);\r\n        const dueDateObject = new Date(dueDateString);\r\n\r\n\r\n        const options = {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        };\r\n\r\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\r\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\r\n\r\n    }\r\n\r\n    const originalWidth = 794;\r\n    const originalHeight = 1123;\r\n\r\n    const newWidth = 2480;\r\n    const newHeight = 3508;\r\n\r\n    const widthScaleFactor = newWidth / originalWidth;\r\n    const heightScaleFactor = newHeight / originalHeight;\r\n\r\n    const openImage = () => {\r\n        if (Platform.OS === 'web') {\r\n            const imageWindow = window.open();\r\n            imageWindow.document.write(`\r\n                <style>\r\n                    body {\r\n                        margin: 0;\r\n                        display: flex;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                        height: 100vh;\r\n                        overflow: hidden;\r\n                    }\r\n                    img {\r\n                        width: 595px;\r\n                        height: 842px;\r\n                        object-fit: contain;\r\n                        transition: transform 0.25s ease;\r\n                        cursor: zoom-in; /* Set cursor to magnifying glass */\r\n                    }\r\n                    .zoomed {\r\n                        transform: scale(3);\r\n                        transform-origin: center;\r\n                        cursor: zoom-out; /* Change cursor to indicate zooming out */\r\n                    }\r\n                </style>\r\n                <img id=\"zoomableImage\" src=\"${capturedImageUri}\" alt=\"Base64 Image\" draggable=\"false\" />\r\n                <script>\r\n                    const image = document.getElementById('zoomableImage');\r\n    \r\n                    image.addEventListener('mousedown', function(e) {\r\n                        const rect = this.getBoundingClientRect();\r\n                        const x = e.clientX - rect.left;\r\n                        const y = e.clientY - rect.top;\r\n    \r\n                        // Set the transform origin to the mouse position\r\n                        this.style.transformOrigin = \\`\\${x}px \\${y}px\\`;\r\n                        this.classList.add('zoomed');\r\n                    });\r\n    \r\n                    document.addEventListener('mouseup', function() {\r\n                        image.classList.remove('zoomed');\r\n                    });\r\n                </script>\r\n            `);\r\n        } else {\r\n            console.log('This feature is only available in a web environment');\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <> {invoiceData && Object.keys(invoiceData).length > 0 &&\r\n\r\n            <>\r\n                <Pressable\r\n                    onPress={handlePreviewInvoiceModalOpen}\r\n                    focusable={false}\r\n                    variant='ghost'\r\n                    onHoverIn={hoverPreviewIn}\r\n                    onHoverOut={hoverPreviewOut}\r\n                    style={{\r\n                        marginTop: 3,\r\n                        paddingVertical: 3,\r\n                        paddingHorizontal: 5,\r\n                        flexDirection: 'row', // Align items in a row\r\n                        alignItems: 'center', // Center items vertically\r\n                        justifyContent: 'center',\r\n                        borderRadius: 5,\r\n                        backgroundColor: isPreviewHovered ? '#0772ad' : '#0A8DD5',\r\n                    }}>\r\n\r\n                    {selectedChatData.invoiceNumber && selectedChatData.stepIndicator.value > 2 ?\r\n                        <Text style={{ fontWeight: 700, color: 'white', }}>\r\n                            {`Preview Invoice No. ${selectedChatData.invoiceNumber}`}\r\n                        </Text>\r\n                        :\r\n                        <Text style={{ fontWeight: 700, color: 'white', }}>\r\n                            {`Preview Invoice`}\r\n                        </Text>}\r\n\r\n                </Pressable>\r\n\r\n                <Modal\r\n                    isOpen={previewInvoiceVisible}\r\n                    onClose={() => {\r\n                        handlePreviewInvoiceModalClose();\r\n                    }}\r\n                    size={'full'}\r\n                    useRNModal\r\n                >\r\n                    <View style={{ flexDirection: 'row', margin: 2, }}>\r\n                        <Pressable onPress={() => {\r\n                            capturedImageUri && vehicleImageUri ? handleCaptureAndCreatePDF() : null;\r\n                        }}\r\n                            style={{ justifyContent: 'center', flexDirection: 'row', padding: 5, borderRadius: 5, backgroundColor: '#16A34A', }}>\r\n                            <MaterialCommunityIcons size={20} name='download' color='white' />\r\n                            <Text style={{ color: 'white', }}>Download as PDF</Text>\r\n                        </Pressable>\r\n\r\n                        <Pressable\r\n                            onPress={() => {\r\n                                capturedImageUri && vehicleImageUri ? openImage() : null;\r\n                            }}\r\n                            style={{ position: 'absolute', top: -2, right: -380, flexDirection: 'row', padding: 5, borderRadius: 5, backgroundColor: '#0A8DD5', }}>\r\n                            <Entypo size={20} name='images' color='white' />\r\n                            <Text style={{ color: 'white', }}>View Image</Text>\r\n                        </Pressable>\r\n                    </View>\r\n                    <Modal.CloseButton />\r\n                    {previewInvoiceVisible &&\r\n                        <ScrollView\r\n                            style={{ maxHeight: screenWidth < 960 ? 480 : 720, maxWidth: screenWidth < 960 ? 320 : 900 }}\r\n                        >\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                right: 0,\r\n                                left: 0,\r\n                                backgroundColor: 'white',\r\n                                zIndex: 999,\r\n                                flex: 1,\r\n                                alignItems: 'center', // Center horizontally\r\n                            }}>\r\n                                {capturedImageUri && vehicleImageUri ? (\r\n                                    <NativeImage\r\n                                        source={{ uri: capturedImageUri }}\r\n                                        style={{\r\n                                            marginTop: 5,\r\n                                            width: screenWidth < 960 ? 320 : 595,\r\n                                            height: screenWidth < 960 ? 480 : 842,\r\n                                            resizeMode: 'stretch',\r\n                                            borderWidth: 1,\r\n                                            borderColor: '#DADDE1',\r\n                                        }}\r\n                                    />\r\n                                ) : (<Spinner size={'lg'} color={'#0A9FDC'} style={{ alignSelf: 'center', paddingTop: 80 * heightScaleFactor, }} />)}\r\n                            </View>\r\n\r\n                            {/* Main content with invoice details */}\r\n                            {vehicleImageUri !== '' &&\r\n                                <View ref={invoiceRef} style={{ width: 2480, height: 3508, backgroundColor: 'white', zIndex: 1 }}>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        <NativeImage\r\n                                            source={require('../../assets/RMJ logo for invoice.png')}\r\n                                            style={{\r\n                                                width: 95 * widthScaleFactor,\r\n                                                height: 85 * heightScaleFactor,\r\n                                                resizeMode: 'stretch',\r\n                                            }}\r\n                                        />\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * heightScaleFactor }}>\r\n                                        {/* Title */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`PROFORMA INVOICE`}</Text> :\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`INVOICE`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        {/* QR CODE */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <QRCode\r\n                                                value={invoiceData.cryptoNumber}\r\n                                                size={80 * widthScaleFactor}\r\n                                                color=\"black\"\r\n                                                backgroundColor=\"white\"\r\n                                            />\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 34 * heightScaleFactor }}>\r\n                                        {/* Invoice Number */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Invoice No. RMJ-${invoiceData.id}`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 34 * heightScaleFactor, }}>\r\n                                            {/* Issuing Date */}\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                                            </View>\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#F00A0A', }}>{`Valid Until: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 49 * heightScaleFactor, flexDirection: 'row' }}>\r\n                                            {/* Issuing Date */}\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                            <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                                        </View>\r\n                                    }\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 40 * widthScaleFactor,\r\n                                        top: 134 * heightScaleFactor,\r\n                                        maxWidth: 300 * widthScaleFactor,\r\n                                    }}>\r\n                                        {/* Shipper */}\r\n                                        <Text style={{\r\n                                            fontWeight: 750,\r\n                                            fontSize: 16 * widthScaleFactor,\r\n                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                            width: 'fit-content', // Make the underline cover the text width\r\n                                            marginBottom: 5, // Add some space between text and underline\r\n                                        }}>\r\n                                            {`Shipper`}\r\n                                        </Text>\r\n                                        <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: +81565850606`}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped From:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.departurePort}, ${invoiceData.departureCountry}`}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped To:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.discharge.port}, ${invoiceData.discharge.country}`}</Text>\r\n                                        {invoiceData.placeOfDelivery && invoiceData.placeOfDelivery !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Place of Delivery:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.placeOfDelivery}`}</Text>\r\n                                            </>\r\n                                            : null}\r\n                                        {invoiceData.cfs && invoiceData.cfs !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`CFS:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.cfs}`}</Text>\r\n                                            </>\r\n                                            : null}\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', width: 715 * widthScaleFactor, }}>\r\n\r\n                                            <View style={{\r\n                                                flex: 1, width: 280 * widthScaleFactor,\r\n                                            }}>\r\n                                                {/* Buyer Information */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#0A78BE',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#0A78BE',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n\r\n                                                }}>\r\n                                                    {`Buyer Information`}\r\n                                                </Text>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.name}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.address}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.email}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.contactNumber}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${invoiceData.consignee.fax == '' ? 'N/A' : invoiceData.consignee.fax}`}</Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, paddingLeft: 20 * widthScaleFactor, width: 280 * widthScaleFactor, }}>\r\n                                                {/* Notify Party */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#FF0000',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#FF0000',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n                                                }}>\r\n                                                    {`Notify Party`}\r\n                                                </Text>\r\n                                                {invoiceData.notifyParty.sameAsConsignee == true ? (\r\n                                                    <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\r\n                                                    (<>\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.name}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.address}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.email}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.contactNumber}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${invoiceData.notifyParty.fax == '' ? 'N/A' : invoiceData.notifyParty.fax}`}</Text>\r\n                                                    </>)}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n\r\n                                    </View>\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#FF5C00', height: 194 * heightScaleFactor, }}>\r\n                                            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                <Entypo size={50 * widthScaleFactor} name='warning' color={'#FF0000'} />\r\n                                                <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#FF0000', marginLeft: 20 * widthScaleFactor, }}>{`Bank Information will be provided after placing an order.`}</Text>\r\n                                            </View>\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#1ABA3D', }}>\r\n\r\n                                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * widthScaleFactor, marginBottom: 5 * heightScaleFactor, }}>\r\n                                                <View style={{ flex: 1, marginRight: 50 * widthScaleFactor, }}>\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Bank Account`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Bank Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Branch Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`SWIFTCODE: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Address: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Name of Account Holder: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Account Number: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View style={{ flex: 1 }}>\r\n\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Payment Terms`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Terms: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <View style={{ paddingTop: 30 * heightScaleFactor, }}>\r\n\r\n                                                        <Text style={{\r\n                                                            fontWeight: 750,\r\n                                                            fontSize: 14 * widthScaleFactor,\r\n                                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                            width: 'fit-content', // Make the underline cover the text width\r\n                                                            marginBottom: 2, // Add some space between text and underline\r\n                                                            color: '#F00A0A',\r\n                                                            borderBottomColor: '#F00A0A',\r\n                                                        }}>\r\n                                                            {`Payment Due`}\r\n                                                        </Text>\r\n\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#F00A0A', lineHeight: 14 * widthScaleFactor }}>{`Due Date: `}\r\n                                                            <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, color: 'black', lineHeight: 14 * widthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                                        </Text>\r\n\r\n                                                    </View>\r\n\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                        </View>}\r\n\r\n\r\n\r\n                                    {/* <View style={{ position: 'absolute', left: 260 * widthScaleFactor, top: 335 * heightScaleFactor }}>\r\n\r\n                                        <View style={{ flexDirection: 'row' }}>\r\n                                            {vehicleImageUri ? (\r\n                                                <NativeImage\r\n                                                    source={{ uri: vehicleImageUri }}\r\n                                                    style={{\r\n                                                        width: 99 * widthScaleFactor,\r\n                                                        height: 70 * heightScaleFactor,\r\n                                                        resizeMode: 'stretch',\r\n                                                    }}\r\n                                                />\r\n                                            ) : (\r\n                                                <View\r\n                                                    style={{\r\n                                                        width: 99 * widthScaleFactor,\r\n                                                        height: 70 * heightScaleFactor,\r\n                                                        backgroundColor: '#e0e0e0',\r\n                                                        marginRight: 12,\r\n                                                    }}\r\n                                                />\r\n                                            )}\r\n                                            <View style={{ flex: 1, top: -2 * heightScaleFactor, marginLeft: 5 * widthScaleFactor, height: 59 * heightScaleFactor }}>\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 14 * widthScaleFactor, lineHeight: 16 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.carName}`}\r\n                                                </Text>\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Reference No.: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${invoiceData.carData.referenceNumber}`}\r\n                                                    </Text>\r\n                                                </Text>\r\n\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Year/Month: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${invoiceData.carData.regYear}/${invoiceData.carData.regMonth}`}\r\n                                                    </Text>\r\n                                                </Text>\r\n\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Mileage: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km`}\r\n                                                    </Text>\r\n                                                </Text>\r\n\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Chassis No.: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${invoiceData.carData.chassisNumber}`}\r\n                                                    </Text>\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 260 * widthScaleFactor, top: 410 * heightScaleFactor, flexDirection: 'row', width: 495 * widthScaleFactor, }}>\r\n                                        <View style={{ flex: 1 }}>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Model Code: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.modelCode}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Fuel: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.fuel}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Transmission: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.transmission}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Steering: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.steering}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Displacement: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc`}\r\n                                                </Text>\r\n                                            </Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1 }}>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Doors: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.doors ? invoiceData.carData.doors : 'N/A'}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Drive Type: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.driveType ? invoiceData.carData.driveType : 'N/A'}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Exterior Color: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.exteriorColor}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Number of Seats: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.numberOfSeats ? invoiceData.carData.numberOfSeats : 'N/A'}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Body Type: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.bodyType}`}\r\n                                                </Text>\r\n                                            </Text>\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 260 * widthScaleFactor, top: 484 * heightScaleFactor, width: 495 * widthScaleFactor, }}>\r\n                                        <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginBottom: 3 * heightScaleFactor, }}>\r\n                                            {`Features: `}\r\n                                        </Text>\r\n\r\n                                        <InvoiceFeatures widthScaleFactor={widthScaleFactor} heightScaleFactor={heightScaleFactor} />\r\n\r\n                                    </View> */}\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 38 * widthScaleFactor,\r\n                                        top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * heightScaleFactor : 537 * heightScaleFactor,\r\n                                        width: 718 * widthScaleFactor,\r\n                                        borderWidth: 1 * widthScaleFactor,\r\n                                        borderColor: '#C2E2F4',\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Description`}\r\n                                                </Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Notes`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Quantity`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Amount`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {`FOB`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {`$${Math.round(Number(invoiceData.paymentDetails.fobPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {`Freight`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {`$${Math.round(Number(invoiceData.paymentDetails.freightPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                                </Text>}\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <>\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                marginLeft: 2 * widthScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                                        </Text>\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                marginLeft: 2 * widthScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.incoterms == \"CIF\" ? ` + Insurance` : ' '}\r\n                                                        </Text>\r\n                                                    </>\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? `Insurance` : ' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                        }}>\r\n                                                        {' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n\r\n                                            </View>\r\n\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                </Text>}\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.incoterms === \"CIF\" ? ` + $${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                        </Text>\r\n                                                    </Text>\r\n\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? `$${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n                                            </View>\r\n\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 ? `${invoiceData.paymentDetails.additionalName.join(' + ')}` : ' '}\r\n                                                </Text>}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\r\n                                                        ? invoiceData.paymentDetails.additionalPrice.map(price =>\r\n                                                            `$${parseFloat(price).toLocaleString('en-US', {\r\n                                                                style: 'currency',\r\n                                                                currency: 'USD',\r\n                                                                minimumFractionDigits: 0,\r\n                                                                maximumFractionDigits: 0\r\n                                                            }).slice(1)}`\r\n                                                        ).join(' + ')\r\n                                                        : ' '}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                paddingVertical: 2 * heightScaleFactor,\r\n\r\n                                            }}>\r\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                        {\"Used Vehicle\\n\"}\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.carName}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.chassisNumber}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.exteriorColor}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.fuel}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.transmission}\\n`}\r\n                                                        </Text>\r\n                                                    </Text>\r\n\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.incoterms && invoiceData.discharge.port && invoiceData.discharge ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                        {`${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}`}\r\n                                                    </Text>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 1,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                        {'1'}\r\n                                                    </Text>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                justifyContent: 'center',\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\r\n                                                    <>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            color: '#008AC6',\r\n                                                            marginRight: 10 * widthScaleFactor,\r\n                                                            top: 51 * heightScaleFactor,\r\n                                                            left: 50 * widthScaleFactor,\r\n                                                            position: 'absolute',\r\n                                                        }}>\r\n                                                            {\"Total\"}\r\n                                                            <Text style={{\r\n                                                                fontWeight: 700,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                alignSelf: 'center',\r\n                                                                color: '#00720B',\r\n                                                                marginLeft: 5 * widthScaleFactor,\r\n                                                            }}>\r\n                                                                {`$${invoiceData.paymentDetails.totalAmount}`}\r\n                                                            </Text>\r\n                                                        </Text>\r\n\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 825 * heightScaleFactor, width: 350 * widthScaleFactor, }}>\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Payment Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'No warranty service is provided on used vehicles.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Conditions for order cancellation:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'(1) Order Cancellation Penalty: If the order is canceled after payment, a penalty of USD 220 will apply.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Intermediary Banking Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Swift code: SMBCUS33'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Address: 277 Park Avenue'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'City: New York, NY'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Postal Code: 10172'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Country: United States'}\r\n                                        </Text>\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ? null :\r\n                                        <View style={{ position: 'absolute', right: 39 * widthScaleFactor, top: 835 * heightScaleFactor, width: 300 * widthScaleFactor, }}>\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 80 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n                                                <NativeImage\r\n                                                    source={require('../../assets/RMJ Invoice Signature with Hanko.png')}\r\n                                                    style={{\r\n                                                        width: 276 * widthScaleFactor,\r\n                                                        height: 81 * heightScaleFactor,\r\n                                                        resizeMode: 'contain',\r\n                                                        alignSelf: 'center',\r\n                                                        marginBottom: 0, // Minimize margin to keep the line close\r\n                                                    }}\r\n                                                />\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Real Motor Japan'}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 5 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Your Signature'}\r\n                                                </Text>\r\n                                            </View>\r\n                                        </View>}\r\n\r\n\r\n                                </View>}\r\n\r\n\r\n                        </ScrollView>\r\n\r\n                    }\r\n\r\n                </Modal>\r\n            </>\r\n        }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst ExtendDueDateButton = () => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [isConfirmHovered, setIsConfirmHovered] = useState(false);\r\n    const [isCancelHovered, setIsCancelHovered] = useState(false);\r\n    const [selectedDueDate, setSelectedDueDate] = useState('');\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    let invoiceSelectedDueDate = '';\r\n\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n\r\n    const confirmHoverIn = () => setIsConfirmHovered(true);\r\n    const confirmHoverOut = () => setIsConfirmHovered(false);\r\n\r\n    const cancelHoverIn = () => setIsCancelHovered(true);\r\n    const cancelHoverOut = () => setIsCancelHovered(false);\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleModalOpen = () => {\r\n        setModalVisible(true);\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n    }\r\n\r\n    const handleConfirm = async () => {\r\n\r\n        try {\r\n            await confirmExtendDueDate();\r\n            handleModalClose();\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const extendDueDateMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `The due date has been changed to ${selectedDueDate\r\n                    ? new Date(selectedDueDate).toLocaleDateString(undefined, {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric',\r\n                    })\r\n                    : 'Invalid Date'\r\n                    }`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `The due date has been changed to ${selectedDueDate\r\n                    ? new Date(selectedDueDate).toLocaleDateString(undefined, {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric',\r\n                    })\r\n                    : 'Invalid Date'\r\n                    }`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const confirmExtendDueDate = async () => {\r\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n        setIsConfirmLoading(true);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                'bankInformations.dueDate': selectedDueDate // Update the specific field\r\n            });\r\n            await extendDueDateMessage();\r\n            setIsConfirmLoading(false);\r\n            console.log(\"Document successfully updated\");\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n    };\r\n\r\n    const ModalCalendar = ({ selectedDate, setSelectedDate, currentDate }) => {\r\n\r\n        const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n        const handleModalCalendarOpen = () => {\r\n            setModalCalendarVisible(true);\r\n        };\r\n\r\n        const handleModalCalendarClose = () => {\r\n            setModalCalendarVisible(false);\r\n        };\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n                <Pressable style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onPress={handleModalCalendarOpen}>\r\n                    <Text style={{ flex: 1, }} >{selectedDate}</Text>\r\n                </Pressable>\r\n\r\n                <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Content>\r\n                        <View style={{ height: '100%', flex: 1 }}>\r\n                            <Calendar\r\n                                onDayPress={useCallback(day => {\r\n                                    setSelectedDate(day.dateString);\r\n                                    invoiceSelectedDueDate = day.dateString;\r\n                                    globalInvoiceVariable.bankInformations.dueDate = day.dateString;\r\n                                    handleModalCalendarClose();\r\n                                }, [])}\r\n                                markedDates={{\r\n                                    [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n                                }}\r\n                                renderArrow={(direction) => (\r\n                                    direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n                                )}\r\n                                enableSwipeMonths={true}\r\n                                initialDate={selectedDate}\r\n                                // minDate={currentDate}\r\n                                showSixWeeks />\r\n\r\n                        </View>\r\n\r\n                    </Modal.Content>\r\n\r\n                </Modal>\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (currentDate) {\r\n            const date = new Date(currentDate);\r\n\r\n            // Check the day of the week\r\n            const dayOfWeek = date.getDay();\r\n\r\n            if (dayOfWeek === 5) { // Friday\r\n                date.setDate(date.getDate() + 3); // Add 3 days to reach Monday\r\n            } else if (dayOfWeek === 6) { // Saturday\r\n                date.setDate(date.getDate() + 2); // Add 2 days to reach Monday\r\n            } else {\r\n                date.setDate(date.getDate() + 1); // Sunday to Thursday, add 1 day\r\n            }\r\n\r\n            // Format the date back to string\r\n            const adjustedDate = date.toISOString().split('T')[0];\r\n            setSelectedDueDate(adjustedDate);\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#a8720a' : '#D38F0D',\r\n                }}\r\n            >\r\n                <FontAwesome name='calendar-plus-o' size={15} color={'white'} />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Extend Due Date`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={modalVisible}\r\n                onClose={handleModalClose}\r\n                useRNModal\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.Header >Extend Due Date</Modal.Header>\r\n                    <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                        <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Due Date:</Text>\r\n                        <ModalCalendar currentDate={currentDate} selectedDate={selectedDueDate} setSelectedDate={setSelectedDueDate} />\r\n                    </View>\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onPress={handleModalClose}\r\n                                onHoverIn={cancelHoverIn}\r\n                                onHoverOut={cancelHoverOut}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isCancelHovered ? '#3F3F46' : '#52525B',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text color={'white'} style={{ fontWeight: 700, }}>Cancel</Text>\r\n                            </Pressable>\r\n\r\n                            <View style={{ flex: 1 }} />\r\n\r\n                            <Pressable\r\n                                onPress={handleConfirm}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onHoverIn={confirmHoverIn}\r\n                                onHoverOut={confirmHoverOut}\r\n                                disabled={isConfirmLoading}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isConfirmHovered ? '#0f7534' : '#16A34A',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {!isConfirmLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Confirm</Text> : <Spinner size={'sm'} color={'white'} />}\r\n                            </Pressable>\r\n                        </View>\r\n\r\n\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nconst TransactionModal = () => {\r\n    const transactionModalVisible = useSelector((state) => state.transactionModalVisible);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleTransactionModalClose = () => {\r\n        dispatch(setTransactionModalVisible(false));\r\n    }\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={transactionModalVisible}\r\n            onClose={() => {\r\n                handleTransactionModalClose()\r\n            }}\r\n            size={'lg'}\r\n            useRNModal\r\n        >\r\n            {transactionModalVisible &&\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n\r\n                    <Modal.Header style={{ borderBottomWidth: 2, borderColor: '#0A9FDC', }} >{transactionModalTitle}</Modal.Header>\r\n\r\n                    {transactionModalContentValue == 1 || transactionModalContentValue == 2 &&\r\n                        <IssueProformaInvoiceModalContent />\r\n                    }\r\n\r\n                    {transactionModalContentValue == 3 &&\r\n                        <ConfirmPaymentModalContent />\r\n                    }\r\n                </Modal.Content>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst TransactionButton = ({ title, buttonValue, transactionValue, colorHoverIn, colorHoverOut }) => {\r\n\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleTransactionModalOpen = () => {\r\n        dispatch(setTransactionModalVisible(true));\r\n        transactionModalTitle = title;\r\n        transactionModalContentValue = transactionValue;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleTransactionModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? colorHoverIn : colorHoverOut,\r\n                }}\r\n            >\r\n                <FastImage\r\n                    source={{\r\n                        uri: require(`../../assets/chat_step/chat_step_${buttonValue}_on.png`),\r\n                        priority: FastImage.priority.normal\r\n                    }}\r\n                    style={{\r\n                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                        width: 15,\r\n                        height: 15,\r\n                        alignSelf: 'center',\r\n                    }}\r\n                    resizeMode={FastImage.resizeMode.stretch}\r\n                />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{title}</Text>\r\n            </Pressable>\r\n\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nconst CustomerProfileModal = () => {\r\n    const [customerModalVisible, setCustomerModalVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n\r\n    const handleModalOpen = () => {\r\n        setCustomerModalVisible(true);\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setCustomerModalVisible(false);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                onPress={handleModalOpen}\r\n                style={{ width: 'fit-content', }}\r\n            >\r\n                <Text style={{ fontWeight: 700, }} underline>{`${globalCustomerFirstName} ${globalCustomerLastName}`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={customerModalVisible}\r\n                onClose={handleModalClose}\r\n                size={'lg'}\r\n\r\n            >\r\n                <Modal.Content background={'white'}>\r\n\r\n                    <Modal.Body>\r\n\r\n                        <View\r\n                            style={{\r\n                                flex: 1,\r\n                                alignItems: 'center',\r\n                            }}>\r\n\r\n                            <View style={{\r\n                                borderRadius: 10,\r\n                                backgroundColor: '#F8F9FF',\r\n                                width: 440,\r\n                                alignItems: 'center',\r\n                                paddingBottom: 15,\r\n\r\n                            }}>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 26, color: '#0A78BE', }} selectable>\r\n                                    {`${globalCustomerFirstName} ${globalCustomerLastName}`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontSize: 14, color: '#6F6F6F', width: '45%', textAlign: 'center', }} selectable>\r\n                                    {`${selectedCustomerData.textZip}, ${selectedCustomerData.textStreet}, ${selectedCustomerData.city}, ${selectedCustomerData.country}`}\r\n                                </Text>\r\n\r\n                                <View\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'row',\r\n                                        paddingTop: 20,\r\n                                        justifyContent: 'center',\r\n                                    }}\r\n                                >\r\n\r\n                                    <Text style={{ fontSize: 14, color: '#6F6F6F', textAlign: 'center' }} selectable>\r\n                                        {`${selectedCustomerData.textPhoneNumber}`}\r\n                                    </Text>\r\n\r\n                                    {/* Separator */}\r\n\r\n                                    <View style={{\r\n                                        height: '100%', // Full height of the parent View\r\n                                        width: 2, // Width of the line\r\n                                        backgroundColor: '#DCDCDC', // Line color\r\n                                        marginHorizontal: 10, // Space on the sides of the line\r\n                                    }} />\r\n\r\n                                    <Hyperlink\r\n                                        linkDefault={true}\r\n                                        linkStyle={{ color: '#8A64F6', fontSize: 14 }}\r\n\r\n                                    >\r\n                                        <Text style={{ textAlign: 'center' }} selectable>\r\n                                            {selectedCustomerData.textEmail}\r\n                                        </Text>\r\n                                    </Hyperlink>\r\n\r\n                                </View>\r\n\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                        <View\r\n                            style={{\r\n                                width: 440,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                marginTop: 50,\r\n                                flexDirection: 'row',\r\n                                alignSelf: 'center',\r\n                            }}>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 24, color: '#990000', textAlign: 'center', }}>\r\n                                    {`$${selectedCustomerData.overBalance ? Number(selectedCustomerData.overBalance).toLocaleString('en-US') : 0}`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Overbalance`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontSize: 14, color: '#0A78BE', textAlign: 'center', }} underline>\r\n                                    {`View Payments History`}\r\n                                </Text>\r\n\r\n                            </View>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 24, color: '#009922', textAlign: 'center', }}>\r\n                                    {`$155`}\r\n                                </Text>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Credits`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontSize: 14, color: 'transparent', textAlign: 'center', }} underline>\r\n                                    {`-------`}\r\n                                </Text>\r\n\r\n\r\n                            </View>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 24, color: '#0029A3', textAlign: 'center', }}>\r\n                                    {`11`}\r\n                                </Text>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Transactions`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontSize: 14, color: '#0A78BE', textAlign: 'center', }} underline>\r\n                                    {`View Transactions`}\r\n                                </Text>\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                    </Modal.Body>\r\n\r\n\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst ChatMessageHeader = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n\r\n\r\n    const totalPriceCondition = selectedChatData.fobPrice && selectedChatData.jpyToUsd && selectedChatData.m3 && selectedChatData.freightPrice;\r\n\r\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\r\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice));\r\n\r\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0))) + freightCalculation;\r\n\r\n    const fobPriceDollars = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0)));\r\n\r\n    const carName = selectedChatData.carData && selectedChatData.carData.carName ? selectedChatData.carData.carName : (selectedChatData.vehicle && selectedChatData.vehicle.carName ? selectedChatData.vehicle.carName : '');\r\n\r\n    const freightPriceYen = freightCalculation / selectedChatData.currency.jpyToUsd;\r\n\r\n    return (\r\n\r\n        <View style={{\r\n            flex: 1,\r\n            alignSelf: 'flex-start',\r\n            flexDirection: 'row',\r\n        }}>\r\n\r\n            {globalImageUrl ? (\r\n                <FastImage\r\n                    source={{ uri: globalImageUrl, priority: FastImage.priority.normal }}\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        alignSelf: 'center',\r\n                        margin: 10,\r\n                    }}\r\n                    resizeMode={FastImage.resizeMode.stretch}\r\n                />\r\n            ) : (\r\n                <View\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginRight: 12,\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            <View style={{ alignSelf: 'center', paddingRight: 10, }}>\r\n                <Text style={{ fontWeight: 700, color: '#0A78BE', }}>{carName}</Text>\r\n\r\n                <CustomerProfileModal />\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 1, color: '#8D7777', }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.referenceNumber ? selectedChatData.carData.referenceNumber : 'Chassis N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                {/* <Text style={{ fontWeight: 700, color: \"#16A34A\", }}>{`$${selectedChatData.offerPrice ? selectedChatData.offerPrice : 0}`}</Text> */}\r\n                <TimelineStatus data={statusData} />\r\n            </View>\r\n\r\n            {/* <HorizontalTimeline /> */}\r\n\r\n            <View style={{ alignSelf: 'center', justifyContent: 'center', paddingLeft: 10, }}>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.chassisNumber ? selectedChatData.carData.chassisNumber : 'Chassis N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.modelCode ? selectedChatData.carData.modelCode : 'Model Code N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.mileage\r\n                            ? Number(selectedChatData.carData.mileage).toLocaleString('en-US')\r\n                            : 'Mileage N/A'} km\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.fuel ? selectedChatData.carData.fuel : 'Fuel N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.transmission ? selectedChatData.carData.transmission : 'Transmission N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ alignSelf: 'center', justifyContent: 'center', paddingLeft: 15, }}>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontSize: 18, }} bold>Total Price: </Text>\r\n                    <Text selectable style={{ fontSize: 18, color: \"#16A34A\", textAlign: 'right', }} bold>\r\n                        {`$${Number(totalPriceCalculation).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2, }}>\r\n                        ({`¥${Number(\r\n                            totalPriceCalculation /\r\n                            ((selectedChatData && selectedChatData.jpyToUsd) ? Number(selectedChatData.jpyToUsd) :\r\n                                (selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd) ? selectedChatData.currency.jpyToUsd :\r\n                                    0)\r\n                        ).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, }}>FOB Price: </Text>\r\n                    <Text selectable style={{ fontWeight: 700, color: \"#8D7777\", textAlign: 'right', }}>\r\n                        {`${Number(fobPriceDollars).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 2, marginLeft: 2, }}>\r\n                        ({`${(selectedChatData.fobPrice ? selectedChatData.fobPrice : Number(selectedChatData.carData && selectedChatData.carData.fobPrice ? selectedChatData.carData.fobPrice : 0)).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, }}>Freight Price: </Text>\r\n                    <Text selectable style={{ fontWeight: 700, color: \"#8D7777\", textAlign: 'right', }}>\r\n                        {`${Number(freightCalculation).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 2, marginLeft: 2, }}>\r\n                        ({`${(selectedChatData.freightPrice ? freightPriceYen : Number(selectedChatData.carData && selectedChatData.carData.freightPrice ? freightPriceYen : 0)).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, textAlign: 'right', }}>\r\n                        {`${selectedChatData.country && selectedChatData.port ? `${selectedChatData.country} / ${selectedChatData.port}` : 'N/A'}`}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, color: \"#16A34A\", }}>{selectedChatData.insurance ? 'CIF' : 'C&F'}\r\n                        {selectedChatData.inspection ? ` + Inpection[${selectedChatData.inspectionName}]` : ''}</Text>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={{ paddingLeft: 10, paddingRight: 10, paddingTop: 2, }}>\r\n                {(selectedChatData.stepIndicator.value == 1 || selectedChatData.stepIndicator.value == 2) &&\r\n                    <>\r\n                        <ProfitCalculator />\r\n\r\n                        <TransactionButton\r\n                            key={'Issue Proforma Invoice'}\r\n                            title={selectedChatData.stepIndicator.value == 1 ? 'Issue Proforma Invoice' : selectedChatData.stepIndicator.value == 2 ? 'Update Invoice' : ''}\r\n                            colorHoverIn={'#0f7534'}\r\n                            colorHoverOut={'#16A34A'}\r\n                            transactionValue={2}\r\n                            buttonValue={2}\r\n                            iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />\r\n\r\n                        <PreviewInvoice />\r\n\r\n                        <View style={{ flexDirection: 'row' }}>\r\n                            <Text style={{ fontWeight: 700, fontSize: 18 }}>Final Price: </Text>\r\n                            <Text selectable style={{ fontWeight: 700, fontSize: 18, color: \"#FF0000\", textAlign: 'right' }}>\r\n                                {`$${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                            </Text>\r\n                            <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2 }}>\r\n                                ({`¥${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount && selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd ? (Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) / Number(selectedChatData.currency.jpyToUsd)) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                            </Text>\r\n                        </View>\r\n                    </>\r\n                }\r\n\r\n                {(selectedChatData.stepIndicator.value == 3) &&\r\n\r\n                    <View style={{ flexDirection: 'row', paddingRight: 10, paddingTop: 2, }}>\r\n\r\n                        <View style={{ paddingLeft: 10, }}>\r\n                            <ProfitCalculator />\r\n\r\n                            <TransactionButton\r\n                                key={'Input Payment'}\r\n                                title={'Input Payment'}\r\n                                colorHoverOut={'#FF0000'}\r\n                                colorHoverIn={'#800101'}\r\n                                transactionValue={3}\r\n                                buttonValue={4}\r\n                                iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />\r\n\r\n\r\n                            <PreviewInvoice />\r\n\r\n                            <View style={{ flexDirection: 'row' }}>\r\n                                <Text style={{ fontWeight: 700, fontSize: 18 }}>Final Price: </Text>\r\n                                <Text selectable style={{ fontWeight: 700, fontSize: 18, color: \"#FF0000\", textAlign: 'right' }}>\r\n                                    {`$${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2 }}>\r\n                                    ({`¥${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount && selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd ? (Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) / Number(selectedChatData.currency.jpyToUsd)) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                                </Text>\r\n                            </View>\r\n                        </View>\r\n\r\n                        <View style={{ paddingLeft: 10, }}>\r\n\r\n                            <TransactionButton\r\n                                key={'Issue Proforma Invoice'}\r\n                                title={selectedChatData.stepIndicator.value == 1 ? 'Issue Proforma Invoice' : 'Update Invoice'}\r\n                                colorHoverIn={'#0f7534'}\r\n                                colorHoverOut={'#16A34A'}\r\n                                transactionValue={2}\r\n                                buttonValue={2}\r\n                                iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />\r\n\r\n                            <ExtendDueDateButton />\r\n\r\n                            <View style={{ flexDirection: 'row', }}>\r\n                                {invoiceData && invoiceData.bankInformations && invoiceData.bankInformations.dueDate &&\r\n                                    <>\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14, }}>Due Date: </Text>\r\n                                        <Text selectable style={{ fontWeight: 700, fontSize: 14, textAlign: 'right', color: '#FF0000', }}>\r\n                                            {\r\n                                                invoiceData.bankInformations.dueDate\r\n                                                    ? new Date(invoiceData.bankInformations.dueDate).toLocaleDateString(undefined, {\r\n                                                        year: 'numeric',\r\n                                                        month: 'long',\r\n                                                        day: 'numeric',\r\n                                                    })\r\n                                                    : 'Invalid Date'\r\n                                            }\r\n                                        </Text>\r\n                                    </>}\r\n                            </View>\r\n\r\n                        </View>\r\n                    </View>\r\n\r\n                }\r\n\r\n            </View>\r\n            <TransactionModal />\r\n        </View>\r\n\r\n    );\r\n};\r\n\r\n\r\nconst ReadByListModal = ({ userEmail, handleReadByListModalClose }) => {\r\n\r\n    const readByListModalVisible = useSelector((state) => state.readByListModalVisible)\r\n    const selectedChatData = useSelector((state) => state.selectedChatData)\r\n    // const [email, setEmail] = useState(projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '');\r\n\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={readByListModalVisible}\r\n            onClose={() => handleReadByListModalClose()}\r\n            useRNModal\r\n            size={'xs'}\r\n        >\r\n            <Modal.Content borderRadius={0} style={{ padding: 15, backgroundColor: '#f8f8f8', shadowColor: '#000', shadowOffset: { width: 0, height: 2 }, shadowOpacity: 0.25, shadowRadius: 3.84, elevation: 5 }}>\r\n                <Modal.CloseButton />\r\n\r\n                <Modal.Header style={{ fontSize: 22, fontWeight: '600', textAlign: 'center', color: '#333', }}>Read List</Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    {\r\n                        selectedChatData.readBy.length > 0 ? (\r\n                            <ScrollView style={{ maxHeight: 250, borderRadius: 10 }}>\r\n                                {/* Sort and map over the readBy list */}\r\n                                {\r\n                                    [...selectedChatData.readBy]\r\n                                        .sort((a, b) => a === email ? -1 : b === email ? 1 : 0)\r\n                                        .map(item => (\r\n                                            <View key={item} style={{ flexDirection: 'row', alignItems: 'center', marginVertical: 8, borderBottomWidth: 0.5, borderColor: '#ddd', paddingBottom: 8 }}>\r\n                                                <FontAwesome name=\"user-circle\" size={24} color=\"#4A90E2\" style={{ marginRight: 12 }} />\r\n                                                <Text style={{ flex: 1, color: '#555' }}>{email === item ? 'You' : item}</Text>\r\n                                            </View>\r\n                                        ))\r\n                                }\r\n                            </ScrollView>\r\n                        ) : (\r\n                            <Text style={{ textAlign: 'center', color: 'grey', fontSize: 16 }}>No one has read this message yet.</Text>\r\n                        )\r\n                    }\r\n                </Modal.Body>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n}\r\n\r\nconst ImagePreviewModal = ({ isVisible, onClose, imageUrl }) => {\r\n    return (\r\n        <Modal isOpen={isVisible} onClose={onClose} size=\"full\" useRNModal>\r\n            <Modal.Content\r\n                style={{\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                    width: '80%',\r\n                    height: '80%',\r\n                    alignSelf: 'center',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                <Modal.CloseButton />\r\n                <FastImage\r\n                    source={{ uri: imageUrl, priority: FastImage.priority.normal }}\r\n                    style={{ width: '100%', height: '100%', borderRadius: 10 }}\r\n                    resizeMode={FastImage.resizeMode.contain}\r\n                />\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n\r\nconst HoverablePressable = ({ url, printComponent }) => {\r\n    const [isHoveredDownload, setIsHoveredDownload] = useState(false);\r\n    const [isHoveredPrint, setIsHoveredPrint] = useState(false);\r\n    const baseStyle = {\r\n        marginRight: 10,\r\n        borderRadius: 16,\r\n        borderWidth: 1,\r\n        borderColor: 'white',\r\n        width: 26,\r\n        height: 26,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    };\r\n\r\n    const hoverStyle = {\r\n        backgroundColor: '#ddd', // Example hover style\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip label=\"Download\" openDelay={200} bgColor={'white'} _text={{ color: '#1C2B33', }}>\r\n                <Pressable\r\n                    style={{\r\n                        marginRight: 8,\r\n                        borderRadius: 16,\r\n                        width: 32,\r\n                        height: 32,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        backgroundColor: isHoveredDownload ? '#424649' : 'transparent',\r\n                    }}\r\n                    onPress={async () => {\r\n                        await Linking.openURL(url);\r\n                    }}\r\n                    onMouseEnter={() => setIsHoveredDownload(true)}\r\n                    onMouseLeave={() => setIsHoveredDownload(false)}\r\n                >\r\n                    <MaterialCommunityIcons name=\"download\" size={20} color={'#F1F1F1'} />\r\n                </Pressable>\r\n            </Tooltip>\r\n\r\n            {/* <Tooltip label=\"Print\" openDelay={200} bgColor={'white'} _text={{ color: '#1C2B33', }}>\r\n                <Pressable\r\n                    style={{\r\n                        marginRight: 8,\r\n                        borderRadius: 16,\r\n                        width: 32,\r\n                        height: 32,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        backgroundColor: isHoveredPrint ? '#424649' : 'transparent',\r\n                    }}\r\n                    onMouseEnter={() => setIsHoveredPrint(true)}\r\n                    onMouseLeave={() => setIsHoveredPrint(false)}\r\n                    onPress={printComponent}\r\n                >\r\n                    <MaterialCommunityIcons name=\"printer\" size={20} color={'#F1F1F1'} />\r\n                </Pressable>\r\n            </Tooltip> */}\r\n        </>\r\n    );\r\n};\r\n\r\nconst DocumentPreviewModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const selectedFileUrl = useSelector((state) => state.selectedFileUrl);\r\n    const pdfViewerModalVisible = useSelector((state) => state.pdfViewerModalVisible);\r\n\r\n    const [iframeKey, setIframeKey] = useState(0);\r\n\r\n\r\n    const url = 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/ChatFiles%2Fchat_2023090239_marcvan14%40gmail.com%2FC-HUB_01312024153002.887%2FDAILY%20REPORT%202024-01-29.pdf?alt=media&token=88b7be9b-17ef-48d3-b5b3-6f7f0d317b7c'\r\n    const urlDocx = 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/ChatFiles%2Fchat_2023090239_marcvan14%40gmail.com%2FC-HUB_01312024170117.701%2FDAILY%20REPORT%202024-01-29.docx?alt=media&token=9bf45632-e192-45bf-8b40-9fd5cdb9368e';\r\n    const [isLoading, setLoading] = useState(true); // Loading state\r\n\r\n    // console.log(`https://docs.google.com/viewer?url=${encodeURIComponent(urlDocx)}&embedded=true`);\r\n\r\n\r\n    const handleIframeLoad = () => {\r\n        setLoading(false); // Set loading to false when iframe content is loaded\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n\r\n        dispatch(setPdfViewerModalVisible(false))\r\n        dispatch(setSelectedFileUrl(''))\r\n        setLoading(true);\r\n        globalSelectedFileType = '';\r\n        globalSelectedPDFUrl = '';\r\n    }\r\n\r\n    const printIframe = () => {\r\n        // const iframe = document.getElementById('documentIframe');\r\n        // iframe.contentWindow.print();\r\n        const printWindow = window.open(`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`, '_blank');\r\n        printWindow.focus();\r\n        printWindow.print();\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const timeout = setTimeout(() => {\r\n\r\n            if (isLoading) {\r\n                console.log(\"Iframe is taking too long to load. Attempting to reload.\");\r\n                console.log(\"Current URL:\", selectedFileUrl);\r\n                console.log(\"Current Global URL:\", globalSelectedPDFUrl);\r\n\r\n                setIsLoading(false);\r\n                setIframeKey(prevKey => prevKey + 1);\r\n                dispatch(setSelectedFileUrl(globalSelectedPDFUrl));\r\n\r\n            }\r\n\r\n        }, 5000); // Timeout set to 5 seconds\r\n\r\n        return () => clearTimeout(timeout);\r\n\r\n    }, [isLoading,]);\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={pdfViewerModalVisible}\r\n            onClose={() => {\r\n                handleModalClose();\r\n            }\r\n            } size=\"xl\">\r\n            <Modal.Content>\r\n                {globalSelectedFileType !== 'pdf' ?\r\n\r\n                    (<>\r\n                        {isLoading && (\r\n                            <View style={{\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                left: 0,\r\n                                right: 0,\r\n                                position: 'absolute',\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                height: '700px'  // Same height as the iframe for consistent layout\r\n                            }}>\r\n                                <Spinner\r\n                                    animating\r\n                                    size=\"lg\"\r\n                                    color={'#7B9CFF'}\r\n                                />\r\n                            </View>\r\n                        )}\r\n                        {selectedFileUrl !== '' &&\r\n                            <>\r\n                                {!isLoading &&\r\n                                    <View style={{ flexDirection: 'row', width: '100%', height: 57, borderRadius: 0, backgroundColor: '#323639', justifyContent: 'flex-end', alignItems: 'center', }}>\r\n                                        <HoverablePressable url={globalSelectedPDFUrl} printComponent={printIframe} />\r\n                                    </View>\r\n                                }\r\n\r\n                                <iframe\r\n                                    key={iframeKey}\r\n                                    src={`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`}\r\n                                    id='documentIframe'\r\n                                    style={{ width: '100%', height: '700px' }}\r\n                                    title=\"Document Viewer\"\r\n                                    onLoad={() => {\r\n                                        handleIframeLoad();\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </>\r\n                    )\r\n\r\n                    : (\r\n                        <>\r\n                            {isLoading && (\r\n                                <View style={{\r\n                                    top: 0,\r\n                                    bottom: 0,\r\n                                    left: 0,\r\n                                    right: 0,\r\n                                    position: 'absolute',\r\n                                    justifyContent: 'center',\r\n                                    alignItems: 'center',\r\n                                    height: '700px'  // Same height as the iframe for consistent layout\r\n                                }}>\r\n                                    <Spinner\r\n                                        animating\r\n                                        size=\"lg\"\r\n                                        color={'#7B9CFF'}\r\n                                    />\r\n                                </View>\r\n                            )}\r\n                            {selectedFileUrl !== '' && <iframe\r\n                                src={selectedFileUrl}\r\n                                style={{ width: '100%', height: '700px' }}\r\n                                title=\"PDF Viewer\"\r\n                                onLoad={handleIframeLoad} // Event when iframe has loaded\r\n                            />}\r\n                        </>\r\n                    )\r\n\r\n\r\n                }\r\n\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n\r\n};\r\n\r\nconst ChatMessageBox = ({ activeButtonValue, userEmail }) => {\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const loadMoreMessagesLoading = useSelector((state) => state.loadMoreMessagesLoading);\r\n    const noMoreMessagesData = useSelector((state) => state.noMoreMessagesData);\r\n    const [isEyeHovered, setIsEyeHovered] = useState(false);\r\n    const flatListRef = useRef();\r\n    const [hoveredImageIndex, setHoveredImageIndex] = useState(null);\r\n\r\n    const [selectedImageIndex, setSelectedImageIndex] = useState(null);\r\n    const [isPreviewVisible, setIsPreviewVisible] = useState(false);\r\n\r\n    const openPreview = (index) => {\r\n        setSelectedImageIndex(index);\r\n        setIsPreviewVisible(true);\r\n    };\r\n\r\n    const closePreview = () => {\r\n        setIsPreviewVisible(false);\r\n        setSelectedImageIndex(null);\r\n    };\r\n\r\n\r\n    const handleImageMessageMouseEnter = (index) => {\r\n        setHoveredImageIndex(index);\r\n    };\r\n\r\n    const handleImageMessageMouseLeave = () => {\r\n        setHoveredImageIndex(null);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [read, setRead] = useState(selectedChatData.read);\r\n\r\n    const handleReadByListModalOpen = () => {\r\n        dispatch(setReadByListModalVisible(true));\r\n    };\r\n\r\n    const handleReadByListModalClose = () => {\r\n        dispatch(setReadByListModalVisible(false));\r\n    };\r\n\r\n    const animatedValue = useRef(new Animated.Value(0)).current;\r\n\r\n    useEffect(() => {\r\n        Animated.loop(\r\n            Animated.sequence([\r\n                Animated.timing(animatedValue, {\r\n                    toValue: 1,\r\n                    duration: 2000,\r\n                    useNativeDriver: false\r\n                }),\r\n                Animated.timing(animatedValue, {\r\n                    toValue: 0,\r\n                    duration: 2000,\r\n                    useNativeDriver: false\r\n                })\r\n            ])\r\n        ).start();\r\n    }, [animatedValue]);\r\n\r\n    const borderColor = animatedValue.interpolate({\r\n        inputRange: [0, 0.25, 0.5, 0.75, 1],\r\n        outputRange: [\r\n            'rgb(255, 100, 100)', // Red\r\n            'rgb(100, 255, 100)', // Green\r\n            'rgb(100, 100, 255)', // Blue\r\n            'rgb(255, 255, 100)', // Yellow\r\n            'rgb(255, 100, 255)'  // Magenta\r\n        ]\r\n    });\r\n\r\n    const renderFooter = () => {\r\n        return (\r\n            <>\r\n                {!noMoreMessagesData && (\r\n                    <View style={{ paddingVertical: 20, height: 60, }}>\r\n                        {loadMoreMessagesLoading && (\r\n                            <Spinner\r\n                                animating\r\n                                size=\"sm\"\r\n                                color={'#7B9CFF'}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </>\r\n\r\n\r\n        );\r\n    };\r\n\r\n    const handleLoadMoreMessages = async () => {\r\n        dispatch(setLoadMoreMessagesLoading(true));\r\n        dispatch(setNoMoreMessagesData(false));\r\n\r\n        let nextQuery;\r\n        if (!globalMessagesLastVisible) {\r\n            // No more data to load or globalLastVisible is undefined\r\n            dispatch(setLoadMoreMessagesLoading(false));\r\n            dispatch(setNoMoreMessagesData(true));\r\n        }\r\n\r\n        else {\r\n            dispatch(setLoadMoreMessagesLoading(true));\r\n            dispatch(setNoMoreMessagesData(false));\r\n\r\n            nextQuery = query(\r\n                collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(globalMessagesLastVisible),\r\n                limit(10)\r\n            );\r\n            try {\r\n                const unsubscribe = onSnapshot(nextQuery, (snapshot) => {\r\n                    if (snapshot.empty) {\r\n                        // Handle the case when there's no more data\r\n                        console.log(\"No more data to load\");\r\n                        setTimeout(() => {\r\n                            dispatch(setLoadMoreMessagesLoading(false));\r\n                            dispatch(setNoMoreMessagesData(true));\r\n                            globalMessagesLastVisible = null;\r\n                        }, 0);  // Delay setting loading and no more data flags\r\n                        return;\r\n                    }\r\n\r\n                    const chatsData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        chatsData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n\r\n                    // Append new data to the existing list\r\n\r\n                    setTimeout(() => {\r\n                        dispatch(setChatMessagesData([...chatMessagesData, ...chatsData]));\r\n                        dispatch(setLoadMoreMessagesLoading(false));\r\n                        globalMessagesLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n                    }, 0);\r\n\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data from Firebase:', error);\r\n                setTimeout(() => dispatch(setLoadMoreMessagesLoading(false)), 0);  // Ensure loading is set to false even if there's an error\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const updateChatToRead = async () => {\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", activeChatId);\r\n        if (email !== '') {\r\n            try {\r\n\r\n                await updateDoc(docRef, {\r\n                    read: true,\r\n                    readBy: arrayUnion(email),\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (activeChatId == selectedChatData.id) {\r\n            if (selectedChatData.stepIndicator.value !== activeButtonValue && activeButtonValue !== 0) {\r\n                dispatch(setChatMessagesData([]));\r\n                dispatch(setActiveChatId(''));\r\n            }\r\n            else {\r\n                updateChatToRead();\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }, [selectedChatData]);\r\n\r\n    const handlePreviewInvoiceModalOpen = () => {\r\n        dispatch(setPreviewInvoiceVisible(true));\r\n    };\r\n\r\n    const formatDate = (timestamp) => {\r\n        // Parse the original timestamp\r\n        // Expected format: \"2024/01/15 at 12:17:50\"\r\n        const parts = timestamp.match(/(\\d{4})\\/(\\d{2})\\/(\\d{2}) at (\\d{2}):(\\d{2}):(\\d{2})/);\r\n        if (!parts) return timestamp; // Return original if parsing fails\r\n\r\n        // Create a new Date object\r\n        const date = new Date(parts[1], parts[2] - 1, parts[3], parts[4], parts[5], parts[6]);\r\n\r\n        // Format month names\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n        // Convert to 12-hour format and determine AM or PM\r\n        const hours = date.getHours();\r\n        const isPM = hours >= 12;\r\n        const formattedHours = hours % 12 || 12; // Convert 0 to 12 for 12 AM\r\n        const amPm = isPM ? 'PM' : 'AM';\r\n\r\n        // Construct the new format with year at the beginning\r\n        return `${date.getFullYear().toString().substr(-2)} ${months[date.getMonth()]} ${date.getDate()}, ${formattedHours}:${date.getMinutes().toString().padStart(2, '0')} ${amPm}`;\r\n    };\r\n\r\n    const extractUsernameFromEmail = (email) => {\r\n        const [username] = email.split('@');\r\n        return username;\r\n    };\r\n\r\n\r\n    const breakUrl = (url, maxUrlLength = 30) => {\r\n        let brokenUrl = '';\r\n        while (url.length > 0) {\r\n            brokenUrl += url.substring(0, maxUrlLength);\r\n            if (url.length > maxUrlLength) {\r\n                brokenUrl += '\\u200B'; // Zero-width space\r\n            }\r\n            url = url.substring(maxUrlLength);\r\n        }\r\n        return brokenUrl;\r\n    };\r\n\r\n    const isUrl = (text) => {\r\n        // Simple URL check\r\n        const urlPattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n        return !!urlPattern.test(text);\r\n    };\r\n\r\n    const handleLinkPress = (url) => {\r\n        Linking.canOpenURL(url).then(supported => {\r\n            if (supported) {\r\n                Linking.openURL(url);\r\n            } else {\r\n                console.log(\"Don't know how to open URI: \" + url);\r\n            }\r\n        });\r\n    };\r\n\r\n    const cleanUrl = (url) => {\r\n        // Removing Zero Width Space and other potential invisible characters\r\n        return url.replace(/[\\u200B-\\u200D\\uFEFF]/g, '');\r\n    };\r\n\r\n\r\n    const renderItemText = (isGlobalCustomerSender, text) => {\r\n        const urlPattern = new RegExp('(https?:\\\\/\\\\/[^\\\\s]+)', 'g');\r\n        let segments = text.split(urlPattern);\r\n\r\n        const insertBreaks = (str, n) => {\r\n            // Inserts a zero-width space every 'n' characters in 'str'\r\n            let result = '';\r\n            while (str.length > 0) {\r\n                result += str.substring(0, n) + '\\u200B';\r\n                str = str.substring(n);\r\n            }\r\n            return result;\r\n        };\r\n\r\n        return segments.map((segment, index) => {\r\n            const segmentWithBreaks = segment.length > 30 && !segment.includes(' ') ? insertBreaks(segment, 30) : segment;\r\n\r\n            if (isUrlForText(segment)) {\r\n                // Apply breaks for long URLs\r\n                return (\r\n                    <Pressable key={index} onPress={() => handleLinkPress(segment)}>\r\n                        <Text\r\n                            selectable\r\n                            style={{\r\n                                fontWeight: '400',\r\n                                color: isGlobalCustomerSender ? 'black' : 'white',\r\n                                fontSize: 16,\r\n                                flexShrink: 1,\r\n                                textDecorationLine: 'underline',\r\n                                flexWrap: 'wrap',\r\n                            }}\r\n                        >\r\n                            {segmentWithBreaks}\r\n                        </Text>\r\n                    </Pressable>\r\n                );\r\n            } else {\r\n                return (\r\n                    <Text\r\n                        selectable\r\n                        key={index}\r\n                        style={{\r\n                            fontWeight: '400',\r\n                            color: isGlobalCustomerSender ? 'black' : 'white',\r\n                            fontSize: 16,\r\n                            flexShrink: 1,\r\n                            flexWrap: 'wrap',\r\n                        }}\r\n                    >\r\n                        {segmentWithBreaks}\r\n                    </Text>\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n    const getFileIcon = (fileName) => {\r\n        const iconSize = 24;\r\n        const lowerFileName = fileName.toLowerCase();\r\n\r\n        if (lowerFileName.endsWith('.pdf')) {\r\n            return <MaterialIcons name={'picture-as-pdf'} size={iconSize} color=\"white\" />;\r\n        }\r\n        // Add more conditions for other file types as needed\r\n        // Example for .docx files\r\n        if (lowerFileName.endsWith('.docx') || lowerFileName.endsWith('.doc')) {\r\n            return <MaterialCommunityIcons name={'microsoft-word'} size={iconSize} color=\"white\" />;\r\n        }\r\n        if (lowerFileName.endsWith('.xlsx') || lowerFileName.endsWith('.xls') || lowerFileName.endsWith('.csv')) {\r\n            return <MaterialCommunityIcons name={'microsoft-excel'} size={iconSize} color=\"white\" />;\r\n        }\r\n\r\n        if (lowerFileName.endsWith('.rar') || lowerFileName.endsWith('.zip')) {\r\n            return <FastImage\r\n                source={{ uri: require('../../assets/rar_icon.png'), priority: FastImage.priority.high }}\r\n                style={{\r\n                    width: iconSize,\r\n                    height: iconSize,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.cover}\r\n            />;\r\n        }\r\n        // Default icon if no specific type is matched\r\n        return <MaterialIcons name=\"insert-drive-file\" size={iconSize} color=\"black\" />;\r\n    };\r\n\r\n    const isUrlForText = (text) => {\r\n        const urlPattern = new RegExp('^(http://www\\\\.|https://www\\\\.|http://|https://)[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(/.*)?$');\r\n        return urlPattern.test(text);\r\n    }\r\n\r\n    const renderItem = ({ item, index }) => {\r\n        const isGlobalCustomerSender = item.sender === globalCustomerId;\r\n        const isLastMessage = index === 0; // Since the list is inverted, the first item is actually the last message\r\n        const isHovered = hoveredImageIndex === index;\r\n\r\n\r\n        return (\r\n            <View style={{\r\n                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                width: '100%',\r\n                alignSelf: isGlobalCustomerSender ? 'flex-start' : 'flex-end',\r\n                marginVertical: 4,\r\n                maxWidth: '60%', // Max width for long messages\r\n                // borderWidth: 1,\r\n                // borderColor: 'red',\r\n            }}>\r\n                {item.messageType == 'IssuedInvoice' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <Animated.View style={{\r\n                                padding: 7,\r\n                                flex: 1,\r\n                                borderRadius: 20,\r\n                                backgroundColor: isGlobalCustomerSender ? '#EFEFEF' : '#0A7CFF',\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                borderWidth: 3,\r\n                                borderColor: borderColor,\r\n                            }}>\r\n                                <Pressable onPress={handlePreviewInvoiceModalOpen}>\r\n                                    <Text underline selectable style={{\r\n                                        fontWeight: 400,\r\n                                        color: isGlobalCustomerSender ? 'black' : 'white',\r\n                                        fontSize: 16,\r\n                                    }}>\r\n                                        {item.text.trim()}\r\n                                    </Text>\r\n                                </Pressable>\r\n                            </Animated.View>\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp, sender email, IP, and country */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n                    </View>\r\n                }\r\n\r\n\r\n                {item.messageType == 'InputPayment' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <Animated.View style={{\r\n                                padding: 7,\r\n                                flex: 1,\r\n                                borderRadius: 20,\r\n                                backgroundColor: isGlobalCustomerSender ? '#EFEFEF' : '#0A7CFF',\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                borderWidth: 3,\r\n                                borderColor: borderColor,\r\n                            }}>\r\n                                <Text selectable style={{\r\n                                    fontWeight: 400,\r\n                                    color: isGlobalCustomerSender ? 'black' : 'white',\r\n                                    fontSize: 16,\r\n                                }}>\r\n                                    {item.text.trim()}\r\n                                </Text>\r\n                            </Animated.View>\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp, sender email, IP, and country */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n                    </View>\r\n                }\r\n\r\n\r\n                {!item.messageType && item.file && item.file.type == 'attachment' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        {item.text && item.text !== '' &&\r\n                            <View style={{\r\n                                marginBottom: 5,\r\n                                padding: 10,\r\n                                borderRadius: 20,\r\n                                backgroundColor: isGlobalCustomerSender ? '#EFEFEF' : '#0A7CFF',\r\n                                marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                flexShrink: 1,\r\n                            }}>\r\n                                {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                            </View>\r\n                        }\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    marginBottom: 5,\r\n                                    padding: 10,\r\n                                    borderRadius: 20,\r\n                                    backgroundColor: isGlobalCustomerSender ? '#EFEFEF' : '#0A7CFF',\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    <Pressable\r\n                                        onPress={() => {\r\n                                            if (item.file.name.endsWith('.pdf')) {\r\n                                                globalSelectedFileType = 'pdf'\r\n                                                dispatch(setPdfViewerModalVisible(true));\r\n                                                dispatch(setSelectedFileUrl(item.file.url));\r\n                                                globalSelectedPDFUrl = item.file.url;\r\n\r\n                                            }\r\n                                            else {\r\n                                                globalSelectedFileType = 'not-pdf'\r\n                                                dispatch(setPdfViewerModalVisible(true));\r\n                                                dispatch(setSelectedFileUrl(item.file.url));\r\n                                                globalSelectedPDFUrl = item.file.url;\r\n\r\n\r\n\r\n                                            }\r\n                                            // dispatch(setSelectedFileUrl(item.file.url));\r\n                                            // // globalSelectedPDFUrl = item.file.url\r\n                                            // dispatch(setPdfViewerModalVisible(true));\r\n\r\n                                        }}\r\n                                        style={{ flexDirection: 'row', }}\r\n                                    >\r\n                                        <View style={{ marginRight: 5, }}>\r\n                                            {getFileIcon(item.file.name)}\r\n                                        </View>\r\n\r\n                                        <Text underline selectable style={{\r\n                                            fontWeight: 400,\r\n                                            color: isGlobalCustomerSender ? 'black' : 'white',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                            {item.file.name.trim()}\r\n                                        </Text>\r\n                                    </Pressable>\r\n                                </View>\r\n                            </View>\r\n\r\n                            {/* Display read status text outside of the message bubble */}\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n                    </View>}\r\n\r\n\r\n                {!item.messageType && item.file && item.file.type == 'image' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        {item.text && item.text !== '' &&\r\n                            <View style={{\r\n                                marginBottom: 5,\r\n                                padding: 10,\r\n                                borderRadius: 20,\r\n                                backgroundColor: isGlobalCustomerSender ? '#EFEFEF' : '#0A7CFF',\r\n                                marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                flexShrink: 1,\r\n                            }}>\r\n                                {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                            </View>\r\n                        }\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    padding: 0,\r\n                                    borderRadius: 10,\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    <Pressable\r\n                                        onMouseEnter={() => handleImageMessageMouseEnter(index)}\r\n                                        onMouseLeave={handleImageMessageMouseLeave}\r\n                                        onPress={() => openPreview(index)}\r\n                                        style={{\r\n                                            position: 'relative', // Ensure relative positioning for the overlay\r\n                                            width: 250,\r\n                                            height: 250,\r\n                                            alignSelf: 'center',\r\n                                        }}\r\n                                    >\r\n                                        <FastImage\r\n                                            source={{ uri: item.file.url, priority: FastImage.priority.normal }}\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                height: '100%',\r\n                                                borderRadius: 10,\r\n                                                borderWidth: 1,\r\n                                                borderColor: '#DADDE1',\r\n                                            }}\r\n                                            resizeMode={FastImage.resizeMode.contain}\r\n                                        />\r\n                                        {isHovered && (\r\n                                            <View style={{\r\n                                                ...StyleSheet.absoluteFillObject, // Make overlay cover the entire image\r\n                                                backgroundColor: 'rgba(0, 0, 0, 0.1)', // Semi-transparent black\r\n                                                borderRadius: 10, // Match the border radius of the image\r\n                                            }} />\r\n                                        )}\r\n                                    </Pressable>\r\n                                </View>\r\n                            </View>\r\n\r\n                            {/* Display read status text outside of the message bubble */}\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n                    </View>}\r\n\r\n                {!item.messageType && !item.file &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    padding: 10,\r\n                                    borderRadius: 20,\r\n                                    backgroundColor: isGlobalCustomerSender ? '#EFEFEF' : '#0A7CFF',\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                                </View>\r\n                            </View>\r\n\r\n                            {/* Display read status text outside of the message bubble */}\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n                    </View>}\r\n\r\n            </View>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        chatMessagesData.length > 0 ? (\r\n            <>\r\n                <FlatList\r\n                    ref={flatListRef}\r\n                    data={chatMessagesData}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id}\r\n                    initialNumToRender={10} // Adjust based on your average message size and performance\r\n                    maxToRenderPerBatch={10}\r\n                    windowSize={500}\r\n                    onEndReachedThreshold={0.05}\r\n                    ListFooterComponent={renderFooter}\r\n                    onEndReached={handleLoadMoreMessages}\r\n                    inverted\r\n                />\r\n                {selectedImageIndex !== null && (\r\n                    <ImagePreviewModal\r\n                        isVisible={isPreviewVisible}\r\n                        onClose={closePreview}\r\n                        imageUrl={chatMessagesData[selectedImageIndex].file.url}\r\n                    />\r\n                )}\r\n                <ReadByListModal userEmail={userEmail} handleReadByListModalClose={handleReadByListModalClose} />\r\n            </>\r\n        ) : null\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default function ChatMessages() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const navigation = useNavigation();\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const chatMessageBoxLoading = useSelector((state) => state.chatMessageBoxLoading);\r\n    const chatListSearchText = useSelector((state) => state.chatListSearchText);\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const loginName = useSelector((state) => state.loginName);\r\n\r\n    const [name, setName] = useState(loginName);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const [activeButton, setActiveButton] = useState('All messages');\r\n    const [activeButtonValue, setActiveButtonValue] = useState(0);\r\n\r\n    const [activeFilterButton, setActiveFilterButton] = useState('');\r\n    const [unreadButtonValue, setUnreadButtonValue] = useState(false);\r\n    const [readButtonValue, setReadButtonValue] = useState(false);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [unreadCount, setUnreadCount] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchIpAndCountry = async () => {\r\n            try {\r\n                // dispatch(setChatMessageBoxLoading(true));\r\n                // Fetch IP Address\r\n                const ipResponse = await axios.get('https://api.ipify.org?format=json');\r\n                const fetchedIp = ipResponse.data.ip;\r\n                ip = fetchedIp;\r\n\r\n                // Fetch IP Country\r\n                if (fetchedIp) {\r\n                    const countryResponse = await axios.get(`https://ipapi.co/${fetchedIp}/json/`);\r\n                    const fetchedIpCountry = countryResponse.data.country_name;\r\n                    ipCountry = fetchedIpCountry;\r\n                    // dispatch(setChatMessageBoxLoading(false));\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching IP data:', error);\r\n            }\r\n        };\r\n        const collectionRef = collection(projectExtensionFirestore, 'chats'); // Replace with your collection name\r\n        const unrepliedQuery = query(\r\n            collectionRef,\r\n            where('read', '==', false),\r\n            limit(10) // Limit the query to 10 documents\r\n        );\r\n\r\n        const unsubscribe = onSnapshot(unrepliedQuery, (querySnapshot) => {\r\n            setUnreadCount(querySnapshot.size); // Update state with the new count\r\n            fetchIpAndCountry();\r\n\r\n        }, (error) => {\r\n            console.error(\"Error fetching documents: \", error);\r\n        });\r\n\r\n\r\n\r\n        // Clean up function to unsubscribe from the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const handlePress = (buttonTitle, buttonTitleValue) => {\r\n        if (activeButton == buttonTitle) {\r\n        }\r\n        else {\r\n            setActiveButton(buttonTitle);\r\n            setActiveButtonValue(buttonTitleValue);\r\n            setActiveFilterButton('');\r\n            setUnreadButtonValue(false);\r\n\r\n            dispatch(setActiveChatId(''));\r\n\r\n            dispatch(setLoadMoreLoading(false));\r\n            dispatch(setNoMoreData(false));\r\n        }\r\n    };\r\n\r\n\r\n    const handleUnreadPress = (buttonTitle) => {\r\n\r\n        setActiveFilterButton(prevState => prevState === buttonTitle ? '' : buttonTitle);\r\n        setUnreadButtonValue(prevState => !prevState);\r\n        setReadButtonValue(false);\r\n    };\r\n\r\n    const handleReadPress = (buttonTitle) => {\r\n\r\n        setActiveFilterButton(prevState => prevState === buttonTitle ? '' : buttonTitle);\r\n        setReadButtonValue(prevState => !prevState);\r\n        setUnreadButtonValue(false);\r\n\r\n    };\r\n\r\n\r\n    //Main fetch\r\n    useEffect(() => {\r\n        let queryRef;\r\n\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setChatMessageBoxLoading(false));\r\n        dispatch(setActiveChatId(''));\r\n\r\n        // Helper function to build the query\r\n        const buildQuery = () => {\r\n            const searchValue = chatListSearchText.toUpperCase();\r\n\r\n            if (unreadButtonValue) {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('read', '==', false), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n            else if (readButtonValue) {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('read', '==', true), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n            else {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n        };\r\n\r\n        // Build and execute the query\r\n        queryRef = buildQuery();\r\n\r\n        const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n            const chatsData = [];\r\n            snapshot.forEach((doc) => {\r\n                chatsData.push({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                });\r\n            });\r\n\r\n            dispatch(setChatListData(chatsData));\r\n            globalLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n            dispatch(setNoMoreData(false));\r\n            dispatch(setLoadMoreLoading(false));\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }, (error) => {\r\n            console.error('Error fetching data from Firebase:', error);\r\n        });\r\n\r\n        // Cleanup function\r\n        return () => {\r\n            if (unsubscribe) {\r\n                unsubscribe();\r\n            }\r\n        };\r\n    }, [unreadButtonValue, readButtonValue, activeButtonValue, chatListSearchText]);\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                navigation.navigate(\"Login\")\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(projectControlAuth)\r\n                    .then(() => {\r\n                        navigation.navigate('Login');\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(projectControlAuth)\r\n                .then(() => {\r\n                    navigation.navigate('Login');\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = projectControlAuth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const listenForNameChange = (documentId) => {\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n\r\n            } else {\r\n                // console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSignOut = () => {\r\n        // Check if currentUser exists before signing out\r\n        if (projectControlAuth.currentUser) {\r\n            signOut(projectControlAuth).then(() => {\r\n                navigation.navigate('Login');\r\n                setEmail('');\r\n                setName('');\r\n            }).catch(() => {\r\n                // Handle any sign out errors here\r\n            });\r\n        } else {\r\n            // Handle the case where there is no user currently signed in\r\n            console.log('No user signed in to sign out');\r\n            // Optionally navigate to the login screen or show a message\r\n            navigation.navigate('Login');\r\n        }\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   const handleScreenResize = () => {\r\n    //     const screenWidth = Dimensions.get('window').width;\r\n    //     setIsMobileView(screenWidth < 1200);\r\n    //   };\r\n\r\n    //   // Initial check on component mount\r\n    //   handleScreenResize();\r\n\r\n    //   // Listen for screen dimension changes\r\n    //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n    //   // Cleanup event listener on component unmount\r\n    //   return () => {\r\n    //     Dimensions.removeEventListener('change', handleScreenResize);\r\n    //   };\r\n    // }, []);\r\n\r\n    const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <NativeBaseProvider>\r\n                <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                    {/* Header */}\r\n                    <Box\r\n                        px=\"3\"\r\n                        bgColor='#7b9cff'\r\n                        height={54}\r\n                        position=\"sticky\"\r\n                        top={0}\r\n                        zIndex={999}\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                        borderBottomWidth={2}\r\n                        borderBottomColor={'cyan.500'}\r\n                    >\r\n\r\n                        <SideDrawer\r\n                            selectedScreen={selectedScreen} />\r\n\r\n                        <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n\r\n                            <FastImage\r\n                                source={{\r\n                                    uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                    priority: FastImage.priority.high,\r\n                                }}\r\n                                resizeMode={FastImage.resizeMode.stretch}\r\n                                style={styles.image} />\r\n                        </Box>\r\n\r\n                        {/* {screenWidth <= 960 && <MobileViewDrawer\r\n                            selectedScreen={selectedScreen} />} */}\r\n\r\n\r\n                        <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                            <FastImage\r\n                                source={{\r\n                                    uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                    priority: FastImage.priority.high,\r\n                                }}\r\n                                resizeMode={FastImage.resizeMode.stretch}\r\n                                style={styles.image} />\r\n                        </Box>\r\n                        <NamePopover name={name} handleSignOut={handleSignOut} />\r\n\r\n\r\n                    </Box>\r\n\r\n                    {/* Content */}\r\n                    <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\r\n                        {/* Sidebar */}\r\n                        {/* <SideDrawer\r\n                            selectedScreen={selectedScreen} /> */}\r\n\r\n                        {/* Main Content */}\r\n                        {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n                        {/* Main Content Content */}\r\n\r\n\r\n                        {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n                        <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\r\n                            <View style={{ flex: 1, margin: 10, }}>\r\n\r\n                                <View style={{\r\n                                    borderBottomWidth: 1,\r\n                                    borderColor: '#DADDE1',\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    height: 60,\r\n                                    borderTopLeftRadius: 5,\r\n                                    borderTopRightRadius: 5,\r\n                                }}>\r\n                                    {/* Chat Header */}\r\n                                    <View style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'row',\r\n                                    }}>\r\n                                        <View style={{\r\n                                            flex: 1,\r\n                                            flexDirection: 'row',\r\n                                        }}>\r\n                                            <ScrollView scrollEnabled horizontal>\r\n\r\n\r\n                                                <HeaderButton\r\n                                                    key={'All messages'}\r\n                                                    title={'All messages'}\r\n                                                    onPress={() => handlePress('All messages', 0)}\r\n                                                    isActive={activeButton === 'All messages'}\r\n                                                    headerCount={\r\n                                                        unreadCount > 0 ?\r\n                                                            (<View style={{\r\n                                                                backgroundColor: '#FF0000',\r\n                                                                borderRadius: 100, // Half of width and height\r\n                                                                width: 20,\r\n                                                                height: 20, // Same as width for a perfect circle\r\n                                                                marginLeft: 10,\r\n                                                                justifyContent: 'center', // Center children vertically\r\n                                                                alignItems: 'center', // Center children horizontally\r\n                                                            }}>\r\n                                                                <Text style={{\r\n                                                                    color: 'white',\r\n                                                                    fontWeight: 700,\r\n                                                                    fontSize: 14,\r\n                                                                }}>{unreadCount > 9 ? `9+` : unreadCount}</Text>\r\n                                                            </View>) : (<></>)}\r\n                                                />\r\n\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Negotiation'}\r\n                                                    title={'Negotiation'}\r\n                                                    onPress={() => handlePress('Negotiation', 1)}\r\n                                                    isActive={activeButton === 'Negotiation'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Issued Proforma Invoice'}\r\n                                                    title={'Issued Proforma Invoice'}\r\n                                                    onPress={() => handlePress('Issued Proforma Invoice', 2)}\r\n                                                    isActive={activeButton === 'Issued Proforma Invoice'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Order Item'}\r\n                                                    title={'Order Item'}\r\n                                                    onPress={() => handlePress('Order Item', 3)}\r\n                                                    isActive={activeButton === 'Order Item'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Payment Confirmed'}\r\n                                                    title={'Payment Confirmed'}\r\n                                                    onPress={() => handlePress('Payment Confirmed', 4)}\r\n                                                    isActive={activeButton === 'Payment Confirmed'}\r\n                                                />\r\n\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Shipping Schedule'}\r\n                                                    title={'Shipping Schedule'}\r\n                                                    onPress={() => handlePress('Shipping Schedule', 5)}\r\n                                                    isActive={activeButton === 'Shipping Schedule'}\r\n                                                />\r\n\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Documents'}\r\n                                                    title={'Documents'}\r\n                                                    onPress={() => handlePress('Documents', 6)}\r\n                                                    isActive={activeButton === 'Documents'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Vehicle Received'}\r\n                                                    title={'Vehicle Received'}\r\n                                                    onPress={() => handlePress('Vehicle Received', 7)}\r\n                                                    isActive={activeButton === 'Vehicle Received'}\r\n                                                />\r\n                                            </ScrollView>\r\n                                        </View>\r\n\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                    {/* Chat Body */}\r\n\r\n                                    <View>\r\n\r\n                                        <View style={{ flex: 1, maxWidth: 380, minWidth: 380, borderRightWidth: 1, borderColor: '#DADDE1', maxHeight: 100, minHeight: 100, backgroundColor: 'white', }}>\r\n                                            {/* Chat Search */}\r\n                                            <View style={{ flex: 1, paddingHorizontal: 10 }}>\r\n                                                <SearchChat lastVisible={lastVisible} setLastVisible={setLastVisible} unreadButtonValue={unreadButtonValue} activeButtonValue={activeButtonValue} />\r\n                                                {/* <Pressable\r\n                                                variant=\"ghost\"\r\n                                                style={{\r\n                                                    padding: 3,\r\n                                                    width: 100,\r\n                                                    flexDirection: 'row', // Align items in a row\r\n                                                    alignItems: 'center', // Center items vertically\r\n                                                    borderRadius: 5,\r\n                                                }}\r\n                                                backgroundColor='#ECEDF0'\r\n                                                _hover={{ backgroundColor: '#d7d7d9' }}\r\n                                            >\r\n                                                <MaterialIcons name=\"mark-email-unread\" color=\"#1C2B33\" size={20} />\r\n                                                <Text style={{ color: '#1C2B33', marginLeft: 5 }}>Unreplied</Text>\r\n                                            </Pressable> */}\r\n                                                <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                                    <FilterButton\r\n                                                        key={'Unread'}\r\n                                                        title={'Unread '}\r\n                                                        onPress={() => handleUnreadPress('Unread')}\r\n                                                        isActive={activeFilterButton === 'Unread'}\r\n                                                        iconActive={<MaterialIcons name=\"mark-email-unread\" color=\"#0A78BE\" size={16} />}\r\n                                                        iconNotActive={<MaterialIcons name=\"mark-email-unread\" color=\"#1C2B33\" size={16} />}\r\n                                                    />\r\n\r\n                                                    <FilterButton\r\n                                                        key={'Read'}\r\n                                                        title={'Read '}\r\n                                                        onPress={() => handleReadPress('Read')}\r\n                                                        isActive={activeFilterButton === 'Read'}\r\n                                                        iconActive={<MaterialIcons name=\"mark-email-read\" color=\"#0A78BE\" size={16} />}\r\n                                                        iconNotActive={<MaterialIcons name=\"mark-email-read\" color=\"#1C2B33\" size={16} />}\r\n                                                    />\r\n\r\n                                                </View>\r\n\r\n                                            </View>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, maxWidth: 380, minWidth: 380, borderRightWidth: 1, borderColor: '#DADDE1', backgroundColor: 'white', borderBottomLeftRadius: 5, }}>\r\n                                            {/* Chat List */}\r\n                                            <ChatList unreadButtonValue={unreadButtonValue} activeButtonValue={activeButtonValue} />\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    {chatMessageBoxLoading ? (\r\n                                        <View style={{ flex: 1, backgroundColor: 'white', justifyContent: 'center', alignItems: 'center', }}>\r\n                                            <Spinner\r\n                                                animating\r\n                                                size=\"lg\"\r\n                                                color={'#7B9CFF'}\r\n                                            />\r\n                                        </View>) : (\r\n                                        <View style={{ flex: 1, }}>\r\n\r\n                                            <View style={{ flex: 1, minHeight: 90, maxHeight: screenWidth < 1281 ? 130 : 125, borderBottomWidth: 1, borderColor: '#DADDE1', backgroundColor: 'white', justifyContent: 'center', }}>\r\n                                                {/* Chat Message Header */}\r\n                                                <ScrollView scrollEnabled horizontal>\r\n                                                    {chatMessagesData.length < 1 ? null : (<ChatMessageHeader />)}\r\n                                                </ScrollView>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, borderColor: '#DADDE1', backgroundColor: 'white', borderBottomRightRadius: 5, paddingBottom: 5, }}>\r\n\r\n                                                <View style={{ flex: 1 }}>\r\n                                                    {/* Chat Message Box */}\r\n                                                    <ChatMessageBox activeButtonValue={activeButtonValue} userEmail={email} />\r\n                                                    <DocumentPreviewModal />\r\n                                                </View>\r\n\r\n                                                <View style={{ maxHeight: 180, justifyContent: 'flex-end', alignItems: 'center' }}>\r\n                                                    {/* Chat Input Text */}\r\n                                                    {chatMessagesData.length < 1 ? null : (<ChatInputText />)}\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                    )}\r\n\r\n\r\n\r\n\r\n                                </View>\r\n\r\n\r\n                            </View>\r\n                            {/* <SuccessModal /> */}\r\n\r\n                        </View>\r\n\r\n\r\n                        {/* </Box> */}\r\n\r\n                        {/* </Box> */}\r\n                    </View>\r\n\r\n                </View>\r\n                <LoadingModal />\r\n            </NativeBaseProvider>\r\n\r\n\r\n        </>\r\n    );\r\n}"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Dimensions","get","width","globalLastVisible","globalMessagesLastVisible","selectedScreen","globalSearchText","globalCustomerId","globalImageUrl","globalCustomerFirstName","globalCustomerLastName","globalAdditionalPriceArray","globalMessageTemplateSelectedTitle","formattedIssuingDate","projectControlAuth","currentUser","email","formattedDueDate","transactionModalTitle","transactionModalContentValue","ip","ipCountry","globalInvoiceVariable","carData","cfs","placeOfDelivery","departureCountry","departurePort","salesPerson","discharge","port","country","consignee","sameAsBuyer","name","address","contactNumber","fax","notifyParty","sameAsConsignee","paymentDetails","incoterms","inspectionIsChecked","inspectionName","warrantyIsCheck","warrantyAmount","fobPrice","freightPrice","insurancePrice","inspectionPrice","totalAmount","additionalName","additionalPrice","bankInformations","dueDate","issuingDate","bankAccount","paymentTerms","salesAgreement","globalSelectedPDFUrl","globalSelectedFileType","firestore","getFirestore","getEmailOfCurrentUser","user","TimelineStatus","_ref","data","selectedChatData","useSelector","state","findIndex","item","stepIndicator","value","_jsx","View","style","flexDirection","alignItems","paddingTop","children","index","_jsxs","Tooltip","label","title","bgColor","_text","color","height","borderRadius","backgroundColor","justifyContent","FastImage","source","uri","require","priority","normal","tintColor","alignSelf","resizeMode","stretch","length","statusData","LoadingModal","loadingModalVisible","position","top","bottom","left","right","flex","display","Spinner","size","Text","HeaderButton","_ref2","onPress","isActive","headerCount","activeStyle","screenWidth","_useState","useState","_useState2","_slicedToArray","isHovered","setIsHovered","Pressable","onHoverIn","onHoverOut","focusable","_objectSpread","padding","marginVertical","borderWidth","borderColor","marginLeft","fontSize","fontWeight","textAlign","FilterButton","_ref3","iconActive","iconNotActive","_useState3","_useState4","variant","margin","SkeletonChatListLayout","_Fragment","marginRight","Array","from","_","subIndex","marginBottom","DeleteMessageTemplateYesNo","_ref4","handleDeleteMessageTemplateClose","deleteMessageTemplateVisible","selectedTitle","_useState5","_useState6","isDeleteLoading","setIsDeleteLoading","handleClose","deleteMessageTemplate","_ref5","_asyncToGenerator","titleToDelete","documentRef","doc","projectControlFirestore","docSnap","getDoc","exists","updatedTemplates","messageTemplate","filter","template","updateDoc","console","log","error","_x","apply","arguments","Modal","isOpen","onClose","Content","CloseButton","Header","Body","Footer","Button","Group","space","colorScheme","isLoading","MessageTemplateItem","_ref6","setOriginalTitle","titleInputRef","addVisible","valueInputRef","setAddVisible","textInputRef","setPopoverOpen","_useState7","_useState8","isTemplateItemHovered","setIsTemplateItemHovered","_useState9","_useState10","isTemplateMenuHovered","setIsTemplateMenuHovered","_useState11","_useState12","isTemplateEditHovered","setIsTemplateEditHovered","_useState13","_useState14","isTemplateDeleteHovered","setIsTemplateDeleteHovered","_useState15","_useState16","templateMenuOpen","setTemplateMenuOpen","_useState17","_useState18","_useState19","_useState20","setIsAddVisible","dispatch","useDispatch","current","numberOfLines","ellipsizeMode","Popover","trigger","triggerProps","Entypo","onEditPress","setDeleteMessageTemplateVisible","MessageTemplate","_ref7","_useState21","_useState22","isTemplateHovered","setIsTemplateHovered","_useState23","_useState24","isAddHovered","setIsAddHovered","_useState25","_useState26","popoverOpen","_useState27","_useState28","searchText","setSearchText","_useState29","_useState30","filteredData","setFilteredData","_useState31","_useState32","_useState33","_useState34","isCancelHovered","setIsCancelHovered","_useState35","_useState36","isSaveHovered","setIsSaveHovered","_useState37","_useState38","originalTitle","_useState39","_useState40","saveLoading","setSaveLoading","_useState41","_useState42","templateData","setTemplateData","searchInputRef","useRef","saveMessageTemplate","_ref8","_titleInputRef$curren","_valueInputRef$curren","messageTemplates","newTitle","newValue","push","setDoc","merge","handleCancelPressed","clear","useEffect","docRef","unsubscribe","onSnapshot","arrayFieldData","sort","a","b","titleA","toUpperCase","titleB","initialFocusRef","finalFocusRef","placement","_ref10","opacity","pressed","Ionicons","w","Arrow","TextInput","ref","placeholder","placeholderTextColor","underlineColorAndroid","outlineStyle","multiline","marginHorizontal","animating","textDecorationLine","keyboardType","onChangeText","text","filtered","toLowerCase","includes","FlatList","borderBottomLeftRadius","renderItem","_ref9","keyExtractor","toString","FileDisplay","_ref11","file","onRemove","type","MaterialIcons","MaterialCommunityIcons","high","cover","ChatInputText","_useState43","activeChatId","_useState44","isSendHovered","setIsSendHovered","_useState45","_useState46","selectedFile","setSelectedFile","_useState47","_useState48","selectedFilePreview","setSelectedFilePreview","_useState49","_useState50","selectedImage","setSelectedImage","_useState51","_useState52","imageUri","setImageUri","_useState53","_useState54","fileUri","setFileUri","_useState55","_useState56","fileName","setFileName","_useState57","_useState58","isSendImageHovered","setIsSendImageHovered","_useState59","_useState60","isSendAttachmentHovered","setIsSendAttachmentHovered","_useState61","_useState62","sendIsLoading","setSendIsLoading","removeImage","removeFile","selectFile","_ref12","maxFileSize","Platform","OS","Promise","reject","input","document","createElement","accept","onchange","files","alert","reader","FileReader","onload","target","result","focus","onerror","readAsDataURL","click","launchImageLibrary","mediaType","response","didCancel","errorCode","errorMessage","asset","assets","startsWith","fileSize","selectedImageUri","selectImage","_ref13","dataUrl","addFileMessage","_ref14","_textInputRef$current","datetime","axios","formattedTime","moment","format","formattedTimeForFile","inputValue","storage","getStorage","projectExtensionFirebase","fileUrl","fileRef","uploadResult","uploadBytes","getDownloadURL","addDoc","collection","projectExtensionFirestore","trim","sender","timestamp","url","lastMessageSender","lastMessage","lastMessageDate","customerRead","read","readBy","addImageMessage","_ref15","_textInputRef$current2","imageUrl","resizedImage","event","img","Image","src","canvas","ctx","getContext","drawImage","toBlob","blob","File","lastModified","Date","now","imageRef","addMessage","_ref16","_textInputRef$current3","handleSendMessage","overflow","marginTop","onKeyPress","nativeEvent","key","shiftKey","preventDefault","_ref17","_ref18","_ref19","ChatListItem","_ref20","messageUnread","formattedDate","_useState63","chatListData","_useState64","setImageUrl","_useState65","_useState66","_useState67","_useState68","textFirst","setTextFirst","_useState69","_useState70","textLast","setTextLast","_useState71","_useState72","isUnreadHovered","setIsUnreadHovered","_useState73","_useState74","_useState75","_useState76","_useState77","_useState78","customerData","setCustomerData","carName","vehicle","updateChatToUnread","_ref21","setActiveChatId","setChatMessagesData","setSelectedChatData","folderName","stockID","carId","then","catch","docId","participants","customer","loadingCondition","undefined","chatStepIconOn","chatStepIconOff","borderLeftColor","borderRightColor","borderLeftWidth","borderRightWidth","setSelectedCustomerData","invoiceNumber","openDelay","ChatList","_ref22","unreadButtonValue","activeButtonValue","chatListLastVisible","loadMoreLoading","noMoreData","updateChatToRead","_ref23","arrayUnion","setChatMessageBoxLoading","messagesRef","messagesQuery","query","orderBy","limit","unsubscribeDoc","docSnapshot","dataWithId","invoiceDocRef","unsubscribeInvoice","invoiceDocSnapshot","invoiceDataWithId","setInvoiceData","unsubscribeMessages","querySnapshot","messages","forEach","docs","fetchChatMessages","handleChatPress","_ref24","customerId","chatId","_x2","_x3","_ref25","currentDate","formattedTimestamp","replace","givenDate","currentFormattedDate","getFullYear","getMonth","getDate","getTime","startOfWeek","setDate","getDay","setHours","toLocaleDateString","weekday","month","day","year","formatDate","initialNumToRender","maxToRenderPerBatch","windowSize","onEndReachedThreshold","removeClippedSubviews","ListFooterComponent","paddingVertical","borderTopWidth","onEndReached","nextQuery","setLoadMoreLoading","setTimeout","setNoMoreData","where","startAfter","snapshot","empty","chatsData","setChatListData","concat","_toConsumableArray","SearchChat","_ref26","lastVisible","setLastVisible","_useState79","_useState80","_useState81","_useState82","clearVisible","setClearVisible","searchData","_ref28","_ref27","_searchInputRef$curre","q","_objectDestructuringEmpty","searchValue","setLoadingModalVisible","_x4","setChatListSearchText","onSubmitEditing","_searchInputRef$curre2","_ref29","hovered","ModalAddBank","_useState83","_useState84","modalAddBankVisible","setModalAddBankVisible","_useState85","_useState86","setCancelHovered","_useState87","_useState88","setAddHovered","handleModalAddBankClose","bankNameRef","branchNameRef","swiftcodeRef","addressRef","accountHolderRef","accountNumberRef","addBankAccount","_ref30","_bankNameRef$current","_branchNameRef$curren","_swiftcodeRef$current","_addressRef$current","_accountHolderRef$cur","_accountNumberRef$cur","bankNameValue","elementToAdd","bankName","branchName","swiftCode","accountHolder","accountNumberValue","_defineProperty","FontAwesome","useRNModal","BankInformation","invoiceData","_useState89","_useState90","selectedDueDate","setSelectedDueDate","_useState91","_useState92","bankAccountsData","setBankAccountsData","_useState93","_useState94","selectedBank","setSelectedBank","paymentTermsRef","_paymentTermsRef$curr","date","dayOfWeek","adjustedDate","toISOString","split","bankAccounts","entries","_ref31","_ref32","subscribeToBankAccounts","_ref33","selectedDate","setSelectedDate","_useState95","_useState96","modalCalendarVisible","setModalCalendarVisible","handleModalCalendarOpen","handleModalCalendarClose","onFocus","Calendar","onDayPress","useCallback","dateString","markedDates","selected","disableTouchEvent","selectedDotColor","renderArrow","direction","enableSwipeMonths","initialDate","showSixWeeks","Select","selectedValue","onValueChange","selectedBankName","selectedBankObj","accessibilityLabel","_selectedItem","bg","endIcon","CheckIcon","paddingLeft","Item","defaultValue","PaymentDetails","fobPriceInput","freightInput","inspectionInput","insuranceInput","_useState97","_useState98","totalAmountCalculated","setTotalAmountCalculated","_useState99","insurance","_useState100","selectedIncoterms","setSelectedIncoterms","_useState101","inspection","_useState102","setInspectionIsChecked","_useState103","_useState104","_useState105","warranty","_useState106","warrantyIsChecked","additionalNameRef","warrantyPrice","additionalPriceRef","safelyParseNumber","number","Number","isNaN","calculateTotalAmount","_fobPriceInput$curren","_freightInput$current","_inspectionInput$curr","_insuranceInput$curre","freight","additionalPricesTotal","reduce","sum","total","Math","round","toLocaleString","_fobPriceInput$curren2","_freightInput$current2","_insuranceInput$curre2","join","freightCalculation","m3","dimensionCubicMeters","toFixed","fobPriceDollars","jpyToUsd","currency","parseFloat","usdToJpy","Checkbox","isChecked","onChange","filteredText","lines","filteredLines","line","filteredLine","parts","borderBottomWidth","SelectPortOfDischarge","_useState107","_useState108","countriesDischarge","_useState109","_useState110","portsData","setPortsData","_useState111","_useState112","nearestPorts","setNearestPorts","_useState113","_useState114","selectedPortCountry","setSelectedPortCountry","_useState115","_useState116","selectedCountry","_useState117","_useState118","selectedPort","setSelectedPort","fetchPorts","_ref35","sortedPorts","portName","sortOrder","fetchPortsData","_ref36","selectedCountryData","find","portData","SelectSalesPerson","_useState119","sales","_useState120","selectedSales","setSelectedSales","salesData","SelectPortOfDeparture","_useState121","_useState122","NotifyPartyInput","_ref37","accountData","setAccountData","_useState123","_useState124","setIsChecked","notifyPartyName","notifyPartyAddress","notifyPartyCity","notifyPartyCountry","notifyPartyContactNumber","notifyPartyFax","notifyPartyEmail","_notifyPartyName$curr","_notifyPartyAddress$c","_notifyPartyCity$curr","_notifyPartyCountry$c","_notifyPartyContactNu","_notifyPartyFax$curre","_notifyPartyEmail$cur","city","disabled","ConsigneeInput","_useState125","_useState126","_useState127","_useState128","consigneeName","consigneeAddress","consigneeCity","consigneeCountry","consigneeContactNumber","consigneeFax","consigneeEmail","fetchAccountData","_ref38","textStreet","textZip","textPhoneNumber","textEmail","ConfirmPaymentModalContent","selectedCustomerData","_useState129","_useState130","historyModalVisible","setHistoryModalVisible","_useState131","_useState132","isConfirmLoading","setIsConfirmLoading","totalAmountString","totalAmountNumber","inputAmountRef","fullPaymentMessage","_ref40","messageType","overBalanceMessage","_ref41","amount","_x5","paymentMessage","_ref42","transactionDate","_x6","_x7","confirmPayment","_ref43","amountNeeded","totalValue","docRefCustomer","newPayments","newPaymentsAccount","vehicleRef","referenceNumber","vehicleName","inputAmount","numericInputAmount","formattedInputAmount","delay","ms","overBalance","increment","payments","paymentsHistory","setTransactionModalVisible","payment","displayedAmount","fontWefight","Progress","shadow","max","_filledTrack","underline","selectable","_ref44","handleHistoryModalClose","sortedPayments","dateA","ScrollView","paddingHorizontal","maxHeight","borderBottomColor","paddingBottom","italic","IssueProformaInvoiceModalContent","_useState133","_useState134","isConfirmHovered","_useState135","_useState136","cfsInputRef","placeOfDeliveryInputRef","secretKey","invoiceMessage","_ref45","confirmInvoice","_ref46","yearSuffix","slice","collectionRef","getDocs","maxNumber","docName","parseInt","substring","docRefChatId","hashedData","hash","HmacSHA256","enc","Hex","stringify","createHmacSha256Hash","updateDocRef","cryptoNumber","keywords","_cfsInputRef$current","_placeOfDeliveryInput","ProfitCalculator","_useState137","_useState138","totalSCCAmount","setTotalSCCAmount","_useState139","_useState140","formattedTotalSCCAmount","setFormattedTotalSCCAmount","_useState141","_useState142","modalVisible","setModalVisible","_useState143","_useState144","_useState145","_useState146","totalProfitAmountDollars","setTotalProfitAmountDollars","inputPriceRef","_useState147","_useState148","_useState149","_useState150","_useState151","_useState152","lastFetchedPort","setLastFetchedPort","_ref47","currentPort","freightOrigPrice","_data$currentPort","kobePrice","nagoyaPrice","yokohamaPrice","kyushuPrice","fee","purchasedPrice","formattedPurchasedPrice","minimumFractionDigits","maximumFractionDigits","auctionFee","formattedAuctionFee","transportFee","formattedTransportFee","shippingAgentFee","formattedShippingAgentFee","cubicMeter","costPerCubicMeter","formattedCostPerCubicMeter","totalCubicMeterCostDollars","formattedTotalCubicMeterCostDollars","totalCubicMeterCostYen","formattedTotalCubicMeterCostYen","realTotalPriceYen","formattedRealTotalPriceYen","realTotalPriceDollars","formattedRealTotalPriceDollars","totalPriceCalculation","defaultInputPrice","_inputPriceRef$curren","inputPrice","totalAmountDollars","supplyChainsCostsData","expenseData","accumulator","currentValue","formattedTotalAmount","lineHeight","PreviewInvoice","previewInvoiceVisible","_useState153","_useState154","isPreviewHovered","setIsPreviewHovered","invoiceRef","_useState155","_useState156","_useState157","_useState158","capturedImageUri","setCapturedImageUri","_useState159","_useState160","vehicleImageUri","setVehicleImageUri","_useState161","_useState162","setFeaturesTrueCount","_useState163","_useState164","rerenderState","setRerenderState","countTrueValuesInCarData","count","field","values","captureImageAsync","_ref48","captureRef","quality","trueCount","convertImageToBase64","_ref49","fetch","ok","status","onloadend","message","_x8","base64String","_ref50","_ref51","_x9","captureImage","_ref52","createPDF","_ref53","element","imageData","html2canvas","scale","toDataURL","pdf","jsPDF","orientation","unit","imgProps","getImageProperties","pdfHeightFit","addImage","imageCompression","imageQuality","save","handleCaptureAndCreatePDF","_ref54","issuingDateString","dueDateString","issuingDateObject","dueDateObject","options","setPreviewInvoiceVisible","window","open","write","maxWidth","zIndex","NativeImage","QRCode","useGrouping","price","chassisNumber","exteriorColor","engineDisplacement","mileage","fuel","transmission","ExtendDueDateButton","_useState165","_useState166","_useState167","_useState168","setIsConfirmHovered","_useState169","_useState170","_useState171","_useState172","_useState173","_useState174","_useState175","_useState176","handleModalClose","handleConfirm","_ref55","confirmExtendDueDate","extendDueDateMessage","_ref56","_ref57","_ref58","_useState177","_useState178","TransactionModal","transactionModalVisible","TransactionButton","_ref60","buttonValue","transactionValue","colorHoverIn","colorHoverOut","_useState179","_useState180","CustomerProfileModal","_useState181","_useState182","customerModalVisible","setCustomerModalVisible","background","Hyperlink","linkDefault","linkStyle","ChatMessageHeader","freightPriceYen","paddingRight","modelCode","bold","FontAwesome5","ReadByListModal","_ref61","userEmail","handleReadByListModalClose","readByListModalVisible","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","ImagePreviewModal","_ref62","isVisible","contain","HoverablePressable","_ref63","_useState183","printComponent","_useState184","isHoveredDownload","setIsHoveredDownload","_useState185","_useState186","Linking","openURL","onMouseEnter","onMouseLeave","DocumentPreviewModal","selectedFileUrl","pdfViewerModalVisible","_useState187","_useState188","iframeKey","setIframeKey","_useState189","_useState190","setLoading","handleIframeLoad","timeout","setIsLoading","prevKey","setSelectedFileUrl","clearTimeout","setPdfViewerModalVisible","printWindow","encodeURIComponent","print","onLoad","ChatMessageBox","_ref65","chatMessagesData","loadMoreMessagesLoading","noMoreMessagesData","_useState191","_useState192","isEyeHovered","setIsEyeHovered","flatListRef","_useState193","_useState194","hoveredImageIndex","setHoveredImageIndex","_useState195","_useState196","selectedImageIndex","setSelectedImageIndex","_useState197","_useState198","isPreviewVisible","setIsPreviewVisible","handleImageMessageMouseLeave","_useState199","_useState200","handleReadByListModalOpen","setReadByListModalVisible","animatedValue","Animated","Value","loop","sequence","timing","toValue","duration","useNativeDriver","start","interpolate","inputRange","outputRange","handleLoadMoreMessages","_ref66","setLoadMoreMessagesLoading","setNoMoreMessagesData","_ref67","handlePreviewInvoiceModalOpen","match","hours","getHours","formattedHours","amPm","substr","getMinutes","padStart","extractUsernameFromEmail","_email$split","renderItemText","isGlobalCustomerSender","urlPattern","RegExp","segments","segment","segmentWithBreaks","str","n","insertBreaks","isUrlForText","canOpenURL","supported","flexShrink","flexWrap","getFileIcon","iconSize","lowerFileName","endsWith","test","_ref68","isLastMessage","handleImageMessageMouseEnter","openPreview","StyleSheet","absoluteFillObject","inverted","ChatMessages","_useState201","_useState202","setEmail","navigation","useNavigation","chatMessageBoxLoading","chatListSearchText","loginName","_useState203","_useState204","setName","_useState205","_useState206","activeButton","setActiveButton","_useState207","_useState208","setActiveButtonValue","_useState209","_useState210","activeFilterButton","setActiveFilterButton","_useState211","_useState212","setUnreadButtonValue","_useState213","_useState214","readButtonValue","setReadButtonValue","_useState215","_useState216","_useState217","_useState218","unreadCount","setUnreadCount","fetchIpAndCountry","_ref69","fetchedIp","fetchedIpCountry","country_name","unrepliedQuery","handlePress","buttonTitle","buttonTitleValue","queryRef","buildQuery","onAuthStateChanged","navigate","handleDocumentChange","active","signOut","_projectControlAuth$c","userId","userRef","subscribeToFieldChange","currentUserEmail","getFieldValueByEmail","listenForNameChange","documentId","_ref70","accountDocRef","_x10","styles","useBreakpointValue","create","container","image","NativeBaseProvider","h","Box","px","SideDrawer","_ref71","handleSignOut","_useState219","_useState220","showNamePopover","setShowNamePopover","showPopover","Flex","trapFocus","_hover","leftIcon","borderTopLeftRadius","borderTopRightRadius","scrollEnabled","horizontal","minWidth","minHeight","prevState","borderBottomRightRadius"],"sourceRoot":""}